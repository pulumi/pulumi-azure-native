// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20191001preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Defines the properties for automatic resolution.
type AutomaticResolutionPropertiesInvokeResponse struct {
	// Gets the MoveResource ARM ID of
	// the dependent resource if the resolution type is Automatic.
	MoveResourceId *string `pulumi:"moveResourceId"`
}

// AutomaticResolutionPropertiesInvokeResponseInput is an input type that accepts AutomaticResolutionPropertiesInvokeResponseArgs and AutomaticResolutionPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `AutomaticResolutionPropertiesInvokeResponseInput` via:
//
//          AutomaticResolutionPropertiesInvokeResponseArgs{...}
type AutomaticResolutionPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToAutomaticResolutionPropertiesInvokeResponseOutput() AutomaticResolutionPropertiesInvokeResponseOutput
	ToAutomaticResolutionPropertiesInvokeResponseOutputWithContext(context.Context) AutomaticResolutionPropertiesInvokeResponseOutput
}

// Defines the properties for automatic resolution.
type AutomaticResolutionPropertiesInvokeResponseArgs struct {
	// Gets the MoveResource ARM ID of
	// the dependent resource if the resolution type is Automatic.
	MoveResourceId pulumi.StringPtrInput `pulumi:"moveResourceId"`
}

func (AutomaticResolutionPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomaticResolutionPropertiesInvokeResponse)(nil)).Elem()
}

func (i AutomaticResolutionPropertiesInvokeResponseArgs) ToAutomaticResolutionPropertiesInvokeResponseOutput() AutomaticResolutionPropertiesInvokeResponseOutput {
	return i.ToAutomaticResolutionPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i AutomaticResolutionPropertiesInvokeResponseArgs) ToAutomaticResolutionPropertiesInvokeResponseOutputWithContext(ctx context.Context) AutomaticResolutionPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomaticResolutionPropertiesInvokeResponseOutput)
}

func (i AutomaticResolutionPropertiesInvokeResponseArgs) ToAutomaticResolutionPropertiesInvokeResponsePtrOutput() AutomaticResolutionPropertiesInvokeResponsePtrOutput {
	return i.ToAutomaticResolutionPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i AutomaticResolutionPropertiesInvokeResponseArgs) ToAutomaticResolutionPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) AutomaticResolutionPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomaticResolutionPropertiesInvokeResponseOutput).ToAutomaticResolutionPropertiesInvokeResponsePtrOutputWithContext(ctx)
}

// AutomaticResolutionPropertiesInvokeResponsePtrInput is an input type that accepts AutomaticResolutionPropertiesInvokeResponseArgs, AutomaticResolutionPropertiesInvokeResponsePtr and AutomaticResolutionPropertiesInvokeResponsePtrOutput values.
// You can construct a concrete instance of `AutomaticResolutionPropertiesInvokeResponsePtrInput` via:
//
//          AutomaticResolutionPropertiesInvokeResponseArgs{...}
//
//  or:
//
//          nil
type AutomaticResolutionPropertiesInvokeResponsePtrInput interface {
	pulumi.Input

	ToAutomaticResolutionPropertiesInvokeResponsePtrOutput() AutomaticResolutionPropertiesInvokeResponsePtrOutput
	ToAutomaticResolutionPropertiesInvokeResponsePtrOutputWithContext(context.Context) AutomaticResolutionPropertiesInvokeResponsePtrOutput
}

type automaticResolutionPropertiesInvokeResponsePtrType AutomaticResolutionPropertiesInvokeResponseArgs

func AutomaticResolutionPropertiesInvokeResponsePtr(v *AutomaticResolutionPropertiesInvokeResponseArgs) AutomaticResolutionPropertiesInvokeResponsePtrInput {
	return (*automaticResolutionPropertiesInvokeResponsePtrType)(v)
}

func (*automaticResolutionPropertiesInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomaticResolutionPropertiesInvokeResponse)(nil)).Elem()
}

func (i *automaticResolutionPropertiesInvokeResponsePtrType) ToAutomaticResolutionPropertiesInvokeResponsePtrOutput() AutomaticResolutionPropertiesInvokeResponsePtrOutput {
	return i.ToAutomaticResolutionPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *automaticResolutionPropertiesInvokeResponsePtrType) ToAutomaticResolutionPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) AutomaticResolutionPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomaticResolutionPropertiesInvokeResponsePtrOutput)
}

// Defines the properties for automatic resolution.
type AutomaticResolutionPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (AutomaticResolutionPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomaticResolutionPropertiesInvokeResponse)(nil)).Elem()
}

func (o AutomaticResolutionPropertiesInvokeResponseOutput) ToAutomaticResolutionPropertiesInvokeResponseOutput() AutomaticResolutionPropertiesInvokeResponseOutput {
	return o
}

func (o AutomaticResolutionPropertiesInvokeResponseOutput) ToAutomaticResolutionPropertiesInvokeResponseOutputWithContext(ctx context.Context) AutomaticResolutionPropertiesInvokeResponseOutput {
	return o
}

func (o AutomaticResolutionPropertiesInvokeResponseOutput) ToAutomaticResolutionPropertiesInvokeResponsePtrOutput() AutomaticResolutionPropertiesInvokeResponsePtrOutput {
	return o.ToAutomaticResolutionPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (o AutomaticResolutionPropertiesInvokeResponseOutput) ToAutomaticResolutionPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) AutomaticResolutionPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v AutomaticResolutionPropertiesInvokeResponse) *AutomaticResolutionPropertiesInvokeResponse {
		return &v
	}).(AutomaticResolutionPropertiesInvokeResponsePtrOutput)
}

// Gets the MoveResource ARM ID of
// the dependent resource if the resolution type is Automatic.
func (o AutomaticResolutionPropertiesInvokeResponseOutput) MoveResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomaticResolutionPropertiesInvokeResponse) *string { return v.MoveResourceId }).(pulumi.StringPtrOutput)
}

type AutomaticResolutionPropertiesInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (AutomaticResolutionPropertiesInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomaticResolutionPropertiesInvokeResponse)(nil)).Elem()
}

func (o AutomaticResolutionPropertiesInvokeResponsePtrOutput) ToAutomaticResolutionPropertiesInvokeResponsePtrOutput() AutomaticResolutionPropertiesInvokeResponsePtrOutput {
	return o
}

func (o AutomaticResolutionPropertiesInvokeResponsePtrOutput) ToAutomaticResolutionPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) AutomaticResolutionPropertiesInvokeResponsePtrOutput {
	return o
}

func (o AutomaticResolutionPropertiesInvokeResponsePtrOutput) Elem() AutomaticResolutionPropertiesInvokeResponseOutput {
	return o.ApplyT(func(v *AutomaticResolutionPropertiesInvokeResponse) AutomaticResolutionPropertiesInvokeResponse {
		return *v
	}).(AutomaticResolutionPropertiesInvokeResponseOutput)
}

// Gets the MoveResource ARM ID of
// the dependent resource if the resolution type is Automatic.
func (o AutomaticResolutionPropertiesInvokeResponsePtrOutput) MoveResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomaticResolutionPropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.MoveResourceId
	}).(pulumi.StringPtrOutput)
}

// Defines the properties for automatic resolution.
type AutomaticResolutionPropertiesResponse struct {
	// Gets the MoveResource ARM ID of
	// the dependent resource if the resolution type is Automatic.
	MoveResourceId *string `pulumi:"moveResourceId"`
}

// AutomaticResolutionPropertiesResponseInput is an input type that accepts AutomaticResolutionPropertiesResponseArgs and AutomaticResolutionPropertiesResponseOutput values.
// You can construct a concrete instance of `AutomaticResolutionPropertiesResponseInput` via:
//
//          AutomaticResolutionPropertiesResponseArgs{...}
type AutomaticResolutionPropertiesResponseInput interface {
	pulumi.Input

	ToAutomaticResolutionPropertiesResponseOutput() AutomaticResolutionPropertiesResponseOutput
	ToAutomaticResolutionPropertiesResponseOutputWithContext(context.Context) AutomaticResolutionPropertiesResponseOutput
}

// Defines the properties for automatic resolution.
type AutomaticResolutionPropertiesResponseArgs struct {
	// Gets the MoveResource ARM ID of
	// the dependent resource if the resolution type is Automatic.
	MoveResourceId pulumi.StringPtrInput `pulumi:"moveResourceId"`
}

func (AutomaticResolutionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomaticResolutionPropertiesResponse)(nil)).Elem()
}

func (i AutomaticResolutionPropertiesResponseArgs) ToAutomaticResolutionPropertiesResponseOutput() AutomaticResolutionPropertiesResponseOutput {
	return i.ToAutomaticResolutionPropertiesResponseOutputWithContext(context.Background())
}

func (i AutomaticResolutionPropertiesResponseArgs) ToAutomaticResolutionPropertiesResponseOutputWithContext(ctx context.Context) AutomaticResolutionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomaticResolutionPropertiesResponseOutput)
}

func (i AutomaticResolutionPropertiesResponseArgs) ToAutomaticResolutionPropertiesResponsePtrOutput() AutomaticResolutionPropertiesResponsePtrOutput {
	return i.ToAutomaticResolutionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AutomaticResolutionPropertiesResponseArgs) ToAutomaticResolutionPropertiesResponsePtrOutputWithContext(ctx context.Context) AutomaticResolutionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomaticResolutionPropertiesResponseOutput).ToAutomaticResolutionPropertiesResponsePtrOutputWithContext(ctx)
}

// AutomaticResolutionPropertiesResponsePtrInput is an input type that accepts AutomaticResolutionPropertiesResponseArgs, AutomaticResolutionPropertiesResponsePtr and AutomaticResolutionPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AutomaticResolutionPropertiesResponsePtrInput` via:
//
//          AutomaticResolutionPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AutomaticResolutionPropertiesResponsePtrInput interface {
	pulumi.Input

	ToAutomaticResolutionPropertiesResponsePtrOutput() AutomaticResolutionPropertiesResponsePtrOutput
	ToAutomaticResolutionPropertiesResponsePtrOutputWithContext(context.Context) AutomaticResolutionPropertiesResponsePtrOutput
}

type automaticResolutionPropertiesResponsePtrType AutomaticResolutionPropertiesResponseArgs

func AutomaticResolutionPropertiesResponsePtr(v *AutomaticResolutionPropertiesResponseArgs) AutomaticResolutionPropertiesResponsePtrInput {
	return (*automaticResolutionPropertiesResponsePtrType)(v)
}

func (*automaticResolutionPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomaticResolutionPropertiesResponse)(nil)).Elem()
}

func (i *automaticResolutionPropertiesResponsePtrType) ToAutomaticResolutionPropertiesResponsePtrOutput() AutomaticResolutionPropertiesResponsePtrOutput {
	return i.ToAutomaticResolutionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *automaticResolutionPropertiesResponsePtrType) ToAutomaticResolutionPropertiesResponsePtrOutputWithContext(ctx context.Context) AutomaticResolutionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomaticResolutionPropertiesResponsePtrOutput)
}

// Defines the properties for automatic resolution.
type AutomaticResolutionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AutomaticResolutionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomaticResolutionPropertiesResponse)(nil)).Elem()
}

func (o AutomaticResolutionPropertiesResponseOutput) ToAutomaticResolutionPropertiesResponseOutput() AutomaticResolutionPropertiesResponseOutput {
	return o
}

func (o AutomaticResolutionPropertiesResponseOutput) ToAutomaticResolutionPropertiesResponseOutputWithContext(ctx context.Context) AutomaticResolutionPropertiesResponseOutput {
	return o
}

func (o AutomaticResolutionPropertiesResponseOutput) ToAutomaticResolutionPropertiesResponsePtrOutput() AutomaticResolutionPropertiesResponsePtrOutput {
	return o.ToAutomaticResolutionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AutomaticResolutionPropertiesResponseOutput) ToAutomaticResolutionPropertiesResponsePtrOutputWithContext(ctx context.Context) AutomaticResolutionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AutomaticResolutionPropertiesResponse) *AutomaticResolutionPropertiesResponse {
		return &v
	}).(AutomaticResolutionPropertiesResponsePtrOutput)
}

// Gets the MoveResource ARM ID of
// the dependent resource if the resolution type is Automatic.
func (o AutomaticResolutionPropertiesResponseOutput) MoveResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomaticResolutionPropertiesResponse) *string { return v.MoveResourceId }).(pulumi.StringPtrOutput)
}

type AutomaticResolutionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AutomaticResolutionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomaticResolutionPropertiesResponse)(nil)).Elem()
}

func (o AutomaticResolutionPropertiesResponsePtrOutput) ToAutomaticResolutionPropertiesResponsePtrOutput() AutomaticResolutionPropertiesResponsePtrOutput {
	return o
}

func (o AutomaticResolutionPropertiesResponsePtrOutput) ToAutomaticResolutionPropertiesResponsePtrOutputWithContext(ctx context.Context) AutomaticResolutionPropertiesResponsePtrOutput {
	return o
}

func (o AutomaticResolutionPropertiesResponsePtrOutput) Elem() AutomaticResolutionPropertiesResponseOutput {
	return o.ApplyT(func(v *AutomaticResolutionPropertiesResponse) AutomaticResolutionPropertiesResponse { return *v }).(AutomaticResolutionPropertiesResponseOutput)
}

// Gets the MoveResource ARM ID of
// the dependent resource if the resolution type is Automatic.
func (o AutomaticResolutionPropertiesResponsePtrOutput) MoveResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomaticResolutionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.MoveResourceId
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the availability set resource settings.
type AvailabilitySetResourceSettings struct {
	// Gets or sets the target fault domain.
	FaultDomain *int `pulumi:"faultDomain"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Compute/availabilitySets'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets the target update domain.
	UpdateDomain *int `pulumi:"updateDomain"`
}

// AvailabilitySetResourceSettingsInput is an input type that accepts AvailabilitySetResourceSettingsArgs and AvailabilitySetResourceSettingsOutput values.
// You can construct a concrete instance of `AvailabilitySetResourceSettingsInput` via:
//
//          AvailabilitySetResourceSettingsArgs{...}
type AvailabilitySetResourceSettingsInput interface {
	pulumi.Input

	ToAvailabilitySetResourceSettingsOutput() AvailabilitySetResourceSettingsOutput
	ToAvailabilitySetResourceSettingsOutputWithContext(context.Context) AvailabilitySetResourceSettingsOutput
}

// Gets or sets the availability set resource settings.
type AvailabilitySetResourceSettingsArgs struct {
	// Gets or sets the target fault domain.
	FaultDomain pulumi.IntPtrInput `pulumi:"faultDomain"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Compute/availabilitySets'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Gets or sets the target update domain.
	UpdateDomain pulumi.IntPtrInput `pulumi:"updateDomain"`
}

func (AvailabilitySetResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilitySetResourceSettings)(nil)).Elem()
}

func (i AvailabilitySetResourceSettingsArgs) ToAvailabilitySetResourceSettingsOutput() AvailabilitySetResourceSettingsOutput {
	return i.ToAvailabilitySetResourceSettingsOutputWithContext(context.Background())
}

func (i AvailabilitySetResourceSettingsArgs) ToAvailabilitySetResourceSettingsOutputWithContext(ctx context.Context) AvailabilitySetResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilitySetResourceSettingsOutput)
}

// Gets or sets the availability set resource settings.
type AvailabilitySetResourceSettingsOutput struct{ *pulumi.OutputState }

func (AvailabilitySetResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilitySetResourceSettings)(nil)).Elem()
}

func (o AvailabilitySetResourceSettingsOutput) ToAvailabilitySetResourceSettingsOutput() AvailabilitySetResourceSettingsOutput {
	return o
}

func (o AvailabilitySetResourceSettingsOutput) ToAvailabilitySetResourceSettingsOutputWithContext(ctx context.Context) AvailabilitySetResourceSettingsOutput {
	return o
}

// Gets or sets the target fault domain.
func (o AvailabilitySetResourceSettingsOutput) FaultDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilitySetResourceSettings) *int { return v.FaultDomain }).(pulumi.IntPtrOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Compute/availabilitySets'.
func (o AvailabilitySetResourceSettingsOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilitySetResourceSettings) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o AvailabilitySetResourceSettingsOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilitySetResourceSettings) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Gets or sets the target update domain.
func (o AvailabilitySetResourceSettingsOutput) UpdateDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilitySetResourceSettings) *int { return v.UpdateDomain }).(pulumi.IntPtrOutput)
}

// Gets or sets the availability set resource settings.
type AvailabilitySetResourceSettingsInvokeResponse struct {
	// Gets or sets the target fault domain.
	FaultDomain *int `pulumi:"faultDomain"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Compute/availabilitySets'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets the target update domain.
	UpdateDomain *int `pulumi:"updateDomain"`
}

// AvailabilitySetResourceSettingsInvokeResponseInput is an input type that accepts AvailabilitySetResourceSettingsInvokeResponseArgs and AvailabilitySetResourceSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `AvailabilitySetResourceSettingsInvokeResponseInput` via:
//
//          AvailabilitySetResourceSettingsInvokeResponseArgs{...}
type AvailabilitySetResourceSettingsInvokeResponseInput interface {
	pulumi.Input

	ToAvailabilitySetResourceSettingsInvokeResponseOutput() AvailabilitySetResourceSettingsInvokeResponseOutput
	ToAvailabilitySetResourceSettingsInvokeResponseOutputWithContext(context.Context) AvailabilitySetResourceSettingsInvokeResponseOutput
}

// Gets or sets the availability set resource settings.
type AvailabilitySetResourceSettingsInvokeResponseArgs struct {
	// Gets or sets the target fault domain.
	FaultDomain pulumi.IntPtrInput `pulumi:"faultDomain"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Compute/availabilitySets'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Gets or sets the target update domain.
	UpdateDomain pulumi.IntPtrInput `pulumi:"updateDomain"`
}

func (AvailabilitySetResourceSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilitySetResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i AvailabilitySetResourceSettingsInvokeResponseArgs) ToAvailabilitySetResourceSettingsInvokeResponseOutput() AvailabilitySetResourceSettingsInvokeResponseOutput {
	return i.ToAvailabilitySetResourceSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i AvailabilitySetResourceSettingsInvokeResponseArgs) ToAvailabilitySetResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) AvailabilitySetResourceSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilitySetResourceSettingsInvokeResponseOutput)
}

// Gets or sets the availability set resource settings.
type AvailabilitySetResourceSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (AvailabilitySetResourceSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilitySetResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o AvailabilitySetResourceSettingsInvokeResponseOutput) ToAvailabilitySetResourceSettingsInvokeResponseOutput() AvailabilitySetResourceSettingsInvokeResponseOutput {
	return o
}

func (o AvailabilitySetResourceSettingsInvokeResponseOutput) ToAvailabilitySetResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) AvailabilitySetResourceSettingsInvokeResponseOutput {
	return o
}

// Gets or sets the target fault domain.
func (o AvailabilitySetResourceSettingsInvokeResponseOutput) FaultDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilitySetResourceSettingsInvokeResponse) *int { return v.FaultDomain }).(pulumi.IntPtrOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Compute/availabilitySets'.
func (o AvailabilitySetResourceSettingsInvokeResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilitySetResourceSettingsInvokeResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o AvailabilitySetResourceSettingsInvokeResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilitySetResourceSettingsInvokeResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Gets or sets the target update domain.
func (o AvailabilitySetResourceSettingsInvokeResponseOutput) UpdateDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilitySetResourceSettingsInvokeResponse) *int { return v.UpdateDomain }).(pulumi.IntPtrOutput)
}

// Gets or sets the availability set resource settings.
type AvailabilitySetResourceSettingsResponse struct {
	// Gets or sets the target fault domain.
	FaultDomain *int `pulumi:"faultDomain"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Compute/availabilitySets'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets the target update domain.
	UpdateDomain *int `pulumi:"updateDomain"`
}

// AvailabilitySetResourceSettingsResponseInput is an input type that accepts AvailabilitySetResourceSettingsResponseArgs and AvailabilitySetResourceSettingsResponseOutput values.
// You can construct a concrete instance of `AvailabilitySetResourceSettingsResponseInput` via:
//
//          AvailabilitySetResourceSettingsResponseArgs{...}
type AvailabilitySetResourceSettingsResponseInput interface {
	pulumi.Input

	ToAvailabilitySetResourceSettingsResponseOutput() AvailabilitySetResourceSettingsResponseOutput
	ToAvailabilitySetResourceSettingsResponseOutputWithContext(context.Context) AvailabilitySetResourceSettingsResponseOutput
}

// Gets or sets the availability set resource settings.
type AvailabilitySetResourceSettingsResponseArgs struct {
	// Gets or sets the target fault domain.
	FaultDomain pulumi.IntPtrInput `pulumi:"faultDomain"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Compute/availabilitySets'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Gets or sets the target update domain.
	UpdateDomain pulumi.IntPtrInput `pulumi:"updateDomain"`
}

func (AvailabilitySetResourceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilitySetResourceSettingsResponse)(nil)).Elem()
}

func (i AvailabilitySetResourceSettingsResponseArgs) ToAvailabilitySetResourceSettingsResponseOutput() AvailabilitySetResourceSettingsResponseOutput {
	return i.ToAvailabilitySetResourceSettingsResponseOutputWithContext(context.Background())
}

func (i AvailabilitySetResourceSettingsResponseArgs) ToAvailabilitySetResourceSettingsResponseOutputWithContext(ctx context.Context) AvailabilitySetResourceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilitySetResourceSettingsResponseOutput)
}

// Gets or sets the availability set resource settings.
type AvailabilitySetResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (AvailabilitySetResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilitySetResourceSettingsResponse)(nil)).Elem()
}

func (o AvailabilitySetResourceSettingsResponseOutput) ToAvailabilitySetResourceSettingsResponseOutput() AvailabilitySetResourceSettingsResponseOutput {
	return o
}

func (o AvailabilitySetResourceSettingsResponseOutput) ToAvailabilitySetResourceSettingsResponseOutputWithContext(ctx context.Context) AvailabilitySetResourceSettingsResponseOutput {
	return o
}

// Gets or sets the target fault domain.
func (o AvailabilitySetResourceSettingsResponseOutput) FaultDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilitySetResourceSettingsResponse) *int { return v.FaultDomain }).(pulumi.IntPtrOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Compute/availabilitySets'.
func (o AvailabilitySetResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilitySetResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o AvailabilitySetResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilitySetResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Gets or sets the target update domain.
func (o AvailabilitySetResourceSettingsResponseOutput) UpdateDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilitySetResourceSettingsResponse) *int { return v.UpdateDomain }).(pulumi.IntPtrOutput)
}

// Defines the disk encryption set resource settings.
type DiskEncryptionSetResourceSettings struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Compute/diskEncryptionSets'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// DiskEncryptionSetResourceSettingsInput is an input type that accepts DiskEncryptionSetResourceSettingsArgs and DiskEncryptionSetResourceSettingsOutput values.
// You can construct a concrete instance of `DiskEncryptionSetResourceSettingsInput` via:
//
//          DiskEncryptionSetResourceSettingsArgs{...}
type DiskEncryptionSetResourceSettingsInput interface {
	pulumi.Input

	ToDiskEncryptionSetResourceSettingsOutput() DiskEncryptionSetResourceSettingsOutput
	ToDiskEncryptionSetResourceSettingsOutputWithContext(context.Context) DiskEncryptionSetResourceSettingsOutput
}

// Defines the disk encryption set resource settings.
type DiskEncryptionSetResourceSettingsArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Compute/diskEncryptionSets'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (DiskEncryptionSetResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSetResourceSettings)(nil)).Elem()
}

func (i DiskEncryptionSetResourceSettingsArgs) ToDiskEncryptionSetResourceSettingsOutput() DiskEncryptionSetResourceSettingsOutput {
	return i.ToDiskEncryptionSetResourceSettingsOutputWithContext(context.Background())
}

func (i DiskEncryptionSetResourceSettingsArgs) ToDiskEncryptionSetResourceSettingsOutputWithContext(ctx context.Context) DiskEncryptionSetResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionSetResourceSettingsOutput)
}

// Defines the disk encryption set resource settings.
type DiskEncryptionSetResourceSettingsOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSetResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSetResourceSettings)(nil)).Elem()
}

func (o DiskEncryptionSetResourceSettingsOutput) ToDiskEncryptionSetResourceSettingsOutput() DiskEncryptionSetResourceSettingsOutput {
	return o
}

func (o DiskEncryptionSetResourceSettingsOutput) ToDiskEncryptionSetResourceSettingsOutputWithContext(ctx context.Context) DiskEncryptionSetResourceSettingsOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Compute/diskEncryptionSets'.
func (o DiskEncryptionSetResourceSettingsOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v DiskEncryptionSetResourceSettings) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o DiskEncryptionSetResourceSettingsOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v DiskEncryptionSetResourceSettings) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the disk encryption set resource settings.
type DiskEncryptionSetResourceSettingsInvokeResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Compute/diskEncryptionSets'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// DiskEncryptionSetResourceSettingsInvokeResponseInput is an input type that accepts DiskEncryptionSetResourceSettingsInvokeResponseArgs and DiskEncryptionSetResourceSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `DiskEncryptionSetResourceSettingsInvokeResponseInput` via:
//
//          DiskEncryptionSetResourceSettingsInvokeResponseArgs{...}
type DiskEncryptionSetResourceSettingsInvokeResponseInput interface {
	pulumi.Input

	ToDiskEncryptionSetResourceSettingsInvokeResponseOutput() DiskEncryptionSetResourceSettingsInvokeResponseOutput
	ToDiskEncryptionSetResourceSettingsInvokeResponseOutputWithContext(context.Context) DiskEncryptionSetResourceSettingsInvokeResponseOutput
}

// Defines the disk encryption set resource settings.
type DiskEncryptionSetResourceSettingsInvokeResponseArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Compute/diskEncryptionSets'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (DiskEncryptionSetResourceSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSetResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i DiskEncryptionSetResourceSettingsInvokeResponseArgs) ToDiskEncryptionSetResourceSettingsInvokeResponseOutput() DiskEncryptionSetResourceSettingsInvokeResponseOutput {
	return i.ToDiskEncryptionSetResourceSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i DiskEncryptionSetResourceSettingsInvokeResponseArgs) ToDiskEncryptionSetResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) DiskEncryptionSetResourceSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionSetResourceSettingsInvokeResponseOutput)
}

// Defines the disk encryption set resource settings.
type DiskEncryptionSetResourceSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSetResourceSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSetResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o DiskEncryptionSetResourceSettingsInvokeResponseOutput) ToDiskEncryptionSetResourceSettingsInvokeResponseOutput() DiskEncryptionSetResourceSettingsInvokeResponseOutput {
	return o
}

func (o DiskEncryptionSetResourceSettingsInvokeResponseOutput) ToDiskEncryptionSetResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) DiskEncryptionSetResourceSettingsInvokeResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Compute/diskEncryptionSets'.
func (o DiskEncryptionSetResourceSettingsInvokeResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v DiskEncryptionSetResourceSettingsInvokeResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o DiskEncryptionSetResourceSettingsInvokeResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v DiskEncryptionSetResourceSettingsInvokeResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the disk encryption set resource settings.
type DiskEncryptionSetResourceSettingsResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Compute/diskEncryptionSets'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// DiskEncryptionSetResourceSettingsResponseInput is an input type that accepts DiskEncryptionSetResourceSettingsResponseArgs and DiskEncryptionSetResourceSettingsResponseOutput values.
// You can construct a concrete instance of `DiskEncryptionSetResourceSettingsResponseInput` via:
//
//          DiskEncryptionSetResourceSettingsResponseArgs{...}
type DiskEncryptionSetResourceSettingsResponseInput interface {
	pulumi.Input

	ToDiskEncryptionSetResourceSettingsResponseOutput() DiskEncryptionSetResourceSettingsResponseOutput
	ToDiskEncryptionSetResourceSettingsResponseOutputWithContext(context.Context) DiskEncryptionSetResourceSettingsResponseOutput
}

// Defines the disk encryption set resource settings.
type DiskEncryptionSetResourceSettingsResponseArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Compute/diskEncryptionSets'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (DiskEncryptionSetResourceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSetResourceSettingsResponse)(nil)).Elem()
}

func (i DiskEncryptionSetResourceSettingsResponseArgs) ToDiskEncryptionSetResourceSettingsResponseOutput() DiskEncryptionSetResourceSettingsResponseOutput {
	return i.ToDiskEncryptionSetResourceSettingsResponseOutputWithContext(context.Background())
}

func (i DiskEncryptionSetResourceSettingsResponseArgs) ToDiskEncryptionSetResourceSettingsResponseOutputWithContext(ctx context.Context) DiskEncryptionSetResourceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionSetResourceSettingsResponseOutput)
}

// Defines the disk encryption set resource settings.
type DiskEncryptionSetResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSetResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSetResourceSettingsResponse)(nil)).Elem()
}

func (o DiskEncryptionSetResourceSettingsResponseOutput) ToDiskEncryptionSetResourceSettingsResponseOutput() DiskEncryptionSetResourceSettingsResponseOutput {
	return o
}

func (o DiskEncryptionSetResourceSettingsResponseOutput) ToDiskEncryptionSetResourceSettingsResponseOutputWithContext(ctx context.Context) DiskEncryptionSetResourceSettingsResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Compute/diskEncryptionSets'.
func (o DiskEncryptionSetResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v DiskEncryptionSetResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o DiskEncryptionSetResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v DiskEncryptionSetResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the MSI properties of the Move Collection.
type Identity struct {
	// Gets or sets the principal id.
	PrincipalId *string `pulumi:"principalId"`
	// Gets or sets the tenant id.
	TenantId *string `pulumi:"tenantId"`
	// The type of identity used for the resource mover service.
	Type *string `pulumi:"type"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//          IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Defines the MSI properties of the Move Collection.
type IdentityArgs struct {
	// Gets or sets the principal id.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// Gets or sets the tenant id.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The type of identity used for the resource mover service.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//          IdentityArgs{...}
//
//  or:
//
//          nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Defines the MSI properties of the Move Collection.
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyT(func(v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

// Gets or sets the principal id.
func (o IdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Identity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// Gets or sets the tenant id.
func (o IdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Identity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The type of identity used for the resource mover service.
func (o IdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Identity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity { return *v }).(IdentityOutput)
}

// Gets or sets the principal id.
func (o IdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the tenant id.
func (o IdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity used for the resource mover service.
func (o IdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Defines the MSI properties of the Move Collection.
type IdentityInvokeResponse struct {
	// Gets or sets the principal id.
	PrincipalId *string `pulumi:"principalId"`
	// Gets or sets the tenant id.
	TenantId *string `pulumi:"tenantId"`
	// The type of identity used for the resource mover service.
	Type *string `pulumi:"type"`
}

// IdentityInvokeResponseInput is an input type that accepts IdentityInvokeResponseArgs and IdentityInvokeResponseOutput values.
// You can construct a concrete instance of `IdentityInvokeResponseInput` via:
//
//          IdentityInvokeResponseArgs{...}
type IdentityInvokeResponseInput interface {
	pulumi.Input

	ToIdentityInvokeResponseOutput() IdentityInvokeResponseOutput
	ToIdentityInvokeResponseOutputWithContext(context.Context) IdentityInvokeResponseOutput
}

// Defines the MSI properties of the Move Collection.
type IdentityInvokeResponseArgs struct {
	// Gets or sets the principal id.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// Gets or sets the tenant id.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The type of identity used for the resource mover service.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityInvokeResponse)(nil)).Elem()
}

func (i IdentityInvokeResponseArgs) ToIdentityInvokeResponseOutput() IdentityInvokeResponseOutput {
	return i.ToIdentityInvokeResponseOutputWithContext(context.Background())
}

func (i IdentityInvokeResponseArgs) ToIdentityInvokeResponseOutputWithContext(ctx context.Context) IdentityInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityInvokeResponseOutput)
}

// Defines the MSI properties of the Move Collection.
type IdentityInvokeResponseOutput struct{ *pulumi.OutputState }

func (IdentityInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityInvokeResponse)(nil)).Elem()
}

func (o IdentityInvokeResponseOutput) ToIdentityInvokeResponseOutput() IdentityInvokeResponseOutput {
	return o
}

func (o IdentityInvokeResponseOutput) ToIdentityInvokeResponseOutputWithContext(ctx context.Context) IdentityInvokeResponseOutput {
	return o
}

// Gets or sets the principal id.
func (o IdentityInvokeResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityInvokeResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// Gets or sets the tenant id.
func (o IdentityInvokeResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityInvokeResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The type of identity used for the resource mover service.
func (o IdentityInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Defines the MSI properties of the Move Collection.
type IdentityResponse struct {
	// Gets or sets the principal id.
	PrincipalId *string `pulumi:"principalId"`
	// Gets or sets the tenant id.
	TenantId *string `pulumi:"tenantId"`
	// The type of identity used for the resource mover service.
	Type *string `pulumi:"type"`
}

// IdentityResponseInput is an input type that accepts IdentityResponseArgs and IdentityResponseOutput values.
// You can construct a concrete instance of `IdentityResponseInput` via:
//
//          IdentityResponseArgs{...}
type IdentityResponseInput interface {
	pulumi.Input

	ToIdentityResponseOutput() IdentityResponseOutput
	ToIdentityResponseOutputWithContext(context.Context) IdentityResponseOutput
}

// Defines the MSI properties of the Move Collection.
type IdentityResponseArgs struct {
	// Gets or sets the principal id.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// Gets or sets the tenant id.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The type of identity used for the resource mover service.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (i IdentityResponseArgs) ToIdentityResponseOutput() IdentityResponseOutput {
	return i.ToIdentityResponseOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput)
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput).ToIdentityResponsePtrOutputWithContext(ctx)
}

// IdentityResponsePtrInput is an input type that accepts IdentityResponseArgs, IdentityResponsePtr and IdentityResponsePtrOutput values.
// You can construct a concrete instance of `IdentityResponsePtrInput` via:
//
//          IdentityResponseArgs{...}
//
//  or:
//
//          nil
type IdentityResponsePtrInput interface {
	pulumi.Input

	ToIdentityResponsePtrOutput() IdentityResponsePtrOutput
	ToIdentityResponsePtrOutputWithContext(context.Context) IdentityResponsePtrOutput
}

type identityResponsePtrType IdentityResponseArgs

func IdentityResponsePtr(v *IdentityResponseArgs) IdentityResponsePtrInput {
	return (*identityResponsePtrType)(v)
}

func (*identityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponsePtrOutput)
}

// Defines the MSI properties of the Move Collection.
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o.ApplyT(func(v IdentityResponse) *IdentityResponse {
		return &v
	}).(IdentityResponsePtrOutput)
}

// Gets or sets the principal id.
func (o IdentityResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// Gets or sets the tenant id.
func (o IdentityResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The type of identity used for the resource mover service.
func (o IdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse { return *v }).(IdentityResponseOutput)
}

// Gets or sets the principal id.
func (o IdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the tenant id.
func (o IdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity used for the resource mover service.
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Defines the job status.
type JobStatusInvokeResponse struct {
	// Defines the job name.
	JobName string `pulumi:"jobName"`
	// Gets or sets the monitoring job percentage.
	JobProgress string `pulumi:"jobProgress"`
}

// JobStatusInvokeResponseInput is an input type that accepts JobStatusInvokeResponseArgs and JobStatusInvokeResponseOutput values.
// You can construct a concrete instance of `JobStatusInvokeResponseInput` via:
//
//          JobStatusInvokeResponseArgs{...}
type JobStatusInvokeResponseInput interface {
	pulumi.Input

	ToJobStatusInvokeResponseOutput() JobStatusInvokeResponseOutput
	ToJobStatusInvokeResponseOutputWithContext(context.Context) JobStatusInvokeResponseOutput
}

// Defines the job status.
type JobStatusInvokeResponseArgs struct {
	// Defines the job name.
	JobName pulumi.StringInput `pulumi:"jobName"`
	// Gets or sets the monitoring job percentage.
	JobProgress pulumi.StringInput `pulumi:"jobProgress"`
}

func (JobStatusInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStatusInvokeResponse)(nil)).Elem()
}

func (i JobStatusInvokeResponseArgs) ToJobStatusInvokeResponseOutput() JobStatusInvokeResponseOutput {
	return i.ToJobStatusInvokeResponseOutputWithContext(context.Background())
}

func (i JobStatusInvokeResponseArgs) ToJobStatusInvokeResponseOutputWithContext(ctx context.Context) JobStatusInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStatusInvokeResponseOutput)
}

func (i JobStatusInvokeResponseArgs) ToJobStatusInvokeResponsePtrOutput() JobStatusInvokeResponsePtrOutput {
	return i.ToJobStatusInvokeResponsePtrOutputWithContext(context.Background())
}

func (i JobStatusInvokeResponseArgs) ToJobStatusInvokeResponsePtrOutputWithContext(ctx context.Context) JobStatusInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStatusInvokeResponseOutput).ToJobStatusInvokeResponsePtrOutputWithContext(ctx)
}

// JobStatusInvokeResponsePtrInput is an input type that accepts JobStatusInvokeResponseArgs, JobStatusInvokeResponsePtr and JobStatusInvokeResponsePtrOutput values.
// You can construct a concrete instance of `JobStatusInvokeResponsePtrInput` via:
//
//          JobStatusInvokeResponseArgs{...}
//
//  or:
//
//          nil
type JobStatusInvokeResponsePtrInput interface {
	pulumi.Input

	ToJobStatusInvokeResponsePtrOutput() JobStatusInvokeResponsePtrOutput
	ToJobStatusInvokeResponsePtrOutputWithContext(context.Context) JobStatusInvokeResponsePtrOutput
}

type jobStatusInvokeResponsePtrType JobStatusInvokeResponseArgs

func JobStatusInvokeResponsePtr(v *JobStatusInvokeResponseArgs) JobStatusInvokeResponsePtrInput {
	return (*jobStatusInvokeResponsePtrType)(v)
}

func (*jobStatusInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStatusInvokeResponse)(nil)).Elem()
}

func (i *jobStatusInvokeResponsePtrType) ToJobStatusInvokeResponsePtrOutput() JobStatusInvokeResponsePtrOutput {
	return i.ToJobStatusInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *jobStatusInvokeResponsePtrType) ToJobStatusInvokeResponsePtrOutputWithContext(ctx context.Context) JobStatusInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStatusInvokeResponsePtrOutput)
}

// Defines the job status.
type JobStatusInvokeResponseOutput struct{ *pulumi.OutputState }

func (JobStatusInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStatusInvokeResponse)(nil)).Elem()
}

func (o JobStatusInvokeResponseOutput) ToJobStatusInvokeResponseOutput() JobStatusInvokeResponseOutput {
	return o
}

func (o JobStatusInvokeResponseOutput) ToJobStatusInvokeResponseOutputWithContext(ctx context.Context) JobStatusInvokeResponseOutput {
	return o
}

func (o JobStatusInvokeResponseOutput) ToJobStatusInvokeResponsePtrOutput() JobStatusInvokeResponsePtrOutput {
	return o.ToJobStatusInvokeResponsePtrOutputWithContext(context.Background())
}

func (o JobStatusInvokeResponseOutput) ToJobStatusInvokeResponsePtrOutputWithContext(ctx context.Context) JobStatusInvokeResponsePtrOutput {
	return o.ApplyT(func(v JobStatusInvokeResponse) *JobStatusInvokeResponse {
		return &v
	}).(JobStatusInvokeResponsePtrOutput)
}

// Defines the job name.
func (o JobStatusInvokeResponseOutput) JobName() pulumi.StringOutput {
	return o.ApplyT(func(v JobStatusInvokeResponse) string { return v.JobName }).(pulumi.StringOutput)
}

// Gets or sets the monitoring job percentage.
func (o JobStatusInvokeResponseOutput) JobProgress() pulumi.StringOutput {
	return o.ApplyT(func(v JobStatusInvokeResponse) string { return v.JobProgress }).(pulumi.StringOutput)
}

type JobStatusInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (JobStatusInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStatusInvokeResponse)(nil)).Elem()
}

func (o JobStatusInvokeResponsePtrOutput) ToJobStatusInvokeResponsePtrOutput() JobStatusInvokeResponsePtrOutput {
	return o
}

func (o JobStatusInvokeResponsePtrOutput) ToJobStatusInvokeResponsePtrOutputWithContext(ctx context.Context) JobStatusInvokeResponsePtrOutput {
	return o
}

func (o JobStatusInvokeResponsePtrOutput) Elem() JobStatusInvokeResponseOutput {
	return o.ApplyT(func(v *JobStatusInvokeResponse) JobStatusInvokeResponse { return *v }).(JobStatusInvokeResponseOutput)
}

// Defines the job name.
func (o JobStatusInvokeResponsePtrOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStatusInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.JobName
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the monitoring job percentage.
func (o JobStatusInvokeResponsePtrOutput) JobProgress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStatusInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.JobProgress
	}).(pulumi.StringPtrOutput)
}

// Defines the job status.
type JobStatusResponse struct {
	// Defines the job name.
	JobName string `pulumi:"jobName"`
	// Gets or sets the monitoring job percentage.
	JobProgress string `pulumi:"jobProgress"`
}

// JobStatusResponseInput is an input type that accepts JobStatusResponseArgs and JobStatusResponseOutput values.
// You can construct a concrete instance of `JobStatusResponseInput` via:
//
//          JobStatusResponseArgs{...}
type JobStatusResponseInput interface {
	pulumi.Input

	ToJobStatusResponseOutput() JobStatusResponseOutput
	ToJobStatusResponseOutputWithContext(context.Context) JobStatusResponseOutput
}

// Defines the job status.
type JobStatusResponseArgs struct {
	// Defines the job name.
	JobName pulumi.StringInput `pulumi:"jobName"`
	// Gets or sets the monitoring job percentage.
	JobProgress pulumi.StringInput `pulumi:"jobProgress"`
}

func (JobStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStatusResponse)(nil)).Elem()
}

func (i JobStatusResponseArgs) ToJobStatusResponseOutput() JobStatusResponseOutput {
	return i.ToJobStatusResponseOutputWithContext(context.Background())
}

func (i JobStatusResponseArgs) ToJobStatusResponseOutputWithContext(ctx context.Context) JobStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStatusResponseOutput)
}

func (i JobStatusResponseArgs) ToJobStatusResponsePtrOutput() JobStatusResponsePtrOutput {
	return i.ToJobStatusResponsePtrOutputWithContext(context.Background())
}

func (i JobStatusResponseArgs) ToJobStatusResponsePtrOutputWithContext(ctx context.Context) JobStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStatusResponseOutput).ToJobStatusResponsePtrOutputWithContext(ctx)
}

// JobStatusResponsePtrInput is an input type that accepts JobStatusResponseArgs, JobStatusResponsePtr and JobStatusResponsePtrOutput values.
// You can construct a concrete instance of `JobStatusResponsePtrInput` via:
//
//          JobStatusResponseArgs{...}
//
//  or:
//
//          nil
type JobStatusResponsePtrInput interface {
	pulumi.Input

	ToJobStatusResponsePtrOutput() JobStatusResponsePtrOutput
	ToJobStatusResponsePtrOutputWithContext(context.Context) JobStatusResponsePtrOutput
}

type jobStatusResponsePtrType JobStatusResponseArgs

func JobStatusResponsePtr(v *JobStatusResponseArgs) JobStatusResponsePtrInput {
	return (*jobStatusResponsePtrType)(v)
}

func (*jobStatusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStatusResponse)(nil)).Elem()
}

func (i *jobStatusResponsePtrType) ToJobStatusResponsePtrOutput() JobStatusResponsePtrOutput {
	return i.ToJobStatusResponsePtrOutputWithContext(context.Background())
}

func (i *jobStatusResponsePtrType) ToJobStatusResponsePtrOutputWithContext(ctx context.Context) JobStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStatusResponsePtrOutput)
}

// Defines the job status.
type JobStatusResponseOutput struct{ *pulumi.OutputState }

func (JobStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStatusResponse)(nil)).Elem()
}

func (o JobStatusResponseOutput) ToJobStatusResponseOutput() JobStatusResponseOutput {
	return o
}

func (o JobStatusResponseOutput) ToJobStatusResponseOutputWithContext(ctx context.Context) JobStatusResponseOutput {
	return o
}

func (o JobStatusResponseOutput) ToJobStatusResponsePtrOutput() JobStatusResponsePtrOutput {
	return o.ToJobStatusResponsePtrOutputWithContext(context.Background())
}

func (o JobStatusResponseOutput) ToJobStatusResponsePtrOutputWithContext(ctx context.Context) JobStatusResponsePtrOutput {
	return o.ApplyT(func(v JobStatusResponse) *JobStatusResponse {
		return &v
	}).(JobStatusResponsePtrOutput)
}

// Defines the job name.
func (o JobStatusResponseOutput) JobName() pulumi.StringOutput {
	return o.ApplyT(func(v JobStatusResponse) string { return v.JobName }).(pulumi.StringOutput)
}

// Gets or sets the monitoring job percentage.
func (o JobStatusResponseOutput) JobProgress() pulumi.StringOutput {
	return o.ApplyT(func(v JobStatusResponse) string { return v.JobProgress }).(pulumi.StringOutput)
}

type JobStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (JobStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStatusResponse)(nil)).Elem()
}

func (o JobStatusResponsePtrOutput) ToJobStatusResponsePtrOutput() JobStatusResponsePtrOutput {
	return o
}

func (o JobStatusResponsePtrOutput) ToJobStatusResponsePtrOutputWithContext(ctx context.Context) JobStatusResponsePtrOutput {
	return o
}

func (o JobStatusResponsePtrOutput) Elem() JobStatusResponseOutput {
	return o.ApplyT(func(v *JobStatusResponse) JobStatusResponse { return *v }).(JobStatusResponseOutput)
}

// Defines the job name.
func (o JobStatusResponsePtrOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.JobName
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the monitoring job percentage.
func (o JobStatusResponsePtrOutput) JobProgress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.JobProgress
	}).(pulumi.StringPtrOutput)
}

// Defines the key vault resource settings.
type KeyVaultResourceSettings struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.KeyVault/vaults'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// KeyVaultResourceSettingsInput is an input type that accepts KeyVaultResourceSettingsArgs and KeyVaultResourceSettingsOutput values.
// You can construct a concrete instance of `KeyVaultResourceSettingsInput` via:
//
//          KeyVaultResourceSettingsArgs{...}
type KeyVaultResourceSettingsInput interface {
	pulumi.Input

	ToKeyVaultResourceSettingsOutput() KeyVaultResourceSettingsOutput
	ToKeyVaultResourceSettingsOutputWithContext(context.Context) KeyVaultResourceSettingsOutput
}

// Defines the key vault resource settings.
type KeyVaultResourceSettingsArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.KeyVault/vaults'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (KeyVaultResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultResourceSettings)(nil)).Elem()
}

func (i KeyVaultResourceSettingsArgs) ToKeyVaultResourceSettingsOutput() KeyVaultResourceSettingsOutput {
	return i.ToKeyVaultResourceSettingsOutputWithContext(context.Background())
}

func (i KeyVaultResourceSettingsArgs) ToKeyVaultResourceSettingsOutputWithContext(ctx context.Context) KeyVaultResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultResourceSettingsOutput)
}

// Defines the key vault resource settings.
type KeyVaultResourceSettingsOutput struct{ *pulumi.OutputState }

func (KeyVaultResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultResourceSettings)(nil)).Elem()
}

func (o KeyVaultResourceSettingsOutput) ToKeyVaultResourceSettingsOutput() KeyVaultResourceSettingsOutput {
	return o
}

func (o KeyVaultResourceSettingsOutput) ToKeyVaultResourceSettingsOutputWithContext(ctx context.Context) KeyVaultResourceSettingsOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.KeyVault/vaults'.
func (o KeyVaultResourceSettingsOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultResourceSettings) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o KeyVaultResourceSettingsOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultResourceSettings) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the key vault resource settings.
type KeyVaultResourceSettingsInvokeResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.KeyVault/vaults'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// KeyVaultResourceSettingsInvokeResponseInput is an input type that accepts KeyVaultResourceSettingsInvokeResponseArgs and KeyVaultResourceSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `KeyVaultResourceSettingsInvokeResponseInput` via:
//
//          KeyVaultResourceSettingsInvokeResponseArgs{...}
type KeyVaultResourceSettingsInvokeResponseInput interface {
	pulumi.Input

	ToKeyVaultResourceSettingsInvokeResponseOutput() KeyVaultResourceSettingsInvokeResponseOutput
	ToKeyVaultResourceSettingsInvokeResponseOutputWithContext(context.Context) KeyVaultResourceSettingsInvokeResponseOutput
}

// Defines the key vault resource settings.
type KeyVaultResourceSettingsInvokeResponseArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.KeyVault/vaults'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (KeyVaultResourceSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i KeyVaultResourceSettingsInvokeResponseArgs) ToKeyVaultResourceSettingsInvokeResponseOutput() KeyVaultResourceSettingsInvokeResponseOutput {
	return i.ToKeyVaultResourceSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i KeyVaultResourceSettingsInvokeResponseArgs) ToKeyVaultResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) KeyVaultResourceSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultResourceSettingsInvokeResponseOutput)
}

// Defines the key vault resource settings.
type KeyVaultResourceSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultResourceSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o KeyVaultResourceSettingsInvokeResponseOutput) ToKeyVaultResourceSettingsInvokeResponseOutput() KeyVaultResourceSettingsInvokeResponseOutput {
	return o
}

func (o KeyVaultResourceSettingsInvokeResponseOutput) ToKeyVaultResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) KeyVaultResourceSettingsInvokeResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.KeyVault/vaults'.
func (o KeyVaultResourceSettingsInvokeResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultResourceSettingsInvokeResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o KeyVaultResourceSettingsInvokeResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultResourceSettingsInvokeResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the key vault resource settings.
type KeyVaultResourceSettingsResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.KeyVault/vaults'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// KeyVaultResourceSettingsResponseInput is an input type that accepts KeyVaultResourceSettingsResponseArgs and KeyVaultResourceSettingsResponseOutput values.
// You can construct a concrete instance of `KeyVaultResourceSettingsResponseInput` via:
//
//          KeyVaultResourceSettingsResponseArgs{...}
type KeyVaultResourceSettingsResponseInput interface {
	pulumi.Input

	ToKeyVaultResourceSettingsResponseOutput() KeyVaultResourceSettingsResponseOutput
	ToKeyVaultResourceSettingsResponseOutputWithContext(context.Context) KeyVaultResourceSettingsResponseOutput
}

// Defines the key vault resource settings.
type KeyVaultResourceSettingsResponseArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.KeyVault/vaults'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (KeyVaultResourceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultResourceSettingsResponse)(nil)).Elem()
}

func (i KeyVaultResourceSettingsResponseArgs) ToKeyVaultResourceSettingsResponseOutput() KeyVaultResourceSettingsResponseOutput {
	return i.ToKeyVaultResourceSettingsResponseOutputWithContext(context.Background())
}

func (i KeyVaultResourceSettingsResponseArgs) ToKeyVaultResourceSettingsResponseOutputWithContext(ctx context.Context) KeyVaultResourceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultResourceSettingsResponseOutput)
}

// Defines the key vault resource settings.
type KeyVaultResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultResourceSettingsResponse)(nil)).Elem()
}

func (o KeyVaultResourceSettingsResponseOutput) ToKeyVaultResourceSettingsResponseOutput() KeyVaultResourceSettingsResponseOutput {
	return o
}

func (o KeyVaultResourceSettingsResponseOutput) ToKeyVaultResourceSettingsResponseOutputWithContext(ctx context.Context) KeyVaultResourceSettingsResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.KeyVault/vaults'.
func (o KeyVaultResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o KeyVaultResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines load balancer backend address pool properties.
type LBBackendAddressPoolResourceSettings struct {
	// Gets or sets the backend address pool name.
	Name *string `pulumi:"name"`
}

// LBBackendAddressPoolResourceSettingsInput is an input type that accepts LBBackendAddressPoolResourceSettingsArgs and LBBackendAddressPoolResourceSettingsOutput values.
// You can construct a concrete instance of `LBBackendAddressPoolResourceSettingsInput` via:
//
//          LBBackendAddressPoolResourceSettingsArgs{...}
type LBBackendAddressPoolResourceSettingsInput interface {
	pulumi.Input

	ToLBBackendAddressPoolResourceSettingsOutput() LBBackendAddressPoolResourceSettingsOutput
	ToLBBackendAddressPoolResourceSettingsOutputWithContext(context.Context) LBBackendAddressPoolResourceSettingsOutput
}

// Defines load balancer backend address pool properties.
type LBBackendAddressPoolResourceSettingsArgs struct {
	// Gets or sets the backend address pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LBBackendAddressPoolResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBBackendAddressPoolResourceSettings)(nil)).Elem()
}

func (i LBBackendAddressPoolResourceSettingsArgs) ToLBBackendAddressPoolResourceSettingsOutput() LBBackendAddressPoolResourceSettingsOutput {
	return i.ToLBBackendAddressPoolResourceSettingsOutputWithContext(context.Background())
}

func (i LBBackendAddressPoolResourceSettingsArgs) ToLBBackendAddressPoolResourceSettingsOutputWithContext(ctx context.Context) LBBackendAddressPoolResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBBackendAddressPoolResourceSettingsOutput)
}

// LBBackendAddressPoolResourceSettingsArrayInput is an input type that accepts LBBackendAddressPoolResourceSettingsArray and LBBackendAddressPoolResourceSettingsArrayOutput values.
// You can construct a concrete instance of `LBBackendAddressPoolResourceSettingsArrayInput` via:
//
//          LBBackendAddressPoolResourceSettingsArray{ LBBackendAddressPoolResourceSettingsArgs{...} }
type LBBackendAddressPoolResourceSettingsArrayInput interface {
	pulumi.Input

	ToLBBackendAddressPoolResourceSettingsArrayOutput() LBBackendAddressPoolResourceSettingsArrayOutput
	ToLBBackendAddressPoolResourceSettingsArrayOutputWithContext(context.Context) LBBackendAddressPoolResourceSettingsArrayOutput
}

type LBBackendAddressPoolResourceSettingsArray []LBBackendAddressPoolResourceSettingsInput

func (LBBackendAddressPoolResourceSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBBackendAddressPoolResourceSettings)(nil)).Elem()
}

func (i LBBackendAddressPoolResourceSettingsArray) ToLBBackendAddressPoolResourceSettingsArrayOutput() LBBackendAddressPoolResourceSettingsArrayOutput {
	return i.ToLBBackendAddressPoolResourceSettingsArrayOutputWithContext(context.Background())
}

func (i LBBackendAddressPoolResourceSettingsArray) ToLBBackendAddressPoolResourceSettingsArrayOutputWithContext(ctx context.Context) LBBackendAddressPoolResourceSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBBackendAddressPoolResourceSettingsArrayOutput)
}

// Defines load balancer backend address pool properties.
type LBBackendAddressPoolResourceSettingsOutput struct{ *pulumi.OutputState }

func (LBBackendAddressPoolResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBBackendAddressPoolResourceSettings)(nil)).Elem()
}

func (o LBBackendAddressPoolResourceSettingsOutput) ToLBBackendAddressPoolResourceSettingsOutput() LBBackendAddressPoolResourceSettingsOutput {
	return o
}

func (o LBBackendAddressPoolResourceSettingsOutput) ToLBBackendAddressPoolResourceSettingsOutputWithContext(ctx context.Context) LBBackendAddressPoolResourceSettingsOutput {
	return o
}

// Gets or sets the backend address pool name.
func (o LBBackendAddressPoolResourceSettingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBBackendAddressPoolResourceSettings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LBBackendAddressPoolResourceSettingsArrayOutput struct{ *pulumi.OutputState }

func (LBBackendAddressPoolResourceSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBBackendAddressPoolResourceSettings)(nil)).Elem()
}

func (o LBBackendAddressPoolResourceSettingsArrayOutput) ToLBBackendAddressPoolResourceSettingsArrayOutput() LBBackendAddressPoolResourceSettingsArrayOutput {
	return o
}

func (o LBBackendAddressPoolResourceSettingsArrayOutput) ToLBBackendAddressPoolResourceSettingsArrayOutputWithContext(ctx context.Context) LBBackendAddressPoolResourceSettingsArrayOutput {
	return o
}

func (o LBBackendAddressPoolResourceSettingsArrayOutput) Index(i pulumi.IntInput) LBBackendAddressPoolResourceSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBBackendAddressPoolResourceSettings {
		return vs[0].([]LBBackendAddressPoolResourceSettings)[vs[1].(int)]
	}).(LBBackendAddressPoolResourceSettingsOutput)
}

// Defines load balancer backend address pool properties.
type LBBackendAddressPoolResourceSettingsInvokeResponse struct {
	// Gets or sets the backend address pool name.
	Name *string `pulumi:"name"`
}

// LBBackendAddressPoolResourceSettingsInvokeResponseInput is an input type that accepts LBBackendAddressPoolResourceSettingsInvokeResponseArgs and LBBackendAddressPoolResourceSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `LBBackendAddressPoolResourceSettingsInvokeResponseInput` via:
//
//          LBBackendAddressPoolResourceSettingsInvokeResponseArgs{...}
type LBBackendAddressPoolResourceSettingsInvokeResponseInput interface {
	pulumi.Input

	ToLBBackendAddressPoolResourceSettingsInvokeResponseOutput() LBBackendAddressPoolResourceSettingsInvokeResponseOutput
	ToLBBackendAddressPoolResourceSettingsInvokeResponseOutputWithContext(context.Context) LBBackendAddressPoolResourceSettingsInvokeResponseOutput
}

// Defines load balancer backend address pool properties.
type LBBackendAddressPoolResourceSettingsInvokeResponseArgs struct {
	// Gets or sets the backend address pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LBBackendAddressPoolResourceSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBBackendAddressPoolResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i LBBackendAddressPoolResourceSettingsInvokeResponseArgs) ToLBBackendAddressPoolResourceSettingsInvokeResponseOutput() LBBackendAddressPoolResourceSettingsInvokeResponseOutput {
	return i.ToLBBackendAddressPoolResourceSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i LBBackendAddressPoolResourceSettingsInvokeResponseArgs) ToLBBackendAddressPoolResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) LBBackendAddressPoolResourceSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBBackendAddressPoolResourceSettingsInvokeResponseOutput)
}

// LBBackendAddressPoolResourceSettingsInvokeResponseArrayInput is an input type that accepts LBBackendAddressPoolResourceSettingsInvokeResponseArray and LBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput values.
// You can construct a concrete instance of `LBBackendAddressPoolResourceSettingsInvokeResponseArrayInput` via:
//
//          LBBackendAddressPoolResourceSettingsInvokeResponseArray{ LBBackendAddressPoolResourceSettingsInvokeResponseArgs{...} }
type LBBackendAddressPoolResourceSettingsInvokeResponseArrayInput interface {
	pulumi.Input

	ToLBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput() LBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput
	ToLBBackendAddressPoolResourceSettingsInvokeResponseArrayOutputWithContext(context.Context) LBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput
}

type LBBackendAddressPoolResourceSettingsInvokeResponseArray []LBBackendAddressPoolResourceSettingsInvokeResponseInput

func (LBBackendAddressPoolResourceSettingsInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBBackendAddressPoolResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i LBBackendAddressPoolResourceSettingsInvokeResponseArray) ToLBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput() LBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput {
	return i.ToLBBackendAddressPoolResourceSettingsInvokeResponseArrayOutputWithContext(context.Background())
}

func (i LBBackendAddressPoolResourceSettingsInvokeResponseArray) ToLBBackendAddressPoolResourceSettingsInvokeResponseArrayOutputWithContext(ctx context.Context) LBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput)
}

// Defines load balancer backend address pool properties.
type LBBackendAddressPoolResourceSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (LBBackendAddressPoolResourceSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBBackendAddressPoolResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o LBBackendAddressPoolResourceSettingsInvokeResponseOutput) ToLBBackendAddressPoolResourceSettingsInvokeResponseOutput() LBBackendAddressPoolResourceSettingsInvokeResponseOutput {
	return o
}

func (o LBBackendAddressPoolResourceSettingsInvokeResponseOutput) ToLBBackendAddressPoolResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) LBBackendAddressPoolResourceSettingsInvokeResponseOutput {
	return o
}

// Gets or sets the backend address pool name.
func (o LBBackendAddressPoolResourceSettingsInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBBackendAddressPoolResourceSettingsInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (LBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBBackendAddressPoolResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o LBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput) ToLBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput() LBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput {
	return o
}

func (o LBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput) ToLBBackendAddressPoolResourceSettingsInvokeResponseArrayOutputWithContext(ctx context.Context) LBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput {
	return o
}

func (o LBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput) Index(i pulumi.IntInput) LBBackendAddressPoolResourceSettingsInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBBackendAddressPoolResourceSettingsInvokeResponse {
		return vs[0].([]LBBackendAddressPoolResourceSettingsInvokeResponse)[vs[1].(int)]
	}).(LBBackendAddressPoolResourceSettingsInvokeResponseOutput)
}

// Defines load balancer backend address pool properties.
type LBBackendAddressPoolResourceSettingsResponse struct {
	// Gets or sets the backend address pool name.
	Name *string `pulumi:"name"`
}

// LBBackendAddressPoolResourceSettingsResponseInput is an input type that accepts LBBackendAddressPoolResourceSettingsResponseArgs and LBBackendAddressPoolResourceSettingsResponseOutput values.
// You can construct a concrete instance of `LBBackendAddressPoolResourceSettingsResponseInput` via:
//
//          LBBackendAddressPoolResourceSettingsResponseArgs{...}
type LBBackendAddressPoolResourceSettingsResponseInput interface {
	pulumi.Input

	ToLBBackendAddressPoolResourceSettingsResponseOutput() LBBackendAddressPoolResourceSettingsResponseOutput
	ToLBBackendAddressPoolResourceSettingsResponseOutputWithContext(context.Context) LBBackendAddressPoolResourceSettingsResponseOutput
}

// Defines load balancer backend address pool properties.
type LBBackendAddressPoolResourceSettingsResponseArgs struct {
	// Gets or sets the backend address pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LBBackendAddressPoolResourceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBBackendAddressPoolResourceSettingsResponse)(nil)).Elem()
}

func (i LBBackendAddressPoolResourceSettingsResponseArgs) ToLBBackendAddressPoolResourceSettingsResponseOutput() LBBackendAddressPoolResourceSettingsResponseOutput {
	return i.ToLBBackendAddressPoolResourceSettingsResponseOutputWithContext(context.Background())
}

func (i LBBackendAddressPoolResourceSettingsResponseArgs) ToLBBackendAddressPoolResourceSettingsResponseOutputWithContext(ctx context.Context) LBBackendAddressPoolResourceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBBackendAddressPoolResourceSettingsResponseOutput)
}

// LBBackendAddressPoolResourceSettingsResponseArrayInput is an input type that accepts LBBackendAddressPoolResourceSettingsResponseArray and LBBackendAddressPoolResourceSettingsResponseArrayOutput values.
// You can construct a concrete instance of `LBBackendAddressPoolResourceSettingsResponseArrayInput` via:
//
//          LBBackendAddressPoolResourceSettingsResponseArray{ LBBackendAddressPoolResourceSettingsResponseArgs{...} }
type LBBackendAddressPoolResourceSettingsResponseArrayInput interface {
	pulumi.Input

	ToLBBackendAddressPoolResourceSettingsResponseArrayOutput() LBBackendAddressPoolResourceSettingsResponseArrayOutput
	ToLBBackendAddressPoolResourceSettingsResponseArrayOutputWithContext(context.Context) LBBackendAddressPoolResourceSettingsResponseArrayOutput
}

type LBBackendAddressPoolResourceSettingsResponseArray []LBBackendAddressPoolResourceSettingsResponseInput

func (LBBackendAddressPoolResourceSettingsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBBackendAddressPoolResourceSettingsResponse)(nil)).Elem()
}

func (i LBBackendAddressPoolResourceSettingsResponseArray) ToLBBackendAddressPoolResourceSettingsResponseArrayOutput() LBBackendAddressPoolResourceSettingsResponseArrayOutput {
	return i.ToLBBackendAddressPoolResourceSettingsResponseArrayOutputWithContext(context.Background())
}

func (i LBBackendAddressPoolResourceSettingsResponseArray) ToLBBackendAddressPoolResourceSettingsResponseArrayOutputWithContext(ctx context.Context) LBBackendAddressPoolResourceSettingsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBBackendAddressPoolResourceSettingsResponseArrayOutput)
}

// Defines load balancer backend address pool properties.
type LBBackendAddressPoolResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (LBBackendAddressPoolResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBBackendAddressPoolResourceSettingsResponse)(nil)).Elem()
}

func (o LBBackendAddressPoolResourceSettingsResponseOutput) ToLBBackendAddressPoolResourceSettingsResponseOutput() LBBackendAddressPoolResourceSettingsResponseOutput {
	return o
}

func (o LBBackendAddressPoolResourceSettingsResponseOutput) ToLBBackendAddressPoolResourceSettingsResponseOutputWithContext(ctx context.Context) LBBackendAddressPoolResourceSettingsResponseOutput {
	return o
}

// Gets or sets the backend address pool name.
func (o LBBackendAddressPoolResourceSettingsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBBackendAddressPoolResourceSettingsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LBBackendAddressPoolResourceSettingsResponseArrayOutput struct{ *pulumi.OutputState }

func (LBBackendAddressPoolResourceSettingsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBBackendAddressPoolResourceSettingsResponse)(nil)).Elem()
}

func (o LBBackendAddressPoolResourceSettingsResponseArrayOutput) ToLBBackendAddressPoolResourceSettingsResponseArrayOutput() LBBackendAddressPoolResourceSettingsResponseArrayOutput {
	return o
}

func (o LBBackendAddressPoolResourceSettingsResponseArrayOutput) ToLBBackendAddressPoolResourceSettingsResponseArrayOutputWithContext(ctx context.Context) LBBackendAddressPoolResourceSettingsResponseArrayOutput {
	return o
}

func (o LBBackendAddressPoolResourceSettingsResponseArrayOutput) Index(i pulumi.IntInput) LBBackendAddressPoolResourceSettingsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBBackendAddressPoolResourceSettingsResponse {
		return vs[0].([]LBBackendAddressPoolResourceSettingsResponse)[vs[1].(int)]
	}).(LBBackendAddressPoolResourceSettingsResponseOutput)
}

// Defines load balancer frontend IP configuration properties.
type LBFrontendIPConfigurationResourceSettings struct {
	// Gets or sets the frontend IP configuration name.
	Name *string `pulumi:"name"`
	// Gets or sets the IP address of the Load Balancer.This is only specified if a specific
	// private IP address shall be allocated from the subnet specified in subnetRef.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// Gets or sets PrivateIP allocation method (Static/Dynamic).
	PrivateIpAllocationMethod *string `pulumi:"privateIpAllocationMethod"`
	// Defines reference to subnet.
	Subnet *SubnetReference `pulumi:"subnet"`
	// Gets or sets the csv list of zones.
	Zones *string `pulumi:"zones"`
}

// LBFrontendIPConfigurationResourceSettingsInput is an input type that accepts LBFrontendIPConfigurationResourceSettingsArgs and LBFrontendIPConfigurationResourceSettingsOutput values.
// You can construct a concrete instance of `LBFrontendIPConfigurationResourceSettingsInput` via:
//
//          LBFrontendIPConfigurationResourceSettingsArgs{...}
type LBFrontendIPConfigurationResourceSettingsInput interface {
	pulumi.Input

	ToLBFrontendIPConfigurationResourceSettingsOutput() LBFrontendIPConfigurationResourceSettingsOutput
	ToLBFrontendIPConfigurationResourceSettingsOutputWithContext(context.Context) LBFrontendIPConfigurationResourceSettingsOutput
}

// Defines load balancer frontend IP configuration properties.
type LBFrontendIPConfigurationResourceSettingsArgs struct {
	// Gets or sets the frontend IP configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets the IP address of the Load Balancer.This is only specified if a specific
	// private IP address shall be allocated from the subnet specified in subnetRef.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// Gets or sets PrivateIP allocation method (Static/Dynamic).
	PrivateIpAllocationMethod pulumi.StringPtrInput `pulumi:"privateIpAllocationMethod"`
	// Defines reference to subnet.
	Subnet SubnetReferencePtrInput `pulumi:"subnet"`
	// Gets or sets the csv list of zones.
	Zones pulumi.StringPtrInput `pulumi:"zones"`
}

func (LBFrontendIPConfigurationResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBFrontendIPConfigurationResourceSettings)(nil)).Elem()
}

func (i LBFrontendIPConfigurationResourceSettingsArgs) ToLBFrontendIPConfigurationResourceSettingsOutput() LBFrontendIPConfigurationResourceSettingsOutput {
	return i.ToLBFrontendIPConfigurationResourceSettingsOutputWithContext(context.Background())
}

func (i LBFrontendIPConfigurationResourceSettingsArgs) ToLBFrontendIPConfigurationResourceSettingsOutputWithContext(ctx context.Context) LBFrontendIPConfigurationResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBFrontendIPConfigurationResourceSettingsOutput)
}

// LBFrontendIPConfigurationResourceSettingsArrayInput is an input type that accepts LBFrontendIPConfigurationResourceSettingsArray and LBFrontendIPConfigurationResourceSettingsArrayOutput values.
// You can construct a concrete instance of `LBFrontendIPConfigurationResourceSettingsArrayInput` via:
//
//          LBFrontendIPConfigurationResourceSettingsArray{ LBFrontendIPConfigurationResourceSettingsArgs{...} }
type LBFrontendIPConfigurationResourceSettingsArrayInput interface {
	pulumi.Input

	ToLBFrontendIPConfigurationResourceSettingsArrayOutput() LBFrontendIPConfigurationResourceSettingsArrayOutput
	ToLBFrontendIPConfigurationResourceSettingsArrayOutputWithContext(context.Context) LBFrontendIPConfigurationResourceSettingsArrayOutput
}

type LBFrontendIPConfigurationResourceSettingsArray []LBFrontendIPConfigurationResourceSettingsInput

func (LBFrontendIPConfigurationResourceSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBFrontendIPConfigurationResourceSettings)(nil)).Elem()
}

func (i LBFrontendIPConfigurationResourceSettingsArray) ToLBFrontendIPConfigurationResourceSettingsArrayOutput() LBFrontendIPConfigurationResourceSettingsArrayOutput {
	return i.ToLBFrontendIPConfigurationResourceSettingsArrayOutputWithContext(context.Background())
}

func (i LBFrontendIPConfigurationResourceSettingsArray) ToLBFrontendIPConfigurationResourceSettingsArrayOutputWithContext(ctx context.Context) LBFrontendIPConfigurationResourceSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBFrontendIPConfigurationResourceSettingsArrayOutput)
}

// Defines load balancer frontend IP configuration properties.
type LBFrontendIPConfigurationResourceSettingsOutput struct{ *pulumi.OutputState }

func (LBFrontendIPConfigurationResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBFrontendIPConfigurationResourceSettings)(nil)).Elem()
}

func (o LBFrontendIPConfigurationResourceSettingsOutput) ToLBFrontendIPConfigurationResourceSettingsOutput() LBFrontendIPConfigurationResourceSettingsOutput {
	return o
}

func (o LBFrontendIPConfigurationResourceSettingsOutput) ToLBFrontendIPConfigurationResourceSettingsOutputWithContext(ctx context.Context) LBFrontendIPConfigurationResourceSettingsOutput {
	return o
}

// Gets or sets the frontend IP configuration name.
func (o LBFrontendIPConfigurationResourceSettingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets the IP address of the Load Balancer.This is only specified if a specific
// private IP address shall be allocated from the subnet specified in subnetRef.
func (o LBFrontendIPConfigurationResourceSettingsOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettings) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// Gets or sets PrivateIP allocation method (Static/Dynamic).
func (o LBFrontendIPConfigurationResourceSettingsOutput) PrivateIpAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettings) *string { return v.PrivateIpAllocationMethod }).(pulumi.StringPtrOutput)
}

// Defines reference to subnet.
func (o LBFrontendIPConfigurationResourceSettingsOutput) Subnet() SubnetReferencePtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettings) *SubnetReference { return v.Subnet }).(SubnetReferencePtrOutput)
}

// Gets or sets the csv list of zones.
func (o LBFrontendIPConfigurationResourceSettingsOutput) Zones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettings) *string { return v.Zones }).(pulumi.StringPtrOutput)
}

type LBFrontendIPConfigurationResourceSettingsArrayOutput struct{ *pulumi.OutputState }

func (LBFrontendIPConfigurationResourceSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBFrontendIPConfigurationResourceSettings)(nil)).Elem()
}

func (o LBFrontendIPConfigurationResourceSettingsArrayOutput) ToLBFrontendIPConfigurationResourceSettingsArrayOutput() LBFrontendIPConfigurationResourceSettingsArrayOutput {
	return o
}

func (o LBFrontendIPConfigurationResourceSettingsArrayOutput) ToLBFrontendIPConfigurationResourceSettingsArrayOutputWithContext(ctx context.Context) LBFrontendIPConfigurationResourceSettingsArrayOutput {
	return o
}

func (o LBFrontendIPConfigurationResourceSettingsArrayOutput) Index(i pulumi.IntInput) LBFrontendIPConfigurationResourceSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBFrontendIPConfigurationResourceSettings {
		return vs[0].([]LBFrontendIPConfigurationResourceSettings)[vs[1].(int)]
	}).(LBFrontendIPConfigurationResourceSettingsOutput)
}

// Defines load balancer frontend IP configuration properties.
type LBFrontendIPConfigurationResourceSettingsInvokeResponse struct {
	// Gets or sets the frontend IP configuration name.
	Name *string `pulumi:"name"`
	// Gets or sets the IP address of the Load Balancer.This is only specified if a specific
	// private IP address shall be allocated from the subnet specified in subnetRef.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// Gets or sets PrivateIP allocation method (Static/Dynamic).
	PrivateIpAllocationMethod *string `pulumi:"privateIpAllocationMethod"`
	// Defines reference to subnet.
	Subnet *SubnetReferenceInvokeResponse `pulumi:"subnet"`
	// Gets or sets the csv list of zones.
	Zones *string `pulumi:"zones"`
}

// LBFrontendIPConfigurationResourceSettingsInvokeResponseInput is an input type that accepts LBFrontendIPConfigurationResourceSettingsInvokeResponseArgs and LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `LBFrontendIPConfigurationResourceSettingsInvokeResponseInput` via:
//
//          LBFrontendIPConfigurationResourceSettingsInvokeResponseArgs{...}
type LBFrontendIPConfigurationResourceSettingsInvokeResponseInput interface {
	pulumi.Input

	ToLBFrontendIPConfigurationResourceSettingsInvokeResponseOutput() LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput
	ToLBFrontendIPConfigurationResourceSettingsInvokeResponseOutputWithContext(context.Context) LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput
}

// Defines load balancer frontend IP configuration properties.
type LBFrontendIPConfigurationResourceSettingsInvokeResponseArgs struct {
	// Gets or sets the frontend IP configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets the IP address of the Load Balancer.This is only specified if a specific
	// private IP address shall be allocated from the subnet specified in subnetRef.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// Gets or sets PrivateIP allocation method (Static/Dynamic).
	PrivateIpAllocationMethod pulumi.StringPtrInput `pulumi:"privateIpAllocationMethod"`
	// Defines reference to subnet.
	Subnet SubnetReferenceInvokeResponsePtrInput `pulumi:"subnet"`
	// Gets or sets the csv list of zones.
	Zones pulumi.StringPtrInput `pulumi:"zones"`
}

func (LBFrontendIPConfigurationResourceSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBFrontendIPConfigurationResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i LBFrontendIPConfigurationResourceSettingsInvokeResponseArgs) ToLBFrontendIPConfigurationResourceSettingsInvokeResponseOutput() LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput {
	return i.ToLBFrontendIPConfigurationResourceSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i LBFrontendIPConfigurationResourceSettingsInvokeResponseArgs) ToLBFrontendIPConfigurationResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput)
}

// LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayInput is an input type that accepts LBFrontendIPConfigurationResourceSettingsInvokeResponseArray and LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput values.
// You can construct a concrete instance of `LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayInput` via:
//
//          LBFrontendIPConfigurationResourceSettingsInvokeResponseArray{ LBFrontendIPConfigurationResourceSettingsInvokeResponseArgs{...} }
type LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayInput interface {
	pulumi.Input

	ToLBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput() LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput
	ToLBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutputWithContext(context.Context) LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput
}

type LBFrontendIPConfigurationResourceSettingsInvokeResponseArray []LBFrontendIPConfigurationResourceSettingsInvokeResponseInput

func (LBFrontendIPConfigurationResourceSettingsInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBFrontendIPConfigurationResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i LBFrontendIPConfigurationResourceSettingsInvokeResponseArray) ToLBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput() LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput {
	return i.ToLBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutputWithContext(context.Background())
}

func (i LBFrontendIPConfigurationResourceSettingsInvokeResponseArray) ToLBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutputWithContext(ctx context.Context) LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput)
}

// Defines load balancer frontend IP configuration properties.
type LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBFrontendIPConfigurationResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput) ToLBFrontendIPConfigurationResourceSettingsInvokeResponseOutput() LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput {
	return o
}

func (o LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput) ToLBFrontendIPConfigurationResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput {
	return o
}

// Gets or sets the frontend IP configuration name.
func (o LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettingsInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets the IP address of the Load Balancer.This is only specified if a specific
// private IP address shall be allocated from the subnet specified in subnetRef.
func (o LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettingsInvokeResponse) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// Gets or sets PrivateIP allocation method (Static/Dynamic).
func (o LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput) PrivateIpAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettingsInvokeResponse) *string {
		return v.PrivateIpAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// Defines reference to subnet.
func (o LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput) Subnet() SubnetReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettingsInvokeResponse) *SubnetReferenceInvokeResponse {
		return v.Subnet
	}).(SubnetReferenceInvokeResponsePtrOutput)
}

// Gets or sets the csv list of zones.
func (o LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput) Zones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettingsInvokeResponse) *string { return v.Zones }).(pulumi.StringPtrOutput)
}

type LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBFrontendIPConfigurationResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput) ToLBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput() LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput {
	return o
}

func (o LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput) ToLBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutputWithContext(ctx context.Context) LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput {
	return o
}

func (o LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput) Index(i pulumi.IntInput) LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBFrontendIPConfigurationResourceSettingsInvokeResponse {
		return vs[0].([]LBFrontendIPConfigurationResourceSettingsInvokeResponse)[vs[1].(int)]
	}).(LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput)
}

// Defines load balancer frontend IP configuration properties.
type LBFrontendIPConfigurationResourceSettingsResponse struct {
	// Gets or sets the frontend IP configuration name.
	Name *string `pulumi:"name"`
	// Gets or sets the IP address of the Load Balancer.This is only specified if a specific
	// private IP address shall be allocated from the subnet specified in subnetRef.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// Gets or sets PrivateIP allocation method (Static/Dynamic).
	PrivateIpAllocationMethod *string `pulumi:"privateIpAllocationMethod"`
	// Defines reference to subnet.
	Subnet *SubnetReferenceResponse `pulumi:"subnet"`
	// Gets or sets the csv list of zones.
	Zones *string `pulumi:"zones"`
}

// LBFrontendIPConfigurationResourceSettingsResponseInput is an input type that accepts LBFrontendIPConfigurationResourceSettingsResponseArgs and LBFrontendIPConfigurationResourceSettingsResponseOutput values.
// You can construct a concrete instance of `LBFrontendIPConfigurationResourceSettingsResponseInput` via:
//
//          LBFrontendIPConfigurationResourceSettingsResponseArgs{...}
type LBFrontendIPConfigurationResourceSettingsResponseInput interface {
	pulumi.Input

	ToLBFrontendIPConfigurationResourceSettingsResponseOutput() LBFrontendIPConfigurationResourceSettingsResponseOutput
	ToLBFrontendIPConfigurationResourceSettingsResponseOutputWithContext(context.Context) LBFrontendIPConfigurationResourceSettingsResponseOutput
}

// Defines load balancer frontend IP configuration properties.
type LBFrontendIPConfigurationResourceSettingsResponseArgs struct {
	// Gets or sets the frontend IP configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets the IP address of the Load Balancer.This is only specified if a specific
	// private IP address shall be allocated from the subnet specified in subnetRef.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// Gets or sets PrivateIP allocation method (Static/Dynamic).
	PrivateIpAllocationMethod pulumi.StringPtrInput `pulumi:"privateIpAllocationMethod"`
	// Defines reference to subnet.
	Subnet SubnetReferenceResponsePtrInput `pulumi:"subnet"`
	// Gets or sets the csv list of zones.
	Zones pulumi.StringPtrInput `pulumi:"zones"`
}

func (LBFrontendIPConfigurationResourceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBFrontendIPConfigurationResourceSettingsResponse)(nil)).Elem()
}

func (i LBFrontendIPConfigurationResourceSettingsResponseArgs) ToLBFrontendIPConfigurationResourceSettingsResponseOutput() LBFrontendIPConfigurationResourceSettingsResponseOutput {
	return i.ToLBFrontendIPConfigurationResourceSettingsResponseOutputWithContext(context.Background())
}

func (i LBFrontendIPConfigurationResourceSettingsResponseArgs) ToLBFrontendIPConfigurationResourceSettingsResponseOutputWithContext(ctx context.Context) LBFrontendIPConfigurationResourceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBFrontendIPConfigurationResourceSettingsResponseOutput)
}

// LBFrontendIPConfigurationResourceSettingsResponseArrayInput is an input type that accepts LBFrontendIPConfigurationResourceSettingsResponseArray and LBFrontendIPConfigurationResourceSettingsResponseArrayOutput values.
// You can construct a concrete instance of `LBFrontendIPConfigurationResourceSettingsResponseArrayInput` via:
//
//          LBFrontendIPConfigurationResourceSettingsResponseArray{ LBFrontendIPConfigurationResourceSettingsResponseArgs{...} }
type LBFrontendIPConfigurationResourceSettingsResponseArrayInput interface {
	pulumi.Input

	ToLBFrontendIPConfigurationResourceSettingsResponseArrayOutput() LBFrontendIPConfigurationResourceSettingsResponseArrayOutput
	ToLBFrontendIPConfigurationResourceSettingsResponseArrayOutputWithContext(context.Context) LBFrontendIPConfigurationResourceSettingsResponseArrayOutput
}

type LBFrontendIPConfigurationResourceSettingsResponseArray []LBFrontendIPConfigurationResourceSettingsResponseInput

func (LBFrontendIPConfigurationResourceSettingsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBFrontendIPConfigurationResourceSettingsResponse)(nil)).Elem()
}

func (i LBFrontendIPConfigurationResourceSettingsResponseArray) ToLBFrontendIPConfigurationResourceSettingsResponseArrayOutput() LBFrontendIPConfigurationResourceSettingsResponseArrayOutput {
	return i.ToLBFrontendIPConfigurationResourceSettingsResponseArrayOutputWithContext(context.Background())
}

func (i LBFrontendIPConfigurationResourceSettingsResponseArray) ToLBFrontendIPConfigurationResourceSettingsResponseArrayOutputWithContext(ctx context.Context) LBFrontendIPConfigurationResourceSettingsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBFrontendIPConfigurationResourceSettingsResponseArrayOutput)
}

// Defines load balancer frontend IP configuration properties.
type LBFrontendIPConfigurationResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (LBFrontendIPConfigurationResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBFrontendIPConfigurationResourceSettingsResponse)(nil)).Elem()
}

func (o LBFrontendIPConfigurationResourceSettingsResponseOutput) ToLBFrontendIPConfigurationResourceSettingsResponseOutput() LBFrontendIPConfigurationResourceSettingsResponseOutput {
	return o
}

func (o LBFrontendIPConfigurationResourceSettingsResponseOutput) ToLBFrontendIPConfigurationResourceSettingsResponseOutputWithContext(ctx context.Context) LBFrontendIPConfigurationResourceSettingsResponseOutput {
	return o
}

// Gets or sets the frontend IP configuration name.
func (o LBFrontendIPConfigurationResourceSettingsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettingsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets the IP address of the Load Balancer.This is only specified if a specific
// private IP address shall be allocated from the subnet specified in subnetRef.
func (o LBFrontendIPConfigurationResourceSettingsResponseOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettingsResponse) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// Gets or sets PrivateIP allocation method (Static/Dynamic).
func (o LBFrontendIPConfigurationResourceSettingsResponseOutput) PrivateIpAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettingsResponse) *string { return v.PrivateIpAllocationMethod }).(pulumi.StringPtrOutput)
}

// Defines reference to subnet.
func (o LBFrontendIPConfigurationResourceSettingsResponseOutput) Subnet() SubnetReferenceResponsePtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettingsResponse) *SubnetReferenceResponse { return v.Subnet }).(SubnetReferenceResponsePtrOutput)
}

// Gets or sets the csv list of zones.
func (o LBFrontendIPConfigurationResourceSettingsResponseOutput) Zones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettingsResponse) *string { return v.Zones }).(pulumi.StringPtrOutput)
}

type LBFrontendIPConfigurationResourceSettingsResponseArrayOutput struct{ *pulumi.OutputState }

func (LBFrontendIPConfigurationResourceSettingsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBFrontendIPConfigurationResourceSettingsResponse)(nil)).Elem()
}

func (o LBFrontendIPConfigurationResourceSettingsResponseArrayOutput) ToLBFrontendIPConfigurationResourceSettingsResponseArrayOutput() LBFrontendIPConfigurationResourceSettingsResponseArrayOutput {
	return o
}

func (o LBFrontendIPConfigurationResourceSettingsResponseArrayOutput) ToLBFrontendIPConfigurationResourceSettingsResponseArrayOutputWithContext(ctx context.Context) LBFrontendIPConfigurationResourceSettingsResponseArrayOutput {
	return o
}

func (o LBFrontendIPConfigurationResourceSettingsResponseArrayOutput) Index(i pulumi.IntInput) LBFrontendIPConfigurationResourceSettingsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBFrontendIPConfigurationResourceSettingsResponse {
		return vs[0].([]LBFrontendIPConfigurationResourceSettingsResponse)[vs[1].(int)]
	}).(LBFrontendIPConfigurationResourceSettingsResponseOutput)
}

// Defines reference to load balancer backend address pools.
type LoadBalancerBackendAddressPoolReference struct {
	// Gets the name of the proxy resource on the target side.
	Name *string `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// LoadBalancerBackendAddressPoolReferenceInput is an input type that accepts LoadBalancerBackendAddressPoolReferenceArgs and LoadBalancerBackendAddressPoolReferenceOutput values.
// You can construct a concrete instance of `LoadBalancerBackendAddressPoolReferenceInput` via:
//
//          LoadBalancerBackendAddressPoolReferenceArgs{...}
type LoadBalancerBackendAddressPoolReferenceInput interface {
	pulumi.Input

	ToLoadBalancerBackendAddressPoolReferenceOutput() LoadBalancerBackendAddressPoolReferenceOutput
	ToLoadBalancerBackendAddressPoolReferenceOutputWithContext(context.Context) LoadBalancerBackendAddressPoolReferenceOutput
}

// Defines reference to load balancer backend address pools.
type LoadBalancerBackendAddressPoolReferenceArgs struct {
	// Gets the name of the proxy resource on the target side.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId pulumi.StringInput `pulumi:"sourceArmResourceId"`
}

func (LoadBalancerBackendAddressPoolReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendAddressPoolReference)(nil)).Elem()
}

func (i LoadBalancerBackendAddressPoolReferenceArgs) ToLoadBalancerBackendAddressPoolReferenceOutput() LoadBalancerBackendAddressPoolReferenceOutput {
	return i.ToLoadBalancerBackendAddressPoolReferenceOutputWithContext(context.Background())
}

func (i LoadBalancerBackendAddressPoolReferenceArgs) ToLoadBalancerBackendAddressPoolReferenceOutputWithContext(ctx context.Context) LoadBalancerBackendAddressPoolReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendAddressPoolReferenceOutput)
}

// LoadBalancerBackendAddressPoolReferenceArrayInput is an input type that accepts LoadBalancerBackendAddressPoolReferenceArray and LoadBalancerBackendAddressPoolReferenceArrayOutput values.
// You can construct a concrete instance of `LoadBalancerBackendAddressPoolReferenceArrayInput` via:
//
//          LoadBalancerBackendAddressPoolReferenceArray{ LoadBalancerBackendAddressPoolReferenceArgs{...} }
type LoadBalancerBackendAddressPoolReferenceArrayInput interface {
	pulumi.Input

	ToLoadBalancerBackendAddressPoolReferenceArrayOutput() LoadBalancerBackendAddressPoolReferenceArrayOutput
	ToLoadBalancerBackendAddressPoolReferenceArrayOutputWithContext(context.Context) LoadBalancerBackendAddressPoolReferenceArrayOutput
}

type LoadBalancerBackendAddressPoolReferenceArray []LoadBalancerBackendAddressPoolReferenceInput

func (LoadBalancerBackendAddressPoolReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendAddressPoolReference)(nil)).Elem()
}

func (i LoadBalancerBackendAddressPoolReferenceArray) ToLoadBalancerBackendAddressPoolReferenceArrayOutput() LoadBalancerBackendAddressPoolReferenceArrayOutput {
	return i.ToLoadBalancerBackendAddressPoolReferenceArrayOutputWithContext(context.Background())
}

func (i LoadBalancerBackendAddressPoolReferenceArray) ToLoadBalancerBackendAddressPoolReferenceArrayOutputWithContext(ctx context.Context) LoadBalancerBackendAddressPoolReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendAddressPoolReferenceArrayOutput)
}

// Defines reference to load balancer backend address pools.
type LoadBalancerBackendAddressPoolReferenceOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressPoolReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendAddressPoolReference)(nil)).Elem()
}

func (o LoadBalancerBackendAddressPoolReferenceOutput) ToLoadBalancerBackendAddressPoolReferenceOutput() LoadBalancerBackendAddressPoolReferenceOutput {
	return o
}

func (o LoadBalancerBackendAddressPoolReferenceOutput) ToLoadBalancerBackendAddressPoolReferenceOutputWithContext(ctx context.Context) LoadBalancerBackendAddressPoolReferenceOutput {
	return o
}

// Gets the name of the proxy resource on the target side.
func (o LoadBalancerBackendAddressPoolReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressPoolReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o LoadBalancerBackendAddressPoolReferenceOutput) SourceArmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressPoolReference) string { return v.SourceArmResourceId }).(pulumi.StringOutput)
}

type LoadBalancerBackendAddressPoolReferenceArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressPoolReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendAddressPoolReference)(nil)).Elem()
}

func (o LoadBalancerBackendAddressPoolReferenceArrayOutput) ToLoadBalancerBackendAddressPoolReferenceArrayOutput() LoadBalancerBackendAddressPoolReferenceArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressPoolReferenceArrayOutput) ToLoadBalancerBackendAddressPoolReferenceArrayOutputWithContext(ctx context.Context) LoadBalancerBackendAddressPoolReferenceArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressPoolReferenceArrayOutput) Index(i pulumi.IntInput) LoadBalancerBackendAddressPoolReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerBackendAddressPoolReference {
		return vs[0].([]LoadBalancerBackendAddressPoolReference)[vs[1].(int)]
	}).(LoadBalancerBackendAddressPoolReferenceOutput)
}

// Defines reference to load balancer backend address pools.
type LoadBalancerBackendAddressPoolReferenceInvokeResponse struct {
	// Gets the name of the proxy resource on the target side.
	Name *string `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// LoadBalancerBackendAddressPoolReferenceInvokeResponseInput is an input type that accepts LoadBalancerBackendAddressPoolReferenceInvokeResponseArgs and LoadBalancerBackendAddressPoolReferenceInvokeResponseOutput values.
// You can construct a concrete instance of `LoadBalancerBackendAddressPoolReferenceInvokeResponseInput` via:
//
//          LoadBalancerBackendAddressPoolReferenceInvokeResponseArgs{...}
type LoadBalancerBackendAddressPoolReferenceInvokeResponseInput interface {
	pulumi.Input

	ToLoadBalancerBackendAddressPoolReferenceInvokeResponseOutput() LoadBalancerBackendAddressPoolReferenceInvokeResponseOutput
	ToLoadBalancerBackendAddressPoolReferenceInvokeResponseOutputWithContext(context.Context) LoadBalancerBackendAddressPoolReferenceInvokeResponseOutput
}

// Defines reference to load balancer backend address pools.
type LoadBalancerBackendAddressPoolReferenceInvokeResponseArgs struct {
	// Gets the name of the proxy resource on the target side.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId pulumi.StringInput `pulumi:"sourceArmResourceId"`
}

func (LoadBalancerBackendAddressPoolReferenceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendAddressPoolReferenceInvokeResponse)(nil)).Elem()
}

func (i LoadBalancerBackendAddressPoolReferenceInvokeResponseArgs) ToLoadBalancerBackendAddressPoolReferenceInvokeResponseOutput() LoadBalancerBackendAddressPoolReferenceInvokeResponseOutput {
	return i.ToLoadBalancerBackendAddressPoolReferenceInvokeResponseOutputWithContext(context.Background())
}

func (i LoadBalancerBackendAddressPoolReferenceInvokeResponseArgs) ToLoadBalancerBackendAddressPoolReferenceInvokeResponseOutputWithContext(ctx context.Context) LoadBalancerBackendAddressPoolReferenceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendAddressPoolReferenceInvokeResponseOutput)
}

// LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayInput is an input type that accepts LoadBalancerBackendAddressPoolReferenceInvokeResponseArray and LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput values.
// You can construct a concrete instance of `LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayInput` via:
//
//          LoadBalancerBackendAddressPoolReferenceInvokeResponseArray{ LoadBalancerBackendAddressPoolReferenceInvokeResponseArgs{...} }
type LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayInput interface {
	pulumi.Input

	ToLoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput() LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput
	ToLoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutputWithContext(context.Context) LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput
}

type LoadBalancerBackendAddressPoolReferenceInvokeResponseArray []LoadBalancerBackendAddressPoolReferenceInvokeResponseInput

func (LoadBalancerBackendAddressPoolReferenceInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendAddressPoolReferenceInvokeResponse)(nil)).Elem()
}

func (i LoadBalancerBackendAddressPoolReferenceInvokeResponseArray) ToLoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput() LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput {
	return i.ToLoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutputWithContext(context.Background())
}

func (i LoadBalancerBackendAddressPoolReferenceInvokeResponseArray) ToLoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutputWithContext(ctx context.Context) LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput)
}

// Defines reference to load balancer backend address pools.
type LoadBalancerBackendAddressPoolReferenceInvokeResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressPoolReferenceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendAddressPoolReferenceInvokeResponse)(nil)).Elem()
}

func (o LoadBalancerBackendAddressPoolReferenceInvokeResponseOutput) ToLoadBalancerBackendAddressPoolReferenceInvokeResponseOutput() LoadBalancerBackendAddressPoolReferenceInvokeResponseOutput {
	return o
}

func (o LoadBalancerBackendAddressPoolReferenceInvokeResponseOutput) ToLoadBalancerBackendAddressPoolReferenceInvokeResponseOutputWithContext(ctx context.Context) LoadBalancerBackendAddressPoolReferenceInvokeResponseOutput {
	return o
}

// Gets the name of the proxy resource on the target side.
func (o LoadBalancerBackendAddressPoolReferenceInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressPoolReferenceInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o LoadBalancerBackendAddressPoolReferenceInvokeResponseOutput) SourceArmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressPoolReferenceInvokeResponse) string { return v.SourceArmResourceId }).(pulumi.StringOutput)
}

type LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendAddressPoolReferenceInvokeResponse)(nil)).Elem()
}

func (o LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput) ToLoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput() LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput) ToLoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutputWithContext(ctx context.Context) LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancerBackendAddressPoolReferenceInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerBackendAddressPoolReferenceInvokeResponse {
		return vs[0].([]LoadBalancerBackendAddressPoolReferenceInvokeResponse)[vs[1].(int)]
	}).(LoadBalancerBackendAddressPoolReferenceInvokeResponseOutput)
}

// Defines reference to load balancer backend address pools.
type LoadBalancerBackendAddressPoolReferenceResponse struct {
	// Gets the name of the proxy resource on the target side.
	Name *string `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// LoadBalancerBackendAddressPoolReferenceResponseInput is an input type that accepts LoadBalancerBackendAddressPoolReferenceResponseArgs and LoadBalancerBackendAddressPoolReferenceResponseOutput values.
// You can construct a concrete instance of `LoadBalancerBackendAddressPoolReferenceResponseInput` via:
//
//          LoadBalancerBackendAddressPoolReferenceResponseArgs{...}
type LoadBalancerBackendAddressPoolReferenceResponseInput interface {
	pulumi.Input

	ToLoadBalancerBackendAddressPoolReferenceResponseOutput() LoadBalancerBackendAddressPoolReferenceResponseOutput
	ToLoadBalancerBackendAddressPoolReferenceResponseOutputWithContext(context.Context) LoadBalancerBackendAddressPoolReferenceResponseOutput
}

// Defines reference to load balancer backend address pools.
type LoadBalancerBackendAddressPoolReferenceResponseArgs struct {
	// Gets the name of the proxy resource on the target side.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId pulumi.StringInput `pulumi:"sourceArmResourceId"`
}

func (LoadBalancerBackendAddressPoolReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendAddressPoolReferenceResponse)(nil)).Elem()
}

func (i LoadBalancerBackendAddressPoolReferenceResponseArgs) ToLoadBalancerBackendAddressPoolReferenceResponseOutput() LoadBalancerBackendAddressPoolReferenceResponseOutput {
	return i.ToLoadBalancerBackendAddressPoolReferenceResponseOutputWithContext(context.Background())
}

func (i LoadBalancerBackendAddressPoolReferenceResponseArgs) ToLoadBalancerBackendAddressPoolReferenceResponseOutputWithContext(ctx context.Context) LoadBalancerBackendAddressPoolReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendAddressPoolReferenceResponseOutput)
}

// LoadBalancerBackendAddressPoolReferenceResponseArrayInput is an input type that accepts LoadBalancerBackendAddressPoolReferenceResponseArray and LoadBalancerBackendAddressPoolReferenceResponseArrayOutput values.
// You can construct a concrete instance of `LoadBalancerBackendAddressPoolReferenceResponseArrayInput` via:
//
//          LoadBalancerBackendAddressPoolReferenceResponseArray{ LoadBalancerBackendAddressPoolReferenceResponseArgs{...} }
type LoadBalancerBackendAddressPoolReferenceResponseArrayInput interface {
	pulumi.Input

	ToLoadBalancerBackendAddressPoolReferenceResponseArrayOutput() LoadBalancerBackendAddressPoolReferenceResponseArrayOutput
	ToLoadBalancerBackendAddressPoolReferenceResponseArrayOutputWithContext(context.Context) LoadBalancerBackendAddressPoolReferenceResponseArrayOutput
}

type LoadBalancerBackendAddressPoolReferenceResponseArray []LoadBalancerBackendAddressPoolReferenceResponseInput

func (LoadBalancerBackendAddressPoolReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendAddressPoolReferenceResponse)(nil)).Elem()
}

func (i LoadBalancerBackendAddressPoolReferenceResponseArray) ToLoadBalancerBackendAddressPoolReferenceResponseArrayOutput() LoadBalancerBackendAddressPoolReferenceResponseArrayOutput {
	return i.ToLoadBalancerBackendAddressPoolReferenceResponseArrayOutputWithContext(context.Background())
}

func (i LoadBalancerBackendAddressPoolReferenceResponseArray) ToLoadBalancerBackendAddressPoolReferenceResponseArrayOutputWithContext(ctx context.Context) LoadBalancerBackendAddressPoolReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendAddressPoolReferenceResponseArrayOutput)
}

// Defines reference to load balancer backend address pools.
type LoadBalancerBackendAddressPoolReferenceResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressPoolReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendAddressPoolReferenceResponse)(nil)).Elem()
}

func (o LoadBalancerBackendAddressPoolReferenceResponseOutput) ToLoadBalancerBackendAddressPoolReferenceResponseOutput() LoadBalancerBackendAddressPoolReferenceResponseOutput {
	return o
}

func (o LoadBalancerBackendAddressPoolReferenceResponseOutput) ToLoadBalancerBackendAddressPoolReferenceResponseOutputWithContext(ctx context.Context) LoadBalancerBackendAddressPoolReferenceResponseOutput {
	return o
}

// Gets the name of the proxy resource on the target side.
func (o LoadBalancerBackendAddressPoolReferenceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressPoolReferenceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o LoadBalancerBackendAddressPoolReferenceResponseOutput) SourceArmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressPoolReferenceResponse) string { return v.SourceArmResourceId }).(pulumi.StringOutput)
}

type LoadBalancerBackendAddressPoolReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressPoolReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendAddressPoolReferenceResponse)(nil)).Elem()
}

func (o LoadBalancerBackendAddressPoolReferenceResponseArrayOutput) ToLoadBalancerBackendAddressPoolReferenceResponseArrayOutput() LoadBalancerBackendAddressPoolReferenceResponseArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressPoolReferenceResponseArrayOutput) ToLoadBalancerBackendAddressPoolReferenceResponseArrayOutputWithContext(ctx context.Context) LoadBalancerBackendAddressPoolReferenceResponseArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressPoolReferenceResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancerBackendAddressPoolReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerBackendAddressPoolReferenceResponse {
		return vs[0].([]LoadBalancerBackendAddressPoolReferenceResponse)[vs[1].(int)]
	}).(LoadBalancerBackendAddressPoolReferenceResponseOutput)
}

// Defines reference to load balancer NAT rules.
type LoadBalancerNatRuleReference struct {
	// Gets the name of the proxy resource on the target side.
	Name *string `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// LoadBalancerNatRuleReferenceInput is an input type that accepts LoadBalancerNatRuleReferenceArgs and LoadBalancerNatRuleReferenceOutput values.
// You can construct a concrete instance of `LoadBalancerNatRuleReferenceInput` via:
//
//          LoadBalancerNatRuleReferenceArgs{...}
type LoadBalancerNatRuleReferenceInput interface {
	pulumi.Input

	ToLoadBalancerNatRuleReferenceOutput() LoadBalancerNatRuleReferenceOutput
	ToLoadBalancerNatRuleReferenceOutputWithContext(context.Context) LoadBalancerNatRuleReferenceOutput
}

// Defines reference to load balancer NAT rules.
type LoadBalancerNatRuleReferenceArgs struct {
	// Gets the name of the proxy resource on the target side.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId pulumi.StringInput `pulumi:"sourceArmResourceId"`
}

func (LoadBalancerNatRuleReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerNatRuleReference)(nil)).Elem()
}

func (i LoadBalancerNatRuleReferenceArgs) ToLoadBalancerNatRuleReferenceOutput() LoadBalancerNatRuleReferenceOutput {
	return i.ToLoadBalancerNatRuleReferenceOutputWithContext(context.Background())
}

func (i LoadBalancerNatRuleReferenceArgs) ToLoadBalancerNatRuleReferenceOutputWithContext(ctx context.Context) LoadBalancerNatRuleReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerNatRuleReferenceOutput)
}

// LoadBalancerNatRuleReferenceArrayInput is an input type that accepts LoadBalancerNatRuleReferenceArray and LoadBalancerNatRuleReferenceArrayOutput values.
// You can construct a concrete instance of `LoadBalancerNatRuleReferenceArrayInput` via:
//
//          LoadBalancerNatRuleReferenceArray{ LoadBalancerNatRuleReferenceArgs{...} }
type LoadBalancerNatRuleReferenceArrayInput interface {
	pulumi.Input

	ToLoadBalancerNatRuleReferenceArrayOutput() LoadBalancerNatRuleReferenceArrayOutput
	ToLoadBalancerNatRuleReferenceArrayOutputWithContext(context.Context) LoadBalancerNatRuleReferenceArrayOutput
}

type LoadBalancerNatRuleReferenceArray []LoadBalancerNatRuleReferenceInput

func (LoadBalancerNatRuleReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerNatRuleReference)(nil)).Elem()
}

func (i LoadBalancerNatRuleReferenceArray) ToLoadBalancerNatRuleReferenceArrayOutput() LoadBalancerNatRuleReferenceArrayOutput {
	return i.ToLoadBalancerNatRuleReferenceArrayOutputWithContext(context.Background())
}

func (i LoadBalancerNatRuleReferenceArray) ToLoadBalancerNatRuleReferenceArrayOutputWithContext(ctx context.Context) LoadBalancerNatRuleReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerNatRuleReferenceArrayOutput)
}

// Defines reference to load balancer NAT rules.
type LoadBalancerNatRuleReferenceOutput struct{ *pulumi.OutputState }

func (LoadBalancerNatRuleReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerNatRuleReference)(nil)).Elem()
}

func (o LoadBalancerNatRuleReferenceOutput) ToLoadBalancerNatRuleReferenceOutput() LoadBalancerNatRuleReferenceOutput {
	return o
}

func (o LoadBalancerNatRuleReferenceOutput) ToLoadBalancerNatRuleReferenceOutputWithContext(ctx context.Context) LoadBalancerNatRuleReferenceOutput {
	return o
}

// Gets the name of the proxy resource on the target side.
func (o LoadBalancerNatRuleReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerNatRuleReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o LoadBalancerNatRuleReferenceOutput) SourceArmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerNatRuleReference) string { return v.SourceArmResourceId }).(pulumi.StringOutput)
}

type LoadBalancerNatRuleReferenceArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerNatRuleReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerNatRuleReference)(nil)).Elem()
}

func (o LoadBalancerNatRuleReferenceArrayOutput) ToLoadBalancerNatRuleReferenceArrayOutput() LoadBalancerNatRuleReferenceArrayOutput {
	return o
}

func (o LoadBalancerNatRuleReferenceArrayOutput) ToLoadBalancerNatRuleReferenceArrayOutputWithContext(ctx context.Context) LoadBalancerNatRuleReferenceArrayOutput {
	return o
}

func (o LoadBalancerNatRuleReferenceArrayOutput) Index(i pulumi.IntInput) LoadBalancerNatRuleReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerNatRuleReference {
		return vs[0].([]LoadBalancerNatRuleReference)[vs[1].(int)]
	}).(LoadBalancerNatRuleReferenceOutput)
}

// Defines reference to load balancer NAT rules.
type LoadBalancerNatRuleReferenceInvokeResponse struct {
	// Gets the name of the proxy resource on the target side.
	Name *string `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// LoadBalancerNatRuleReferenceInvokeResponseInput is an input type that accepts LoadBalancerNatRuleReferenceInvokeResponseArgs and LoadBalancerNatRuleReferenceInvokeResponseOutput values.
// You can construct a concrete instance of `LoadBalancerNatRuleReferenceInvokeResponseInput` via:
//
//          LoadBalancerNatRuleReferenceInvokeResponseArgs{...}
type LoadBalancerNatRuleReferenceInvokeResponseInput interface {
	pulumi.Input

	ToLoadBalancerNatRuleReferenceInvokeResponseOutput() LoadBalancerNatRuleReferenceInvokeResponseOutput
	ToLoadBalancerNatRuleReferenceInvokeResponseOutputWithContext(context.Context) LoadBalancerNatRuleReferenceInvokeResponseOutput
}

// Defines reference to load balancer NAT rules.
type LoadBalancerNatRuleReferenceInvokeResponseArgs struct {
	// Gets the name of the proxy resource on the target side.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId pulumi.StringInput `pulumi:"sourceArmResourceId"`
}

func (LoadBalancerNatRuleReferenceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerNatRuleReferenceInvokeResponse)(nil)).Elem()
}

func (i LoadBalancerNatRuleReferenceInvokeResponseArgs) ToLoadBalancerNatRuleReferenceInvokeResponseOutput() LoadBalancerNatRuleReferenceInvokeResponseOutput {
	return i.ToLoadBalancerNatRuleReferenceInvokeResponseOutputWithContext(context.Background())
}

func (i LoadBalancerNatRuleReferenceInvokeResponseArgs) ToLoadBalancerNatRuleReferenceInvokeResponseOutputWithContext(ctx context.Context) LoadBalancerNatRuleReferenceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerNatRuleReferenceInvokeResponseOutput)
}

// LoadBalancerNatRuleReferenceInvokeResponseArrayInput is an input type that accepts LoadBalancerNatRuleReferenceInvokeResponseArray and LoadBalancerNatRuleReferenceInvokeResponseArrayOutput values.
// You can construct a concrete instance of `LoadBalancerNatRuleReferenceInvokeResponseArrayInput` via:
//
//          LoadBalancerNatRuleReferenceInvokeResponseArray{ LoadBalancerNatRuleReferenceInvokeResponseArgs{...} }
type LoadBalancerNatRuleReferenceInvokeResponseArrayInput interface {
	pulumi.Input

	ToLoadBalancerNatRuleReferenceInvokeResponseArrayOutput() LoadBalancerNatRuleReferenceInvokeResponseArrayOutput
	ToLoadBalancerNatRuleReferenceInvokeResponseArrayOutputWithContext(context.Context) LoadBalancerNatRuleReferenceInvokeResponseArrayOutput
}

type LoadBalancerNatRuleReferenceInvokeResponseArray []LoadBalancerNatRuleReferenceInvokeResponseInput

func (LoadBalancerNatRuleReferenceInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerNatRuleReferenceInvokeResponse)(nil)).Elem()
}

func (i LoadBalancerNatRuleReferenceInvokeResponseArray) ToLoadBalancerNatRuleReferenceInvokeResponseArrayOutput() LoadBalancerNatRuleReferenceInvokeResponseArrayOutput {
	return i.ToLoadBalancerNatRuleReferenceInvokeResponseArrayOutputWithContext(context.Background())
}

func (i LoadBalancerNatRuleReferenceInvokeResponseArray) ToLoadBalancerNatRuleReferenceInvokeResponseArrayOutputWithContext(ctx context.Context) LoadBalancerNatRuleReferenceInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerNatRuleReferenceInvokeResponseArrayOutput)
}

// Defines reference to load balancer NAT rules.
type LoadBalancerNatRuleReferenceInvokeResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerNatRuleReferenceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerNatRuleReferenceInvokeResponse)(nil)).Elem()
}

func (o LoadBalancerNatRuleReferenceInvokeResponseOutput) ToLoadBalancerNatRuleReferenceInvokeResponseOutput() LoadBalancerNatRuleReferenceInvokeResponseOutput {
	return o
}

func (o LoadBalancerNatRuleReferenceInvokeResponseOutput) ToLoadBalancerNatRuleReferenceInvokeResponseOutputWithContext(ctx context.Context) LoadBalancerNatRuleReferenceInvokeResponseOutput {
	return o
}

// Gets the name of the proxy resource on the target side.
func (o LoadBalancerNatRuleReferenceInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerNatRuleReferenceInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o LoadBalancerNatRuleReferenceInvokeResponseOutput) SourceArmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerNatRuleReferenceInvokeResponse) string { return v.SourceArmResourceId }).(pulumi.StringOutput)
}

type LoadBalancerNatRuleReferenceInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerNatRuleReferenceInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerNatRuleReferenceInvokeResponse)(nil)).Elem()
}

func (o LoadBalancerNatRuleReferenceInvokeResponseArrayOutput) ToLoadBalancerNatRuleReferenceInvokeResponseArrayOutput() LoadBalancerNatRuleReferenceInvokeResponseArrayOutput {
	return o
}

func (o LoadBalancerNatRuleReferenceInvokeResponseArrayOutput) ToLoadBalancerNatRuleReferenceInvokeResponseArrayOutputWithContext(ctx context.Context) LoadBalancerNatRuleReferenceInvokeResponseArrayOutput {
	return o
}

func (o LoadBalancerNatRuleReferenceInvokeResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancerNatRuleReferenceInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerNatRuleReferenceInvokeResponse {
		return vs[0].([]LoadBalancerNatRuleReferenceInvokeResponse)[vs[1].(int)]
	}).(LoadBalancerNatRuleReferenceInvokeResponseOutput)
}

// Defines reference to load balancer NAT rules.
type LoadBalancerNatRuleReferenceResponse struct {
	// Gets the name of the proxy resource on the target side.
	Name *string `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// LoadBalancerNatRuleReferenceResponseInput is an input type that accepts LoadBalancerNatRuleReferenceResponseArgs and LoadBalancerNatRuleReferenceResponseOutput values.
// You can construct a concrete instance of `LoadBalancerNatRuleReferenceResponseInput` via:
//
//          LoadBalancerNatRuleReferenceResponseArgs{...}
type LoadBalancerNatRuleReferenceResponseInput interface {
	pulumi.Input

	ToLoadBalancerNatRuleReferenceResponseOutput() LoadBalancerNatRuleReferenceResponseOutput
	ToLoadBalancerNatRuleReferenceResponseOutputWithContext(context.Context) LoadBalancerNatRuleReferenceResponseOutput
}

// Defines reference to load balancer NAT rules.
type LoadBalancerNatRuleReferenceResponseArgs struct {
	// Gets the name of the proxy resource on the target side.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId pulumi.StringInput `pulumi:"sourceArmResourceId"`
}

func (LoadBalancerNatRuleReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerNatRuleReferenceResponse)(nil)).Elem()
}

func (i LoadBalancerNatRuleReferenceResponseArgs) ToLoadBalancerNatRuleReferenceResponseOutput() LoadBalancerNatRuleReferenceResponseOutput {
	return i.ToLoadBalancerNatRuleReferenceResponseOutputWithContext(context.Background())
}

func (i LoadBalancerNatRuleReferenceResponseArgs) ToLoadBalancerNatRuleReferenceResponseOutputWithContext(ctx context.Context) LoadBalancerNatRuleReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerNatRuleReferenceResponseOutput)
}

// LoadBalancerNatRuleReferenceResponseArrayInput is an input type that accepts LoadBalancerNatRuleReferenceResponseArray and LoadBalancerNatRuleReferenceResponseArrayOutput values.
// You can construct a concrete instance of `LoadBalancerNatRuleReferenceResponseArrayInput` via:
//
//          LoadBalancerNatRuleReferenceResponseArray{ LoadBalancerNatRuleReferenceResponseArgs{...} }
type LoadBalancerNatRuleReferenceResponseArrayInput interface {
	pulumi.Input

	ToLoadBalancerNatRuleReferenceResponseArrayOutput() LoadBalancerNatRuleReferenceResponseArrayOutput
	ToLoadBalancerNatRuleReferenceResponseArrayOutputWithContext(context.Context) LoadBalancerNatRuleReferenceResponseArrayOutput
}

type LoadBalancerNatRuleReferenceResponseArray []LoadBalancerNatRuleReferenceResponseInput

func (LoadBalancerNatRuleReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerNatRuleReferenceResponse)(nil)).Elem()
}

func (i LoadBalancerNatRuleReferenceResponseArray) ToLoadBalancerNatRuleReferenceResponseArrayOutput() LoadBalancerNatRuleReferenceResponseArrayOutput {
	return i.ToLoadBalancerNatRuleReferenceResponseArrayOutputWithContext(context.Background())
}

func (i LoadBalancerNatRuleReferenceResponseArray) ToLoadBalancerNatRuleReferenceResponseArrayOutputWithContext(ctx context.Context) LoadBalancerNatRuleReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerNatRuleReferenceResponseArrayOutput)
}

// Defines reference to load balancer NAT rules.
type LoadBalancerNatRuleReferenceResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerNatRuleReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerNatRuleReferenceResponse)(nil)).Elem()
}

func (o LoadBalancerNatRuleReferenceResponseOutput) ToLoadBalancerNatRuleReferenceResponseOutput() LoadBalancerNatRuleReferenceResponseOutput {
	return o
}

func (o LoadBalancerNatRuleReferenceResponseOutput) ToLoadBalancerNatRuleReferenceResponseOutputWithContext(ctx context.Context) LoadBalancerNatRuleReferenceResponseOutput {
	return o
}

// Gets the name of the proxy resource on the target side.
func (o LoadBalancerNatRuleReferenceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerNatRuleReferenceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o LoadBalancerNatRuleReferenceResponseOutput) SourceArmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerNatRuleReferenceResponse) string { return v.SourceArmResourceId }).(pulumi.StringOutput)
}

type LoadBalancerNatRuleReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerNatRuleReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerNatRuleReferenceResponse)(nil)).Elem()
}

func (o LoadBalancerNatRuleReferenceResponseArrayOutput) ToLoadBalancerNatRuleReferenceResponseArrayOutput() LoadBalancerNatRuleReferenceResponseArrayOutput {
	return o
}

func (o LoadBalancerNatRuleReferenceResponseArrayOutput) ToLoadBalancerNatRuleReferenceResponseArrayOutputWithContext(ctx context.Context) LoadBalancerNatRuleReferenceResponseArrayOutput {
	return o
}

func (o LoadBalancerNatRuleReferenceResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancerNatRuleReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerNatRuleReferenceResponse {
		return vs[0].([]LoadBalancerNatRuleReferenceResponse)[vs[1].(int)]
	}).(LoadBalancerNatRuleReferenceResponseOutput)
}

// Defines the load balancer resource settings.
type LoadBalancerResourceSettings struct {
	// Gets or sets the backend address pools of the load balancer.
	BackendAddressPools []LBBackendAddressPoolResourceSettings `pulumi:"backendAddressPools"`
	// Gets or sets the frontend IP configurations of the load balancer.
	FrontendIPConfigurations []LBFrontendIPConfigurationResourceSettings `pulumi:"frontendIPConfigurations"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/loadBalancers'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets load balancer sku (Basic/Standard).
	Sku *string `pulumi:"sku"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets the csv list of zones common for all frontend IP configurations. Note this is given
	//  precedence only if frontend IP configurations settings are not present.
	Zones *string `pulumi:"zones"`
}

// LoadBalancerResourceSettingsInput is an input type that accepts LoadBalancerResourceSettingsArgs and LoadBalancerResourceSettingsOutput values.
// You can construct a concrete instance of `LoadBalancerResourceSettingsInput` via:
//
//          LoadBalancerResourceSettingsArgs{...}
type LoadBalancerResourceSettingsInput interface {
	pulumi.Input

	ToLoadBalancerResourceSettingsOutput() LoadBalancerResourceSettingsOutput
	ToLoadBalancerResourceSettingsOutputWithContext(context.Context) LoadBalancerResourceSettingsOutput
}

// Defines the load balancer resource settings.
type LoadBalancerResourceSettingsArgs struct {
	// Gets or sets the backend address pools of the load balancer.
	BackendAddressPools LBBackendAddressPoolResourceSettingsArrayInput `pulumi:"backendAddressPools"`
	// Gets or sets the frontend IP configurations of the load balancer.
	FrontendIPConfigurations LBFrontendIPConfigurationResourceSettingsArrayInput `pulumi:"frontendIPConfigurations"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/loadBalancers'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets load balancer sku (Basic/Standard).
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Gets or sets the csv list of zones common for all frontend IP configurations. Note this is given
	//  precedence only if frontend IP configurations settings are not present.
	Zones pulumi.StringPtrInput `pulumi:"zones"`
}

func (LoadBalancerResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerResourceSettings)(nil)).Elem()
}

func (i LoadBalancerResourceSettingsArgs) ToLoadBalancerResourceSettingsOutput() LoadBalancerResourceSettingsOutput {
	return i.ToLoadBalancerResourceSettingsOutputWithContext(context.Background())
}

func (i LoadBalancerResourceSettingsArgs) ToLoadBalancerResourceSettingsOutputWithContext(ctx context.Context) LoadBalancerResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerResourceSettingsOutput)
}

// Defines the load balancer resource settings.
type LoadBalancerResourceSettingsOutput struct{ *pulumi.OutputState }

func (LoadBalancerResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerResourceSettings)(nil)).Elem()
}

func (o LoadBalancerResourceSettingsOutput) ToLoadBalancerResourceSettingsOutput() LoadBalancerResourceSettingsOutput {
	return o
}

func (o LoadBalancerResourceSettingsOutput) ToLoadBalancerResourceSettingsOutputWithContext(ctx context.Context) LoadBalancerResourceSettingsOutput {
	return o
}

// Gets or sets the backend address pools of the load balancer.
func (o LoadBalancerResourceSettingsOutput) BackendAddressPools() LBBackendAddressPoolResourceSettingsArrayOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettings) []LBBackendAddressPoolResourceSettings {
		return v.BackendAddressPools
	}).(LBBackendAddressPoolResourceSettingsArrayOutput)
}

// Gets or sets the frontend IP configurations of the load balancer.
func (o LoadBalancerResourceSettingsOutput) FrontendIPConfigurations() LBFrontendIPConfigurationResourceSettingsArrayOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettings) []LBFrontendIPConfigurationResourceSettings {
		return v.FrontendIPConfigurations
	}).(LBFrontendIPConfigurationResourceSettingsArrayOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Network/loadBalancers'.
func (o LoadBalancerResourceSettingsOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettings) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets load balancer sku (Basic/Standard).
func (o LoadBalancerResourceSettingsOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettings) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Gets or sets the target Resource name.
func (o LoadBalancerResourceSettingsOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettings) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Gets or sets the csv list of zones common for all frontend IP configurations. Note this is given
//  precedence only if frontend IP configurations settings are not present.
func (o LoadBalancerResourceSettingsOutput) Zones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettings) *string { return v.Zones }).(pulumi.StringPtrOutput)
}

// Defines the load balancer resource settings.
type LoadBalancerResourceSettingsInvokeResponse struct {
	// Gets or sets the backend address pools of the load balancer.
	BackendAddressPools []LBBackendAddressPoolResourceSettingsInvokeResponse `pulumi:"backendAddressPools"`
	// Gets or sets the frontend IP configurations of the load balancer.
	FrontendIPConfigurations []LBFrontendIPConfigurationResourceSettingsInvokeResponse `pulumi:"frontendIPConfigurations"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/loadBalancers'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets load balancer sku (Basic/Standard).
	Sku *string `pulumi:"sku"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets the csv list of zones common for all frontend IP configurations. Note this is given
	//  precedence only if frontend IP configurations settings are not present.
	Zones *string `pulumi:"zones"`
}

// LoadBalancerResourceSettingsInvokeResponseInput is an input type that accepts LoadBalancerResourceSettingsInvokeResponseArgs and LoadBalancerResourceSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `LoadBalancerResourceSettingsInvokeResponseInput` via:
//
//          LoadBalancerResourceSettingsInvokeResponseArgs{...}
type LoadBalancerResourceSettingsInvokeResponseInput interface {
	pulumi.Input

	ToLoadBalancerResourceSettingsInvokeResponseOutput() LoadBalancerResourceSettingsInvokeResponseOutput
	ToLoadBalancerResourceSettingsInvokeResponseOutputWithContext(context.Context) LoadBalancerResourceSettingsInvokeResponseOutput
}

// Defines the load balancer resource settings.
type LoadBalancerResourceSettingsInvokeResponseArgs struct {
	// Gets or sets the backend address pools of the load balancer.
	BackendAddressPools LBBackendAddressPoolResourceSettingsInvokeResponseArrayInput `pulumi:"backendAddressPools"`
	// Gets or sets the frontend IP configurations of the load balancer.
	FrontendIPConfigurations LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayInput `pulumi:"frontendIPConfigurations"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/loadBalancers'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets load balancer sku (Basic/Standard).
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Gets or sets the csv list of zones common for all frontend IP configurations. Note this is given
	//  precedence only if frontend IP configurations settings are not present.
	Zones pulumi.StringPtrInput `pulumi:"zones"`
}

func (LoadBalancerResourceSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i LoadBalancerResourceSettingsInvokeResponseArgs) ToLoadBalancerResourceSettingsInvokeResponseOutput() LoadBalancerResourceSettingsInvokeResponseOutput {
	return i.ToLoadBalancerResourceSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i LoadBalancerResourceSettingsInvokeResponseArgs) ToLoadBalancerResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) LoadBalancerResourceSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerResourceSettingsInvokeResponseOutput)
}

// Defines the load balancer resource settings.
type LoadBalancerResourceSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerResourceSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o LoadBalancerResourceSettingsInvokeResponseOutput) ToLoadBalancerResourceSettingsInvokeResponseOutput() LoadBalancerResourceSettingsInvokeResponseOutput {
	return o
}

func (o LoadBalancerResourceSettingsInvokeResponseOutput) ToLoadBalancerResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) LoadBalancerResourceSettingsInvokeResponseOutput {
	return o
}

// Gets or sets the backend address pools of the load balancer.
func (o LoadBalancerResourceSettingsInvokeResponseOutput) BackendAddressPools() LBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettingsInvokeResponse) []LBBackendAddressPoolResourceSettingsInvokeResponse {
		return v.BackendAddressPools
	}).(LBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput)
}

// Gets or sets the frontend IP configurations of the load balancer.
func (o LoadBalancerResourceSettingsInvokeResponseOutput) FrontendIPConfigurations() LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettingsInvokeResponse) []LBFrontendIPConfigurationResourceSettingsInvokeResponse {
		return v.FrontendIPConfigurations
	}).(LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Network/loadBalancers'.
func (o LoadBalancerResourceSettingsInvokeResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettingsInvokeResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets load balancer sku (Basic/Standard).
func (o LoadBalancerResourceSettingsInvokeResponseOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettingsInvokeResponse) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Gets or sets the target Resource name.
func (o LoadBalancerResourceSettingsInvokeResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettingsInvokeResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Gets or sets the csv list of zones common for all frontend IP configurations. Note this is given
//  precedence only if frontend IP configurations settings are not present.
func (o LoadBalancerResourceSettingsInvokeResponseOutput) Zones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettingsInvokeResponse) *string { return v.Zones }).(pulumi.StringPtrOutput)
}

// Defines the load balancer resource settings.
type LoadBalancerResourceSettingsResponse struct {
	// Gets or sets the backend address pools of the load balancer.
	BackendAddressPools []LBBackendAddressPoolResourceSettingsResponse `pulumi:"backendAddressPools"`
	// Gets or sets the frontend IP configurations of the load balancer.
	FrontendIPConfigurations []LBFrontendIPConfigurationResourceSettingsResponse `pulumi:"frontendIPConfigurations"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/loadBalancers'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets load balancer sku (Basic/Standard).
	Sku *string `pulumi:"sku"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets the csv list of zones common for all frontend IP configurations. Note this is given
	//  precedence only if frontend IP configurations settings are not present.
	Zones *string `pulumi:"zones"`
}

// LoadBalancerResourceSettingsResponseInput is an input type that accepts LoadBalancerResourceSettingsResponseArgs and LoadBalancerResourceSettingsResponseOutput values.
// You can construct a concrete instance of `LoadBalancerResourceSettingsResponseInput` via:
//
//          LoadBalancerResourceSettingsResponseArgs{...}
type LoadBalancerResourceSettingsResponseInput interface {
	pulumi.Input

	ToLoadBalancerResourceSettingsResponseOutput() LoadBalancerResourceSettingsResponseOutput
	ToLoadBalancerResourceSettingsResponseOutputWithContext(context.Context) LoadBalancerResourceSettingsResponseOutput
}

// Defines the load balancer resource settings.
type LoadBalancerResourceSettingsResponseArgs struct {
	// Gets or sets the backend address pools of the load balancer.
	BackendAddressPools LBBackendAddressPoolResourceSettingsResponseArrayInput `pulumi:"backendAddressPools"`
	// Gets or sets the frontend IP configurations of the load balancer.
	FrontendIPConfigurations LBFrontendIPConfigurationResourceSettingsResponseArrayInput `pulumi:"frontendIPConfigurations"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/loadBalancers'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets load balancer sku (Basic/Standard).
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Gets or sets the csv list of zones common for all frontend IP configurations. Note this is given
	//  precedence only if frontend IP configurations settings are not present.
	Zones pulumi.StringPtrInput `pulumi:"zones"`
}

func (LoadBalancerResourceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerResourceSettingsResponse)(nil)).Elem()
}

func (i LoadBalancerResourceSettingsResponseArgs) ToLoadBalancerResourceSettingsResponseOutput() LoadBalancerResourceSettingsResponseOutput {
	return i.ToLoadBalancerResourceSettingsResponseOutputWithContext(context.Background())
}

func (i LoadBalancerResourceSettingsResponseArgs) ToLoadBalancerResourceSettingsResponseOutputWithContext(ctx context.Context) LoadBalancerResourceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerResourceSettingsResponseOutput)
}

// Defines the load balancer resource settings.
type LoadBalancerResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerResourceSettingsResponse)(nil)).Elem()
}

func (o LoadBalancerResourceSettingsResponseOutput) ToLoadBalancerResourceSettingsResponseOutput() LoadBalancerResourceSettingsResponseOutput {
	return o
}

func (o LoadBalancerResourceSettingsResponseOutput) ToLoadBalancerResourceSettingsResponseOutputWithContext(ctx context.Context) LoadBalancerResourceSettingsResponseOutput {
	return o
}

// Gets or sets the backend address pools of the load balancer.
func (o LoadBalancerResourceSettingsResponseOutput) BackendAddressPools() LBBackendAddressPoolResourceSettingsResponseArrayOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettingsResponse) []LBBackendAddressPoolResourceSettingsResponse {
		return v.BackendAddressPools
	}).(LBBackendAddressPoolResourceSettingsResponseArrayOutput)
}

// Gets or sets the frontend IP configurations of the load balancer.
func (o LoadBalancerResourceSettingsResponseOutput) FrontendIPConfigurations() LBFrontendIPConfigurationResourceSettingsResponseArrayOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettingsResponse) []LBFrontendIPConfigurationResourceSettingsResponse {
		return v.FrontendIPConfigurations
	}).(LBFrontendIPConfigurationResourceSettingsResponseArrayOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Network/loadBalancers'.
func (o LoadBalancerResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets load balancer sku (Basic/Standard).
func (o LoadBalancerResourceSettingsResponseOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettingsResponse) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Gets or sets the target Resource name.
func (o LoadBalancerResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Gets or sets the csv list of zones common for all frontend IP configurations. Note this is given
//  precedence only if frontend IP configurations settings are not present.
func (o LoadBalancerResourceSettingsResponseOutput) Zones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettingsResponse) *string { return v.Zones }).(pulumi.StringPtrOutput)
}

// Defines the properties for manual resolution.
type ManualResolutionPropertiesInvokeResponse struct {
	// Gets or sets the target resource ARM ID of the dependent resource if the resource type is Manual.
	TargetId *string `pulumi:"targetId"`
}

// ManualResolutionPropertiesInvokeResponseInput is an input type that accepts ManualResolutionPropertiesInvokeResponseArgs and ManualResolutionPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ManualResolutionPropertiesInvokeResponseInput` via:
//
//          ManualResolutionPropertiesInvokeResponseArgs{...}
type ManualResolutionPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToManualResolutionPropertiesInvokeResponseOutput() ManualResolutionPropertiesInvokeResponseOutput
	ToManualResolutionPropertiesInvokeResponseOutputWithContext(context.Context) ManualResolutionPropertiesInvokeResponseOutput
}

// Defines the properties for manual resolution.
type ManualResolutionPropertiesInvokeResponseArgs struct {
	// Gets or sets the target resource ARM ID of the dependent resource if the resource type is Manual.
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
}

func (ManualResolutionPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualResolutionPropertiesInvokeResponse)(nil)).Elem()
}

func (i ManualResolutionPropertiesInvokeResponseArgs) ToManualResolutionPropertiesInvokeResponseOutput() ManualResolutionPropertiesInvokeResponseOutput {
	return i.ToManualResolutionPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ManualResolutionPropertiesInvokeResponseArgs) ToManualResolutionPropertiesInvokeResponseOutputWithContext(ctx context.Context) ManualResolutionPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualResolutionPropertiesInvokeResponseOutput)
}

func (i ManualResolutionPropertiesInvokeResponseArgs) ToManualResolutionPropertiesInvokeResponsePtrOutput() ManualResolutionPropertiesInvokeResponsePtrOutput {
	return i.ToManualResolutionPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ManualResolutionPropertiesInvokeResponseArgs) ToManualResolutionPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) ManualResolutionPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualResolutionPropertiesInvokeResponseOutput).ToManualResolutionPropertiesInvokeResponsePtrOutputWithContext(ctx)
}

// ManualResolutionPropertiesInvokeResponsePtrInput is an input type that accepts ManualResolutionPropertiesInvokeResponseArgs, ManualResolutionPropertiesInvokeResponsePtr and ManualResolutionPropertiesInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ManualResolutionPropertiesInvokeResponsePtrInput` via:
//
//          ManualResolutionPropertiesInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ManualResolutionPropertiesInvokeResponsePtrInput interface {
	pulumi.Input

	ToManualResolutionPropertiesInvokeResponsePtrOutput() ManualResolutionPropertiesInvokeResponsePtrOutput
	ToManualResolutionPropertiesInvokeResponsePtrOutputWithContext(context.Context) ManualResolutionPropertiesInvokeResponsePtrOutput
}

type manualResolutionPropertiesInvokeResponsePtrType ManualResolutionPropertiesInvokeResponseArgs

func ManualResolutionPropertiesInvokeResponsePtr(v *ManualResolutionPropertiesInvokeResponseArgs) ManualResolutionPropertiesInvokeResponsePtrInput {
	return (*manualResolutionPropertiesInvokeResponsePtrType)(v)
}

func (*manualResolutionPropertiesInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualResolutionPropertiesInvokeResponse)(nil)).Elem()
}

func (i *manualResolutionPropertiesInvokeResponsePtrType) ToManualResolutionPropertiesInvokeResponsePtrOutput() ManualResolutionPropertiesInvokeResponsePtrOutput {
	return i.ToManualResolutionPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *manualResolutionPropertiesInvokeResponsePtrType) ToManualResolutionPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) ManualResolutionPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualResolutionPropertiesInvokeResponsePtrOutput)
}

// Defines the properties for manual resolution.
type ManualResolutionPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ManualResolutionPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualResolutionPropertiesInvokeResponse)(nil)).Elem()
}

func (o ManualResolutionPropertiesInvokeResponseOutput) ToManualResolutionPropertiesInvokeResponseOutput() ManualResolutionPropertiesInvokeResponseOutput {
	return o
}

func (o ManualResolutionPropertiesInvokeResponseOutput) ToManualResolutionPropertiesInvokeResponseOutputWithContext(ctx context.Context) ManualResolutionPropertiesInvokeResponseOutput {
	return o
}

func (o ManualResolutionPropertiesInvokeResponseOutput) ToManualResolutionPropertiesInvokeResponsePtrOutput() ManualResolutionPropertiesInvokeResponsePtrOutput {
	return o.ToManualResolutionPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ManualResolutionPropertiesInvokeResponseOutput) ToManualResolutionPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) ManualResolutionPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v ManualResolutionPropertiesInvokeResponse) *ManualResolutionPropertiesInvokeResponse {
		return &v
	}).(ManualResolutionPropertiesInvokeResponsePtrOutput)
}

// Gets or sets the target resource ARM ID of the dependent resource if the resource type is Manual.
func (o ManualResolutionPropertiesInvokeResponseOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualResolutionPropertiesInvokeResponse) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

type ManualResolutionPropertiesInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ManualResolutionPropertiesInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualResolutionPropertiesInvokeResponse)(nil)).Elem()
}

func (o ManualResolutionPropertiesInvokeResponsePtrOutput) ToManualResolutionPropertiesInvokeResponsePtrOutput() ManualResolutionPropertiesInvokeResponsePtrOutput {
	return o
}

func (o ManualResolutionPropertiesInvokeResponsePtrOutput) ToManualResolutionPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) ManualResolutionPropertiesInvokeResponsePtrOutput {
	return o
}

func (o ManualResolutionPropertiesInvokeResponsePtrOutput) Elem() ManualResolutionPropertiesInvokeResponseOutput {
	return o.ApplyT(func(v *ManualResolutionPropertiesInvokeResponse) ManualResolutionPropertiesInvokeResponse { return *v }).(ManualResolutionPropertiesInvokeResponseOutput)
}

// Gets or sets the target resource ARM ID of the dependent resource if the resource type is Manual.
func (o ManualResolutionPropertiesInvokeResponsePtrOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManualResolutionPropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetId
	}).(pulumi.StringPtrOutput)
}

// Defines the properties for manual resolution.
type ManualResolutionPropertiesResponse struct {
	// Gets or sets the target resource ARM ID of the dependent resource if the resource type is Manual.
	TargetId *string `pulumi:"targetId"`
}

// ManualResolutionPropertiesResponseInput is an input type that accepts ManualResolutionPropertiesResponseArgs and ManualResolutionPropertiesResponseOutput values.
// You can construct a concrete instance of `ManualResolutionPropertiesResponseInput` via:
//
//          ManualResolutionPropertiesResponseArgs{...}
type ManualResolutionPropertiesResponseInput interface {
	pulumi.Input

	ToManualResolutionPropertiesResponseOutput() ManualResolutionPropertiesResponseOutput
	ToManualResolutionPropertiesResponseOutputWithContext(context.Context) ManualResolutionPropertiesResponseOutput
}

// Defines the properties for manual resolution.
type ManualResolutionPropertiesResponseArgs struct {
	// Gets or sets the target resource ARM ID of the dependent resource if the resource type is Manual.
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
}

func (ManualResolutionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualResolutionPropertiesResponse)(nil)).Elem()
}

func (i ManualResolutionPropertiesResponseArgs) ToManualResolutionPropertiesResponseOutput() ManualResolutionPropertiesResponseOutput {
	return i.ToManualResolutionPropertiesResponseOutputWithContext(context.Background())
}

func (i ManualResolutionPropertiesResponseArgs) ToManualResolutionPropertiesResponseOutputWithContext(ctx context.Context) ManualResolutionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualResolutionPropertiesResponseOutput)
}

func (i ManualResolutionPropertiesResponseArgs) ToManualResolutionPropertiesResponsePtrOutput() ManualResolutionPropertiesResponsePtrOutput {
	return i.ToManualResolutionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ManualResolutionPropertiesResponseArgs) ToManualResolutionPropertiesResponsePtrOutputWithContext(ctx context.Context) ManualResolutionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualResolutionPropertiesResponseOutput).ToManualResolutionPropertiesResponsePtrOutputWithContext(ctx)
}

// ManualResolutionPropertiesResponsePtrInput is an input type that accepts ManualResolutionPropertiesResponseArgs, ManualResolutionPropertiesResponsePtr and ManualResolutionPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ManualResolutionPropertiesResponsePtrInput` via:
//
//          ManualResolutionPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ManualResolutionPropertiesResponsePtrInput interface {
	pulumi.Input

	ToManualResolutionPropertiesResponsePtrOutput() ManualResolutionPropertiesResponsePtrOutput
	ToManualResolutionPropertiesResponsePtrOutputWithContext(context.Context) ManualResolutionPropertiesResponsePtrOutput
}

type manualResolutionPropertiesResponsePtrType ManualResolutionPropertiesResponseArgs

func ManualResolutionPropertiesResponsePtr(v *ManualResolutionPropertiesResponseArgs) ManualResolutionPropertiesResponsePtrInput {
	return (*manualResolutionPropertiesResponsePtrType)(v)
}

func (*manualResolutionPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualResolutionPropertiesResponse)(nil)).Elem()
}

func (i *manualResolutionPropertiesResponsePtrType) ToManualResolutionPropertiesResponsePtrOutput() ManualResolutionPropertiesResponsePtrOutput {
	return i.ToManualResolutionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *manualResolutionPropertiesResponsePtrType) ToManualResolutionPropertiesResponsePtrOutputWithContext(ctx context.Context) ManualResolutionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualResolutionPropertiesResponsePtrOutput)
}

// Defines the properties for manual resolution.
type ManualResolutionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ManualResolutionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualResolutionPropertiesResponse)(nil)).Elem()
}

func (o ManualResolutionPropertiesResponseOutput) ToManualResolutionPropertiesResponseOutput() ManualResolutionPropertiesResponseOutput {
	return o
}

func (o ManualResolutionPropertiesResponseOutput) ToManualResolutionPropertiesResponseOutputWithContext(ctx context.Context) ManualResolutionPropertiesResponseOutput {
	return o
}

func (o ManualResolutionPropertiesResponseOutput) ToManualResolutionPropertiesResponsePtrOutput() ManualResolutionPropertiesResponsePtrOutput {
	return o.ToManualResolutionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ManualResolutionPropertiesResponseOutput) ToManualResolutionPropertiesResponsePtrOutputWithContext(ctx context.Context) ManualResolutionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ManualResolutionPropertiesResponse) *ManualResolutionPropertiesResponse {
		return &v
	}).(ManualResolutionPropertiesResponsePtrOutput)
}

// Gets or sets the target resource ARM ID of the dependent resource if the resource type is Manual.
func (o ManualResolutionPropertiesResponseOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualResolutionPropertiesResponse) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

type ManualResolutionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ManualResolutionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualResolutionPropertiesResponse)(nil)).Elem()
}

func (o ManualResolutionPropertiesResponsePtrOutput) ToManualResolutionPropertiesResponsePtrOutput() ManualResolutionPropertiesResponsePtrOutput {
	return o
}

func (o ManualResolutionPropertiesResponsePtrOutput) ToManualResolutionPropertiesResponsePtrOutputWithContext(ctx context.Context) ManualResolutionPropertiesResponsePtrOutput {
	return o
}

func (o ManualResolutionPropertiesResponsePtrOutput) Elem() ManualResolutionPropertiesResponseOutput {
	return o.ApplyT(func(v *ManualResolutionPropertiesResponse) ManualResolutionPropertiesResponse { return *v }).(ManualResolutionPropertiesResponseOutput)
}

// Gets or sets the target resource ARM ID of the dependent resource if the resource type is Manual.
func (o ManualResolutionPropertiesResponsePtrOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManualResolutionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetId
	}).(pulumi.StringPtrOutput)
}

// Defines the move collection properties.
type MoveCollectionProperties struct {
	// Gets or sets the source region.
	SourceRegion string `pulumi:"sourceRegion"`
	// Gets or sets the target region.
	TargetRegion string `pulumi:"targetRegion"`
}

// MoveCollectionPropertiesInput is an input type that accepts MoveCollectionPropertiesArgs and MoveCollectionPropertiesOutput values.
// You can construct a concrete instance of `MoveCollectionPropertiesInput` via:
//
//          MoveCollectionPropertiesArgs{...}
type MoveCollectionPropertiesInput interface {
	pulumi.Input

	ToMoveCollectionPropertiesOutput() MoveCollectionPropertiesOutput
	ToMoveCollectionPropertiesOutputWithContext(context.Context) MoveCollectionPropertiesOutput
}

// Defines the move collection properties.
type MoveCollectionPropertiesArgs struct {
	// Gets or sets the source region.
	SourceRegion pulumi.StringInput `pulumi:"sourceRegion"`
	// Gets or sets the target region.
	TargetRegion pulumi.StringInput `pulumi:"targetRegion"`
}

func (MoveCollectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveCollectionProperties)(nil)).Elem()
}

func (i MoveCollectionPropertiesArgs) ToMoveCollectionPropertiesOutput() MoveCollectionPropertiesOutput {
	return i.ToMoveCollectionPropertiesOutputWithContext(context.Background())
}

func (i MoveCollectionPropertiesArgs) ToMoveCollectionPropertiesOutputWithContext(ctx context.Context) MoveCollectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveCollectionPropertiesOutput)
}

func (i MoveCollectionPropertiesArgs) ToMoveCollectionPropertiesPtrOutput() MoveCollectionPropertiesPtrOutput {
	return i.ToMoveCollectionPropertiesPtrOutputWithContext(context.Background())
}

func (i MoveCollectionPropertiesArgs) ToMoveCollectionPropertiesPtrOutputWithContext(ctx context.Context) MoveCollectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveCollectionPropertiesOutput).ToMoveCollectionPropertiesPtrOutputWithContext(ctx)
}

// MoveCollectionPropertiesPtrInput is an input type that accepts MoveCollectionPropertiesArgs, MoveCollectionPropertiesPtr and MoveCollectionPropertiesPtrOutput values.
// You can construct a concrete instance of `MoveCollectionPropertiesPtrInput` via:
//
//          MoveCollectionPropertiesArgs{...}
//
//  or:
//
//          nil
type MoveCollectionPropertiesPtrInput interface {
	pulumi.Input

	ToMoveCollectionPropertiesPtrOutput() MoveCollectionPropertiesPtrOutput
	ToMoveCollectionPropertiesPtrOutputWithContext(context.Context) MoveCollectionPropertiesPtrOutput
}

type moveCollectionPropertiesPtrType MoveCollectionPropertiesArgs

func MoveCollectionPropertiesPtr(v *MoveCollectionPropertiesArgs) MoveCollectionPropertiesPtrInput {
	return (*moveCollectionPropertiesPtrType)(v)
}

func (*moveCollectionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveCollectionProperties)(nil)).Elem()
}

func (i *moveCollectionPropertiesPtrType) ToMoveCollectionPropertiesPtrOutput() MoveCollectionPropertiesPtrOutput {
	return i.ToMoveCollectionPropertiesPtrOutputWithContext(context.Background())
}

func (i *moveCollectionPropertiesPtrType) ToMoveCollectionPropertiesPtrOutputWithContext(ctx context.Context) MoveCollectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveCollectionPropertiesPtrOutput)
}

// Defines the move collection properties.
type MoveCollectionPropertiesOutput struct{ *pulumi.OutputState }

func (MoveCollectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveCollectionProperties)(nil)).Elem()
}

func (o MoveCollectionPropertiesOutput) ToMoveCollectionPropertiesOutput() MoveCollectionPropertiesOutput {
	return o
}

func (o MoveCollectionPropertiesOutput) ToMoveCollectionPropertiesOutputWithContext(ctx context.Context) MoveCollectionPropertiesOutput {
	return o
}

func (o MoveCollectionPropertiesOutput) ToMoveCollectionPropertiesPtrOutput() MoveCollectionPropertiesPtrOutput {
	return o.ToMoveCollectionPropertiesPtrOutputWithContext(context.Background())
}

func (o MoveCollectionPropertiesOutput) ToMoveCollectionPropertiesPtrOutputWithContext(ctx context.Context) MoveCollectionPropertiesPtrOutput {
	return o.ApplyT(func(v MoveCollectionProperties) *MoveCollectionProperties {
		return &v
	}).(MoveCollectionPropertiesPtrOutput)
}

// Gets or sets the source region.
func (o MoveCollectionPropertiesOutput) SourceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v MoveCollectionProperties) string { return v.SourceRegion }).(pulumi.StringOutput)
}

// Gets or sets the target region.
func (o MoveCollectionPropertiesOutput) TargetRegion() pulumi.StringOutput {
	return o.ApplyT(func(v MoveCollectionProperties) string { return v.TargetRegion }).(pulumi.StringOutput)
}

type MoveCollectionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (MoveCollectionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveCollectionProperties)(nil)).Elem()
}

func (o MoveCollectionPropertiesPtrOutput) ToMoveCollectionPropertiesPtrOutput() MoveCollectionPropertiesPtrOutput {
	return o
}

func (o MoveCollectionPropertiesPtrOutput) ToMoveCollectionPropertiesPtrOutputWithContext(ctx context.Context) MoveCollectionPropertiesPtrOutput {
	return o
}

func (o MoveCollectionPropertiesPtrOutput) Elem() MoveCollectionPropertiesOutput {
	return o.ApplyT(func(v *MoveCollectionProperties) MoveCollectionProperties { return *v }).(MoveCollectionPropertiesOutput)
}

// Gets or sets the source region.
func (o MoveCollectionPropertiesPtrOutput) SourceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveCollectionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SourceRegion
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the target region.
func (o MoveCollectionPropertiesPtrOutput) TargetRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveCollectionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.TargetRegion
	}).(pulumi.StringPtrOutput)
}

// Defines the move collection properties.
type MoveCollectionPropertiesInvokeResponse struct {
	// Defines the move collection errors.
	Errors MoveCollectionPropertiesInvokeResponseErrors `pulumi:"errors"`
	// Defines the provisioning states.
	ProvisioningState string `pulumi:"provisioningState"`
	// Gets or sets the source region.
	SourceRegion string `pulumi:"sourceRegion"`
	// Gets or sets the target region.
	TargetRegion string `pulumi:"targetRegion"`
}

// MoveCollectionPropertiesInvokeResponseInput is an input type that accepts MoveCollectionPropertiesInvokeResponseArgs and MoveCollectionPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `MoveCollectionPropertiesInvokeResponseInput` via:
//
//          MoveCollectionPropertiesInvokeResponseArgs{...}
type MoveCollectionPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToMoveCollectionPropertiesInvokeResponseOutput() MoveCollectionPropertiesInvokeResponseOutput
	ToMoveCollectionPropertiesInvokeResponseOutputWithContext(context.Context) MoveCollectionPropertiesInvokeResponseOutput
}

// Defines the move collection properties.
type MoveCollectionPropertiesInvokeResponseArgs struct {
	// Defines the move collection errors.
	Errors MoveCollectionPropertiesInvokeResponseErrorsInput `pulumi:"errors"`
	// Defines the provisioning states.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Gets or sets the source region.
	SourceRegion pulumi.StringInput `pulumi:"sourceRegion"`
	// Gets or sets the target region.
	TargetRegion pulumi.StringInput `pulumi:"targetRegion"`
}

func (MoveCollectionPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveCollectionPropertiesInvokeResponse)(nil)).Elem()
}

func (i MoveCollectionPropertiesInvokeResponseArgs) ToMoveCollectionPropertiesInvokeResponseOutput() MoveCollectionPropertiesInvokeResponseOutput {
	return i.ToMoveCollectionPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i MoveCollectionPropertiesInvokeResponseArgs) ToMoveCollectionPropertiesInvokeResponseOutputWithContext(ctx context.Context) MoveCollectionPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveCollectionPropertiesInvokeResponseOutput)
}

// Defines the move collection properties.
type MoveCollectionPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (MoveCollectionPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveCollectionPropertiesInvokeResponse)(nil)).Elem()
}

func (o MoveCollectionPropertiesInvokeResponseOutput) ToMoveCollectionPropertiesInvokeResponseOutput() MoveCollectionPropertiesInvokeResponseOutput {
	return o
}

func (o MoveCollectionPropertiesInvokeResponseOutput) ToMoveCollectionPropertiesInvokeResponseOutputWithContext(ctx context.Context) MoveCollectionPropertiesInvokeResponseOutput {
	return o
}

// Defines the move collection errors.
func (o MoveCollectionPropertiesInvokeResponseOutput) Errors() MoveCollectionPropertiesInvokeResponseErrorsOutput {
	return o.ApplyT(func(v MoveCollectionPropertiesInvokeResponse) MoveCollectionPropertiesInvokeResponseErrors {
		return v.Errors
	}).(MoveCollectionPropertiesInvokeResponseErrorsOutput)
}

// Defines the provisioning states.
func (o MoveCollectionPropertiesInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v MoveCollectionPropertiesInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets or sets the source region.
func (o MoveCollectionPropertiesInvokeResponseOutput) SourceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v MoveCollectionPropertiesInvokeResponse) string { return v.SourceRegion }).(pulumi.StringOutput)
}

// Gets or sets the target region.
func (o MoveCollectionPropertiesInvokeResponseOutput) TargetRegion() pulumi.StringOutput {
	return o.ApplyT(func(v MoveCollectionPropertiesInvokeResponse) string { return v.TargetRegion }).(pulumi.StringOutput)
}

// Defines the move collection errors.
type MoveCollectionPropertiesInvokeResponseErrors struct {
	// The move resource error body.
	Properties *MoveResourceErrorBodyInvokeResponse `pulumi:"properties"`
}

// MoveCollectionPropertiesInvokeResponseErrorsInput is an input type that accepts MoveCollectionPropertiesInvokeResponseErrorsArgs and MoveCollectionPropertiesInvokeResponseErrorsOutput values.
// You can construct a concrete instance of `MoveCollectionPropertiesInvokeResponseErrorsInput` via:
//
//          MoveCollectionPropertiesInvokeResponseErrorsArgs{...}
type MoveCollectionPropertiesInvokeResponseErrorsInput interface {
	pulumi.Input

	ToMoveCollectionPropertiesInvokeResponseErrorsOutput() MoveCollectionPropertiesInvokeResponseErrorsOutput
	ToMoveCollectionPropertiesInvokeResponseErrorsOutputWithContext(context.Context) MoveCollectionPropertiesInvokeResponseErrorsOutput
}

// Defines the move collection errors.
type MoveCollectionPropertiesInvokeResponseErrorsArgs struct {
	// The move resource error body.
	Properties MoveResourceErrorBodyInvokeResponsePtrInput `pulumi:"properties"`
}

func (MoveCollectionPropertiesInvokeResponseErrorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveCollectionPropertiesInvokeResponseErrors)(nil)).Elem()
}

func (i MoveCollectionPropertiesInvokeResponseErrorsArgs) ToMoveCollectionPropertiesInvokeResponseErrorsOutput() MoveCollectionPropertiesInvokeResponseErrorsOutput {
	return i.ToMoveCollectionPropertiesInvokeResponseErrorsOutputWithContext(context.Background())
}

func (i MoveCollectionPropertiesInvokeResponseErrorsArgs) ToMoveCollectionPropertiesInvokeResponseErrorsOutputWithContext(ctx context.Context) MoveCollectionPropertiesInvokeResponseErrorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveCollectionPropertiesInvokeResponseErrorsOutput)
}

// Defines the move collection errors.
type MoveCollectionPropertiesInvokeResponseErrorsOutput struct{ *pulumi.OutputState }

func (MoveCollectionPropertiesInvokeResponseErrorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveCollectionPropertiesInvokeResponseErrors)(nil)).Elem()
}

func (o MoveCollectionPropertiesInvokeResponseErrorsOutput) ToMoveCollectionPropertiesInvokeResponseErrorsOutput() MoveCollectionPropertiesInvokeResponseErrorsOutput {
	return o
}

func (o MoveCollectionPropertiesInvokeResponseErrorsOutput) ToMoveCollectionPropertiesInvokeResponseErrorsOutputWithContext(ctx context.Context) MoveCollectionPropertiesInvokeResponseErrorsOutput {
	return o
}

// The move resource error body.
func (o MoveCollectionPropertiesInvokeResponseErrorsOutput) Properties() MoveResourceErrorBodyInvokeResponsePtrOutput {
	return o.ApplyT(func(v MoveCollectionPropertiesInvokeResponseErrors) *MoveResourceErrorBodyInvokeResponse {
		return v.Properties
	}).(MoveResourceErrorBodyInvokeResponsePtrOutput)
}

// Defines the move collection properties.
type MoveCollectionPropertiesResponse struct {
	// Defines the move collection errors.
	Errors MoveCollectionPropertiesResponseErrors `pulumi:"errors"`
	// Defines the provisioning states.
	ProvisioningState string `pulumi:"provisioningState"`
	// Gets or sets the source region.
	SourceRegion string `pulumi:"sourceRegion"`
	// Gets or sets the target region.
	TargetRegion string `pulumi:"targetRegion"`
}

// MoveCollectionPropertiesResponseInput is an input type that accepts MoveCollectionPropertiesResponseArgs and MoveCollectionPropertiesResponseOutput values.
// You can construct a concrete instance of `MoveCollectionPropertiesResponseInput` via:
//
//          MoveCollectionPropertiesResponseArgs{...}
type MoveCollectionPropertiesResponseInput interface {
	pulumi.Input

	ToMoveCollectionPropertiesResponseOutput() MoveCollectionPropertiesResponseOutput
	ToMoveCollectionPropertiesResponseOutputWithContext(context.Context) MoveCollectionPropertiesResponseOutput
}

// Defines the move collection properties.
type MoveCollectionPropertiesResponseArgs struct {
	// Defines the move collection errors.
	Errors MoveCollectionPropertiesResponseErrorsInput `pulumi:"errors"`
	// Defines the provisioning states.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Gets or sets the source region.
	SourceRegion pulumi.StringInput `pulumi:"sourceRegion"`
	// Gets or sets the target region.
	TargetRegion pulumi.StringInput `pulumi:"targetRegion"`
}

func (MoveCollectionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveCollectionPropertiesResponse)(nil)).Elem()
}

func (i MoveCollectionPropertiesResponseArgs) ToMoveCollectionPropertiesResponseOutput() MoveCollectionPropertiesResponseOutput {
	return i.ToMoveCollectionPropertiesResponseOutputWithContext(context.Background())
}

func (i MoveCollectionPropertiesResponseArgs) ToMoveCollectionPropertiesResponseOutputWithContext(ctx context.Context) MoveCollectionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveCollectionPropertiesResponseOutput)
}

func (i MoveCollectionPropertiesResponseArgs) ToMoveCollectionPropertiesResponsePtrOutput() MoveCollectionPropertiesResponsePtrOutput {
	return i.ToMoveCollectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i MoveCollectionPropertiesResponseArgs) ToMoveCollectionPropertiesResponsePtrOutputWithContext(ctx context.Context) MoveCollectionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveCollectionPropertiesResponseOutput).ToMoveCollectionPropertiesResponsePtrOutputWithContext(ctx)
}

// MoveCollectionPropertiesResponsePtrInput is an input type that accepts MoveCollectionPropertiesResponseArgs, MoveCollectionPropertiesResponsePtr and MoveCollectionPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `MoveCollectionPropertiesResponsePtrInput` via:
//
//          MoveCollectionPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type MoveCollectionPropertiesResponsePtrInput interface {
	pulumi.Input

	ToMoveCollectionPropertiesResponsePtrOutput() MoveCollectionPropertiesResponsePtrOutput
	ToMoveCollectionPropertiesResponsePtrOutputWithContext(context.Context) MoveCollectionPropertiesResponsePtrOutput
}

type moveCollectionPropertiesResponsePtrType MoveCollectionPropertiesResponseArgs

func MoveCollectionPropertiesResponsePtr(v *MoveCollectionPropertiesResponseArgs) MoveCollectionPropertiesResponsePtrInput {
	return (*moveCollectionPropertiesResponsePtrType)(v)
}

func (*moveCollectionPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveCollectionPropertiesResponse)(nil)).Elem()
}

func (i *moveCollectionPropertiesResponsePtrType) ToMoveCollectionPropertiesResponsePtrOutput() MoveCollectionPropertiesResponsePtrOutput {
	return i.ToMoveCollectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *moveCollectionPropertiesResponsePtrType) ToMoveCollectionPropertiesResponsePtrOutputWithContext(ctx context.Context) MoveCollectionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveCollectionPropertiesResponsePtrOutput)
}

// Defines the move collection properties.
type MoveCollectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MoveCollectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveCollectionPropertiesResponse)(nil)).Elem()
}

func (o MoveCollectionPropertiesResponseOutput) ToMoveCollectionPropertiesResponseOutput() MoveCollectionPropertiesResponseOutput {
	return o
}

func (o MoveCollectionPropertiesResponseOutput) ToMoveCollectionPropertiesResponseOutputWithContext(ctx context.Context) MoveCollectionPropertiesResponseOutput {
	return o
}

func (o MoveCollectionPropertiesResponseOutput) ToMoveCollectionPropertiesResponsePtrOutput() MoveCollectionPropertiesResponsePtrOutput {
	return o.ToMoveCollectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o MoveCollectionPropertiesResponseOutput) ToMoveCollectionPropertiesResponsePtrOutputWithContext(ctx context.Context) MoveCollectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v MoveCollectionPropertiesResponse) *MoveCollectionPropertiesResponse {
		return &v
	}).(MoveCollectionPropertiesResponsePtrOutput)
}

// Defines the move collection errors.
func (o MoveCollectionPropertiesResponseOutput) Errors() MoveCollectionPropertiesResponseErrorsOutput {
	return o.ApplyT(func(v MoveCollectionPropertiesResponse) MoveCollectionPropertiesResponseErrors { return v.Errors }).(MoveCollectionPropertiesResponseErrorsOutput)
}

// Defines the provisioning states.
func (o MoveCollectionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v MoveCollectionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets or sets the source region.
func (o MoveCollectionPropertiesResponseOutput) SourceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v MoveCollectionPropertiesResponse) string { return v.SourceRegion }).(pulumi.StringOutput)
}

// Gets or sets the target region.
func (o MoveCollectionPropertiesResponseOutput) TargetRegion() pulumi.StringOutput {
	return o.ApplyT(func(v MoveCollectionPropertiesResponse) string { return v.TargetRegion }).(pulumi.StringOutput)
}

type MoveCollectionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (MoveCollectionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveCollectionPropertiesResponse)(nil)).Elem()
}

func (o MoveCollectionPropertiesResponsePtrOutput) ToMoveCollectionPropertiesResponsePtrOutput() MoveCollectionPropertiesResponsePtrOutput {
	return o
}

func (o MoveCollectionPropertiesResponsePtrOutput) ToMoveCollectionPropertiesResponsePtrOutputWithContext(ctx context.Context) MoveCollectionPropertiesResponsePtrOutput {
	return o
}

func (o MoveCollectionPropertiesResponsePtrOutput) Elem() MoveCollectionPropertiesResponseOutput {
	return o.ApplyT(func(v *MoveCollectionPropertiesResponse) MoveCollectionPropertiesResponse { return *v }).(MoveCollectionPropertiesResponseOutput)
}

// Defines the move collection errors.
func (o MoveCollectionPropertiesResponsePtrOutput) Errors() MoveCollectionPropertiesResponseErrorsPtrOutput {
	return o.ApplyT(func(v *MoveCollectionPropertiesResponse) *MoveCollectionPropertiesResponseErrors {
		if v == nil {
			return nil
		}
		return &v.Errors
	}).(MoveCollectionPropertiesResponseErrorsPtrOutput)
}

// Defines the provisioning states.
func (o MoveCollectionPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveCollectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the source region.
func (o MoveCollectionPropertiesResponsePtrOutput) SourceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveCollectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceRegion
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the target region.
func (o MoveCollectionPropertiesResponsePtrOutput) TargetRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveCollectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetRegion
	}).(pulumi.StringPtrOutput)
}

// Defines the move collection errors.
type MoveCollectionPropertiesResponseErrors struct {
	// The move resource error body.
	Properties *MoveResourceErrorBodyResponse `pulumi:"properties"`
}

// MoveCollectionPropertiesResponseErrorsInput is an input type that accepts MoveCollectionPropertiesResponseErrorsArgs and MoveCollectionPropertiesResponseErrorsOutput values.
// You can construct a concrete instance of `MoveCollectionPropertiesResponseErrorsInput` via:
//
//          MoveCollectionPropertiesResponseErrorsArgs{...}
type MoveCollectionPropertiesResponseErrorsInput interface {
	pulumi.Input

	ToMoveCollectionPropertiesResponseErrorsOutput() MoveCollectionPropertiesResponseErrorsOutput
	ToMoveCollectionPropertiesResponseErrorsOutputWithContext(context.Context) MoveCollectionPropertiesResponseErrorsOutput
}

// Defines the move collection errors.
type MoveCollectionPropertiesResponseErrorsArgs struct {
	// The move resource error body.
	Properties MoveResourceErrorBodyResponsePtrInput `pulumi:"properties"`
}

func (MoveCollectionPropertiesResponseErrorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveCollectionPropertiesResponseErrors)(nil)).Elem()
}

func (i MoveCollectionPropertiesResponseErrorsArgs) ToMoveCollectionPropertiesResponseErrorsOutput() MoveCollectionPropertiesResponseErrorsOutput {
	return i.ToMoveCollectionPropertiesResponseErrorsOutputWithContext(context.Background())
}

func (i MoveCollectionPropertiesResponseErrorsArgs) ToMoveCollectionPropertiesResponseErrorsOutputWithContext(ctx context.Context) MoveCollectionPropertiesResponseErrorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveCollectionPropertiesResponseErrorsOutput)
}

func (i MoveCollectionPropertiesResponseErrorsArgs) ToMoveCollectionPropertiesResponseErrorsPtrOutput() MoveCollectionPropertiesResponseErrorsPtrOutput {
	return i.ToMoveCollectionPropertiesResponseErrorsPtrOutputWithContext(context.Background())
}

func (i MoveCollectionPropertiesResponseErrorsArgs) ToMoveCollectionPropertiesResponseErrorsPtrOutputWithContext(ctx context.Context) MoveCollectionPropertiesResponseErrorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveCollectionPropertiesResponseErrorsOutput).ToMoveCollectionPropertiesResponseErrorsPtrOutputWithContext(ctx)
}

// MoveCollectionPropertiesResponseErrorsPtrInput is an input type that accepts MoveCollectionPropertiesResponseErrorsArgs, MoveCollectionPropertiesResponseErrorsPtr and MoveCollectionPropertiesResponseErrorsPtrOutput values.
// You can construct a concrete instance of `MoveCollectionPropertiesResponseErrorsPtrInput` via:
//
//          MoveCollectionPropertiesResponseErrorsArgs{...}
//
//  or:
//
//          nil
type MoveCollectionPropertiesResponseErrorsPtrInput interface {
	pulumi.Input

	ToMoveCollectionPropertiesResponseErrorsPtrOutput() MoveCollectionPropertiesResponseErrorsPtrOutput
	ToMoveCollectionPropertiesResponseErrorsPtrOutputWithContext(context.Context) MoveCollectionPropertiesResponseErrorsPtrOutput
}

type moveCollectionPropertiesResponseErrorsPtrType MoveCollectionPropertiesResponseErrorsArgs

func MoveCollectionPropertiesResponseErrorsPtr(v *MoveCollectionPropertiesResponseErrorsArgs) MoveCollectionPropertiesResponseErrorsPtrInput {
	return (*moveCollectionPropertiesResponseErrorsPtrType)(v)
}

func (*moveCollectionPropertiesResponseErrorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveCollectionPropertiesResponseErrors)(nil)).Elem()
}

func (i *moveCollectionPropertiesResponseErrorsPtrType) ToMoveCollectionPropertiesResponseErrorsPtrOutput() MoveCollectionPropertiesResponseErrorsPtrOutput {
	return i.ToMoveCollectionPropertiesResponseErrorsPtrOutputWithContext(context.Background())
}

func (i *moveCollectionPropertiesResponseErrorsPtrType) ToMoveCollectionPropertiesResponseErrorsPtrOutputWithContext(ctx context.Context) MoveCollectionPropertiesResponseErrorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveCollectionPropertiesResponseErrorsPtrOutput)
}

// Defines the move collection errors.
type MoveCollectionPropertiesResponseErrorsOutput struct{ *pulumi.OutputState }

func (MoveCollectionPropertiesResponseErrorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveCollectionPropertiesResponseErrors)(nil)).Elem()
}

func (o MoveCollectionPropertiesResponseErrorsOutput) ToMoveCollectionPropertiesResponseErrorsOutput() MoveCollectionPropertiesResponseErrorsOutput {
	return o
}

func (o MoveCollectionPropertiesResponseErrorsOutput) ToMoveCollectionPropertiesResponseErrorsOutputWithContext(ctx context.Context) MoveCollectionPropertiesResponseErrorsOutput {
	return o
}

func (o MoveCollectionPropertiesResponseErrorsOutput) ToMoveCollectionPropertiesResponseErrorsPtrOutput() MoveCollectionPropertiesResponseErrorsPtrOutput {
	return o.ToMoveCollectionPropertiesResponseErrorsPtrOutputWithContext(context.Background())
}

func (o MoveCollectionPropertiesResponseErrorsOutput) ToMoveCollectionPropertiesResponseErrorsPtrOutputWithContext(ctx context.Context) MoveCollectionPropertiesResponseErrorsPtrOutput {
	return o.ApplyT(func(v MoveCollectionPropertiesResponseErrors) *MoveCollectionPropertiesResponseErrors {
		return &v
	}).(MoveCollectionPropertiesResponseErrorsPtrOutput)
}

// The move resource error body.
func (o MoveCollectionPropertiesResponseErrorsOutput) Properties() MoveResourceErrorBodyResponsePtrOutput {
	return o.ApplyT(func(v MoveCollectionPropertiesResponseErrors) *MoveResourceErrorBodyResponse { return v.Properties }).(MoveResourceErrorBodyResponsePtrOutput)
}

type MoveCollectionPropertiesResponseErrorsPtrOutput struct{ *pulumi.OutputState }

func (MoveCollectionPropertiesResponseErrorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveCollectionPropertiesResponseErrors)(nil)).Elem()
}

func (o MoveCollectionPropertiesResponseErrorsPtrOutput) ToMoveCollectionPropertiesResponseErrorsPtrOutput() MoveCollectionPropertiesResponseErrorsPtrOutput {
	return o
}

func (o MoveCollectionPropertiesResponseErrorsPtrOutput) ToMoveCollectionPropertiesResponseErrorsPtrOutputWithContext(ctx context.Context) MoveCollectionPropertiesResponseErrorsPtrOutput {
	return o
}

func (o MoveCollectionPropertiesResponseErrorsPtrOutput) Elem() MoveCollectionPropertiesResponseErrorsOutput {
	return o.ApplyT(func(v *MoveCollectionPropertiesResponseErrors) MoveCollectionPropertiesResponseErrors { return *v }).(MoveCollectionPropertiesResponseErrorsOutput)
}

// The move resource error body.
func (o MoveCollectionPropertiesResponseErrorsPtrOutput) Properties() MoveResourceErrorBodyResponsePtrOutput {
	return o.ApplyT(func(v *MoveCollectionPropertiesResponseErrors) *MoveResourceErrorBodyResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(MoveResourceErrorBodyResponsePtrOutput)
}

// Defines the dependency of the move resource.
type MoveResourceDependencyInvokeResponse struct {
	// Defines the properties for automatic resolution.
	AutomaticResolution *AutomaticResolutionPropertiesInvokeResponse `pulumi:"automaticResolution"`
	// Defines the dependency type.
	DependencyType *string `pulumi:"dependencyType"`
	// Gets the source ARM ID of the dependent resource.
	Id *string `pulumi:"id"`
	// Gets or sets a value indicating whether the dependency is optional.
	IsOptional *string `pulumi:"isOptional"`
	// Defines the properties for manual resolution.
	ManualResolution *ManualResolutionPropertiesInvokeResponse `pulumi:"manualResolution"`
	// Gets the dependency resolution status.
	ResolutionStatus *string `pulumi:"resolutionStatus"`
	// Defines the resolution type.
	ResolutionType *string `pulumi:"resolutionType"`
}

// MoveResourceDependencyInvokeResponseInput is an input type that accepts MoveResourceDependencyInvokeResponseArgs and MoveResourceDependencyInvokeResponseOutput values.
// You can construct a concrete instance of `MoveResourceDependencyInvokeResponseInput` via:
//
//          MoveResourceDependencyInvokeResponseArgs{...}
type MoveResourceDependencyInvokeResponseInput interface {
	pulumi.Input

	ToMoveResourceDependencyInvokeResponseOutput() MoveResourceDependencyInvokeResponseOutput
	ToMoveResourceDependencyInvokeResponseOutputWithContext(context.Context) MoveResourceDependencyInvokeResponseOutput
}

// Defines the dependency of the move resource.
type MoveResourceDependencyInvokeResponseArgs struct {
	// Defines the properties for automatic resolution.
	AutomaticResolution AutomaticResolutionPropertiesInvokeResponsePtrInput `pulumi:"automaticResolution"`
	// Defines the dependency type.
	DependencyType pulumi.StringPtrInput `pulumi:"dependencyType"`
	// Gets the source ARM ID of the dependent resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets or sets a value indicating whether the dependency is optional.
	IsOptional pulumi.StringPtrInput `pulumi:"isOptional"`
	// Defines the properties for manual resolution.
	ManualResolution ManualResolutionPropertiesInvokeResponsePtrInput `pulumi:"manualResolution"`
	// Gets the dependency resolution status.
	ResolutionStatus pulumi.StringPtrInput `pulumi:"resolutionStatus"`
	// Defines the resolution type.
	ResolutionType pulumi.StringPtrInput `pulumi:"resolutionType"`
}

func (MoveResourceDependencyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceDependencyInvokeResponse)(nil)).Elem()
}

func (i MoveResourceDependencyInvokeResponseArgs) ToMoveResourceDependencyInvokeResponseOutput() MoveResourceDependencyInvokeResponseOutput {
	return i.ToMoveResourceDependencyInvokeResponseOutputWithContext(context.Background())
}

func (i MoveResourceDependencyInvokeResponseArgs) ToMoveResourceDependencyInvokeResponseOutputWithContext(ctx context.Context) MoveResourceDependencyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceDependencyInvokeResponseOutput)
}

// MoveResourceDependencyInvokeResponseArrayInput is an input type that accepts MoveResourceDependencyInvokeResponseArray and MoveResourceDependencyInvokeResponseArrayOutput values.
// You can construct a concrete instance of `MoveResourceDependencyInvokeResponseArrayInput` via:
//
//          MoveResourceDependencyInvokeResponseArray{ MoveResourceDependencyInvokeResponseArgs{...} }
type MoveResourceDependencyInvokeResponseArrayInput interface {
	pulumi.Input

	ToMoveResourceDependencyInvokeResponseArrayOutput() MoveResourceDependencyInvokeResponseArrayOutput
	ToMoveResourceDependencyInvokeResponseArrayOutputWithContext(context.Context) MoveResourceDependencyInvokeResponseArrayOutput
}

type MoveResourceDependencyInvokeResponseArray []MoveResourceDependencyInvokeResponseInput

func (MoveResourceDependencyInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoveResourceDependencyInvokeResponse)(nil)).Elem()
}

func (i MoveResourceDependencyInvokeResponseArray) ToMoveResourceDependencyInvokeResponseArrayOutput() MoveResourceDependencyInvokeResponseArrayOutput {
	return i.ToMoveResourceDependencyInvokeResponseArrayOutputWithContext(context.Background())
}

func (i MoveResourceDependencyInvokeResponseArray) ToMoveResourceDependencyInvokeResponseArrayOutputWithContext(ctx context.Context) MoveResourceDependencyInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceDependencyInvokeResponseArrayOutput)
}

// Defines the dependency of the move resource.
type MoveResourceDependencyInvokeResponseOutput struct{ *pulumi.OutputState }

func (MoveResourceDependencyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceDependencyInvokeResponse)(nil)).Elem()
}

func (o MoveResourceDependencyInvokeResponseOutput) ToMoveResourceDependencyInvokeResponseOutput() MoveResourceDependencyInvokeResponseOutput {
	return o
}

func (o MoveResourceDependencyInvokeResponseOutput) ToMoveResourceDependencyInvokeResponseOutputWithContext(ctx context.Context) MoveResourceDependencyInvokeResponseOutput {
	return o
}

// Defines the properties for automatic resolution.
func (o MoveResourceDependencyInvokeResponseOutput) AutomaticResolution() AutomaticResolutionPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyInvokeResponse) *AutomaticResolutionPropertiesInvokeResponse {
		return v.AutomaticResolution
	}).(AutomaticResolutionPropertiesInvokeResponsePtrOutput)
}

// Defines the dependency type.
func (o MoveResourceDependencyInvokeResponseOutput) DependencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyInvokeResponse) *string { return v.DependencyType }).(pulumi.StringPtrOutput)
}

// Gets the source ARM ID of the dependent resource.
func (o MoveResourceDependencyInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets or sets a value indicating whether the dependency is optional.
func (o MoveResourceDependencyInvokeResponseOutput) IsOptional() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyInvokeResponse) *string { return v.IsOptional }).(pulumi.StringPtrOutput)
}

// Defines the properties for manual resolution.
func (o MoveResourceDependencyInvokeResponseOutput) ManualResolution() ManualResolutionPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyInvokeResponse) *ManualResolutionPropertiesInvokeResponse {
		return v.ManualResolution
	}).(ManualResolutionPropertiesInvokeResponsePtrOutput)
}

// Gets the dependency resolution status.
func (o MoveResourceDependencyInvokeResponseOutput) ResolutionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyInvokeResponse) *string { return v.ResolutionStatus }).(pulumi.StringPtrOutput)
}

// Defines the resolution type.
func (o MoveResourceDependencyInvokeResponseOutput) ResolutionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyInvokeResponse) *string { return v.ResolutionType }).(pulumi.StringPtrOutput)
}

type MoveResourceDependencyInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (MoveResourceDependencyInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoveResourceDependencyInvokeResponse)(nil)).Elem()
}

func (o MoveResourceDependencyInvokeResponseArrayOutput) ToMoveResourceDependencyInvokeResponseArrayOutput() MoveResourceDependencyInvokeResponseArrayOutput {
	return o
}

func (o MoveResourceDependencyInvokeResponseArrayOutput) ToMoveResourceDependencyInvokeResponseArrayOutputWithContext(ctx context.Context) MoveResourceDependencyInvokeResponseArrayOutput {
	return o
}

func (o MoveResourceDependencyInvokeResponseArrayOutput) Index(i pulumi.IntInput) MoveResourceDependencyInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MoveResourceDependencyInvokeResponse {
		return vs[0].([]MoveResourceDependencyInvokeResponse)[vs[1].(int)]
	}).(MoveResourceDependencyInvokeResponseOutput)
}

// Defines the dependency override of the move resource.
type MoveResourceDependencyOverride struct {
	// Gets or sets the ARM ID of the dependent resource.
	Id *string `pulumi:"id"`
	// Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
	// the dependent resource.
	TargetId *string `pulumi:"targetId"`
}

// MoveResourceDependencyOverrideInput is an input type that accepts MoveResourceDependencyOverrideArgs and MoveResourceDependencyOverrideOutput values.
// You can construct a concrete instance of `MoveResourceDependencyOverrideInput` via:
//
//          MoveResourceDependencyOverrideArgs{...}
type MoveResourceDependencyOverrideInput interface {
	pulumi.Input

	ToMoveResourceDependencyOverrideOutput() MoveResourceDependencyOverrideOutput
	ToMoveResourceDependencyOverrideOutputWithContext(context.Context) MoveResourceDependencyOverrideOutput
}

// Defines the dependency override of the move resource.
type MoveResourceDependencyOverrideArgs struct {
	// Gets or sets the ARM ID of the dependent resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
	// the dependent resource.
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
}

func (MoveResourceDependencyOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceDependencyOverride)(nil)).Elem()
}

func (i MoveResourceDependencyOverrideArgs) ToMoveResourceDependencyOverrideOutput() MoveResourceDependencyOverrideOutput {
	return i.ToMoveResourceDependencyOverrideOutputWithContext(context.Background())
}

func (i MoveResourceDependencyOverrideArgs) ToMoveResourceDependencyOverrideOutputWithContext(ctx context.Context) MoveResourceDependencyOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceDependencyOverrideOutput)
}

// MoveResourceDependencyOverrideArrayInput is an input type that accepts MoveResourceDependencyOverrideArray and MoveResourceDependencyOverrideArrayOutput values.
// You can construct a concrete instance of `MoveResourceDependencyOverrideArrayInput` via:
//
//          MoveResourceDependencyOverrideArray{ MoveResourceDependencyOverrideArgs{...} }
type MoveResourceDependencyOverrideArrayInput interface {
	pulumi.Input

	ToMoveResourceDependencyOverrideArrayOutput() MoveResourceDependencyOverrideArrayOutput
	ToMoveResourceDependencyOverrideArrayOutputWithContext(context.Context) MoveResourceDependencyOverrideArrayOutput
}

type MoveResourceDependencyOverrideArray []MoveResourceDependencyOverrideInput

func (MoveResourceDependencyOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoveResourceDependencyOverride)(nil)).Elem()
}

func (i MoveResourceDependencyOverrideArray) ToMoveResourceDependencyOverrideArrayOutput() MoveResourceDependencyOverrideArrayOutput {
	return i.ToMoveResourceDependencyOverrideArrayOutputWithContext(context.Background())
}

func (i MoveResourceDependencyOverrideArray) ToMoveResourceDependencyOverrideArrayOutputWithContext(ctx context.Context) MoveResourceDependencyOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceDependencyOverrideArrayOutput)
}

// Defines the dependency override of the move resource.
type MoveResourceDependencyOverrideOutput struct{ *pulumi.OutputState }

func (MoveResourceDependencyOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceDependencyOverride)(nil)).Elem()
}

func (o MoveResourceDependencyOverrideOutput) ToMoveResourceDependencyOverrideOutput() MoveResourceDependencyOverrideOutput {
	return o
}

func (o MoveResourceDependencyOverrideOutput) ToMoveResourceDependencyOverrideOutputWithContext(ctx context.Context) MoveResourceDependencyOverrideOutput {
	return o
}

// Gets or sets the ARM ID of the dependent resource.
func (o MoveResourceDependencyOverrideOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyOverride) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
// the dependent resource.
func (o MoveResourceDependencyOverrideOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyOverride) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

type MoveResourceDependencyOverrideArrayOutput struct{ *pulumi.OutputState }

func (MoveResourceDependencyOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoveResourceDependencyOverride)(nil)).Elem()
}

func (o MoveResourceDependencyOverrideArrayOutput) ToMoveResourceDependencyOverrideArrayOutput() MoveResourceDependencyOverrideArrayOutput {
	return o
}

func (o MoveResourceDependencyOverrideArrayOutput) ToMoveResourceDependencyOverrideArrayOutputWithContext(ctx context.Context) MoveResourceDependencyOverrideArrayOutput {
	return o
}

func (o MoveResourceDependencyOverrideArrayOutput) Index(i pulumi.IntInput) MoveResourceDependencyOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MoveResourceDependencyOverride {
		return vs[0].([]MoveResourceDependencyOverride)[vs[1].(int)]
	}).(MoveResourceDependencyOverrideOutput)
}

// Defines the dependency override of the move resource.
type MoveResourceDependencyOverrideInvokeResponse struct {
	// Gets or sets the ARM ID of the dependent resource.
	Id *string `pulumi:"id"`
	// Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
	// the dependent resource.
	TargetId *string `pulumi:"targetId"`
}

// MoveResourceDependencyOverrideInvokeResponseInput is an input type that accepts MoveResourceDependencyOverrideInvokeResponseArgs and MoveResourceDependencyOverrideInvokeResponseOutput values.
// You can construct a concrete instance of `MoveResourceDependencyOverrideInvokeResponseInput` via:
//
//          MoveResourceDependencyOverrideInvokeResponseArgs{...}
type MoveResourceDependencyOverrideInvokeResponseInput interface {
	pulumi.Input

	ToMoveResourceDependencyOverrideInvokeResponseOutput() MoveResourceDependencyOverrideInvokeResponseOutput
	ToMoveResourceDependencyOverrideInvokeResponseOutputWithContext(context.Context) MoveResourceDependencyOverrideInvokeResponseOutput
}

// Defines the dependency override of the move resource.
type MoveResourceDependencyOverrideInvokeResponseArgs struct {
	// Gets or sets the ARM ID of the dependent resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
	// the dependent resource.
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
}

func (MoveResourceDependencyOverrideInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceDependencyOverrideInvokeResponse)(nil)).Elem()
}

func (i MoveResourceDependencyOverrideInvokeResponseArgs) ToMoveResourceDependencyOverrideInvokeResponseOutput() MoveResourceDependencyOverrideInvokeResponseOutput {
	return i.ToMoveResourceDependencyOverrideInvokeResponseOutputWithContext(context.Background())
}

func (i MoveResourceDependencyOverrideInvokeResponseArgs) ToMoveResourceDependencyOverrideInvokeResponseOutputWithContext(ctx context.Context) MoveResourceDependencyOverrideInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceDependencyOverrideInvokeResponseOutput)
}

// MoveResourceDependencyOverrideInvokeResponseArrayInput is an input type that accepts MoveResourceDependencyOverrideInvokeResponseArray and MoveResourceDependencyOverrideInvokeResponseArrayOutput values.
// You can construct a concrete instance of `MoveResourceDependencyOverrideInvokeResponseArrayInput` via:
//
//          MoveResourceDependencyOverrideInvokeResponseArray{ MoveResourceDependencyOverrideInvokeResponseArgs{...} }
type MoveResourceDependencyOverrideInvokeResponseArrayInput interface {
	pulumi.Input

	ToMoveResourceDependencyOverrideInvokeResponseArrayOutput() MoveResourceDependencyOverrideInvokeResponseArrayOutput
	ToMoveResourceDependencyOverrideInvokeResponseArrayOutputWithContext(context.Context) MoveResourceDependencyOverrideInvokeResponseArrayOutput
}

type MoveResourceDependencyOverrideInvokeResponseArray []MoveResourceDependencyOverrideInvokeResponseInput

func (MoveResourceDependencyOverrideInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoveResourceDependencyOverrideInvokeResponse)(nil)).Elem()
}

func (i MoveResourceDependencyOverrideInvokeResponseArray) ToMoveResourceDependencyOverrideInvokeResponseArrayOutput() MoveResourceDependencyOverrideInvokeResponseArrayOutput {
	return i.ToMoveResourceDependencyOverrideInvokeResponseArrayOutputWithContext(context.Background())
}

func (i MoveResourceDependencyOverrideInvokeResponseArray) ToMoveResourceDependencyOverrideInvokeResponseArrayOutputWithContext(ctx context.Context) MoveResourceDependencyOverrideInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceDependencyOverrideInvokeResponseArrayOutput)
}

// Defines the dependency override of the move resource.
type MoveResourceDependencyOverrideInvokeResponseOutput struct{ *pulumi.OutputState }

func (MoveResourceDependencyOverrideInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceDependencyOverrideInvokeResponse)(nil)).Elem()
}

func (o MoveResourceDependencyOverrideInvokeResponseOutput) ToMoveResourceDependencyOverrideInvokeResponseOutput() MoveResourceDependencyOverrideInvokeResponseOutput {
	return o
}

func (o MoveResourceDependencyOverrideInvokeResponseOutput) ToMoveResourceDependencyOverrideInvokeResponseOutputWithContext(ctx context.Context) MoveResourceDependencyOverrideInvokeResponseOutput {
	return o
}

// Gets or sets the ARM ID of the dependent resource.
func (o MoveResourceDependencyOverrideInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyOverrideInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
// the dependent resource.
func (o MoveResourceDependencyOverrideInvokeResponseOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyOverrideInvokeResponse) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

type MoveResourceDependencyOverrideInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (MoveResourceDependencyOverrideInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoveResourceDependencyOverrideInvokeResponse)(nil)).Elem()
}

func (o MoveResourceDependencyOverrideInvokeResponseArrayOutput) ToMoveResourceDependencyOverrideInvokeResponseArrayOutput() MoveResourceDependencyOverrideInvokeResponseArrayOutput {
	return o
}

func (o MoveResourceDependencyOverrideInvokeResponseArrayOutput) ToMoveResourceDependencyOverrideInvokeResponseArrayOutputWithContext(ctx context.Context) MoveResourceDependencyOverrideInvokeResponseArrayOutput {
	return o
}

func (o MoveResourceDependencyOverrideInvokeResponseArrayOutput) Index(i pulumi.IntInput) MoveResourceDependencyOverrideInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MoveResourceDependencyOverrideInvokeResponse {
		return vs[0].([]MoveResourceDependencyOverrideInvokeResponse)[vs[1].(int)]
	}).(MoveResourceDependencyOverrideInvokeResponseOutput)
}

// Defines the dependency override of the move resource.
type MoveResourceDependencyOverrideResponse struct {
	// Gets or sets the ARM ID of the dependent resource.
	Id *string `pulumi:"id"`
	// Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
	// the dependent resource.
	TargetId *string `pulumi:"targetId"`
}

// MoveResourceDependencyOverrideResponseInput is an input type that accepts MoveResourceDependencyOverrideResponseArgs and MoveResourceDependencyOverrideResponseOutput values.
// You can construct a concrete instance of `MoveResourceDependencyOverrideResponseInput` via:
//
//          MoveResourceDependencyOverrideResponseArgs{...}
type MoveResourceDependencyOverrideResponseInput interface {
	pulumi.Input

	ToMoveResourceDependencyOverrideResponseOutput() MoveResourceDependencyOverrideResponseOutput
	ToMoveResourceDependencyOverrideResponseOutputWithContext(context.Context) MoveResourceDependencyOverrideResponseOutput
}

// Defines the dependency override of the move resource.
type MoveResourceDependencyOverrideResponseArgs struct {
	// Gets or sets the ARM ID of the dependent resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
	// the dependent resource.
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
}

func (MoveResourceDependencyOverrideResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceDependencyOverrideResponse)(nil)).Elem()
}

func (i MoveResourceDependencyOverrideResponseArgs) ToMoveResourceDependencyOverrideResponseOutput() MoveResourceDependencyOverrideResponseOutput {
	return i.ToMoveResourceDependencyOverrideResponseOutputWithContext(context.Background())
}

func (i MoveResourceDependencyOverrideResponseArgs) ToMoveResourceDependencyOverrideResponseOutputWithContext(ctx context.Context) MoveResourceDependencyOverrideResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceDependencyOverrideResponseOutput)
}

// MoveResourceDependencyOverrideResponseArrayInput is an input type that accepts MoveResourceDependencyOverrideResponseArray and MoveResourceDependencyOverrideResponseArrayOutput values.
// You can construct a concrete instance of `MoveResourceDependencyOverrideResponseArrayInput` via:
//
//          MoveResourceDependencyOverrideResponseArray{ MoveResourceDependencyOverrideResponseArgs{...} }
type MoveResourceDependencyOverrideResponseArrayInput interface {
	pulumi.Input

	ToMoveResourceDependencyOverrideResponseArrayOutput() MoveResourceDependencyOverrideResponseArrayOutput
	ToMoveResourceDependencyOverrideResponseArrayOutputWithContext(context.Context) MoveResourceDependencyOverrideResponseArrayOutput
}

type MoveResourceDependencyOverrideResponseArray []MoveResourceDependencyOverrideResponseInput

func (MoveResourceDependencyOverrideResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoveResourceDependencyOverrideResponse)(nil)).Elem()
}

func (i MoveResourceDependencyOverrideResponseArray) ToMoveResourceDependencyOverrideResponseArrayOutput() MoveResourceDependencyOverrideResponseArrayOutput {
	return i.ToMoveResourceDependencyOverrideResponseArrayOutputWithContext(context.Background())
}

func (i MoveResourceDependencyOverrideResponseArray) ToMoveResourceDependencyOverrideResponseArrayOutputWithContext(ctx context.Context) MoveResourceDependencyOverrideResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceDependencyOverrideResponseArrayOutput)
}

// Defines the dependency override of the move resource.
type MoveResourceDependencyOverrideResponseOutput struct{ *pulumi.OutputState }

func (MoveResourceDependencyOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceDependencyOverrideResponse)(nil)).Elem()
}

func (o MoveResourceDependencyOverrideResponseOutput) ToMoveResourceDependencyOverrideResponseOutput() MoveResourceDependencyOverrideResponseOutput {
	return o
}

func (o MoveResourceDependencyOverrideResponseOutput) ToMoveResourceDependencyOverrideResponseOutputWithContext(ctx context.Context) MoveResourceDependencyOverrideResponseOutput {
	return o
}

// Gets or sets the ARM ID of the dependent resource.
func (o MoveResourceDependencyOverrideResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyOverrideResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
// the dependent resource.
func (o MoveResourceDependencyOverrideResponseOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyOverrideResponse) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

type MoveResourceDependencyOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (MoveResourceDependencyOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoveResourceDependencyOverrideResponse)(nil)).Elem()
}

func (o MoveResourceDependencyOverrideResponseArrayOutput) ToMoveResourceDependencyOverrideResponseArrayOutput() MoveResourceDependencyOverrideResponseArrayOutput {
	return o
}

func (o MoveResourceDependencyOverrideResponseArrayOutput) ToMoveResourceDependencyOverrideResponseArrayOutputWithContext(ctx context.Context) MoveResourceDependencyOverrideResponseArrayOutput {
	return o
}

func (o MoveResourceDependencyOverrideResponseArrayOutput) Index(i pulumi.IntInput) MoveResourceDependencyOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MoveResourceDependencyOverrideResponse {
		return vs[0].([]MoveResourceDependencyOverrideResponse)[vs[1].(int)]
	}).(MoveResourceDependencyOverrideResponseOutput)
}

// Defines the dependency of the move resource.
type MoveResourceDependencyResponse struct {
	// Defines the properties for automatic resolution.
	AutomaticResolution *AutomaticResolutionPropertiesResponse `pulumi:"automaticResolution"`
	// Defines the dependency type.
	DependencyType *string `pulumi:"dependencyType"`
	// Gets the source ARM ID of the dependent resource.
	Id *string `pulumi:"id"`
	// Gets or sets a value indicating whether the dependency is optional.
	IsOptional *string `pulumi:"isOptional"`
	// Defines the properties for manual resolution.
	ManualResolution *ManualResolutionPropertiesResponse `pulumi:"manualResolution"`
	// Gets the dependency resolution status.
	ResolutionStatus *string `pulumi:"resolutionStatus"`
	// Defines the resolution type.
	ResolutionType *string `pulumi:"resolutionType"`
}

// MoveResourceDependencyResponseInput is an input type that accepts MoveResourceDependencyResponseArgs and MoveResourceDependencyResponseOutput values.
// You can construct a concrete instance of `MoveResourceDependencyResponseInput` via:
//
//          MoveResourceDependencyResponseArgs{...}
type MoveResourceDependencyResponseInput interface {
	pulumi.Input

	ToMoveResourceDependencyResponseOutput() MoveResourceDependencyResponseOutput
	ToMoveResourceDependencyResponseOutputWithContext(context.Context) MoveResourceDependencyResponseOutput
}

// Defines the dependency of the move resource.
type MoveResourceDependencyResponseArgs struct {
	// Defines the properties for automatic resolution.
	AutomaticResolution AutomaticResolutionPropertiesResponsePtrInput `pulumi:"automaticResolution"`
	// Defines the dependency type.
	DependencyType pulumi.StringPtrInput `pulumi:"dependencyType"`
	// Gets the source ARM ID of the dependent resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets or sets a value indicating whether the dependency is optional.
	IsOptional pulumi.StringPtrInput `pulumi:"isOptional"`
	// Defines the properties for manual resolution.
	ManualResolution ManualResolutionPropertiesResponsePtrInput `pulumi:"manualResolution"`
	// Gets the dependency resolution status.
	ResolutionStatus pulumi.StringPtrInput `pulumi:"resolutionStatus"`
	// Defines the resolution type.
	ResolutionType pulumi.StringPtrInput `pulumi:"resolutionType"`
}

func (MoveResourceDependencyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceDependencyResponse)(nil)).Elem()
}

func (i MoveResourceDependencyResponseArgs) ToMoveResourceDependencyResponseOutput() MoveResourceDependencyResponseOutput {
	return i.ToMoveResourceDependencyResponseOutputWithContext(context.Background())
}

func (i MoveResourceDependencyResponseArgs) ToMoveResourceDependencyResponseOutputWithContext(ctx context.Context) MoveResourceDependencyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceDependencyResponseOutput)
}

// MoveResourceDependencyResponseArrayInput is an input type that accepts MoveResourceDependencyResponseArray and MoveResourceDependencyResponseArrayOutput values.
// You can construct a concrete instance of `MoveResourceDependencyResponseArrayInput` via:
//
//          MoveResourceDependencyResponseArray{ MoveResourceDependencyResponseArgs{...} }
type MoveResourceDependencyResponseArrayInput interface {
	pulumi.Input

	ToMoveResourceDependencyResponseArrayOutput() MoveResourceDependencyResponseArrayOutput
	ToMoveResourceDependencyResponseArrayOutputWithContext(context.Context) MoveResourceDependencyResponseArrayOutput
}

type MoveResourceDependencyResponseArray []MoveResourceDependencyResponseInput

func (MoveResourceDependencyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoveResourceDependencyResponse)(nil)).Elem()
}

func (i MoveResourceDependencyResponseArray) ToMoveResourceDependencyResponseArrayOutput() MoveResourceDependencyResponseArrayOutput {
	return i.ToMoveResourceDependencyResponseArrayOutputWithContext(context.Background())
}

func (i MoveResourceDependencyResponseArray) ToMoveResourceDependencyResponseArrayOutputWithContext(ctx context.Context) MoveResourceDependencyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceDependencyResponseArrayOutput)
}

// Defines the dependency of the move resource.
type MoveResourceDependencyResponseOutput struct{ *pulumi.OutputState }

func (MoveResourceDependencyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceDependencyResponse)(nil)).Elem()
}

func (o MoveResourceDependencyResponseOutput) ToMoveResourceDependencyResponseOutput() MoveResourceDependencyResponseOutput {
	return o
}

func (o MoveResourceDependencyResponseOutput) ToMoveResourceDependencyResponseOutputWithContext(ctx context.Context) MoveResourceDependencyResponseOutput {
	return o
}

// Defines the properties for automatic resolution.
func (o MoveResourceDependencyResponseOutput) AutomaticResolution() AutomaticResolutionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyResponse) *AutomaticResolutionPropertiesResponse {
		return v.AutomaticResolution
	}).(AutomaticResolutionPropertiesResponsePtrOutput)
}

// Defines the dependency type.
func (o MoveResourceDependencyResponseOutput) DependencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyResponse) *string { return v.DependencyType }).(pulumi.StringPtrOutput)
}

// Gets the source ARM ID of the dependent resource.
func (o MoveResourceDependencyResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets or sets a value indicating whether the dependency is optional.
func (o MoveResourceDependencyResponseOutput) IsOptional() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyResponse) *string { return v.IsOptional }).(pulumi.StringPtrOutput)
}

// Defines the properties for manual resolution.
func (o MoveResourceDependencyResponseOutput) ManualResolution() ManualResolutionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyResponse) *ManualResolutionPropertiesResponse { return v.ManualResolution }).(ManualResolutionPropertiesResponsePtrOutput)
}

// Gets the dependency resolution status.
func (o MoveResourceDependencyResponseOutput) ResolutionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyResponse) *string { return v.ResolutionStatus }).(pulumi.StringPtrOutput)
}

// Defines the resolution type.
func (o MoveResourceDependencyResponseOutput) ResolutionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyResponse) *string { return v.ResolutionType }).(pulumi.StringPtrOutput)
}

type MoveResourceDependencyResponseArrayOutput struct{ *pulumi.OutputState }

func (MoveResourceDependencyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoveResourceDependencyResponse)(nil)).Elem()
}

func (o MoveResourceDependencyResponseArrayOutput) ToMoveResourceDependencyResponseArrayOutput() MoveResourceDependencyResponseArrayOutput {
	return o
}

func (o MoveResourceDependencyResponseArrayOutput) ToMoveResourceDependencyResponseArrayOutputWithContext(ctx context.Context) MoveResourceDependencyResponseArrayOutput {
	return o
}

func (o MoveResourceDependencyResponseArrayOutput) Index(i pulumi.IntInput) MoveResourceDependencyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MoveResourceDependencyResponse {
		return vs[0].([]MoveResourceDependencyResponse)[vs[1].(int)]
	}).(MoveResourceDependencyResponseOutput)
}

// An error response from the Azure Migrate service.
type MoveResourceErrorBodyInvokeResponse struct {
	// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
	Code string `pulumi:"code"`
	// A list of additional details about the error.
	Details []MoveResourceErrorBodyInvokeResponse `pulumi:"details"`
	// A message describing the error, intended to be suitable for display in a user interface.
	Message string `pulumi:"message"`
	// The target of the particular error. For example, the name of the property in error.
	Target string `pulumi:"target"`
}

// MoveResourceErrorBodyInvokeResponseInput is an input type that accepts MoveResourceErrorBodyInvokeResponseArgs and MoveResourceErrorBodyInvokeResponseOutput values.
// You can construct a concrete instance of `MoveResourceErrorBodyInvokeResponseInput` via:
//
//          MoveResourceErrorBodyInvokeResponseArgs{...}
type MoveResourceErrorBodyInvokeResponseInput interface {
	pulumi.Input

	ToMoveResourceErrorBodyInvokeResponseOutput() MoveResourceErrorBodyInvokeResponseOutput
	ToMoveResourceErrorBodyInvokeResponseOutputWithContext(context.Context) MoveResourceErrorBodyInvokeResponseOutput
}

// An error response from the Azure Migrate service.
type MoveResourceErrorBodyInvokeResponseArgs struct {
	// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
	Code pulumi.StringInput `pulumi:"code"`
	// A list of additional details about the error.
	Details MoveResourceErrorBodyInvokeResponseArrayInput `pulumi:"details"`
	// A message describing the error, intended to be suitable for display in a user interface.
	Message pulumi.StringInput `pulumi:"message"`
	// The target of the particular error. For example, the name of the property in error.
	Target pulumi.StringInput `pulumi:"target"`
}

func (MoveResourceErrorBodyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceErrorBodyInvokeResponse)(nil)).Elem()
}

func (i MoveResourceErrorBodyInvokeResponseArgs) ToMoveResourceErrorBodyInvokeResponseOutput() MoveResourceErrorBodyInvokeResponseOutput {
	return i.ToMoveResourceErrorBodyInvokeResponseOutputWithContext(context.Background())
}

func (i MoveResourceErrorBodyInvokeResponseArgs) ToMoveResourceErrorBodyInvokeResponseOutputWithContext(ctx context.Context) MoveResourceErrorBodyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceErrorBodyInvokeResponseOutput)
}

func (i MoveResourceErrorBodyInvokeResponseArgs) ToMoveResourceErrorBodyInvokeResponsePtrOutput() MoveResourceErrorBodyInvokeResponsePtrOutput {
	return i.ToMoveResourceErrorBodyInvokeResponsePtrOutputWithContext(context.Background())
}

func (i MoveResourceErrorBodyInvokeResponseArgs) ToMoveResourceErrorBodyInvokeResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorBodyInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceErrorBodyInvokeResponseOutput).ToMoveResourceErrorBodyInvokeResponsePtrOutputWithContext(ctx)
}

// MoveResourceErrorBodyInvokeResponsePtrInput is an input type that accepts MoveResourceErrorBodyInvokeResponseArgs, MoveResourceErrorBodyInvokeResponsePtr and MoveResourceErrorBodyInvokeResponsePtrOutput values.
// You can construct a concrete instance of `MoveResourceErrorBodyInvokeResponsePtrInput` via:
//
//          MoveResourceErrorBodyInvokeResponseArgs{...}
//
//  or:
//
//          nil
type MoveResourceErrorBodyInvokeResponsePtrInput interface {
	pulumi.Input

	ToMoveResourceErrorBodyInvokeResponsePtrOutput() MoveResourceErrorBodyInvokeResponsePtrOutput
	ToMoveResourceErrorBodyInvokeResponsePtrOutputWithContext(context.Context) MoveResourceErrorBodyInvokeResponsePtrOutput
}

type moveResourceErrorBodyInvokeResponsePtrType MoveResourceErrorBodyInvokeResponseArgs

func MoveResourceErrorBodyInvokeResponsePtr(v *MoveResourceErrorBodyInvokeResponseArgs) MoveResourceErrorBodyInvokeResponsePtrInput {
	return (*moveResourceErrorBodyInvokeResponsePtrType)(v)
}

func (*moveResourceErrorBodyInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourceErrorBodyInvokeResponse)(nil)).Elem()
}

func (i *moveResourceErrorBodyInvokeResponsePtrType) ToMoveResourceErrorBodyInvokeResponsePtrOutput() MoveResourceErrorBodyInvokeResponsePtrOutput {
	return i.ToMoveResourceErrorBodyInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *moveResourceErrorBodyInvokeResponsePtrType) ToMoveResourceErrorBodyInvokeResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorBodyInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceErrorBodyInvokeResponsePtrOutput)
}

// MoveResourceErrorBodyInvokeResponseArrayInput is an input type that accepts MoveResourceErrorBodyInvokeResponseArray and MoveResourceErrorBodyInvokeResponseArrayOutput values.
// You can construct a concrete instance of `MoveResourceErrorBodyInvokeResponseArrayInput` via:
//
//          MoveResourceErrorBodyInvokeResponseArray{ MoveResourceErrorBodyInvokeResponseArgs{...} }
type MoveResourceErrorBodyInvokeResponseArrayInput interface {
	pulumi.Input

	ToMoveResourceErrorBodyInvokeResponseArrayOutput() MoveResourceErrorBodyInvokeResponseArrayOutput
	ToMoveResourceErrorBodyInvokeResponseArrayOutputWithContext(context.Context) MoveResourceErrorBodyInvokeResponseArrayOutput
}

type MoveResourceErrorBodyInvokeResponseArray []MoveResourceErrorBodyInvokeResponseInput

func (MoveResourceErrorBodyInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoveResourceErrorBodyInvokeResponse)(nil)).Elem()
}

func (i MoveResourceErrorBodyInvokeResponseArray) ToMoveResourceErrorBodyInvokeResponseArrayOutput() MoveResourceErrorBodyInvokeResponseArrayOutput {
	return i.ToMoveResourceErrorBodyInvokeResponseArrayOutputWithContext(context.Background())
}

func (i MoveResourceErrorBodyInvokeResponseArray) ToMoveResourceErrorBodyInvokeResponseArrayOutputWithContext(ctx context.Context) MoveResourceErrorBodyInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceErrorBodyInvokeResponseArrayOutput)
}

// An error response from the Azure Migrate service.
type MoveResourceErrorBodyInvokeResponseOutput struct{ *pulumi.OutputState }

func (MoveResourceErrorBodyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceErrorBodyInvokeResponse)(nil)).Elem()
}

func (o MoveResourceErrorBodyInvokeResponseOutput) ToMoveResourceErrorBodyInvokeResponseOutput() MoveResourceErrorBodyInvokeResponseOutput {
	return o
}

func (o MoveResourceErrorBodyInvokeResponseOutput) ToMoveResourceErrorBodyInvokeResponseOutputWithContext(ctx context.Context) MoveResourceErrorBodyInvokeResponseOutput {
	return o
}

func (o MoveResourceErrorBodyInvokeResponseOutput) ToMoveResourceErrorBodyInvokeResponsePtrOutput() MoveResourceErrorBodyInvokeResponsePtrOutput {
	return o.ToMoveResourceErrorBodyInvokeResponsePtrOutputWithContext(context.Background())
}

func (o MoveResourceErrorBodyInvokeResponseOutput) ToMoveResourceErrorBodyInvokeResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorBodyInvokeResponsePtrOutput {
	return o.ApplyT(func(v MoveResourceErrorBodyInvokeResponse) *MoveResourceErrorBodyInvokeResponse {
		return &v
	}).(MoveResourceErrorBodyInvokeResponsePtrOutput)
}

// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
func (o MoveResourceErrorBodyInvokeResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourceErrorBodyInvokeResponse) string { return v.Code }).(pulumi.StringOutput)
}

// A list of additional details about the error.
func (o MoveResourceErrorBodyInvokeResponseOutput) Details() MoveResourceErrorBodyInvokeResponseArrayOutput {
	return o.ApplyT(func(v MoveResourceErrorBodyInvokeResponse) []MoveResourceErrorBodyInvokeResponse { return v.Details }).(MoveResourceErrorBodyInvokeResponseArrayOutput)
}

// A message describing the error, intended to be suitable for display in a user interface.
func (o MoveResourceErrorBodyInvokeResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourceErrorBodyInvokeResponse) string { return v.Message }).(pulumi.StringOutput)
}

// The target of the particular error. For example, the name of the property in error.
func (o MoveResourceErrorBodyInvokeResponseOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourceErrorBodyInvokeResponse) string { return v.Target }).(pulumi.StringOutput)
}

type MoveResourceErrorBodyInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (MoveResourceErrorBodyInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourceErrorBodyInvokeResponse)(nil)).Elem()
}

func (o MoveResourceErrorBodyInvokeResponsePtrOutput) ToMoveResourceErrorBodyInvokeResponsePtrOutput() MoveResourceErrorBodyInvokeResponsePtrOutput {
	return o
}

func (o MoveResourceErrorBodyInvokeResponsePtrOutput) ToMoveResourceErrorBodyInvokeResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorBodyInvokeResponsePtrOutput {
	return o
}

func (o MoveResourceErrorBodyInvokeResponsePtrOutput) Elem() MoveResourceErrorBodyInvokeResponseOutput {
	return o.ApplyT(func(v *MoveResourceErrorBodyInvokeResponse) MoveResourceErrorBodyInvokeResponse { return *v }).(MoveResourceErrorBodyInvokeResponseOutput)
}

// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
func (o MoveResourceErrorBodyInvokeResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourceErrorBodyInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// A list of additional details about the error.
func (o MoveResourceErrorBodyInvokeResponsePtrOutput) Details() MoveResourceErrorBodyInvokeResponseArrayOutput {
	return o.ApplyT(func(v *MoveResourceErrorBodyInvokeResponse) []MoveResourceErrorBodyInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Details
	}).(MoveResourceErrorBodyInvokeResponseArrayOutput)
}

// A message describing the error, intended to be suitable for display in a user interface.
func (o MoveResourceErrorBodyInvokeResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourceErrorBodyInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// The target of the particular error. For example, the name of the property in error.
func (o MoveResourceErrorBodyInvokeResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourceErrorBodyInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(pulumi.StringPtrOutput)
}

type MoveResourceErrorBodyInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (MoveResourceErrorBodyInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoveResourceErrorBodyInvokeResponse)(nil)).Elem()
}

func (o MoveResourceErrorBodyInvokeResponseArrayOutput) ToMoveResourceErrorBodyInvokeResponseArrayOutput() MoveResourceErrorBodyInvokeResponseArrayOutput {
	return o
}

func (o MoveResourceErrorBodyInvokeResponseArrayOutput) ToMoveResourceErrorBodyInvokeResponseArrayOutputWithContext(ctx context.Context) MoveResourceErrorBodyInvokeResponseArrayOutput {
	return o
}

func (o MoveResourceErrorBodyInvokeResponseArrayOutput) Index(i pulumi.IntInput) MoveResourceErrorBodyInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MoveResourceErrorBodyInvokeResponse {
		return vs[0].([]MoveResourceErrorBodyInvokeResponse)[vs[1].(int)]
	}).(MoveResourceErrorBodyInvokeResponseOutput)
}

// An error response from the Azure Migrate service.
type MoveResourceErrorBodyResponse struct {
	// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
	Code string `pulumi:"code"`
	// A list of additional details about the error.
	Details []MoveResourceErrorBodyResponse `pulumi:"details"`
	// A message describing the error, intended to be suitable for display in a user interface.
	Message string `pulumi:"message"`
	// The target of the particular error. For example, the name of the property in error.
	Target string `pulumi:"target"`
}

// MoveResourceErrorBodyResponseInput is an input type that accepts MoveResourceErrorBodyResponseArgs and MoveResourceErrorBodyResponseOutput values.
// You can construct a concrete instance of `MoveResourceErrorBodyResponseInput` via:
//
//          MoveResourceErrorBodyResponseArgs{...}
type MoveResourceErrorBodyResponseInput interface {
	pulumi.Input

	ToMoveResourceErrorBodyResponseOutput() MoveResourceErrorBodyResponseOutput
	ToMoveResourceErrorBodyResponseOutputWithContext(context.Context) MoveResourceErrorBodyResponseOutput
}

// An error response from the Azure Migrate service.
type MoveResourceErrorBodyResponseArgs struct {
	// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
	Code pulumi.StringInput `pulumi:"code"`
	// A list of additional details about the error.
	Details MoveResourceErrorBodyResponseArrayInput `pulumi:"details"`
	// A message describing the error, intended to be suitable for display in a user interface.
	Message pulumi.StringInput `pulumi:"message"`
	// The target of the particular error. For example, the name of the property in error.
	Target pulumi.StringInput `pulumi:"target"`
}

func (MoveResourceErrorBodyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceErrorBodyResponse)(nil)).Elem()
}

func (i MoveResourceErrorBodyResponseArgs) ToMoveResourceErrorBodyResponseOutput() MoveResourceErrorBodyResponseOutput {
	return i.ToMoveResourceErrorBodyResponseOutputWithContext(context.Background())
}

func (i MoveResourceErrorBodyResponseArgs) ToMoveResourceErrorBodyResponseOutputWithContext(ctx context.Context) MoveResourceErrorBodyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceErrorBodyResponseOutput)
}

func (i MoveResourceErrorBodyResponseArgs) ToMoveResourceErrorBodyResponsePtrOutput() MoveResourceErrorBodyResponsePtrOutput {
	return i.ToMoveResourceErrorBodyResponsePtrOutputWithContext(context.Background())
}

func (i MoveResourceErrorBodyResponseArgs) ToMoveResourceErrorBodyResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorBodyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceErrorBodyResponseOutput).ToMoveResourceErrorBodyResponsePtrOutputWithContext(ctx)
}

// MoveResourceErrorBodyResponsePtrInput is an input type that accepts MoveResourceErrorBodyResponseArgs, MoveResourceErrorBodyResponsePtr and MoveResourceErrorBodyResponsePtrOutput values.
// You can construct a concrete instance of `MoveResourceErrorBodyResponsePtrInput` via:
//
//          MoveResourceErrorBodyResponseArgs{...}
//
//  or:
//
//          nil
type MoveResourceErrorBodyResponsePtrInput interface {
	pulumi.Input

	ToMoveResourceErrorBodyResponsePtrOutput() MoveResourceErrorBodyResponsePtrOutput
	ToMoveResourceErrorBodyResponsePtrOutputWithContext(context.Context) MoveResourceErrorBodyResponsePtrOutput
}

type moveResourceErrorBodyResponsePtrType MoveResourceErrorBodyResponseArgs

func MoveResourceErrorBodyResponsePtr(v *MoveResourceErrorBodyResponseArgs) MoveResourceErrorBodyResponsePtrInput {
	return (*moveResourceErrorBodyResponsePtrType)(v)
}

func (*moveResourceErrorBodyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourceErrorBodyResponse)(nil)).Elem()
}

func (i *moveResourceErrorBodyResponsePtrType) ToMoveResourceErrorBodyResponsePtrOutput() MoveResourceErrorBodyResponsePtrOutput {
	return i.ToMoveResourceErrorBodyResponsePtrOutputWithContext(context.Background())
}

func (i *moveResourceErrorBodyResponsePtrType) ToMoveResourceErrorBodyResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorBodyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceErrorBodyResponsePtrOutput)
}

// MoveResourceErrorBodyResponseArrayInput is an input type that accepts MoveResourceErrorBodyResponseArray and MoveResourceErrorBodyResponseArrayOutput values.
// You can construct a concrete instance of `MoveResourceErrorBodyResponseArrayInput` via:
//
//          MoveResourceErrorBodyResponseArray{ MoveResourceErrorBodyResponseArgs{...} }
type MoveResourceErrorBodyResponseArrayInput interface {
	pulumi.Input

	ToMoveResourceErrorBodyResponseArrayOutput() MoveResourceErrorBodyResponseArrayOutput
	ToMoveResourceErrorBodyResponseArrayOutputWithContext(context.Context) MoveResourceErrorBodyResponseArrayOutput
}

type MoveResourceErrorBodyResponseArray []MoveResourceErrorBodyResponseInput

func (MoveResourceErrorBodyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoveResourceErrorBodyResponse)(nil)).Elem()
}

func (i MoveResourceErrorBodyResponseArray) ToMoveResourceErrorBodyResponseArrayOutput() MoveResourceErrorBodyResponseArrayOutput {
	return i.ToMoveResourceErrorBodyResponseArrayOutputWithContext(context.Background())
}

func (i MoveResourceErrorBodyResponseArray) ToMoveResourceErrorBodyResponseArrayOutputWithContext(ctx context.Context) MoveResourceErrorBodyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceErrorBodyResponseArrayOutput)
}

// An error response from the Azure Migrate service.
type MoveResourceErrorBodyResponseOutput struct{ *pulumi.OutputState }

func (MoveResourceErrorBodyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceErrorBodyResponse)(nil)).Elem()
}

func (o MoveResourceErrorBodyResponseOutput) ToMoveResourceErrorBodyResponseOutput() MoveResourceErrorBodyResponseOutput {
	return o
}

func (o MoveResourceErrorBodyResponseOutput) ToMoveResourceErrorBodyResponseOutputWithContext(ctx context.Context) MoveResourceErrorBodyResponseOutput {
	return o
}

func (o MoveResourceErrorBodyResponseOutput) ToMoveResourceErrorBodyResponsePtrOutput() MoveResourceErrorBodyResponsePtrOutput {
	return o.ToMoveResourceErrorBodyResponsePtrOutputWithContext(context.Background())
}

func (o MoveResourceErrorBodyResponseOutput) ToMoveResourceErrorBodyResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorBodyResponsePtrOutput {
	return o.ApplyT(func(v MoveResourceErrorBodyResponse) *MoveResourceErrorBodyResponse {
		return &v
	}).(MoveResourceErrorBodyResponsePtrOutput)
}

// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
func (o MoveResourceErrorBodyResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourceErrorBodyResponse) string { return v.Code }).(pulumi.StringOutput)
}

// A list of additional details about the error.
func (o MoveResourceErrorBodyResponseOutput) Details() MoveResourceErrorBodyResponseArrayOutput {
	return o.ApplyT(func(v MoveResourceErrorBodyResponse) []MoveResourceErrorBodyResponse { return v.Details }).(MoveResourceErrorBodyResponseArrayOutput)
}

// A message describing the error, intended to be suitable for display in a user interface.
func (o MoveResourceErrorBodyResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourceErrorBodyResponse) string { return v.Message }).(pulumi.StringOutput)
}

// The target of the particular error. For example, the name of the property in error.
func (o MoveResourceErrorBodyResponseOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourceErrorBodyResponse) string { return v.Target }).(pulumi.StringOutput)
}

type MoveResourceErrorBodyResponsePtrOutput struct{ *pulumi.OutputState }

func (MoveResourceErrorBodyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourceErrorBodyResponse)(nil)).Elem()
}

func (o MoveResourceErrorBodyResponsePtrOutput) ToMoveResourceErrorBodyResponsePtrOutput() MoveResourceErrorBodyResponsePtrOutput {
	return o
}

func (o MoveResourceErrorBodyResponsePtrOutput) ToMoveResourceErrorBodyResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorBodyResponsePtrOutput {
	return o
}

func (o MoveResourceErrorBodyResponsePtrOutput) Elem() MoveResourceErrorBodyResponseOutput {
	return o.ApplyT(func(v *MoveResourceErrorBodyResponse) MoveResourceErrorBodyResponse { return *v }).(MoveResourceErrorBodyResponseOutput)
}

// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
func (o MoveResourceErrorBodyResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourceErrorBodyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// A list of additional details about the error.
func (o MoveResourceErrorBodyResponsePtrOutput) Details() MoveResourceErrorBodyResponseArrayOutput {
	return o.ApplyT(func(v *MoveResourceErrorBodyResponse) []MoveResourceErrorBodyResponse {
		if v == nil {
			return nil
		}
		return v.Details
	}).(MoveResourceErrorBodyResponseArrayOutput)
}

// A message describing the error, intended to be suitable for display in a user interface.
func (o MoveResourceErrorBodyResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourceErrorBodyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// The target of the particular error. For example, the name of the property in error.
func (o MoveResourceErrorBodyResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourceErrorBodyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(pulumi.StringPtrOutput)
}

type MoveResourceErrorBodyResponseArrayOutput struct{ *pulumi.OutputState }

func (MoveResourceErrorBodyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoveResourceErrorBodyResponse)(nil)).Elem()
}

func (o MoveResourceErrorBodyResponseArrayOutput) ToMoveResourceErrorBodyResponseArrayOutput() MoveResourceErrorBodyResponseArrayOutput {
	return o
}

func (o MoveResourceErrorBodyResponseArrayOutput) ToMoveResourceErrorBodyResponseArrayOutputWithContext(ctx context.Context) MoveResourceErrorBodyResponseArrayOutput {
	return o
}

func (o MoveResourceErrorBodyResponseArrayOutput) Index(i pulumi.IntInput) MoveResourceErrorBodyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MoveResourceErrorBodyResponse {
		return vs[0].([]MoveResourceErrorBodyResponse)[vs[1].(int)]
	}).(MoveResourceErrorBodyResponseOutput)
}

// An error response from the azure resource mover service.
type MoveResourceErrorInvokeResponse struct {
	// The move resource error body.
	Properties *MoveResourceErrorBodyInvokeResponse `pulumi:"properties"`
}

// MoveResourceErrorInvokeResponseInput is an input type that accepts MoveResourceErrorInvokeResponseArgs and MoveResourceErrorInvokeResponseOutput values.
// You can construct a concrete instance of `MoveResourceErrorInvokeResponseInput` via:
//
//          MoveResourceErrorInvokeResponseArgs{...}
type MoveResourceErrorInvokeResponseInput interface {
	pulumi.Input

	ToMoveResourceErrorInvokeResponseOutput() MoveResourceErrorInvokeResponseOutput
	ToMoveResourceErrorInvokeResponseOutputWithContext(context.Context) MoveResourceErrorInvokeResponseOutput
}

// An error response from the azure resource mover service.
type MoveResourceErrorInvokeResponseArgs struct {
	// The move resource error body.
	Properties MoveResourceErrorBodyInvokeResponsePtrInput `pulumi:"properties"`
}

func (MoveResourceErrorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceErrorInvokeResponse)(nil)).Elem()
}

func (i MoveResourceErrorInvokeResponseArgs) ToMoveResourceErrorInvokeResponseOutput() MoveResourceErrorInvokeResponseOutput {
	return i.ToMoveResourceErrorInvokeResponseOutputWithContext(context.Background())
}

func (i MoveResourceErrorInvokeResponseArgs) ToMoveResourceErrorInvokeResponseOutputWithContext(ctx context.Context) MoveResourceErrorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceErrorInvokeResponseOutput)
}

func (i MoveResourceErrorInvokeResponseArgs) ToMoveResourceErrorInvokeResponsePtrOutput() MoveResourceErrorInvokeResponsePtrOutput {
	return i.ToMoveResourceErrorInvokeResponsePtrOutputWithContext(context.Background())
}

func (i MoveResourceErrorInvokeResponseArgs) ToMoveResourceErrorInvokeResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceErrorInvokeResponseOutput).ToMoveResourceErrorInvokeResponsePtrOutputWithContext(ctx)
}

// MoveResourceErrorInvokeResponsePtrInput is an input type that accepts MoveResourceErrorInvokeResponseArgs, MoveResourceErrorInvokeResponsePtr and MoveResourceErrorInvokeResponsePtrOutput values.
// You can construct a concrete instance of `MoveResourceErrorInvokeResponsePtrInput` via:
//
//          MoveResourceErrorInvokeResponseArgs{...}
//
//  or:
//
//          nil
type MoveResourceErrorInvokeResponsePtrInput interface {
	pulumi.Input

	ToMoveResourceErrorInvokeResponsePtrOutput() MoveResourceErrorInvokeResponsePtrOutput
	ToMoveResourceErrorInvokeResponsePtrOutputWithContext(context.Context) MoveResourceErrorInvokeResponsePtrOutput
}

type moveResourceErrorInvokeResponsePtrType MoveResourceErrorInvokeResponseArgs

func MoveResourceErrorInvokeResponsePtr(v *MoveResourceErrorInvokeResponseArgs) MoveResourceErrorInvokeResponsePtrInput {
	return (*moveResourceErrorInvokeResponsePtrType)(v)
}

func (*moveResourceErrorInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourceErrorInvokeResponse)(nil)).Elem()
}

func (i *moveResourceErrorInvokeResponsePtrType) ToMoveResourceErrorInvokeResponsePtrOutput() MoveResourceErrorInvokeResponsePtrOutput {
	return i.ToMoveResourceErrorInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *moveResourceErrorInvokeResponsePtrType) ToMoveResourceErrorInvokeResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceErrorInvokeResponsePtrOutput)
}

// An error response from the azure resource mover service.
type MoveResourceErrorInvokeResponseOutput struct{ *pulumi.OutputState }

func (MoveResourceErrorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceErrorInvokeResponse)(nil)).Elem()
}

func (o MoveResourceErrorInvokeResponseOutput) ToMoveResourceErrorInvokeResponseOutput() MoveResourceErrorInvokeResponseOutput {
	return o
}

func (o MoveResourceErrorInvokeResponseOutput) ToMoveResourceErrorInvokeResponseOutputWithContext(ctx context.Context) MoveResourceErrorInvokeResponseOutput {
	return o
}

func (o MoveResourceErrorInvokeResponseOutput) ToMoveResourceErrorInvokeResponsePtrOutput() MoveResourceErrorInvokeResponsePtrOutput {
	return o.ToMoveResourceErrorInvokeResponsePtrOutputWithContext(context.Background())
}

func (o MoveResourceErrorInvokeResponseOutput) ToMoveResourceErrorInvokeResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorInvokeResponsePtrOutput {
	return o.ApplyT(func(v MoveResourceErrorInvokeResponse) *MoveResourceErrorInvokeResponse {
		return &v
	}).(MoveResourceErrorInvokeResponsePtrOutput)
}

// The move resource error body.
func (o MoveResourceErrorInvokeResponseOutput) Properties() MoveResourceErrorBodyInvokeResponsePtrOutput {
	return o.ApplyT(func(v MoveResourceErrorInvokeResponse) *MoveResourceErrorBodyInvokeResponse { return v.Properties }).(MoveResourceErrorBodyInvokeResponsePtrOutput)
}

type MoveResourceErrorInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (MoveResourceErrorInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourceErrorInvokeResponse)(nil)).Elem()
}

func (o MoveResourceErrorInvokeResponsePtrOutput) ToMoveResourceErrorInvokeResponsePtrOutput() MoveResourceErrorInvokeResponsePtrOutput {
	return o
}

func (o MoveResourceErrorInvokeResponsePtrOutput) ToMoveResourceErrorInvokeResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorInvokeResponsePtrOutput {
	return o
}

func (o MoveResourceErrorInvokeResponsePtrOutput) Elem() MoveResourceErrorInvokeResponseOutput {
	return o.ApplyT(func(v *MoveResourceErrorInvokeResponse) MoveResourceErrorInvokeResponse { return *v }).(MoveResourceErrorInvokeResponseOutput)
}

// The move resource error body.
func (o MoveResourceErrorInvokeResponsePtrOutput) Properties() MoveResourceErrorBodyInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MoveResourceErrorInvokeResponse) *MoveResourceErrorBodyInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(MoveResourceErrorBodyInvokeResponsePtrOutput)
}

// An error response from the azure resource mover service.
type MoveResourceErrorResponse struct {
	// The move resource error body.
	Properties *MoveResourceErrorBodyResponse `pulumi:"properties"`
}

// MoveResourceErrorResponseInput is an input type that accepts MoveResourceErrorResponseArgs and MoveResourceErrorResponseOutput values.
// You can construct a concrete instance of `MoveResourceErrorResponseInput` via:
//
//          MoveResourceErrorResponseArgs{...}
type MoveResourceErrorResponseInput interface {
	pulumi.Input

	ToMoveResourceErrorResponseOutput() MoveResourceErrorResponseOutput
	ToMoveResourceErrorResponseOutputWithContext(context.Context) MoveResourceErrorResponseOutput
}

// An error response from the azure resource mover service.
type MoveResourceErrorResponseArgs struct {
	// The move resource error body.
	Properties MoveResourceErrorBodyResponsePtrInput `pulumi:"properties"`
}

func (MoveResourceErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceErrorResponse)(nil)).Elem()
}

func (i MoveResourceErrorResponseArgs) ToMoveResourceErrorResponseOutput() MoveResourceErrorResponseOutput {
	return i.ToMoveResourceErrorResponseOutputWithContext(context.Background())
}

func (i MoveResourceErrorResponseArgs) ToMoveResourceErrorResponseOutputWithContext(ctx context.Context) MoveResourceErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceErrorResponseOutput)
}

func (i MoveResourceErrorResponseArgs) ToMoveResourceErrorResponsePtrOutput() MoveResourceErrorResponsePtrOutput {
	return i.ToMoveResourceErrorResponsePtrOutputWithContext(context.Background())
}

func (i MoveResourceErrorResponseArgs) ToMoveResourceErrorResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceErrorResponseOutput).ToMoveResourceErrorResponsePtrOutputWithContext(ctx)
}

// MoveResourceErrorResponsePtrInput is an input type that accepts MoveResourceErrorResponseArgs, MoveResourceErrorResponsePtr and MoveResourceErrorResponsePtrOutput values.
// You can construct a concrete instance of `MoveResourceErrorResponsePtrInput` via:
//
//          MoveResourceErrorResponseArgs{...}
//
//  or:
//
//          nil
type MoveResourceErrorResponsePtrInput interface {
	pulumi.Input

	ToMoveResourceErrorResponsePtrOutput() MoveResourceErrorResponsePtrOutput
	ToMoveResourceErrorResponsePtrOutputWithContext(context.Context) MoveResourceErrorResponsePtrOutput
}

type moveResourceErrorResponsePtrType MoveResourceErrorResponseArgs

func MoveResourceErrorResponsePtr(v *MoveResourceErrorResponseArgs) MoveResourceErrorResponsePtrInput {
	return (*moveResourceErrorResponsePtrType)(v)
}

func (*moveResourceErrorResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourceErrorResponse)(nil)).Elem()
}

func (i *moveResourceErrorResponsePtrType) ToMoveResourceErrorResponsePtrOutput() MoveResourceErrorResponsePtrOutput {
	return i.ToMoveResourceErrorResponsePtrOutputWithContext(context.Background())
}

func (i *moveResourceErrorResponsePtrType) ToMoveResourceErrorResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceErrorResponsePtrOutput)
}

// An error response from the azure resource mover service.
type MoveResourceErrorResponseOutput struct{ *pulumi.OutputState }

func (MoveResourceErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceErrorResponse)(nil)).Elem()
}

func (o MoveResourceErrorResponseOutput) ToMoveResourceErrorResponseOutput() MoveResourceErrorResponseOutput {
	return o
}

func (o MoveResourceErrorResponseOutput) ToMoveResourceErrorResponseOutputWithContext(ctx context.Context) MoveResourceErrorResponseOutput {
	return o
}

func (o MoveResourceErrorResponseOutput) ToMoveResourceErrorResponsePtrOutput() MoveResourceErrorResponsePtrOutput {
	return o.ToMoveResourceErrorResponsePtrOutputWithContext(context.Background())
}

func (o MoveResourceErrorResponseOutput) ToMoveResourceErrorResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorResponsePtrOutput {
	return o.ApplyT(func(v MoveResourceErrorResponse) *MoveResourceErrorResponse {
		return &v
	}).(MoveResourceErrorResponsePtrOutput)
}

// The move resource error body.
func (o MoveResourceErrorResponseOutput) Properties() MoveResourceErrorBodyResponsePtrOutput {
	return o.ApplyT(func(v MoveResourceErrorResponse) *MoveResourceErrorBodyResponse { return v.Properties }).(MoveResourceErrorBodyResponsePtrOutput)
}

type MoveResourceErrorResponsePtrOutput struct{ *pulumi.OutputState }

func (MoveResourceErrorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourceErrorResponse)(nil)).Elem()
}

func (o MoveResourceErrorResponsePtrOutput) ToMoveResourceErrorResponsePtrOutput() MoveResourceErrorResponsePtrOutput {
	return o
}

func (o MoveResourceErrorResponsePtrOutput) ToMoveResourceErrorResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorResponsePtrOutput {
	return o
}

func (o MoveResourceErrorResponsePtrOutput) Elem() MoveResourceErrorResponseOutput {
	return o.ApplyT(func(v *MoveResourceErrorResponse) MoveResourceErrorResponse { return *v }).(MoveResourceErrorResponseOutput)
}

// The move resource error body.
func (o MoveResourceErrorResponsePtrOutput) Properties() MoveResourceErrorBodyResponsePtrOutput {
	return o.ApplyT(func(v *MoveResourceErrorResponse) *MoveResourceErrorBodyResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(MoveResourceErrorBodyResponsePtrOutput)
}

// Defines the move resource properties.
type MoveResourceProperties struct {
	// Gets or sets the move resource dependencies overrides.
	DependsOnOverrides []MoveResourceDependencyOverride `pulumi:"dependsOnOverrides"`
	// Gets or sets the existing target ARM Id of the resource.
	ExistingTargetId *string `pulumi:"existingTargetId"`
	// Gets or sets the resource settings.
	ResourceSettings interface{} `pulumi:"resourceSettings"`
	// Gets or sets the Source ARM Id of the resource.
	SourceId string `pulumi:"sourceId"`
}

// MoveResourcePropertiesInput is an input type that accepts MoveResourcePropertiesArgs and MoveResourcePropertiesOutput values.
// You can construct a concrete instance of `MoveResourcePropertiesInput` via:
//
//          MoveResourcePropertiesArgs{...}
type MoveResourcePropertiesInput interface {
	pulumi.Input

	ToMoveResourcePropertiesOutput() MoveResourcePropertiesOutput
	ToMoveResourcePropertiesOutputWithContext(context.Context) MoveResourcePropertiesOutput
}

// Defines the move resource properties.
type MoveResourcePropertiesArgs struct {
	// Gets or sets the move resource dependencies overrides.
	DependsOnOverrides MoveResourceDependencyOverrideArrayInput `pulumi:"dependsOnOverrides"`
	// Gets or sets the existing target ARM Id of the resource.
	ExistingTargetId pulumi.StringPtrInput `pulumi:"existingTargetId"`
	// Gets or sets the resource settings.
	ResourceSettings pulumi.Input `pulumi:"resourceSettings"`
	// Gets or sets the Source ARM Id of the resource.
	SourceId pulumi.StringInput `pulumi:"sourceId"`
}

func (MoveResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceProperties)(nil)).Elem()
}

func (i MoveResourcePropertiesArgs) ToMoveResourcePropertiesOutput() MoveResourcePropertiesOutput {
	return i.ToMoveResourcePropertiesOutputWithContext(context.Background())
}

func (i MoveResourcePropertiesArgs) ToMoveResourcePropertiesOutputWithContext(ctx context.Context) MoveResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourcePropertiesOutput)
}

func (i MoveResourcePropertiesArgs) ToMoveResourcePropertiesPtrOutput() MoveResourcePropertiesPtrOutput {
	return i.ToMoveResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i MoveResourcePropertiesArgs) ToMoveResourcePropertiesPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourcePropertiesOutput).ToMoveResourcePropertiesPtrOutputWithContext(ctx)
}

// MoveResourcePropertiesPtrInput is an input type that accepts MoveResourcePropertiesArgs, MoveResourcePropertiesPtr and MoveResourcePropertiesPtrOutput values.
// You can construct a concrete instance of `MoveResourcePropertiesPtrInput` via:
//
//          MoveResourcePropertiesArgs{...}
//
//  or:
//
//          nil
type MoveResourcePropertiesPtrInput interface {
	pulumi.Input

	ToMoveResourcePropertiesPtrOutput() MoveResourcePropertiesPtrOutput
	ToMoveResourcePropertiesPtrOutputWithContext(context.Context) MoveResourcePropertiesPtrOutput
}

type moveResourcePropertiesPtrType MoveResourcePropertiesArgs

func MoveResourcePropertiesPtr(v *MoveResourcePropertiesArgs) MoveResourcePropertiesPtrInput {
	return (*moveResourcePropertiesPtrType)(v)
}

func (*moveResourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourceProperties)(nil)).Elem()
}

func (i *moveResourcePropertiesPtrType) ToMoveResourcePropertiesPtrOutput() MoveResourcePropertiesPtrOutput {
	return i.ToMoveResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *moveResourcePropertiesPtrType) ToMoveResourcePropertiesPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourcePropertiesPtrOutput)
}

// Defines the move resource properties.
type MoveResourcePropertiesOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceProperties)(nil)).Elem()
}

func (o MoveResourcePropertiesOutput) ToMoveResourcePropertiesOutput() MoveResourcePropertiesOutput {
	return o
}

func (o MoveResourcePropertiesOutput) ToMoveResourcePropertiesOutputWithContext(ctx context.Context) MoveResourcePropertiesOutput {
	return o
}

func (o MoveResourcePropertiesOutput) ToMoveResourcePropertiesPtrOutput() MoveResourcePropertiesPtrOutput {
	return o.ToMoveResourcePropertiesPtrOutputWithContext(context.Background())
}

func (o MoveResourcePropertiesOutput) ToMoveResourcePropertiesPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesPtrOutput {
	return o.ApplyT(func(v MoveResourceProperties) *MoveResourceProperties {
		return &v
	}).(MoveResourcePropertiesPtrOutput)
}

// Gets or sets the move resource dependencies overrides.
func (o MoveResourcePropertiesOutput) DependsOnOverrides() MoveResourceDependencyOverrideArrayOutput {
	return o.ApplyT(func(v MoveResourceProperties) []MoveResourceDependencyOverride { return v.DependsOnOverrides }).(MoveResourceDependencyOverrideArrayOutput)
}

// Gets or sets the existing target ARM Id of the resource.
func (o MoveResourcePropertiesOutput) ExistingTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceProperties) *string { return v.ExistingTargetId }).(pulumi.StringPtrOutput)
}

// Gets or sets the resource settings.
func (o MoveResourcePropertiesOutput) ResourceSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v MoveResourceProperties) interface{} { return v.ResourceSettings }).(pulumi.AnyOutput)
}

// Gets or sets the Source ARM Id of the resource.
func (o MoveResourcePropertiesOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourceProperties) string { return v.SourceId }).(pulumi.StringOutput)
}

type MoveResourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourceProperties)(nil)).Elem()
}

func (o MoveResourcePropertiesPtrOutput) ToMoveResourcePropertiesPtrOutput() MoveResourcePropertiesPtrOutput {
	return o
}

func (o MoveResourcePropertiesPtrOutput) ToMoveResourcePropertiesPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesPtrOutput {
	return o
}

func (o MoveResourcePropertiesPtrOutput) Elem() MoveResourcePropertiesOutput {
	return o.ApplyT(func(v *MoveResourceProperties) MoveResourceProperties { return *v }).(MoveResourcePropertiesOutput)
}

// Gets or sets the move resource dependencies overrides.
func (o MoveResourcePropertiesPtrOutput) DependsOnOverrides() MoveResourceDependencyOverrideArrayOutput {
	return o.ApplyT(func(v *MoveResourceProperties) []MoveResourceDependencyOverride {
		if v == nil {
			return nil
		}
		return v.DependsOnOverrides
	}).(MoveResourceDependencyOverrideArrayOutput)
}

// Gets or sets the existing target ARM Id of the resource.
func (o MoveResourcePropertiesPtrOutput) ExistingTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ExistingTargetId
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the resource settings.
func (o MoveResourcePropertiesPtrOutput) ResourceSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v *MoveResourceProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.ResourceSettings
	}).(pulumi.AnyOutput)
}

// Gets or sets the Source ARM Id of the resource.
func (o MoveResourcePropertiesPtrOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SourceId
	}).(pulumi.StringPtrOutput)
}

// Defines the move resource properties.
type MoveResourcePropertiesInvokeResponse struct {
	// Gets or sets the move resource dependencies.
	DependsOn []MoveResourceDependencyInvokeResponse `pulumi:"dependsOn"`
	// Gets or sets the move resource dependencies overrides.
	DependsOnOverrides []MoveResourceDependencyOverrideInvokeResponse `pulumi:"dependsOnOverrides"`
	// Defines the move resource errors.
	Errors MoveResourcePropertiesInvokeResponseErrors `pulumi:"errors"`
	// Gets or sets the existing target ARM Id of the resource.
	ExistingTargetId *string `pulumi:"existingTargetId"`
	// Gets a value indicating whether the resolve action is required over the move collection.
	IsResolveRequired bool `pulumi:"isResolveRequired"`
	// Defines the move resource status.
	MoveStatus MoveResourcePropertiesInvokeResponseMoveStatus `pulumi:"moveStatus"`
	// Defines the provisioning states.
	ProvisioningState string `pulumi:"provisioningState"`
	// Gets or sets the resource settings.
	ResourceSettings interface{} `pulumi:"resourceSettings"`
	// Gets or sets the Source ARM Id of the resource.
	SourceId string `pulumi:"sourceId"`
	// Gets or sets the source resource settings.
	SourceResourceSettings interface{} `pulumi:"sourceResourceSettings"`
	// Gets or sets the Target ARM Id of the resource.
	TargetId string `pulumi:"targetId"`
}

// MoveResourcePropertiesInvokeResponseInput is an input type that accepts MoveResourcePropertiesInvokeResponseArgs and MoveResourcePropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `MoveResourcePropertiesInvokeResponseInput` via:
//
//          MoveResourcePropertiesInvokeResponseArgs{...}
type MoveResourcePropertiesInvokeResponseInput interface {
	pulumi.Input

	ToMoveResourcePropertiesInvokeResponseOutput() MoveResourcePropertiesInvokeResponseOutput
	ToMoveResourcePropertiesInvokeResponseOutputWithContext(context.Context) MoveResourcePropertiesInvokeResponseOutput
}

// Defines the move resource properties.
type MoveResourcePropertiesInvokeResponseArgs struct {
	// Gets or sets the move resource dependencies.
	DependsOn MoveResourceDependencyInvokeResponseArrayInput `pulumi:"dependsOn"`
	// Gets or sets the move resource dependencies overrides.
	DependsOnOverrides MoveResourceDependencyOverrideInvokeResponseArrayInput `pulumi:"dependsOnOverrides"`
	// Defines the move resource errors.
	Errors MoveResourcePropertiesInvokeResponseErrorsInput `pulumi:"errors"`
	// Gets or sets the existing target ARM Id of the resource.
	ExistingTargetId pulumi.StringPtrInput `pulumi:"existingTargetId"`
	// Gets a value indicating whether the resolve action is required over the move collection.
	IsResolveRequired pulumi.BoolInput `pulumi:"isResolveRequired"`
	// Defines the move resource status.
	MoveStatus MoveResourcePropertiesInvokeResponseMoveStatusInput `pulumi:"moveStatus"`
	// Defines the provisioning states.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Gets or sets the resource settings.
	ResourceSettings pulumi.Input `pulumi:"resourceSettings"`
	// Gets or sets the Source ARM Id of the resource.
	SourceId pulumi.StringInput `pulumi:"sourceId"`
	// Gets or sets the source resource settings.
	SourceResourceSettings pulumi.Input `pulumi:"sourceResourceSettings"`
	// Gets or sets the Target ARM Id of the resource.
	TargetId pulumi.StringInput `pulumi:"targetId"`
}

func (MoveResourcePropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourcePropertiesInvokeResponse)(nil)).Elem()
}

func (i MoveResourcePropertiesInvokeResponseArgs) ToMoveResourcePropertiesInvokeResponseOutput() MoveResourcePropertiesInvokeResponseOutput {
	return i.ToMoveResourcePropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i MoveResourcePropertiesInvokeResponseArgs) ToMoveResourcePropertiesInvokeResponseOutputWithContext(ctx context.Context) MoveResourcePropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourcePropertiesInvokeResponseOutput)
}

// Defines the move resource properties.
type MoveResourcePropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourcePropertiesInvokeResponse)(nil)).Elem()
}

func (o MoveResourcePropertiesInvokeResponseOutput) ToMoveResourcePropertiesInvokeResponseOutput() MoveResourcePropertiesInvokeResponseOutput {
	return o
}

func (o MoveResourcePropertiesInvokeResponseOutput) ToMoveResourcePropertiesInvokeResponseOutputWithContext(ctx context.Context) MoveResourcePropertiesInvokeResponseOutput {
	return o
}

// Gets or sets the move resource dependencies.
func (o MoveResourcePropertiesInvokeResponseOutput) DependsOn() MoveResourceDependencyInvokeResponseArrayOutput {
	return o.ApplyT(func(v MoveResourcePropertiesInvokeResponse) []MoveResourceDependencyInvokeResponse {
		return v.DependsOn
	}).(MoveResourceDependencyInvokeResponseArrayOutput)
}

// Gets or sets the move resource dependencies overrides.
func (o MoveResourcePropertiesInvokeResponseOutput) DependsOnOverrides() MoveResourceDependencyOverrideInvokeResponseArrayOutput {
	return o.ApplyT(func(v MoveResourcePropertiesInvokeResponse) []MoveResourceDependencyOverrideInvokeResponse {
		return v.DependsOnOverrides
	}).(MoveResourceDependencyOverrideInvokeResponseArrayOutput)
}

// Defines the move resource errors.
func (o MoveResourcePropertiesInvokeResponseOutput) Errors() MoveResourcePropertiesInvokeResponseErrorsOutput {
	return o.ApplyT(func(v MoveResourcePropertiesInvokeResponse) MoveResourcePropertiesInvokeResponseErrors {
		return v.Errors
	}).(MoveResourcePropertiesInvokeResponseErrorsOutput)
}

// Gets or sets the existing target ARM Id of the resource.
func (o MoveResourcePropertiesInvokeResponseOutput) ExistingTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesInvokeResponse) *string { return v.ExistingTargetId }).(pulumi.StringPtrOutput)
}

// Gets a value indicating whether the resolve action is required over the move collection.
func (o MoveResourcePropertiesInvokeResponseOutput) IsResolveRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v MoveResourcePropertiesInvokeResponse) bool { return v.IsResolveRequired }).(pulumi.BoolOutput)
}

// Defines the move resource status.
func (o MoveResourcePropertiesInvokeResponseOutput) MoveStatus() MoveResourcePropertiesInvokeResponseMoveStatusOutput {
	return o.ApplyT(func(v MoveResourcePropertiesInvokeResponse) MoveResourcePropertiesInvokeResponseMoveStatus {
		return v.MoveStatus
	}).(MoveResourcePropertiesInvokeResponseMoveStatusOutput)
}

// Defines the provisioning states.
func (o MoveResourcePropertiesInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourcePropertiesInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets or sets the resource settings.
func (o MoveResourcePropertiesInvokeResponseOutput) ResourceSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v MoveResourcePropertiesInvokeResponse) interface{} { return v.ResourceSettings }).(pulumi.AnyOutput)
}

// Gets or sets the Source ARM Id of the resource.
func (o MoveResourcePropertiesInvokeResponseOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourcePropertiesInvokeResponse) string { return v.SourceId }).(pulumi.StringOutput)
}

// Gets or sets the source resource settings.
func (o MoveResourcePropertiesInvokeResponseOutput) SourceResourceSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v MoveResourcePropertiesInvokeResponse) interface{} { return v.SourceResourceSettings }).(pulumi.AnyOutput)
}

// Gets or sets the Target ARM Id of the resource.
func (o MoveResourcePropertiesInvokeResponseOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourcePropertiesInvokeResponse) string { return v.TargetId }).(pulumi.StringOutput)
}

// Defines the move resource errors.
type MoveResourcePropertiesInvokeResponseErrors struct {
	// The move resource error body.
	Properties *MoveResourceErrorBodyInvokeResponse `pulumi:"properties"`
}

// MoveResourcePropertiesInvokeResponseErrorsInput is an input type that accepts MoveResourcePropertiesInvokeResponseErrorsArgs and MoveResourcePropertiesInvokeResponseErrorsOutput values.
// You can construct a concrete instance of `MoveResourcePropertiesInvokeResponseErrorsInput` via:
//
//          MoveResourcePropertiesInvokeResponseErrorsArgs{...}
type MoveResourcePropertiesInvokeResponseErrorsInput interface {
	pulumi.Input

	ToMoveResourcePropertiesInvokeResponseErrorsOutput() MoveResourcePropertiesInvokeResponseErrorsOutput
	ToMoveResourcePropertiesInvokeResponseErrorsOutputWithContext(context.Context) MoveResourcePropertiesInvokeResponseErrorsOutput
}

// Defines the move resource errors.
type MoveResourcePropertiesInvokeResponseErrorsArgs struct {
	// The move resource error body.
	Properties MoveResourceErrorBodyInvokeResponsePtrInput `pulumi:"properties"`
}

func (MoveResourcePropertiesInvokeResponseErrorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourcePropertiesInvokeResponseErrors)(nil)).Elem()
}

func (i MoveResourcePropertiesInvokeResponseErrorsArgs) ToMoveResourcePropertiesInvokeResponseErrorsOutput() MoveResourcePropertiesInvokeResponseErrorsOutput {
	return i.ToMoveResourcePropertiesInvokeResponseErrorsOutputWithContext(context.Background())
}

func (i MoveResourcePropertiesInvokeResponseErrorsArgs) ToMoveResourcePropertiesInvokeResponseErrorsOutputWithContext(ctx context.Context) MoveResourcePropertiesInvokeResponseErrorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourcePropertiesInvokeResponseErrorsOutput)
}

// Defines the move resource errors.
type MoveResourcePropertiesInvokeResponseErrorsOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesInvokeResponseErrorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourcePropertiesInvokeResponseErrors)(nil)).Elem()
}

func (o MoveResourcePropertiesInvokeResponseErrorsOutput) ToMoveResourcePropertiesInvokeResponseErrorsOutput() MoveResourcePropertiesInvokeResponseErrorsOutput {
	return o
}

func (o MoveResourcePropertiesInvokeResponseErrorsOutput) ToMoveResourcePropertiesInvokeResponseErrorsOutputWithContext(ctx context.Context) MoveResourcePropertiesInvokeResponseErrorsOutput {
	return o
}

// The move resource error body.
func (o MoveResourcePropertiesInvokeResponseErrorsOutput) Properties() MoveResourceErrorBodyInvokeResponsePtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesInvokeResponseErrors) *MoveResourceErrorBodyInvokeResponse {
		return v.Properties
	}).(MoveResourceErrorBodyInvokeResponsePtrOutput)
}

// Defines the move resource status.
type MoveResourcePropertiesInvokeResponseMoveStatus struct {
	// An error response from the azure resource mover service.
	Errors *MoveResourceErrorInvokeResponse `pulumi:"errors"`
	// Defines the job status.
	JobStatus *JobStatusInvokeResponse `pulumi:"jobStatus"`
	// Defines the MoveResource states.
	MoveState string `pulumi:"moveState"`
}

// MoveResourcePropertiesInvokeResponseMoveStatusInput is an input type that accepts MoveResourcePropertiesInvokeResponseMoveStatusArgs and MoveResourcePropertiesInvokeResponseMoveStatusOutput values.
// You can construct a concrete instance of `MoveResourcePropertiesInvokeResponseMoveStatusInput` via:
//
//          MoveResourcePropertiesInvokeResponseMoveStatusArgs{...}
type MoveResourcePropertiesInvokeResponseMoveStatusInput interface {
	pulumi.Input

	ToMoveResourcePropertiesInvokeResponseMoveStatusOutput() MoveResourcePropertiesInvokeResponseMoveStatusOutput
	ToMoveResourcePropertiesInvokeResponseMoveStatusOutputWithContext(context.Context) MoveResourcePropertiesInvokeResponseMoveStatusOutput
}

// Defines the move resource status.
type MoveResourcePropertiesInvokeResponseMoveStatusArgs struct {
	// An error response from the azure resource mover service.
	Errors MoveResourceErrorInvokeResponsePtrInput `pulumi:"errors"`
	// Defines the job status.
	JobStatus JobStatusInvokeResponsePtrInput `pulumi:"jobStatus"`
	// Defines the MoveResource states.
	MoveState pulumi.StringInput `pulumi:"moveState"`
}

func (MoveResourcePropertiesInvokeResponseMoveStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourcePropertiesInvokeResponseMoveStatus)(nil)).Elem()
}

func (i MoveResourcePropertiesInvokeResponseMoveStatusArgs) ToMoveResourcePropertiesInvokeResponseMoveStatusOutput() MoveResourcePropertiesInvokeResponseMoveStatusOutput {
	return i.ToMoveResourcePropertiesInvokeResponseMoveStatusOutputWithContext(context.Background())
}

func (i MoveResourcePropertiesInvokeResponseMoveStatusArgs) ToMoveResourcePropertiesInvokeResponseMoveStatusOutputWithContext(ctx context.Context) MoveResourcePropertiesInvokeResponseMoveStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourcePropertiesInvokeResponseMoveStatusOutput)
}

// Defines the move resource status.
type MoveResourcePropertiesInvokeResponseMoveStatusOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesInvokeResponseMoveStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourcePropertiesInvokeResponseMoveStatus)(nil)).Elem()
}

func (o MoveResourcePropertiesInvokeResponseMoveStatusOutput) ToMoveResourcePropertiesInvokeResponseMoveStatusOutput() MoveResourcePropertiesInvokeResponseMoveStatusOutput {
	return o
}

func (o MoveResourcePropertiesInvokeResponseMoveStatusOutput) ToMoveResourcePropertiesInvokeResponseMoveStatusOutputWithContext(ctx context.Context) MoveResourcePropertiesInvokeResponseMoveStatusOutput {
	return o
}

// An error response from the azure resource mover service.
func (o MoveResourcePropertiesInvokeResponseMoveStatusOutput) Errors() MoveResourceErrorInvokeResponsePtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesInvokeResponseMoveStatus) *MoveResourceErrorInvokeResponse {
		return v.Errors
	}).(MoveResourceErrorInvokeResponsePtrOutput)
}

// Defines the job status.
func (o MoveResourcePropertiesInvokeResponseMoveStatusOutput) JobStatus() JobStatusInvokeResponsePtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesInvokeResponseMoveStatus) *JobStatusInvokeResponse { return v.JobStatus }).(JobStatusInvokeResponsePtrOutput)
}

// Defines the MoveResource states.
func (o MoveResourcePropertiesInvokeResponseMoveStatusOutput) MoveState() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourcePropertiesInvokeResponseMoveStatus) string { return v.MoveState }).(pulumi.StringOutput)
}

// Defines the move resource properties.
type MoveResourcePropertiesResponse struct {
	// Gets or sets the move resource dependencies.
	DependsOn []MoveResourceDependencyResponse `pulumi:"dependsOn"`
	// Gets or sets the move resource dependencies overrides.
	DependsOnOverrides []MoveResourceDependencyOverrideResponse `pulumi:"dependsOnOverrides"`
	// Defines the move resource errors.
	Errors MoveResourcePropertiesResponseErrors `pulumi:"errors"`
	// Gets or sets the existing target ARM Id of the resource.
	ExistingTargetId *string `pulumi:"existingTargetId"`
	// Gets a value indicating whether the resolve action is required over the move collection.
	IsResolveRequired bool `pulumi:"isResolveRequired"`
	// Defines the move resource status.
	MoveStatus MoveResourcePropertiesResponseMoveStatus `pulumi:"moveStatus"`
	// Defines the provisioning states.
	ProvisioningState string `pulumi:"provisioningState"`
	// Gets or sets the resource settings.
	ResourceSettings interface{} `pulumi:"resourceSettings"`
	// Gets or sets the Source ARM Id of the resource.
	SourceId string `pulumi:"sourceId"`
	// Gets or sets the source resource settings.
	SourceResourceSettings interface{} `pulumi:"sourceResourceSettings"`
	// Gets or sets the Target ARM Id of the resource.
	TargetId string `pulumi:"targetId"`
}

// MoveResourcePropertiesResponseInput is an input type that accepts MoveResourcePropertiesResponseArgs and MoveResourcePropertiesResponseOutput values.
// You can construct a concrete instance of `MoveResourcePropertiesResponseInput` via:
//
//          MoveResourcePropertiesResponseArgs{...}
type MoveResourcePropertiesResponseInput interface {
	pulumi.Input

	ToMoveResourcePropertiesResponseOutput() MoveResourcePropertiesResponseOutput
	ToMoveResourcePropertiesResponseOutputWithContext(context.Context) MoveResourcePropertiesResponseOutput
}

// Defines the move resource properties.
type MoveResourcePropertiesResponseArgs struct {
	// Gets or sets the move resource dependencies.
	DependsOn MoveResourceDependencyResponseArrayInput `pulumi:"dependsOn"`
	// Gets or sets the move resource dependencies overrides.
	DependsOnOverrides MoveResourceDependencyOverrideResponseArrayInput `pulumi:"dependsOnOverrides"`
	// Defines the move resource errors.
	Errors MoveResourcePropertiesResponseErrorsInput `pulumi:"errors"`
	// Gets or sets the existing target ARM Id of the resource.
	ExistingTargetId pulumi.StringPtrInput `pulumi:"existingTargetId"`
	// Gets a value indicating whether the resolve action is required over the move collection.
	IsResolveRequired pulumi.BoolInput `pulumi:"isResolveRequired"`
	// Defines the move resource status.
	MoveStatus MoveResourcePropertiesResponseMoveStatusInput `pulumi:"moveStatus"`
	// Defines the provisioning states.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Gets or sets the resource settings.
	ResourceSettings pulumi.Input `pulumi:"resourceSettings"`
	// Gets or sets the Source ARM Id of the resource.
	SourceId pulumi.StringInput `pulumi:"sourceId"`
	// Gets or sets the source resource settings.
	SourceResourceSettings pulumi.Input `pulumi:"sourceResourceSettings"`
	// Gets or sets the Target ARM Id of the resource.
	TargetId pulumi.StringInput `pulumi:"targetId"`
}

func (MoveResourcePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourcePropertiesResponse)(nil)).Elem()
}

func (i MoveResourcePropertiesResponseArgs) ToMoveResourcePropertiesResponseOutput() MoveResourcePropertiesResponseOutput {
	return i.ToMoveResourcePropertiesResponseOutputWithContext(context.Background())
}

func (i MoveResourcePropertiesResponseArgs) ToMoveResourcePropertiesResponseOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourcePropertiesResponseOutput)
}

func (i MoveResourcePropertiesResponseArgs) ToMoveResourcePropertiesResponsePtrOutput() MoveResourcePropertiesResponsePtrOutput {
	return i.ToMoveResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i MoveResourcePropertiesResponseArgs) ToMoveResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourcePropertiesResponseOutput).ToMoveResourcePropertiesResponsePtrOutputWithContext(ctx)
}

// MoveResourcePropertiesResponsePtrInput is an input type that accepts MoveResourcePropertiesResponseArgs, MoveResourcePropertiesResponsePtr and MoveResourcePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `MoveResourcePropertiesResponsePtrInput` via:
//
//          MoveResourcePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type MoveResourcePropertiesResponsePtrInput interface {
	pulumi.Input

	ToMoveResourcePropertiesResponsePtrOutput() MoveResourcePropertiesResponsePtrOutput
	ToMoveResourcePropertiesResponsePtrOutputWithContext(context.Context) MoveResourcePropertiesResponsePtrOutput
}

type moveResourcePropertiesResponsePtrType MoveResourcePropertiesResponseArgs

func MoveResourcePropertiesResponsePtr(v *MoveResourcePropertiesResponseArgs) MoveResourcePropertiesResponsePtrInput {
	return (*moveResourcePropertiesResponsePtrType)(v)
}

func (*moveResourcePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourcePropertiesResponse)(nil)).Elem()
}

func (i *moveResourcePropertiesResponsePtrType) ToMoveResourcePropertiesResponsePtrOutput() MoveResourcePropertiesResponsePtrOutput {
	return i.ToMoveResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *moveResourcePropertiesResponsePtrType) ToMoveResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourcePropertiesResponsePtrOutput)
}

// Defines the move resource properties.
type MoveResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourcePropertiesResponse)(nil)).Elem()
}

func (o MoveResourcePropertiesResponseOutput) ToMoveResourcePropertiesResponseOutput() MoveResourcePropertiesResponseOutput {
	return o
}

func (o MoveResourcePropertiesResponseOutput) ToMoveResourcePropertiesResponseOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseOutput {
	return o
}

func (o MoveResourcePropertiesResponseOutput) ToMoveResourcePropertiesResponsePtrOutput() MoveResourcePropertiesResponsePtrOutput {
	return o.ToMoveResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o MoveResourcePropertiesResponseOutput) ToMoveResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponsePtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) *MoveResourcePropertiesResponse {
		return &v
	}).(MoveResourcePropertiesResponsePtrOutput)
}

// Gets or sets the move resource dependencies.
func (o MoveResourcePropertiesResponseOutput) DependsOn() MoveResourceDependencyResponseArrayOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) []MoveResourceDependencyResponse { return v.DependsOn }).(MoveResourceDependencyResponseArrayOutput)
}

// Gets or sets the move resource dependencies overrides.
func (o MoveResourcePropertiesResponseOutput) DependsOnOverrides() MoveResourceDependencyOverrideResponseArrayOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) []MoveResourceDependencyOverrideResponse {
		return v.DependsOnOverrides
	}).(MoveResourceDependencyOverrideResponseArrayOutput)
}

// Defines the move resource errors.
func (o MoveResourcePropertiesResponseOutput) Errors() MoveResourcePropertiesResponseErrorsOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) MoveResourcePropertiesResponseErrors { return v.Errors }).(MoveResourcePropertiesResponseErrorsOutput)
}

// Gets or sets the existing target ARM Id of the resource.
func (o MoveResourcePropertiesResponseOutput) ExistingTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) *string { return v.ExistingTargetId }).(pulumi.StringPtrOutput)
}

// Gets a value indicating whether the resolve action is required over the move collection.
func (o MoveResourcePropertiesResponseOutput) IsResolveRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) bool { return v.IsResolveRequired }).(pulumi.BoolOutput)
}

// Defines the move resource status.
func (o MoveResourcePropertiesResponseOutput) MoveStatus() MoveResourcePropertiesResponseMoveStatusOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) MoveResourcePropertiesResponseMoveStatus { return v.MoveStatus }).(MoveResourcePropertiesResponseMoveStatusOutput)
}

// Defines the provisioning states.
func (o MoveResourcePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets or sets the resource settings.
func (o MoveResourcePropertiesResponseOutput) ResourceSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) interface{} { return v.ResourceSettings }).(pulumi.AnyOutput)
}

// Gets or sets the Source ARM Id of the resource.
func (o MoveResourcePropertiesResponseOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) string { return v.SourceId }).(pulumi.StringOutput)
}

// Gets or sets the source resource settings.
func (o MoveResourcePropertiesResponseOutput) SourceResourceSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) interface{} { return v.SourceResourceSettings }).(pulumi.AnyOutput)
}

// Gets or sets the Target ARM Id of the resource.
func (o MoveResourcePropertiesResponseOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) string { return v.TargetId }).(pulumi.StringOutput)
}

type MoveResourcePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourcePropertiesResponse)(nil)).Elem()
}

func (o MoveResourcePropertiesResponsePtrOutput) ToMoveResourcePropertiesResponsePtrOutput() MoveResourcePropertiesResponsePtrOutput {
	return o
}

func (o MoveResourcePropertiesResponsePtrOutput) ToMoveResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponsePtrOutput {
	return o
}

func (o MoveResourcePropertiesResponsePtrOutput) Elem() MoveResourcePropertiesResponseOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) MoveResourcePropertiesResponse { return *v }).(MoveResourcePropertiesResponseOutput)
}

// Gets or sets the move resource dependencies.
func (o MoveResourcePropertiesResponsePtrOutput) DependsOn() MoveResourceDependencyResponseArrayOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) []MoveResourceDependencyResponse {
		if v == nil {
			return nil
		}
		return v.DependsOn
	}).(MoveResourceDependencyResponseArrayOutput)
}

// Gets or sets the move resource dependencies overrides.
func (o MoveResourcePropertiesResponsePtrOutput) DependsOnOverrides() MoveResourceDependencyOverrideResponseArrayOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) []MoveResourceDependencyOverrideResponse {
		if v == nil {
			return nil
		}
		return v.DependsOnOverrides
	}).(MoveResourceDependencyOverrideResponseArrayOutput)
}

// Defines the move resource errors.
func (o MoveResourcePropertiesResponsePtrOutput) Errors() MoveResourcePropertiesResponseErrorsPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) *MoveResourcePropertiesResponseErrors {
		if v == nil {
			return nil
		}
		return &v.Errors
	}).(MoveResourcePropertiesResponseErrorsPtrOutput)
}

// Gets or sets the existing target ARM Id of the resource.
func (o MoveResourcePropertiesResponsePtrOutput) ExistingTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExistingTargetId
	}).(pulumi.StringPtrOutput)
}

// Gets a value indicating whether the resolve action is required over the move collection.
func (o MoveResourcePropertiesResponsePtrOutput) IsResolveRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsResolveRequired
	}).(pulumi.BoolPtrOutput)
}

// Defines the move resource status.
func (o MoveResourcePropertiesResponsePtrOutput) MoveStatus() MoveResourcePropertiesResponseMoveStatusPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) *MoveResourcePropertiesResponseMoveStatus {
		if v == nil {
			return nil
		}
		return &v.MoveStatus
	}).(MoveResourcePropertiesResponseMoveStatusPtrOutput)
}

// Defines the provisioning states.
func (o MoveResourcePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the resource settings.
func (o MoveResourcePropertiesResponsePtrOutput) ResourceSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.ResourceSettings
	}).(pulumi.AnyOutput)
}

// Gets or sets the Source ARM Id of the resource.
func (o MoveResourcePropertiesResponsePtrOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceId
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the source resource settings.
func (o MoveResourcePropertiesResponsePtrOutput) SourceResourceSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.SourceResourceSettings
	}).(pulumi.AnyOutput)
}

// Gets or sets the Target ARM Id of the resource.
func (o MoveResourcePropertiesResponsePtrOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetId
	}).(pulumi.StringPtrOutput)
}

// Defines the move resource errors.
type MoveResourcePropertiesResponseErrors struct {
	// The move resource error body.
	Properties *MoveResourceErrorBodyResponse `pulumi:"properties"`
}

// MoveResourcePropertiesResponseErrorsInput is an input type that accepts MoveResourcePropertiesResponseErrorsArgs and MoveResourcePropertiesResponseErrorsOutput values.
// You can construct a concrete instance of `MoveResourcePropertiesResponseErrorsInput` via:
//
//          MoveResourcePropertiesResponseErrorsArgs{...}
type MoveResourcePropertiesResponseErrorsInput interface {
	pulumi.Input

	ToMoveResourcePropertiesResponseErrorsOutput() MoveResourcePropertiesResponseErrorsOutput
	ToMoveResourcePropertiesResponseErrorsOutputWithContext(context.Context) MoveResourcePropertiesResponseErrorsOutput
}

// Defines the move resource errors.
type MoveResourcePropertiesResponseErrorsArgs struct {
	// The move resource error body.
	Properties MoveResourceErrorBodyResponsePtrInput `pulumi:"properties"`
}

func (MoveResourcePropertiesResponseErrorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourcePropertiesResponseErrors)(nil)).Elem()
}

func (i MoveResourcePropertiesResponseErrorsArgs) ToMoveResourcePropertiesResponseErrorsOutput() MoveResourcePropertiesResponseErrorsOutput {
	return i.ToMoveResourcePropertiesResponseErrorsOutputWithContext(context.Background())
}

func (i MoveResourcePropertiesResponseErrorsArgs) ToMoveResourcePropertiesResponseErrorsOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseErrorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourcePropertiesResponseErrorsOutput)
}

func (i MoveResourcePropertiesResponseErrorsArgs) ToMoveResourcePropertiesResponseErrorsPtrOutput() MoveResourcePropertiesResponseErrorsPtrOutput {
	return i.ToMoveResourcePropertiesResponseErrorsPtrOutputWithContext(context.Background())
}

func (i MoveResourcePropertiesResponseErrorsArgs) ToMoveResourcePropertiesResponseErrorsPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseErrorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourcePropertiesResponseErrorsOutput).ToMoveResourcePropertiesResponseErrorsPtrOutputWithContext(ctx)
}

// MoveResourcePropertiesResponseErrorsPtrInput is an input type that accepts MoveResourcePropertiesResponseErrorsArgs, MoveResourcePropertiesResponseErrorsPtr and MoveResourcePropertiesResponseErrorsPtrOutput values.
// You can construct a concrete instance of `MoveResourcePropertiesResponseErrorsPtrInput` via:
//
//          MoveResourcePropertiesResponseErrorsArgs{...}
//
//  or:
//
//          nil
type MoveResourcePropertiesResponseErrorsPtrInput interface {
	pulumi.Input

	ToMoveResourcePropertiesResponseErrorsPtrOutput() MoveResourcePropertiesResponseErrorsPtrOutput
	ToMoveResourcePropertiesResponseErrorsPtrOutputWithContext(context.Context) MoveResourcePropertiesResponseErrorsPtrOutput
}

type moveResourcePropertiesResponseErrorsPtrType MoveResourcePropertiesResponseErrorsArgs

func MoveResourcePropertiesResponseErrorsPtr(v *MoveResourcePropertiesResponseErrorsArgs) MoveResourcePropertiesResponseErrorsPtrInput {
	return (*moveResourcePropertiesResponseErrorsPtrType)(v)
}

func (*moveResourcePropertiesResponseErrorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourcePropertiesResponseErrors)(nil)).Elem()
}

func (i *moveResourcePropertiesResponseErrorsPtrType) ToMoveResourcePropertiesResponseErrorsPtrOutput() MoveResourcePropertiesResponseErrorsPtrOutput {
	return i.ToMoveResourcePropertiesResponseErrorsPtrOutputWithContext(context.Background())
}

func (i *moveResourcePropertiesResponseErrorsPtrType) ToMoveResourcePropertiesResponseErrorsPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseErrorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourcePropertiesResponseErrorsPtrOutput)
}

// Defines the move resource errors.
type MoveResourcePropertiesResponseErrorsOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesResponseErrorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourcePropertiesResponseErrors)(nil)).Elem()
}

func (o MoveResourcePropertiesResponseErrorsOutput) ToMoveResourcePropertiesResponseErrorsOutput() MoveResourcePropertiesResponseErrorsOutput {
	return o
}

func (o MoveResourcePropertiesResponseErrorsOutput) ToMoveResourcePropertiesResponseErrorsOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseErrorsOutput {
	return o
}

func (o MoveResourcePropertiesResponseErrorsOutput) ToMoveResourcePropertiesResponseErrorsPtrOutput() MoveResourcePropertiesResponseErrorsPtrOutput {
	return o.ToMoveResourcePropertiesResponseErrorsPtrOutputWithContext(context.Background())
}

func (o MoveResourcePropertiesResponseErrorsOutput) ToMoveResourcePropertiesResponseErrorsPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseErrorsPtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponseErrors) *MoveResourcePropertiesResponseErrors {
		return &v
	}).(MoveResourcePropertiesResponseErrorsPtrOutput)
}

// The move resource error body.
func (o MoveResourcePropertiesResponseErrorsOutput) Properties() MoveResourceErrorBodyResponsePtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponseErrors) *MoveResourceErrorBodyResponse { return v.Properties }).(MoveResourceErrorBodyResponsePtrOutput)
}

type MoveResourcePropertiesResponseErrorsPtrOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesResponseErrorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourcePropertiesResponseErrors)(nil)).Elem()
}

func (o MoveResourcePropertiesResponseErrorsPtrOutput) ToMoveResourcePropertiesResponseErrorsPtrOutput() MoveResourcePropertiesResponseErrorsPtrOutput {
	return o
}

func (o MoveResourcePropertiesResponseErrorsPtrOutput) ToMoveResourcePropertiesResponseErrorsPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseErrorsPtrOutput {
	return o
}

func (o MoveResourcePropertiesResponseErrorsPtrOutput) Elem() MoveResourcePropertiesResponseErrorsOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponseErrors) MoveResourcePropertiesResponseErrors { return *v }).(MoveResourcePropertiesResponseErrorsOutput)
}

// The move resource error body.
func (o MoveResourcePropertiesResponseErrorsPtrOutput) Properties() MoveResourceErrorBodyResponsePtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponseErrors) *MoveResourceErrorBodyResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(MoveResourceErrorBodyResponsePtrOutput)
}

// Defines the move resource status.
type MoveResourcePropertiesResponseMoveStatus struct {
	// An error response from the azure resource mover service.
	Errors *MoveResourceErrorResponse `pulumi:"errors"`
	// Defines the job status.
	JobStatus *JobStatusResponse `pulumi:"jobStatus"`
	// Defines the MoveResource states.
	MoveState string `pulumi:"moveState"`
}

// MoveResourcePropertiesResponseMoveStatusInput is an input type that accepts MoveResourcePropertiesResponseMoveStatusArgs and MoveResourcePropertiesResponseMoveStatusOutput values.
// You can construct a concrete instance of `MoveResourcePropertiesResponseMoveStatusInput` via:
//
//          MoveResourcePropertiesResponseMoveStatusArgs{...}
type MoveResourcePropertiesResponseMoveStatusInput interface {
	pulumi.Input

	ToMoveResourcePropertiesResponseMoveStatusOutput() MoveResourcePropertiesResponseMoveStatusOutput
	ToMoveResourcePropertiesResponseMoveStatusOutputWithContext(context.Context) MoveResourcePropertiesResponseMoveStatusOutput
}

// Defines the move resource status.
type MoveResourcePropertiesResponseMoveStatusArgs struct {
	// An error response from the azure resource mover service.
	Errors MoveResourceErrorResponsePtrInput `pulumi:"errors"`
	// Defines the job status.
	JobStatus JobStatusResponsePtrInput `pulumi:"jobStatus"`
	// Defines the MoveResource states.
	MoveState pulumi.StringInput `pulumi:"moveState"`
}

func (MoveResourcePropertiesResponseMoveStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourcePropertiesResponseMoveStatus)(nil)).Elem()
}

func (i MoveResourcePropertiesResponseMoveStatusArgs) ToMoveResourcePropertiesResponseMoveStatusOutput() MoveResourcePropertiesResponseMoveStatusOutput {
	return i.ToMoveResourcePropertiesResponseMoveStatusOutputWithContext(context.Background())
}

func (i MoveResourcePropertiesResponseMoveStatusArgs) ToMoveResourcePropertiesResponseMoveStatusOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseMoveStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourcePropertiesResponseMoveStatusOutput)
}

func (i MoveResourcePropertiesResponseMoveStatusArgs) ToMoveResourcePropertiesResponseMoveStatusPtrOutput() MoveResourcePropertiesResponseMoveStatusPtrOutput {
	return i.ToMoveResourcePropertiesResponseMoveStatusPtrOutputWithContext(context.Background())
}

func (i MoveResourcePropertiesResponseMoveStatusArgs) ToMoveResourcePropertiesResponseMoveStatusPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseMoveStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourcePropertiesResponseMoveStatusOutput).ToMoveResourcePropertiesResponseMoveStatusPtrOutputWithContext(ctx)
}

// MoveResourcePropertiesResponseMoveStatusPtrInput is an input type that accepts MoveResourcePropertiesResponseMoveStatusArgs, MoveResourcePropertiesResponseMoveStatusPtr and MoveResourcePropertiesResponseMoveStatusPtrOutput values.
// You can construct a concrete instance of `MoveResourcePropertiesResponseMoveStatusPtrInput` via:
//
//          MoveResourcePropertiesResponseMoveStatusArgs{...}
//
//  or:
//
//          nil
type MoveResourcePropertiesResponseMoveStatusPtrInput interface {
	pulumi.Input

	ToMoveResourcePropertiesResponseMoveStatusPtrOutput() MoveResourcePropertiesResponseMoveStatusPtrOutput
	ToMoveResourcePropertiesResponseMoveStatusPtrOutputWithContext(context.Context) MoveResourcePropertiesResponseMoveStatusPtrOutput
}

type moveResourcePropertiesResponseMoveStatusPtrType MoveResourcePropertiesResponseMoveStatusArgs

func MoveResourcePropertiesResponseMoveStatusPtr(v *MoveResourcePropertiesResponseMoveStatusArgs) MoveResourcePropertiesResponseMoveStatusPtrInput {
	return (*moveResourcePropertiesResponseMoveStatusPtrType)(v)
}

func (*moveResourcePropertiesResponseMoveStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourcePropertiesResponseMoveStatus)(nil)).Elem()
}

func (i *moveResourcePropertiesResponseMoveStatusPtrType) ToMoveResourcePropertiesResponseMoveStatusPtrOutput() MoveResourcePropertiesResponseMoveStatusPtrOutput {
	return i.ToMoveResourcePropertiesResponseMoveStatusPtrOutputWithContext(context.Background())
}

func (i *moveResourcePropertiesResponseMoveStatusPtrType) ToMoveResourcePropertiesResponseMoveStatusPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseMoveStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourcePropertiesResponseMoveStatusPtrOutput)
}

// Defines the move resource status.
type MoveResourcePropertiesResponseMoveStatusOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesResponseMoveStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourcePropertiesResponseMoveStatus)(nil)).Elem()
}

func (o MoveResourcePropertiesResponseMoveStatusOutput) ToMoveResourcePropertiesResponseMoveStatusOutput() MoveResourcePropertiesResponseMoveStatusOutput {
	return o
}

func (o MoveResourcePropertiesResponseMoveStatusOutput) ToMoveResourcePropertiesResponseMoveStatusOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseMoveStatusOutput {
	return o
}

func (o MoveResourcePropertiesResponseMoveStatusOutput) ToMoveResourcePropertiesResponseMoveStatusPtrOutput() MoveResourcePropertiesResponseMoveStatusPtrOutput {
	return o.ToMoveResourcePropertiesResponseMoveStatusPtrOutputWithContext(context.Background())
}

func (o MoveResourcePropertiesResponseMoveStatusOutput) ToMoveResourcePropertiesResponseMoveStatusPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseMoveStatusPtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponseMoveStatus) *MoveResourcePropertiesResponseMoveStatus {
		return &v
	}).(MoveResourcePropertiesResponseMoveStatusPtrOutput)
}

// An error response from the azure resource mover service.
func (o MoveResourcePropertiesResponseMoveStatusOutput) Errors() MoveResourceErrorResponsePtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponseMoveStatus) *MoveResourceErrorResponse { return v.Errors }).(MoveResourceErrorResponsePtrOutput)
}

// Defines the job status.
func (o MoveResourcePropertiesResponseMoveStatusOutput) JobStatus() JobStatusResponsePtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponseMoveStatus) *JobStatusResponse { return v.JobStatus }).(JobStatusResponsePtrOutput)
}

// Defines the MoveResource states.
func (o MoveResourcePropertiesResponseMoveStatusOutput) MoveState() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponseMoveStatus) string { return v.MoveState }).(pulumi.StringOutput)
}

type MoveResourcePropertiesResponseMoveStatusPtrOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesResponseMoveStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourcePropertiesResponseMoveStatus)(nil)).Elem()
}

func (o MoveResourcePropertiesResponseMoveStatusPtrOutput) ToMoveResourcePropertiesResponseMoveStatusPtrOutput() MoveResourcePropertiesResponseMoveStatusPtrOutput {
	return o
}

func (o MoveResourcePropertiesResponseMoveStatusPtrOutput) ToMoveResourcePropertiesResponseMoveStatusPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseMoveStatusPtrOutput {
	return o
}

func (o MoveResourcePropertiesResponseMoveStatusPtrOutput) Elem() MoveResourcePropertiesResponseMoveStatusOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponseMoveStatus) MoveResourcePropertiesResponseMoveStatus { return *v }).(MoveResourcePropertiesResponseMoveStatusOutput)
}

// An error response from the azure resource mover service.
func (o MoveResourcePropertiesResponseMoveStatusPtrOutput) Errors() MoveResourceErrorResponsePtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponseMoveStatus) *MoveResourceErrorResponse {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(MoveResourceErrorResponsePtrOutput)
}

// Defines the job status.
func (o MoveResourcePropertiesResponseMoveStatusPtrOutput) JobStatus() JobStatusResponsePtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponseMoveStatus) *JobStatusResponse {
		if v == nil {
			return nil
		}
		return v.JobStatus
	}).(JobStatusResponsePtrOutput)
}

// Defines the MoveResource states.
func (o MoveResourcePropertiesResponseMoveStatusPtrOutput) MoveState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponseMoveStatus) *string {
		if v == nil {
			return nil
		}
		return &v.MoveState
	}).(pulumi.StringPtrOutput)
}

// Defines the network interface resource settings.
type NetworkInterfaceResourceSettings struct {
	// Gets or sets a value indicating whether accelerated networking is enabled.
	EnableAcceleratedNetworking *bool `pulumi:"enableAcceleratedNetworking"`
	// Gets or sets the IP configurations of the NIC.
	IpConfigurations []NicIpConfigurationResourceSettings `pulumi:"ipConfigurations"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/networkInterfaces'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// NetworkInterfaceResourceSettingsInput is an input type that accepts NetworkInterfaceResourceSettingsArgs and NetworkInterfaceResourceSettingsOutput values.
// You can construct a concrete instance of `NetworkInterfaceResourceSettingsInput` via:
//
//          NetworkInterfaceResourceSettingsArgs{...}
type NetworkInterfaceResourceSettingsInput interface {
	pulumi.Input

	ToNetworkInterfaceResourceSettingsOutput() NetworkInterfaceResourceSettingsOutput
	ToNetworkInterfaceResourceSettingsOutputWithContext(context.Context) NetworkInterfaceResourceSettingsOutput
}

// Defines the network interface resource settings.
type NetworkInterfaceResourceSettingsArgs struct {
	// Gets or sets a value indicating whether accelerated networking is enabled.
	EnableAcceleratedNetworking pulumi.BoolPtrInput `pulumi:"enableAcceleratedNetworking"`
	// Gets or sets the IP configurations of the NIC.
	IpConfigurations NicIpConfigurationResourceSettingsArrayInput `pulumi:"ipConfigurations"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/networkInterfaces'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (NetworkInterfaceResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResourceSettings)(nil)).Elem()
}

func (i NetworkInterfaceResourceSettingsArgs) ToNetworkInterfaceResourceSettingsOutput() NetworkInterfaceResourceSettingsOutput {
	return i.ToNetworkInterfaceResourceSettingsOutputWithContext(context.Background())
}

func (i NetworkInterfaceResourceSettingsArgs) ToNetworkInterfaceResourceSettingsOutputWithContext(ctx context.Context) NetworkInterfaceResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceResourceSettingsOutput)
}

// Defines the network interface resource settings.
type NetworkInterfaceResourceSettingsOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResourceSettings)(nil)).Elem()
}

func (o NetworkInterfaceResourceSettingsOutput) ToNetworkInterfaceResourceSettingsOutput() NetworkInterfaceResourceSettingsOutput {
	return o
}

func (o NetworkInterfaceResourceSettingsOutput) ToNetworkInterfaceResourceSettingsOutputWithContext(ctx context.Context) NetworkInterfaceResourceSettingsOutput {
	return o
}

// Gets or sets a value indicating whether accelerated networking is enabled.
func (o NetworkInterfaceResourceSettingsOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResourceSettings) *bool { return v.EnableAcceleratedNetworking }).(pulumi.BoolPtrOutput)
}

// Gets or sets the IP configurations of the NIC.
func (o NetworkInterfaceResourceSettingsOutput) IpConfigurations() NicIpConfigurationResourceSettingsArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResourceSettings) []NicIpConfigurationResourceSettings {
		return v.IpConfigurations
	}).(NicIpConfigurationResourceSettingsArrayOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Network/networkInterfaces'.
func (o NetworkInterfaceResourceSettingsOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResourceSettings) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o NetworkInterfaceResourceSettingsOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResourceSettings) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the network interface resource settings.
type NetworkInterfaceResourceSettingsInvokeResponse struct {
	// Gets or sets a value indicating whether accelerated networking is enabled.
	EnableAcceleratedNetworking *bool `pulumi:"enableAcceleratedNetworking"`
	// Gets or sets the IP configurations of the NIC.
	IpConfigurations []NicIpConfigurationResourceSettingsInvokeResponse `pulumi:"ipConfigurations"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/networkInterfaces'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// NetworkInterfaceResourceSettingsInvokeResponseInput is an input type that accepts NetworkInterfaceResourceSettingsInvokeResponseArgs and NetworkInterfaceResourceSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceResourceSettingsInvokeResponseInput` via:
//
//          NetworkInterfaceResourceSettingsInvokeResponseArgs{...}
type NetworkInterfaceResourceSettingsInvokeResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceResourceSettingsInvokeResponseOutput() NetworkInterfaceResourceSettingsInvokeResponseOutput
	ToNetworkInterfaceResourceSettingsInvokeResponseOutputWithContext(context.Context) NetworkInterfaceResourceSettingsInvokeResponseOutput
}

// Defines the network interface resource settings.
type NetworkInterfaceResourceSettingsInvokeResponseArgs struct {
	// Gets or sets a value indicating whether accelerated networking is enabled.
	EnableAcceleratedNetworking pulumi.BoolPtrInput `pulumi:"enableAcceleratedNetworking"`
	// Gets or sets the IP configurations of the NIC.
	IpConfigurations NicIpConfigurationResourceSettingsInvokeResponseArrayInput `pulumi:"ipConfigurations"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/networkInterfaces'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (NetworkInterfaceResourceSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i NetworkInterfaceResourceSettingsInvokeResponseArgs) ToNetworkInterfaceResourceSettingsInvokeResponseOutput() NetworkInterfaceResourceSettingsInvokeResponseOutput {
	return i.ToNetworkInterfaceResourceSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceResourceSettingsInvokeResponseArgs) ToNetworkInterfaceResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) NetworkInterfaceResourceSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceResourceSettingsInvokeResponseOutput)
}

// Defines the network interface resource settings.
type NetworkInterfaceResourceSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResourceSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o NetworkInterfaceResourceSettingsInvokeResponseOutput) ToNetworkInterfaceResourceSettingsInvokeResponseOutput() NetworkInterfaceResourceSettingsInvokeResponseOutput {
	return o
}

func (o NetworkInterfaceResourceSettingsInvokeResponseOutput) ToNetworkInterfaceResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) NetworkInterfaceResourceSettingsInvokeResponseOutput {
	return o
}

// Gets or sets a value indicating whether accelerated networking is enabled.
func (o NetworkInterfaceResourceSettingsInvokeResponseOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResourceSettingsInvokeResponse) *bool { return v.EnableAcceleratedNetworking }).(pulumi.BoolPtrOutput)
}

// Gets or sets the IP configurations of the NIC.
func (o NetworkInterfaceResourceSettingsInvokeResponseOutput) IpConfigurations() NicIpConfigurationResourceSettingsInvokeResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResourceSettingsInvokeResponse) []NicIpConfigurationResourceSettingsInvokeResponse {
		return v.IpConfigurations
	}).(NicIpConfigurationResourceSettingsInvokeResponseArrayOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Network/networkInterfaces'.
func (o NetworkInterfaceResourceSettingsInvokeResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResourceSettingsInvokeResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o NetworkInterfaceResourceSettingsInvokeResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResourceSettingsInvokeResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the network interface resource settings.
type NetworkInterfaceResourceSettingsResponse struct {
	// Gets or sets a value indicating whether accelerated networking is enabled.
	EnableAcceleratedNetworking *bool `pulumi:"enableAcceleratedNetworking"`
	// Gets or sets the IP configurations of the NIC.
	IpConfigurations []NicIpConfigurationResourceSettingsResponse `pulumi:"ipConfigurations"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/networkInterfaces'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// NetworkInterfaceResourceSettingsResponseInput is an input type that accepts NetworkInterfaceResourceSettingsResponseArgs and NetworkInterfaceResourceSettingsResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceResourceSettingsResponseInput` via:
//
//          NetworkInterfaceResourceSettingsResponseArgs{...}
type NetworkInterfaceResourceSettingsResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceResourceSettingsResponseOutput() NetworkInterfaceResourceSettingsResponseOutput
	ToNetworkInterfaceResourceSettingsResponseOutputWithContext(context.Context) NetworkInterfaceResourceSettingsResponseOutput
}

// Defines the network interface resource settings.
type NetworkInterfaceResourceSettingsResponseArgs struct {
	// Gets or sets a value indicating whether accelerated networking is enabled.
	EnableAcceleratedNetworking pulumi.BoolPtrInput `pulumi:"enableAcceleratedNetworking"`
	// Gets or sets the IP configurations of the NIC.
	IpConfigurations NicIpConfigurationResourceSettingsResponseArrayInput `pulumi:"ipConfigurations"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/networkInterfaces'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (NetworkInterfaceResourceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResourceSettingsResponse)(nil)).Elem()
}

func (i NetworkInterfaceResourceSettingsResponseArgs) ToNetworkInterfaceResourceSettingsResponseOutput() NetworkInterfaceResourceSettingsResponseOutput {
	return i.ToNetworkInterfaceResourceSettingsResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceResourceSettingsResponseArgs) ToNetworkInterfaceResourceSettingsResponseOutputWithContext(ctx context.Context) NetworkInterfaceResourceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceResourceSettingsResponseOutput)
}

// Defines the network interface resource settings.
type NetworkInterfaceResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResourceSettingsResponse)(nil)).Elem()
}

func (o NetworkInterfaceResourceSettingsResponseOutput) ToNetworkInterfaceResourceSettingsResponseOutput() NetworkInterfaceResourceSettingsResponseOutput {
	return o
}

func (o NetworkInterfaceResourceSettingsResponseOutput) ToNetworkInterfaceResourceSettingsResponseOutputWithContext(ctx context.Context) NetworkInterfaceResourceSettingsResponseOutput {
	return o
}

// Gets or sets a value indicating whether accelerated networking is enabled.
func (o NetworkInterfaceResourceSettingsResponseOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResourceSettingsResponse) *bool { return v.EnableAcceleratedNetworking }).(pulumi.BoolPtrOutput)
}

// Gets or sets the IP configurations of the NIC.
func (o NetworkInterfaceResourceSettingsResponseOutput) IpConfigurations() NicIpConfigurationResourceSettingsResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResourceSettingsResponse) []NicIpConfigurationResourceSettingsResponse {
		return v.IpConfigurations
	}).(NicIpConfigurationResourceSettingsResponseArrayOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Network/networkInterfaces'.
func (o NetworkInterfaceResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o NetworkInterfaceResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the NSG resource settings.
type NetworkSecurityGroupResourceSettings struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/networkSecurityGroups'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets Security rules of network security group.
	SecurityRules []NsgSecurityRule `pulumi:"securityRules"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// NetworkSecurityGroupResourceSettingsInput is an input type that accepts NetworkSecurityGroupResourceSettingsArgs and NetworkSecurityGroupResourceSettingsOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupResourceSettingsInput` via:
//
//          NetworkSecurityGroupResourceSettingsArgs{...}
type NetworkSecurityGroupResourceSettingsInput interface {
	pulumi.Input

	ToNetworkSecurityGroupResourceSettingsOutput() NetworkSecurityGroupResourceSettingsOutput
	ToNetworkSecurityGroupResourceSettingsOutputWithContext(context.Context) NetworkSecurityGroupResourceSettingsOutput
}

// Defines the NSG resource settings.
type NetworkSecurityGroupResourceSettingsArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/networkSecurityGroups'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets Security rules of network security group.
	SecurityRules NsgSecurityRuleArrayInput `pulumi:"securityRules"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (NetworkSecurityGroupResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResourceSettings)(nil)).Elem()
}

func (i NetworkSecurityGroupResourceSettingsArgs) ToNetworkSecurityGroupResourceSettingsOutput() NetworkSecurityGroupResourceSettingsOutput {
	return i.ToNetworkSecurityGroupResourceSettingsOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupResourceSettingsArgs) ToNetworkSecurityGroupResourceSettingsOutputWithContext(ctx context.Context) NetworkSecurityGroupResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupResourceSettingsOutput)
}

// Defines the NSG resource settings.
type NetworkSecurityGroupResourceSettingsOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResourceSettings)(nil)).Elem()
}

func (o NetworkSecurityGroupResourceSettingsOutput) ToNetworkSecurityGroupResourceSettingsOutput() NetworkSecurityGroupResourceSettingsOutput {
	return o
}

func (o NetworkSecurityGroupResourceSettingsOutput) ToNetworkSecurityGroupResourceSettingsOutputWithContext(ctx context.Context) NetworkSecurityGroupResourceSettingsOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Network/networkSecurityGroups'.
func (o NetworkSecurityGroupResourceSettingsOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResourceSettings) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets Security rules of network security group.
func (o NetworkSecurityGroupResourceSettingsOutput) SecurityRules() NsgSecurityRuleArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResourceSettings) []NsgSecurityRule { return v.SecurityRules }).(NsgSecurityRuleArrayOutput)
}

// Gets or sets the target Resource name.
func (o NetworkSecurityGroupResourceSettingsOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResourceSettings) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the NSG resource settings.
type NetworkSecurityGroupResourceSettingsInvokeResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/networkSecurityGroups'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets Security rules of network security group.
	SecurityRules []NsgSecurityRuleInvokeResponse `pulumi:"securityRules"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// NetworkSecurityGroupResourceSettingsInvokeResponseInput is an input type that accepts NetworkSecurityGroupResourceSettingsInvokeResponseArgs and NetworkSecurityGroupResourceSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupResourceSettingsInvokeResponseInput` via:
//
//          NetworkSecurityGroupResourceSettingsInvokeResponseArgs{...}
type NetworkSecurityGroupResourceSettingsInvokeResponseInput interface {
	pulumi.Input

	ToNetworkSecurityGroupResourceSettingsInvokeResponseOutput() NetworkSecurityGroupResourceSettingsInvokeResponseOutput
	ToNetworkSecurityGroupResourceSettingsInvokeResponseOutputWithContext(context.Context) NetworkSecurityGroupResourceSettingsInvokeResponseOutput
}

// Defines the NSG resource settings.
type NetworkSecurityGroupResourceSettingsInvokeResponseArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/networkSecurityGroups'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets Security rules of network security group.
	SecurityRules NsgSecurityRuleInvokeResponseArrayInput `pulumi:"securityRules"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (NetworkSecurityGroupResourceSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i NetworkSecurityGroupResourceSettingsInvokeResponseArgs) ToNetworkSecurityGroupResourceSettingsInvokeResponseOutput() NetworkSecurityGroupResourceSettingsInvokeResponseOutput {
	return i.ToNetworkSecurityGroupResourceSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupResourceSettingsInvokeResponseArgs) ToNetworkSecurityGroupResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupResourceSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupResourceSettingsInvokeResponseOutput)
}

// Defines the NSG resource settings.
type NetworkSecurityGroupResourceSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupResourceSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupResourceSettingsInvokeResponseOutput) ToNetworkSecurityGroupResourceSettingsInvokeResponseOutput() NetworkSecurityGroupResourceSettingsInvokeResponseOutput {
	return o
}

func (o NetworkSecurityGroupResourceSettingsInvokeResponseOutput) ToNetworkSecurityGroupResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupResourceSettingsInvokeResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Network/networkSecurityGroups'.
func (o NetworkSecurityGroupResourceSettingsInvokeResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResourceSettingsInvokeResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets Security rules of network security group.
func (o NetworkSecurityGroupResourceSettingsInvokeResponseOutput) SecurityRules() NsgSecurityRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResourceSettingsInvokeResponse) []NsgSecurityRuleInvokeResponse {
		return v.SecurityRules
	}).(NsgSecurityRuleInvokeResponseArrayOutput)
}

// Gets or sets the target Resource name.
func (o NetworkSecurityGroupResourceSettingsInvokeResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResourceSettingsInvokeResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the NSG resource settings.
type NetworkSecurityGroupResourceSettingsResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/networkSecurityGroups'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets Security rules of network security group.
	SecurityRules []NsgSecurityRuleResponse `pulumi:"securityRules"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// NetworkSecurityGroupResourceSettingsResponseInput is an input type that accepts NetworkSecurityGroupResourceSettingsResponseArgs and NetworkSecurityGroupResourceSettingsResponseOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupResourceSettingsResponseInput` via:
//
//          NetworkSecurityGroupResourceSettingsResponseArgs{...}
type NetworkSecurityGroupResourceSettingsResponseInput interface {
	pulumi.Input

	ToNetworkSecurityGroupResourceSettingsResponseOutput() NetworkSecurityGroupResourceSettingsResponseOutput
	ToNetworkSecurityGroupResourceSettingsResponseOutputWithContext(context.Context) NetworkSecurityGroupResourceSettingsResponseOutput
}

// Defines the NSG resource settings.
type NetworkSecurityGroupResourceSettingsResponseArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/networkSecurityGroups'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets Security rules of network security group.
	SecurityRules NsgSecurityRuleResponseArrayInput `pulumi:"securityRules"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (NetworkSecurityGroupResourceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResourceSettingsResponse)(nil)).Elem()
}

func (i NetworkSecurityGroupResourceSettingsResponseArgs) ToNetworkSecurityGroupResourceSettingsResponseOutput() NetworkSecurityGroupResourceSettingsResponseOutput {
	return i.ToNetworkSecurityGroupResourceSettingsResponseOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupResourceSettingsResponseArgs) ToNetworkSecurityGroupResourceSettingsResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupResourceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupResourceSettingsResponseOutput)
}

// Defines the NSG resource settings.
type NetworkSecurityGroupResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResourceSettingsResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupResourceSettingsResponseOutput) ToNetworkSecurityGroupResourceSettingsResponseOutput() NetworkSecurityGroupResourceSettingsResponseOutput {
	return o
}

func (o NetworkSecurityGroupResourceSettingsResponseOutput) ToNetworkSecurityGroupResourceSettingsResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupResourceSettingsResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Network/networkSecurityGroups'.
func (o NetworkSecurityGroupResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets Security rules of network security group.
func (o NetworkSecurityGroupResourceSettingsResponseOutput) SecurityRules() NsgSecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResourceSettingsResponse) []NsgSecurityRuleResponse { return v.SecurityRules }).(NsgSecurityRuleResponseArrayOutput)
}

// Gets or sets the target Resource name.
func (o NetworkSecurityGroupResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines NIC IP configuration properties.
type NicIpConfigurationResourceSettings struct {
	// Gets or sets the references of the load balancer backend address pools.
	LoadBalancerBackendAddressPools []LoadBalancerBackendAddressPoolReference `pulumi:"loadBalancerBackendAddressPools"`
	// Gets or sets the references of the load balancer NAT rules.
	LoadBalancerNatRules []LoadBalancerNatRuleReference `pulumi:"loadBalancerNatRules"`
	// Gets or sets the IP configuration name.
	Name *string `pulumi:"name"`
	// Gets or sets a value indicating whether this IP configuration is the primary.
	Primary *bool `pulumi:"primary"`
	// Gets or sets the private IP address of the network interface IP Configuration.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// Gets or sets the private IP address allocation method.
	PrivateIpAllocationMethod *string `pulumi:"privateIpAllocationMethod"`
	// Defines reference to a public IP.
	PublicIp *PublicIpReference `pulumi:"publicIp"`
	// Defines reference to subnet.
	Subnet *SubnetReference `pulumi:"subnet"`
}

// NicIpConfigurationResourceSettingsInput is an input type that accepts NicIpConfigurationResourceSettingsArgs and NicIpConfigurationResourceSettingsOutput values.
// You can construct a concrete instance of `NicIpConfigurationResourceSettingsInput` via:
//
//          NicIpConfigurationResourceSettingsArgs{...}
type NicIpConfigurationResourceSettingsInput interface {
	pulumi.Input

	ToNicIpConfigurationResourceSettingsOutput() NicIpConfigurationResourceSettingsOutput
	ToNicIpConfigurationResourceSettingsOutputWithContext(context.Context) NicIpConfigurationResourceSettingsOutput
}

// Defines NIC IP configuration properties.
type NicIpConfigurationResourceSettingsArgs struct {
	// Gets or sets the references of the load balancer backend address pools.
	LoadBalancerBackendAddressPools LoadBalancerBackendAddressPoolReferenceArrayInput `pulumi:"loadBalancerBackendAddressPools"`
	// Gets or sets the references of the load balancer NAT rules.
	LoadBalancerNatRules LoadBalancerNatRuleReferenceArrayInput `pulumi:"loadBalancerNatRules"`
	// Gets or sets the IP configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets a value indicating whether this IP configuration is the primary.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// Gets or sets the private IP address of the network interface IP Configuration.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// Gets or sets the private IP address allocation method.
	PrivateIpAllocationMethod pulumi.StringPtrInput `pulumi:"privateIpAllocationMethod"`
	// Defines reference to a public IP.
	PublicIp PublicIpReferencePtrInput `pulumi:"publicIp"`
	// Defines reference to subnet.
	Subnet SubnetReferencePtrInput `pulumi:"subnet"`
}

func (NicIpConfigurationResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NicIpConfigurationResourceSettings)(nil)).Elem()
}

func (i NicIpConfigurationResourceSettingsArgs) ToNicIpConfigurationResourceSettingsOutput() NicIpConfigurationResourceSettingsOutput {
	return i.ToNicIpConfigurationResourceSettingsOutputWithContext(context.Background())
}

func (i NicIpConfigurationResourceSettingsArgs) ToNicIpConfigurationResourceSettingsOutputWithContext(ctx context.Context) NicIpConfigurationResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicIpConfigurationResourceSettingsOutput)
}

// NicIpConfigurationResourceSettingsArrayInput is an input type that accepts NicIpConfigurationResourceSettingsArray and NicIpConfigurationResourceSettingsArrayOutput values.
// You can construct a concrete instance of `NicIpConfigurationResourceSettingsArrayInput` via:
//
//          NicIpConfigurationResourceSettingsArray{ NicIpConfigurationResourceSettingsArgs{...} }
type NicIpConfigurationResourceSettingsArrayInput interface {
	pulumi.Input

	ToNicIpConfigurationResourceSettingsArrayOutput() NicIpConfigurationResourceSettingsArrayOutput
	ToNicIpConfigurationResourceSettingsArrayOutputWithContext(context.Context) NicIpConfigurationResourceSettingsArrayOutput
}

type NicIpConfigurationResourceSettingsArray []NicIpConfigurationResourceSettingsInput

func (NicIpConfigurationResourceSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicIpConfigurationResourceSettings)(nil)).Elem()
}

func (i NicIpConfigurationResourceSettingsArray) ToNicIpConfigurationResourceSettingsArrayOutput() NicIpConfigurationResourceSettingsArrayOutput {
	return i.ToNicIpConfigurationResourceSettingsArrayOutputWithContext(context.Background())
}

func (i NicIpConfigurationResourceSettingsArray) ToNicIpConfigurationResourceSettingsArrayOutputWithContext(ctx context.Context) NicIpConfigurationResourceSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicIpConfigurationResourceSettingsArrayOutput)
}

// Defines NIC IP configuration properties.
type NicIpConfigurationResourceSettingsOutput struct{ *pulumi.OutputState }

func (NicIpConfigurationResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NicIpConfigurationResourceSettings)(nil)).Elem()
}

func (o NicIpConfigurationResourceSettingsOutput) ToNicIpConfigurationResourceSettingsOutput() NicIpConfigurationResourceSettingsOutput {
	return o
}

func (o NicIpConfigurationResourceSettingsOutput) ToNicIpConfigurationResourceSettingsOutputWithContext(ctx context.Context) NicIpConfigurationResourceSettingsOutput {
	return o
}

// Gets or sets the references of the load balancer backend address pools.
func (o NicIpConfigurationResourceSettingsOutput) LoadBalancerBackendAddressPools() LoadBalancerBackendAddressPoolReferenceArrayOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettings) []LoadBalancerBackendAddressPoolReference {
		return v.LoadBalancerBackendAddressPools
	}).(LoadBalancerBackendAddressPoolReferenceArrayOutput)
}

// Gets or sets the references of the load balancer NAT rules.
func (o NicIpConfigurationResourceSettingsOutput) LoadBalancerNatRules() LoadBalancerNatRuleReferenceArrayOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettings) []LoadBalancerNatRuleReference {
		return v.LoadBalancerNatRules
	}).(LoadBalancerNatRuleReferenceArrayOutput)
}

// Gets or sets the IP configuration name.
func (o NicIpConfigurationResourceSettingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets a value indicating whether this IP configuration is the primary.
func (o NicIpConfigurationResourceSettingsOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettings) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Gets or sets the private IP address of the network interface IP Configuration.
func (o NicIpConfigurationResourceSettingsOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettings) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// Gets or sets the private IP address allocation method.
func (o NicIpConfigurationResourceSettingsOutput) PrivateIpAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettings) *string { return v.PrivateIpAllocationMethod }).(pulumi.StringPtrOutput)
}

// Defines reference to a public IP.
func (o NicIpConfigurationResourceSettingsOutput) PublicIp() PublicIpReferencePtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettings) *PublicIpReference { return v.PublicIp }).(PublicIpReferencePtrOutput)
}

// Defines reference to subnet.
func (o NicIpConfigurationResourceSettingsOutput) Subnet() SubnetReferencePtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettings) *SubnetReference { return v.Subnet }).(SubnetReferencePtrOutput)
}

type NicIpConfigurationResourceSettingsArrayOutput struct{ *pulumi.OutputState }

func (NicIpConfigurationResourceSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicIpConfigurationResourceSettings)(nil)).Elem()
}

func (o NicIpConfigurationResourceSettingsArrayOutput) ToNicIpConfigurationResourceSettingsArrayOutput() NicIpConfigurationResourceSettingsArrayOutput {
	return o
}

func (o NicIpConfigurationResourceSettingsArrayOutput) ToNicIpConfigurationResourceSettingsArrayOutputWithContext(ctx context.Context) NicIpConfigurationResourceSettingsArrayOutput {
	return o
}

func (o NicIpConfigurationResourceSettingsArrayOutput) Index(i pulumi.IntInput) NicIpConfigurationResourceSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NicIpConfigurationResourceSettings {
		return vs[0].([]NicIpConfigurationResourceSettings)[vs[1].(int)]
	}).(NicIpConfigurationResourceSettingsOutput)
}

// Defines NIC IP configuration properties.
type NicIpConfigurationResourceSettingsInvokeResponse struct {
	// Gets or sets the references of the load balancer backend address pools.
	LoadBalancerBackendAddressPools []LoadBalancerBackendAddressPoolReferenceInvokeResponse `pulumi:"loadBalancerBackendAddressPools"`
	// Gets or sets the references of the load balancer NAT rules.
	LoadBalancerNatRules []LoadBalancerNatRuleReferenceInvokeResponse `pulumi:"loadBalancerNatRules"`
	// Gets or sets the IP configuration name.
	Name *string `pulumi:"name"`
	// Gets or sets a value indicating whether this IP configuration is the primary.
	Primary *bool `pulumi:"primary"`
	// Gets or sets the private IP address of the network interface IP Configuration.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// Gets or sets the private IP address allocation method.
	PrivateIpAllocationMethod *string `pulumi:"privateIpAllocationMethod"`
	// Defines reference to a public IP.
	PublicIp *PublicIpReferenceInvokeResponse `pulumi:"publicIp"`
	// Defines reference to subnet.
	Subnet *SubnetReferenceInvokeResponse `pulumi:"subnet"`
}

// NicIpConfigurationResourceSettingsInvokeResponseInput is an input type that accepts NicIpConfigurationResourceSettingsInvokeResponseArgs and NicIpConfigurationResourceSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `NicIpConfigurationResourceSettingsInvokeResponseInput` via:
//
//          NicIpConfigurationResourceSettingsInvokeResponseArgs{...}
type NicIpConfigurationResourceSettingsInvokeResponseInput interface {
	pulumi.Input

	ToNicIpConfigurationResourceSettingsInvokeResponseOutput() NicIpConfigurationResourceSettingsInvokeResponseOutput
	ToNicIpConfigurationResourceSettingsInvokeResponseOutputWithContext(context.Context) NicIpConfigurationResourceSettingsInvokeResponseOutput
}

// Defines NIC IP configuration properties.
type NicIpConfigurationResourceSettingsInvokeResponseArgs struct {
	// Gets or sets the references of the load balancer backend address pools.
	LoadBalancerBackendAddressPools LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayInput `pulumi:"loadBalancerBackendAddressPools"`
	// Gets or sets the references of the load balancer NAT rules.
	LoadBalancerNatRules LoadBalancerNatRuleReferenceInvokeResponseArrayInput `pulumi:"loadBalancerNatRules"`
	// Gets or sets the IP configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets a value indicating whether this IP configuration is the primary.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// Gets or sets the private IP address of the network interface IP Configuration.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// Gets or sets the private IP address allocation method.
	PrivateIpAllocationMethod pulumi.StringPtrInput `pulumi:"privateIpAllocationMethod"`
	// Defines reference to a public IP.
	PublicIp PublicIpReferenceInvokeResponsePtrInput `pulumi:"publicIp"`
	// Defines reference to subnet.
	Subnet SubnetReferenceInvokeResponsePtrInput `pulumi:"subnet"`
}

func (NicIpConfigurationResourceSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NicIpConfigurationResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i NicIpConfigurationResourceSettingsInvokeResponseArgs) ToNicIpConfigurationResourceSettingsInvokeResponseOutput() NicIpConfigurationResourceSettingsInvokeResponseOutput {
	return i.ToNicIpConfigurationResourceSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i NicIpConfigurationResourceSettingsInvokeResponseArgs) ToNicIpConfigurationResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) NicIpConfigurationResourceSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicIpConfigurationResourceSettingsInvokeResponseOutput)
}

// NicIpConfigurationResourceSettingsInvokeResponseArrayInput is an input type that accepts NicIpConfigurationResourceSettingsInvokeResponseArray and NicIpConfigurationResourceSettingsInvokeResponseArrayOutput values.
// You can construct a concrete instance of `NicIpConfigurationResourceSettingsInvokeResponseArrayInput` via:
//
//          NicIpConfigurationResourceSettingsInvokeResponseArray{ NicIpConfigurationResourceSettingsInvokeResponseArgs{...} }
type NicIpConfigurationResourceSettingsInvokeResponseArrayInput interface {
	pulumi.Input

	ToNicIpConfigurationResourceSettingsInvokeResponseArrayOutput() NicIpConfigurationResourceSettingsInvokeResponseArrayOutput
	ToNicIpConfigurationResourceSettingsInvokeResponseArrayOutputWithContext(context.Context) NicIpConfigurationResourceSettingsInvokeResponseArrayOutput
}

type NicIpConfigurationResourceSettingsInvokeResponseArray []NicIpConfigurationResourceSettingsInvokeResponseInput

func (NicIpConfigurationResourceSettingsInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicIpConfigurationResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i NicIpConfigurationResourceSettingsInvokeResponseArray) ToNicIpConfigurationResourceSettingsInvokeResponseArrayOutput() NicIpConfigurationResourceSettingsInvokeResponseArrayOutput {
	return i.ToNicIpConfigurationResourceSettingsInvokeResponseArrayOutputWithContext(context.Background())
}

func (i NicIpConfigurationResourceSettingsInvokeResponseArray) ToNicIpConfigurationResourceSettingsInvokeResponseArrayOutputWithContext(ctx context.Context) NicIpConfigurationResourceSettingsInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicIpConfigurationResourceSettingsInvokeResponseArrayOutput)
}

// Defines NIC IP configuration properties.
type NicIpConfigurationResourceSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (NicIpConfigurationResourceSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NicIpConfigurationResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o NicIpConfigurationResourceSettingsInvokeResponseOutput) ToNicIpConfigurationResourceSettingsInvokeResponseOutput() NicIpConfigurationResourceSettingsInvokeResponseOutput {
	return o
}

func (o NicIpConfigurationResourceSettingsInvokeResponseOutput) ToNicIpConfigurationResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) NicIpConfigurationResourceSettingsInvokeResponseOutput {
	return o
}

// Gets or sets the references of the load balancer backend address pools.
func (o NicIpConfigurationResourceSettingsInvokeResponseOutput) LoadBalancerBackendAddressPools() LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsInvokeResponse) []LoadBalancerBackendAddressPoolReferenceInvokeResponse {
		return v.LoadBalancerBackendAddressPools
	}).(LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput)
}

// Gets or sets the references of the load balancer NAT rules.
func (o NicIpConfigurationResourceSettingsInvokeResponseOutput) LoadBalancerNatRules() LoadBalancerNatRuleReferenceInvokeResponseArrayOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsInvokeResponse) []LoadBalancerNatRuleReferenceInvokeResponse {
		return v.LoadBalancerNatRules
	}).(LoadBalancerNatRuleReferenceInvokeResponseArrayOutput)
}

// Gets or sets the IP configuration name.
func (o NicIpConfigurationResourceSettingsInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets a value indicating whether this IP configuration is the primary.
func (o NicIpConfigurationResourceSettingsInvokeResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsInvokeResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Gets or sets the private IP address of the network interface IP Configuration.
func (o NicIpConfigurationResourceSettingsInvokeResponseOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsInvokeResponse) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// Gets or sets the private IP address allocation method.
func (o NicIpConfigurationResourceSettingsInvokeResponseOutput) PrivateIpAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsInvokeResponse) *string { return v.PrivateIpAllocationMethod }).(pulumi.StringPtrOutput)
}

// Defines reference to a public IP.
func (o NicIpConfigurationResourceSettingsInvokeResponseOutput) PublicIp() PublicIpReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsInvokeResponse) *PublicIpReferenceInvokeResponse {
		return v.PublicIp
	}).(PublicIpReferenceInvokeResponsePtrOutput)
}

// Defines reference to subnet.
func (o NicIpConfigurationResourceSettingsInvokeResponseOutput) Subnet() SubnetReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsInvokeResponse) *SubnetReferenceInvokeResponse {
		return v.Subnet
	}).(SubnetReferenceInvokeResponsePtrOutput)
}

type NicIpConfigurationResourceSettingsInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (NicIpConfigurationResourceSettingsInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicIpConfigurationResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o NicIpConfigurationResourceSettingsInvokeResponseArrayOutput) ToNicIpConfigurationResourceSettingsInvokeResponseArrayOutput() NicIpConfigurationResourceSettingsInvokeResponseArrayOutput {
	return o
}

func (o NicIpConfigurationResourceSettingsInvokeResponseArrayOutput) ToNicIpConfigurationResourceSettingsInvokeResponseArrayOutputWithContext(ctx context.Context) NicIpConfigurationResourceSettingsInvokeResponseArrayOutput {
	return o
}

func (o NicIpConfigurationResourceSettingsInvokeResponseArrayOutput) Index(i pulumi.IntInput) NicIpConfigurationResourceSettingsInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NicIpConfigurationResourceSettingsInvokeResponse {
		return vs[0].([]NicIpConfigurationResourceSettingsInvokeResponse)[vs[1].(int)]
	}).(NicIpConfigurationResourceSettingsInvokeResponseOutput)
}

// Defines NIC IP configuration properties.
type NicIpConfigurationResourceSettingsResponse struct {
	// Gets or sets the references of the load balancer backend address pools.
	LoadBalancerBackendAddressPools []LoadBalancerBackendAddressPoolReferenceResponse `pulumi:"loadBalancerBackendAddressPools"`
	// Gets or sets the references of the load balancer NAT rules.
	LoadBalancerNatRules []LoadBalancerNatRuleReferenceResponse `pulumi:"loadBalancerNatRules"`
	// Gets or sets the IP configuration name.
	Name *string `pulumi:"name"`
	// Gets or sets a value indicating whether this IP configuration is the primary.
	Primary *bool `pulumi:"primary"`
	// Gets or sets the private IP address of the network interface IP Configuration.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// Gets or sets the private IP address allocation method.
	PrivateIpAllocationMethod *string `pulumi:"privateIpAllocationMethod"`
	// Defines reference to a public IP.
	PublicIp *PublicIpReferenceResponse `pulumi:"publicIp"`
	// Defines reference to subnet.
	Subnet *SubnetReferenceResponse `pulumi:"subnet"`
}

// NicIpConfigurationResourceSettingsResponseInput is an input type that accepts NicIpConfigurationResourceSettingsResponseArgs and NicIpConfigurationResourceSettingsResponseOutput values.
// You can construct a concrete instance of `NicIpConfigurationResourceSettingsResponseInput` via:
//
//          NicIpConfigurationResourceSettingsResponseArgs{...}
type NicIpConfigurationResourceSettingsResponseInput interface {
	pulumi.Input

	ToNicIpConfigurationResourceSettingsResponseOutput() NicIpConfigurationResourceSettingsResponseOutput
	ToNicIpConfigurationResourceSettingsResponseOutputWithContext(context.Context) NicIpConfigurationResourceSettingsResponseOutput
}

// Defines NIC IP configuration properties.
type NicIpConfigurationResourceSettingsResponseArgs struct {
	// Gets or sets the references of the load balancer backend address pools.
	LoadBalancerBackendAddressPools LoadBalancerBackendAddressPoolReferenceResponseArrayInput `pulumi:"loadBalancerBackendAddressPools"`
	// Gets or sets the references of the load balancer NAT rules.
	LoadBalancerNatRules LoadBalancerNatRuleReferenceResponseArrayInput `pulumi:"loadBalancerNatRules"`
	// Gets or sets the IP configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets a value indicating whether this IP configuration is the primary.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// Gets or sets the private IP address of the network interface IP Configuration.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// Gets or sets the private IP address allocation method.
	PrivateIpAllocationMethod pulumi.StringPtrInput `pulumi:"privateIpAllocationMethod"`
	// Defines reference to a public IP.
	PublicIp PublicIpReferenceResponsePtrInput `pulumi:"publicIp"`
	// Defines reference to subnet.
	Subnet SubnetReferenceResponsePtrInput `pulumi:"subnet"`
}

func (NicIpConfigurationResourceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NicIpConfigurationResourceSettingsResponse)(nil)).Elem()
}

func (i NicIpConfigurationResourceSettingsResponseArgs) ToNicIpConfigurationResourceSettingsResponseOutput() NicIpConfigurationResourceSettingsResponseOutput {
	return i.ToNicIpConfigurationResourceSettingsResponseOutputWithContext(context.Background())
}

func (i NicIpConfigurationResourceSettingsResponseArgs) ToNicIpConfigurationResourceSettingsResponseOutputWithContext(ctx context.Context) NicIpConfigurationResourceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicIpConfigurationResourceSettingsResponseOutput)
}

// NicIpConfigurationResourceSettingsResponseArrayInput is an input type that accepts NicIpConfigurationResourceSettingsResponseArray and NicIpConfigurationResourceSettingsResponseArrayOutput values.
// You can construct a concrete instance of `NicIpConfigurationResourceSettingsResponseArrayInput` via:
//
//          NicIpConfigurationResourceSettingsResponseArray{ NicIpConfigurationResourceSettingsResponseArgs{...} }
type NicIpConfigurationResourceSettingsResponseArrayInput interface {
	pulumi.Input

	ToNicIpConfigurationResourceSettingsResponseArrayOutput() NicIpConfigurationResourceSettingsResponseArrayOutput
	ToNicIpConfigurationResourceSettingsResponseArrayOutputWithContext(context.Context) NicIpConfigurationResourceSettingsResponseArrayOutput
}

type NicIpConfigurationResourceSettingsResponseArray []NicIpConfigurationResourceSettingsResponseInput

func (NicIpConfigurationResourceSettingsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicIpConfigurationResourceSettingsResponse)(nil)).Elem()
}

func (i NicIpConfigurationResourceSettingsResponseArray) ToNicIpConfigurationResourceSettingsResponseArrayOutput() NicIpConfigurationResourceSettingsResponseArrayOutput {
	return i.ToNicIpConfigurationResourceSettingsResponseArrayOutputWithContext(context.Background())
}

func (i NicIpConfigurationResourceSettingsResponseArray) ToNicIpConfigurationResourceSettingsResponseArrayOutputWithContext(ctx context.Context) NicIpConfigurationResourceSettingsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicIpConfigurationResourceSettingsResponseArrayOutput)
}

// Defines NIC IP configuration properties.
type NicIpConfigurationResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (NicIpConfigurationResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NicIpConfigurationResourceSettingsResponse)(nil)).Elem()
}

func (o NicIpConfigurationResourceSettingsResponseOutput) ToNicIpConfigurationResourceSettingsResponseOutput() NicIpConfigurationResourceSettingsResponseOutput {
	return o
}

func (o NicIpConfigurationResourceSettingsResponseOutput) ToNicIpConfigurationResourceSettingsResponseOutputWithContext(ctx context.Context) NicIpConfigurationResourceSettingsResponseOutput {
	return o
}

// Gets or sets the references of the load balancer backend address pools.
func (o NicIpConfigurationResourceSettingsResponseOutput) LoadBalancerBackendAddressPools() LoadBalancerBackendAddressPoolReferenceResponseArrayOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsResponse) []LoadBalancerBackendAddressPoolReferenceResponse {
		return v.LoadBalancerBackendAddressPools
	}).(LoadBalancerBackendAddressPoolReferenceResponseArrayOutput)
}

// Gets or sets the references of the load balancer NAT rules.
func (o NicIpConfigurationResourceSettingsResponseOutput) LoadBalancerNatRules() LoadBalancerNatRuleReferenceResponseArrayOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsResponse) []LoadBalancerNatRuleReferenceResponse {
		return v.LoadBalancerNatRules
	}).(LoadBalancerNatRuleReferenceResponseArrayOutput)
}

// Gets or sets the IP configuration name.
func (o NicIpConfigurationResourceSettingsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets a value indicating whether this IP configuration is the primary.
func (o NicIpConfigurationResourceSettingsResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Gets or sets the private IP address of the network interface IP Configuration.
func (o NicIpConfigurationResourceSettingsResponseOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsResponse) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// Gets or sets the private IP address allocation method.
func (o NicIpConfigurationResourceSettingsResponseOutput) PrivateIpAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsResponse) *string { return v.PrivateIpAllocationMethod }).(pulumi.StringPtrOutput)
}

// Defines reference to a public IP.
func (o NicIpConfigurationResourceSettingsResponseOutput) PublicIp() PublicIpReferenceResponsePtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsResponse) *PublicIpReferenceResponse { return v.PublicIp }).(PublicIpReferenceResponsePtrOutput)
}

// Defines reference to subnet.
func (o NicIpConfigurationResourceSettingsResponseOutput) Subnet() SubnetReferenceResponsePtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsResponse) *SubnetReferenceResponse { return v.Subnet }).(SubnetReferenceResponsePtrOutput)
}

type NicIpConfigurationResourceSettingsResponseArrayOutput struct{ *pulumi.OutputState }

func (NicIpConfigurationResourceSettingsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicIpConfigurationResourceSettingsResponse)(nil)).Elem()
}

func (o NicIpConfigurationResourceSettingsResponseArrayOutput) ToNicIpConfigurationResourceSettingsResponseArrayOutput() NicIpConfigurationResourceSettingsResponseArrayOutput {
	return o
}

func (o NicIpConfigurationResourceSettingsResponseArrayOutput) ToNicIpConfigurationResourceSettingsResponseArrayOutputWithContext(ctx context.Context) NicIpConfigurationResourceSettingsResponseArrayOutput {
	return o
}

func (o NicIpConfigurationResourceSettingsResponseArrayOutput) Index(i pulumi.IntInput) NicIpConfigurationResourceSettingsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NicIpConfigurationResourceSettingsResponse {
		return vs[0].([]NicIpConfigurationResourceSettingsResponse)[vs[1].(int)]
	}).(NicIpConfigurationResourceSettingsResponseOutput)
}

// Defines reference to NSG.
type NsgReference struct {
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// NsgReferenceInput is an input type that accepts NsgReferenceArgs and NsgReferenceOutput values.
// You can construct a concrete instance of `NsgReferenceInput` via:
//
//          NsgReferenceArgs{...}
type NsgReferenceInput interface {
	pulumi.Input

	ToNsgReferenceOutput() NsgReferenceOutput
	ToNsgReferenceOutputWithContext(context.Context) NsgReferenceOutput
}

// Defines reference to NSG.
type NsgReferenceArgs struct {
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId pulumi.StringInput `pulumi:"sourceArmResourceId"`
}

func (NsgReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsgReference)(nil)).Elem()
}

func (i NsgReferenceArgs) ToNsgReferenceOutput() NsgReferenceOutput {
	return i.ToNsgReferenceOutputWithContext(context.Background())
}

func (i NsgReferenceArgs) ToNsgReferenceOutputWithContext(ctx context.Context) NsgReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsgReferenceOutput)
}

func (i NsgReferenceArgs) ToNsgReferencePtrOutput() NsgReferencePtrOutput {
	return i.ToNsgReferencePtrOutputWithContext(context.Background())
}

func (i NsgReferenceArgs) ToNsgReferencePtrOutputWithContext(ctx context.Context) NsgReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsgReferenceOutput).ToNsgReferencePtrOutputWithContext(ctx)
}

// NsgReferencePtrInput is an input type that accepts NsgReferenceArgs, NsgReferencePtr and NsgReferencePtrOutput values.
// You can construct a concrete instance of `NsgReferencePtrInput` via:
//
//          NsgReferenceArgs{...}
//
//  or:
//
//          nil
type NsgReferencePtrInput interface {
	pulumi.Input

	ToNsgReferencePtrOutput() NsgReferencePtrOutput
	ToNsgReferencePtrOutputWithContext(context.Context) NsgReferencePtrOutput
}

type nsgReferencePtrType NsgReferenceArgs

func NsgReferencePtr(v *NsgReferenceArgs) NsgReferencePtrInput {
	return (*nsgReferencePtrType)(v)
}

func (*nsgReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsgReference)(nil)).Elem()
}

func (i *nsgReferencePtrType) ToNsgReferencePtrOutput() NsgReferencePtrOutput {
	return i.ToNsgReferencePtrOutputWithContext(context.Background())
}

func (i *nsgReferencePtrType) ToNsgReferencePtrOutputWithContext(ctx context.Context) NsgReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsgReferencePtrOutput)
}

// Defines reference to NSG.
type NsgReferenceOutput struct{ *pulumi.OutputState }

func (NsgReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsgReference)(nil)).Elem()
}

func (o NsgReferenceOutput) ToNsgReferenceOutput() NsgReferenceOutput {
	return o
}

func (o NsgReferenceOutput) ToNsgReferenceOutputWithContext(ctx context.Context) NsgReferenceOutput {
	return o
}

func (o NsgReferenceOutput) ToNsgReferencePtrOutput() NsgReferencePtrOutput {
	return o.ToNsgReferencePtrOutputWithContext(context.Background())
}

func (o NsgReferenceOutput) ToNsgReferencePtrOutputWithContext(ctx context.Context) NsgReferencePtrOutput {
	return o.ApplyT(func(v NsgReference) *NsgReference {
		return &v
	}).(NsgReferencePtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o NsgReferenceOutput) SourceArmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v NsgReference) string { return v.SourceArmResourceId }).(pulumi.StringOutput)
}

type NsgReferencePtrOutput struct{ *pulumi.OutputState }

func (NsgReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsgReference)(nil)).Elem()
}

func (o NsgReferencePtrOutput) ToNsgReferencePtrOutput() NsgReferencePtrOutput {
	return o
}

func (o NsgReferencePtrOutput) ToNsgReferencePtrOutputWithContext(ctx context.Context) NsgReferencePtrOutput {
	return o
}

func (o NsgReferencePtrOutput) Elem() NsgReferenceOutput {
	return o.ApplyT(func(v *NsgReference) NsgReference { return *v }).(NsgReferenceOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o NsgReferencePtrOutput) SourceArmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsgReference) *string {
		if v == nil {
			return nil
		}
		return &v.SourceArmResourceId
	}).(pulumi.StringPtrOutput)
}

// Defines reference to NSG.
type NsgReferenceInvokeResponse struct {
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// NsgReferenceInvokeResponseInput is an input type that accepts NsgReferenceInvokeResponseArgs and NsgReferenceInvokeResponseOutput values.
// You can construct a concrete instance of `NsgReferenceInvokeResponseInput` via:
//
//          NsgReferenceInvokeResponseArgs{...}
type NsgReferenceInvokeResponseInput interface {
	pulumi.Input

	ToNsgReferenceInvokeResponseOutput() NsgReferenceInvokeResponseOutput
	ToNsgReferenceInvokeResponseOutputWithContext(context.Context) NsgReferenceInvokeResponseOutput
}

// Defines reference to NSG.
type NsgReferenceInvokeResponseArgs struct {
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId pulumi.StringInput `pulumi:"sourceArmResourceId"`
}

func (NsgReferenceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsgReferenceInvokeResponse)(nil)).Elem()
}

func (i NsgReferenceInvokeResponseArgs) ToNsgReferenceInvokeResponseOutput() NsgReferenceInvokeResponseOutput {
	return i.ToNsgReferenceInvokeResponseOutputWithContext(context.Background())
}

func (i NsgReferenceInvokeResponseArgs) ToNsgReferenceInvokeResponseOutputWithContext(ctx context.Context) NsgReferenceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsgReferenceInvokeResponseOutput)
}

func (i NsgReferenceInvokeResponseArgs) ToNsgReferenceInvokeResponsePtrOutput() NsgReferenceInvokeResponsePtrOutput {
	return i.ToNsgReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i NsgReferenceInvokeResponseArgs) ToNsgReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) NsgReferenceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsgReferenceInvokeResponseOutput).ToNsgReferenceInvokeResponsePtrOutputWithContext(ctx)
}

// NsgReferenceInvokeResponsePtrInput is an input type that accepts NsgReferenceInvokeResponseArgs, NsgReferenceInvokeResponsePtr and NsgReferenceInvokeResponsePtrOutput values.
// You can construct a concrete instance of `NsgReferenceInvokeResponsePtrInput` via:
//
//          NsgReferenceInvokeResponseArgs{...}
//
//  or:
//
//          nil
type NsgReferenceInvokeResponsePtrInput interface {
	pulumi.Input

	ToNsgReferenceInvokeResponsePtrOutput() NsgReferenceInvokeResponsePtrOutput
	ToNsgReferenceInvokeResponsePtrOutputWithContext(context.Context) NsgReferenceInvokeResponsePtrOutput
}

type nsgReferenceInvokeResponsePtrType NsgReferenceInvokeResponseArgs

func NsgReferenceInvokeResponsePtr(v *NsgReferenceInvokeResponseArgs) NsgReferenceInvokeResponsePtrInput {
	return (*nsgReferenceInvokeResponsePtrType)(v)
}

func (*nsgReferenceInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsgReferenceInvokeResponse)(nil)).Elem()
}

func (i *nsgReferenceInvokeResponsePtrType) ToNsgReferenceInvokeResponsePtrOutput() NsgReferenceInvokeResponsePtrOutput {
	return i.ToNsgReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *nsgReferenceInvokeResponsePtrType) ToNsgReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) NsgReferenceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsgReferenceInvokeResponsePtrOutput)
}

// Defines reference to NSG.
type NsgReferenceInvokeResponseOutput struct{ *pulumi.OutputState }

func (NsgReferenceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsgReferenceInvokeResponse)(nil)).Elem()
}

func (o NsgReferenceInvokeResponseOutput) ToNsgReferenceInvokeResponseOutput() NsgReferenceInvokeResponseOutput {
	return o
}

func (o NsgReferenceInvokeResponseOutput) ToNsgReferenceInvokeResponseOutputWithContext(ctx context.Context) NsgReferenceInvokeResponseOutput {
	return o
}

func (o NsgReferenceInvokeResponseOutput) ToNsgReferenceInvokeResponsePtrOutput() NsgReferenceInvokeResponsePtrOutput {
	return o.ToNsgReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (o NsgReferenceInvokeResponseOutput) ToNsgReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) NsgReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v NsgReferenceInvokeResponse) *NsgReferenceInvokeResponse {
		return &v
	}).(NsgReferenceInvokeResponsePtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o NsgReferenceInvokeResponseOutput) SourceArmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v NsgReferenceInvokeResponse) string { return v.SourceArmResourceId }).(pulumi.StringOutput)
}

type NsgReferenceInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (NsgReferenceInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsgReferenceInvokeResponse)(nil)).Elem()
}

func (o NsgReferenceInvokeResponsePtrOutput) ToNsgReferenceInvokeResponsePtrOutput() NsgReferenceInvokeResponsePtrOutput {
	return o
}

func (o NsgReferenceInvokeResponsePtrOutput) ToNsgReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) NsgReferenceInvokeResponsePtrOutput {
	return o
}

func (o NsgReferenceInvokeResponsePtrOutput) Elem() NsgReferenceInvokeResponseOutput {
	return o.ApplyT(func(v *NsgReferenceInvokeResponse) NsgReferenceInvokeResponse { return *v }).(NsgReferenceInvokeResponseOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o NsgReferenceInvokeResponsePtrOutput) SourceArmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsgReferenceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceArmResourceId
	}).(pulumi.StringPtrOutput)
}

// Defines reference to NSG.
type NsgReferenceResponse struct {
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// NsgReferenceResponseInput is an input type that accepts NsgReferenceResponseArgs and NsgReferenceResponseOutput values.
// You can construct a concrete instance of `NsgReferenceResponseInput` via:
//
//          NsgReferenceResponseArgs{...}
type NsgReferenceResponseInput interface {
	pulumi.Input

	ToNsgReferenceResponseOutput() NsgReferenceResponseOutput
	ToNsgReferenceResponseOutputWithContext(context.Context) NsgReferenceResponseOutput
}

// Defines reference to NSG.
type NsgReferenceResponseArgs struct {
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId pulumi.StringInput `pulumi:"sourceArmResourceId"`
}

func (NsgReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsgReferenceResponse)(nil)).Elem()
}

func (i NsgReferenceResponseArgs) ToNsgReferenceResponseOutput() NsgReferenceResponseOutput {
	return i.ToNsgReferenceResponseOutputWithContext(context.Background())
}

func (i NsgReferenceResponseArgs) ToNsgReferenceResponseOutputWithContext(ctx context.Context) NsgReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsgReferenceResponseOutput)
}

func (i NsgReferenceResponseArgs) ToNsgReferenceResponsePtrOutput() NsgReferenceResponsePtrOutput {
	return i.ToNsgReferenceResponsePtrOutputWithContext(context.Background())
}

func (i NsgReferenceResponseArgs) ToNsgReferenceResponsePtrOutputWithContext(ctx context.Context) NsgReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsgReferenceResponseOutput).ToNsgReferenceResponsePtrOutputWithContext(ctx)
}

// NsgReferenceResponsePtrInput is an input type that accepts NsgReferenceResponseArgs, NsgReferenceResponsePtr and NsgReferenceResponsePtrOutput values.
// You can construct a concrete instance of `NsgReferenceResponsePtrInput` via:
//
//          NsgReferenceResponseArgs{...}
//
//  or:
//
//          nil
type NsgReferenceResponsePtrInput interface {
	pulumi.Input

	ToNsgReferenceResponsePtrOutput() NsgReferenceResponsePtrOutput
	ToNsgReferenceResponsePtrOutputWithContext(context.Context) NsgReferenceResponsePtrOutput
}

type nsgReferenceResponsePtrType NsgReferenceResponseArgs

func NsgReferenceResponsePtr(v *NsgReferenceResponseArgs) NsgReferenceResponsePtrInput {
	return (*nsgReferenceResponsePtrType)(v)
}

func (*nsgReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NsgReferenceResponse)(nil)).Elem()
}

func (i *nsgReferenceResponsePtrType) ToNsgReferenceResponsePtrOutput() NsgReferenceResponsePtrOutput {
	return i.ToNsgReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *nsgReferenceResponsePtrType) ToNsgReferenceResponsePtrOutputWithContext(ctx context.Context) NsgReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsgReferenceResponsePtrOutput)
}

// Defines reference to NSG.
type NsgReferenceResponseOutput struct{ *pulumi.OutputState }

func (NsgReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsgReferenceResponse)(nil)).Elem()
}

func (o NsgReferenceResponseOutput) ToNsgReferenceResponseOutput() NsgReferenceResponseOutput {
	return o
}

func (o NsgReferenceResponseOutput) ToNsgReferenceResponseOutputWithContext(ctx context.Context) NsgReferenceResponseOutput {
	return o
}

func (o NsgReferenceResponseOutput) ToNsgReferenceResponsePtrOutput() NsgReferenceResponsePtrOutput {
	return o.ToNsgReferenceResponsePtrOutputWithContext(context.Background())
}

func (o NsgReferenceResponseOutput) ToNsgReferenceResponsePtrOutputWithContext(ctx context.Context) NsgReferenceResponsePtrOutput {
	return o.ApplyT(func(v NsgReferenceResponse) *NsgReferenceResponse {
		return &v
	}).(NsgReferenceResponsePtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o NsgReferenceResponseOutput) SourceArmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v NsgReferenceResponse) string { return v.SourceArmResourceId }).(pulumi.StringOutput)
}

type NsgReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (NsgReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsgReferenceResponse)(nil)).Elem()
}

func (o NsgReferenceResponsePtrOutput) ToNsgReferenceResponsePtrOutput() NsgReferenceResponsePtrOutput {
	return o
}

func (o NsgReferenceResponsePtrOutput) ToNsgReferenceResponsePtrOutputWithContext(ctx context.Context) NsgReferenceResponsePtrOutput {
	return o
}

func (o NsgReferenceResponsePtrOutput) Elem() NsgReferenceResponseOutput {
	return o.ApplyT(func(v *NsgReferenceResponse) NsgReferenceResponse { return *v }).(NsgReferenceResponseOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o NsgReferenceResponsePtrOutput) SourceArmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsgReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceArmResourceId
	}).(pulumi.StringPtrOutput)
}

// Security Rule data model for Network Security Groups.
type NsgSecurityRule struct {
	// Gets or sets whether network traffic is allowed or denied.
	// Possible values are “Allow” and “Deny”.
	Access *string `pulumi:"access"`
	// Gets or sets a description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// Gets or sets destination address prefix. CIDR or source IP range.
	//  A “*” can also be used to match all source IPs. Default tags such
	// as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// Gets or sets Destination Port or Range. Integer or range between
	// 0 and 65535. A “*” can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// Gets or sets the direction of the rule.InBound or Outbound. The
	// direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction *string `pulumi:"direction"`
	// Gets or sets the Security rule name.
	Name *string `pulumi:"name"`
	// Gets or sets the priority of the rule. The value can be between
	// 100 and 4096. The priority number must be unique for each rule in the collection.
	// The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
	Protocol *string `pulumi:"protocol"`
	// Gets or sets source address prefix. CIDR or source IP range. A
	// “*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,
	// ‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress
	// rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// Gets or sets Source Port or Range. Integer or range between 0 and
	// 65535. A “*” can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
}

// NsgSecurityRuleInput is an input type that accepts NsgSecurityRuleArgs and NsgSecurityRuleOutput values.
// You can construct a concrete instance of `NsgSecurityRuleInput` via:
//
//          NsgSecurityRuleArgs{...}
type NsgSecurityRuleInput interface {
	pulumi.Input

	ToNsgSecurityRuleOutput() NsgSecurityRuleOutput
	ToNsgSecurityRuleOutputWithContext(context.Context) NsgSecurityRuleOutput
}

// Security Rule data model for Network Security Groups.
type NsgSecurityRuleArgs struct {
	// Gets or sets whether network traffic is allowed or denied.
	// Possible values are “Allow” and “Deny”.
	Access pulumi.StringPtrInput `pulumi:"access"`
	// Gets or sets a description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Gets or sets destination address prefix. CIDR or source IP range.
	//  A “*” can also be used to match all source IPs. Default tags such
	// as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used.
	DestinationAddressPrefix pulumi.StringPtrInput `pulumi:"destinationAddressPrefix"`
	// Gets or sets Destination Port or Range. Integer or range between
	// 0 and 65535. A “*” can also be used to match all ports.
	DestinationPortRange pulumi.StringPtrInput `pulumi:"destinationPortRange"`
	// Gets or sets the direction of the rule.InBound or Outbound. The
	// direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Gets or sets the Security rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets the priority of the rule. The value can be between
	// 100 and 4096. The priority number must be unique for each rule in the collection.
	// The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Gets or sets source address prefix. CIDR or source IP range. A
	// “*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,
	// ‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress
	// rule, specifies where network traffic originates from.
	SourceAddressPrefix pulumi.StringPtrInput `pulumi:"sourceAddressPrefix"`
	// Gets or sets Source Port or Range. Integer or range between 0 and
	// 65535. A “*” can also be used to match all ports.
	SourcePortRange pulumi.StringPtrInput `pulumi:"sourcePortRange"`
}

func (NsgSecurityRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsgSecurityRule)(nil)).Elem()
}

func (i NsgSecurityRuleArgs) ToNsgSecurityRuleOutput() NsgSecurityRuleOutput {
	return i.ToNsgSecurityRuleOutputWithContext(context.Background())
}

func (i NsgSecurityRuleArgs) ToNsgSecurityRuleOutputWithContext(ctx context.Context) NsgSecurityRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsgSecurityRuleOutput)
}

// NsgSecurityRuleArrayInput is an input type that accepts NsgSecurityRuleArray and NsgSecurityRuleArrayOutput values.
// You can construct a concrete instance of `NsgSecurityRuleArrayInput` via:
//
//          NsgSecurityRuleArray{ NsgSecurityRuleArgs{...} }
type NsgSecurityRuleArrayInput interface {
	pulumi.Input

	ToNsgSecurityRuleArrayOutput() NsgSecurityRuleArrayOutput
	ToNsgSecurityRuleArrayOutputWithContext(context.Context) NsgSecurityRuleArrayOutput
}

type NsgSecurityRuleArray []NsgSecurityRuleInput

func (NsgSecurityRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsgSecurityRule)(nil)).Elem()
}

func (i NsgSecurityRuleArray) ToNsgSecurityRuleArrayOutput() NsgSecurityRuleArrayOutput {
	return i.ToNsgSecurityRuleArrayOutputWithContext(context.Background())
}

func (i NsgSecurityRuleArray) ToNsgSecurityRuleArrayOutputWithContext(ctx context.Context) NsgSecurityRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsgSecurityRuleArrayOutput)
}

// Security Rule data model for Network Security Groups.
type NsgSecurityRuleOutput struct{ *pulumi.OutputState }

func (NsgSecurityRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsgSecurityRule)(nil)).Elem()
}

func (o NsgSecurityRuleOutput) ToNsgSecurityRuleOutput() NsgSecurityRuleOutput {
	return o
}

func (o NsgSecurityRuleOutput) ToNsgSecurityRuleOutputWithContext(ctx context.Context) NsgSecurityRuleOutput {
	return o
}

// Gets or sets whether network traffic is allowed or denied.
// Possible values are “Allow” and “Deny”.
func (o NsgSecurityRuleOutput) Access() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRule) *string { return v.Access }).(pulumi.StringPtrOutput)
}

// Gets or sets a description for this rule. Restricted to 140 chars.
func (o NsgSecurityRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets or sets destination address prefix. CIDR or source IP range.
//  A “*” can also be used to match all source IPs. Default tags such
// as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used.
func (o NsgSecurityRuleOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRule) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets or sets Destination Port or Range. Integer or range between
// 0 and 65535. A “*” can also be used to match all ports.
func (o NsgSecurityRuleOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRule) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// Gets or sets the direction of the rule.InBound or Outbound. The
// direction specifies if rule will be evaluated on incoming or outgoing traffic.
func (o NsgSecurityRuleOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRule) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Gets or sets the Security rule name.
func (o NsgSecurityRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets the priority of the rule. The value can be between
// 100 and 4096. The priority number must be unique for each rule in the collection.
// The lower the priority number, the higher the priority of the rule.
func (o NsgSecurityRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NsgSecurityRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
func (o NsgSecurityRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Gets or sets source address prefix. CIDR or source IP range. A
// “*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,
// ‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress
// rule, specifies where network traffic originates from.
func (o NsgSecurityRuleOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRule) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets or sets Source Port or Range. Integer or range between 0 and
// 65535. A “*” can also be used to match all ports.
func (o NsgSecurityRuleOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRule) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

type NsgSecurityRuleArrayOutput struct{ *pulumi.OutputState }

func (NsgSecurityRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsgSecurityRule)(nil)).Elem()
}

func (o NsgSecurityRuleArrayOutput) ToNsgSecurityRuleArrayOutput() NsgSecurityRuleArrayOutput {
	return o
}

func (o NsgSecurityRuleArrayOutput) ToNsgSecurityRuleArrayOutputWithContext(ctx context.Context) NsgSecurityRuleArrayOutput {
	return o
}

func (o NsgSecurityRuleArrayOutput) Index(i pulumi.IntInput) NsgSecurityRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsgSecurityRule {
		return vs[0].([]NsgSecurityRule)[vs[1].(int)]
	}).(NsgSecurityRuleOutput)
}

// Security Rule data model for Network Security Groups.
type NsgSecurityRuleInvokeResponse struct {
	// Gets or sets whether network traffic is allowed or denied.
	// Possible values are “Allow” and “Deny”.
	Access *string `pulumi:"access"`
	// Gets or sets a description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// Gets or sets destination address prefix. CIDR or source IP range.
	//  A “*” can also be used to match all source IPs. Default tags such
	// as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// Gets or sets Destination Port or Range. Integer or range between
	// 0 and 65535. A “*” can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// Gets or sets the direction of the rule.InBound or Outbound. The
	// direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction *string `pulumi:"direction"`
	// Gets or sets the Security rule name.
	Name *string `pulumi:"name"`
	// Gets or sets the priority of the rule. The value can be between
	// 100 and 4096. The priority number must be unique for each rule in the collection.
	// The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
	Protocol *string `pulumi:"protocol"`
	// Gets or sets source address prefix. CIDR or source IP range. A
	// “*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,
	// ‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress
	// rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// Gets or sets Source Port or Range. Integer or range between 0 and
	// 65535. A “*” can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
}

// NsgSecurityRuleInvokeResponseInput is an input type that accepts NsgSecurityRuleInvokeResponseArgs and NsgSecurityRuleInvokeResponseOutput values.
// You can construct a concrete instance of `NsgSecurityRuleInvokeResponseInput` via:
//
//          NsgSecurityRuleInvokeResponseArgs{...}
type NsgSecurityRuleInvokeResponseInput interface {
	pulumi.Input

	ToNsgSecurityRuleInvokeResponseOutput() NsgSecurityRuleInvokeResponseOutput
	ToNsgSecurityRuleInvokeResponseOutputWithContext(context.Context) NsgSecurityRuleInvokeResponseOutput
}

// Security Rule data model for Network Security Groups.
type NsgSecurityRuleInvokeResponseArgs struct {
	// Gets or sets whether network traffic is allowed or denied.
	// Possible values are “Allow” and “Deny”.
	Access pulumi.StringPtrInput `pulumi:"access"`
	// Gets or sets a description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Gets or sets destination address prefix. CIDR or source IP range.
	//  A “*” can also be used to match all source IPs. Default tags such
	// as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used.
	DestinationAddressPrefix pulumi.StringPtrInput `pulumi:"destinationAddressPrefix"`
	// Gets or sets Destination Port or Range. Integer or range between
	// 0 and 65535. A “*” can also be used to match all ports.
	DestinationPortRange pulumi.StringPtrInput `pulumi:"destinationPortRange"`
	// Gets or sets the direction of the rule.InBound or Outbound. The
	// direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Gets or sets the Security rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets the priority of the rule. The value can be between
	// 100 and 4096. The priority number must be unique for each rule in the collection.
	// The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Gets or sets source address prefix. CIDR or source IP range. A
	// “*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,
	// ‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress
	// rule, specifies where network traffic originates from.
	SourceAddressPrefix pulumi.StringPtrInput `pulumi:"sourceAddressPrefix"`
	// Gets or sets Source Port or Range. Integer or range between 0 and
	// 65535. A “*” can also be used to match all ports.
	SourcePortRange pulumi.StringPtrInput `pulumi:"sourcePortRange"`
}

func (NsgSecurityRuleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsgSecurityRuleInvokeResponse)(nil)).Elem()
}

func (i NsgSecurityRuleInvokeResponseArgs) ToNsgSecurityRuleInvokeResponseOutput() NsgSecurityRuleInvokeResponseOutput {
	return i.ToNsgSecurityRuleInvokeResponseOutputWithContext(context.Background())
}

func (i NsgSecurityRuleInvokeResponseArgs) ToNsgSecurityRuleInvokeResponseOutputWithContext(ctx context.Context) NsgSecurityRuleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsgSecurityRuleInvokeResponseOutput)
}

// NsgSecurityRuleInvokeResponseArrayInput is an input type that accepts NsgSecurityRuleInvokeResponseArray and NsgSecurityRuleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `NsgSecurityRuleInvokeResponseArrayInput` via:
//
//          NsgSecurityRuleInvokeResponseArray{ NsgSecurityRuleInvokeResponseArgs{...} }
type NsgSecurityRuleInvokeResponseArrayInput interface {
	pulumi.Input

	ToNsgSecurityRuleInvokeResponseArrayOutput() NsgSecurityRuleInvokeResponseArrayOutput
	ToNsgSecurityRuleInvokeResponseArrayOutputWithContext(context.Context) NsgSecurityRuleInvokeResponseArrayOutput
}

type NsgSecurityRuleInvokeResponseArray []NsgSecurityRuleInvokeResponseInput

func (NsgSecurityRuleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsgSecurityRuleInvokeResponse)(nil)).Elem()
}

func (i NsgSecurityRuleInvokeResponseArray) ToNsgSecurityRuleInvokeResponseArrayOutput() NsgSecurityRuleInvokeResponseArrayOutput {
	return i.ToNsgSecurityRuleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i NsgSecurityRuleInvokeResponseArray) ToNsgSecurityRuleInvokeResponseArrayOutputWithContext(ctx context.Context) NsgSecurityRuleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsgSecurityRuleInvokeResponseArrayOutput)
}

// Security Rule data model for Network Security Groups.
type NsgSecurityRuleInvokeResponseOutput struct{ *pulumi.OutputState }

func (NsgSecurityRuleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsgSecurityRuleInvokeResponse)(nil)).Elem()
}

func (o NsgSecurityRuleInvokeResponseOutput) ToNsgSecurityRuleInvokeResponseOutput() NsgSecurityRuleInvokeResponseOutput {
	return o
}

func (o NsgSecurityRuleInvokeResponseOutput) ToNsgSecurityRuleInvokeResponseOutputWithContext(ctx context.Context) NsgSecurityRuleInvokeResponseOutput {
	return o
}

// Gets or sets whether network traffic is allowed or denied.
// Possible values are “Allow” and “Deny”.
func (o NsgSecurityRuleInvokeResponseOutput) Access() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleInvokeResponse) *string { return v.Access }).(pulumi.StringPtrOutput)
}

// Gets or sets a description for this rule. Restricted to 140 chars.
func (o NsgSecurityRuleInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets or sets destination address prefix. CIDR or source IP range.
//  A “*” can also be used to match all source IPs. Default tags such
// as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used.
func (o NsgSecurityRuleInvokeResponseOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleInvokeResponse) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets or sets Destination Port or Range. Integer or range between
// 0 and 65535. A “*” can also be used to match all ports.
func (o NsgSecurityRuleInvokeResponseOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleInvokeResponse) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// Gets or sets the direction of the rule.InBound or Outbound. The
// direction specifies if rule will be evaluated on incoming or outgoing traffic.
func (o NsgSecurityRuleInvokeResponseOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleInvokeResponse) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Gets or sets the Security rule name.
func (o NsgSecurityRuleInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets the priority of the rule. The value can be between
// 100 and 4096. The priority number must be unique for each rule in the collection.
// The lower the priority number, the higher the priority of the rule.
func (o NsgSecurityRuleInvokeResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleInvokeResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
func (o NsgSecurityRuleInvokeResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleInvokeResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Gets or sets source address prefix. CIDR or source IP range. A
// “*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,
// ‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress
// rule, specifies where network traffic originates from.
func (o NsgSecurityRuleInvokeResponseOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleInvokeResponse) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets or sets Source Port or Range. Integer or range between 0 and
// 65535. A “*” can also be used to match all ports.
func (o NsgSecurityRuleInvokeResponseOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleInvokeResponse) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

type NsgSecurityRuleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (NsgSecurityRuleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsgSecurityRuleInvokeResponse)(nil)).Elem()
}

func (o NsgSecurityRuleInvokeResponseArrayOutput) ToNsgSecurityRuleInvokeResponseArrayOutput() NsgSecurityRuleInvokeResponseArrayOutput {
	return o
}

func (o NsgSecurityRuleInvokeResponseArrayOutput) ToNsgSecurityRuleInvokeResponseArrayOutputWithContext(ctx context.Context) NsgSecurityRuleInvokeResponseArrayOutput {
	return o
}

func (o NsgSecurityRuleInvokeResponseArrayOutput) Index(i pulumi.IntInput) NsgSecurityRuleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsgSecurityRuleInvokeResponse {
		return vs[0].([]NsgSecurityRuleInvokeResponse)[vs[1].(int)]
	}).(NsgSecurityRuleInvokeResponseOutput)
}

// Security Rule data model for Network Security Groups.
type NsgSecurityRuleResponse struct {
	// Gets or sets whether network traffic is allowed or denied.
	// Possible values are “Allow” and “Deny”.
	Access *string `pulumi:"access"`
	// Gets or sets a description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// Gets or sets destination address prefix. CIDR or source IP range.
	//  A “*” can also be used to match all source IPs. Default tags such
	// as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// Gets or sets Destination Port or Range. Integer or range between
	// 0 and 65535. A “*” can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// Gets or sets the direction of the rule.InBound or Outbound. The
	// direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction *string `pulumi:"direction"`
	// Gets or sets the Security rule name.
	Name *string `pulumi:"name"`
	// Gets or sets the priority of the rule. The value can be between
	// 100 and 4096. The priority number must be unique for each rule in the collection.
	// The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
	Protocol *string `pulumi:"protocol"`
	// Gets or sets source address prefix. CIDR or source IP range. A
	// “*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,
	// ‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress
	// rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// Gets or sets Source Port or Range. Integer or range between 0 and
	// 65535. A “*” can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
}

// NsgSecurityRuleResponseInput is an input type that accepts NsgSecurityRuleResponseArgs and NsgSecurityRuleResponseOutput values.
// You can construct a concrete instance of `NsgSecurityRuleResponseInput` via:
//
//          NsgSecurityRuleResponseArgs{...}
type NsgSecurityRuleResponseInput interface {
	pulumi.Input

	ToNsgSecurityRuleResponseOutput() NsgSecurityRuleResponseOutput
	ToNsgSecurityRuleResponseOutputWithContext(context.Context) NsgSecurityRuleResponseOutput
}

// Security Rule data model for Network Security Groups.
type NsgSecurityRuleResponseArgs struct {
	// Gets or sets whether network traffic is allowed or denied.
	// Possible values are “Allow” and “Deny”.
	Access pulumi.StringPtrInput `pulumi:"access"`
	// Gets or sets a description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Gets or sets destination address prefix. CIDR or source IP range.
	//  A “*” can also be used to match all source IPs. Default tags such
	// as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used.
	DestinationAddressPrefix pulumi.StringPtrInput `pulumi:"destinationAddressPrefix"`
	// Gets or sets Destination Port or Range. Integer or range between
	// 0 and 65535. A “*” can also be used to match all ports.
	DestinationPortRange pulumi.StringPtrInput `pulumi:"destinationPortRange"`
	// Gets or sets the direction of the rule.InBound or Outbound. The
	// direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Gets or sets the Security rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets the priority of the rule. The value can be between
	// 100 and 4096. The priority number must be unique for each rule in the collection.
	// The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Gets or sets source address prefix. CIDR or source IP range. A
	// “*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,
	// ‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress
	// rule, specifies where network traffic originates from.
	SourceAddressPrefix pulumi.StringPtrInput `pulumi:"sourceAddressPrefix"`
	// Gets or sets Source Port or Range. Integer or range between 0 and
	// 65535. A “*” can also be used to match all ports.
	SourcePortRange pulumi.StringPtrInput `pulumi:"sourcePortRange"`
}

func (NsgSecurityRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsgSecurityRuleResponse)(nil)).Elem()
}

func (i NsgSecurityRuleResponseArgs) ToNsgSecurityRuleResponseOutput() NsgSecurityRuleResponseOutput {
	return i.ToNsgSecurityRuleResponseOutputWithContext(context.Background())
}

func (i NsgSecurityRuleResponseArgs) ToNsgSecurityRuleResponseOutputWithContext(ctx context.Context) NsgSecurityRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsgSecurityRuleResponseOutput)
}

// NsgSecurityRuleResponseArrayInput is an input type that accepts NsgSecurityRuleResponseArray and NsgSecurityRuleResponseArrayOutput values.
// You can construct a concrete instance of `NsgSecurityRuleResponseArrayInput` via:
//
//          NsgSecurityRuleResponseArray{ NsgSecurityRuleResponseArgs{...} }
type NsgSecurityRuleResponseArrayInput interface {
	pulumi.Input

	ToNsgSecurityRuleResponseArrayOutput() NsgSecurityRuleResponseArrayOutput
	ToNsgSecurityRuleResponseArrayOutputWithContext(context.Context) NsgSecurityRuleResponseArrayOutput
}

type NsgSecurityRuleResponseArray []NsgSecurityRuleResponseInput

func (NsgSecurityRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsgSecurityRuleResponse)(nil)).Elem()
}

func (i NsgSecurityRuleResponseArray) ToNsgSecurityRuleResponseArrayOutput() NsgSecurityRuleResponseArrayOutput {
	return i.ToNsgSecurityRuleResponseArrayOutputWithContext(context.Background())
}

func (i NsgSecurityRuleResponseArray) ToNsgSecurityRuleResponseArrayOutputWithContext(ctx context.Context) NsgSecurityRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsgSecurityRuleResponseArrayOutput)
}

// Security Rule data model for Network Security Groups.
type NsgSecurityRuleResponseOutput struct{ *pulumi.OutputState }

func (NsgSecurityRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsgSecurityRuleResponse)(nil)).Elem()
}

func (o NsgSecurityRuleResponseOutput) ToNsgSecurityRuleResponseOutput() NsgSecurityRuleResponseOutput {
	return o
}

func (o NsgSecurityRuleResponseOutput) ToNsgSecurityRuleResponseOutputWithContext(ctx context.Context) NsgSecurityRuleResponseOutput {
	return o
}

// Gets or sets whether network traffic is allowed or denied.
// Possible values are “Allow” and “Deny”.
func (o NsgSecurityRuleResponseOutput) Access() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *string { return v.Access }).(pulumi.StringPtrOutput)
}

// Gets or sets a description for this rule. Restricted to 140 chars.
func (o NsgSecurityRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets or sets destination address prefix. CIDR or source IP range.
//  A “*” can also be used to match all source IPs. Default tags such
// as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used.
func (o NsgSecurityRuleResponseOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets or sets Destination Port or Range. Integer or range between
// 0 and 65535. A “*” can also be used to match all ports.
func (o NsgSecurityRuleResponseOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// Gets or sets the direction of the rule.InBound or Outbound. The
// direction specifies if rule will be evaluated on incoming or outgoing traffic.
func (o NsgSecurityRuleResponseOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Gets or sets the Security rule name.
func (o NsgSecurityRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets the priority of the rule. The value can be between
// 100 and 4096. The priority number must be unique for each rule in the collection.
// The lower the priority number, the higher the priority of the rule.
func (o NsgSecurityRuleResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
func (o NsgSecurityRuleResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Gets or sets source address prefix. CIDR or source IP range. A
// “*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,
// ‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress
// rule, specifies where network traffic originates from.
func (o NsgSecurityRuleResponseOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets or sets Source Port or Range. Integer or range between 0 and
// 65535. A “*” can also be used to match all ports.
func (o NsgSecurityRuleResponseOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

type NsgSecurityRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (NsgSecurityRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsgSecurityRuleResponse)(nil)).Elem()
}

func (o NsgSecurityRuleResponseArrayOutput) ToNsgSecurityRuleResponseArrayOutput() NsgSecurityRuleResponseArrayOutput {
	return o
}

func (o NsgSecurityRuleResponseArrayOutput) ToNsgSecurityRuleResponseArrayOutputWithContext(ctx context.Context) NsgSecurityRuleResponseArrayOutput {
	return o
}

func (o NsgSecurityRuleResponseArrayOutput) Index(i pulumi.IntInput) NsgSecurityRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsgSecurityRuleResponse {
		return vs[0].([]NsgSecurityRuleResponse)[vs[1].(int)]
	}).(NsgSecurityRuleResponseOutput)
}

// Defines the public IP address resource settings.
type PublicIPAddressResourceSettings struct {
	// Gets or sets the domain name label.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// Gets or sets the fully qualified domain name.
	Fqdn *string `pulumi:"fqdn"`
	// Gets or sets public IP allocation method.
	PublicIpAllocationMethod *string `pulumi:"publicIpAllocationMethod"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/publicIPAddresses'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets public IP sku.
	Sku *string `pulumi:"sku"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets public IP zones.
	Zones *string `pulumi:"zones"`
}

// PublicIPAddressResourceSettingsInput is an input type that accepts PublicIPAddressResourceSettingsArgs and PublicIPAddressResourceSettingsOutput values.
// You can construct a concrete instance of `PublicIPAddressResourceSettingsInput` via:
//
//          PublicIPAddressResourceSettingsArgs{...}
type PublicIPAddressResourceSettingsInput interface {
	pulumi.Input

	ToPublicIPAddressResourceSettingsOutput() PublicIPAddressResourceSettingsOutput
	ToPublicIPAddressResourceSettingsOutputWithContext(context.Context) PublicIPAddressResourceSettingsOutput
}

// Defines the public IP address resource settings.
type PublicIPAddressResourceSettingsArgs struct {
	// Gets or sets the domain name label.
	DomainNameLabel pulumi.StringPtrInput `pulumi:"domainNameLabel"`
	// Gets or sets the fully qualified domain name.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Gets or sets public IP allocation method.
	PublicIpAllocationMethod pulumi.StringPtrInput `pulumi:"publicIpAllocationMethod"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/publicIPAddresses'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets public IP sku.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Gets or sets public IP zones.
	Zones pulumi.StringPtrInput `pulumi:"zones"`
}

func (PublicIPAddressResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResourceSettings)(nil)).Elem()
}

func (i PublicIPAddressResourceSettingsArgs) ToPublicIPAddressResourceSettingsOutput() PublicIPAddressResourceSettingsOutput {
	return i.ToPublicIPAddressResourceSettingsOutputWithContext(context.Background())
}

func (i PublicIPAddressResourceSettingsArgs) ToPublicIPAddressResourceSettingsOutputWithContext(ctx context.Context) PublicIPAddressResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressResourceSettingsOutput)
}

// Defines the public IP address resource settings.
type PublicIPAddressResourceSettingsOutput struct{ *pulumi.OutputState }

func (PublicIPAddressResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResourceSettings)(nil)).Elem()
}

func (o PublicIPAddressResourceSettingsOutput) ToPublicIPAddressResourceSettingsOutput() PublicIPAddressResourceSettingsOutput {
	return o
}

func (o PublicIPAddressResourceSettingsOutput) ToPublicIPAddressResourceSettingsOutputWithContext(ctx context.Context) PublicIPAddressResourceSettingsOutput {
	return o
}

// Gets or sets the domain name label.
func (o PublicIPAddressResourceSettingsOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettings) *string { return v.DomainNameLabel }).(pulumi.StringPtrOutput)
}

// Gets or sets the fully qualified domain name.
func (o PublicIPAddressResourceSettingsOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettings) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Gets or sets public IP allocation method.
func (o PublicIPAddressResourceSettingsOutput) PublicIpAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettings) *string { return v.PublicIpAllocationMethod }).(pulumi.StringPtrOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Network/publicIPAddresses'.
func (o PublicIPAddressResourceSettingsOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettings) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets public IP sku.
func (o PublicIPAddressResourceSettingsOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettings) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Gets or sets the target Resource name.
func (o PublicIPAddressResourceSettingsOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettings) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Gets or sets public IP zones.
func (o PublicIPAddressResourceSettingsOutput) Zones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettings) *string { return v.Zones }).(pulumi.StringPtrOutput)
}

// Defines the public IP address resource settings.
type PublicIPAddressResourceSettingsInvokeResponse struct {
	// Gets or sets the domain name label.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// Gets or sets the fully qualified domain name.
	Fqdn *string `pulumi:"fqdn"`
	// Gets or sets public IP allocation method.
	PublicIpAllocationMethod *string `pulumi:"publicIpAllocationMethod"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/publicIPAddresses'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets public IP sku.
	Sku *string `pulumi:"sku"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets public IP zones.
	Zones *string `pulumi:"zones"`
}

// PublicIPAddressResourceSettingsInvokeResponseInput is an input type that accepts PublicIPAddressResourceSettingsInvokeResponseArgs and PublicIPAddressResourceSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `PublicIPAddressResourceSettingsInvokeResponseInput` via:
//
//          PublicIPAddressResourceSettingsInvokeResponseArgs{...}
type PublicIPAddressResourceSettingsInvokeResponseInput interface {
	pulumi.Input

	ToPublicIPAddressResourceSettingsInvokeResponseOutput() PublicIPAddressResourceSettingsInvokeResponseOutput
	ToPublicIPAddressResourceSettingsInvokeResponseOutputWithContext(context.Context) PublicIPAddressResourceSettingsInvokeResponseOutput
}

// Defines the public IP address resource settings.
type PublicIPAddressResourceSettingsInvokeResponseArgs struct {
	// Gets or sets the domain name label.
	DomainNameLabel pulumi.StringPtrInput `pulumi:"domainNameLabel"`
	// Gets or sets the fully qualified domain name.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Gets or sets public IP allocation method.
	PublicIpAllocationMethod pulumi.StringPtrInput `pulumi:"publicIpAllocationMethod"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/publicIPAddresses'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets public IP sku.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Gets or sets public IP zones.
	Zones pulumi.StringPtrInput `pulumi:"zones"`
}

func (PublicIPAddressResourceSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i PublicIPAddressResourceSettingsInvokeResponseArgs) ToPublicIPAddressResourceSettingsInvokeResponseOutput() PublicIPAddressResourceSettingsInvokeResponseOutput {
	return i.ToPublicIPAddressResourceSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i PublicIPAddressResourceSettingsInvokeResponseArgs) ToPublicIPAddressResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) PublicIPAddressResourceSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressResourceSettingsInvokeResponseOutput)
}

// Defines the public IP address resource settings.
type PublicIPAddressResourceSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressResourceSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o PublicIPAddressResourceSettingsInvokeResponseOutput) ToPublicIPAddressResourceSettingsInvokeResponseOutput() PublicIPAddressResourceSettingsInvokeResponseOutput {
	return o
}

func (o PublicIPAddressResourceSettingsInvokeResponseOutput) ToPublicIPAddressResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) PublicIPAddressResourceSettingsInvokeResponseOutput {
	return o
}

// Gets or sets the domain name label.
func (o PublicIPAddressResourceSettingsInvokeResponseOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsInvokeResponse) *string { return v.DomainNameLabel }).(pulumi.StringPtrOutput)
}

// Gets or sets the fully qualified domain name.
func (o PublicIPAddressResourceSettingsInvokeResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsInvokeResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Gets or sets public IP allocation method.
func (o PublicIPAddressResourceSettingsInvokeResponseOutput) PublicIpAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsInvokeResponse) *string { return v.PublicIpAllocationMethod }).(pulumi.StringPtrOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Network/publicIPAddresses'.
func (o PublicIPAddressResourceSettingsInvokeResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsInvokeResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets public IP sku.
func (o PublicIPAddressResourceSettingsInvokeResponseOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsInvokeResponse) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Gets or sets the target Resource name.
func (o PublicIPAddressResourceSettingsInvokeResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsInvokeResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Gets or sets public IP zones.
func (o PublicIPAddressResourceSettingsInvokeResponseOutput) Zones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsInvokeResponse) *string { return v.Zones }).(pulumi.StringPtrOutput)
}

// Defines the public IP address resource settings.
type PublicIPAddressResourceSettingsResponse struct {
	// Gets or sets the domain name label.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// Gets or sets the fully qualified domain name.
	Fqdn *string `pulumi:"fqdn"`
	// Gets or sets public IP allocation method.
	PublicIpAllocationMethod *string `pulumi:"publicIpAllocationMethod"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/publicIPAddresses'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets public IP sku.
	Sku *string `pulumi:"sku"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets public IP zones.
	Zones *string `pulumi:"zones"`
}

// PublicIPAddressResourceSettingsResponseInput is an input type that accepts PublicIPAddressResourceSettingsResponseArgs and PublicIPAddressResourceSettingsResponseOutput values.
// You can construct a concrete instance of `PublicIPAddressResourceSettingsResponseInput` via:
//
//          PublicIPAddressResourceSettingsResponseArgs{...}
type PublicIPAddressResourceSettingsResponseInput interface {
	pulumi.Input

	ToPublicIPAddressResourceSettingsResponseOutput() PublicIPAddressResourceSettingsResponseOutput
	ToPublicIPAddressResourceSettingsResponseOutputWithContext(context.Context) PublicIPAddressResourceSettingsResponseOutput
}

// Defines the public IP address resource settings.
type PublicIPAddressResourceSettingsResponseArgs struct {
	// Gets or sets the domain name label.
	DomainNameLabel pulumi.StringPtrInput `pulumi:"domainNameLabel"`
	// Gets or sets the fully qualified domain name.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Gets or sets public IP allocation method.
	PublicIpAllocationMethod pulumi.StringPtrInput `pulumi:"publicIpAllocationMethod"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/publicIPAddresses'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets public IP sku.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Gets or sets public IP zones.
	Zones pulumi.StringPtrInput `pulumi:"zones"`
}

func (PublicIPAddressResourceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResourceSettingsResponse)(nil)).Elem()
}

func (i PublicIPAddressResourceSettingsResponseArgs) ToPublicIPAddressResourceSettingsResponseOutput() PublicIPAddressResourceSettingsResponseOutput {
	return i.ToPublicIPAddressResourceSettingsResponseOutputWithContext(context.Background())
}

func (i PublicIPAddressResourceSettingsResponseArgs) ToPublicIPAddressResourceSettingsResponseOutputWithContext(ctx context.Context) PublicIPAddressResourceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressResourceSettingsResponseOutput)
}

// Defines the public IP address resource settings.
type PublicIPAddressResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResourceSettingsResponse)(nil)).Elem()
}

func (o PublicIPAddressResourceSettingsResponseOutput) ToPublicIPAddressResourceSettingsResponseOutput() PublicIPAddressResourceSettingsResponseOutput {
	return o
}

func (o PublicIPAddressResourceSettingsResponseOutput) ToPublicIPAddressResourceSettingsResponseOutputWithContext(ctx context.Context) PublicIPAddressResourceSettingsResponseOutput {
	return o
}

// Gets or sets the domain name label.
func (o PublicIPAddressResourceSettingsResponseOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsResponse) *string { return v.DomainNameLabel }).(pulumi.StringPtrOutput)
}

// Gets or sets the fully qualified domain name.
func (o PublicIPAddressResourceSettingsResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Gets or sets public IP allocation method.
func (o PublicIPAddressResourceSettingsResponseOutput) PublicIpAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsResponse) *string { return v.PublicIpAllocationMethod }).(pulumi.StringPtrOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Network/publicIPAddresses'.
func (o PublicIPAddressResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets public IP sku.
func (o PublicIPAddressResourceSettingsResponseOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsResponse) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Gets or sets the target Resource name.
func (o PublicIPAddressResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Gets or sets public IP zones.
func (o PublicIPAddressResourceSettingsResponseOutput) Zones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsResponse) *string { return v.Zones }).(pulumi.StringPtrOutput)
}

// Defines reference to a public IP.
type PublicIpReference struct {
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// PublicIpReferenceInput is an input type that accepts PublicIpReferenceArgs and PublicIpReferenceOutput values.
// You can construct a concrete instance of `PublicIpReferenceInput` via:
//
//          PublicIpReferenceArgs{...}
type PublicIpReferenceInput interface {
	pulumi.Input

	ToPublicIpReferenceOutput() PublicIpReferenceOutput
	ToPublicIpReferenceOutputWithContext(context.Context) PublicIpReferenceOutput
}

// Defines reference to a public IP.
type PublicIpReferenceArgs struct {
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId pulumi.StringInput `pulumi:"sourceArmResourceId"`
}

func (PublicIpReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIpReference)(nil)).Elem()
}

func (i PublicIpReferenceArgs) ToPublicIpReferenceOutput() PublicIpReferenceOutput {
	return i.ToPublicIpReferenceOutputWithContext(context.Background())
}

func (i PublicIpReferenceArgs) ToPublicIpReferenceOutputWithContext(ctx context.Context) PublicIpReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIpReferenceOutput)
}

func (i PublicIpReferenceArgs) ToPublicIpReferencePtrOutput() PublicIpReferencePtrOutput {
	return i.ToPublicIpReferencePtrOutputWithContext(context.Background())
}

func (i PublicIpReferenceArgs) ToPublicIpReferencePtrOutputWithContext(ctx context.Context) PublicIpReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIpReferenceOutput).ToPublicIpReferencePtrOutputWithContext(ctx)
}

// PublicIpReferencePtrInput is an input type that accepts PublicIpReferenceArgs, PublicIpReferencePtr and PublicIpReferencePtrOutput values.
// You can construct a concrete instance of `PublicIpReferencePtrInput` via:
//
//          PublicIpReferenceArgs{...}
//
//  or:
//
//          nil
type PublicIpReferencePtrInput interface {
	pulumi.Input

	ToPublicIpReferencePtrOutput() PublicIpReferencePtrOutput
	ToPublicIpReferencePtrOutputWithContext(context.Context) PublicIpReferencePtrOutput
}

type publicIpReferencePtrType PublicIpReferenceArgs

func PublicIpReferencePtr(v *PublicIpReferenceArgs) PublicIpReferencePtrInput {
	return (*publicIpReferencePtrType)(v)
}

func (*publicIpReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIpReference)(nil)).Elem()
}

func (i *publicIpReferencePtrType) ToPublicIpReferencePtrOutput() PublicIpReferencePtrOutput {
	return i.ToPublicIpReferencePtrOutputWithContext(context.Background())
}

func (i *publicIpReferencePtrType) ToPublicIpReferencePtrOutputWithContext(ctx context.Context) PublicIpReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIpReferencePtrOutput)
}

// Defines reference to a public IP.
type PublicIpReferenceOutput struct{ *pulumi.OutputState }

func (PublicIpReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIpReference)(nil)).Elem()
}

func (o PublicIpReferenceOutput) ToPublicIpReferenceOutput() PublicIpReferenceOutput {
	return o
}

func (o PublicIpReferenceOutput) ToPublicIpReferenceOutputWithContext(ctx context.Context) PublicIpReferenceOutput {
	return o
}

func (o PublicIpReferenceOutput) ToPublicIpReferencePtrOutput() PublicIpReferencePtrOutput {
	return o.ToPublicIpReferencePtrOutputWithContext(context.Background())
}

func (o PublicIpReferenceOutput) ToPublicIpReferencePtrOutputWithContext(ctx context.Context) PublicIpReferencePtrOutput {
	return o.ApplyT(func(v PublicIpReference) *PublicIpReference {
		return &v
	}).(PublicIpReferencePtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o PublicIpReferenceOutput) SourceArmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIpReference) string { return v.SourceArmResourceId }).(pulumi.StringOutput)
}

type PublicIpReferencePtrOutput struct{ *pulumi.OutputState }

func (PublicIpReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIpReference)(nil)).Elem()
}

func (o PublicIpReferencePtrOutput) ToPublicIpReferencePtrOutput() PublicIpReferencePtrOutput {
	return o
}

func (o PublicIpReferencePtrOutput) ToPublicIpReferencePtrOutputWithContext(ctx context.Context) PublicIpReferencePtrOutput {
	return o
}

func (o PublicIpReferencePtrOutput) Elem() PublicIpReferenceOutput {
	return o.ApplyT(func(v *PublicIpReference) PublicIpReference { return *v }).(PublicIpReferenceOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o PublicIpReferencePtrOutput) SourceArmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIpReference) *string {
		if v == nil {
			return nil
		}
		return &v.SourceArmResourceId
	}).(pulumi.StringPtrOutput)
}

// Defines reference to a public IP.
type PublicIpReferenceInvokeResponse struct {
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// PublicIpReferenceInvokeResponseInput is an input type that accepts PublicIpReferenceInvokeResponseArgs and PublicIpReferenceInvokeResponseOutput values.
// You can construct a concrete instance of `PublicIpReferenceInvokeResponseInput` via:
//
//          PublicIpReferenceInvokeResponseArgs{...}
type PublicIpReferenceInvokeResponseInput interface {
	pulumi.Input

	ToPublicIpReferenceInvokeResponseOutput() PublicIpReferenceInvokeResponseOutput
	ToPublicIpReferenceInvokeResponseOutputWithContext(context.Context) PublicIpReferenceInvokeResponseOutput
}

// Defines reference to a public IP.
type PublicIpReferenceInvokeResponseArgs struct {
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId pulumi.StringInput `pulumi:"sourceArmResourceId"`
}

func (PublicIpReferenceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIpReferenceInvokeResponse)(nil)).Elem()
}

func (i PublicIpReferenceInvokeResponseArgs) ToPublicIpReferenceInvokeResponseOutput() PublicIpReferenceInvokeResponseOutput {
	return i.ToPublicIpReferenceInvokeResponseOutputWithContext(context.Background())
}

func (i PublicIpReferenceInvokeResponseArgs) ToPublicIpReferenceInvokeResponseOutputWithContext(ctx context.Context) PublicIpReferenceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIpReferenceInvokeResponseOutput)
}

func (i PublicIpReferenceInvokeResponseArgs) ToPublicIpReferenceInvokeResponsePtrOutput() PublicIpReferenceInvokeResponsePtrOutput {
	return i.ToPublicIpReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i PublicIpReferenceInvokeResponseArgs) ToPublicIpReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) PublicIpReferenceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIpReferenceInvokeResponseOutput).ToPublicIpReferenceInvokeResponsePtrOutputWithContext(ctx)
}

// PublicIpReferenceInvokeResponsePtrInput is an input type that accepts PublicIpReferenceInvokeResponseArgs, PublicIpReferenceInvokeResponsePtr and PublicIpReferenceInvokeResponsePtrOutput values.
// You can construct a concrete instance of `PublicIpReferenceInvokeResponsePtrInput` via:
//
//          PublicIpReferenceInvokeResponseArgs{...}
//
//  or:
//
//          nil
type PublicIpReferenceInvokeResponsePtrInput interface {
	pulumi.Input

	ToPublicIpReferenceInvokeResponsePtrOutput() PublicIpReferenceInvokeResponsePtrOutput
	ToPublicIpReferenceInvokeResponsePtrOutputWithContext(context.Context) PublicIpReferenceInvokeResponsePtrOutput
}

type publicIpReferenceInvokeResponsePtrType PublicIpReferenceInvokeResponseArgs

func PublicIpReferenceInvokeResponsePtr(v *PublicIpReferenceInvokeResponseArgs) PublicIpReferenceInvokeResponsePtrInput {
	return (*publicIpReferenceInvokeResponsePtrType)(v)
}

func (*publicIpReferenceInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIpReferenceInvokeResponse)(nil)).Elem()
}

func (i *publicIpReferenceInvokeResponsePtrType) ToPublicIpReferenceInvokeResponsePtrOutput() PublicIpReferenceInvokeResponsePtrOutput {
	return i.ToPublicIpReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *publicIpReferenceInvokeResponsePtrType) ToPublicIpReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) PublicIpReferenceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIpReferenceInvokeResponsePtrOutput)
}

// Defines reference to a public IP.
type PublicIpReferenceInvokeResponseOutput struct{ *pulumi.OutputState }

func (PublicIpReferenceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIpReferenceInvokeResponse)(nil)).Elem()
}

func (o PublicIpReferenceInvokeResponseOutput) ToPublicIpReferenceInvokeResponseOutput() PublicIpReferenceInvokeResponseOutput {
	return o
}

func (o PublicIpReferenceInvokeResponseOutput) ToPublicIpReferenceInvokeResponseOutputWithContext(ctx context.Context) PublicIpReferenceInvokeResponseOutput {
	return o
}

func (o PublicIpReferenceInvokeResponseOutput) ToPublicIpReferenceInvokeResponsePtrOutput() PublicIpReferenceInvokeResponsePtrOutput {
	return o.ToPublicIpReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (o PublicIpReferenceInvokeResponseOutput) ToPublicIpReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) PublicIpReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v PublicIpReferenceInvokeResponse) *PublicIpReferenceInvokeResponse {
		return &v
	}).(PublicIpReferenceInvokeResponsePtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o PublicIpReferenceInvokeResponseOutput) SourceArmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIpReferenceInvokeResponse) string { return v.SourceArmResourceId }).(pulumi.StringOutput)
}

type PublicIpReferenceInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIpReferenceInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIpReferenceInvokeResponse)(nil)).Elem()
}

func (o PublicIpReferenceInvokeResponsePtrOutput) ToPublicIpReferenceInvokeResponsePtrOutput() PublicIpReferenceInvokeResponsePtrOutput {
	return o
}

func (o PublicIpReferenceInvokeResponsePtrOutput) ToPublicIpReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) PublicIpReferenceInvokeResponsePtrOutput {
	return o
}

func (o PublicIpReferenceInvokeResponsePtrOutput) Elem() PublicIpReferenceInvokeResponseOutput {
	return o.ApplyT(func(v *PublicIpReferenceInvokeResponse) PublicIpReferenceInvokeResponse { return *v }).(PublicIpReferenceInvokeResponseOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o PublicIpReferenceInvokeResponsePtrOutput) SourceArmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIpReferenceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceArmResourceId
	}).(pulumi.StringPtrOutput)
}

// Defines reference to a public IP.
type PublicIpReferenceResponse struct {
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// PublicIpReferenceResponseInput is an input type that accepts PublicIpReferenceResponseArgs and PublicIpReferenceResponseOutput values.
// You can construct a concrete instance of `PublicIpReferenceResponseInput` via:
//
//          PublicIpReferenceResponseArgs{...}
type PublicIpReferenceResponseInput interface {
	pulumi.Input

	ToPublicIpReferenceResponseOutput() PublicIpReferenceResponseOutput
	ToPublicIpReferenceResponseOutputWithContext(context.Context) PublicIpReferenceResponseOutput
}

// Defines reference to a public IP.
type PublicIpReferenceResponseArgs struct {
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId pulumi.StringInput `pulumi:"sourceArmResourceId"`
}

func (PublicIpReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIpReferenceResponse)(nil)).Elem()
}

func (i PublicIpReferenceResponseArgs) ToPublicIpReferenceResponseOutput() PublicIpReferenceResponseOutput {
	return i.ToPublicIpReferenceResponseOutputWithContext(context.Background())
}

func (i PublicIpReferenceResponseArgs) ToPublicIpReferenceResponseOutputWithContext(ctx context.Context) PublicIpReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIpReferenceResponseOutput)
}

func (i PublicIpReferenceResponseArgs) ToPublicIpReferenceResponsePtrOutput() PublicIpReferenceResponsePtrOutput {
	return i.ToPublicIpReferenceResponsePtrOutputWithContext(context.Background())
}

func (i PublicIpReferenceResponseArgs) ToPublicIpReferenceResponsePtrOutputWithContext(ctx context.Context) PublicIpReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIpReferenceResponseOutput).ToPublicIpReferenceResponsePtrOutputWithContext(ctx)
}

// PublicIpReferenceResponsePtrInput is an input type that accepts PublicIpReferenceResponseArgs, PublicIpReferenceResponsePtr and PublicIpReferenceResponsePtrOutput values.
// You can construct a concrete instance of `PublicIpReferenceResponsePtrInput` via:
//
//          PublicIpReferenceResponseArgs{...}
//
//  or:
//
//          nil
type PublicIpReferenceResponsePtrInput interface {
	pulumi.Input

	ToPublicIpReferenceResponsePtrOutput() PublicIpReferenceResponsePtrOutput
	ToPublicIpReferenceResponsePtrOutputWithContext(context.Context) PublicIpReferenceResponsePtrOutput
}

type publicIpReferenceResponsePtrType PublicIpReferenceResponseArgs

func PublicIpReferenceResponsePtr(v *PublicIpReferenceResponseArgs) PublicIpReferenceResponsePtrInput {
	return (*publicIpReferenceResponsePtrType)(v)
}

func (*publicIpReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIpReferenceResponse)(nil)).Elem()
}

func (i *publicIpReferenceResponsePtrType) ToPublicIpReferenceResponsePtrOutput() PublicIpReferenceResponsePtrOutput {
	return i.ToPublicIpReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *publicIpReferenceResponsePtrType) ToPublicIpReferenceResponsePtrOutputWithContext(ctx context.Context) PublicIpReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIpReferenceResponsePtrOutput)
}

// Defines reference to a public IP.
type PublicIpReferenceResponseOutput struct{ *pulumi.OutputState }

func (PublicIpReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIpReferenceResponse)(nil)).Elem()
}

func (o PublicIpReferenceResponseOutput) ToPublicIpReferenceResponseOutput() PublicIpReferenceResponseOutput {
	return o
}

func (o PublicIpReferenceResponseOutput) ToPublicIpReferenceResponseOutputWithContext(ctx context.Context) PublicIpReferenceResponseOutput {
	return o
}

func (o PublicIpReferenceResponseOutput) ToPublicIpReferenceResponsePtrOutput() PublicIpReferenceResponsePtrOutput {
	return o.ToPublicIpReferenceResponsePtrOutputWithContext(context.Background())
}

func (o PublicIpReferenceResponseOutput) ToPublicIpReferenceResponsePtrOutputWithContext(ctx context.Context) PublicIpReferenceResponsePtrOutput {
	return o.ApplyT(func(v PublicIpReferenceResponse) *PublicIpReferenceResponse {
		return &v
	}).(PublicIpReferenceResponsePtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o PublicIpReferenceResponseOutput) SourceArmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIpReferenceResponse) string { return v.SourceArmResourceId }).(pulumi.StringOutput)
}

type PublicIpReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIpReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIpReferenceResponse)(nil)).Elem()
}

func (o PublicIpReferenceResponsePtrOutput) ToPublicIpReferenceResponsePtrOutput() PublicIpReferenceResponsePtrOutput {
	return o
}

func (o PublicIpReferenceResponsePtrOutput) ToPublicIpReferenceResponsePtrOutputWithContext(ctx context.Context) PublicIpReferenceResponsePtrOutput {
	return o
}

func (o PublicIpReferenceResponsePtrOutput) Elem() PublicIpReferenceResponseOutput {
	return o.ApplyT(func(v *PublicIpReferenceResponse) PublicIpReferenceResponse { return *v }).(PublicIpReferenceResponseOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o PublicIpReferenceResponsePtrOutput) SourceArmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIpReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceArmResourceId
	}).(pulumi.StringPtrOutput)
}

// Defines the resource group resource settings.
type ResourceGroupResourceSettings struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'resourceGroups'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// ResourceGroupResourceSettingsInput is an input type that accepts ResourceGroupResourceSettingsArgs and ResourceGroupResourceSettingsOutput values.
// You can construct a concrete instance of `ResourceGroupResourceSettingsInput` via:
//
//          ResourceGroupResourceSettingsArgs{...}
type ResourceGroupResourceSettingsInput interface {
	pulumi.Input

	ToResourceGroupResourceSettingsOutput() ResourceGroupResourceSettingsOutput
	ToResourceGroupResourceSettingsOutputWithContext(context.Context) ResourceGroupResourceSettingsOutput
}

// Defines the resource group resource settings.
type ResourceGroupResourceSettingsArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'resourceGroups'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (ResourceGroupResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceSettings)(nil)).Elem()
}

func (i ResourceGroupResourceSettingsArgs) ToResourceGroupResourceSettingsOutput() ResourceGroupResourceSettingsOutput {
	return i.ToResourceGroupResourceSettingsOutputWithContext(context.Background())
}

func (i ResourceGroupResourceSettingsArgs) ToResourceGroupResourceSettingsOutputWithContext(ctx context.Context) ResourceGroupResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceSettingsOutput)
}

// Defines the resource group resource settings.
type ResourceGroupResourceSettingsOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceSettings)(nil)).Elem()
}

func (o ResourceGroupResourceSettingsOutput) ToResourceGroupResourceSettingsOutput() ResourceGroupResourceSettingsOutput {
	return o
}

func (o ResourceGroupResourceSettingsOutput) ToResourceGroupResourceSettingsOutputWithContext(ctx context.Context) ResourceGroupResourceSettingsOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'resourceGroups'.
func (o ResourceGroupResourceSettingsOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupResourceSettings) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o ResourceGroupResourceSettingsOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupResourceSettings) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the resource group resource settings.
type ResourceGroupResourceSettingsInvokeResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'resourceGroups'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// ResourceGroupResourceSettingsInvokeResponseInput is an input type that accepts ResourceGroupResourceSettingsInvokeResponseArgs and ResourceGroupResourceSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `ResourceGroupResourceSettingsInvokeResponseInput` via:
//
//          ResourceGroupResourceSettingsInvokeResponseArgs{...}
type ResourceGroupResourceSettingsInvokeResponseInput interface {
	pulumi.Input

	ToResourceGroupResourceSettingsInvokeResponseOutput() ResourceGroupResourceSettingsInvokeResponseOutput
	ToResourceGroupResourceSettingsInvokeResponseOutputWithContext(context.Context) ResourceGroupResourceSettingsInvokeResponseOutput
}

// Defines the resource group resource settings.
type ResourceGroupResourceSettingsInvokeResponseArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'resourceGroups'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (ResourceGroupResourceSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i ResourceGroupResourceSettingsInvokeResponseArgs) ToResourceGroupResourceSettingsInvokeResponseOutput() ResourceGroupResourceSettingsInvokeResponseOutput {
	return i.ToResourceGroupResourceSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i ResourceGroupResourceSettingsInvokeResponseArgs) ToResourceGroupResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) ResourceGroupResourceSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceSettingsInvokeResponseOutput)
}

// Defines the resource group resource settings.
type ResourceGroupResourceSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o ResourceGroupResourceSettingsInvokeResponseOutput) ToResourceGroupResourceSettingsInvokeResponseOutput() ResourceGroupResourceSettingsInvokeResponseOutput {
	return o
}

func (o ResourceGroupResourceSettingsInvokeResponseOutput) ToResourceGroupResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) ResourceGroupResourceSettingsInvokeResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'resourceGroups'.
func (o ResourceGroupResourceSettingsInvokeResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupResourceSettingsInvokeResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o ResourceGroupResourceSettingsInvokeResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupResourceSettingsInvokeResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the resource group resource settings.
type ResourceGroupResourceSettingsResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'resourceGroups'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// ResourceGroupResourceSettingsResponseInput is an input type that accepts ResourceGroupResourceSettingsResponseArgs and ResourceGroupResourceSettingsResponseOutput values.
// You can construct a concrete instance of `ResourceGroupResourceSettingsResponseInput` via:
//
//          ResourceGroupResourceSettingsResponseArgs{...}
type ResourceGroupResourceSettingsResponseInput interface {
	pulumi.Input

	ToResourceGroupResourceSettingsResponseOutput() ResourceGroupResourceSettingsResponseOutput
	ToResourceGroupResourceSettingsResponseOutputWithContext(context.Context) ResourceGroupResourceSettingsResponseOutput
}

// Defines the resource group resource settings.
type ResourceGroupResourceSettingsResponseArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'resourceGroups'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (ResourceGroupResourceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceSettingsResponse)(nil)).Elem()
}

func (i ResourceGroupResourceSettingsResponseArgs) ToResourceGroupResourceSettingsResponseOutput() ResourceGroupResourceSettingsResponseOutput {
	return i.ToResourceGroupResourceSettingsResponseOutputWithContext(context.Background())
}

func (i ResourceGroupResourceSettingsResponseArgs) ToResourceGroupResourceSettingsResponseOutputWithContext(ctx context.Context) ResourceGroupResourceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceSettingsResponseOutput)
}

// Defines the resource group resource settings.
type ResourceGroupResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceSettingsResponse)(nil)).Elem()
}

func (o ResourceGroupResourceSettingsResponseOutput) ToResourceGroupResourceSettingsResponseOutput() ResourceGroupResourceSettingsResponseOutput {
	return o
}

func (o ResourceGroupResourceSettingsResponseOutput) ToResourceGroupResourceSettingsResponseOutputWithContext(ctx context.Context) ResourceGroupResourceSettingsResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'resourceGroups'.
func (o ResourceGroupResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o ResourceGroupResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the Sql Database resource settings.
type SqlDatabaseResourceSettings struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Sql/servers/databases'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Defines the zone redundant resource setting.
	ZoneRedundant *string `pulumi:"zoneRedundant"`
}

// SqlDatabaseResourceSettingsInput is an input type that accepts SqlDatabaseResourceSettingsArgs and SqlDatabaseResourceSettingsOutput values.
// You can construct a concrete instance of `SqlDatabaseResourceSettingsInput` via:
//
//          SqlDatabaseResourceSettingsArgs{...}
type SqlDatabaseResourceSettingsInput interface {
	pulumi.Input

	ToSqlDatabaseResourceSettingsOutput() SqlDatabaseResourceSettingsOutput
	ToSqlDatabaseResourceSettingsOutputWithContext(context.Context) SqlDatabaseResourceSettingsOutput
}

// Defines the Sql Database resource settings.
type SqlDatabaseResourceSettingsArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Sql/servers/databases'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Defines the zone redundant resource setting.
	ZoneRedundant pulumi.StringPtrInput `pulumi:"zoneRedundant"`
}

func (SqlDatabaseResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseResourceSettings)(nil)).Elem()
}

func (i SqlDatabaseResourceSettingsArgs) ToSqlDatabaseResourceSettingsOutput() SqlDatabaseResourceSettingsOutput {
	return i.ToSqlDatabaseResourceSettingsOutputWithContext(context.Background())
}

func (i SqlDatabaseResourceSettingsArgs) ToSqlDatabaseResourceSettingsOutputWithContext(ctx context.Context) SqlDatabaseResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseResourceSettingsOutput)
}

// Defines the Sql Database resource settings.
type SqlDatabaseResourceSettingsOutput struct{ *pulumi.OutputState }

func (SqlDatabaseResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseResourceSettings)(nil)).Elem()
}

func (o SqlDatabaseResourceSettingsOutput) ToSqlDatabaseResourceSettingsOutput() SqlDatabaseResourceSettingsOutput {
	return o
}

func (o SqlDatabaseResourceSettingsOutput) ToSqlDatabaseResourceSettingsOutputWithContext(ctx context.Context) SqlDatabaseResourceSettingsOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Sql/servers/databases'.
func (o SqlDatabaseResourceSettingsOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseResourceSettings) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o SqlDatabaseResourceSettingsOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseResourceSettings) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the zone redundant resource setting.
func (o SqlDatabaseResourceSettingsOutput) ZoneRedundant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlDatabaseResourceSettings) *string { return v.ZoneRedundant }).(pulumi.StringPtrOutput)
}

// Defines the Sql Database resource settings.
type SqlDatabaseResourceSettingsInvokeResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Sql/servers/databases'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Defines the zone redundant resource setting.
	ZoneRedundant *string `pulumi:"zoneRedundant"`
}

// SqlDatabaseResourceSettingsInvokeResponseInput is an input type that accepts SqlDatabaseResourceSettingsInvokeResponseArgs and SqlDatabaseResourceSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `SqlDatabaseResourceSettingsInvokeResponseInput` via:
//
//          SqlDatabaseResourceSettingsInvokeResponseArgs{...}
type SqlDatabaseResourceSettingsInvokeResponseInput interface {
	pulumi.Input

	ToSqlDatabaseResourceSettingsInvokeResponseOutput() SqlDatabaseResourceSettingsInvokeResponseOutput
	ToSqlDatabaseResourceSettingsInvokeResponseOutputWithContext(context.Context) SqlDatabaseResourceSettingsInvokeResponseOutput
}

// Defines the Sql Database resource settings.
type SqlDatabaseResourceSettingsInvokeResponseArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Sql/servers/databases'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Defines the zone redundant resource setting.
	ZoneRedundant pulumi.StringPtrInput `pulumi:"zoneRedundant"`
}

func (SqlDatabaseResourceSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i SqlDatabaseResourceSettingsInvokeResponseArgs) ToSqlDatabaseResourceSettingsInvokeResponseOutput() SqlDatabaseResourceSettingsInvokeResponseOutput {
	return i.ToSqlDatabaseResourceSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i SqlDatabaseResourceSettingsInvokeResponseArgs) ToSqlDatabaseResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) SqlDatabaseResourceSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseResourceSettingsInvokeResponseOutput)
}

// Defines the Sql Database resource settings.
type SqlDatabaseResourceSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (SqlDatabaseResourceSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o SqlDatabaseResourceSettingsInvokeResponseOutput) ToSqlDatabaseResourceSettingsInvokeResponseOutput() SqlDatabaseResourceSettingsInvokeResponseOutput {
	return o
}

func (o SqlDatabaseResourceSettingsInvokeResponseOutput) ToSqlDatabaseResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) SqlDatabaseResourceSettingsInvokeResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Sql/servers/databases'.
func (o SqlDatabaseResourceSettingsInvokeResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseResourceSettingsInvokeResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o SqlDatabaseResourceSettingsInvokeResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseResourceSettingsInvokeResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the zone redundant resource setting.
func (o SqlDatabaseResourceSettingsInvokeResponseOutput) ZoneRedundant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlDatabaseResourceSettingsInvokeResponse) *string { return v.ZoneRedundant }).(pulumi.StringPtrOutput)
}

// Defines the Sql Database resource settings.
type SqlDatabaseResourceSettingsResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Sql/servers/databases'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Defines the zone redundant resource setting.
	ZoneRedundant *string `pulumi:"zoneRedundant"`
}

// SqlDatabaseResourceSettingsResponseInput is an input type that accepts SqlDatabaseResourceSettingsResponseArgs and SqlDatabaseResourceSettingsResponseOutput values.
// You can construct a concrete instance of `SqlDatabaseResourceSettingsResponseInput` via:
//
//          SqlDatabaseResourceSettingsResponseArgs{...}
type SqlDatabaseResourceSettingsResponseInput interface {
	pulumi.Input

	ToSqlDatabaseResourceSettingsResponseOutput() SqlDatabaseResourceSettingsResponseOutput
	ToSqlDatabaseResourceSettingsResponseOutputWithContext(context.Context) SqlDatabaseResourceSettingsResponseOutput
}

// Defines the Sql Database resource settings.
type SqlDatabaseResourceSettingsResponseArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Sql/servers/databases'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Defines the zone redundant resource setting.
	ZoneRedundant pulumi.StringPtrInput `pulumi:"zoneRedundant"`
}

func (SqlDatabaseResourceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseResourceSettingsResponse)(nil)).Elem()
}

func (i SqlDatabaseResourceSettingsResponseArgs) ToSqlDatabaseResourceSettingsResponseOutput() SqlDatabaseResourceSettingsResponseOutput {
	return i.ToSqlDatabaseResourceSettingsResponseOutputWithContext(context.Background())
}

func (i SqlDatabaseResourceSettingsResponseArgs) ToSqlDatabaseResourceSettingsResponseOutputWithContext(ctx context.Context) SqlDatabaseResourceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseResourceSettingsResponseOutput)
}

// Defines the Sql Database resource settings.
type SqlDatabaseResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (SqlDatabaseResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseResourceSettingsResponse)(nil)).Elem()
}

func (o SqlDatabaseResourceSettingsResponseOutput) ToSqlDatabaseResourceSettingsResponseOutput() SqlDatabaseResourceSettingsResponseOutput {
	return o
}

func (o SqlDatabaseResourceSettingsResponseOutput) ToSqlDatabaseResourceSettingsResponseOutputWithContext(ctx context.Context) SqlDatabaseResourceSettingsResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Sql/servers/databases'.
func (o SqlDatabaseResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o SqlDatabaseResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the zone redundant resource setting.
func (o SqlDatabaseResourceSettingsResponseOutput) ZoneRedundant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlDatabaseResourceSettingsResponse) *string { return v.ZoneRedundant }).(pulumi.StringPtrOutput)
}

// Defines the Sql ElasticPool resource settings.
type SqlElasticPoolResourceSettings struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Sql/servers/elasticPools'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Defines the zone redundant resource setting.
	ZoneRedundant *string `pulumi:"zoneRedundant"`
}

// SqlElasticPoolResourceSettingsInput is an input type that accepts SqlElasticPoolResourceSettingsArgs and SqlElasticPoolResourceSettingsOutput values.
// You can construct a concrete instance of `SqlElasticPoolResourceSettingsInput` via:
//
//          SqlElasticPoolResourceSettingsArgs{...}
type SqlElasticPoolResourceSettingsInput interface {
	pulumi.Input

	ToSqlElasticPoolResourceSettingsOutput() SqlElasticPoolResourceSettingsOutput
	ToSqlElasticPoolResourceSettingsOutputWithContext(context.Context) SqlElasticPoolResourceSettingsOutput
}

// Defines the Sql ElasticPool resource settings.
type SqlElasticPoolResourceSettingsArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Sql/servers/elasticPools'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Defines the zone redundant resource setting.
	ZoneRedundant pulumi.StringPtrInput `pulumi:"zoneRedundant"`
}

func (SqlElasticPoolResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlElasticPoolResourceSettings)(nil)).Elem()
}

func (i SqlElasticPoolResourceSettingsArgs) ToSqlElasticPoolResourceSettingsOutput() SqlElasticPoolResourceSettingsOutput {
	return i.ToSqlElasticPoolResourceSettingsOutputWithContext(context.Background())
}

func (i SqlElasticPoolResourceSettingsArgs) ToSqlElasticPoolResourceSettingsOutputWithContext(ctx context.Context) SqlElasticPoolResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlElasticPoolResourceSettingsOutput)
}

// Defines the Sql ElasticPool resource settings.
type SqlElasticPoolResourceSettingsOutput struct{ *pulumi.OutputState }

func (SqlElasticPoolResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlElasticPoolResourceSettings)(nil)).Elem()
}

func (o SqlElasticPoolResourceSettingsOutput) ToSqlElasticPoolResourceSettingsOutput() SqlElasticPoolResourceSettingsOutput {
	return o
}

func (o SqlElasticPoolResourceSettingsOutput) ToSqlElasticPoolResourceSettingsOutputWithContext(ctx context.Context) SqlElasticPoolResourceSettingsOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Sql/servers/elasticPools'.
func (o SqlElasticPoolResourceSettingsOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlElasticPoolResourceSettings) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o SqlElasticPoolResourceSettingsOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v SqlElasticPoolResourceSettings) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the zone redundant resource setting.
func (o SqlElasticPoolResourceSettingsOutput) ZoneRedundant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlElasticPoolResourceSettings) *string { return v.ZoneRedundant }).(pulumi.StringPtrOutput)
}

// Defines the Sql ElasticPool resource settings.
type SqlElasticPoolResourceSettingsInvokeResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Sql/servers/elasticPools'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Defines the zone redundant resource setting.
	ZoneRedundant *string `pulumi:"zoneRedundant"`
}

// SqlElasticPoolResourceSettingsInvokeResponseInput is an input type that accepts SqlElasticPoolResourceSettingsInvokeResponseArgs and SqlElasticPoolResourceSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `SqlElasticPoolResourceSettingsInvokeResponseInput` via:
//
//          SqlElasticPoolResourceSettingsInvokeResponseArgs{...}
type SqlElasticPoolResourceSettingsInvokeResponseInput interface {
	pulumi.Input

	ToSqlElasticPoolResourceSettingsInvokeResponseOutput() SqlElasticPoolResourceSettingsInvokeResponseOutput
	ToSqlElasticPoolResourceSettingsInvokeResponseOutputWithContext(context.Context) SqlElasticPoolResourceSettingsInvokeResponseOutput
}

// Defines the Sql ElasticPool resource settings.
type SqlElasticPoolResourceSettingsInvokeResponseArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Sql/servers/elasticPools'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Defines the zone redundant resource setting.
	ZoneRedundant pulumi.StringPtrInput `pulumi:"zoneRedundant"`
}

func (SqlElasticPoolResourceSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlElasticPoolResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i SqlElasticPoolResourceSettingsInvokeResponseArgs) ToSqlElasticPoolResourceSettingsInvokeResponseOutput() SqlElasticPoolResourceSettingsInvokeResponseOutput {
	return i.ToSqlElasticPoolResourceSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i SqlElasticPoolResourceSettingsInvokeResponseArgs) ToSqlElasticPoolResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) SqlElasticPoolResourceSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlElasticPoolResourceSettingsInvokeResponseOutput)
}

// Defines the Sql ElasticPool resource settings.
type SqlElasticPoolResourceSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (SqlElasticPoolResourceSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlElasticPoolResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o SqlElasticPoolResourceSettingsInvokeResponseOutput) ToSqlElasticPoolResourceSettingsInvokeResponseOutput() SqlElasticPoolResourceSettingsInvokeResponseOutput {
	return o
}

func (o SqlElasticPoolResourceSettingsInvokeResponseOutput) ToSqlElasticPoolResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) SqlElasticPoolResourceSettingsInvokeResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Sql/servers/elasticPools'.
func (o SqlElasticPoolResourceSettingsInvokeResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlElasticPoolResourceSettingsInvokeResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o SqlElasticPoolResourceSettingsInvokeResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v SqlElasticPoolResourceSettingsInvokeResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the zone redundant resource setting.
func (o SqlElasticPoolResourceSettingsInvokeResponseOutput) ZoneRedundant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlElasticPoolResourceSettingsInvokeResponse) *string { return v.ZoneRedundant }).(pulumi.StringPtrOutput)
}

// Defines the Sql ElasticPool resource settings.
type SqlElasticPoolResourceSettingsResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Sql/servers/elasticPools'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Defines the zone redundant resource setting.
	ZoneRedundant *string `pulumi:"zoneRedundant"`
}

// SqlElasticPoolResourceSettingsResponseInput is an input type that accepts SqlElasticPoolResourceSettingsResponseArgs and SqlElasticPoolResourceSettingsResponseOutput values.
// You can construct a concrete instance of `SqlElasticPoolResourceSettingsResponseInput` via:
//
//          SqlElasticPoolResourceSettingsResponseArgs{...}
type SqlElasticPoolResourceSettingsResponseInput interface {
	pulumi.Input

	ToSqlElasticPoolResourceSettingsResponseOutput() SqlElasticPoolResourceSettingsResponseOutput
	ToSqlElasticPoolResourceSettingsResponseOutputWithContext(context.Context) SqlElasticPoolResourceSettingsResponseOutput
}

// Defines the Sql ElasticPool resource settings.
type SqlElasticPoolResourceSettingsResponseArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Sql/servers/elasticPools'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Defines the zone redundant resource setting.
	ZoneRedundant pulumi.StringPtrInput `pulumi:"zoneRedundant"`
}

func (SqlElasticPoolResourceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlElasticPoolResourceSettingsResponse)(nil)).Elem()
}

func (i SqlElasticPoolResourceSettingsResponseArgs) ToSqlElasticPoolResourceSettingsResponseOutput() SqlElasticPoolResourceSettingsResponseOutput {
	return i.ToSqlElasticPoolResourceSettingsResponseOutputWithContext(context.Background())
}

func (i SqlElasticPoolResourceSettingsResponseArgs) ToSqlElasticPoolResourceSettingsResponseOutputWithContext(ctx context.Context) SqlElasticPoolResourceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlElasticPoolResourceSettingsResponseOutput)
}

// Defines the Sql ElasticPool resource settings.
type SqlElasticPoolResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (SqlElasticPoolResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlElasticPoolResourceSettingsResponse)(nil)).Elem()
}

func (o SqlElasticPoolResourceSettingsResponseOutput) ToSqlElasticPoolResourceSettingsResponseOutput() SqlElasticPoolResourceSettingsResponseOutput {
	return o
}

func (o SqlElasticPoolResourceSettingsResponseOutput) ToSqlElasticPoolResourceSettingsResponseOutputWithContext(ctx context.Context) SqlElasticPoolResourceSettingsResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Sql/servers/elasticPools'.
func (o SqlElasticPoolResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlElasticPoolResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o SqlElasticPoolResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v SqlElasticPoolResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the zone redundant resource setting.
func (o SqlElasticPoolResourceSettingsResponseOutput) ZoneRedundant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlElasticPoolResourceSettingsResponse) *string { return v.ZoneRedundant }).(pulumi.StringPtrOutput)
}

// Defines the SQL Server resource settings.
type SqlServerResourceSettings struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Sql/servers'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// SqlServerResourceSettingsInput is an input type that accepts SqlServerResourceSettingsArgs and SqlServerResourceSettingsOutput values.
// You can construct a concrete instance of `SqlServerResourceSettingsInput` via:
//
//          SqlServerResourceSettingsArgs{...}
type SqlServerResourceSettingsInput interface {
	pulumi.Input

	ToSqlServerResourceSettingsOutput() SqlServerResourceSettingsOutput
	ToSqlServerResourceSettingsOutputWithContext(context.Context) SqlServerResourceSettingsOutput
}

// Defines the SQL Server resource settings.
type SqlServerResourceSettingsArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Sql/servers'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (SqlServerResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerResourceSettings)(nil)).Elem()
}

func (i SqlServerResourceSettingsArgs) ToSqlServerResourceSettingsOutput() SqlServerResourceSettingsOutput {
	return i.ToSqlServerResourceSettingsOutputWithContext(context.Background())
}

func (i SqlServerResourceSettingsArgs) ToSqlServerResourceSettingsOutputWithContext(ctx context.Context) SqlServerResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerResourceSettingsOutput)
}

// Defines the SQL Server resource settings.
type SqlServerResourceSettingsOutput struct{ *pulumi.OutputState }

func (SqlServerResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerResourceSettings)(nil)).Elem()
}

func (o SqlServerResourceSettingsOutput) ToSqlServerResourceSettingsOutput() SqlServerResourceSettingsOutput {
	return o
}

func (o SqlServerResourceSettingsOutput) ToSqlServerResourceSettingsOutputWithContext(ctx context.Context) SqlServerResourceSettingsOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Sql/servers'.
func (o SqlServerResourceSettingsOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerResourceSettings) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o SqlServerResourceSettingsOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerResourceSettings) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the SQL Server resource settings.
type SqlServerResourceSettingsInvokeResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Sql/servers'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// SqlServerResourceSettingsInvokeResponseInput is an input type that accepts SqlServerResourceSettingsInvokeResponseArgs and SqlServerResourceSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `SqlServerResourceSettingsInvokeResponseInput` via:
//
//          SqlServerResourceSettingsInvokeResponseArgs{...}
type SqlServerResourceSettingsInvokeResponseInput interface {
	pulumi.Input

	ToSqlServerResourceSettingsInvokeResponseOutput() SqlServerResourceSettingsInvokeResponseOutput
	ToSqlServerResourceSettingsInvokeResponseOutputWithContext(context.Context) SqlServerResourceSettingsInvokeResponseOutput
}

// Defines the SQL Server resource settings.
type SqlServerResourceSettingsInvokeResponseArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Sql/servers'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (SqlServerResourceSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i SqlServerResourceSettingsInvokeResponseArgs) ToSqlServerResourceSettingsInvokeResponseOutput() SqlServerResourceSettingsInvokeResponseOutput {
	return i.ToSqlServerResourceSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i SqlServerResourceSettingsInvokeResponseArgs) ToSqlServerResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) SqlServerResourceSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerResourceSettingsInvokeResponseOutput)
}

// Defines the SQL Server resource settings.
type SqlServerResourceSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (SqlServerResourceSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o SqlServerResourceSettingsInvokeResponseOutput) ToSqlServerResourceSettingsInvokeResponseOutput() SqlServerResourceSettingsInvokeResponseOutput {
	return o
}

func (o SqlServerResourceSettingsInvokeResponseOutput) ToSqlServerResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) SqlServerResourceSettingsInvokeResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Sql/servers'.
func (o SqlServerResourceSettingsInvokeResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerResourceSettingsInvokeResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o SqlServerResourceSettingsInvokeResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerResourceSettingsInvokeResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the SQL Server resource settings.
type SqlServerResourceSettingsResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Sql/servers'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// SqlServerResourceSettingsResponseInput is an input type that accepts SqlServerResourceSettingsResponseArgs and SqlServerResourceSettingsResponseOutput values.
// You can construct a concrete instance of `SqlServerResourceSettingsResponseInput` via:
//
//          SqlServerResourceSettingsResponseArgs{...}
type SqlServerResourceSettingsResponseInput interface {
	pulumi.Input

	ToSqlServerResourceSettingsResponseOutput() SqlServerResourceSettingsResponseOutput
	ToSqlServerResourceSettingsResponseOutputWithContext(context.Context) SqlServerResourceSettingsResponseOutput
}

// Defines the SQL Server resource settings.
type SqlServerResourceSettingsResponseArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Sql/servers'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (SqlServerResourceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerResourceSettingsResponse)(nil)).Elem()
}

func (i SqlServerResourceSettingsResponseArgs) ToSqlServerResourceSettingsResponseOutput() SqlServerResourceSettingsResponseOutput {
	return i.ToSqlServerResourceSettingsResponseOutputWithContext(context.Background())
}

func (i SqlServerResourceSettingsResponseArgs) ToSqlServerResourceSettingsResponseOutputWithContext(ctx context.Context) SqlServerResourceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerResourceSettingsResponseOutput)
}

// Defines the SQL Server resource settings.
type SqlServerResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (SqlServerResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerResourceSettingsResponse)(nil)).Elem()
}

func (o SqlServerResourceSettingsResponseOutput) ToSqlServerResourceSettingsResponseOutput() SqlServerResourceSettingsResponseOutput {
	return o
}

func (o SqlServerResourceSettingsResponseOutput) ToSqlServerResourceSettingsResponseOutputWithContext(ctx context.Context) SqlServerResourceSettingsResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Sql/servers'.
func (o SqlServerResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o SqlServerResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines reference to subnet.
type SubnetReference struct {
	// Gets the name of the proxy resource on the target side.
	Name *string `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// SubnetReferenceInput is an input type that accepts SubnetReferenceArgs and SubnetReferenceOutput values.
// You can construct a concrete instance of `SubnetReferenceInput` via:
//
//          SubnetReferenceArgs{...}
type SubnetReferenceInput interface {
	pulumi.Input

	ToSubnetReferenceOutput() SubnetReferenceOutput
	ToSubnetReferenceOutputWithContext(context.Context) SubnetReferenceOutput
}

// Defines reference to subnet.
type SubnetReferenceArgs struct {
	// Gets the name of the proxy resource on the target side.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId pulumi.StringInput `pulumi:"sourceArmResourceId"`
}

func (SubnetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetReference)(nil)).Elem()
}

func (i SubnetReferenceArgs) ToSubnetReferenceOutput() SubnetReferenceOutput {
	return i.ToSubnetReferenceOutputWithContext(context.Background())
}

func (i SubnetReferenceArgs) ToSubnetReferenceOutputWithContext(ctx context.Context) SubnetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetReferenceOutput)
}

func (i SubnetReferenceArgs) ToSubnetReferencePtrOutput() SubnetReferencePtrOutput {
	return i.ToSubnetReferencePtrOutputWithContext(context.Background())
}

func (i SubnetReferenceArgs) ToSubnetReferencePtrOutputWithContext(ctx context.Context) SubnetReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetReferenceOutput).ToSubnetReferencePtrOutputWithContext(ctx)
}

// SubnetReferencePtrInput is an input type that accepts SubnetReferenceArgs, SubnetReferencePtr and SubnetReferencePtrOutput values.
// You can construct a concrete instance of `SubnetReferencePtrInput` via:
//
//          SubnetReferenceArgs{...}
//
//  or:
//
//          nil
type SubnetReferencePtrInput interface {
	pulumi.Input

	ToSubnetReferencePtrOutput() SubnetReferencePtrOutput
	ToSubnetReferencePtrOutputWithContext(context.Context) SubnetReferencePtrOutput
}

type subnetReferencePtrType SubnetReferenceArgs

func SubnetReferencePtr(v *SubnetReferenceArgs) SubnetReferencePtrInput {
	return (*subnetReferencePtrType)(v)
}

func (*subnetReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetReference)(nil)).Elem()
}

func (i *subnetReferencePtrType) ToSubnetReferencePtrOutput() SubnetReferencePtrOutput {
	return i.ToSubnetReferencePtrOutputWithContext(context.Background())
}

func (i *subnetReferencePtrType) ToSubnetReferencePtrOutputWithContext(ctx context.Context) SubnetReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetReferencePtrOutput)
}

// Defines reference to subnet.
type SubnetReferenceOutput struct{ *pulumi.OutputState }

func (SubnetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetReference)(nil)).Elem()
}

func (o SubnetReferenceOutput) ToSubnetReferenceOutput() SubnetReferenceOutput {
	return o
}

func (o SubnetReferenceOutput) ToSubnetReferenceOutputWithContext(ctx context.Context) SubnetReferenceOutput {
	return o
}

func (o SubnetReferenceOutput) ToSubnetReferencePtrOutput() SubnetReferencePtrOutput {
	return o.ToSubnetReferencePtrOutputWithContext(context.Background())
}

func (o SubnetReferenceOutput) ToSubnetReferencePtrOutputWithContext(ctx context.Context) SubnetReferencePtrOutput {
	return o.ApplyT(func(v SubnetReference) *SubnetReference {
		return &v
	}).(SubnetReferencePtrOutput)
}

// Gets the name of the proxy resource on the target side.
func (o SubnetReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o SubnetReferenceOutput) SourceArmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetReference) string { return v.SourceArmResourceId }).(pulumi.StringOutput)
}

type SubnetReferencePtrOutput struct{ *pulumi.OutputState }

func (SubnetReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetReference)(nil)).Elem()
}

func (o SubnetReferencePtrOutput) ToSubnetReferencePtrOutput() SubnetReferencePtrOutput {
	return o
}

func (o SubnetReferencePtrOutput) ToSubnetReferencePtrOutputWithContext(ctx context.Context) SubnetReferencePtrOutput {
	return o
}

func (o SubnetReferencePtrOutput) Elem() SubnetReferenceOutput {
	return o.ApplyT(func(v *SubnetReference) SubnetReference { return *v }).(SubnetReferenceOutput)
}

// Gets the name of the proxy resource on the target side.
func (o SubnetReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o SubnetReferencePtrOutput) SourceArmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetReference) *string {
		if v == nil {
			return nil
		}
		return &v.SourceArmResourceId
	}).(pulumi.StringPtrOutput)
}

// Defines reference to subnet.
type SubnetReferenceInvokeResponse struct {
	// Gets the name of the proxy resource on the target side.
	Name *string `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// SubnetReferenceInvokeResponseInput is an input type that accepts SubnetReferenceInvokeResponseArgs and SubnetReferenceInvokeResponseOutput values.
// You can construct a concrete instance of `SubnetReferenceInvokeResponseInput` via:
//
//          SubnetReferenceInvokeResponseArgs{...}
type SubnetReferenceInvokeResponseInput interface {
	pulumi.Input

	ToSubnetReferenceInvokeResponseOutput() SubnetReferenceInvokeResponseOutput
	ToSubnetReferenceInvokeResponseOutputWithContext(context.Context) SubnetReferenceInvokeResponseOutput
}

// Defines reference to subnet.
type SubnetReferenceInvokeResponseArgs struct {
	// Gets the name of the proxy resource on the target side.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId pulumi.StringInput `pulumi:"sourceArmResourceId"`
}

func (SubnetReferenceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetReferenceInvokeResponse)(nil)).Elem()
}

func (i SubnetReferenceInvokeResponseArgs) ToSubnetReferenceInvokeResponseOutput() SubnetReferenceInvokeResponseOutput {
	return i.ToSubnetReferenceInvokeResponseOutputWithContext(context.Background())
}

func (i SubnetReferenceInvokeResponseArgs) ToSubnetReferenceInvokeResponseOutputWithContext(ctx context.Context) SubnetReferenceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetReferenceInvokeResponseOutput)
}

func (i SubnetReferenceInvokeResponseArgs) ToSubnetReferenceInvokeResponsePtrOutput() SubnetReferenceInvokeResponsePtrOutput {
	return i.ToSubnetReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SubnetReferenceInvokeResponseArgs) ToSubnetReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) SubnetReferenceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetReferenceInvokeResponseOutput).ToSubnetReferenceInvokeResponsePtrOutputWithContext(ctx)
}

// SubnetReferenceInvokeResponsePtrInput is an input type that accepts SubnetReferenceInvokeResponseArgs, SubnetReferenceInvokeResponsePtr and SubnetReferenceInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SubnetReferenceInvokeResponsePtrInput` via:
//
//          SubnetReferenceInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SubnetReferenceInvokeResponsePtrInput interface {
	pulumi.Input

	ToSubnetReferenceInvokeResponsePtrOutput() SubnetReferenceInvokeResponsePtrOutput
	ToSubnetReferenceInvokeResponsePtrOutputWithContext(context.Context) SubnetReferenceInvokeResponsePtrOutput
}

type subnetReferenceInvokeResponsePtrType SubnetReferenceInvokeResponseArgs

func SubnetReferenceInvokeResponsePtr(v *SubnetReferenceInvokeResponseArgs) SubnetReferenceInvokeResponsePtrInput {
	return (*subnetReferenceInvokeResponsePtrType)(v)
}

func (*subnetReferenceInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetReferenceInvokeResponse)(nil)).Elem()
}

func (i *subnetReferenceInvokeResponsePtrType) ToSubnetReferenceInvokeResponsePtrOutput() SubnetReferenceInvokeResponsePtrOutput {
	return i.ToSubnetReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *subnetReferenceInvokeResponsePtrType) ToSubnetReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) SubnetReferenceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetReferenceInvokeResponsePtrOutput)
}

// Defines reference to subnet.
type SubnetReferenceInvokeResponseOutput struct{ *pulumi.OutputState }

func (SubnetReferenceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetReferenceInvokeResponse)(nil)).Elem()
}

func (o SubnetReferenceInvokeResponseOutput) ToSubnetReferenceInvokeResponseOutput() SubnetReferenceInvokeResponseOutput {
	return o
}

func (o SubnetReferenceInvokeResponseOutput) ToSubnetReferenceInvokeResponseOutputWithContext(ctx context.Context) SubnetReferenceInvokeResponseOutput {
	return o
}

func (o SubnetReferenceInvokeResponseOutput) ToSubnetReferenceInvokeResponsePtrOutput() SubnetReferenceInvokeResponsePtrOutput {
	return o.ToSubnetReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SubnetReferenceInvokeResponseOutput) ToSubnetReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) SubnetReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v SubnetReferenceInvokeResponse) *SubnetReferenceInvokeResponse {
		return &v
	}).(SubnetReferenceInvokeResponsePtrOutput)
}

// Gets the name of the proxy resource on the target side.
func (o SubnetReferenceInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetReferenceInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o SubnetReferenceInvokeResponseOutput) SourceArmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetReferenceInvokeResponse) string { return v.SourceArmResourceId }).(pulumi.StringOutput)
}

type SubnetReferenceInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SubnetReferenceInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetReferenceInvokeResponse)(nil)).Elem()
}

func (o SubnetReferenceInvokeResponsePtrOutput) ToSubnetReferenceInvokeResponsePtrOutput() SubnetReferenceInvokeResponsePtrOutput {
	return o
}

func (o SubnetReferenceInvokeResponsePtrOutput) ToSubnetReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) SubnetReferenceInvokeResponsePtrOutput {
	return o
}

func (o SubnetReferenceInvokeResponsePtrOutput) Elem() SubnetReferenceInvokeResponseOutput {
	return o.ApplyT(func(v *SubnetReferenceInvokeResponse) SubnetReferenceInvokeResponse { return *v }).(SubnetReferenceInvokeResponseOutput)
}

// Gets the name of the proxy resource on the target side.
func (o SubnetReferenceInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetReferenceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o SubnetReferenceInvokeResponsePtrOutput) SourceArmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetReferenceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceArmResourceId
	}).(pulumi.StringPtrOutput)
}

// Defines reference to subnet.
type SubnetReferenceResponse struct {
	// Gets the name of the proxy resource on the target side.
	Name *string `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// SubnetReferenceResponseInput is an input type that accepts SubnetReferenceResponseArgs and SubnetReferenceResponseOutput values.
// You can construct a concrete instance of `SubnetReferenceResponseInput` via:
//
//          SubnetReferenceResponseArgs{...}
type SubnetReferenceResponseInput interface {
	pulumi.Input

	ToSubnetReferenceResponseOutput() SubnetReferenceResponseOutput
	ToSubnetReferenceResponseOutputWithContext(context.Context) SubnetReferenceResponseOutput
}

// Defines reference to subnet.
type SubnetReferenceResponseArgs struct {
	// Gets the name of the proxy resource on the target side.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId pulumi.StringInput `pulumi:"sourceArmResourceId"`
}

func (SubnetReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetReferenceResponse)(nil)).Elem()
}

func (i SubnetReferenceResponseArgs) ToSubnetReferenceResponseOutput() SubnetReferenceResponseOutput {
	return i.ToSubnetReferenceResponseOutputWithContext(context.Background())
}

func (i SubnetReferenceResponseArgs) ToSubnetReferenceResponseOutputWithContext(ctx context.Context) SubnetReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetReferenceResponseOutput)
}

func (i SubnetReferenceResponseArgs) ToSubnetReferenceResponsePtrOutput() SubnetReferenceResponsePtrOutput {
	return i.ToSubnetReferenceResponsePtrOutputWithContext(context.Background())
}

func (i SubnetReferenceResponseArgs) ToSubnetReferenceResponsePtrOutputWithContext(ctx context.Context) SubnetReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetReferenceResponseOutput).ToSubnetReferenceResponsePtrOutputWithContext(ctx)
}

// SubnetReferenceResponsePtrInput is an input type that accepts SubnetReferenceResponseArgs, SubnetReferenceResponsePtr and SubnetReferenceResponsePtrOutput values.
// You can construct a concrete instance of `SubnetReferenceResponsePtrInput` via:
//
//          SubnetReferenceResponseArgs{...}
//
//  or:
//
//          nil
type SubnetReferenceResponsePtrInput interface {
	pulumi.Input

	ToSubnetReferenceResponsePtrOutput() SubnetReferenceResponsePtrOutput
	ToSubnetReferenceResponsePtrOutputWithContext(context.Context) SubnetReferenceResponsePtrOutput
}

type subnetReferenceResponsePtrType SubnetReferenceResponseArgs

func SubnetReferenceResponsePtr(v *SubnetReferenceResponseArgs) SubnetReferenceResponsePtrInput {
	return (*subnetReferenceResponsePtrType)(v)
}

func (*subnetReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetReferenceResponse)(nil)).Elem()
}

func (i *subnetReferenceResponsePtrType) ToSubnetReferenceResponsePtrOutput() SubnetReferenceResponsePtrOutput {
	return i.ToSubnetReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *subnetReferenceResponsePtrType) ToSubnetReferenceResponsePtrOutputWithContext(ctx context.Context) SubnetReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetReferenceResponsePtrOutput)
}

// Defines reference to subnet.
type SubnetReferenceResponseOutput struct{ *pulumi.OutputState }

func (SubnetReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetReferenceResponse)(nil)).Elem()
}

func (o SubnetReferenceResponseOutput) ToSubnetReferenceResponseOutput() SubnetReferenceResponseOutput {
	return o
}

func (o SubnetReferenceResponseOutput) ToSubnetReferenceResponseOutputWithContext(ctx context.Context) SubnetReferenceResponseOutput {
	return o
}

func (o SubnetReferenceResponseOutput) ToSubnetReferenceResponsePtrOutput() SubnetReferenceResponsePtrOutput {
	return o.ToSubnetReferenceResponsePtrOutputWithContext(context.Background())
}

func (o SubnetReferenceResponseOutput) ToSubnetReferenceResponsePtrOutputWithContext(ctx context.Context) SubnetReferenceResponsePtrOutput {
	return o.ApplyT(func(v SubnetReferenceResponse) *SubnetReferenceResponse {
		return &v
	}).(SubnetReferenceResponsePtrOutput)
}

// Gets the name of the proxy resource on the target side.
func (o SubnetReferenceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetReferenceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o SubnetReferenceResponseOutput) SourceArmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetReferenceResponse) string { return v.SourceArmResourceId }).(pulumi.StringOutput)
}

type SubnetReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (SubnetReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetReferenceResponse)(nil)).Elem()
}

func (o SubnetReferenceResponsePtrOutput) ToSubnetReferenceResponsePtrOutput() SubnetReferenceResponsePtrOutput {
	return o
}

func (o SubnetReferenceResponsePtrOutput) ToSubnetReferenceResponsePtrOutputWithContext(ctx context.Context) SubnetReferenceResponsePtrOutput {
	return o
}

func (o SubnetReferenceResponsePtrOutput) Elem() SubnetReferenceResponseOutput {
	return o.ApplyT(func(v *SubnetReferenceResponse) SubnetReferenceResponse { return *v }).(SubnetReferenceResponseOutput)
}

// Gets the name of the proxy resource on the target side.
func (o SubnetReferenceResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o SubnetReferenceResponsePtrOutput) SourceArmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceArmResourceId
	}).(pulumi.StringPtrOutput)
}

// Defines the virtual network subnets resource settings.
type SubnetResourceSettings struct {
	// Gets or sets address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// Gets or sets the Subnet name.
	Name *string `pulumi:"name"`
	// Defines reference to NSG.
	NetworkSecurityGroup *NsgReference `pulumi:"networkSecurityGroup"`
}

// SubnetResourceSettingsInput is an input type that accepts SubnetResourceSettingsArgs and SubnetResourceSettingsOutput values.
// You can construct a concrete instance of `SubnetResourceSettingsInput` via:
//
//          SubnetResourceSettingsArgs{...}
type SubnetResourceSettingsInput interface {
	pulumi.Input

	ToSubnetResourceSettingsOutput() SubnetResourceSettingsOutput
	ToSubnetResourceSettingsOutputWithContext(context.Context) SubnetResourceSettingsOutput
}

// Defines the virtual network subnets resource settings.
type SubnetResourceSettingsArgs struct {
	// Gets or sets address prefix for the subnet.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// Gets or sets the Subnet name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Defines reference to NSG.
	NetworkSecurityGroup NsgReferencePtrInput `pulumi:"networkSecurityGroup"`
}

func (SubnetResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResourceSettings)(nil)).Elem()
}

func (i SubnetResourceSettingsArgs) ToSubnetResourceSettingsOutput() SubnetResourceSettingsOutput {
	return i.ToSubnetResourceSettingsOutputWithContext(context.Background())
}

func (i SubnetResourceSettingsArgs) ToSubnetResourceSettingsOutputWithContext(ctx context.Context) SubnetResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResourceSettingsOutput)
}

// SubnetResourceSettingsArrayInput is an input type that accepts SubnetResourceSettingsArray and SubnetResourceSettingsArrayOutput values.
// You can construct a concrete instance of `SubnetResourceSettingsArrayInput` via:
//
//          SubnetResourceSettingsArray{ SubnetResourceSettingsArgs{...} }
type SubnetResourceSettingsArrayInput interface {
	pulumi.Input

	ToSubnetResourceSettingsArrayOutput() SubnetResourceSettingsArrayOutput
	ToSubnetResourceSettingsArrayOutputWithContext(context.Context) SubnetResourceSettingsArrayOutput
}

type SubnetResourceSettingsArray []SubnetResourceSettingsInput

func (SubnetResourceSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResourceSettings)(nil)).Elem()
}

func (i SubnetResourceSettingsArray) ToSubnetResourceSettingsArrayOutput() SubnetResourceSettingsArrayOutput {
	return i.ToSubnetResourceSettingsArrayOutputWithContext(context.Background())
}

func (i SubnetResourceSettingsArray) ToSubnetResourceSettingsArrayOutputWithContext(ctx context.Context) SubnetResourceSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResourceSettingsArrayOutput)
}

// Defines the virtual network subnets resource settings.
type SubnetResourceSettingsOutput struct{ *pulumi.OutputState }

func (SubnetResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResourceSettings)(nil)).Elem()
}

func (o SubnetResourceSettingsOutput) ToSubnetResourceSettingsOutput() SubnetResourceSettingsOutput {
	return o
}

func (o SubnetResourceSettingsOutput) ToSubnetResourceSettingsOutputWithContext(ctx context.Context) SubnetResourceSettingsOutput {
	return o
}

// Gets or sets address prefix for the subnet.
func (o SubnetResourceSettingsOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResourceSettings) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets or sets the Subnet name.
func (o SubnetResourceSettingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResourceSettings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Defines reference to NSG.
func (o SubnetResourceSettingsOutput) NetworkSecurityGroup() NsgReferencePtrOutput {
	return o.ApplyT(func(v SubnetResourceSettings) *NsgReference { return v.NetworkSecurityGroup }).(NsgReferencePtrOutput)
}

type SubnetResourceSettingsArrayOutput struct{ *pulumi.OutputState }

func (SubnetResourceSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResourceSettings)(nil)).Elem()
}

func (o SubnetResourceSettingsArrayOutput) ToSubnetResourceSettingsArrayOutput() SubnetResourceSettingsArrayOutput {
	return o
}

func (o SubnetResourceSettingsArrayOutput) ToSubnetResourceSettingsArrayOutputWithContext(ctx context.Context) SubnetResourceSettingsArrayOutput {
	return o
}

func (o SubnetResourceSettingsArrayOutput) Index(i pulumi.IntInput) SubnetResourceSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetResourceSettings {
		return vs[0].([]SubnetResourceSettings)[vs[1].(int)]
	}).(SubnetResourceSettingsOutput)
}

// Defines the virtual network subnets resource settings.
type SubnetResourceSettingsInvokeResponse struct {
	// Gets or sets address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// Gets or sets the Subnet name.
	Name *string `pulumi:"name"`
	// Defines reference to NSG.
	NetworkSecurityGroup *NsgReferenceInvokeResponse `pulumi:"networkSecurityGroup"`
}

// SubnetResourceSettingsInvokeResponseInput is an input type that accepts SubnetResourceSettingsInvokeResponseArgs and SubnetResourceSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `SubnetResourceSettingsInvokeResponseInput` via:
//
//          SubnetResourceSettingsInvokeResponseArgs{...}
type SubnetResourceSettingsInvokeResponseInput interface {
	pulumi.Input

	ToSubnetResourceSettingsInvokeResponseOutput() SubnetResourceSettingsInvokeResponseOutput
	ToSubnetResourceSettingsInvokeResponseOutputWithContext(context.Context) SubnetResourceSettingsInvokeResponseOutput
}

// Defines the virtual network subnets resource settings.
type SubnetResourceSettingsInvokeResponseArgs struct {
	// Gets or sets address prefix for the subnet.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// Gets or sets the Subnet name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Defines reference to NSG.
	NetworkSecurityGroup NsgReferenceInvokeResponsePtrInput `pulumi:"networkSecurityGroup"`
}

func (SubnetResourceSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i SubnetResourceSettingsInvokeResponseArgs) ToSubnetResourceSettingsInvokeResponseOutput() SubnetResourceSettingsInvokeResponseOutput {
	return i.ToSubnetResourceSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i SubnetResourceSettingsInvokeResponseArgs) ToSubnetResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) SubnetResourceSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResourceSettingsInvokeResponseOutput)
}

// SubnetResourceSettingsInvokeResponseArrayInput is an input type that accepts SubnetResourceSettingsInvokeResponseArray and SubnetResourceSettingsInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SubnetResourceSettingsInvokeResponseArrayInput` via:
//
//          SubnetResourceSettingsInvokeResponseArray{ SubnetResourceSettingsInvokeResponseArgs{...} }
type SubnetResourceSettingsInvokeResponseArrayInput interface {
	pulumi.Input

	ToSubnetResourceSettingsInvokeResponseArrayOutput() SubnetResourceSettingsInvokeResponseArrayOutput
	ToSubnetResourceSettingsInvokeResponseArrayOutputWithContext(context.Context) SubnetResourceSettingsInvokeResponseArrayOutput
}

type SubnetResourceSettingsInvokeResponseArray []SubnetResourceSettingsInvokeResponseInput

func (SubnetResourceSettingsInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i SubnetResourceSettingsInvokeResponseArray) ToSubnetResourceSettingsInvokeResponseArrayOutput() SubnetResourceSettingsInvokeResponseArrayOutput {
	return i.ToSubnetResourceSettingsInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SubnetResourceSettingsInvokeResponseArray) ToSubnetResourceSettingsInvokeResponseArrayOutputWithContext(ctx context.Context) SubnetResourceSettingsInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResourceSettingsInvokeResponseArrayOutput)
}

// Defines the virtual network subnets resource settings.
type SubnetResourceSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (SubnetResourceSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o SubnetResourceSettingsInvokeResponseOutput) ToSubnetResourceSettingsInvokeResponseOutput() SubnetResourceSettingsInvokeResponseOutput {
	return o
}

func (o SubnetResourceSettingsInvokeResponseOutput) ToSubnetResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) SubnetResourceSettingsInvokeResponseOutput {
	return o
}

// Gets or sets address prefix for the subnet.
func (o SubnetResourceSettingsInvokeResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResourceSettingsInvokeResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets or sets the Subnet name.
func (o SubnetResourceSettingsInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResourceSettingsInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Defines reference to NSG.
func (o SubnetResourceSettingsInvokeResponseOutput) NetworkSecurityGroup() NsgReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v SubnetResourceSettingsInvokeResponse) *NsgReferenceInvokeResponse {
		return v.NetworkSecurityGroup
	}).(NsgReferenceInvokeResponsePtrOutput)
}

type SubnetResourceSettingsInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetResourceSettingsInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o SubnetResourceSettingsInvokeResponseArrayOutput) ToSubnetResourceSettingsInvokeResponseArrayOutput() SubnetResourceSettingsInvokeResponseArrayOutput {
	return o
}

func (o SubnetResourceSettingsInvokeResponseArrayOutput) ToSubnetResourceSettingsInvokeResponseArrayOutputWithContext(ctx context.Context) SubnetResourceSettingsInvokeResponseArrayOutput {
	return o
}

func (o SubnetResourceSettingsInvokeResponseArrayOutput) Index(i pulumi.IntInput) SubnetResourceSettingsInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetResourceSettingsInvokeResponse {
		return vs[0].([]SubnetResourceSettingsInvokeResponse)[vs[1].(int)]
	}).(SubnetResourceSettingsInvokeResponseOutput)
}

// Defines the virtual network subnets resource settings.
type SubnetResourceSettingsResponse struct {
	// Gets or sets address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// Gets or sets the Subnet name.
	Name *string `pulumi:"name"`
	// Defines reference to NSG.
	NetworkSecurityGroup *NsgReferenceResponse `pulumi:"networkSecurityGroup"`
}

// SubnetResourceSettingsResponseInput is an input type that accepts SubnetResourceSettingsResponseArgs and SubnetResourceSettingsResponseOutput values.
// You can construct a concrete instance of `SubnetResourceSettingsResponseInput` via:
//
//          SubnetResourceSettingsResponseArgs{...}
type SubnetResourceSettingsResponseInput interface {
	pulumi.Input

	ToSubnetResourceSettingsResponseOutput() SubnetResourceSettingsResponseOutput
	ToSubnetResourceSettingsResponseOutputWithContext(context.Context) SubnetResourceSettingsResponseOutput
}

// Defines the virtual network subnets resource settings.
type SubnetResourceSettingsResponseArgs struct {
	// Gets or sets address prefix for the subnet.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// Gets or sets the Subnet name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Defines reference to NSG.
	NetworkSecurityGroup NsgReferenceResponsePtrInput `pulumi:"networkSecurityGroup"`
}

func (SubnetResourceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResourceSettingsResponse)(nil)).Elem()
}

func (i SubnetResourceSettingsResponseArgs) ToSubnetResourceSettingsResponseOutput() SubnetResourceSettingsResponseOutput {
	return i.ToSubnetResourceSettingsResponseOutputWithContext(context.Background())
}

func (i SubnetResourceSettingsResponseArgs) ToSubnetResourceSettingsResponseOutputWithContext(ctx context.Context) SubnetResourceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResourceSettingsResponseOutput)
}

// SubnetResourceSettingsResponseArrayInput is an input type that accepts SubnetResourceSettingsResponseArray and SubnetResourceSettingsResponseArrayOutput values.
// You can construct a concrete instance of `SubnetResourceSettingsResponseArrayInput` via:
//
//          SubnetResourceSettingsResponseArray{ SubnetResourceSettingsResponseArgs{...} }
type SubnetResourceSettingsResponseArrayInput interface {
	pulumi.Input

	ToSubnetResourceSettingsResponseArrayOutput() SubnetResourceSettingsResponseArrayOutput
	ToSubnetResourceSettingsResponseArrayOutputWithContext(context.Context) SubnetResourceSettingsResponseArrayOutput
}

type SubnetResourceSettingsResponseArray []SubnetResourceSettingsResponseInput

func (SubnetResourceSettingsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResourceSettingsResponse)(nil)).Elem()
}

func (i SubnetResourceSettingsResponseArray) ToSubnetResourceSettingsResponseArrayOutput() SubnetResourceSettingsResponseArrayOutput {
	return i.ToSubnetResourceSettingsResponseArrayOutputWithContext(context.Background())
}

func (i SubnetResourceSettingsResponseArray) ToSubnetResourceSettingsResponseArrayOutputWithContext(ctx context.Context) SubnetResourceSettingsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResourceSettingsResponseArrayOutput)
}

// Defines the virtual network subnets resource settings.
type SubnetResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (SubnetResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResourceSettingsResponse)(nil)).Elem()
}

func (o SubnetResourceSettingsResponseOutput) ToSubnetResourceSettingsResponseOutput() SubnetResourceSettingsResponseOutput {
	return o
}

func (o SubnetResourceSettingsResponseOutput) ToSubnetResourceSettingsResponseOutputWithContext(ctx context.Context) SubnetResourceSettingsResponseOutput {
	return o
}

// Gets or sets address prefix for the subnet.
func (o SubnetResourceSettingsResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResourceSettingsResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets or sets the Subnet name.
func (o SubnetResourceSettingsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResourceSettingsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Defines reference to NSG.
func (o SubnetResourceSettingsResponseOutput) NetworkSecurityGroup() NsgReferenceResponsePtrOutput {
	return o.ApplyT(func(v SubnetResourceSettingsResponse) *NsgReferenceResponse { return v.NetworkSecurityGroup }).(NsgReferenceResponsePtrOutput)
}

type SubnetResourceSettingsResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetResourceSettingsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResourceSettingsResponse)(nil)).Elem()
}

func (o SubnetResourceSettingsResponseArrayOutput) ToSubnetResourceSettingsResponseArrayOutput() SubnetResourceSettingsResponseArrayOutput {
	return o
}

func (o SubnetResourceSettingsResponseArrayOutput) ToSubnetResourceSettingsResponseArrayOutputWithContext(ctx context.Context) SubnetResourceSettingsResponseArrayOutput {
	return o
}

func (o SubnetResourceSettingsResponseArrayOutput) Index(i pulumi.IntInput) SubnetResourceSettingsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetResourceSettingsResponse {
		return vs[0].([]SubnetResourceSettingsResponse)[vs[1].(int)]
	}).(SubnetResourceSettingsResponseOutput)
}

// Gets or sets the virtual machine resource settings.
type VirtualMachineResourceSettings struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target availability set id for virtual machines not in an availability set at source.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// Gets or sets the target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets the target virtual machine size.
	TargetVmSize *string `pulumi:"targetVmSize"`
}

// VirtualMachineResourceSettingsInput is an input type that accepts VirtualMachineResourceSettingsArgs and VirtualMachineResourceSettingsOutput values.
// You can construct a concrete instance of `VirtualMachineResourceSettingsInput` via:
//
//          VirtualMachineResourceSettingsArgs{...}
type VirtualMachineResourceSettingsInput interface {
	pulumi.Input

	ToVirtualMachineResourceSettingsOutput() VirtualMachineResourceSettingsOutput
	ToVirtualMachineResourceSettingsOutputWithContext(context.Context) VirtualMachineResourceSettingsOutput
}

// Gets or sets the virtual machine resource settings.
type VirtualMachineResourceSettingsArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target availability set id for virtual machines not in an availability set at source.
	TargetAvailabilitySetId pulumi.StringPtrInput `pulumi:"targetAvailabilitySetId"`
	// Gets or sets the target availability zone.
	TargetAvailabilityZone pulumi.StringPtrInput `pulumi:"targetAvailabilityZone"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Gets or sets the target virtual machine size.
	TargetVmSize pulumi.StringPtrInput `pulumi:"targetVmSize"`
}

func (VirtualMachineResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResourceSettings)(nil)).Elem()
}

func (i VirtualMachineResourceSettingsArgs) ToVirtualMachineResourceSettingsOutput() VirtualMachineResourceSettingsOutput {
	return i.ToVirtualMachineResourceSettingsOutputWithContext(context.Background())
}

func (i VirtualMachineResourceSettingsArgs) ToVirtualMachineResourceSettingsOutputWithContext(ctx context.Context) VirtualMachineResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineResourceSettingsOutput)
}

// Gets or sets the virtual machine resource settings.
type VirtualMachineResourceSettingsOutput struct{ *pulumi.OutputState }

func (VirtualMachineResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResourceSettings)(nil)).Elem()
}

func (o VirtualMachineResourceSettingsOutput) ToVirtualMachineResourceSettingsOutput() VirtualMachineResourceSettingsOutput {
	return o
}

func (o VirtualMachineResourceSettingsOutput) ToVirtualMachineResourceSettingsOutputWithContext(ctx context.Context) VirtualMachineResourceSettingsOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Compute/virtualMachines'.
func (o VirtualMachineResourceSettingsOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettings) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target availability set id for virtual machines not in an availability set at source.
func (o VirtualMachineResourceSettingsOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettings) *string { return v.TargetAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// Gets or sets the target availability zone.
func (o VirtualMachineResourceSettingsOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettings) *string { return v.TargetAvailabilityZone }).(pulumi.StringPtrOutput)
}

// Gets or sets the target Resource name.
func (o VirtualMachineResourceSettingsOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettings) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Gets or sets the target virtual machine size.
func (o VirtualMachineResourceSettingsOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettings) *string { return v.TargetVmSize }).(pulumi.StringPtrOutput)
}

// Gets or sets the virtual machine resource settings.
type VirtualMachineResourceSettingsInvokeResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target availability set id for virtual machines not in an availability set at source.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// Gets or sets the target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets the target virtual machine size.
	TargetVmSize *string `pulumi:"targetVmSize"`
}

// VirtualMachineResourceSettingsInvokeResponseInput is an input type that accepts VirtualMachineResourceSettingsInvokeResponseArgs and VirtualMachineResourceSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineResourceSettingsInvokeResponseInput` via:
//
//          VirtualMachineResourceSettingsInvokeResponseArgs{...}
type VirtualMachineResourceSettingsInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineResourceSettingsInvokeResponseOutput() VirtualMachineResourceSettingsInvokeResponseOutput
	ToVirtualMachineResourceSettingsInvokeResponseOutputWithContext(context.Context) VirtualMachineResourceSettingsInvokeResponseOutput
}

// Gets or sets the virtual machine resource settings.
type VirtualMachineResourceSettingsInvokeResponseArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target availability set id for virtual machines not in an availability set at source.
	TargetAvailabilitySetId pulumi.StringPtrInput `pulumi:"targetAvailabilitySetId"`
	// Gets or sets the target availability zone.
	TargetAvailabilityZone pulumi.StringPtrInput `pulumi:"targetAvailabilityZone"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Gets or sets the target virtual machine size.
	TargetVmSize pulumi.StringPtrInput `pulumi:"targetVmSize"`
}

func (VirtualMachineResourceSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineResourceSettingsInvokeResponseArgs) ToVirtualMachineResourceSettingsInvokeResponseOutput() VirtualMachineResourceSettingsInvokeResponseOutput {
	return i.ToVirtualMachineResourceSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineResourceSettingsInvokeResponseArgs) ToVirtualMachineResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineResourceSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineResourceSettingsInvokeResponseOutput)
}

// Gets or sets the virtual machine resource settings.
type VirtualMachineResourceSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineResourceSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineResourceSettingsInvokeResponseOutput) ToVirtualMachineResourceSettingsInvokeResponseOutput() VirtualMachineResourceSettingsInvokeResponseOutput {
	return o
}

func (o VirtualMachineResourceSettingsInvokeResponseOutput) ToVirtualMachineResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineResourceSettingsInvokeResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Compute/virtualMachines'.
func (o VirtualMachineResourceSettingsInvokeResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettingsInvokeResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target availability set id for virtual machines not in an availability set at source.
func (o VirtualMachineResourceSettingsInvokeResponseOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettingsInvokeResponse) *string { return v.TargetAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// Gets or sets the target availability zone.
func (o VirtualMachineResourceSettingsInvokeResponseOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettingsInvokeResponse) *string { return v.TargetAvailabilityZone }).(pulumi.StringPtrOutput)
}

// Gets or sets the target Resource name.
func (o VirtualMachineResourceSettingsInvokeResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettingsInvokeResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Gets or sets the target virtual machine size.
func (o VirtualMachineResourceSettingsInvokeResponseOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettingsInvokeResponse) *string { return v.TargetVmSize }).(pulumi.StringPtrOutput)
}

// Gets or sets the virtual machine resource settings.
type VirtualMachineResourceSettingsResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target availability set id for virtual machines not in an availability set at source.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// Gets or sets the target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets the target virtual machine size.
	TargetVmSize *string `pulumi:"targetVmSize"`
}

// VirtualMachineResourceSettingsResponseInput is an input type that accepts VirtualMachineResourceSettingsResponseArgs and VirtualMachineResourceSettingsResponseOutput values.
// You can construct a concrete instance of `VirtualMachineResourceSettingsResponseInput` via:
//
//          VirtualMachineResourceSettingsResponseArgs{...}
type VirtualMachineResourceSettingsResponseInput interface {
	pulumi.Input

	ToVirtualMachineResourceSettingsResponseOutput() VirtualMachineResourceSettingsResponseOutput
	ToVirtualMachineResourceSettingsResponseOutputWithContext(context.Context) VirtualMachineResourceSettingsResponseOutput
}

// Gets or sets the virtual machine resource settings.
type VirtualMachineResourceSettingsResponseArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target availability set id for virtual machines not in an availability set at source.
	TargetAvailabilitySetId pulumi.StringPtrInput `pulumi:"targetAvailabilitySetId"`
	// Gets or sets the target availability zone.
	TargetAvailabilityZone pulumi.StringPtrInput `pulumi:"targetAvailabilityZone"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Gets or sets the target virtual machine size.
	TargetVmSize pulumi.StringPtrInput `pulumi:"targetVmSize"`
}

func (VirtualMachineResourceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResourceSettingsResponse)(nil)).Elem()
}

func (i VirtualMachineResourceSettingsResponseArgs) ToVirtualMachineResourceSettingsResponseOutput() VirtualMachineResourceSettingsResponseOutput {
	return i.ToVirtualMachineResourceSettingsResponseOutputWithContext(context.Background())
}

func (i VirtualMachineResourceSettingsResponseArgs) ToVirtualMachineResourceSettingsResponseOutputWithContext(ctx context.Context) VirtualMachineResourceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineResourceSettingsResponseOutput)
}

// Gets or sets the virtual machine resource settings.
type VirtualMachineResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResourceSettingsResponse)(nil)).Elem()
}

func (o VirtualMachineResourceSettingsResponseOutput) ToVirtualMachineResourceSettingsResponseOutput() VirtualMachineResourceSettingsResponseOutput {
	return o
}

func (o VirtualMachineResourceSettingsResponseOutput) ToVirtualMachineResourceSettingsResponseOutputWithContext(ctx context.Context) VirtualMachineResourceSettingsResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Compute/virtualMachines'.
func (o VirtualMachineResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target availability set id for virtual machines not in an availability set at source.
func (o VirtualMachineResourceSettingsResponseOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettingsResponse) *string { return v.TargetAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// Gets or sets the target availability zone.
func (o VirtualMachineResourceSettingsResponseOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettingsResponse) *string { return v.TargetAvailabilityZone }).(pulumi.StringPtrOutput)
}

// Gets or sets the target Resource name.
func (o VirtualMachineResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Gets or sets the target virtual machine size.
func (o VirtualMachineResourceSettingsResponseOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettingsResponse) *string { return v.TargetVmSize }).(pulumi.StringPtrOutput)
}

// Defines the virtual network resource settings.
type VirtualNetworkResourceSettings struct {
	// Gets or sets the address prefixes for the virtual network.
	AddressSpace []string `pulumi:"addressSpace"`
	// Gets or sets DHCPOptions that contains an array of DNS servers available to VMs
	// deployed in the virtual network.
	DnsServers []string `pulumi:"dnsServers"`
	// Gets or sets a value indicating whether gets or sets whether the
	// DDOS protection should be switched on.
	EnableDdosProtection *bool `pulumi:"enableDdosProtection"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/virtualNetworks'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets List of subnets in a VirtualNetwork.
	Subnets []SubnetResourceSettings `pulumi:"subnets"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// VirtualNetworkResourceSettingsInput is an input type that accepts VirtualNetworkResourceSettingsArgs and VirtualNetworkResourceSettingsOutput values.
// You can construct a concrete instance of `VirtualNetworkResourceSettingsInput` via:
//
//          VirtualNetworkResourceSettingsArgs{...}
type VirtualNetworkResourceSettingsInput interface {
	pulumi.Input

	ToVirtualNetworkResourceSettingsOutput() VirtualNetworkResourceSettingsOutput
	ToVirtualNetworkResourceSettingsOutputWithContext(context.Context) VirtualNetworkResourceSettingsOutput
}

// Defines the virtual network resource settings.
type VirtualNetworkResourceSettingsArgs struct {
	// Gets or sets the address prefixes for the virtual network.
	AddressSpace pulumi.StringArrayInput `pulumi:"addressSpace"`
	// Gets or sets DHCPOptions that contains an array of DNS servers available to VMs
	// deployed in the virtual network.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Gets or sets a value indicating whether gets or sets whether the
	// DDOS protection should be switched on.
	EnableDdosProtection pulumi.BoolPtrInput `pulumi:"enableDdosProtection"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/virtualNetworks'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets List of subnets in a VirtualNetwork.
	Subnets SubnetResourceSettingsArrayInput `pulumi:"subnets"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (VirtualNetworkResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkResourceSettings)(nil)).Elem()
}

func (i VirtualNetworkResourceSettingsArgs) ToVirtualNetworkResourceSettingsOutput() VirtualNetworkResourceSettingsOutput {
	return i.ToVirtualNetworkResourceSettingsOutputWithContext(context.Background())
}

func (i VirtualNetworkResourceSettingsArgs) ToVirtualNetworkResourceSettingsOutputWithContext(ctx context.Context) VirtualNetworkResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkResourceSettingsOutput)
}

// Defines the virtual network resource settings.
type VirtualNetworkResourceSettingsOutput struct{ *pulumi.OutputState }

func (VirtualNetworkResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkResourceSettings)(nil)).Elem()
}

func (o VirtualNetworkResourceSettingsOutput) ToVirtualNetworkResourceSettingsOutput() VirtualNetworkResourceSettingsOutput {
	return o
}

func (o VirtualNetworkResourceSettingsOutput) ToVirtualNetworkResourceSettingsOutputWithContext(ctx context.Context) VirtualNetworkResourceSettingsOutput {
	return o
}

// Gets or sets the address prefixes for the virtual network.
func (o VirtualNetworkResourceSettingsOutput) AddressSpace() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettings) []string { return v.AddressSpace }).(pulumi.StringArrayOutput)
}

// Gets or sets DHCPOptions that contains an array of DNS servers available to VMs
// deployed in the virtual network.
func (o VirtualNetworkResourceSettingsOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettings) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Gets or sets a value indicating whether gets or sets whether the
// DDOS protection should be switched on.
func (o VirtualNetworkResourceSettingsOutput) EnableDdosProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettings) *bool { return v.EnableDdosProtection }).(pulumi.BoolPtrOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Network/virtualNetworks'.
func (o VirtualNetworkResourceSettingsOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettings) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets List of subnets in a VirtualNetwork.
func (o VirtualNetworkResourceSettingsOutput) Subnets() SubnetResourceSettingsArrayOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettings) []SubnetResourceSettings { return v.Subnets }).(SubnetResourceSettingsArrayOutput)
}

// Gets or sets the target Resource name.
func (o VirtualNetworkResourceSettingsOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettings) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the virtual network resource settings.
type VirtualNetworkResourceSettingsInvokeResponse struct {
	// Gets or sets the address prefixes for the virtual network.
	AddressSpace []string `pulumi:"addressSpace"`
	// Gets or sets DHCPOptions that contains an array of DNS servers available to VMs
	// deployed in the virtual network.
	DnsServers []string `pulumi:"dnsServers"`
	// Gets or sets a value indicating whether gets or sets whether the
	// DDOS protection should be switched on.
	EnableDdosProtection *bool `pulumi:"enableDdosProtection"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/virtualNetworks'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets List of subnets in a VirtualNetwork.
	Subnets []SubnetResourceSettingsInvokeResponse `pulumi:"subnets"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// VirtualNetworkResourceSettingsInvokeResponseInput is an input type that accepts VirtualNetworkResourceSettingsInvokeResponseArgs and VirtualNetworkResourceSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkResourceSettingsInvokeResponseInput` via:
//
//          VirtualNetworkResourceSettingsInvokeResponseArgs{...}
type VirtualNetworkResourceSettingsInvokeResponseInput interface {
	pulumi.Input

	ToVirtualNetworkResourceSettingsInvokeResponseOutput() VirtualNetworkResourceSettingsInvokeResponseOutput
	ToVirtualNetworkResourceSettingsInvokeResponseOutputWithContext(context.Context) VirtualNetworkResourceSettingsInvokeResponseOutput
}

// Defines the virtual network resource settings.
type VirtualNetworkResourceSettingsInvokeResponseArgs struct {
	// Gets or sets the address prefixes for the virtual network.
	AddressSpace pulumi.StringArrayInput `pulumi:"addressSpace"`
	// Gets or sets DHCPOptions that contains an array of DNS servers available to VMs
	// deployed in the virtual network.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Gets or sets a value indicating whether gets or sets whether the
	// DDOS protection should be switched on.
	EnableDdosProtection pulumi.BoolPtrInput `pulumi:"enableDdosProtection"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/virtualNetworks'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets List of subnets in a VirtualNetwork.
	Subnets SubnetResourceSettingsInvokeResponseArrayInput `pulumi:"subnets"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (VirtualNetworkResourceSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkResourceSettingsInvokeResponse)(nil)).Elem()
}

func (i VirtualNetworkResourceSettingsInvokeResponseArgs) ToVirtualNetworkResourceSettingsInvokeResponseOutput() VirtualNetworkResourceSettingsInvokeResponseOutput {
	return i.ToVirtualNetworkResourceSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkResourceSettingsInvokeResponseArgs) ToVirtualNetworkResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) VirtualNetworkResourceSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkResourceSettingsInvokeResponseOutput)
}

// Defines the virtual network resource settings.
type VirtualNetworkResourceSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkResourceSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkResourceSettingsInvokeResponse)(nil)).Elem()
}

func (o VirtualNetworkResourceSettingsInvokeResponseOutput) ToVirtualNetworkResourceSettingsInvokeResponseOutput() VirtualNetworkResourceSettingsInvokeResponseOutput {
	return o
}

func (o VirtualNetworkResourceSettingsInvokeResponseOutput) ToVirtualNetworkResourceSettingsInvokeResponseOutputWithContext(ctx context.Context) VirtualNetworkResourceSettingsInvokeResponseOutput {
	return o
}

// Gets or sets the address prefixes for the virtual network.
func (o VirtualNetworkResourceSettingsInvokeResponseOutput) AddressSpace() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettingsInvokeResponse) []string { return v.AddressSpace }).(pulumi.StringArrayOutput)
}

// Gets or sets DHCPOptions that contains an array of DNS servers available to VMs
// deployed in the virtual network.
func (o VirtualNetworkResourceSettingsInvokeResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettingsInvokeResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Gets or sets a value indicating whether gets or sets whether the
// DDOS protection should be switched on.
func (o VirtualNetworkResourceSettingsInvokeResponseOutput) EnableDdosProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettingsInvokeResponse) *bool { return v.EnableDdosProtection }).(pulumi.BoolPtrOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Network/virtualNetworks'.
func (o VirtualNetworkResourceSettingsInvokeResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettingsInvokeResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets List of subnets in a VirtualNetwork.
func (o VirtualNetworkResourceSettingsInvokeResponseOutput) Subnets() SubnetResourceSettingsInvokeResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettingsInvokeResponse) []SubnetResourceSettingsInvokeResponse {
		return v.Subnets
	}).(SubnetResourceSettingsInvokeResponseArrayOutput)
}

// Gets or sets the target Resource name.
func (o VirtualNetworkResourceSettingsInvokeResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettingsInvokeResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the virtual network resource settings.
type VirtualNetworkResourceSettingsResponse struct {
	// Gets or sets the address prefixes for the virtual network.
	AddressSpace []string `pulumi:"addressSpace"`
	// Gets or sets DHCPOptions that contains an array of DNS servers available to VMs
	// deployed in the virtual network.
	DnsServers []string `pulumi:"dnsServers"`
	// Gets or sets a value indicating whether gets or sets whether the
	// DDOS protection should be switched on.
	EnableDdosProtection *bool `pulumi:"enableDdosProtection"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/virtualNetworks'.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets List of subnets in a VirtualNetwork.
	Subnets []SubnetResourceSettingsResponse `pulumi:"subnets"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// VirtualNetworkResourceSettingsResponseInput is an input type that accepts VirtualNetworkResourceSettingsResponseArgs and VirtualNetworkResourceSettingsResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkResourceSettingsResponseInput` via:
//
//          VirtualNetworkResourceSettingsResponseArgs{...}
type VirtualNetworkResourceSettingsResponseInput interface {
	pulumi.Input

	ToVirtualNetworkResourceSettingsResponseOutput() VirtualNetworkResourceSettingsResponseOutput
	ToVirtualNetworkResourceSettingsResponseOutputWithContext(context.Context) VirtualNetworkResourceSettingsResponseOutput
}

// Defines the virtual network resource settings.
type VirtualNetworkResourceSettingsResponseArgs struct {
	// Gets or sets the address prefixes for the virtual network.
	AddressSpace pulumi.StringArrayInput `pulumi:"addressSpace"`
	// Gets or sets DHCPOptions that contains an array of DNS servers available to VMs
	// deployed in the virtual network.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Gets or sets a value indicating whether gets or sets whether the
	// DDOS protection should be switched on.
	EnableDdosProtection pulumi.BoolPtrInput `pulumi:"enableDdosProtection"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	// Expected value is 'Microsoft.Network/virtualNetworks'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets List of subnets in a VirtualNetwork.
	Subnets SubnetResourceSettingsResponseArrayInput `pulumi:"subnets"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (VirtualNetworkResourceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkResourceSettingsResponse)(nil)).Elem()
}

func (i VirtualNetworkResourceSettingsResponseArgs) ToVirtualNetworkResourceSettingsResponseOutput() VirtualNetworkResourceSettingsResponseOutput {
	return i.ToVirtualNetworkResourceSettingsResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkResourceSettingsResponseArgs) ToVirtualNetworkResourceSettingsResponseOutputWithContext(ctx context.Context) VirtualNetworkResourceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkResourceSettingsResponseOutput)
}

// Defines the virtual network resource settings.
type VirtualNetworkResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkResourceSettingsResponse)(nil)).Elem()
}

func (o VirtualNetworkResourceSettingsResponseOutput) ToVirtualNetworkResourceSettingsResponseOutput() VirtualNetworkResourceSettingsResponseOutput {
	return o
}

func (o VirtualNetworkResourceSettingsResponseOutput) ToVirtualNetworkResourceSettingsResponseOutputWithContext(ctx context.Context) VirtualNetworkResourceSettingsResponseOutput {
	return o
}

// Gets or sets the address prefixes for the virtual network.
func (o VirtualNetworkResourceSettingsResponseOutput) AddressSpace() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettingsResponse) []string { return v.AddressSpace }).(pulumi.StringArrayOutput)
}

// Gets or sets DHCPOptions that contains an array of DNS servers available to VMs
// deployed in the virtual network.
func (o VirtualNetworkResourceSettingsResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettingsResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Gets or sets a value indicating whether gets or sets whether the
// DDOS protection should be switched on.
func (o VirtualNetworkResourceSettingsResponseOutput) EnableDdosProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettingsResponse) *bool { return v.EnableDdosProtection }).(pulumi.BoolPtrOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
// Expected value is 'Microsoft.Network/virtualNetworks'.
func (o VirtualNetworkResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets List of subnets in a VirtualNetwork.
func (o VirtualNetworkResourceSettingsResponseOutput) Subnets() SubnetResourceSettingsResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettingsResponse) []SubnetResourceSettingsResponse { return v.Subnets }).(SubnetResourceSettingsResponseArrayOutput)
}

// Gets or sets the target Resource name.
func (o VirtualNetworkResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AutomaticResolutionPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(AutomaticResolutionPropertiesInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(AutomaticResolutionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AutomaticResolutionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AvailabilitySetResourceSettingsOutput{})
	pulumi.RegisterOutputType(AvailabilitySetResourceSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(AvailabilitySetResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSetResourceSettingsOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSetResourceSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSetResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityInvokeResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(JobStatusInvokeResponseOutput{})
	pulumi.RegisterOutputType(JobStatusInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(JobStatusResponseOutput{})
	pulumi.RegisterOutputType(JobStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultResourceSettingsOutput{})
	pulumi.RegisterOutputType(KeyVaultResourceSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(LBBackendAddressPoolResourceSettingsOutput{})
	pulumi.RegisterOutputType(LBBackendAddressPoolResourceSettingsArrayOutput{})
	pulumi.RegisterOutputType(LBBackendAddressPoolResourceSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(LBBackendAddressPoolResourceSettingsInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(LBBackendAddressPoolResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(LBBackendAddressPoolResourceSettingsResponseArrayOutput{})
	pulumi.RegisterOutputType(LBFrontendIPConfigurationResourceSettingsOutput{})
	pulumi.RegisterOutputType(LBFrontendIPConfigurationResourceSettingsArrayOutput{})
	pulumi.RegisterOutputType(LBFrontendIPConfigurationResourceSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(LBFrontendIPConfigurationResourceSettingsInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(LBFrontendIPConfigurationResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(LBFrontendIPConfigurationResourceSettingsResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressPoolReferenceOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressPoolReferenceArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressPoolReferenceInvokeResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressPoolReferenceInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressPoolReferenceResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressPoolReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerNatRuleReferenceOutput{})
	pulumi.RegisterOutputType(LoadBalancerNatRuleReferenceArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerNatRuleReferenceInvokeResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerNatRuleReferenceInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerNatRuleReferenceResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerNatRuleReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerResourceSettingsOutput{})
	pulumi.RegisterOutputType(LoadBalancerResourceSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(ManualResolutionPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ManualResolutionPropertiesInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ManualResolutionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManualResolutionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(MoveCollectionPropertiesOutput{})
	pulumi.RegisterOutputType(MoveCollectionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(MoveCollectionPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(MoveCollectionPropertiesInvokeResponseErrorsOutput{})
	pulumi.RegisterOutputType(MoveCollectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MoveCollectionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(MoveCollectionPropertiesResponseErrorsOutput{})
	pulumi.RegisterOutputType(MoveCollectionPropertiesResponseErrorsPtrOutput{})
	pulumi.RegisterOutputType(MoveResourceDependencyInvokeResponseOutput{})
	pulumi.RegisterOutputType(MoveResourceDependencyInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(MoveResourceDependencyOverrideOutput{})
	pulumi.RegisterOutputType(MoveResourceDependencyOverrideArrayOutput{})
	pulumi.RegisterOutputType(MoveResourceDependencyOverrideInvokeResponseOutput{})
	pulumi.RegisterOutputType(MoveResourceDependencyOverrideInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(MoveResourceDependencyOverrideResponseOutput{})
	pulumi.RegisterOutputType(MoveResourceDependencyOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(MoveResourceDependencyResponseOutput{})
	pulumi.RegisterOutputType(MoveResourceDependencyResponseArrayOutput{})
	pulumi.RegisterOutputType(MoveResourceErrorBodyInvokeResponseOutput{})
	pulumi.RegisterOutputType(MoveResourceErrorBodyInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(MoveResourceErrorBodyInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(MoveResourceErrorBodyResponseOutput{})
	pulumi.RegisterOutputType(MoveResourceErrorBodyResponsePtrOutput{})
	pulumi.RegisterOutputType(MoveResourceErrorBodyResponseArrayOutput{})
	pulumi.RegisterOutputType(MoveResourceErrorInvokeResponseOutput{})
	pulumi.RegisterOutputType(MoveResourceErrorInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(MoveResourceErrorResponseOutput{})
	pulumi.RegisterOutputType(MoveResourceErrorResponsePtrOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesInvokeResponseErrorsOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesInvokeResponseMoveStatusOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesResponseErrorsOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesResponseErrorsPtrOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesResponseMoveStatusOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesResponseMoveStatusPtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResourceSettingsOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResourceSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResourceSettingsOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResourceSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(NicIpConfigurationResourceSettingsOutput{})
	pulumi.RegisterOutputType(NicIpConfigurationResourceSettingsArrayOutput{})
	pulumi.RegisterOutputType(NicIpConfigurationResourceSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(NicIpConfigurationResourceSettingsInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(NicIpConfigurationResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(NicIpConfigurationResourceSettingsResponseArrayOutput{})
	pulumi.RegisterOutputType(NsgReferenceOutput{})
	pulumi.RegisterOutputType(NsgReferencePtrOutput{})
	pulumi.RegisterOutputType(NsgReferenceInvokeResponseOutput{})
	pulumi.RegisterOutputType(NsgReferenceInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(NsgReferenceResponseOutput{})
	pulumi.RegisterOutputType(NsgReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(NsgSecurityRuleOutput{})
	pulumi.RegisterOutputType(NsgSecurityRuleArrayOutput{})
	pulumi.RegisterOutputType(NsgSecurityRuleInvokeResponseOutput{})
	pulumi.RegisterOutputType(NsgSecurityRuleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(NsgSecurityRuleResponseOutput{})
	pulumi.RegisterOutputType(NsgSecurityRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResourceSettingsOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResourceSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(PublicIpReferenceOutput{})
	pulumi.RegisterOutputType(PublicIpReferencePtrOutput{})
	pulumi.RegisterOutputType(PublicIpReferenceInvokeResponseOutput{})
	pulumi.RegisterOutputType(PublicIpReferenceInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIpReferenceResponseOutput{})
	pulumi.RegisterOutputType(PublicIpReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceSettingsOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(SqlDatabaseResourceSettingsOutput{})
	pulumi.RegisterOutputType(SqlDatabaseResourceSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(SqlDatabaseResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(SqlElasticPoolResourceSettingsOutput{})
	pulumi.RegisterOutputType(SqlElasticPoolResourceSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(SqlElasticPoolResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(SqlServerResourceSettingsOutput{})
	pulumi.RegisterOutputType(SqlServerResourceSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(SqlServerResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(SubnetReferenceOutput{})
	pulumi.RegisterOutputType(SubnetReferencePtrOutput{})
	pulumi.RegisterOutputType(SubnetReferenceInvokeResponseOutput{})
	pulumi.RegisterOutputType(SubnetReferenceInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SubnetReferenceResponseOutput{})
	pulumi.RegisterOutputType(SubnetReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(SubnetResourceSettingsOutput{})
	pulumi.RegisterOutputType(SubnetResourceSettingsArrayOutput{})
	pulumi.RegisterOutputType(SubnetResourceSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(SubnetResourceSettingsInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SubnetResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(SubnetResourceSettingsResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineResourceSettingsOutput{})
	pulumi.RegisterOutputType(VirtualMachineResourceSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkResourceSettingsOutput{})
	pulumi.RegisterOutputType(VirtualNetworkResourceSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkResourceSettingsResponseOutput{})
}
