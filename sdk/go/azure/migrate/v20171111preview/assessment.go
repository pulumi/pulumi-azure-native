// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20171111preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An assessment created for a group in the Migration project.
type Assessment struct {
	pulumi.CustomResourceState

	// AHUB discount on windows virtual machines.
	AzureHybridUseBenefit pulumi.StringOutput `pulumi:"azureHybridUseBenefit"`
	// Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
	AzureLocation pulumi.StringOutput `pulumi:"azureLocation"`
	// Offer code according to which cost estimation is done.
	AzureOfferCode pulumi.StringOutput `pulumi:"azureOfferCode"`
	// Pricing tier for Size evaluation.
	AzurePricingTier pulumi.StringOutput `pulumi:"azurePricingTier"`
	// Storage Redundancy type offered by Azure.
	AzureStorageRedundancy pulumi.StringOutput `pulumi:"azureStorageRedundancy"`
	// Time when this project was created. Date-Time represented in ISO-8601 format.
	CreatedTimestamp pulumi.StringOutput `pulumi:"createdTimestamp"`
	// Currency to report prices in.
	Currency pulumi.StringOutput `pulumi:"currency"`
	// Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
	DiscountPercentage pulumi.Float64Output `pulumi:"discountPercentage"`
	// For optimistic concurrency control.
	ETag pulumi.StringPtrOutput `pulumi:"eTag"`
	// Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
	MonthlyBandwidthCost pulumi.Float64Output `pulumi:"monthlyBandwidthCost"`
	// Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
	MonthlyComputeCost pulumi.Float64Output `pulumi:"monthlyComputeCost"`
	// Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
	MonthlyStorageCost pulumi.Float64Output `pulumi:"monthlyStorageCost"`
	// Unique name of an assessment.
	Name pulumi.StringOutput `pulumi:"name"`
	// Number of assessed machines part of this assessment.
	NumberOfMachines pulumi.IntOutput `pulumi:"numberOfMachines"`
	// Percentile of performance data used to recommend Azure size.
	Percentile pulumi.StringOutput `pulumi:"percentile"`
	// Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format.
	PricesTimestamp pulumi.StringOutput `pulumi:"pricesTimestamp"`
	// Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
	ScalingFactor pulumi.Float64Output `pulumi:"scalingFactor"`
	// User configurable setting that describes the status of the assessment.
	Stage pulumi.StringOutput `pulumi:"stage"`
	// Whether the assessment has been created and is valid.
	Status pulumi.StringOutput `pulumi:"status"`
	// Time range of performance data used to recommend a size.
	TimeRange pulumi.StringOutput `pulumi:"timeRange"`
	// Type of the object = [Microsoft.Migrate/projects/groups/assessments].
	Type pulumi.StringOutput `pulumi:"type"`
	// Time when this project was last updated. Date-Time represented in ISO-8601 format.
	UpdatedTimestamp pulumi.StringOutput `pulumi:"updatedTimestamp"`
}

// NewAssessment registers a new resource with the given unique name, arguments, and options.
func NewAssessment(ctx *pulumi.Context,
	name string, args *AssessmentArgs, opts ...pulumi.ResourceOption) (*Assessment, error) {
	if args == nil || args.AssessmentName == nil {
		return nil, errors.New("missing required argument 'AssessmentName'")
	}
	if args == nil || args.AzureHybridUseBenefit == nil {
		return nil, errors.New("missing required argument 'AzureHybridUseBenefit'")
	}
	if args == nil || args.AzureLocation == nil {
		return nil, errors.New("missing required argument 'AzureLocation'")
	}
	if args == nil || args.AzureOfferCode == nil {
		return nil, errors.New("missing required argument 'AzureOfferCode'")
	}
	if args == nil || args.AzurePricingTier == nil {
		return nil, errors.New("missing required argument 'AzurePricingTier'")
	}
	if args == nil || args.AzureStorageRedundancy == nil {
		return nil, errors.New("missing required argument 'AzureStorageRedundancy'")
	}
	if args == nil || args.Currency == nil {
		return nil, errors.New("missing required argument 'Currency'")
	}
	if args == nil || args.DiscountPercentage == nil {
		return nil, errors.New("missing required argument 'DiscountPercentage'")
	}
	if args == nil || args.GroupName == nil {
		return nil, errors.New("missing required argument 'GroupName'")
	}
	if args == nil || args.Percentile == nil {
		return nil, errors.New("missing required argument 'Percentile'")
	}
	if args == nil || args.ProjectName == nil {
		return nil, errors.New("missing required argument 'ProjectName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.ScalingFactor == nil {
		return nil, errors.New("missing required argument 'ScalingFactor'")
	}
	if args == nil || args.Stage == nil {
		return nil, errors.New("missing required argument 'Stage'")
	}
	if args == nil || args.TimeRange == nil {
		return nil, errors.New("missing required argument 'TimeRange'")
	}
	if args == nil {
		args = &AssessmentArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:migrate/v20180202:Assessment"),
		},
	})
	opts = append(opts, aliases)
	var resource Assessment
	err := ctx.RegisterResource("azure-nextgen:migrate/v20171111preview:Assessment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssessment gets an existing Assessment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssessment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssessmentState, opts ...pulumi.ResourceOption) (*Assessment, error) {
	var resource Assessment
	err := ctx.ReadResource("azure-nextgen:migrate/v20171111preview:Assessment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Assessment resources.
type assessmentState struct {
	// AHUB discount on windows virtual machines.
	AzureHybridUseBenefit *string `pulumi:"azureHybridUseBenefit"`
	// Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
	AzureLocation *string `pulumi:"azureLocation"`
	// Offer code according to which cost estimation is done.
	AzureOfferCode *string `pulumi:"azureOfferCode"`
	// Pricing tier for Size evaluation.
	AzurePricingTier *string `pulumi:"azurePricingTier"`
	// Storage Redundancy type offered by Azure.
	AzureStorageRedundancy *string `pulumi:"azureStorageRedundancy"`
	// Time when this project was created. Date-Time represented in ISO-8601 format.
	CreatedTimestamp *string `pulumi:"createdTimestamp"`
	// Currency to report prices in.
	Currency *string `pulumi:"currency"`
	// Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
	DiscountPercentage *float64 `pulumi:"discountPercentage"`
	// For optimistic concurrency control.
	ETag *string `pulumi:"eTag"`
	// Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
	MonthlyBandwidthCost *float64 `pulumi:"monthlyBandwidthCost"`
	// Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
	MonthlyComputeCost *float64 `pulumi:"monthlyComputeCost"`
	// Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
	MonthlyStorageCost *float64 `pulumi:"monthlyStorageCost"`
	// Unique name of an assessment.
	Name *string `pulumi:"name"`
	// Number of assessed machines part of this assessment.
	NumberOfMachines *int `pulumi:"numberOfMachines"`
	// Percentile of performance data used to recommend Azure size.
	Percentile *string `pulumi:"percentile"`
	// Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format.
	PricesTimestamp *string `pulumi:"pricesTimestamp"`
	// Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
	ScalingFactor *float64 `pulumi:"scalingFactor"`
	// User configurable setting that describes the status of the assessment.
	Stage *string `pulumi:"stage"`
	// Whether the assessment has been created and is valid.
	Status *string `pulumi:"status"`
	// Time range of performance data used to recommend a size.
	TimeRange *string `pulumi:"timeRange"`
	// Type of the object = [Microsoft.Migrate/projects/groups/assessments].
	Type *string `pulumi:"type"`
	// Time when this project was last updated. Date-Time represented in ISO-8601 format.
	UpdatedTimestamp *string `pulumi:"updatedTimestamp"`
}

type AssessmentState struct {
	// AHUB discount on windows virtual machines.
	AzureHybridUseBenefit pulumi.StringPtrInput
	// Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
	AzureLocation pulumi.StringPtrInput
	// Offer code according to which cost estimation is done.
	AzureOfferCode pulumi.StringPtrInput
	// Pricing tier for Size evaluation.
	AzurePricingTier pulumi.StringPtrInput
	// Storage Redundancy type offered by Azure.
	AzureStorageRedundancy pulumi.StringPtrInput
	// Time when this project was created. Date-Time represented in ISO-8601 format.
	CreatedTimestamp pulumi.StringPtrInput
	// Currency to report prices in.
	Currency pulumi.StringPtrInput
	// Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
	DiscountPercentage pulumi.Float64PtrInput
	// For optimistic concurrency control.
	ETag pulumi.StringPtrInput
	// Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
	MonthlyBandwidthCost pulumi.Float64PtrInput
	// Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
	MonthlyComputeCost pulumi.Float64PtrInput
	// Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
	MonthlyStorageCost pulumi.Float64PtrInput
	// Unique name of an assessment.
	Name pulumi.StringPtrInput
	// Number of assessed machines part of this assessment.
	NumberOfMachines pulumi.IntPtrInput
	// Percentile of performance data used to recommend Azure size.
	Percentile pulumi.StringPtrInput
	// Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format.
	PricesTimestamp pulumi.StringPtrInput
	// Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
	ScalingFactor pulumi.Float64PtrInput
	// User configurable setting that describes the status of the assessment.
	Stage pulumi.StringPtrInput
	// Whether the assessment has been created and is valid.
	Status pulumi.StringPtrInput
	// Time range of performance data used to recommend a size.
	TimeRange pulumi.StringPtrInput
	// Type of the object = [Microsoft.Migrate/projects/groups/assessments].
	Type pulumi.StringPtrInput
	// Time when this project was last updated. Date-Time represented in ISO-8601 format.
	UpdatedTimestamp pulumi.StringPtrInput
}

func (AssessmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentState)(nil)).Elem()
}

type assessmentArgs struct {
	// Unique name of an assessment within a project.
	AssessmentName string `pulumi:"assessmentName"`
	// AHUB discount on windows virtual machines.
	AzureHybridUseBenefit string `pulumi:"azureHybridUseBenefit"`
	// Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
	AzureLocation string `pulumi:"azureLocation"`
	// Offer code according to which cost estimation is done.
	AzureOfferCode string `pulumi:"azureOfferCode"`
	// Pricing tier for Size evaluation.
	AzurePricingTier string `pulumi:"azurePricingTier"`
	// Storage Redundancy type offered by Azure.
	AzureStorageRedundancy string `pulumi:"azureStorageRedundancy"`
	// Currency to report prices in.
	Currency string `pulumi:"currency"`
	// Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
	DiscountPercentage float64 `pulumi:"discountPercentage"`
	// For optimistic concurrency control.
	ETag *string `pulumi:"eTag"`
	// Unique name of a group within a project.
	GroupName string `pulumi:"groupName"`
	// Percentile of performance data used to recommend Azure size.
	Percentile string `pulumi:"percentile"`
	// Name of the Azure Migrate project.
	ProjectName string `pulumi:"projectName"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
	ScalingFactor float64 `pulumi:"scalingFactor"`
	// User configurable setting that describes the status of the assessment.
	Stage string `pulumi:"stage"`
	// Time range of performance data used to recommend a size.
	TimeRange string `pulumi:"timeRange"`
}

// The set of arguments for constructing a Assessment resource.
type AssessmentArgs struct {
	// Unique name of an assessment within a project.
	AssessmentName pulumi.StringInput
	// AHUB discount on windows virtual machines.
	AzureHybridUseBenefit pulumi.StringInput
	// Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
	AzureLocation pulumi.StringInput
	// Offer code according to which cost estimation is done.
	AzureOfferCode pulumi.StringInput
	// Pricing tier for Size evaluation.
	AzurePricingTier pulumi.StringInput
	// Storage Redundancy type offered by Azure.
	AzureStorageRedundancy pulumi.StringInput
	// Currency to report prices in.
	Currency pulumi.StringInput
	// Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
	DiscountPercentage pulumi.Float64Input
	// For optimistic concurrency control.
	ETag pulumi.StringPtrInput
	// Unique name of a group within a project.
	GroupName pulumi.StringInput
	// Percentile of performance data used to recommend Azure size.
	Percentile pulumi.StringInput
	// Name of the Azure Migrate project.
	ProjectName pulumi.StringInput
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName pulumi.StringInput
	// Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
	ScalingFactor pulumi.Float64Input
	// User configurable setting that describes the status of the assessment.
	Stage pulumi.StringInput
	// Time range of performance data used to recommend a size.
	TimeRange pulumi.StringInput
}

func (AssessmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentArgs)(nil)).Elem()
}
