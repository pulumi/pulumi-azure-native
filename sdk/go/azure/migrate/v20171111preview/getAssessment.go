// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20171111preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An assessment created for a group in the Migration project.
//
// Deprecated: Version 2017-11-11-preview will be removed in v2 of the provider.
func LookupAssessment(ctx *pulumi.Context, args *LookupAssessmentArgs, opts ...pulumi.InvokeOption) (*LookupAssessmentResult, error) {
	var rv LookupAssessmentResult
	err := ctx.Invoke("azure-native:migrate/v20171111preview:getAssessment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAssessmentArgs struct {
	// Unique name of an assessment within a project.
	AssessmentName string `pulumi:"assessmentName"`
	// Unique name of a group within a project.
	GroupName string `pulumi:"groupName"`
	// Name of the Azure Migrate project.
	ProjectName string `pulumi:"projectName"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// An assessment created for a group in the Migration project.
type LookupAssessmentResult struct {
	// AHUB discount on windows virtual machines.
	AzureHybridUseBenefit string `pulumi:"azureHybridUseBenefit"`
	// Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
	AzureLocation string `pulumi:"azureLocation"`
	// Offer code according to which cost estimation is done.
	AzureOfferCode string `pulumi:"azureOfferCode"`
	// Pricing tier for Size evaluation.
	AzurePricingTier string `pulumi:"azurePricingTier"`
	// Storage Redundancy type offered by Azure.
	AzureStorageRedundancy string `pulumi:"azureStorageRedundancy"`
	// Time when this project was created. Date-Time represented in ISO-8601 format.
	CreatedTimestamp string `pulumi:"createdTimestamp"`
	// Currency to report prices in.
	Currency string `pulumi:"currency"`
	// Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
	DiscountPercentage float64 `pulumi:"discountPercentage"`
	// For optimistic concurrency control.
	ETag *string `pulumi:"eTag"`
	// Path reference to this assessment. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/projects/{projectName}/groups/{groupName}/assessment/{assessmentName}
	Id string `pulumi:"id"`
	// Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
	MonthlyBandwidthCost float64 `pulumi:"monthlyBandwidthCost"`
	// Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
	MonthlyComputeCost float64 `pulumi:"monthlyComputeCost"`
	// Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
	MonthlyStorageCost float64 `pulumi:"monthlyStorageCost"`
	// Unique name of an assessment.
	Name string `pulumi:"name"`
	// Number of assessed machines part of this assessment.
	NumberOfMachines int `pulumi:"numberOfMachines"`
	// Percentile of performance data used to recommend Azure size.
	Percentile string `pulumi:"percentile"`
	// Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format.
	PricesTimestamp string `pulumi:"pricesTimestamp"`
	// Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
	ScalingFactor float64 `pulumi:"scalingFactor"`
	// User configurable setting that describes the status of the assessment.
	Stage string `pulumi:"stage"`
	// Whether the assessment has been created and is valid.
	Status string `pulumi:"status"`
	// Time range of performance data used to recommend a size.
	TimeRange string `pulumi:"timeRange"`
	// Type of the object = [Microsoft.Migrate/projects/groups/assessments].
	Type string `pulumi:"type"`
	// Time when this project was last updated. Date-Time represented in ISO-8601 format.
	UpdatedTimestamp string `pulumi:"updatedTimestamp"`
}

func LookupAssessmentOutput(ctx *pulumi.Context, args LookupAssessmentOutputArgs, opts ...pulumi.InvokeOption) LookupAssessmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAssessmentResult, error) {
			args := v.(LookupAssessmentArgs)
			r, err := LookupAssessment(ctx, &args, opts...)
			var s LookupAssessmentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAssessmentResultOutput)
}

type LookupAssessmentOutputArgs struct {
	// Unique name of an assessment within a project.
	AssessmentName pulumi.StringInput `pulumi:"assessmentName"`
	// Unique name of a group within a project.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// Name of the Azure Migrate project.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAssessmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssessmentArgs)(nil)).Elem()
}

// An assessment created for a group in the Migration project.
type LookupAssessmentResultOutput struct{ *pulumi.OutputState }

func (LookupAssessmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssessmentResult)(nil)).Elem()
}

func (o LookupAssessmentResultOutput) ToLookupAssessmentResultOutput() LookupAssessmentResultOutput {
	return o
}

func (o LookupAssessmentResultOutput) ToLookupAssessmentResultOutputWithContext(ctx context.Context) LookupAssessmentResultOutput {
	return o
}

// AHUB discount on windows virtual machines.
func (o LookupAssessmentResultOutput) AzureHybridUseBenefit() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentResult) string { return v.AzureHybridUseBenefit }).(pulumi.StringOutput)
}

// Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
func (o LookupAssessmentResultOutput) AzureLocation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentResult) string { return v.AzureLocation }).(pulumi.StringOutput)
}

// Offer code according to which cost estimation is done.
func (o LookupAssessmentResultOutput) AzureOfferCode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentResult) string { return v.AzureOfferCode }).(pulumi.StringOutput)
}

// Pricing tier for Size evaluation.
func (o LookupAssessmentResultOutput) AzurePricingTier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentResult) string { return v.AzurePricingTier }).(pulumi.StringOutput)
}

// Storage Redundancy type offered by Azure.
func (o LookupAssessmentResultOutput) AzureStorageRedundancy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentResult) string { return v.AzureStorageRedundancy }).(pulumi.StringOutput)
}

// Time when this project was created. Date-Time represented in ISO-8601 format.
func (o LookupAssessmentResultOutput) CreatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentResult) string { return v.CreatedTimestamp }).(pulumi.StringOutput)
}

// Currency to report prices in.
func (o LookupAssessmentResultOutput) Currency() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentResult) string { return v.Currency }).(pulumi.StringOutput)
}

// Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
func (o LookupAssessmentResultOutput) DiscountPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v LookupAssessmentResult) float64 { return v.DiscountPercentage }).(pulumi.Float64Output)
}

// For optimistic concurrency control.
func (o LookupAssessmentResultOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssessmentResult) *string { return v.ETag }).(pulumi.StringPtrOutput)
}

// Path reference to this assessment. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/projects/{projectName}/groups/{groupName}/assessment/{assessmentName}
func (o LookupAssessmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentResult) string { return v.Id }).(pulumi.StringOutput)
}

// Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
func (o LookupAssessmentResultOutput) MonthlyBandwidthCost() pulumi.Float64Output {
	return o.ApplyT(func(v LookupAssessmentResult) float64 { return v.MonthlyBandwidthCost }).(pulumi.Float64Output)
}

// Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
func (o LookupAssessmentResultOutput) MonthlyComputeCost() pulumi.Float64Output {
	return o.ApplyT(func(v LookupAssessmentResult) float64 { return v.MonthlyComputeCost }).(pulumi.Float64Output)
}

// Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
func (o LookupAssessmentResultOutput) MonthlyStorageCost() pulumi.Float64Output {
	return o.ApplyT(func(v LookupAssessmentResult) float64 { return v.MonthlyStorageCost }).(pulumi.Float64Output)
}

// Unique name of an assessment.
func (o LookupAssessmentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentResult) string { return v.Name }).(pulumi.StringOutput)
}

// Number of assessed machines part of this assessment.
func (o LookupAssessmentResultOutput) NumberOfMachines() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAssessmentResult) int { return v.NumberOfMachines }).(pulumi.IntOutput)
}

// Percentile of performance data used to recommend Azure size.
func (o LookupAssessmentResultOutput) Percentile() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentResult) string { return v.Percentile }).(pulumi.StringOutput)
}

// Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format.
func (o LookupAssessmentResultOutput) PricesTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentResult) string { return v.PricesTimestamp }).(pulumi.StringOutput)
}

// Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
func (o LookupAssessmentResultOutput) ScalingFactor() pulumi.Float64Output {
	return o.ApplyT(func(v LookupAssessmentResult) float64 { return v.ScalingFactor }).(pulumi.Float64Output)
}

// User configurable setting that describes the status of the assessment.
func (o LookupAssessmentResultOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentResult) string { return v.Stage }).(pulumi.StringOutput)
}

// Whether the assessment has been created and is valid.
func (o LookupAssessmentResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentResult) string { return v.Status }).(pulumi.StringOutput)
}

// Time range of performance data used to recommend a size.
func (o LookupAssessmentResultOutput) TimeRange() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentResult) string { return v.TimeRange }).(pulumi.StringOutput)
}

// Type of the object = [Microsoft.Migrate/projects/groups/assessments].
func (o LookupAssessmentResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentResult) string { return v.Type }).(pulumi.StringOutput)
}

// Time when this project was last updated. Date-Time represented in ISO-8601 format.
func (o LookupAssessmentResultOutput) UpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssessmentResult) string { return v.UpdatedTimestamp }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAssessmentResultOutput{})
}
