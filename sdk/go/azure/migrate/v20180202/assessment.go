// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180202

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An assessment created for a group in the Migration project.
type Assessment struct {
	pulumi.CustomResourceState

	// AHUB discount on windows virtual machines.
	AzureHybridUseBenefit pulumi.StringOutput `pulumi:"azureHybridUseBenefit"`
	// Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
	AzureLocation pulumi.StringOutput `pulumi:"azureLocation"`
	// Offer code according to which cost estimation is done.
	AzureOfferCode pulumi.StringOutput `pulumi:"azureOfferCode"`
	// Pricing tier for Size evaluation.
	AzurePricingTier pulumi.StringOutput `pulumi:"azurePricingTier"`
	// Storage Redundancy type offered by Azure.
	AzureStorageRedundancy pulumi.StringOutput `pulumi:"azureStorageRedundancy"`
	// Confidence rating percentage for assessment. Can be in the range [0, 100].
	ConfidenceRatingInPercentage pulumi.Float64Output `pulumi:"confidenceRatingInPercentage"`
	// Time when this project was created. Date-Time represented in ISO-8601 format.
	CreatedTimestamp pulumi.StringOutput `pulumi:"createdTimestamp"`
	// Currency to report prices in.
	Currency pulumi.StringOutput `pulumi:"currency"`
	// Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
	DiscountPercentage pulumi.Float64Output `pulumi:"discountPercentage"`
	// For optimistic concurrency control.
	ETag pulumi.StringPtrOutput `pulumi:"eTag"`
	// Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
	MonthlyBandwidthCost pulumi.Float64Output `pulumi:"monthlyBandwidthCost"`
	// Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
	MonthlyComputeCost pulumi.Float64Output `pulumi:"monthlyComputeCost"`
	// Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
	MonthlyStorageCost pulumi.Float64Output `pulumi:"monthlyStorageCost"`
	// Unique name of an assessment.
	Name pulumi.StringOutput `pulumi:"name"`
	// Number of assessed machines part of this assessment.
	NumberOfMachines pulumi.IntOutput `pulumi:"numberOfMachines"`
	// Percentile of performance data used to recommend Azure size.
	Percentile pulumi.StringOutput `pulumi:"percentile"`
	// Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format.
	PricesTimestamp pulumi.StringOutput `pulumi:"pricesTimestamp"`
	// Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
	ScalingFactor pulumi.Float64Output `pulumi:"scalingFactor"`
	// Assessment sizing criterion.
	SizingCriterion pulumi.StringOutput `pulumi:"sizingCriterion"`
	// User configurable setting that describes the status of the assessment.
	Stage pulumi.StringOutput `pulumi:"stage"`
	// Whether the assessment has been created and is valid.
	Status pulumi.StringOutput `pulumi:"status"`
	// Time range of performance data used to recommend a size.
	TimeRange pulumi.StringOutput `pulumi:"timeRange"`
	// Type of the object = [Microsoft.Migrate/projects/groups/assessments].
	Type pulumi.StringOutput `pulumi:"type"`
	// Time when this project was last updated. Date-Time represented in ISO-8601 format.
	UpdatedTimestamp pulumi.StringOutput `pulumi:"updatedTimestamp"`
}

// NewAssessment registers a new resource with the given unique name, arguments, and options.
func NewAssessment(ctx *pulumi.Context,
	name string, args *AssessmentArgs, opts ...pulumi.ResourceOption) (*Assessment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AzureHybridUseBenefit == nil {
		return nil, errors.New("invalid value for required argument 'AzureHybridUseBenefit'")
	}
	if args.AzureLocation == nil {
		return nil, errors.New("invalid value for required argument 'AzureLocation'")
	}
	if args.AzureOfferCode == nil {
		return nil, errors.New("invalid value for required argument 'AzureOfferCode'")
	}
	if args.AzurePricingTier == nil {
		return nil, errors.New("invalid value for required argument 'AzurePricingTier'")
	}
	if args.AzureStorageRedundancy == nil {
		return nil, errors.New("invalid value for required argument 'AzureStorageRedundancy'")
	}
	if args.Currency == nil {
		return nil, errors.New("invalid value for required argument 'Currency'")
	}
	if args.DiscountPercentage == nil {
		return nil, errors.New("invalid value for required argument 'DiscountPercentage'")
	}
	if args.GroupName == nil {
		return nil, errors.New("invalid value for required argument 'GroupName'")
	}
	if args.Percentile == nil {
		return nil, errors.New("invalid value for required argument 'Percentile'")
	}
	if args.ProjectName == nil {
		return nil, errors.New("invalid value for required argument 'ProjectName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ScalingFactor == nil {
		return nil, errors.New("invalid value for required argument 'ScalingFactor'")
	}
	if args.SizingCriterion == nil {
		return nil, errors.New("invalid value for required argument 'SizingCriterion'")
	}
	if args.Stage == nil {
		return nil, errors.New("invalid value for required argument 'Stage'")
	}
	if args.TimeRange == nil {
		return nil, errors.New("invalid value for required argument 'TimeRange'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:migrate/v20171111preview:Assessment"),
		},
	})
	opts = append(opts, aliases)
	var resource Assessment
	err := ctx.RegisterResource("azure-native:migrate/v20180202:Assessment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssessment gets an existing Assessment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssessment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssessmentState, opts ...pulumi.ResourceOption) (*Assessment, error) {
	var resource Assessment
	err := ctx.ReadResource("azure-native:migrate/v20180202:Assessment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Assessment resources.
type assessmentState struct {
}

type AssessmentState struct {
}

func (AssessmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentState)(nil)).Elem()
}

type assessmentArgs struct {
	// Unique name of an assessment within a project.
	AssessmentName *string `pulumi:"assessmentName"`
	// AHUB discount on windows virtual machines.
	AzureHybridUseBenefit string `pulumi:"azureHybridUseBenefit"`
	// Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
	AzureLocation string `pulumi:"azureLocation"`
	// Offer code according to which cost estimation is done.
	AzureOfferCode string `pulumi:"azureOfferCode"`
	// Pricing tier for Size evaluation.
	AzurePricingTier string `pulumi:"azurePricingTier"`
	// Storage Redundancy type offered by Azure.
	AzureStorageRedundancy string `pulumi:"azureStorageRedundancy"`
	// Currency to report prices in.
	Currency string `pulumi:"currency"`
	// Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
	DiscountPercentage float64 `pulumi:"discountPercentage"`
	// For optimistic concurrency control.
	ETag *string `pulumi:"eTag"`
	// Unique name of a group within a project.
	GroupName string `pulumi:"groupName"`
	// Percentile of performance data used to recommend Azure size.
	Percentile string `pulumi:"percentile"`
	// Name of the Azure Migrate project.
	ProjectName string `pulumi:"projectName"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
	ScalingFactor float64 `pulumi:"scalingFactor"`
	// Assessment sizing criterion.
	SizingCriterion string `pulumi:"sizingCriterion"`
	// User configurable setting that describes the status of the assessment.
	Stage string `pulumi:"stage"`
	// Time range of performance data used to recommend a size.
	TimeRange string `pulumi:"timeRange"`
}

// The set of arguments for constructing a Assessment resource.
type AssessmentArgs struct {
	// Unique name of an assessment within a project.
	AssessmentName pulumi.StringPtrInput
	// AHUB discount on windows virtual machines.
	AzureHybridUseBenefit pulumi.StringInput
	// Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
	AzureLocation pulumi.StringInput
	// Offer code according to which cost estimation is done.
	AzureOfferCode pulumi.StringInput
	// Pricing tier for Size evaluation.
	AzurePricingTier pulumi.StringInput
	// Storage Redundancy type offered by Azure.
	AzureStorageRedundancy pulumi.StringInput
	// Currency to report prices in.
	Currency pulumi.StringInput
	// Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
	DiscountPercentage pulumi.Float64Input
	// For optimistic concurrency control.
	ETag pulumi.StringPtrInput
	// Unique name of a group within a project.
	GroupName pulumi.StringInput
	// Percentile of performance data used to recommend Azure size.
	Percentile pulumi.StringInput
	// Name of the Azure Migrate project.
	ProjectName pulumi.StringInput
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName pulumi.StringInput
	// Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
	ScalingFactor pulumi.Float64Input
	// Assessment sizing criterion.
	SizingCriterion pulumi.StringInput
	// User configurable setting that describes the status of the assessment.
	Stage pulumi.StringInput
	// Time range of performance data used to recommend a size.
	TimeRange pulumi.StringInput
}

func (AssessmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentArgs)(nil)).Elem()
}

type AssessmentInput interface {
	pulumi.Input

	ToAssessmentOutput() AssessmentOutput
	ToAssessmentOutputWithContext(ctx context.Context) AssessmentOutput
}

func (*Assessment) ElementType() reflect.Type {
	return reflect.TypeOf((**Assessment)(nil)).Elem()
}

func (i *Assessment) ToAssessmentOutput() AssessmentOutput {
	return i.ToAssessmentOutputWithContext(context.Background())
}

func (i *Assessment) ToAssessmentOutputWithContext(ctx context.Context) AssessmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssessmentOutput)
}

type AssessmentOutput struct{ *pulumi.OutputState }

func (AssessmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Assessment)(nil)).Elem()
}

func (o AssessmentOutput) ToAssessmentOutput() AssessmentOutput {
	return o
}

func (o AssessmentOutput) ToAssessmentOutputWithContext(ctx context.Context) AssessmentOutput {
	return o
}

// AHUB discount on windows virtual machines.
func (o AssessmentOutput) AzureHybridUseBenefit() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.AzureHybridUseBenefit }).(pulumi.StringOutput)
}

// Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
func (o AssessmentOutput) AzureLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.AzureLocation }).(pulumi.StringOutput)
}

// Offer code according to which cost estimation is done.
func (o AssessmentOutput) AzureOfferCode() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.AzureOfferCode }).(pulumi.StringOutput)
}

// Pricing tier for Size evaluation.
func (o AssessmentOutput) AzurePricingTier() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.AzurePricingTier }).(pulumi.StringOutput)
}

// Storage Redundancy type offered by Azure.
func (o AssessmentOutput) AzureStorageRedundancy() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.AzureStorageRedundancy }).(pulumi.StringOutput)
}

// Confidence rating percentage for assessment. Can be in the range [0, 100].
func (o AssessmentOutput) ConfidenceRatingInPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v *Assessment) pulumi.Float64Output { return v.ConfidenceRatingInPercentage }).(pulumi.Float64Output)
}

// Time when this project was created. Date-Time represented in ISO-8601 format.
func (o AssessmentOutput) CreatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.CreatedTimestamp }).(pulumi.StringOutput)
}

// Currency to report prices in.
func (o AssessmentOutput) Currency() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.Currency }).(pulumi.StringOutput)
}

// Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
func (o AssessmentOutput) DiscountPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v *Assessment) pulumi.Float64Output { return v.DiscountPercentage }).(pulumi.Float64Output)
}

// For optimistic concurrency control.
func (o AssessmentOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringPtrOutput { return v.ETag }).(pulumi.StringPtrOutput)
}

// Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
func (o AssessmentOutput) MonthlyBandwidthCost() pulumi.Float64Output {
	return o.ApplyT(func(v *Assessment) pulumi.Float64Output { return v.MonthlyBandwidthCost }).(pulumi.Float64Output)
}

// Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
func (o AssessmentOutput) MonthlyComputeCost() pulumi.Float64Output {
	return o.ApplyT(func(v *Assessment) pulumi.Float64Output { return v.MonthlyComputeCost }).(pulumi.Float64Output)
}

// Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
func (o AssessmentOutput) MonthlyStorageCost() pulumi.Float64Output {
	return o.ApplyT(func(v *Assessment) pulumi.Float64Output { return v.MonthlyStorageCost }).(pulumi.Float64Output)
}

// Unique name of an assessment.
func (o AssessmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Number of assessed machines part of this assessment.
func (o AssessmentOutput) NumberOfMachines() pulumi.IntOutput {
	return o.ApplyT(func(v *Assessment) pulumi.IntOutput { return v.NumberOfMachines }).(pulumi.IntOutput)
}

// Percentile of performance data used to recommend Azure size.
func (o AssessmentOutput) Percentile() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.Percentile }).(pulumi.StringOutput)
}

// Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format.
func (o AssessmentOutput) PricesTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.PricesTimestamp }).(pulumi.StringOutput)
}

// Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
func (o AssessmentOutput) ScalingFactor() pulumi.Float64Output {
	return o.ApplyT(func(v *Assessment) pulumi.Float64Output { return v.ScalingFactor }).(pulumi.Float64Output)
}

// Assessment sizing criterion.
func (o AssessmentOutput) SizingCriterion() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.SizingCriterion }).(pulumi.StringOutput)
}

// User configurable setting that describes the status of the assessment.
func (o AssessmentOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.Stage }).(pulumi.StringOutput)
}

// Whether the assessment has been created and is valid.
func (o AssessmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Time range of performance data used to recommend a size.
func (o AssessmentOutput) TimeRange() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.TimeRange }).(pulumi.StringOutput)
}

// Type of the object = [Microsoft.Migrate/projects/groups/assessments].
func (o AssessmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Time when this project was last updated. Date-Time represented in ISO-8601 format.
func (o AssessmentOutput) UpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *Assessment) pulumi.StringOutput { return v.UpdatedTimestamp }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AssessmentOutput{})
}
