// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180202

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Assessment sizing criterion.
type AssessmentSizingCriterion pulumi.String

const (
	AssessmentSizingCriterionPerformanceBased = AssessmentSizingCriterion("PerformanceBased")
	AssessmentSizingCriterionAsOnPremises     = AssessmentSizingCriterion("AsOnPremises")
)

func (AssessmentSizingCriterion) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e AssessmentSizingCriterion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentSizingCriterion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentSizingCriterion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssessmentSizingCriterion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// User configurable setting that describes the status of the assessment.
type AssessmentStage pulumi.String

const (
	AssessmentStageInProgress  = AssessmentStage("InProgress")
	AssessmentStageUnderReview = AssessmentStage("UnderReview")
	AssessmentStageApproved    = AssessmentStage("Approved")
)

func (AssessmentStage) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e AssessmentStage) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentStage) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentStage) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssessmentStage) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// AHUB discount on windows virtual machines.
type AzureHybridUseBenefit pulumi.String

const (
	AzureHybridUseBenefitUnknown = AzureHybridUseBenefit("Unknown")
	AzureHybridUseBenefitYes     = AzureHybridUseBenefit("Yes")
	AzureHybridUseBenefitNo      = AzureHybridUseBenefit("No")
)

func (AzureHybridUseBenefit) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e AzureHybridUseBenefit) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureHybridUseBenefit) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureHybridUseBenefit) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureHybridUseBenefit) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
type AzureLocation pulumi.String

const (
	AzureLocationUnknown            = AzureLocation("Unknown")
	AzureLocationEastAsia           = AzureLocation("EastAsia")
	AzureLocationSoutheastAsia      = AzureLocation("SoutheastAsia")
	AzureLocationAustraliaEast      = AzureLocation("AustraliaEast")
	AzureLocationAustraliaSoutheast = AzureLocation("AustraliaSoutheast")
	AzureLocationBrazilSouth        = AzureLocation("BrazilSouth")
	AzureLocationCanadaCentral      = AzureLocation("CanadaCentral")
	AzureLocationCanadaEast         = AzureLocation("CanadaEast")
	AzureLocationWestEurope         = AzureLocation("WestEurope")
	AzureLocationNorthEurope        = AzureLocation("NorthEurope")
	AzureLocationCentralIndia       = AzureLocation("CentralIndia")
	AzureLocationSouthIndia         = AzureLocation("SouthIndia")
	AzureLocationWestIndia          = AzureLocation("WestIndia")
	AzureLocationJapanEast          = AzureLocation("JapanEast")
	AzureLocationJapanWest          = AzureLocation("JapanWest")
	AzureLocationKoreaCentral       = AzureLocation("KoreaCentral")
	AzureLocationKoreaSouth         = AzureLocation("KoreaSouth")
	AzureLocationUkWest             = AzureLocation("UkWest")
	AzureLocationUkSouth            = AzureLocation("UkSouth")
	AzureLocationNorthCentralUs     = AzureLocation("NorthCentralUs")
	AzureLocationEastUs             = AzureLocation("EastUs")
	AzureLocationWestUs2            = AzureLocation("WestUs2")
	AzureLocationSouthCentralUs     = AzureLocation("SouthCentralUs")
	AzureLocationCentralUs          = AzureLocation("CentralUs")
	AzureLocationEastUs2            = AzureLocation("EastUs2")
	AzureLocationWestUs             = AzureLocation("WestUs")
	AzureLocationWestCentralUs      = AzureLocation("WestCentralUs")
	AzureLocationGermanyCentral     = AzureLocation("GermanyCentral")
	AzureLocationGermanyNortheast   = AzureLocation("GermanyNortheast")
	AzureLocationChinaNorth         = AzureLocation("ChinaNorth")
	AzureLocationChinaEast          = AzureLocation("ChinaEast")
)

func (AzureLocation) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e AzureLocation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureLocation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureLocation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureLocation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Offer code according to which cost estimation is done.
type AzureOfferCode pulumi.String

const (
	AzureOfferCodeUnknown      = AzureOfferCode("Unknown")
	AzureOfferCodeMSAZR0003P   = AzureOfferCode("MSAZR0003P")
	AzureOfferCodeMSAZR0044P   = AzureOfferCode("MSAZR0044P")
	AzureOfferCodeMSAZR0059P   = AzureOfferCode("MSAZR0059P")
	AzureOfferCodeMSAZR0060P   = AzureOfferCode("MSAZR0060P")
	AzureOfferCodeMSAZR0062P   = AzureOfferCode("MSAZR0062P")
	AzureOfferCodeMSAZR0063P   = AzureOfferCode("MSAZR0063P")
	AzureOfferCodeMSAZR0064P   = AzureOfferCode("MSAZR0064P")
	AzureOfferCodeMSAZR0029P   = AzureOfferCode("MSAZR0029P")
	AzureOfferCodeMSAZR0022P   = AzureOfferCode("MSAZR0022P")
	AzureOfferCodeMSAZR0023P   = AzureOfferCode("MSAZR0023P")
	AzureOfferCodeMSAZR0148P   = AzureOfferCode("MSAZR0148P")
	AzureOfferCodeMSAZR0025P   = AzureOfferCode("MSAZR0025P")
	AzureOfferCodeMSAZR0036P   = AzureOfferCode("MSAZR0036P")
	AzureOfferCodeMSAZR0120P   = AzureOfferCode("MSAZR0120P")
	AzureOfferCodeMSAZR0121P   = AzureOfferCode("MSAZR0121P")
	AzureOfferCodeMSAZR0122P   = AzureOfferCode("MSAZR0122P")
	AzureOfferCodeMSAZR0123P   = AzureOfferCode("MSAZR0123P")
	AzureOfferCodeMSAZR0124P   = AzureOfferCode("MSAZR0124P")
	AzureOfferCodeMSAZR0125P   = AzureOfferCode("MSAZR0125P")
	AzureOfferCodeMSAZR0126P   = AzureOfferCode("MSAZR0126P")
	AzureOfferCodeMSAZR0127P   = AzureOfferCode("MSAZR0127P")
	AzureOfferCodeMSAZR0128P   = AzureOfferCode("MSAZR0128P")
	AzureOfferCodeMSAZR0129P   = AzureOfferCode("MSAZR0129P")
	AzureOfferCodeMSAZR0130P   = AzureOfferCode("MSAZR0130P")
	AzureOfferCodeMSAZR0111P   = AzureOfferCode("MSAZR0111P")
	AzureOfferCodeMSAZR0144P   = AzureOfferCode("MSAZR0144P")
	AzureOfferCodeMSAZR0149P   = AzureOfferCode("MSAZR0149P")
	AzureOfferCodeMSMCAZR0044P = AzureOfferCode("MSMCAZR0044P")
	AzureOfferCodeMSMCAZR0059P = AzureOfferCode("MSMCAZR0059P")
	AzureOfferCodeMSMCAZR0060P = AzureOfferCode("MSMCAZR0060P")
	AzureOfferCodeMSMCAZR0063P = AzureOfferCode("MSMCAZR0063P")
	AzureOfferCodeMSMCAZR0120P = AzureOfferCode("MSMCAZR0120P")
	AzureOfferCodeMSMCAZR0121P = AzureOfferCode("MSMCAZR0121P")
	AzureOfferCodeMSMCAZR0125P = AzureOfferCode("MSMCAZR0125P")
	AzureOfferCodeMSMCAZR0128P = AzureOfferCode("MSMCAZR0128P")
	AzureOfferCodeMSAZRDE0003P = AzureOfferCode("MSAZRDE0003P")
	AzureOfferCodeMSAZRDE0044P = AzureOfferCode("MSAZRDE0044P")
)

func (AzureOfferCode) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e AzureOfferCode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureOfferCode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureOfferCode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureOfferCode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Pricing tier for Size evaluation.
type AzurePricingTier pulumi.String

const (
	AzurePricingTierStandard = AzurePricingTier("Standard")
	AzurePricingTierBasic    = AzurePricingTier("Basic")
)

func (AzurePricingTier) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e AzurePricingTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzurePricingTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzurePricingTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzurePricingTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Storage Redundancy type offered by Azure.
type AzureStorageRedundancy pulumi.String

const (
	AzureStorageRedundancyUnknown                = AzureStorageRedundancy("Unknown")
	AzureStorageRedundancyLocallyRedundant       = AzureStorageRedundancy("LocallyRedundant")
	AzureStorageRedundancyZoneRedundant          = AzureStorageRedundancy("ZoneRedundant")
	AzureStorageRedundancyGeoRedundant           = AzureStorageRedundancy("GeoRedundant")
	AzureStorageRedundancyReadAccessGeoRedundant = AzureStorageRedundancy("ReadAccessGeoRedundant")
)

func (AzureStorageRedundancy) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e AzureStorageRedundancy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureStorageRedundancy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureStorageRedundancy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureStorageRedundancy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Currency to report prices in.
type Currency pulumi.String

const (
	CurrencyUnknown = Currency("Unknown")
	CurrencyUSD     = Currency("USD")
	CurrencyDKK     = Currency("DKK")
	CurrencyCAD     = Currency("CAD")
	CurrencyIDR     = Currency("IDR")
	CurrencyJPY     = Currency("JPY")
	CurrencyKRW     = Currency("KRW")
	CurrencyNZD     = Currency("NZD")
	CurrencyNOK     = Currency("NOK")
	CurrencyRUB     = Currency("RUB")
	CurrencySAR     = Currency("SAR")
	CurrencyZAR     = Currency("ZAR")
	CurrencySEK     = Currency("SEK")
	CurrencyTRY     = Currency("TRY")
	CurrencyGBP     = Currency("GBP")
	CurrencyMXN     = Currency("MXN")
	CurrencyMYR     = Currency("MYR")
	CurrencyINR     = Currency("INR")
	CurrencyHKD     = Currency("HKD")
	CurrencyBRL     = Currency("BRL")
	CurrencyTWD     = Currency("TWD")
	CurrencyEUR     = Currency("EUR")
	CurrencyCHF     = Currency("CHF")
	CurrencyARS     = Currency("ARS")
	CurrencyAUD     = Currency("AUD")
	CurrencyCNY     = Currency("CNY")
)

func (Currency) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e Currency) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Currency) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Currency) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Currency) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Percentile of performance data used to recommend Azure size.
type Percentile pulumi.String

const (
	PercentilePercentile50 = Percentile("Percentile50")
	PercentilePercentile90 = Percentile("Percentile90")
	PercentilePercentile95 = Percentile("Percentile95")
	PercentilePercentile99 = Percentile("Percentile99")
)

func (Percentile) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e Percentile) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Percentile) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Percentile) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Percentile) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Provisioning state of the project.
type ProvisioningState pulumi.String

const (
	ProvisioningStateAccepted  = ProvisioningState("Accepted")
	ProvisioningStateCreating  = ProvisioningState("Creating")
	ProvisioningStateDeleting  = ProvisioningState("Deleting")
	ProvisioningStateFailed    = ProvisioningState("Failed")
	ProvisioningStateMoving    = ProvisioningState("Moving")
	ProvisioningStateSucceeded = ProvisioningState("Succeeded")
)

func (ProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e ProvisioningState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProvisioningState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProvisioningState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProvisioningState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Time range of performance data used to recommend a size.
type TimeRange pulumi.String

const (
	TimeRangeDay   = TimeRange("Day")
	TimeRangeWeek  = TimeRange("Week")
	TimeRangeMonth = TimeRange("Month")
)

func (TimeRange) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e TimeRange) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TimeRange) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TimeRange) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TimeRange) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
