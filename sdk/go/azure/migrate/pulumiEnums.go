// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AssessmentSizingCriterion string

const (
	AssessmentSizingCriterionPerformanceBased = AssessmentSizingCriterion("PerformanceBased")
	AssessmentSizingCriterionAsOnPremises     = AssessmentSizingCriterion("AsOnPremises")
)

func (AssessmentSizingCriterion) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentSizingCriterion)(nil)).Elem()
}

func (e AssessmentSizingCriterion) ToAssessmentSizingCriterionOutput() AssessmentSizingCriterionOutput {
	return pulumi.ToOutput(e).(AssessmentSizingCriterionOutput)
}

func (e AssessmentSizingCriterion) ToAssessmentSizingCriterionOutputWithContext(ctx context.Context) AssessmentSizingCriterionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssessmentSizingCriterionOutput)
}

func (e AssessmentSizingCriterion) ToAssessmentSizingCriterionPtrOutput() AssessmentSizingCriterionPtrOutput {
	return e.ToAssessmentSizingCriterionPtrOutputWithContext(context.Background())
}

func (e AssessmentSizingCriterion) ToAssessmentSizingCriterionPtrOutputWithContext(ctx context.Context) AssessmentSizingCriterionPtrOutput {
	return AssessmentSizingCriterion(e).ToAssessmentSizingCriterionOutputWithContext(ctx).ToAssessmentSizingCriterionPtrOutputWithContext(ctx)
}

func (e AssessmentSizingCriterion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentSizingCriterion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentSizingCriterion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssessmentSizingCriterion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssessmentSizingCriterionOutput struct{ *pulumi.OutputState }

func (AssessmentSizingCriterionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentSizingCriterion)(nil)).Elem()
}

func (o AssessmentSizingCriterionOutput) ToAssessmentSizingCriterionOutput() AssessmentSizingCriterionOutput {
	return o
}

func (o AssessmentSizingCriterionOutput) ToAssessmentSizingCriterionOutputWithContext(ctx context.Context) AssessmentSizingCriterionOutput {
	return o
}

func (o AssessmentSizingCriterionOutput) ToAssessmentSizingCriterionPtrOutput() AssessmentSizingCriterionPtrOutput {
	return o.ToAssessmentSizingCriterionPtrOutputWithContext(context.Background())
}

func (o AssessmentSizingCriterionOutput) ToAssessmentSizingCriterionPtrOutputWithContext(ctx context.Context) AssessmentSizingCriterionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssessmentSizingCriterion) *AssessmentSizingCriterion {
		return &v
	}).(AssessmentSizingCriterionPtrOutput)
}

func (o AssessmentSizingCriterionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssessmentSizingCriterionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentSizingCriterion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssessmentSizingCriterionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentSizingCriterionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentSizingCriterion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssessmentSizingCriterionPtrOutput struct{ *pulumi.OutputState }

func (AssessmentSizingCriterionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentSizingCriterion)(nil)).Elem()
}

func (o AssessmentSizingCriterionPtrOutput) ToAssessmentSizingCriterionPtrOutput() AssessmentSizingCriterionPtrOutput {
	return o
}

func (o AssessmentSizingCriterionPtrOutput) ToAssessmentSizingCriterionPtrOutputWithContext(ctx context.Context) AssessmentSizingCriterionPtrOutput {
	return o
}

func (o AssessmentSizingCriterionPtrOutput) Elem() AssessmentSizingCriterionOutput {
	return o.ApplyT(func(v *AssessmentSizingCriterion) AssessmentSizingCriterion {
		if v != nil {
			return *v
		}
		var ret AssessmentSizingCriterion
		return ret
	}).(AssessmentSizingCriterionOutput)
}

func (o AssessmentSizingCriterionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentSizingCriterionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssessmentSizingCriterion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssessmentSizingCriterionInput is an input type that accepts AssessmentSizingCriterionArgs and AssessmentSizingCriterionOutput values.
// You can construct a concrete instance of `AssessmentSizingCriterionInput` via:
//
//          AssessmentSizingCriterionArgs{...}
type AssessmentSizingCriterionInput interface {
	pulumi.Input

	ToAssessmentSizingCriterionOutput() AssessmentSizingCriterionOutput
	ToAssessmentSizingCriterionOutputWithContext(context.Context) AssessmentSizingCriterionOutput
}

var assessmentSizingCriterionPtrType = reflect.TypeOf((**AssessmentSizingCriterion)(nil)).Elem()

type AssessmentSizingCriterionPtrInput interface {
	pulumi.Input

	ToAssessmentSizingCriterionPtrOutput() AssessmentSizingCriterionPtrOutput
	ToAssessmentSizingCriterionPtrOutputWithContext(context.Context) AssessmentSizingCriterionPtrOutput
}

type assessmentSizingCriterionPtr string

func AssessmentSizingCriterionPtr(v string) AssessmentSizingCriterionPtrInput {
	return (*assessmentSizingCriterionPtr)(&v)
}

func (*assessmentSizingCriterionPtr) ElementType() reflect.Type {
	return assessmentSizingCriterionPtrType
}

func (in *assessmentSizingCriterionPtr) ToAssessmentSizingCriterionPtrOutput() AssessmentSizingCriterionPtrOutput {
	return pulumi.ToOutput(in).(AssessmentSizingCriterionPtrOutput)
}

func (in *assessmentSizingCriterionPtr) ToAssessmentSizingCriterionPtrOutputWithContext(ctx context.Context) AssessmentSizingCriterionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssessmentSizingCriterionPtrOutput)
}

type AssessmentStage string

const (
	AssessmentStageInProgress  = AssessmentStage("InProgress")
	AssessmentStageUnderReview = AssessmentStage("UnderReview")
	AssessmentStageApproved    = AssessmentStage("Approved")
)

func (AssessmentStage) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentStage)(nil)).Elem()
}

func (e AssessmentStage) ToAssessmentStageOutput() AssessmentStageOutput {
	return pulumi.ToOutput(e).(AssessmentStageOutput)
}

func (e AssessmentStage) ToAssessmentStageOutputWithContext(ctx context.Context) AssessmentStageOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssessmentStageOutput)
}

func (e AssessmentStage) ToAssessmentStagePtrOutput() AssessmentStagePtrOutput {
	return e.ToAssessmentStagePtrOutputWithContext(context.Background())
}

func (e AssessmentStage) ToAssessmentStagePtrOutputWithContext(ctx context.Context) AssessmentStagePtrOutput {
	return AssessmentStage(e).ToAssessmentStageOutputWithContext(ctx).ToAssessmentStagePtrOutputWithContext(ctx)
}

func (e AssessmentStage) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentStage) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentStage) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssessmentStage) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssessmentStageOutput struct{ *pulumi.OutputState }

func (AssessmentStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentStage)(nil)).Elem()
}

func (o AssessmentStageOutput) ToAssessmentStageOutput() AssessmentStageOutput {
	return o
}

func (o AssessmentStageOutput) ToAssessmentStageOutputWithContext(ctx context.Context) AssessmentStageOutput {
	return o
}

func (o AssessmentStageOutput) ToAssessmentStagePtrOutput() AssessmentStagePtrOutput {
	return o.ToAssessmentStagePtrOutputWithContext(context.Background())
}

func (o AssessmentStageOutput) ToAssessmentStagePtrOutputWithContext(ctx context.Context) AssessmentStagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssessmentStage) *AssessmentStage {
		return &v
	}).(AssessmentStagePtrOutput)
}

func (o AssessmentStageOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssessmentStageOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentStage) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssessmentStageOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentStageOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentStage) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssessmentStagePtrOutput struct{ *pulumi.OutputState }

func (AssessmentStagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentStage)(nil)).Elem()
}

func (o AssessmentStagePtrOutput) ToAssessmentStagePtrOutput() AssessmentStagePtrOutput {
	return o
}

func (o AssessmentStagePtrOutput) ToAssessmentStagePtrOutputWithContext(ctx context.Context) AssessmentStagePtrOutput {
	return o
}

func (o AssessmentStagePtrOutput) Elem() AssessmentStageOutput {
	return o.ApplyT(func(v *AssessmentStage) AssessmentStage {
		if v != nil {
			return *v
		}
		var ret AssessmentStage
		return ret
	}).(AssessmentStageOutput)
}

func (o AssessmentStagePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentStagePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssessmentStage) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssessmentStageInput is an input type that accepts AssessmentStageArgs and AssessmentStageOutput values.
// You can construct a concrete instance of `AssessmentStageInput` via:
//
//          AssessmentStageArgs{...}
type AssessmentStageInput interface {
	pulumi.Input

	ToAssessmentStageOutput() AssessmentStageOutput
	ToAssessmentStageOutputWithContext(context.Context) AssessmentStageOutput
}

var assessmentStagePtrType = reflect.TypeOf((**AssessmentStage)(nil)).Elem()

type AssessmentStagePtrInput interface {
	pulumi.Input

	ToAssessmentStagePtrOutput() AssessmentStagePtrOutput
	ToAssessmentStagePtrOutputWithContext(context.Context) AssessmentStagePtrOutput
}

type assessmentStagePtr string

func AssessmentStagePtr(v string) AssessmentStagePtrInput {
	return (*assessmentStagePtr)(&v)
}

func (*assessmentStagePtr) ElementType() reflect.Type {
	return assessmentStagePtrType
}

func (in *assessmentStagePtr) ToAssessmentStagePtrOutput() AssessmentStagePtrOutput {
	return pulumi.ToOutput(in).(AssessmentStagePtrOutput)
}

func (in *assessmentStagePtr) ToAssessmentStagePtrOutputWithContext(ctx context.Context) AssessmentStagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssessmentStagePtrOutput)
}

type AzureDiskType string

const (
	AzureDiskTypeUnknown           = AzureDiskType("Unknown")
	AzureDiskTypeStandard          = AzureDiskType("Standard")
	AzureDiskTypePremium           = AzureDiskType("Premium")
	AzureDiskTypeStandardSSD       = AzureDiskType("StandardSSD")
	AzureDiskTypeStandardOrPremium = AzureDiskType("StandardOrPremium")
)

func (AzureDiskType) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDiskType)(nil)).Elem()
}

func (e AzureDiskType) ToAzureDiskTypeOutput() AzureDiskTypeOutput {
	return pulumi.ToOutput(e).(AzureDiskTypeOutput)
}

func (e AzureDiskType) ToAzureDiskTypeOutputWithContext(ctx context.Context) AzureDiskTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureDiskTypeOutput)
}

func (e AzureDiskType) ToAzureDiskTypePtrOutput() AzureDiskTypePtrOutput {
	return e.ToAzureDiskTypePtrOutputWithContext(context.Background())
}

func (e AzureDiskType) ToAzureDiskTypePtrOutputWithContext(ctx context.Context) AzureDiskTypePtrOutput {
	return AzureDiskType(e).ToAzureDiskTypeOutputWithContext(ctx).ToAzureDiskTypePtrOutputWithContext(ctx)
}

func (e AzureDiskType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureDiskType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureDiskType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureDiskType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureDiskTypeOutput struct{ *pulumi.OutputState }

func (AzureDiskTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDiskType)(nil)).Elem()
}

func (o AzureDiskTypeOutput) ToAzureDiskTypeOutput() AzureDiskTypeOutput {
	return o
}

func (o AzureDiskTypeOutput) ToAzureDiskTypeOutputWithContext(ctx context.Context) AzureDiskTypeOutput {
	return o
}

func (o AzureDiskTypeOutput) ToAzureDiskTypePtrOutput() AzureDiskTypePtrOutput {
	return o.ToAzureDiskTypePtrOutputWithContext(context.Background())
}

func (o AzureDiskTypeOutput) ToAzureDiskTypePtrOutputWithContext(ctx context.Context) AzureDiskTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureDiskType) *AzureDiskType {
		return &v
	}).(AzureDiskTypePtrOutput)
}

func (o AzureDiskTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureDiskTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureDiskType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureDiskTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureDiskTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureDiskType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureDiskTypePtrOutput struct{ *pulumi.OutputState }

func (AzureDiskTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureDiskType)(nil)).Elem()
}

func (o AzureDiskTypePtrOutput) ToAzureDiskTypePtrOutput() AzureDiskTypePtrOutput {
	return o
}

func (o AzureDiskTypePtrOutput) ToAzureDiskTypePtrOutputWithContext(ctx context.Context) AzureDiskTypePtrOutput {
	return o
}

func (o AzureDiskTypePtrOutput) Elem() AzureDiskTypeOutput {
	return o.ApplyT(func(v *AzureDiskType) AzureDiskType {
		if v != nil {
			return *v
		}
		var ret AzureDiskType
		return ret
	}).(AzureDiskTypeOutput)
}

func (o AzureDiskTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureDiskTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureDiskType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureDiskTypeInput is an input type that accepts AzureDiskTypeArgs and AzureDiskTypeOutput values.
// You can construct a concrete instance of `AzureDiskTypeInput` via:
//
//          AzureDiskTypeArgs{...}
type AzureDiskTypeInput interface {
	pulumi.Input

	ToAzureDiskTypeOutput() AzureDiskTypeOutput
	ToAzureDiskTypeOutputWithContext(context.Context) AzureDiskTypeOutput
}

var azureDiskTypePtrType = reflect.TypeOf((**AzureDiskType)(nil)).Elem()

type AzureDiskTypePtrInput interface {
	pulumi.Input

	ToAzureDiskTypePtrOutput() AzureDiskTypePtrOutput
	ToAzureDiskTypePtrOutputWithContext(context.Context) AzureDiskTypePtrOutput
}

type azureDiskTypePtr string

func AzureDiskTypePtr(v string) AzureDiskTypePtrInput {
	return (*azureDiskTypePtr)(&v)
}

func (*azureDiskTypePtr) ElementType() reflect.Type {
	return azureDiskTypePtrType
}

func (in *azureDiskTypePtr) ToAzureDiskTypePtrOutput() AzureDiskTypePtrOutput {
	return pulumi.ToOutput(in).(AzureDiskTypePtrOutput)
}

func (in *azureDiskTypePtr) ToAzureDiskTypePtrOutputWithContext(ctx context.Context) AzureDiskTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureDiskTypePtrOutput)
}

type AzureHybridUseBenefit string

const (
	AzureHybridUseBenefitUnknown = AzureHybridUseBenefit("Unknown")
	AzureHybridUseBenefitYes     = AzureHybridUseBenefit("Yes")
	AzureHybridUseBenefitNo      = AzureHybridUseBenefit("No")
)

func (AzureHybridUseBenefit) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureHybridUseBenefit)(nil)).Elem()
}

func (e AzureHybridUseBenefit) ToAzureHybridUseBenefitOutput() AzureHybridUseBenefitOutput {
	return pulumi.ToOutput(e).(AzureHybridUseBenefitOutput)
}

func (e AzureHybridUseBenefit) ToAzureHybridUseBenefitOutputWithContext(ctx context.Context) AzureHybridUseBenefitOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureHybridUseBenefitOutput)
}

func (e AzureHybridUseBenefit) ToAzureHybridUseBenefitPtrOutput() AzureHybridUseBenefitPtrOutput {
	return e.ToAzureHybridUseBenefitPtrOutputWithContext(context.Background())
}

func (e AzureHybridUseBenefit) ToAzureHybridUseBenefitPtrOutputWithContext(ctx context.Context) AzureHybridUseBenefitPtrOutput {
	return AzureHybridUseBenefit(e).ToAzureHybridUseBenefitOutputWithContext(ctx).ToAzureHybridUseBenefitPtrOutputWithContext(ctx)
}

func (e AzureHybridUseBenefit) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureHybridUseBenefit) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureHybridUseBenefit) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureHybridUseBenefit) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureHybridUseBenefitOutput struct{ *pulumi.OutputState }

func (AzureHybridUseBenefitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureHybridUseBenefit)(nil)).Elem()
}

func (o AzureHybridUseBenefitOutput) ToAzureHybridUseBenefitOutput() AzureHybridUseBenefitOutput {
	return o
}

func (o AzureHybridUseBenefitOutput) ToAzureHybridUseBenefitOutputWithContext(ctx context.Context) AzureHybridUseBenefitOutput {
	return o
}

func (o AzureHybridUseBenefitOutput) ToAzureHybridUseBenefitPtrOutput() AzureHybridUseBenefitPtrOutput {
	return o.ToAzureHybridUseBenefitPtrOutputWithContext(context.Background())
}

func (o AzureHybridUseBenefitOutput) ToAzureHybridUseBenefitPtrOutputWithContext(ctx context.Context) AzureHybridUseBenefitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureHybridUseBenefit) *AzureHybridUseBenefit {
		return &v
	}).(AzureHybridUseBenefitPtrOutput)
}

func (o AzureHybridUseBenefitOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureHybridUseBenefitOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureHybridUseBenefit) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureHybridUseBenefitOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureHybridUseBenefitOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureHybridUseBenefit) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureHybridUseBenefitPtrOutput struct{ *pulumi.OutputState }

func (AzureHybridUseBenefitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureHybridUseBenefit)(nil)).Elem()
}

func (o AzureHybridUseBenefitPtrOutput) ToAzureHybridUseBenefitPtrOutput() AzureHybridUseBenefitPtrOutput {
	return o
}

func (o AzureHybridUseBenefitPtrOutput) ToAzureHybridUseBenefitPtrOutputWithContext(ctx context.Context) AzureHybridUseBenefitPtrOutput {
	return o
}

func (o AzureHybridUseBenefitPtrOutput) Elem() AzureHybridUseBenefitOutput {
	return o.ApplyT(func(v *AzureHybridUseBenefit) AzureHybridUseBenefit {
		if v != nil {
			return *v
		}
		var ret AzureHybridUseBenefit
		return ret
	}).(AzureHybridUseBenefitOutput)
}

func (o AzureHybridUseBenefitPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureHybridUseBenefitPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureHybridUseBenefit) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureHybridUseBenefitInput is an input type that accepts AzureHybridUseBenefitArgs and AzureHybridUseBenefitOutput values.
// You can construct a concrete instance of `AzureHybridUseBenefitInput` via:
//
//          AzureHybridUseBenefitArgs{...}
type AzureHybridUseBenefitInput interface {
	pulumi.Input

	ToAzureHybridUseBenefitOutput() AzureHybridUseBenefitOutput
	ToAzureHybridUseBenefitOutputWithContext(context.Context) AzureHybridUseBenefitOutput
}

var azureHybridUseBenefitPtrType = reflect.TypeOf((**AzureHybridUseBenefit)(nil)).Elem()

type AzureHybridUseBenefitPtrInput interface {
	pulumi.Input

	ToAzureHybridUseBenefitPtrOutput() AzureHybridUseBenefitPtrOutput
	ToAzureHybridUseBenefitPtrOutputWithContext(context.Context) AzureHybridUseBenefitPtrOutput
}

type azureHybridUseBenefitPtr string

func AzureHybridUseBenefitPtr(v string) AzureHybridUseBenefitPtrInput {
	return (*azureHybridUseBenefitPtr)(&v)
}

func (*azureHybridUseBenefitPtr) ElementType() reflect.Type {
	return azureHybridUseBenefitPtrType
}

func (in *azureHybridUseBenefitPtr) ToAzureHybridUseBenefitPtrOutput() AzureHybridUseBenefitPtrOutput {
	return pulumi.ToOutput(in).(AzureHybridUseBenefitPtrOutput)
}

func (in *azureHybridUseBenefitPtr) ToAzureHybridUseBenefitPtrOutputWithContext(ctx context.Context) AzureHybridUseBenefitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureHybridUseBenefitPtrOutput)
}

type AzureLocation string

const (
	AzureLocationUnknown            = AzureLocation("Unknown")
	AzureLocationEastAsia           = AzureLocation("EastAsia")
	AzureLocationSoutheastAsia      = AzureLocation("SoutheastAsia")
	AzureLocationAustraliaEast      = AzureLocation("AustraliaEast")
	AzureLocationAustraliaSoutheast = AzureLocation("AustraliaSoutheast")
	AzureLocationBrazilSouth        = AzureLocation("BrazilSouth")
	AzureLocationCanadaCentral      = AzureLocation("CanadaCentral")
	AzureLocationCanadaEast         = AzureLocation("CanadaEast")
	AzureLocationWestEurope         = AzureLocation("WestEurope")
	AzureLocationNorthEurope        = AzureLocation("NorthEurope")
	AzureLocationCentralIndia       = AzureLocation("CentralIndia")
	AzureLocationSouthIndia         = AzureLocation("SouthIndia")
	AzureLocationWestIndia          = AzureLocation("WestIndia")
	AzureLocationJapanEast          = AzureLocation("JapanEast")
	AzureLocationJapanWest          = AzureLocation("JapanWest")
	AzureLocationKoreaCentral       = AzureLocation("KoreaCentral")
	AzureLocationKoreaSouth         = AzureLocation("KoreaSouth")
	AzureLocationUkWest             = AzureLocation("UkWest")
	AzureLocationUkSouth            = AzureLocation("UkSouth")
	AzureLocationNorthCentralUs     = AzureLocation("NorthCentralUs")
	AzureLocationEastUs             = AzureLocation("EastUs")
	AzureLocationWestUs2            = AzureLocation("WestUs2")
	AzureLocationSouthCentralUs     = AzureLocation("SouthCentralUs")
	AzureLocationCentralUs          = AzureLocation("CentralUs")
	AzureLocationEastUs2            = AzureLocation("EastUs2")
	AzureLocationWestUs             = AzureLocation("WestUs")
	AzureLocationWestCentralUs      = AzureLocation("WestCentralUs")
	AzureLocationGermanyCentral     = AzureLocation("GermanyCentral")
	AzureLocationGermanyNortheast   = AzureLocation("GermanyNortheast")
	AzureLocationChinaNorth         = AzureLocation("ChinaNorth")
	AzureLocationChinaEast          = AzureLocation("ChinaEast")
	AzureLocationUSGovArizona       = AzureLocation("USGovArizona")
	AzureLocationUSGovTexas         = AzureLocation("USGovTexas")
	AzureLocationUSGovIowa          = AzureLocation("USGovIowa")
	AzureLocationUSGovVirginia      = AzureLocation("USGovVirginia")
	AzureLocationUSDoDCentral       = AzureLocation("USDoDCentral")
	AzureLocationUSDoDEast          = AzureLocation("USDoDEast")
)

func (AzureLocation) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureLocation)(nil)).Elem()
}

func (e AzureLocation) ToAzureLocationOutput() AzureLocationOutput {
	return pulumi.ToOutput(e).(AzureLocationOutput)
}

func (e AzureLocation) ToAzureLocationOutputWithContext(ctx context.Context) AzureLocationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureLocationOutput)
}

func (e AzureLocation) ToAzureLocationPtrOutput() AzureLocationPtrOutput {
	return e.ToAzureLocationPtrOutputWithContext(context.Background())
}

func (e AzureLocation) ToAzureLocationPtrOutputWithContext(ctx context.Context) AzureLocationPtrOutput {
	return AzureLocation(e).ToAzureLocationOutputWithContext(ctx).ToAzureLocationPtrOutputWithContext(ctx)
}

func (e AzureLocation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureLocation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureLocation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureLocation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureLocationOutput struct{ *pulumi.OutputState }

func (AzureLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureLocation)(nil)).Elem()
}

func (o AzureLocationOutput) ToAzureLocationOutput() AzureLocationOutput {
	return o
}

func (o AzureLocationOutput) ToAzureLocationOutputWithContext(ctx context.Context) AzureLocationOutput {
	return o
}

func (o AzureLocationOutput) ToAzureLocationPtrOutput() AzureLocationPtrOutput {
	return o.ToAzureLocationPtrOutputWithContext(context.Background())
}

func (o AzureLocationOutput) ToAzureLocationPtrOutputWithContext(ctx context.Context) AzureLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureLocation) *AzureLocation {
		return &v
	}).(AzureLocationPtrOutput)
}

func (o AzureLocationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureLocationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureLocation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureLocationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureLocationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureLocation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureLocationPtrOutput struct{ *pulumi.OutputState }

func (AzureLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureLocation)(nil)).Elem()
}

func (o AzureLocationPtrOutput) ToAzureLocationPtrOutput() AzureLocationPtrOutput {
	return o
}

func (o AzureLocationPtrOutput) ToAzureLocationPtrOutputWithContext(ctx context.Context) AzureLocationPtrOutput {
	return o
}

func (o AzureLocationPtrOutput) Elem() AzureLocationOutput {
	return o.ApplyT(func(v *AzureLocation) AzureLocation {
		if v != nil {
			return *v
		}
		var ret AzureLocation
		return ret
	}).(AzureLocationOutput)
}

func (o AzureLocationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureLocationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureLocation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureLocationInput is an input type that accepts AzureLocationArgs and AzureLocationOutput values.
// You can construct a concrete instance of `AzureLocationInput` via:
//
//          AzureLocationArgs{...}
type AzureLocationInput interface {
	pulumi.Input

	ToAzureLocationOutput() AzureLocationOutput
	ToAzureLocationOutputWithContext(context.Context) AzureLocationOutput
}

var azureLocationPtrType = reflect.TypeOf((**AzureLocation)(nil)).Elem()

type AzureLocationPtrInput interface {
	pulumi.Input

	ToAzureLocationPtrOutput() AzureLocationPtrOutput
	ToAzureLocationPtrOutputWithContext(context.Context) AzureLocationPtrOutput
}

type azureLocationPtr string

func AzureLocationPtr(v string) AzureLocationPtrInput {
	return (*azureLocationPtr)(&v)
}

func (*azureLocationPtr) ElementType() reflect.Type {
	return azureLocationPtrType
}

func (in *azureLocationPtr) ToAzureLocationPtrOutput() AzureLocationPtrOutput {
	return pulumi.ToOutput(in).(AzureLocationPtrOutput)
}

func (in *azureLocationPtr) ToAzureLocationPtrOutputWithContext(ctx context.Context) AzureLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureLocationPtrOutput)
}

type AzureOfferCode string

const (
	AzureOfferCodeUnknown         = AzureOfferCode("Unknown")
	AzureOfferCodeMSAZR0003P      = AzureOfferCode("MSAZR0003P")
	AzureOfferCodeMSAZR0044P      = AzureOfferCode("MSAZR0044P")
	AzureOfferCodeMSAZR0059P      = AzureOfferCode("MSAZR0059P")
	AzureOfferCodeMSAZR0060P      = AzureOfferCode("MSAZR0060P")
	AzureOfferCodeMSAZR0062P      = AzureOfferCode("MSAZR0062P")
	AzureOfferCodeMSAZR0063P      = AzureOfferCode("MSAZR0063P")
	AzureOfferCodeMSAZR0064P      = AzureOfferCode("MSAZR0064P")
	AzureOfferCodeMSAZR0029P      = AzureOfferCode("MSAZR0029P")
	AzureOfferCodeMSAZR0022P      = AzureOfferCode("MSAZR0022P")
	AzureOfferCodeMSAZR0023P      = AzureOfferCode("MSAZR0023P")
	AzureOfferCodeMSAZR0148P      = AzureOfferCode("MSAZR0148P")
	AzureOfferCodeMSAZR0025P      = AzureOfferCode("MSAZR0025P")
	AzureOfferCodeMSAZR0036P      = AzureOfferCode("MSAZR0036P")
	AzureOfferCodeMSAZR0120P      = AzureOfferCode("MSAZR0120P")
	AzureOfferCodeMSAZR0121P      = AzureOfferCode("MSAZR0121P")
	AzureOfferCodeMSAZR0122P      = AzureOfferCode("MSAZR0122P")
	AzureOfferCodeMSAZR0123P      = AzureOfferCode("MSAZR0123P")
	AzureOfferCodeMSAZR0124P      = AzureOfferCode("MSAZR0124P")
	AzureOfferCodeMSAZR0125P      = AzureOfferCode("MSAZR0125P")
	AzureOfferCodeMSAZR0126P      = AzureOfferCode("MSAZR0126P")
	AzureOfferCodeMSAZR0127P      = AzureOfferCode("MSAZR0127P")
	AzureOfferCodeMSAZR0128P      = AzureOfferCode("MSAZR0128P")
	AzureOfferCodeMSAZR0129P      = AzureOfferCode("MSAZR0129P")
	AzureOfferCodeMSAZR0130P      = AzureOfferCode("MSAZR0130P")
	AzureOfferCodeMSAZR0111P      = AzureOfferCode("MSAZR0111P")
	AzureOfferCodeMSAZR0144P      = AzureOfferCode("MSAZR0144P")
	AzureOfferCodeMSAZR0149P      = AzureOfferCode("MSAZR0149P")
	AzureOfferCodeMSMCAZR0044P    = AzureOfferCode("MSMCAZR0044P")
	AzureOfferCodeMSMCAZR0059P    = AzureOfferCode("MSMCAZR0059P")
	AzureOfferCodeMSMCAZR0060P    = AzureOfferCode("MSMCAZR0060P")
	AzureOfferCodeMSMCAZR0063P    = AzureOfferCode("MSMCAZR0063P")
	AzureOfferCodeMSMCAZR0120P    = AzureOfferCode("MSMCAZR0120P")
	AzureOfferCodeMSMCAZR0121P    = AzureOfferCode("MSMCAZR0121P")
	AzureOfferCodeMSMCAZR0125P    = AzureOfferCode("MSMCAZR0125P")
	AzureOfferCodeMSMCAZR0128P    = AzureOfferCode("MSMCAZR0128P")
	AzureOfferCodeMSAZRDE0003P    = AzureOfferCode("MSAZRDE0003P")
	AzureOfferCodeMSAZRDE0044P    = AzureOfferCode("MSAZRDE0044P")
	AzureOfferCodeMSAZRUSGOV0003P = AzureOfferCode("MSAZRUSGOV0003P")
	AzureOfferCodeEA              = AzureOfferCode("EA")
)

func (AzureOfferCode) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureOfferCode)(nil)).Elem()
}

func (e AzureOfferCode) ToAzureOfferCodeOutput() AzureOfferCodeOutput {
	return pulumi.ToOutput(e).(AzureOfferCodeOutput)
}

func (e AzureOfferCode) ToAzureOfferCodeOutputWithContext(ctx context.Context) AzureOfferCodeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureOfferCodeOutput)
}

func (e AzureOfferCode) ToAzureOfferCodePtrOutput() AzureOfferCodePtrOutput {
	return e.ToAzureOfferCodePtrOutputWithContext(context.Background())
}

func (e AzureOfferCode) ToAzureOfferCodePtrOutputWithContext(ctx context.Context) AzureOfferCodePtrOutput {
	return AzureOfferCode(e).ToAzureOfferCodeOutputWithContext(ctx).ToAzureOfferCodePtrOutputWithContext(ctx)
}

func (e AzureOfferCode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureOfferCode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureOfferCode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureOfferCode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureOfferCodeOutput struct{ *pulumi.OutputState }

func (AzureOfferCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureOfferCode)(nil)).Elem()
}

func (o AzureOfferCodeOutput) ToAzureOfferCodeOutput() AzureOfferCodeOutput {
	return o
}

func (o AzureOfferCodeOutput) ToAzureOfferCodeOutputWithContext(ctx context.Context) AzureOfferCodeOutput {
	return o
}

func (o AzureOfferCodeOutput) ToAzureOfferCodePtrOutput() AzureOfferCodePtrOutput {
	return o.ToAzureOfferCodePtrOutputWithContext(context.Background())
}

func (o AzureOfferCodeOutput) ToAzureOfferCodePtrOutputWithContext(ctx context.Context) AzureOfferCodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureOfferCode) *AzureOfferCode {
		return &v
	}).(AzureOfferCodePtrOutput)
}

func (o AzureOfferCodeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureOfferCodeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureOfferCode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureOfferCodeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureOfferCodeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureOfferCode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureOfferCodePtrOutput struct{ *pulumi.OutputState }

func (AzureOfferCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureOfferCode)(nil)).Elem()
}

func (o AzureOfferCodePtrOutput) ToAzureOfferCodePtrOutput() AzureOfferCodePtrOutput {
	return o
}

func (o AzureOfferCodePtrOutput) ToAzureOfferCodePtrOutputWithContext(ctx context.Context) AzureOfferCodePtrOutput {
	return o
}

func (o AzureOfferCodePtrOutput) Elem() AzureOfferCodeOutput {
	return o.ApplyT(func(v *AzureOfferCode) AzureOfferCode {
		if v != nil {
			return *v
		}
		var ret AzureOfferCode
		return ret
	}).(AzureOfferCodeOutput)
}

func (o AzureOfferCodePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureOfferCodePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureOfferCode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureOfferCodeInput is an input type that accepts AzureOfferCodeArgs and AzureOfferCodeOutput values.
// You can construct a concrete instance of `AzureOfferCodeInput` via:
//
//          AzureOfferCodeArgs{...}
type AzureOfferCodeInput interface {
	pulumi.Input

	ToAzureOfferCodeOutput() AzureOfferCodeOutput
	ToAzureOfferCodeOutputWithContext(context.Context) AzureOfferCodeOutput
}

var azureOfferCodePtrType = reflect.TypeOf((**AzureOfferCode)(nil)).Elem()

type AzureOfferCodePtrInput interface {
	pulumi.Input

	ToAzureOfferCodePtrOutput() AzureOfferCodePtrOutput
	ToAzureOfferCodePtrOutputWithContext(context.Context) AzureOfferCodePtrOutput
}

type azureOfferCodePtr string

func AzureOfferCodePtr(v string) AzureOfferCodePtrInput {
	return (*azureOfferCodePtr)(&v)
}

func (*azureOfferCodePtr) ElementType() reflect.Type {
	return azureOfferCodePtrType
}

func (in *azureOfferCodePtr) ToAzureOfferCodePtrOutput() AzureOfferCodePtrOutput {
	return pulumi.ToOutput(in).(AzureOfferCodePtrOutput)
}

func (in *azureOfferCodePtr) ToAzureOfferCodePtrOutputWithContext(ctx context.Context) AzureOfferCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureOfferCodePtrOutput)
}

type AzurePricingTier string

const (
	AzurePricingTierStandard = AzurePricingTier("Standard")
	AzurePricingTierBasic    = AzurePricingTier("Basic")
)

func (AzurePricingTier) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePricingTier)(nil)).Elem()
}

func (e AzurePricingTier) ToAzurePricingTierOutput() AzurePricingTierOutput {
	return pulumi.ToOutput(e).(AzurePricingTierOutput)
}

func (e AzurePricingTier) ToAzurePricingTierOutputWithContext(ctx context.Context) AzurePricingTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzurePricingTierOutput)
}

func (e AzurePricingTier) ToAzurePricingTierPtrOutput() AzurePricingTierPtrOutput {
	return e.ToAzurePricingTierPtrOutputWithContext(context.Background())
}

func (e AzurePricingTier) ToAzurePricingTierPtrOutputWithContext(ctx context.Context) AzurePricingTierPtrOutput {
	return AzurePricingTier(e).ToAzurePricingTierOutputWithContext(ctx).ToAzurePricingTierPtrOutputWithContext(ctx)
}

func (e AzurePricingTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzurePricingTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzurePricingTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzurePricingTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzurePricingTierOutput struct{ *pulumi.OutputState }

func (AzurePricingTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePricingTier)(nil)).Elem()
}

func (o AzurePricingTierOutput) ToAzurePricingTierOutput() AzurePricingTierOutput {
	return o
}

func (o AzurePricingTierOutput) ToAzurePricingTierOutputWithContext(ctx context.Context) AzurePricingTierOutput {
	return o
}

func (o AzurePricingTierOutput) ToAzurePricingTierPtrOutput() AzurePricingTierPtrOutput {
	return o.ToAzurePricingTierPtrOutputWithContext(context.Background())
}

func (o AzurePricingTierOutput) ToAzurePricingTierPtrOutputWithContext(ctx context.Context) AzurePricingTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzurePricingTier) *AzurePricingTier {
		return &v
	}).(AzurePricingTierPtrOutput)
}

func (o AzurePricingTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzurePricingTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzurePricingTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzurePricingTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzurePricingTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzurePricingTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzurePricingTierPtrOutput struct{ *pulumi.OutputState }

func (AzurePricingTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzurePricingTier)(nil)).Elem()
}

func (o AzurePricingTierPtrOutput) ToAzurePricingTierPtrOutput() AzurePricingTierPtrOutput {
	return o
}

func (o AzurePricingTierPtrOutput) ToAzurePricingTierPtrOutputWithContext(ctx context.Context) AzurePricingTierPtrOutput {
	return o
}

func (o AzurePricingTierPtrOutput) Elem() AzurePricingTierOutput {
	return o.ApplyT(func(v *AzurePricingTier) AzurePricingTier {
		if v != nil {
			return *v
		}
		var ret AzurePricingTier
		return ret
	}).(AzurePricingTierOutput)
}

func (o AzurePricingTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzurePricingTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzurePricingTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzurePricingTierInput is an input type that accepts AzurePricingTierArgs and AzurePricingTierOutput values.
// You can construct a concrete instance of `AzurePricingTierInput` via:
//
//          AzurePricingTierArgs{...}
type AzurePricingTierInput interface {
	pulumi.Input

	ToAzurePricingTierOutput() AzurePricingTierOutput
	ToAzurePricingTierOutputWithContext(context.Context) AzurePricingTierOutput
}

var azurePricingTierPtrType = reflect.TypeOf((**AzurePricingTier)(nil)).Elem()

type AzurePricingTierPtrInput interface {
	pulumi.Input

	ToAzurePricingTierPtrOutput() AzurePricingTierPtrOutput
	ToAzurePricingTierPtrOutputWithContext(context.Context) AzurePricingTierPtrOutput
}

type azurePricingTierPtr string

func AzurePricingTierPtr(v string) AzurePricingTierPtrInput {
	return (*azurePricingTierPtr)(&v)
}

func (*azurePricingTierPtr) ElementType() reflect.Type {
	return azurePricingTierPtrType
}

func (in *azurePricingTierPtr) ToAzurePricingTierPtrOutput() AzurePricingTierPtrOutput {
	return pulumi.ToOutput(in).(AzurePricingTierPtrOutput)
}

func (in *azurePricingTierPtr) ToAzurePricingTierPtrOutputWithContext(ctx context.Context) AzurePricingTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzurePricingTierPtrOutput)
}

type AzureStorageRedundancy string

const (
	AzureStorageRedundancyUnknown                = AzureStorageRedundancy("Unknown")
	AzureStorageRedundancyLocallyRedundant       = AzureStorageRedundancy("LocallyRedundant")
	AzureStorageRedundancyZoneRedundant          = AzureStorageRedundancy("ZoneRedundant")
	AzureStorageRedundancyGeoRedundant           = AzureStorageRedundancy("GeoRedundant")
	AzureStorageRedundancyReadAccessGeoRedundant = AzureStorageRedundancy("ReadAccessGeoRedundant")
)

func (AzureStorageRedundancy) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageRedundancy)(nil)).Elem()
}

func (e AzureStorageRedundancy) ToAzureStorageRedundancyOutput() AzureStorageRedundancyOutput {
	return pulumi.ToOutput(e).(AzureStorageRedundancyOutput)
}

func (e AzureStorageRedundancy) ToAzureStorageRedundancyOutputWithContext(ctx context.Context) AzureStorageRedundancyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureStorageRedundancyOutput)
}

func (e AzureStorageRedundancy) ToAzureStorageRedundancyPtrOutput() AzureStorageRedundancyPtrOutput {
	return e.ToAzureStorageRedundancyPtrOutputWithContext(context.Background())
}

func (e AzureStorageRedundancy) ToAzureStorageRedundancyPtrOutputWithContext(ctx context.Context) AzureStorageRedundancyPtrOutput {
	return AzureStorageRedundancy(e).ToAzureStorageRedundancyOutputWithContext(ctx).ToAzureStorageRedundancyPtrOutputWithContext(ctx)
}

func (e AzureStorageRedundancy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureStorageRedundancy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureStorageRedundancy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureStorageRedundancy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureStorageRedundancyOutput struct{ *pulumi.OutputState }

func (AzureStorageRedundancyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageRedundancy)(nil)).Elem()
}

func (o AzureStorageRedundancyOutput) ToAzureStorageRedundancyOutput() AzureStorageRedundancyOutput {
	return o
}

func (o AzureStorageRedundancyOutput) ToAzureStorageRedundancyOutputWithContext(ctx context.Context) AzureStorageRedundancyOutput {
	return o
}

func (o AzureStorageRedundancyOutput) ToAzureStorageRedundancyPtrOutput() AzureStorageRedundancyPtrOutput {
	return o.ToAzureStorageRedundancyPtrOutputWithContext(context.Background())
}

func (o AzureStorageRedundancyOutput) ToAzureStorageRedundancyPtrOutputWithContext(ctx context.Context) AzureStorageRedundancyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureStorageRedundancy) *AzureStorageRedundancy {
		return &v
	}).(AzureStorageRedundancyPtrOutput)
}

func (o AzureStorageRedundancyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureStorageRedundancyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureStorageRedundancy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureStorageRedundancyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureStorageRedundancyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureStorageRedundancy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureStorageRedundancyPtrOutput struct{ *pulumi.OutputState }

func (AzureStorageRedundancyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStorageRedundancy)(nil)).Elem()
}

func (o AzureStorageRedundancyPtrOutput) ToAzureStorageRedundancyPtrOutput() AzureStorageRedundancyPtrOutput {
	return o
}

func (o AzureStorageRedundancyPtrOutput) ToAzureStorageRedundancyPtrOutputWithContext(ctx context.Context) AzureStorageRedundancyPtrOutput {
	return o
}

func (o AzureStorageRedundancyPtrOutput) Elem() AzureStorageRedundancyOutput {
	return o.ApplyT(func(v *AzureStorageRedundancy) AzureStorageRedundancy {
		if v != nil {
			return *v
		}
		var ret AzureStorageRedundancy
		return ret
	}).(AzureStorageRedundancyOutput)
}

func (o AzureStorageRedundancyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureStorageRedundancyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureStorageRedundancy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureStorageRedundancyInput is an input type that accepts AzureStorageRedundancyArgs and AzureStorageRedundancyOutput values.
// You can construct a concrete instance of `AzureStorageRedundancyInput` via:
//
//          AzureStorageRedundancyArgs{...}
type AzureStorageRedundancyInput interface {
	pulumi.Input

	ToAzureStorageRedundancyOutput() AzureStorageRedundancyOutput
	ToAzureStorageRedundancyOutputWithContext(context.Context) AzureStorageRedundancyOutput
}

var azureStorageRedundancyPtrType = reflect.TypeOf((**AzureStorageRedundancy)(nil)).Elem()

type AzureStorageRedundancyPtrInput interface {
	pulumi.Input

	ToAzureStorageRedundancyPtrOutput() AzureStorageRedundancyPtrOutput
	ToAzureStorageRedundancyPtrOutputWithContext(context.Context) AzureStorageRedundancyPtrOutput
}

type azureStorageRedundancyPtr string

func AzureStorageRedundancyPtr(v string) AzureStorageRedundancyPtrInput {
	return (*azureStorageRedundancyPtr)(&v)
}

func (*azureStorageRedundancyPtr) ElementType() reflect.Type {
	return azureStorageRedundancyPtrType
}

func (in *azureStorageRedundancyPtr) ToAzureStorageRedundancyPtrOutput() AzureStorageRedundancyPtrOutput {
	return pulumi.ToOutput(in).(AzureStorageRedundancyPtrOutput)
}

func (in *azureStorageRedundancyPtr) ToAzureStorageRedundancyPtrOutputWithContext(ctx context.Context) AzureStorageRedundancyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureStorageRedundancyPtrOutput)
}

type AzureVmFamily string

const (
	AzureVmFamilyUnknown          = AzureVmFamily("Unknown")
	AzureVmFamily_Basic_A0_A4     = AzureVmFamily("Basic_A0_A4")
	AzureVmFamily_Standard_A0_A7  = AzureVmFamily("Standard_A0_A7")
	AzureVmFamily_Standard_A8_A11 = AzureVmFamily("Standard_A8_A11")
	AzureVmFamily_Av2_series      = AzureVmFamily("Av2_series")
	AzureVmFamily_D_series        = AzureVmFamily("D_series")
	AzureVmFamily_Dv2_series      = AzureVmFamily("Dv2_series")
	AzureVmFamily_DS_series       = AzureVmFamily("DS_series")
	AzureVmFamily_DSv2_series     = AzureVmFamily("DSv2_series")
	AzureVmFamily_F_series        = AzureVmFamily("F_series")
	AzureVmFamily_Fs_series       = AzureVmFamily("Fs_series")
	AzureVmFamily_G_series        = AzureVmFamily("G_series")
	AzureVmFamily_GS_series       = AzureVmFamily("GS_series")
	AzureVmFamily_H_series        = AzureVmFamily("H_series")
	AzureVmFamily_Ls_series       = AzureVmFamily("Ls_series")
	AzureVmFamily_Dsv3_series     = AzureVmFamily("Dsv3_series")
	AzureVmFamily_Dv3_series      = AzureVmFamily("Dv3_series")
	AzureVmFamily_Fsv2_series     = AzureVmFamily("Fsv2_series")
	AzureVmFamily_Ev3_series      = AzureVmFamily("Ev3_series")
	AzureVmFamily_Esv3_series     = AzureVmFamily("Esv3_series")
	AzureVmFamily_M_series        = AzureVmFamily("M_series")
	AzureVmFamily_DC_Series       = AzureVmFamily("DC_Series")
)

func (AzureVmFamily) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmFamily)(nil)).Elem()
}

func (e AzureVmFamily) ToAzureVmFamilyOutput() AzureVmFamilyOutput {
	return pulumi.ToOutput(e).(AzureVmFamilyOutput)
}

func (e AzureVmFamily) ToAzureVmFamilyOutputWithContext(ctx context.Context) AzureVmFamilyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureVmFamilyOutput)
}

func (e AzureVmFamily) ToAzureVmFamilyPtrOutput() AzureVmFamilyPtrOutput {
	return e.ToAzureVmFamilyPtrOutputWithContext(context.Background())
}

func (e AzureVmFamily) ToAzureVmFamilyPtrOutputWithContext(ctx context.Context) AzureVmFamilyPtrOutput {
	return AzureVmFamily(e).ToAzureVmFamilyOutputWithContext(ctx).ToAzureVmFamilyPtrOutputWithContext(ctx)
}

func (e AzureVmFamily) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureVmFamily) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureVmFamily) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureVmFamily) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureVmFamilyOutput struct{ *pulumi.OutputState }

func (AzureVmFamilyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmFamily)(nil)).Elem()
}

func (o AzureVmFamilyOutput) ToAzureVmFamilyOutput() AzureVmFamilyOutput {
	return o
}

func (o AzureVmFamilyOutput) ToAzureVmFamilyOutputWithContext(ctx context.Context) AzureVmFamilyOutput {
	return o
}

func (o AzureVmFamilyOutput) ToAzureVmFamilyPtrOutput() AzureVmFamilyPtrOutput {
	return o.ToAzureVmFamilyPtrOutputWithContext(context.Background())
}

func (o AzureVmFamilyOutput) ToAzureVmFamilyPtrOutputWithContext(ctx context.Context) AzureVmFamilyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureVmFamily) *AzureVmFamily {
		return &v
	}).(AzureVmFamilyPtrOutput)
}

func (o AzureVmFamilyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureVmFamilyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureVmFamily) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureVmFamilyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureVmFamilyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureVmFamily) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureVmFamilyPtrOutput struct{ *pulumi.OutputState }

func (AzureVmFamilyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmFamily)(nil)).Elem()
}

func (o AzureVmFamilyPtrOutput) ToAzureVmFamilyPtrOutput() AzureVmFamilyPtrOutput {
	return o
}

func (o AzureVmFamilyPtrOutput) ToAzureVmFamilyPtrOutputWithContext(ctx context.Context) AzureVmFamilyPtrOutput {
	return o
}

func (o AzureVmFamilyPtrOutput) Elem() AzureVmFamilyOutput {
	return o.ApplyT(func(v *AzureVmFamily) AzureVmFamily {
		if v != nil {
			return *v
		}
		var ret AzureVmFamily
		return ret
	}).(AzureVmFamilyOutput)
}

func (o AzureVmFamilyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureVmFamilyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureVmFamily) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureVmFamilyInput is an input type that accepts AzureVmFamilyArgs and AzureVmFamilyOutput values.
// You can construct a concrete instance of `AzureVmFamilyInput` via:
//
//          AzureVmFamilyArgs{...}
type AzureVmFamilyInput interface {
	pulumi.Input

	ToAzureVmFamilyOutput() AzureVmFamilyOutput
	ToAzureVmFamilyOutputWithContext(context.Context) AzureVmFamilyOutput
}

var azureVmFamilyPtrType = reflect.TypeOf((**AzureVmFamily)(nil)).Elem()

type AzureVmFamilyPtrInput interface {
	pulumi.Input

	ToAzureVmFamilyPtrOutput() AzureVmFamilyPtrOutput
	ToAzureVmFamilyPtrOutputWithContext(context.Context) AzureVmFamilyPtrOutput
}

type azureVmFamilyPtr string

func AzureVmFamilyPtr(v string) AzureVmFamilyPtrInput {
	return (*azureVmFamilyPtr)(&v)
}

func (*azureVmFamilyPtr) ElementType() reflect.Type {
	return azureVmFamilyPtrType
}

func (in *azureVmFamilyPtr) ToAzureVmFamilyPtrOutput() AzureVmFamilyPtrOutput {
	return pulumi.ToOutput(in).(AzureVmFamilyPtrOutput)
}

func (in *azureVmFamilyPtr) ToAzureVmFamilyPtrOutputWithContext(ctx context.Context) AzureVmFamilyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureVmFamilyPtrOutput)
}

type Currency string

const (
	CurrencyUnknown = Currency("Unknown")
	CurrencyUSD     = Currency("USD")
	CurrencyDKK     = Currency("DKK")
	CurrencyCAD     = Currency("CAD")
	CurrencyIDR     = Currency("IDR")
	CurrencyJPY     = Currency("JPY")
	CurrencyKRW     = Currency("KRW")
	CurrencyNZD     = Currency("NZD")
	CurrencyNOK     = Currency("NOK")
	CurrencyRUB     = Currency("RUB")
	CurrencySAR     = Currency("SAR")
	CurrencyZAR     = Currency("ZAR")
	CurrencySEK     = Currency("SEK")
	CurrencyTRY     = Currency("TRY")
	CurrencyGBP     = Currency("GBP")
	CurrencyMXN     = Currency("MXN")
	CurrencyMYR     = Currency("MYR")
	CurrencyINR     = Currency("INR")
	CurrencyHKD     = Currency("HKD")
	CurrencyBRL     = Currency("BRL")
	CurrencyTWD     = Currency("TWD")
	CurrencyEUR     = Currency("EUR")
	CurrencyCHF     = Currency("CHF")
	CurrencyARS     = Currency("ARS")
	CurrencyAUD     = Currency("AUD")
	CurrencyCNY     = Currency("CNY")
)

func (Currency) ElementType() reflect.Type {
	return reflect.TypeOf((*Currency)(nil)).Elem()
}

func (e Currency) ToCurrencyOutput() CurrencyOutput {
	return pulumi.ToOutput(e).(CurrencyOutput)
}

func (e Currency) ToCurrencyOutputWithContext(ctx context.Context) CurrencyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CurrencyOutput)
}

func (e Currency) ToCurrencyPtrOutput() CurrencyPtrOutput {
	return e.ToCurrencyPtrOutputWithContext(context.Background())
}

func (e Currency) ToCurrencyPtrOutputWithContext(ctx context.Context) CurrencyPtrOutput {
	return Currency(e).ToCurrencyOutputWithContext(ctx).ToCurrencyPtrOutputWithContext(ctx)
}

func (e Currency) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Currency) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Currency) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Currency) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CurrencyOutput struct{ *pulumi.OutputState }

func (CurrencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Currency)(nil)).Elem()
}

func (o CurrencyOutput) ToCurrencyOutput() CurrencyOutput {
	return o
}

func (o CurrencyOutput) ToCurrencyOutputWithContext(ctx context.Context) CurrencyOutput {
	return o
}

func (o CurrencyOutput) ToCurrencyPtrOutput() CurrencyPtrOutput {
	return o.ToCurrencyPtrOutputWithContext(context.Background())
}

func (o CurrencyOutput) ToCurrencyPtrOutputWithContext(ctx context.Context) CurrencyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Currency) *Currency {
		return &v
	}).(CurrencyPtrOutput)
}

func (o CurrencyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CurrencyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Currency) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CurrencyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CurrencyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Currency) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CurrencyPtrOutput struct{ *pulumi.OutputState }

func (CurrencyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Currency)(nil)).Elem()
}

func (o CurrencyPtrOutput) ToCurrencyPtrOutput() CurrencyPtrOutput {
	return o
}

func (o CurrencyPtrOutput) ToCurrencyPtrOutputWithContext(ctx context.Context) CurrencyPtrOutput {
	return o
}

func (o CurrencyPtrOutput) Elem() CurrencyOutput {
	return o.ApplyT(func(v *Currency) Currency {
		if v != nil {
			return *v
		}
		var ret Currency
		return ret
	}).(CurrencyOutput)
}

func (o CurrencyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CurrencyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Currency) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CurrencyInput is an input type that accepts CurrencyArgs and CurrencyOutput values.
// You can construct a concrete instance of `CurrencyInput` via:
//
//          CurrencyArgs{...}
type CurrencyInput interface {
	pulumi.Input

	ToCurrencyOutput() CurrencyOutput
	ToCurrencyOutputWithContext(context.Context) CurrencyOutput
}

var currencyPtrType = reflect.TypeOf((**Currency)(nil)).Elem()

type CurrencyPtrInput interface {
	pulumi.Input

	ToCurrencyPtrOutput() CurrencyPtrOutput
	ToCurrencyPtrOutputWithContext(context.Context) CurrencyPtrOutput
}

type currencyPtr string

func CurrencyPtr(v string) CurrencyPtrInput {
	return (*currencyPtr)(&v)
}

func (*currencyPtr) ElementType() reflect.Type {
	return currencyPtrType
}

func (in *currencyPtr) ToCurrencyPtrOutput() CurrencyPtrOutput {
	return pulumi.ToOutput(in).(CurrencyPtrOutput)
}

func (in *currencyPtr) ToCurrencyPtrOutputWithContext(ctx context.Context) CurrencyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CurrencyPtrOutput)
}

type Percentile string

const (
	PercentilePercentile50 = Percentile("Percentile50")
	PercentilePercentile90 = Percentile("Percentile90")
	PercentilePercentile95 = Percentile("Percentile95")
	PercentilePercentile99 = Percentile("Percentile99")
)

func (Percentile) ElementType() reflect.Type {
	return reflect.TypeOf((*Percentile)(nil)).Elem()
}

func (e Percentile) ToPercentileOutput() PercentileOutput {
	return pulumi.ToOutput(e).(PercentileOutput)
}

func (e Percentile) ToPercentileOutputWithContext(ctx context.Context) PercentileOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PercentileOutput)
}

func (e Percentile) ToPercentilePtrOutput() PercentilePtrOutput {
	return e.ToPercentilePtrOutputWithContext(context.Background())
}

func (e Percentile) ToPercentilePtrOutputWithContext(ctx context.Context) PercentilePtrOutput {
	return Percentile(e).ToPercentileOutputWithContext(ctx).ToPercentilePtrOutputWithContext(ctx)
}

func (e Percentile) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Percentile) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Percentile) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Percentile) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PercentileOutput struct{ *pulumi.OutputState }

func (PercentileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Percentile)(nil)).Elem()
}

func (o PercentileOutput) ToPercentileOutput() PercentileOutput {
	return o
}

func (o PercentileOutput) ToPercentileOutputWithContext(ctx context.Context) PercentileOutput {
	return o
}

func (o PercentileOutput) ToPercentilePtrOutput() PercentilePtrOutput {
	return o.ToPercentilePtrOutputWithContext(context.Background())
}

func (o PercentileOutput) ToPercentilePtrOutputWithContext(ctx context.Context) PercentilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Percentile) *Percentile {
		return &v
	}).(PercentilePtrOutput)
}

func (o PercentileOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PercentileOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Percentile) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PercentileOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PercentileOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Percentile) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PercentilePtrOutput struct{ *pulumi.OutputState }

func (PercentilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Percentile)(nil)).Elem()
}

func (o PercentilePtrOutput) ToPercentilePtrOutput() PercentilePtrOutput {
	return o
}

func (o PercentilePtrOutput) ToPercentilePtrOutputWithContext(ctx context.Context) PercentilePtrOutput {
	return o
}

func (o PercentilePtrOutput) Elem() PercentileOutput {
	return o.ApplyT(func(v *Percentile) Percentile {
		if v != nil {
			return *v
		}
		var ret Percentile
		return ret
	}).(PercentileOutput)
}

func (o PercentilePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PercentilePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Percentile) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PercentileInput is an input type that accepts PercentileArgs and PercentileOutput values.
// You can construct a concrete instance of `PercentileInput` via:
//
//          PercentileArgs{...}
type PercentileInput interface {
	pulumi.Input

	ToPercentileOutput() PercentileOutput
	ToPercentileOutputWithContext(context.Context) PercentileOutput
}

var percentilePtrType = reflect.TypeOf((**Percentile)(nil)).Elem()

type PercentilePtrInput interface {
	pulumi.Input

	ToPercentilePtrOutput() PercentilePtrOutput
	ToPercentilePtrOutputWithContext(context.Context) PercentilePtrOutput
}

type percentilePtr string

func PercentilePtr(v string) PercentilePtrInput {
	return (*percentilePtr)(&v)
}

func (*percentilePtr) ElementType() reflect.Type {
	return percentilePtrType
}

func (in *percentilePtr) ToPercentilePtrOutput() PercentilePtrOutput {
	return pulumi.ToOutput(in).(PercentilePtrOutput)
}

func (in *percentilePtr) ToPercentilePtrOutputWithContext(ctx context.Context) PercentilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PercentilePtrOutput)
}

type ProjectStatus string

const (
	ProjectStatusActive   = ProjectStatus("Active")
	ProjectStatusInactive = ProjectStatus("Inactive")
)

func (ProjectStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatus)(nil)).Elem()
}

func (e ProjectStatus) ToProjectStatusOutput() ProjectStatusOutput {
	return pulumi.ToOutput(e).(ProjectStatusOutput)
}

func (e ProjectStatus) ToProjectStatusOutputWithContext(ctx context.Context) ProjectStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProjectStatusOutput)
}

func (e ProjectStatus) ToProjectStatusPtrOutput() ProjectStatusPtrOutput {
	return e.ToProjectStatusPtrOutputWithContext(context.Background())
}

func (e ProjectStatus) ToProjectStatusPtrOutputWithContext(ctx context.Context) ProjectStatusPtrOutput {
	return ProjectStatus(e).ToProjectStatusOutputWithContext(ctx).ToProjectStatusPtrOutputWithContext(ctx)
}

func (e ProjectStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProjectStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProjectStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProjectStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProjectStatusOutput struct{ *pulumi.OutputState }

func (ProjectStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectStatus)(nil)).Elem()
}

func (o ProjectStatusOutput) ToProjectStatusOutput() ProjectStatusOutput {
	return o
}

func (o ProjectStatusOutput) ToProjectStatusOutputWithContext(ctx context.Context) ProjectStatusOutput {
	return o
}

func (o ProjectStatusOutput) ToProjectStatusPtrOutput() ProjectStatusPtrOutput {
	return o.ToProjectStatusPtrOutputWithContext(context.Background())
}

func (o ProjectStatusOutput) ToProjectStatusPtrOutputWithContext(ctx context.Context) ProjectStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectStatus) *ProjectStatus {
		return &v
	}).(ProjectStatusPtrOutput)
}

func (o ProjectStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProjectStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProjectStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProjectStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProjectStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProjectStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProjectStatusPtrOutput struct{ *pulumi.OutputState }

func (ProjectStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectStatus)(nil)).Elem()
}

func (o ProjectStatusPtrOutput) ToProjectStatusPtrOutput() ProjectStatusPtrOutput {
	return o
}

func (o ProjectStatusPtrOutput) ToProjectStatusPtrOutputWithContext(ctx context.Context) ProjectStatusPtrOutput {
	return o
}

func (o ProjectStatusPtrOutput) Elem() ProjectStatusOutput {
	return o.ApplyT(func(v *ProjectStatus) ProjectStatus {
		if v != nil {
			return *v
		}
		var ret ProjectStatus
		return ret
	}).(ProjectStatusOutput)
}

func (o ProjectStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProjectStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProjectStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProjectStatusInput is an input type that accepts ProjectStatusArgs and ProjectStatusOutput values.
// You can construct a concrete instance of `ProjectStatusInput` via:
//
//          ProjectStatusArgs{...}
type ProjectStatusInput interface {
	pulumi.Input

	ToProjectStatusOutput() ProjectStatusOutput
	ToProjectStatusOutputWithContext(context.Context) ProjectStatusOutput
}

var projectStatusPtrType = reflect.TypeOf((**ProjectStatus)(nil)).Elem()

type ProjectStatusPtrInput interface {
	pulumi.Input

	ToProjectStatusPtrOutput() ProjectStatusPtrOutput
	ToProjectStatusPtrOutputWithContext(context.Context) ProjectStatusPtrOutput
}

type projectStatusPtr string

func ProjectStatusPtr(v string) ProjectStatusPtrInput {
	return (*projectStatusPtr)(&v)
}

func (*projectStatusPtr) ElementType() reflect.Type {
	return projectStatusPtrType
}

func (in *projectStatusPtr) ToProjectStatusPtrOutput() ProjectStatusPtrOutput {
	return pulumi.ToOutput(in).(ProjectStatusPtrOutput)
}

func (in *projectStatusPtr) ToProjectStatusPtrOutputWithContext(ctx context.Context) ProjectStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProjectStatusPtrOutput)
}

type ProvisioningState string

const (
	ProvisioningStateAccepted  = ProvisioningState("Accepted")
	ProvisioningStateCreating  = ProvisioningState("Creating")
	ProvisioningStateDeleting  = ProvisioningState("Deleting")
	ProvisioningStateFailed    = ProvisioningState("Failed")
	ProvisioningStateMoving    = ProvisioningState("Moving")
	ProvisioningStateSucceeded = ProvisioningState("Succeeded")
)

func (ProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningState)(nil)).Elem()
}

func (e ProvisioningState) ToProvisioningStateOutput() ProvisioningStateOutput {
	return pulumi.ToOutput(e).(ProvisioningStateOutput)
}

func (e ProvisioningState) ToProvisioningStateOutputWithContext(ctx context.Context) ProvisioningStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProvisioningStateOutput)
}

func (e ProvisioningState) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return e.ToProvisioningStatePtrOutputWithContext(context.Background())
}

func (e ProvisioningState) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return ProvisioningState(e).ToProvisioningStateOutputWithContext(ctx).ToProvisioningStatePtrOutputWithContext(ctx)
}

func (e ProvisioningState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProvisioningState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProvisioningState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProvisioningState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProvisioningStateOutput struct{ *pulumi.OutputState }

func (ProvisioningStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningState)(nil)).Elem()
}

func (o ProvisioningStateOutput) ToProvisioningStateOutput() ProvisioningStateOutput {
	return o
}

func (o ProvisioningStateOutput) ToProvisioningStateOutputWithContext(ctx context.Context) ProvisioningStateOutput {
	return o
}

func (o ProvisioningStateOutput) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return o.ToProvisioningStatePtrOutputWithContext(context.Background())
}

func (o ProvisioningStateOutput) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProvisioningState) *ProvisioningState {
		return &v
	}).(ProvisioningStatePtrOutput)
}

func (o ProvisioningStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProvisioningStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProvisioningState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProvisioningStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProvisioningStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProvisioningState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProvisioningStatePtrOutput struct{ *pulumi.OutputState }

func (ProvisioningStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningState)(nil)).Elem()
}

func (o ProvisioningStatePtrOutput) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return o
}

func (o ProvisioningStatePtrOutput) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return o
}

func (o ProvisioningStatePtrOutput) Elem() ProvisioningStateOutput {
	return o.ApplyT(func(v *ProvisioningState) ProvisioningState {
		if v != nil {
			return *v
		}
		var ret ProvisioningState
		return ret
	}).(ProvisioningStateOutput)
}

func (o ProvisioningStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProvisioningStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProvisioningState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProvisioningStateInput is an input type that accepts ProvisioningStateArgs and ProvisioningStateOutput values.
// You can construct a concrete instance of `ProvisioningStateInput` via:
//
//          ProvisioningStateArgs{...}
type ProvisioningStateInput interface {
	pulumi.Input

	ToProvisioningStateOutput() ProvisioningStateOutput
	ToProvisioningStateOutputWithContext(context.Context) ProvisioningStateOutput
}

var provisioningStatePtrType = reflect.TypeOf((**ProvisioningState)(nil)).Elem()

type ProvisioningStatePtrInput interface {
	pulumi.Input

	ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput
	ToProvisioningStatePtrOutputWithContext(context.Context) ProvisioningStatePtrOutput
}

type provisioningStatePtr string

func ProvisioningStatePtr(v string) ProvisioningStatePtrInput {
	return (*provisioningStatePtr)(&v)
}

func (*provisioningStatePtr) ElementType() reflect.Type {
	return provisioningStatePtrType
}

func (in *provisioningStatePtr) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return pulumi.ToOutput(in).(ProvisioningStatePtrOutput)
}

func (in *provisioningStatePtr) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProvisioningStatePtrOutput)
}

type ReservedInstance string

const (
	ReservedInstanceNone    = ReservedInstance("None")
	ReservedInstanceRI1Year = ReservedInstance("RI1Year")
	ReservedInstanceRI3Year = ReservedInstance("RI3Year")
)

func (ReservedInstance) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservedInstance)(nil)).Elem()
}

func (e ReservedInstance) ToReservedInstanceOutput() ReservedInstanceOutput {
	return pulumi.ToOutput(e).(ReservedInstanceOutput)
}

func (e ReservedInstance) ToReservedInstanceOutputWithContext(ctx context.Context) ReservedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ReservedInstanceOutput)
}

func (e ReservedInstance) ToReservedInstancePtrOutput() ReservedInstancePtrOutput {
	return e.ToReservedInstancePtrOutputWithContext(context.Background())
}

func (e ReservedInstance) ToReservedInstancePtrOutputWithContext(ctx context.Context) ReservedInstancePtrOutput {
	return ReservedInstance(e).ToReservedInstanceOutputWithContext(ctx).ToReservedInstancePtrOutputWithContext(ctx)
}

func (e ReservedInstance) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReservedInstance) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReservedInstance) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReservedInstance) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ReservedInstanceOutput struct{ *pulumi.OutputState }

func (ReservedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservedInstance)(nil)).Elem()
}

func (o ReservedInstanceOutput) ToReservedInstanceOutput() ReservedInstanceOutput {
	return o
}

func (o ReservedInstanceOutput) ToReservedInstanceOutputWithContext(ctx context.Context) ReservedInstanceOutput {
	return o
}

func (o ReservedInstanceOutput) ToReservedInstancePtrOutput() ReservedInstancePtrOutput {
	return o.ToReservedInstancePtrOutputWithContext(context.Background())
}

func (o ReservedInstanceOutput) ToReservedInstancePtrOutputWithContext(ctx context.Context) ReservedInstancePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReservedInstance) *ReservedInstance {
		return &v
	}).(ReservedInstancePtrOutput)
}

func (o ReservedInstanceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ReservedInstanceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReservedInstance) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ReservedInstanceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReservedInstanceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReservedInstance) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ReservedInstancePtrOutput struct{ *pulumi.OutputState }

func (ReservedInstancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReservedInstance)(nil)).Elem()
}

func (o ReservedInstancePtrOutput) ToReservedInstancePtrOutput() ReservedInstancePtrOutput {
	return o
}

func (o ReservedInstancePtrOutput) ToReservedInstancePtrOutputWithContext(ctx context.Context) ReservedInstancePtrOutput {
	return o
}

func (o ReservedInstancePtrOutput) Elem() ReservedInstanceOutput {
	return o.ApplyT(func(v *ReservedInstance) ReservedInstance {
		if v != nil {
			return *v
		}
		var ret ReservedInstance
		return ret
	}).(ReservedInstanceOutput)
}

func (o ReservedInstancePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReservedInstancePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ReservedInstance) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ReservedInstanceInput is an input type that accepts ReservedInstanceArgs and ReservedInstanceOutput values.
// You can construct a concrete instance of `ReservedInstanceInput` via:
//
//          ReservedInstanceArgs{...}
type ReservedInstanceInput interface {
	pulumi.Input

	ToReservedInstanceOutput() ReservedInstanceOutput
	ToReservedInstanceOutputWithContext(context.Context) ReservedInstanceOutput
}

var reservedInstancePtrType = reflect.TypeOf((**ReservedInstance)(nil)).Elem()

type ReservedInstancePtrInput interface {
	pulumi.Input

	ToReservedInstancePtrOutput() ReservedInstancePtrOutput
	ToReservedInstancePtrOutputWithContext(context.Context) ReservedInstancePtrOutput
}

type reservedInstancePtr string

func ReservedInstancePtr(v string) ReservedInstancePtrInput {
	return (*reservedInstancePtr)(&v)
}

func (*reservedInstancePtr) ElementType() reflect.Type {
	return reservedInstancePtrType
}

func (in *reservedInstancePtr) ToReservedInstancePtrOutput() ReservedInstancePtrOutput {
	return pulumi.ToOutput(in).(ReservedInstancePtrOutput)
}

func (in *reservedInstancePtr) ToReservedInstancePtrOutputWithContext(ctx context.Context) ReservedInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ReservedInstancePtrOutput)
}

type ResourceIdentityType string

const (
	ResourceIdentityTypeNone           = ResourceIdentityType("None")
	ResourceIdentityTypeSystemAssigned = ResourceIdentityType("SystemAssigned")
	ResourceIdentityTypeUserAssigned   = ResourceIdentityType("UserAssigned")
)

func (ResourceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return e.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return ResourceIdentityType(e).ToResourceIdentityTypeOutputWithContext(ctx).ToResourceIdentityTypePtrOutputWithContext(ctx)
}

func (e ResourceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentityType) *ResourceIdentityType {
		return &v
	}).(ResourceIdentityTypePtrOutput)
}

func (o ResourceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) Elem() ResourceIdentityTypeOutput {
	return o.ApplyT(func(v *ResourceIdentityType) ResourceIdentityType {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityType
		return ret
	}).(ResourceIdentityTypeOutput)
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceIdentityTypeInput is an input type that accepts ResourceIdentityTypeArgs and ResourceIdentityTypeOutput values.
// You can construct a concrete instance of `ResourceIdentityTypeInput` via:
//
//          ResourceIdentityTypeArgs{...}
type ResourceIdentityTypeInput interface {
	pulumi.Input

	ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput
	ToResourceIdentityTypeOutputWithContext(context.Context) ResourceIdentityTypeOutput
}

var resourceIdentityTypePtrType = reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()

type ResourceIdentityTypePtrInput interface {
	pulumi.Input

	ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput
	ToResourceIdentityTypePtrOutputWithContext(context.Context) ResourceIdentityTypePtrOutput
}

type resourceIdentityTypePtr string

func ResourceIdentityTypePtr(v string) ResourceIdentityTypePtrInput {
	return (*resourceIdentityTypePtr)(&v)
}

func (*resourceIdentityTypePtr) ElementType() reflect.Type {
	return resourceIdentityTypePtrType
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ResourceIdentityTypePtrOutput)
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceIdentityTypePtrOutput)
}

type TargetAvailabilityZone string

const (
	TargetAvailabilityZoneOne   = TargetAvailabilityZone("1")
	TargetAvailabilityZoneTwo   = TargetAvailabilityZone("2")
	TargetAvailabilityZoneThree = TargetAvailabilityZone("3")
	TargetAvailabilityZoneNA    = TargetAvailabilityZone("NA")
)

func (TargetAvailabilityZone) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetAvailabilityZone)(nil)).Elem()
}

func (e TargetAvailabilityZone) ToTargetAvailabilityZoneOutput() TargetAvailabilityZoneOutput {
	return pulumi.ToOutput(e).(TargetAvailabilityZoneOutput)
}

func (e TargetAvailabilityZone) ToTargetAvailabilityZoneOutputWithContext(ctx context.Context) TargetAvailabilityZoneOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TargetAvailabilityZoneOutput)
}

func (e TargetAvailabilityZone) ToTargetAvailabilityZonePtrOutput() TargetAvailabilityZonePtrOutput {
	return e.ToTargetAvailabilityZonePtrOutputWithContext(context.Background())
}

func (e TargetAvailabilityZone) ToTargetAvailabilityZonePtrOutputWithContext(ctx context.Context) TargetAvailabilityZonePtrOutput {
	return TargetAvailabilityZone(e).ToTargetAvailabilityZoneOutputWithContext(ctx).ToTargetAvailabilityZonePtrOutputWithContext(ctx)
}

func (e TargetAvailabilityZone) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetAvailabilityZone) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetAvailabilityZone) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TargetAvailabilityZone) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TargetAvailabilityZoneOutput struct{ *pulumi.OutputState }

func (TargetAvailabilityZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetAvailabilityZone)(nil)).Elem()
}

func (o TargetAvailabilityZoneOutput) ToTargetAvailabilityZoneOutput() TargetAvailabilityZoneOutput {
	return o
}

func (o TargetAvailabilityZoneOutput) ToTargetAvailabilityZoneOutputWithContext(ctx context.Context) TargetAvailabilityZoneOutput {
	return o
}

func (o TargetAvailabilityZoneOutput) ToTargetAvailabilityZonePtrOutput() TargetAvailabilityZonePtrOutput {
	return o.ToTargetAvailabilityZonePtrOutputWithContext(context.Background())
}

func (o TargetAvailabilityZoneOutput) ToTargetAvailabilityZonePtrOutputWithContext(ctx context.Context) TargetAvailabilityZonePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetAvailabilityZone) *TargetAvailabilityZone {
		return &v
	}).(TargetAvailabilityZonePtrOutput)
}

func (o TargetAvailabilityZoneOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TargetAvailabilityZoneOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetAvailabilityZone) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TargetAvailabilityZoneOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetAvailabilityZoneOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetAvailabilityZone) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TargetAvailabilityZonePtrOutput struct{ *pulumi.OutputState }

func (TargetAvailabilityZonePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetAvailabilityZone)(nil)).Elem()
}

func (o TargetAvailabilityZonePtrOutput) ToTargetAvailabilityZonePtrOutput() TargetAvailabilityZonePtrOutput {
	return o
}

func (o TargetAvailabilityZonePtrOutput) ToTargetAvailabilityZonePtrOutputWithContext(ctx context.Context) TargetAvailabilityZonePtrOutput {
	return o
}

func (o TargetAvailabilityZonePtrOutput) Elem() TargetAvailabilityZoneOutput {
	return o.ApplyT(func(v *TargetAvailabilityZone) TargetAvailabilityZone {
		if v != nil {
			return *v
		}
		var ret TargetAvailabilityZone
		return ret
	}).(TargetAvailabilityZoneOutput)
}

func (o TargetAvailabilityZonePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetAvailabilityZonePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TargetAvailabilityZone) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TargetAvailabilityZoneInput is an input type that accepts TargetAvailabilityZoneArgs and TargetAvailabilityZoneOutput values.
// You can construct a concrete instance of `TargetAvailabilityZoneInput` via:
//
//          TargetAvailabilityZoneArgs{...}
type TargetAvailabilityZoneInput interface {
	pulumi.Input

	ToTargetAvailabilityZoneOutput() TargetAvailabilityZoneOutput
	ToTargetAvailabilityZoneOutputWithContext(context.Context) TargetAvailabilityZoneOutput
}

var targetAvailabilityZonePtrType = reflect.TypeOf((**TargetAvailabilityZone)(nil)).Elem()

type TargetAvailabilityZonePtrInput interface {
	pulumi.Input

	ToTargetAvailabilityZonePtrOutput() TargetAvailabilityZonePtrOutput
	ToTargetAvailabilityZonePtrOutputWithContext(context.Context) TargetAvailabilityZonePtrOutput
}

type targetAvailabilityZonePtr string

func TargetAvailabilityZonePtr(v string) TargetAvailabilityZonePtrInput {
	return (*targetAvailabilityZonePtr)(&v)
}

func (*targetAvailabilityZonePtr) ElementType() reflect.Type {
	return targetAvailabilityZonePtrType
}

func (in *targetAvailabilityZonePtr) ToTargetAvailabilityZonePtrOutput() TargetAvailabilityZonePtrOutput {
	return pulumi.ToOutput(in).(TargetAvailabilityZonePtrOutput)
}

func (in *targetAvailabilityZonePtr) ToTargetAvailabilityZonePtrOutputWithContext(ctx context.Context) TargetAvailabilityZonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TargetAvailabilityZonePtrOutput)
}

type TimeRange string

const (
	TimeRangeDay    = TimeRange("Day")
	TimeRangeWeek   = TimeRange("Week")
	TimeRangeMonth  = TimeRange("Month")
	TimeRangeCustom = TimeRange("Custom")
)

func (TimeRange) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeRange)(nil)).Elem()
}

func (e TimeRange) ToTimeRangeOutput() TimeRangeOutput {
	return pulumi.ToOutput(e).(TimeRangeOutput)
}

func (e TimeRange) ToTimeRangeOutputWithContext(ctx context.Context) TimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TimeRangeOutput)
}

func (e TimeRange) ToTimeRangePtrOutput() TimeRangePtrOutput {
	return e.ToTimeRangePtrOutputWithContext(context.Background())
}

func (e TimeRange) ToTimeRangePtrOutputWithContext(ctx context.Context) TimeRangePtrOutput {
	return TimeRange(e).ToTimeRangeOutputWithContext(ctx).ToTimeRangePtrOutputWithContext(ctx)
}

func (e TimeRange) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TimeRange) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TimeRange) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TimeRange) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TimeRangeOutput struct{ *pulumi.OutputState }

func (TimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeRange)(nil)).Elem()
}

func (o TimeRangeOutput) ToTimeRangeOutput() TimeRangeOutput {
	return o
}

func (o TimeRangeOutput) ToTimeRangeOutputWithContext(ctx context.Context) TimeRangeOutput {
	return o
}

func (o TimeRangeOutput) ToTimeRangePtrOutput() TimeRangePtrOutput {
	return o.ToTimeRangePtrOutputWithContext(context.Background())
}

func (o TimeRangeOutput) ToTimeRangePtrOutputWithContext(ctx context.Context) TimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TimeRange) *TimeRange {
		return &v
	}).(TimeRangePtrOutput)
}

func (o TimeRangeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TimeRangeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TimeRange) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TimeRangeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TimeRangeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TimeRange) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TimeRangePtrOutput struct{ *pulumi.OutputState }

func (TimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeRange)(nil)).Elem()
}

func (o TimeRangePtrOutput) ToTimeRangePtrOutput() TimeRangePtrOutput {
	return o
}

func (o TimeRangePtrOutput) ToTimeRangePtrOutputWithContext(ctx context.Context) TimeRangePtrOutput {
	return o
}

func (o TimeRangePtrOutput) Elem() TimeRangeOutput {
	return o.ApplyT(func(v *TimeRange) TimeRange {
		if v != nil {
			return *v
		}
		var ret TimeRange
		return ret
	}).(TimeRangeOutput)
}

func (o TimeRangePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TimeRangePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TimeRange) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TimeRangeInput is an input type that accepts TimeRangeArgs and TimeRangeOutput values.
// You can construct a concrete instance of `TimeRangeInput` via:
//
//          TimeRangeArgs{...}
type TimeRangeInput interface {
	pulumi.Input

	ToTimeRangeOutput() TimeRangeOutput
	ToTimeRangeOutputWithContext(context.Context) TimeRangeOutput
}

var timeRangePtrType = reflect.TypeOf((**TimeRange)(nil)).Elem()

type TimeRangePtrInput interface {
	pulumi.Input

	ToTimeRangePtrOutput() TimeRangePtrOutput
	ToTimeRangePtrOutputWithContext(context.Context) TimeRangePtrOutput
}

type timeRangePtr string

func TimeRangePtr(v string) TimeRangePtrInput {
	return (*timeRangePtr)(&v)
}

func (*timeRangePtr) ElementType() reflect.Type {
	return timeRangePtrType
}

func (in *timeRangePtr) ToTimeRangePtrOutput() TimeRangePtrOutput {
	return pulumi.ToOutput(in).(TimeRangePtrOutput)
}

func (in *timeRangePtr) ToTimeRangePtrOutputWithContext(ctx context.Context) TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TimeRangePtrOutput)
}

type ZoneRedundant string

const (
	ZoneRedundantEnable  = ZoneRedundant("Enable")
	ZoneRedundantDisable = ZoneRedundant("Disable")
)

func (ZoneRedundant) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneRedundant)(nil)).Elem()
}

func (e ZoneRedundant) ToZoneRedundantOutput() ZoneRedundantOutput {
	return pulumi.ToOutput(e).(ZoneRedundantOutput)
}

func (e ZoneRedundant) ToZoneRedundantOutputWithContext(ctx context.Context) ZoneRedundantOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ZoneRedundantOutput)
}

func (e ZoneRedundant) ToZoneRedundantPtrOutput() ZoneRedundantPtrOutput {
	return e.ToZoneRedundantPtrOutputWithContext(context.Background())
}

func (e ZoneRedundant) ToZoneRedundantPtrOutputWithContext(ctx context.Context) ZoneRedundantPtrOutput {
	return ZoneRedundant(e).ToZoneRedundantOutputWithContext(ctx).ToZoneRedundantPtrOutputWithContext(ctx)
}

func (e ZoneRedundant) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ZoneRedundant) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ZoneRedundant) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ZoneRedundant) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ZoneRedundantOutput struct{ *pulumi.OutputState }

func (ZoneRedundantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneRedundant)(nil)).Elem()
}

func (o ZoneRedundantOutput) ToZoneRedundantOutput() ZoneRedundantOutput {
	return o
}

func (o ZoneRedundantOutput) ToZoneRedundantOutputWithContext(ctx context.Context) ZoneRedundantOutput {
	return o
}

func (o ZoneRedundantOutput) ToZoneRedundantPtrOutput() ZoneRedundantPtrOutput {
	return o.ToZoneRedundantPtrOutputWithContext(context.Background())
}

func (o ZoneRedundantOutput) ToZoneRedundantPtrOutputWithContext(ctx context.Context) ZoneRedundantPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneRedundant) *ZoneRedundant {
		return &v
	}).(ZoneRedundantPtrOutput)
}

func (o ZoneRedundantOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ZoneRedundantOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ZoneRedundant) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ZoneRedundantOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ZoneRedundantOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ZoneRedundant) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ZoneRedundantPtrOutput struct{ *pulumi.OutputState }

func (ZoneRedundantPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneRedundant)(nil)).Elem()
}

func (o ZoneRedundantPtrOutput) ToZoneRedundantPtrOutput() ZoneRedundantPtrOutput {
	return o
}

func (o ZoneRedundantPtrOutput) ToZoneRedundantPtrOutputWithContext(ctx context.Context) ZoneRedundantPtrOutput {
	return o
}

func (o ZoneRedundantPtrOutput) Elem() ZoneRedundantOutput {
	return o.ApplyT(func(v *ZoneRedundant) ZoneRedundant {
		if v != nil {
			return *v
		}
		var ret ZoneRedundant
		return ret
	}).(ZoneRedundantOutput)
}

func (o ZoneRedundantPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ZoneRedundantPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ZoneRedundant) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ZoneRedundantInput is an input type that accepts ZoneRedundantArgs and ZoneRedundantOutput values.
// You can construct a concrete instance of `ZoneRedundantInput` via:
//
//          ZoneRedundantArgs{...}
type ZoneRedundantInput interface {
	pulumi.Input

	ToZoneRedundantOutput() ZoneRedundantOutput
	ToZoneRedundantOutputWithContext(context.Context) ZoneRedundantOutput
}

var zoneRedundantPtrType = reflect.TypeOf((**ZoneRedundant)(nil)).Elem()

type ZoneRedundantPtrInput interface {
	pulumi.Input

	ToZoneRedundantPtrOutput() ZoneRedundantPtrOutput
	ToZoneRedundantPtrOutputWithContext(context.Context) ZoneRedundantPtrOutput
}

type zoneRedundantPtr string

func ZoneRedundantPtr(v string) ZoneRedundantPtrInput {
	return (*zoneRedundantPtr)(&v)
}

func (*zoneRedundantPtr) ElementType() reflect.Type {
	return zoneRedundantPtrType
}

func (in *zoneRedundantPtr) ToZoneRedundantPtrOutput() ZoneRedundantPtrOutput {
	return pulumi.ToOutput(in).(ZoneRedundantPtrOutput)
}

func (in *zoneRedundantPtr) ToZoneRedundantPtrOutputWithContext(ctx context.Context) ZoneRedundantPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ZoneRedundantPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AssessmentSizingCriterionOutput{})
	pulumi.RegisterOutputType(AssessmentSizingCriterionPtrOutput{})
	pulumi.RegisterOutputType(AssessmentStageOutput{})
	pulumi.RegisterOutputType(AssessmentStagePtrOutput{})
	pulumi.RegisterOutputType(AzureDiskTypeOutput{})
	pulumi.RegisterOutputType(AzureDiskTypePtrOutput{})
	pulumi.RegisterOutputType(AzureHybridUseBenefitOutput{})
	pulumi.RegisterOutputType(AzureHybridUseBenefitPtrOutput{})
	pulumi.RegisterOutputType(AzureLocationOutput{})
	pulumi.RegisterOutputType(AzureLocationPtrOutput{})
	pulumi.RegisterOutputType(AzureOfferCodeOutput{})
	pulumi.RegisterOutputType(AzureOfferCodePtrOutput{})
	pulumi.RegisterOutputType(AzurePricingTierOutput{})
	pulumi.RegisterOutputType(AzurePricingTierPtrOutput{})
	pulumi.RegisterOutputType(AzureStorageRedundancyOutput{})
	pulumi.RegisterOutputType(AzureStorageRedundancyPtrOutput{})
	pulumi.RegisterOutputType(AzureVmFamilyOutput{})
	pulumi.RegisterOutputType(AzureVmFamilyPtrOutput{})
	pulumi.RegisterOutputType(CurrencyOutput{})
	pulumi.RegisterOutputType(CurrencyPtrOutput{})
	pulumi.RegisterOutputType(PercentileOutput{})
	pulumi.RegisterOutputType(PercentilePtrOutput{})
	pulumi.RegisterOutputType(ProjectStatusOutput{})
	pulumi.RegisterOutputType(ProjectStatusPtrOutput{})
	pulumi.RegisterOutputType(ProvisioningStateOutput{})
	pulumi.RegisterOutputType(ProvisioningStatePtrOutput{})
	pulumi.RegisterOutputType(ReservedInstanceOutput{})
	pulumi.RegisterOutputType(ReservedInstancePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(TargetAvailabilityZoneOutput{})
	pulumi.RegisterOutputType(TargetAvailabilityZonePtrOutput{})
	pulumi.RegisterOutputType(TimeRangeOutput{})
	pulumi.RegisterOutputType(TimeRangePtrOutput{})
	pulumi.RegisterOutputType(ZoneRedundantOutput{})
	pulumi.RegisterOutputType(ZoneRedundantPtrOutput{})
}
