// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hybridnetwork

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Network function resource response.
// API Version: 2020-01-01-preview.
type NetworkFunction struct {
	pulumi.CustomResourceState

	// The reference to the device resource.
	Device SubResourceResponsePtrOutput `pulumi:"device"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The resource URI of the managed application.
	ManagedApplication SubResourceResponseOutput `pulumi:"managedApplication"`
	// The parameters for the managed application.
	ManagedApplicationParameters pulumi.AnyOutput `pulumi:"managedApplicationParameters"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The network function configurations from the user.
	NetworkFunctionUserConfigurations NetworkFunctionUserConfigurationResponseArrayOutput `pulumi:"networkFunctionUserConfigurations"`
	// The provisioning state of the network function resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The service key for the network function resource.
	ServiceKey pulumi.StringOutput `pulumi:"serviceKey"`
	// The sku name for the network function.
	SkuName pulumi.StringPtrOutput `pulumi:"skuName"`
	// The sku type for the network function.
	SkuType pulumi.StringOutput `pulumi:"skuType"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// The vendor name for the network function.
	VendorName pulumi.StringPtrOutput `pulumi:"vendorName"`
	// The vendor provisioning state for the network function resource.
	VendorProvisioningState pulumi.StringOutput `pulumi:"vendorProvisioningState"`
}

// NewNetworkFunction registers a new resource with the given unique name, arguments, and options.
func NewNetworkFunction(ctx *pulumi.Context,
	name string, args *NetworkFunctionArgs, opts ...pulumi.ResourceOption) (*NetworkFunction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:hybridnetwork/v20200101preview:NetworkFunction"),
		},
		{
			Type: pulumi.String("azure-native:hybridnetwork/v20210501:NetworkFunction"),
		},
		{
			Type: pulumi.String("azure-native:hybridnetwork/v20220101preview:NetworkFunction"),
		},
	})
	opts = append(opts, aliases)
	var resource NetworkFunction
	err := ctx.RegisterResource("azure-native:hybridnetwork:NetworkFunction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkFunction gets an existing NetworkFunction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkFunction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkFunctionState, opts ...pulumi.ResourceOption) (*NetworkFunction, error) {
	var resource NetworkFunction
	err := ctx.ReadResource("azure-native:hybridnetwork:NetworkFunction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkFunction resources.
type networkFunctionState struct {
}

type NetworkFunctionState struct {
}

func (NetworkFunctionState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFunctionState)(nil)).Elem()
}

type networkFunctionArgs struct {
	// The reference to the device resource.
	Device *SubResource `pulumi:"device"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The parameters for the managed application.
	ManagedApplicationParameters interface{} `pulumi:"managedApplicationParameters"`
	// Resource name for the network function resource.
	NetworkFunctionName *string `pulumi:"networkFunctionName"`
	// The network function configurations from the user.
	NetworkFunctionUserConfigurations []NetworkFunctionUserConfiguration `pulumi:"networkFunctionUserConfigurations"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The sku name for the network function.
	SkuName *string `pulumi:"skuName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The vendor name for the network function.
	VendorName *string `pulumi:"vendorName"`
}

// The set of arguments for constructing a NetworkFunction resource.
type NetworkFunctionArgs struct {
	// The reference to the device resource.
	Device SubResourcePtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The parameters for the managed application.
	ManagedApplicationParameters pulumi.Input
	// Resource name for the network function resource.
	NetworkFunctionName pulumi.StringPtrInput
	// The network function configurations from the user.
	NetworkFunctionUserConfigurations NetworkFunctionUserConfigurationArrayInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The sku name for the network function.
	SkuName pulumi.StringPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The vendor name for the network function.
	VendorName pulumi.StringPtrInput
}

func (NetworkFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkFunctionArgs)(nil)).Elem()
}

type NetworkFunctionInput interface {
	pulumi.Input

	ToNetworkFunctionOutput() NetworkFunctionOutput
	ToNetworkFunctionOutputWithContext(ctx context.Context) NetworkFunctionOutput
}

func (*NetworkFunction) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFunction)(nil)).Elem()
}

func (i *NetworkFunction) ToNetworkFunctionOutput() NetworkFunctionOutput {
	return i.ToNetworkFunctionOutputWithContext(context.Background())
}

func (i *NetworkFunction) ToNetworkFunctionOutputWithContext(ctx context.Context) NetworkFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkFunctionOutput)
}

type NetworkFunctionOutput struct{ *pulumi.OutputState }

func (NetworkFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFunction)(nil)).Elem()
}

func (o NetworkFunctionOutput) ToNetworkFunctionOutput() NetworkFunctionOutput {
	return o
}

func (o NetworkFunctionOutput) ToNetworkFunctionOutputWithContext(ctx context.Context) NetworkFunctionOutput {
	return o
}

// The reference to the device resource.
func (o NetworkFunctionOutput) Device() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *NetworkFunction) SubResourceResponsePtrOutput { return v.Device }).(SubResourceResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkFunctionOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringPtrOutput { return v.Etag }).(pulumi.StringPtrOutput)
}

// The geo-location where the resource lives
func (o NetworkFunctionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource URI of the managed application.
func (o NetworkFunctionOutput) ManagedApplication() SubResourceResponseOutput {
	return o.ApplyT(func(v *NetworkFunction) SubResourceResponseOutput { return v.ManagedApplication }).(SubResourceResponseOutput)
}

// The parameters for the managed application.
func (o NetworkFunctionOutput) ManagedApplicationParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.AnyOutput { return v.ManagedApplicationParameters }).(pulumi.AnyOutput)
}

// The name of the resource
func (o NetworkFunctionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The network function configurations from the user.
func (o NetworkFunctionOutput) NetworkFunctionUserConfigurations() NetworkFunctionUserConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *NetworkFunction) NetworkFunctionUserConfigurationResponseArrayOutput {
		return v.NetworkFunctionUserConfigurations
	}).(NetworkFunctionUserConfigurationResponseArrayOutput)
}

// The provisioning state of the network function resource.
func (o NetworkFunctionOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The service key for the network function resource.
func (o NetworkFunctionOutput) ServiceKey() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringOutput { return v.ServiceKey }).(pulumi.StringOutput)
}

// The sku name for the network function.
func (o NetworkFunctionOutput) SkuName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringPtrOutput { return v.SkuName }).(pulumi.StringPtrOutput)
}

// The sku type for the network function.
func (o NetworkFunctionOutput) SkuType() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringOutput { return v.SkuType }).(pulumi.StringOutput)
}

// Resource tags.
func (o NetworkFunctionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o NetworkFunctionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The vendor name for the network function.
func (o NetworkFunctionOutput) VendorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringPtrOutput { return v.VendorName }).(pulumi.StringPtrOutput)
}

// The vendor provisioning state for the network function resource.
func (o NetworkFunctionOutput) VendorProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkFunction) pulumi.StringOutput { return v.VendorProvisioningState }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(NetworkFunctionOutput{})
}
