// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200101preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Device resource.
type Device struct {
	pulumi.CustomResourceState

	// The reference to the Azure stack edge device.
	AzureStackEdge SubResourceResponsePtrOutput `pulumi:"azureStackEdge"`
	// The type of the device.
	DeviceType pulumi.StringOutput `pulumi:"deviceType"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The list of network functions deployed on the device.
	NetworkFunctions SubResourceResponseArrayOutput `pulumi:"networkFunctions"`
	// The provisioning state of the device resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The current device status.
	Status pulumi.StringOutput `pulumi:"status"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDevice registers a new resource with the given unique name, arguments, and options.
func NewDevice(ctx *pulumi.Context,
	name string, args *DeviceArgs, opts ...pulumi.ResourceOption) (*Device, error) {
	if args == nil || args.DeviceName == nil {
		return nil, errors.New("missing required argument 'DeviceName'")
	}
	if args == nil || args.DeviceType == nil {
		return nil, errors.New("missing required argument 'DeviceType'")
	}
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &DeviceArgs{}
	}
	var resource Device
	err := ctx.RegisterResource("azure-nextgen:hybridnetwork/v20200101preview:Device", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDevice gets an existing Device resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDevice(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeviceState, opts ...pulumi.ResourceOption) (*Device, error) {
	var resource Device
	err := ctx.ReadResource("azure-nextgen:hybridnetwork/v20200101preview:Device", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Device resources.
type deviceState struct {
	// The reference to the Azure stack edge device.
	AzureStackEdge *SubResourceResponse `pulumi:"azureStackEdge"`
	// The type of the device.
	DeviceType *string `pulumi:"deviceType"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// The list of network functions deployed on the device.
	NetworkFunctions []SubResourceResponse `pulumi:"networkFunctions"`
	// The provisioning state of the device resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The current device status.
	Status *string `pulumi:"status"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `pulumi:"type"`
}

type DeviceState struct {
	// The reference to the Azure stack edge device.
	AzureStackEdge SubResourceResponsePtrInput
	// The type of the device.
	DeviceType pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource
	Name pulumi.StringPtrInput
	// The list of network functions deployed on the device.
	NetworkFunctions SubResourceResponseArrayInput
	// The provisioning state of the device resource.
	ProvisioningState pulumi.StringPtrInput
	// The current device status.
	Status pulumi.StringPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringPtrInput
}

func (DeviceState) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceState)(nil)).Elem()
}

type deviceArgs struct {
	// The reference to the Azure stack edge device.
	AzureStackEdge *SubResource `pulumi:"azureStackEdge"`
	// Resource name for the device resource.
	DeviceName string `pulumi:"deviceName"`
	// The type of the device.
	DeviceType string `pulumi:"deviceType"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Device resource.
type DeviceArgs struct {
	// The reference to the Azure stack edge device.
	AzureStackEdge SubResourcePtrInput
	// Resource name for the device resource.
	DeviceName pulumi.StringInput
	// The type of the device.
	DeviceType pulumi.StringInput
	// The geo-location where the resource lives
	Location pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (DeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceArgs)(nil)).Elem()
}
