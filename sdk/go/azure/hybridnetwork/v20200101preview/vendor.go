// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200101preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Vendor resource.
type Vendor struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The provisioning state of the vendor resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// A list of IDs of the vendor skus offered by the vendor.
	Skus SubResourceResponseArrayOutput `pulumi:"skus"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewVendor registers a new resource with the given unique name, arguments, and options.
func NewVendor(ctx *pulumi.Context,
	name string, args *VendorArgs, opts ...pulumi.ResourceOption) (*Vendor, error) {
	if args == nil || args.VendorName == nil {
		return nil, errors.New("missing required argument 'VendorName'")
	}
	if args == nil {
		args = &VendorArgs{}
	}
	var resource Vendor
	err := ctx.RegisterResource("azure-nextgen:hybridnetwork/v20200101preview:Vendor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVendor gets an existing Vendor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVendor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VendorState, opts ...pulumi.ResourceOption) (*Vendor, error) {
	var resource Vendor
	err := ctx.ReadResource("azure-nextgen:hybridnetwork/v20200101preview:Vendor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Vendor resources.
type vendorState struct {
	// The name of the resource
	Name *string `pulumi:"name"`
	// The provisioning state of the vendor resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// A list of IDs of the vendor skus offered by the vendor.
	Skus []SubResourceResponse `pulumi:"skus"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `pulumi:"type"`
}

type VendorState struct {
	// The name of the resource
	Name pulumi.StringPtrInput
	// The provisioning state of the vendor resource.
	ProvisioningState pulumi.StringPtrInput
	// A list of IDs of the vendor skus offered by the vendor.
	Skus SubResourceResponseArrayInput
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringPtrInput
}

func (VendorState) ElementType() reflect.Type {
	return reflect.TypeOf((*vendorState)(nil)).Elem()
}

type vendorArgs struct {
	// The name of the vendor.
	VendorName string `pulumi:"vendorName"`
}

// The set of arguments for constructing a Vendor resource.
type VendorArgs struct {
	// The name of the vendor.
	VendorName pulumi.StringInput
}

func (VendorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vendorArgs)(nil)).Elem()
}
