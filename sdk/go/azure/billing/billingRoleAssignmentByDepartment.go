// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package billing

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The role assignment
// API Version: 2019-10-01-preview.
type BillingRoleAssignmentByDepartment struct {
	pulumi.CustomResourceState

	// The principal Id of the user who created the role assignment.
	CreatedByPrincipalId pulumi.StringOutput `pulumi:"createdByPrincipalId"`
	// The tenant Id of the user who created the role assignment.
	CreatedByPrincipalTenantId pulumi.StringOutput `pulumi:"createdByPrincipalTenantId"`
	// The email address of the user who created the role assignment. This is supported only for billing accounts with agreement type Enterprise Agreement.
	CreatedByUserEmailAddress pulumi.StringOutput `pulumi:"createdByUserEmailAddress"`
	// The date the role assignment was created.
	CreatedOn pulumi.StringOutput `pulumi:"createdOn"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The principal id of the user to whom the role was assigned.
	PrincipalId pulumi.StringPtrOutput `pulumi:"principalId"`
	// The principal tenant id of the user to whom the role was assigned.
	PrincipalTenantId pulumi.StringPtrOutput `pulumi:"principalTenantId"`
	// The ID of the role definition.
	RoleDefinitionId pulumi.StringPtrOutput `pulumi:"roleDefinitionId"`
	// The scope at which the role was assigned.
	Scope pulumi.StringOutput `pulumi:"scope"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
	// The authentication type of the user, whether Organization or MSA, of the user to whom the role was assigned. This is supported only for billing accounts with agreement type Enterprise Agreement.
	UserAuthenticationType pulumi.StringPtrOutput `pulumi:"userAuthenticationType"`
	// The email address of the user to whom the role was assigned. This is supported only for billing accounts with agreement type Enterprise Agreement.
	UserEmailAddress pulumi.StringPtrOutput `pulumi:"userEmailAddress"`
}

// NewBillingRoleAssignmentByDepartment registers a new resource with the given unique name, arguments, and options.
func NewBillingRoleAssignmentByDepartment(ctx *pulumi.Context,
	name string, args *BillingRoleAssignmentByDepartmentArgs, opts ...pulumi.ResourceOption) (*BillingRoleAssignmentByDepartment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BillingAccountName == nil {
		return nil, errors.New("invalid value for required argument 'BillingAccountName'")
	}
	if args.DepartmentName == nil {
		return nil, errors.New("invalid value for required argument 'DepartmentName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:billing/v20191001preview:BillingRoleAssignmentByDepartment"),
		},
	})
	opts = append(opts, aliases)
	var resource BillingRoleAssignmentByDepartment
	err := ctx.RegisterResource("azure-native:billing:BillingRoleAssignmentByDepartment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBillingRoleAssignmentByDepartment gets an existing BillingRoleAssignmentByDepartment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBillingRoleAssignmentByDepartment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BillingRoleAssignmentByDepartmentState, opts ...pulumi.ResourceOption) (*BillingRoleAssignmentByDepartment, error) {
	var resource BillingRoleAssignmentByDepartment
	err := ctx.ReadResource("azure-native:billing:BillingRoleAssignmentByDepartment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BillingRoleAssignmentByDepartment resources.
type billingRoleAssignmentByDepartmentState struct {
}

type BillingRoleAssignmentByDepartmentState struct {
}

func (BillingRoleAssignmentByDepartmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*billingRoleAssignmentByDepartmentState)(nil)).Elem()
}

type billingRoleAssignmentByDepartmentArgs struct {
	// The ID that uniquely identifies a billing account.
	BillingAccountName string `pulumi:"billingAccountName"`
	// The ID that uniquely identifies a role assignment.
	BillingRoleAssignmentName *string `pulumi:"billingRoleAssignmentName"`
	// The ID that uniquely identifies a department.
	DepartmentName string `pulumi:"departmentName"`
	// The principal id of the user to whom the role was assigned.
	PrincipalId *string `pulumi:"principalId"`
	// The principal tenant id of the user to whom the role was assigned.
	PrincipalTenantId *string `pulumi:"principalTenantId"`
	// The ID of the role definition.
	RoleDefinitionId *string `pulumi:"roleDefinitionId"`
	// The authentication type of the user, whether Organization or MSA, of the user to whom the role was assigned. This is supported only for billing accounts with agreement type Enterprise Agreement.
	UserAuthenticationType *string `pulumi:"userAuthenticationType"`
	// The email address of the user to whom the role was assigned. This is supported only for billing accounts with agreement type Enterprise Agreement.
	UserEmailAddress *string `pulumi:"userEmailAddress"`
}

// The set of arguments for constructing a BillingRoleAssignmentByDepartment resource.
type BillingRoleAssignmentByDepartmentArgs struct {
	// The ID that uniquely identifies a billing account.
	BillingAccountName pulumi.StringInput
	// The ID that uniquely identifies a role assignment.
	BillingRoleAssignmentName pulumi.StringPtrInput
	// The ID that uniquely identifies a department.
	DepartmentName pulumi.StringInput
	// The principal id of the user to whom the role was assigned.
	PrincipalId pulumi.StringPtrInput
	// The principal tenant id of the user to whom the role was assigned.
	PrincipalTenantId pulumi.StringPtrInput
	// The ID of the role definition.
	RoleDefinitionId pulumi.StringPtrInput
	// The authentication type of the user, whether Organization or MSA, of the user to whom the role was assigned. This is supported only for billing accounts with agreement type Enterprise Agreement.
	UserAuthenticationType pulumi.StringPtrInput
	// The email address of the user to whom the role was assigned. This is supported only for billing accounts with agreement type Enterprise Agreement.
	UserEmailAddress pulumi.StringPtrInput
}

func (BillingRoleAssignmentByDepartmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*billingRoleAssignmentByDepartmentArgs)(nil)).Elem()
}

type BillingRoleAssignmentByDepartmentInput interface {
	pulumi.Input

	ToBillingRoleAssignmentByDepartmentOutput() BillingRoleAssignmentByDepartmentOutput
	ToBillingRoleAssignmentByDepartmentOutputWithContext(ctx context.Context) BillingRoleAssignmentByDepartmentOutput
}

func (*BillingRoleAssignmentByDepartment) ElementType() reflect.Type {
	return reflect.TypeOf((**BillingRoleAssignmentByDepartment)(nil)).Elem()
}

func (i *BillingRoleAssignmentByDepartment) ToBillingRoleAssignmentByDepartmentOutput() BillingRoleAssignmentByDepartmentOutput {
	return i.ToBillingRoleAssignmentByDepartmentOutputWithContext(context.Background())
}

func (i *BillingRoleAssignmentByDepartment) ToBillingRoleAssignmentByDepartmentOutputWithContext(ctx context.Context) BillingRoleAssignmentByDepartmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingRoleAssignmentByDepartmentOutput)
}

type BillingRoleAssignmentByDepartmentOutput struct{ *pulumi.OutputState }

func (BillingRoleAssignmentByDepartmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BillingRoleAssignmentByDepartment)(nil)).Elem()
}

func (o BillingRoleAssignmentByDepartmentOutput) ToBillingRoleAssignmentByDepartmentOutput() BillingRoleAssignmentByDepartmentOutput {
	return o
}

func (o BillingRoleAssignmentByDepartmentOutput) ToBillingRoleAssignmentByDepartmentOutputWithContext(ctx context.Context) BillingRoleAssignmentByDepartmentOutput {
	return o
}

// The principal Id of the user who created the role assignment.
func (o BillingRoleAssignmentByDepartmentOutput) CreatedByPrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v *BillingRoleAssignmentByDepartment) pulumi.StringOutput { return v.CreatedByPrincipalId }).(pulumi.StringOutput)
}

// The tenant Id of the user who created the role assignment.
func (o BillingRoleAssignmentByDepartmentOutput) CreatedByPrincipalTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *BillingRoleAssignmentByDepartment) pulumi.StringOutput { return v.CreatedByPrincipalTenantId }).(pulumi.StringOutput)
}

// The email address of the user who created the role assignment. This is supported only for billing accounts with agreement type Enterprise Agreement.
func (o BillingRoleAssignmentByDepartmentOutput) CreatedByUserEmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *BillingRoleAssignmentByDepartment) pulumi.StringOutput { return v.CreatedByUserEmailAddress }).(pulumi.StringOutput)
}

// The date the role assignment was created.
func (o BillingRoleAssignmentByDepartmentOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *BillingRoleAssignmentByDepartment) pulumi.StringOutput { return v.CreatedOn }).(pulumi.StringOutput)
}

// Resource name.
func (o BillingRoleAssignmentByDepartmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BillingRoleAssignmentByDepartment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The principal id of the user to whom the role was assigned.
func (o BillingRoleAssignmentByDepartmentOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BillingRoleAssignmentByDepartment) pulumi.StringPtrOutput { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The principal tenant id of the user to whom the role was assigned.
func (o BillingRoleAssignmentByDepartmentOutput) PrincipalTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BillingRoleAssignmentByDepartment) pulumi.StringPtrOutput { return v.PrincipalTenantId }).(pulumi.StringPtrOutput)
}

// The ID of the role definition.
func (o BillingRoleAssignmentByDepartmentOutput) RoleDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BillingRoleAssignmentByDepartment) pulumi.StringPtrOutput { return v.RoleDefinitionId }).(pulumi.StringPtrOutput)
}

// The scope at which the role was assigned.
func (o BillingRoleAssignmentByDepartmentOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v *BillingRoleAssignmentByDepartment) pulumi.StringOutput { return v.Scope }).(pulumi.StringOutput)
}

// Resource type.
func (o BillingRoleAssignmentByDepartmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *BillingRoleAssignmentByDepartment) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The authentication type of the user, whether Organization or MSA, of the user to whom the role was assigned. This is supported only for billing accounts with agreement type Enterprise Agreement.
func (o BillingRoleAssignmentByDepartmentOutput) UserAuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BillingRoleAssignmentByDepartment) pulumi.StringPtrOutput { return v.UserAuthenticationType }).(pulumi.StringPtrOutput)
}

// The email address of the user to whom the role was assigned. This is supported only for billing accounts with agreement type Enterprise Agreement.
func (o BillingRoleAssignmentByDepartmentOutput) UserEmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BillingRoleAssignmentByDepartment) pulumi.StringPtrOutput { return v.UserEmailAddress }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(BillingRoleAssignmentByDepartmentOutput{})
}
