// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180501preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A ProactiveDetection configuration definition.
type ProactiveDetectionConfiguration struct {
	pulumi.CustomResourceState

	// Custom email addresses for this rule notifications
	CustomEmails pulumi.StringArrayOutput `pulumi:"customEmails"`
	// A flag that indicates whether this rule is enabled by the user
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// The last time this rule was updated
	LastUpdatedTime pulumi.StringOutput `pulumi:"lastUpdatedTime"`
	// Resource location
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The rule name
	Name pulumi.StringOutput `pulumi:"name"`
	// Static definitions of the ProactiveDetection configuration rule (same values for all components).
	RuleDefinitions ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput `pulumi:"ruleDefinitions"`
	// A flag that indicated whether notifications on this rule should be sent to subscription owners
	SendEmailsToSubscriptionOwners pulumi.BoolPtrOutput `pulumi:"sendEmailsToSubscriptionOwners"`
	// Azure resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewProactiveDetectionConfiguration registers a new resource with the given unique name, arguments, and options.
func NewProactiveDetectionConfiguration(ctx *pulumi.Context,
	name string, args *ProactiveDetectionConfigurationArgs, opts ...pulumi.ResourceOption) (*ProactiveDetectionConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ResourceName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:insights:ProactiveDetectionConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:insights/v20150501:ProactiveDetectionConfiguration"),
		},
	})
	opts = append(opts, aliases)
	var resource ProactiveDetectionConfiguration
	err := ctx.RegisterResource("azure-native:insights/v20180501preview:ProactiveDetectionConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProactiveDetectionConfiguration gets an existing ProactiveDetectionConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProactiveDetectionConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProactiveDetectionConfigurationState, opts ...pulumi.ResourceOption) (*ProactiveDetectionConfiguration, error) {
	var resource ProactiveDetectionConfiguration
	err := ctx.ReadResource("azure-native:insights/v20180501preview:ProactiveDetectionConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProactiveDetectionConfiguration resources.
type proactiveDetectionConfigurationState struct {
}

type ProactiveDetectionConfigurationState struct {
}

func (ProactiveDetectionConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*proactiveDetectionConfigurationState)(nil)).Elem()
}

type proactiveDetectionConfigurationArgs struct {
	// The ProactiveDetection configuration ID. This is unique within a Application Insights component.
	ConfigurationId *string `pulumi:"configurationId"`
	// Custom email addresses for this rule notifications
	CustomEmails []string `pulumi:"customEmails"`
	// A flag that indicates whether this rule is enabled by the user
	Enabled *bool `pulumi:"enabled"`
	// Resource location
	Location *string `pulumi:"location"`
	// Azure resource name
	Name *string `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Application Insights component resource.
	ResourceName string `pulumi:"resourceName"`
	// Static definitions of the ProactiveDetection configuration rule (same values for all components).
	RuleDefinitions *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions `pulumi:"ruleDefinitions"`
	// A flag that indicated whether notifications on this rule should be sent to subscription owners
	SendEmailsToSubscriptionOwners *bool `pulumi:"sendEmailsToSubscriptionOwners"`
}

// The set of arguments for constructing a ProactiveDetectionConfiguration resource.
type ProactiveDetectionConfigurationArgs struct {
	// The ProactiveDetection configuration ID. This is unique within a Application Insights component.
	ConfigurationId pulumi.StringPtrInput
	// Custom email addresses for this rule notifications
	CustomEmails pulumi.StringArrayInput
	// A flag that indicates whether this rule is enabled by the user
	Enabled pulumi.BoolPtrInput
	// Resource location
	Location pulumi.StringPtrInput
	// Azure resource name
	Name pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the Application Insights component resource.
	ResourceName pulumi.StringInput
	// Static definitions of the ProactiveDetection configuration rule (same values for all components).
	RuleDefinitions ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrInput
	// A flag that indicated whether notifications on this rule should be sent to subscription owners
	SendEmailsToSubscriptionOwners pulumi.BoolPtrInput
}

func (ProactiveDetectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*proactiveDetectionConfigurationArgs)(nil)).Elem()
}

type ProactiveDetectionConfigurationInput interface {
	pulumi.Input

	ToProactiveDetectionConfigurationOutput() ProactiveDetectionConfigurationOutput
	ToProactiveDetectionConfigurationOutputWithContext(ctx context.Context) ProactiveDetectionConfigurationOutput
}

func (*ProactiveDetectionConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**ProactiveDetectionConfiguration)(nil)).Elem()
}

func (i *ProactiveDetectionConfiguration) ToProactiveDetectionConfigurationOutput() ProactiveDetectionConfigurationOutput {
	return i.ToProactiveDetectionConfigurationOutputWithContext(context.Background())
}

func (i *ProactiveDetectionConfiguration) ToProactiveDetectionConfigurationOutputWithContext(ctx context.Context) ProactiveDetectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProactiveDetectionConfigurationOutput)
}

type ProactiveDetectionConfigurationOutput struct{ *pulumi.OutputState }

func (ProactiveDetectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProactiveDetectionConfiguration)(nil)).Elem()
}

func (o ProactiveDetectionConfigurationOutput) ToProactiveDetectionConfigurationOutput() ProactiveDetectionConfigurationOutput {
	return o
}

func (o ProactiveDetectionConfigurationOutput) ToProactiveDetectionConfigurationOutputWithContext(ctx context.Context) ProactiveDetectionConfigurationOutput {
	return o
}

// Custom email addresses for this rule notifications
func (o ProactiveDetectionConfigurationOutput) CustomEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProactiveDetectionConfiguration) pulumi.StringArrayOutput { return v.CustomEmails }).(pulumi.StringArrayOutput)
}

// A flag that indicates whether this rule is enabled by the user
func (o ProactiveDetectionConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProactiveDetectionConfiguration) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The last time this rule was updated
func (o ProactiveDetectionConfigurationOutput) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ProactiveDetectionConfiguration) pulumi.StringOutput { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// Resource location
func (o ProactiveDetectionConfigurationOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProactiveDetectionConfiguration) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The rule name
func (o ProactiveDetectionConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProactiveDetectionConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Static definitions of the ProactiveDetection configuration rule (same values for all components).
func (o ProactiveDetectionConfigurationOutput) RuleDefinitions() ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput {
	return o.ApplyT(func(v *ProactiveDetectionConfiguration) ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput {
		return v.RuleDefinitions
	}).(ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput)
}

// A flag that indicated whether notifications on this rule should be sent to subscription owners
func (o ProactiveDetectionConfigurationOutput) SendEmailsToSubscriptionOwners() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProactiveDetectionConfiguration) pulumi.BoolPtrOutput { return v.SendEmailsToSubscriptionOwners }).(pulumi.BoolPtrOutput)
}

// Azure resource type
func (o ProactiveDetectionConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ProactiveDetectionConfiguration) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ProactiveDetectionConfigurationOutput{})
}
