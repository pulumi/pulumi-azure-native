// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210801

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An Application Insights workbook definition.
type Workbook struct {
	pulumi.CustomResourceState

	// Workbook category, as defined by the user at creation time.
	Category pulumi.StringOutput `pulumi:"category"`
	// The description of the workbook.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The user-defined name (display name) of the workbook.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Resource etag
	Etag pulumi.StringMapOutput `pulumi:"etag"`
	// Identity used for BYOS
	Identity WorkbookResourceResponseIdentityPtrOutput `pulumi:"identity"`
	// The kind of workbook. Choices are user and shared.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The unique revision id for this workbook definition
	Revision pulumi.StringOutput `pulumi:"revision"`
	// Configuration of this particular workbook. Configuration data is a string containing valid JSON
	SerializedData pulumi.StringOutput `pulumi:"serializedData"`
	// ResourceId for a source resource.
	SourceId pulumi.StringPtrOutput `pulumi:"sourceId"`
	// The resourceId to the storage account when bring your own storage is used
	StorageUri pulumi.StringPtrOutput `pulumi:"storageUri"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Date and time in UTC of the last modification that was made to this workbook definition.
	TimeModified pulumi.StringOutput `pulumi:"timeModified"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Unique user id of the specific user that owns this workbook.
	UserId pulumi.StringOutput `pulumi:"userId"`
	// Workbook schema version format, like 'Notebook/1.0', which should match the workbook in serializedData
	Version pulumi.StringPtrOutput `pulumi:"version"`
}

// NewWorkbook registers a new resource with the given unique name, arguments, and options.
func NewWorkbook(ctx *pulumi.Context,
	name string, args *WorkbookArgs, opts ...pulumi.ResourceOption) (*Workbook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Category == nil {
		return nil, errors.New("invalid value for required argument 'Category'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SerializedData == nil {
		return nil, errors.New("invalid value for required argument 'SerializedData'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:insights:Workbook"),
		},
		{
			Type: pulumi.String("azure-native:insights/v20150501:Workbook"),
		},
		{
			Type: pulumi.String("azure-native:insights/v20180617preview:Workbook"),
		},
		{
			Type: pulumi.String("azure-native:insights/v20201020:Workbook"),
		},
		{
			Type: pulumi.String("azure-native:insights/v20210308:Workbook"),
		},
	})
	opts = append(opts, aliases)
	var resource Workbook
	err := ctx.RegisterResource("azure-native:insights/v20210801:Workbook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkbook gets an existing Workbook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkbook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkbookState, opts ...pulumi.ResourceOption) (*Workbook, error) {
	var resource Workbook
	err := ctx.ReadResource("azure-native:insights/v20210801:Workbook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Workbook resources.
type workbookState struct {
}

type WorkbookState struct {
}

func (WorkbookState) ElementType() reflect.Type {
	return reflect.TypeOf((*workbookState)(nil)).Elem()
}

type workbookArgs struct {
	// Workbook category, as defined by the user at creation time.
	Category string `pulumi:"category"`
	// The description of the workbook.
	Description *string `pulumi:"description"`
	// The user-defined name (display name) of the workbook.
	DisplayName string `pulumi:"displayName"`
	// Identity used for BYOS
	Identity *WorkbookResourceIdentity `pulumi:"identity"`
	// The kind of workbook. Choices are user and shared.
	Kind *string `pulumi:"kind"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Application Insights component resource.
	ResourceName *string `pulumi:"resourceName"`
	// Configuration of this particular workbook. Configuration data is a string containing valid JSON
	SerializedData string `pulumi:"serializedData"`
	// ResourceId for a source resource.
	SourceId *string `pulumi:"sourceId"`
	// The resourceId to the storage account when bring your own storage is used
	StorageUri *string `pulumi:"storageUri"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Workbook schema version format, like 'Notebook/1.0', which should match the workbook in serializedData
	Version *string `pulumi:"version"`
}

// The set of arguments for constructing a Workbook resource.
type WorkbookArgs struct {
	// Workbook category, as defined by the user at creation time.
	Category pulumi.StringInput
	// The description of the workbook.
	Description pulumi.StringPtrInput
	// The user-defined name (display name) of the workbook.
	DisplayName pulumi.StringInput
	// Identity used for BYOS
	Identity WorkbookResourceIdentityPtrInput
	// The kind of workbook. Choices are user and shared.
	Kind pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the Application Insights component resource.
	ResourceName pulumi.StringPtrInput
	// Configuration of this particular workbook. Configuration data is a string containing valid JSON
	SerializedData pulumi.StringInput
	// ResourceId for a source resource.
	SourceId pulumi.StringPtrInput
	// The resourceId to the storage account when bring your own storage is used
	StorageUri pulumi.StringPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Workbook schema version format, like 'Notebook/1.0', which should match the workbook in serializedData
	Version pulumi.StringPtrInput
}

func (WorkbookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workbookArgs)(nil)).Elem()
}

type WorkbookInput interface {
	pulumi.Input

	ToWorkbookOutput() WorkbookOutput
	ToWorkbookOutputWithContext(ctx context.Context) WorkbookOutput
}

func (*Workbook) ElementType() reflect.Type {
	return reflect.TypeOf((**Workbook)(nil)).Elem()
}

func (i *Workbook) ToWorkbookOutput() WorkbookOutput {
	return i.ToWorkbookOutputWithContext(context.Background())
}

func (i *Workbook) ToWorkbookOutputWithContext(ctx context.Context) WorkbookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookOutput)
}

type WorkbookOutput struct{ *pulumi.OutputState }

func (WorkbookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Workbook)(nil)).Elem()
}

func (o WorkbookOutput) ToWorkbookOutput() WorkbookOutput {
	return o
}

func (o WorkbookOutput) ToWorkbookOutputWithContext(ctx context.Context) WorkbookOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(WorkbookOutput{})
}
