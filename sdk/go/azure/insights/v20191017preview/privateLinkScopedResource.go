// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20191017preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A private link scoped resource
type PrivateLinkScopedResource struct {
	pulumi.CustomResourceState

	// The resource id of the scoped Azure monitor resource.
	LinkedResourceId pulumi.StringPtrOutput `pulumi:"linkedResourceId"`
	// Azure resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// State of the private endpoint connection.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewPrivateLinkScopedResource registers a new resource with the given unique name, arguments, and options.
func NewPrivateLinkScopedResource(ctx *pulumi.Context,
	name string, args *PrivateLinkScopedResourceArgs, opts ...pulumi.ResourceOption) (*PrivateLinkScopedResource, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.ScopeName == nil {
		return nil, errors.New("missing required argument 'ScopeName'")
	}
	if args == nil {
		args = &PrivateLinkScopedResourceArgs{}
	}
	var resource PrivateLinkScopedResource
	err := ctx.RegisterResource("azure-nextgen:insights/v20191017preview:PrivateLinkScopedResource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateLinkScopedResource gets an existing PrivateLinkScopedResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateLinkScopedResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateLinkScopedResourceState, opts ...pulumi.ResourceOption) (*PrivateLinkScopedResource, error) {
	var resource PrivateLinkScopedResource
	err := ctx.ReadResource("azure-nextgen:insights/v20191017preview:PrivateLinkScopedResource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateLinkScopedResource resources.
type privateLinkScopedResourceState struct {
	// The resource id of the scoped Azure monitor resource.
	LinkedResourceId *string `pulumi:"linkedResourceId"`
	// Azure resource name
	Name *string `pulumi:"name"`
	// State of the private endpoint connection.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Azure resource type
	Type *string `pulumi:"type"`
}

type PrivateLinkScopedResourceState struct {
	// The resource id of the scoped Azure monitor resource.
	LinkedResourceId pulumi.StringPtrInput
	// Azure resource name
	Name pulumi.StringPtrInput
	// State of the private endpoint connection.
	ProvisioningState pulumi.StringPtrInput
	// Azure resource type
	Type pulumi.StringPtrInput
}

func (PrivateLinkScopedResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateLinkScopedResourceState)(nil)).Elem()
}

type privateLinkScopedResourceArgs struct {
	// The resource id of the scoped Azure monitor resource.
	LinkedResourceId *string `pulumi:"linkedResourceId"`
	// The name of the scoped resource object.
	Name string `pulumi:"name"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Azure Monitor PrivateLinkScope resource.
	ScopeName string `pulumi:"scopeName"`
}

// The set of arguments for constructing a PrivateLinkScopedResource resource.
type PrivateLinkScopedResourceArgs struct {
	// The resource id of the scoped Azure monitor resource.
	LinkedResourceId pulumi.StringPtrInput
	// The name of the scoped resource object.
	Name pulumi.StringInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The name of the Azure Monitor PrivateLinkScope resource.
	ScopeName pulumi.StringInput
}

func (PrivateLinkScopedResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateLinkScopedResourceArgs)(nil)).Elem()
}
