// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200202

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An Application Insights component definition.
func LookupComponent(ctx *pulumi.Context, args *LookupComponentArgs, opts ...pulumi.InvokeOption) (*LookupComponentResult, error) {
	var rv LookupComponentResult
	err := ctx.Invoke("azure-native:insights/v20200202:getComponent", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupComponentArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Application Insights component resource.
	ResourceName string `pulumi:"resourceName"`
}

// An Application Insights component definition.
type LookupComponentResult struct {
	// Application Insights Unique ID for your Application.
	AppId string `pulumi:"appId"`
	// The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.
	ApplicationId string `pulumi:"applicationId"`
	// Type of application being monitored.
	ApplicationType string `pulumi:"applicationType"`
	// Application Insights component connection string.
	ConnectionString string `pulumi:"connectionString"`
	// Creation Date for the Application Insights component, in ISO 8601 format.
	CreationDate string `pulumi:"creationDate"`
	// Disable IP masking.
	DisableIpMasking *bool `pulumi:"disableIpMasking"`
	// Disable Non-AAD based Auth.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Resource etag
	Etag *string `pulumi:"etag"`
	// Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.
	FlowType *string `pulumi:"flowType"`
	// Force users to create their own storage account for profiler and debugger.
	ForceCustomerStorageForProfiler *bool `pulumi:"forceCustomerStorageForProfiler"`
	// The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
	HockeyAppId *string `pulumi:"hockeyAppId"`
	// Token used to authenticate communications with between Application Insights and HockeyApp.
	HockeyAppToken string `pulumi:"hockeyAppToken"`
	// Azure resource Id
	Id string `pulumi:"id"`
	// Purge data immediately after 30 days.
	ImmediatePurgeDataOn30Days *bool `pulumi:"immediatePurgeDataOn30Days"`
	// Indicates the flow of the ingestion.
	IngestionMode *string `pulumi:"ingestionMode"`
	// Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of each new Application Insights component.
	InstrumentationKey string `pulumi:"instrumentationKey"`
	// The kind of application that this component refers to, used to customize UI. This value is a freeform string, values should typically be one of the following: web, ios, other, store, java, phone.
	Kind string `pulumi:"kind"`
	// The date which the component got migrated to LA, in ISO 8601 format.
	LaMigrationDate string `pulumi:"laMigrationDate"`
	// Resource location
	Location string `pulumi:"location"`
	// Azure resource name
	Name string `pulumi:"name"`
	// List of linked private link scope resources.
	PrivateLinkScopedResources []PrivateLinkScopedResourceResponse `pulumi:"privateLinkScopedResources"`
	// Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// The network access type for accessing Application Insights ingestion.
	PublicNetworkAccessForIngestion *string `pulumi:"publicNetworkAccessForIngestion"`
	// The network access type for accessing Application Insights query.
	PublicNetworkAccessForQuery *string `pulumi:"publicNetworkAccessForQuery"`
	// Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.
	RequestSource *string `pulumi:"requestSource"`
	// Retention period in days.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
	SamplingPercentage *float64 `pulumi:"samplingPercentage"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Azure Tenant Id.
	TenantId string `pulumi:"tenantId"`
	// Azure resource type
	Type string `pulumi:"type"`
	// Resource Id of the log analytics workspace which the data will be ingested to. This property is required to create an application with this API version. Applications from older versions will not have this property.
	WorkspaceResourceId *string `pulumi:"workspaceResourceId"`
}

// Defaults sets the appropriate defaults for LookupComponentResult
func (val *LookupComponentResult) Defaults() *LookupComponentResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.ApplicationType) {
		tmp.ApplicationType = "web"
	}
	if isZero(tmp.FlowType) {
		flowType_ := "Bluefield"
		tmp.FlowType = &flowType_
	}
	if isZero(tmp.IngestionMode) {
		ingestionMode_ := "LogAnalytics"
		tmp.IngestionMode = &ingestionMode_
	}
	if isZero(tmp.RequestSource) {
		requestSource_ := "rest"
		tmp.RequestSource = &requestSource_
	}
	return &tmp
}

func LookupComponentOutput(ctx *pulumi.Context, args LookupComponentOutputArgs, opts ...pulumi.InvokeOption) LookupComponentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupComponentResult, error) {
			args := v.(LookupComponentArgs)
			r, err := LookupComponent(ctx, &args, opts...)
			var s LookupComponentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupComponentResultOutput)
}

type LookupComponentOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the Application Insights component resource.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
}

func (LookupComponentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupComponentArgs)(nil)).Elem()
}

// An Application Insights component definition.
type LookupComponentResultOutput struct{ *pulumi.OutputState }

func (LookupComponentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupComponentResult)(nil)).Elem()
}

func (o LookupComponentResultOutput) ToLookupComponentResultOutput() LookupComponentResultOutput {
	return o
}

func (o LookupComponentResultOutput) ToLookupComponentResultOutputWithContext(ctx context.Context) LookupComponentResultOutput {
	return o
}

// Application Insights Unique ID for your Application.
func (o LookupComponentResultOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComponentResult) string { return v.AppId }).(pulumi.StringOutput)
}

// The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.
func (o LookupComponentResultOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComponentResult) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// Type of application being monitored.
func (o LookupComponentResultOutput) ApplicationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComponentResult) string { return v.ApplicationType }).(pulumi.StringOutput)
}

// Application Insights component connection string.
func (o LookupComponentResultOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComponentResult) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// Creation Date for the Application Insights component, in ISO 8601 format.
func (o LookupComponentResultOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComponentResult) string { return v.CreationDate }).(pulumi.StringOutput)
}

// Disable IP masking.
func (o LookupComponentResultOutput) DisableIpMasking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *bool { return v.DisableIpMasking }).(pulumi.BoolPtrOutput)
}

// Disable Non-AAD based Auth.
func (o LookupComponentResultOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// Resource etag
func (o LookupComponentResultOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API.
func (o LookupComponentResultOutput) FlowType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *string { return v.FlowType }).(pulumi.StringPtrOutput)
}

// Force users to create their own storage account for profiler and debugger.
func (o LookupComponentResultOutput) ForceCustomerStorageForProfiler() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *bool { return v.ForceCustomerStorageForProfiler }).(pulumi.BoolPtrOutput)
}

// The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp.
func (o LookupComponentResultOutput) HockeyAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *string { return v.HockeyAppId }).(pulumi.StringPtrOutput)
}

// Token used to authenticate communications with between Application Insights and HockeyApp.
func (o LookupComponentResultOutput) HockeyAppToken() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComponentResult) string { return v.HockeyAppToken }).(pulumi.StringOutput)
}

// Azure resource Id
func (o LookupComponentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComponentResult) string { return v.Id }).(pulumi.StringOutput)
}

// Purge data immediately after 30 days.
func (o LookupComponentResultOutput) ImmediatePurgeDataOn30Days() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *bool { return v.ImmediatePurgeDataOn30Days }).(pulumi.BoolPtrOutput)
}

// Indicates the flow of the ingestion.
func (o LookupComponentResultOutput) IngestionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *string { return v.IngestionMode }).(pulumi.StringPtrOutput)
}

// Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of each new Application Insights component.
func (o LookupComponentResultOutput) InstrumentationKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComponentResult) string { return v.InstrumentationKey }).(pulumi.StringOutput)
}

// The kind of application that this component refers to, used to customize UI. This value is a freeform string, values should typically be one of the following: web, ios, other, store, java, phone.
func (o LookupComponentResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComponentResult) string { return v.Kind }).(pulumi.StringOutput)
}

// The date which the component got migrated to LA, in ISO 8601 format.
func (o LookupComponentResultOutput) LaMigrationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComponentResult) string { return v.LaMigrationDate }).(pulumi.StringOutput)
}

// Resource location
func (o LookupComponentResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComponentResult) string { return v.Location }).(pulumi.StringOutput)
}

// Azure resource name
func (o LookupComponentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComponentResult) string { return v.Name }).(pulumi.StringOutput)
}

// List of linked private link scope resources.
func (o LookupComponentResultOutput) PrivateLinkScopedResources() PrivateLinkScopedResourceResponseArrayOutput {
	return o.ApplyT(func(v LookupComponentResult) []PrivateLinkScopedResourceResponse { return v.PrivateLinkScopedResources }).(PrivateLinkScopedResourceResponseArrayOutput)
}

// Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
func (o LookupComponentResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComponentResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The network access type for accessing Application Insights ingestion.
func (o LookupComponentResultOutput) PublicNetworkAccessForIngestion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *string { return v.PublicNetworkAccessForIngestion }).(pulumi.StringPtrOutput)
}

// The network access type for accessing Application Insights query.
func (o LookupComponentResultOutput) PublicNetworkAccessForQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *string { return v.PublicNetworkAccessForQuery }).(pulumi.StringPtrOutput)
}

// Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'.
func (o LookupComponentResultOutput) RequestSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *string { return v.RequestSource }).(pulumi.StringPtrOutput)
}

// Retention period in days.
func (o LookupComponentResultOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry.
func (o LookupComponentResultOutput) SamplingPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *float64 { return v.SamplingPercentage }).(pulumi.Float64PtrOutput)
}

// Resource tags
func (o LookupComponentResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupComponentResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Azure Tenant Id.
func (o LookupComponentResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComponentResult) string { return v.TenantId }).(pulumi.StringOutput)
}

// Azure resource type
func (o LookupComponentResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComponentResult) string { return v.Type }).(pulumi.StringOutput)
}

// Resource Id of the log analytics workspace which the data will be ingested to. This property is required to create an application with this API version. Applications from older versions will not have this property.
func (o LookupComponentResultOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *string { return v.WorkspaceResourceId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupComponentResultOutput{})
}
