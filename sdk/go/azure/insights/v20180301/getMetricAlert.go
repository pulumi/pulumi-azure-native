// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180301

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The metric alert resource.
func LookupMetricAlert(ctx *pulumi.Context, args *LookupMetricAlertArgs, opts ...pulumi.InvokeOption) (*LookupMetricAlertResult, error) {
	var rv LookupMetricAlertResult
	err := ctx.Invoke("azure-native:insights/v20180301:getMetricAlert", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMetricAlertArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the rule.
	RuleName string `pulumi:"ruleName"`
}

// The metric alert resource.
type LookupMetricAlertResult struct {
	// the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.
	Actions []MetricAlertActionResponse `pulumi:"actions"`
	// the flag that indicates whether the alert should be auto resolved or not. The default is true.
	AutoMitigate *bool `pulumi:"autoMitigate"`
	// defines the specific alert criteria information.
	Criteria interface{} `pulumi:"criteria"`
	// the description of the metric alert that will be included in the alert email.
	Description *string `pulumi:"description"`
	// the flag that indicates whether the metric alert is enabled.
	Enabled bool `pulumi:"enabled"`
	// how often the metric alert is evaluated represented in ISO 8601 duration format.
	EvaluationFrequency string `pulumi:"evaluationFrequency"`
	// Azure resource Id
	Id string `pulumi:"id"`
	// the value indicating whether this alert rule is migrated.
	IsMigrated bool `pulumi:"isMigrated"`
	// Last time the rule was updated in ISO8601 format.
	LastUpdatedTime string `pulumi:"lastUpdatedTime"`
	// Resource location
	Location string `pulumi:"location"`
	// Azure resource name
	Name string `pulumi:"name"`
	// the list of resource id's that this metric alert is scoped to.
	Scopes []string `pulumi:"scopes"`
	// Alert severity {0, 1, 2, 3, 4}
	Severity int `pulumi:"severity"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// the region of the target resource(s) on which the alert is created/updated. Mandatory if the scope contains a subscription, resource group, or more than one resource.
	TargetResourceRegion *string `pulumi:"targetResourceRegion"`
	// the resource type of the target resource(s) on which the alert is created/updated. Mandatory if the scope contains a subscription, resource group, or more than one resource.
	TargetResourceType *string `pulumi:"targetResourceType"`
	// Azure resource type
	Type string `pulumi:"type"`
	// the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold.
	WindowSize string `pulumi:"windowSize"`
}

func LookupMetricAlertOutput(ctx *pulumi.Context, args LookupMetricAlertOutputArgs, opts ...pulumi.InvokeOption) LookupMetricAlertResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMetricAlertResult, error) {
			args := v.(LookupMetricAlertArgs)
			r, err := LookupMetricAlert(ctx, &args, opts...)
			var s LookupMetricAlertResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMetricAlertResultOutput)
}

type LookupMetricAlertOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the rule.
	RuleName pulumi.StringInput `pulumi:"ruleName"`
}

func (LookupMetricAlertOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMetricAlertArgs)(nil)).Elem()
}

// The metric alert resource.
type LookupMetricAlertResultOutput struct{ *pulumi.OutputState }

func (LookupMetricAlertResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMetricAlertResult)(nil)).Elem()
}

func (o LookupMetricAlertResultOutput) ToLookupMetricAlertResultOutput() LookupMetricAlertResultOutput {
	return o
}

func (o LookupMetricAlertResultOutput) ToLookupMetricAlertResultOutputWithContext(ctx context.Context) LookupMetricAlertResultOutput {
	return o
}

// the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.
func (o LookupMetricAlertResultOutput) Actions() MetricAlertActionResponseArrayOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) []MetricAlertActionResponse { return v.Actions }).(MetricAlertActionResponseArrayOutput)
}

// the flag that indicates whether the alert should be auto resolved or not. The default is true.
func (o LookupMetricAlertResultOutput) AutoMitigate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) *bool { return v.AutoMitigate }).(pulumi.BoolPtrOutput)
}

// defines the specific alert criteria information.
func (o LookupMetricAlertResultOutput) Criteria() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) interface{} { return v.Criteria }).(pulumi.AnyOutput)
}

// the description of the metric alert that will be included in the alert email.
func (o LookupMetricAlertResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// the flag that indicates whether the metric alert is enabled.
func (o LookupMetricAlertResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// how often the metric alert is evaluated represented in ISO 8601 duration format.
func (o LookupMetricAlertResultOutput) EvaluationFrequency() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) string { return v.EvaluationFrequency }).(pulumi.StringOutput)
}

// Azure resource Id
func (o LookupMetricAlertResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) string { return v.Id }).(pulumi.StringOutput)
}

// the value indicating whether this alert rule is migrated.
func (o LookupMetricAlertResultOutput) IsMigrated() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) bool { return v.IsMigrated }).(pulumi.BoolOutput)
}

// Last time the rule was updated in ISO8601 format.
func (o LookupMetricAlertResultOutput) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) string { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// Resource location
func (o LookupMetricAlertResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) string { return v.Location }).(pulumi.StringOutput)
}

// Azure resource name
func (o LookupMetricAlertResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) string { return v.Name }).(pulumi.StringOutput)
}

// the list of resource id's that this metric alert is scoped to.
func (o LookupMetricAlertResultOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// Alert severity {0, 1, 2, 3, 4}
func (o LookupMetricAlertResultOutput) Severity() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) int { return v.Severity }).(pulumi.IntOutput)
}

// Resource tags
func (o LookupMetricAlertResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// the region of the target resource(s) on which the alert is created/updated. Mandatory if the scope contains a subscription, resource group, or more than one resource.
func (o LookupMetricAlertResultOutput) TargetResourceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) *string { return v.TargetResourceRegion }).(pulumi.StringPtrOutput)
}

// the resource type of the target resource(s) on which the alert is created/updated. Mandatory if the scope contains a subscription, resource group, or more than one resource.
func (o LookupMetricAlertResultOutput) TargetResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) *string { return v.TargetResourceType }).(pulumi.StringPtrOutput)
}

// Azure resource type
func (o LookupMetricAlertResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) string { return v.Type }).(pulumi.StringOutput)
}

// the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold.
func (o LookupMetricAlertResultOutput) WindowSize() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) string { return v.WindowSize }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMetricAlertResultOutput{})
}
