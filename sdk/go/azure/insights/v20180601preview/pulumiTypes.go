// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180601preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Data source object contains configuration to collect telemetry and one or more sinks to send that telemetry data to
type DataSource struct {
	Configuration DataSourceConfiguration `pulumi:"configuration"`
	// Datasource kind
	Kind  string              `pulumi:"kind"`
	Sinks []SinkConfiguration `pulumi:"sinks"`
}

// DataSourceInput is an input type that accepts DataSourceArgs and DataSourceOutput values.
// You can construct a concrete instance of `DataSourceInput` via:
//
//          DataSourceArgs{...}
type DataSourceInput interface {
	pulumi.Input

	ToDataSourceOutput() DataSourceOutput
	ToDataSourceOutputWithContext(context.Context) DataSourceOutput
}

// Data source object contains configuration to collect telemetry and one or more sinks to send that telemetry data to
type DataSourceArgs struct {
	Configuration DataSourceConfigurationInput `pulumi:"configuration"`
	// Datasource kind
	Kind  pulumi.StringInput          `pulumi:"kind"`
	Sinks SinkConfigurationArrayInput `pulumi:"sinks"`
}

func (DataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSource)(nil)).Elem()
}

func (i DataSourceArgs) ToDataSourceOutput() DataSourceOutput {
	return i.ToDataSourceOutputWithContext(context.Background())
}

func (i DataSourceArgs) ToDataSourceOutputWithContext(ctx context.Context) DataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceOutput)
}

// DataSourceArrayInput is an input type that accepts DataSourceArray and DataSourceArrayOutput values.
// You can construct a concrete instance of `DataSourceArrayInput` via:
//
//          DataSourceArray{ DataSourceArgs{...} }
type DataSourceArrayInput interface {
	pulumi.Input

	ToDataSourceArrayOutput() DataSourceArrayOutput
	ToDataSourceArrayOutputWithContext(context.Context) DataSourceArrayOutput
}

type DataSourceArray []DataSourceInput

func (DataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSource)(nil)).Elem()
}

func (i DataSourceArray) ToDataSourceArrayOutput() DataSourceArrayOutput {
	return i.ToDataSourceArrayOutputWithContext(context.Background())
}

func (i DataSourceArray) ToDataSourceArrayOutputWithContext(ctx context.Context) DataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceArrayOutput)
}

// Data source object contains configuration to collect telemetry and one or more sinks to send that telemetry data to
type DataSourceOutput struct{ *pulumi.OutputState }

func (DataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSource)(nil)).Elem()
}

func (o DataSourceOutput) ToDataSourceOutput() DataSourceOutput {
	return o
}

func (o DataSourceOutput) ToDataSourceOutputWithContext(ctx context.Context) DataSourceOutput {
	return o
}

func (o DataSourceOutput) Configuration() DataSourceConfigurationOutput {
	return o.ApplyT(func(v DataSource) DataSourceConfiguration { return v.Configuration }).(DataSourceConfigurationOutput)
}

// Datasource kind
func (o DataSourceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v DataSource) string { return v.Kind }).(pulumi.StringOutput)
}

func (o DataSourceOutput) Sinks() SinkConfigurationArrayOutput {
	return o.ApplyT(func(v DataSource) []SinkConfiguration { return v.Sinks }).(SinkConfigurationArrayOutput)
}

type DataSourceArrayOutput struct{ *pulumi.OutputState }

func (DataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSource)(nil)).Elem()
}

func (o DataSourceArrayOutput) ToDataSourceArrayOutput() DataSourceArrayOutput {
	return o
}

func (o DataSourceArrayOutput) ToDataSourceArrayOutputWithContext(ctx context.Context) DataSourceArrayOutput {
	return o
}

func (o DataSourceArrayOutput) Index(i pulumi.IntInput) DataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSource {
		return vs[0].([]DataSource)[vs[1].(int)]
	}).(DataSourceOutput)
}

type DataSourceConfiguration struct {
	// Windows event logs configuration.
	EventLogs []EventLogConfiguration `pulumi:"eventLogs"`
	// Performance counter configuration
	PerfCounters []PerformanceCounterConfiguration `pulumi:"perfCounters"`
	// ETW providers configuration
	Providers []EtwProviderConfiguration `pulumi:"providers"`
}

// DataSourceConfigurationInput is an input type that accepts DataSourceConfigurationArgs and DataSourceConfigurationOutput values.
// You can construct a concrete instance of `DataSourceConfigurationInput` via:
//
//          DataSourceConfigurationArgs{...}
type DataSourceConfigurationInput interface {
	pulumi.Input

	ToDataSourceConfigurationOutput() DataSourceConfigurationOutput
	ToDataSourceConfigurationOutputWithContext(context.Context) DataSourceConfigurationOutput
}

type DataSourceConfigurationArgs struct {
	// Windows event logs configuration.
	EventLogs EventLogConfigurationArrayInput `pulumi:"eventLogs"`
	// Performance counter configuration
	PerfCounters PerformanceCounterConfigurationArrayInput `pulumi:"perfCounters"`
	// ETW providers configuration
	Providers EtwProviderConfigurationArrayInput `pulumi:"providers"`
}

func (DataSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfiguration)(nil)).Elem()
}

func (i DataSourceConfigurationArgs) ToDataSourceConfigurationOutput() DataSourceConfigurationOutput {
	return i.ToDataSourceConfigurationOutputWithContext(context.Background())
}

func (i DataSourceConfigurationArgs) ToDataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfigurationOutput)
}

type DataSourceConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfiguration)(nil)).Elem()
}

func (o DataSourceConfigurationOutput) ToDataSourceConfigurationOutput() DataSourceConfigurationOutput {
	return o
}

func (o DataSourceConfigurationOutput) ToDataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationOutput {
	return o
}

// Windows event logs configuration.
func (o DataSourceConfigurationOutput) EventLogs() EventLogConfigurationArrayOutput {
	return o.ApplyT(func(v DataSourceConfiguration) []EventLogConfiguration { return v.EventLogs }).(EventLogConfigurationArrayOutput)
}

// Performance counter configuration
func (o DataSourceConfigurationOutput) PerfCounters() PerformanceCounterConfigurationArrayOutput {
	return o.ApplyT(func(v DataSourceConfiguration) []PerformanceCounterConfiguration { return v.PerfCounters }).(PerformanceCounterConfigurationArrayOutput)
}

// ETW providers configuration
func (o DataSourceConfigurationOutput) Providers() EtwProviderConfigurationArrayOutput {
	return o.ApplyT(func(v DataSourceConfiguration) []EtwProviderConfiguration { return v.Providers }).(EtwProviderConfigurationArrayOutput)
}

type DataSourceConfigurationResponse struct {
	// Windows event logs configuration.
	EventLogs []EventLogConfigurationResponse `pulumi:"eventLogs"`
	// Performance counter configuration
	PerfCounters []PerformanceCounterConfigurationResponse `pulumi:"perfCounters"`
	// ETW providers configuration
	Providers []EtwProviderConfigurationResponse `pulumi:"providers"`
}

// DataSourceConfigurationResponseInput is an input type that accepts DataSourceConfigurationResponseArgs and DataSourceConfigurationResponseOutput values.
// You can construct a concrete instance of `DataSourceConfigurationResponseInput` via:
//
//          DataSourceConfigurationResponseArgs{...}
type DataSourceConfigurationResponseInput interface {
	pulumi.Input

	ToDataSourceConfigurationResponseOutput() DataSourceConfigurationResponseOutput
	ToDataSourceConfigurationResponseOutputWithContext(context.Context) DataSourceConfigurationResponseOutput
}

type DataSourceConfigurationResponseArgs struct {
	// Windows event logs configuration.
	EventLogs EventLogConfigurationResponseArrayInput `pulumi:"eventLogs"`
	// Performance counter configuration
	PerfCounters PerformanceCounterConfigurationResponseArrayInput `pulumi:"perfCounters"`
	// ETW providers configuration
	Providers EtwProviderConfigurationResponseArrayInput `pulumi:"providers"`
}

func (DataSourceConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationResponse)(nil)).Elem()
}

func (i DataSourceConfigurationResponseArgs) ToDataSourceConfigurationResponseOutput() DataSourceConfigurationResponseOutput {
	return i.ToDataSourceConfigurationResponseOutputWithContext(context.Background())
}

func (i DataSourceConfigurationResponseArgs) ToDataSourceConfigurationResponseOutputWithContext(ctx context.Context) DataSourceConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfigurationResponseOutput)
}

type DataSourceConfigurationResponseOutput struct{ *pulumi.OutputState }

func (DataSourceConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationResponse)(nil)).Elem()
}

func (o DataSourceConfigurationResponseOutput) ToDataSourceConfigurationResponseOutput() DataSourceConfigurationResponseOutput {
	return o
}

func (o DataSourceConfigurationResponseOutput) ToDataSourceConfigurationResponseOutputWithContext(ctx context.Context) DataSourceConfigurationResponseOutput {
	return o
}

// Windows event logs configuration.
func (o DataSourceConfigurationResponseOutput) EventLogs() EventLogConfigurationResponseArrayOutput {
	return o.ApplyT(func(v DataSourceConfigurationResponse) []EventLogConfigurationResponse { return v.EventLogs }).(EventLogConfigurationResponseArrayOutput)
}

// Performance counter configuration
func (o DataSourceConfigurationResponseOutput) PerfCounters() PerformanceCounterConfigurationResponseArrayOutput {
	return o.ApplyT(func(v DataSourceConfigurationResponse) []PerformanceCounterConfigurationResponse {
		return v.PerfCounters
	}).(PerformanceCounterConfigurationResponseArrayOutput)
}

// ETW providers configuration
func (o DataSourceConfigurationResponseOutput) Providers() EtwProviderConfigurationResponseArrayOutput {
	return o.ApplyT(func(v DataSourceConfigurationResponse) []EtwProviderConfigurationResponse { return v.Providers }).(EtwProviderConfigurationResponseArrayOutput)
}

// Data source object contains configuration to collect telemetry and one or more sinks to send that telemetry data to
type DataSourceResponse struct {
	Configuration DataSourceConfigurationResponse `pulumi:"configuration"`
	// Datasource kind
	Kind  string                      `pulumi:"kind"`
	Sinks []SinkConfigurationResponse `pulumi:"sinks"`
}

// DataSourceResponseInput is an input type that accepts DataSourceResponseArgs and DataSourceResponseOutput values.
// You can construct a concrete instance of `DataSourceResponseInput` via:
//
//          DataSourceResponseArgs{...}
type DataSourceResponseInput interface {
	pulumi.Input

	ToDataSourceResponseOutput() DataSourceResponseOutput
	ToDataSourceResponseOutputWithContext(context.Context) DataSourceResponseOutput
}

// Data source object contains configuration to collect telemetry and one or more sinks to send that telemetry data to
type DataSourceResponseArgs struct {
	Configuration DataSourceConfigurationResponseInput `pulumi:"configuration"`
	// Datasource kind
	Kind  pulumi.StringInput                  `pulumi:"kind"`
	Sinks SinkConfigurationResponseArrayInput `pulumi:"sinks"`
}

func (DataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceResponse)(nil)).Elem()
}

func (i DataSourceResponseArgs) ToDataSourceResponseOutput() DataSourceResponseOutput {
	return i.ToDataSourceResponseOutputWithContext(context.Background())
}

func (i DataSourceResponseArgs) ToDataSourceResponseOutputWithContext(ctx context.Context) DataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceResponseOutput)
}

// DataSourceResponseArrayInput is an input type that accepts DataSourceResponseArray and DataSourceResponseArrayOutput values.
// You can construct a concrete instance of `DataSourceResponseArrayInput` via:
//
//          DataSourceResponseArray{ DataSourceResponseArgs{...} }
type DataSourceResponseArrayInput interface {
	pulumi.Input

	ToDataSourceResponseArrayOutput() DataSourceResponseArrayOutput
	ToDataSourceResponseArrayOutputWithContext(context.Context) DataSourceResponseArrayOutput
}

type DataSourceResponseArray []DataSourceResponseInput

func (DataSourceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceResponse)(nil)).Elem()
}

func (i DataSourceResponseArray) ToDataSourceResponseArrayOutput() DataSourceResponseArrayOutput {
	return i.ToDataSourceResponseArrayOutputWithContext(context.Background())
}

func (i DataSourceResponseArray) ToDataSourceResponseArrayOutputWithContext(ctx context.Context) DataSourceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceResponseArrayOutput)
}

// Data source object contains configuration to collect telemetry and one or more sinks to send that telemetry data to
type DataSourceResponseOutput struct{ *pulumi.OutputState }

func (DataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceResponse)(nil)).Elem()
}

func (o DataSourceResponseOutput) ToDataSourceResponseOutput() DataSourceResponseOutput {
	return o
}

func (o DataSourceResponseOutput) ToDataSourceResponseOutputWithContext(ctx context.Context) DataSourceResponseOutput {
	return o
}

func (o DataSourceResponseOutput) Configuration() DataSourceConfigurationResponseOutput {
	return o.ApplyT(func(v DataSourceResponse) DataSourceConfigurationResponse { return v.Configuration }).(DataSourceConfigurationResponseOutput)
}

// Datasource kind
func (o DataSourceResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceResponse) string { return v.Kind }).(pulumi.StringOutput)
}

func (o DataSourceResponseOutput) Sinks() SinkConfigurationResponseArrayOutput {
	return o.ApplyT(func(v DataSourceResponse) []SinkConfigurationResponse { return v.Sinks }).(SinkConfigurationResponseArrayOutput)
}

type DataSourceResponseArrayOutput struct{ *pulumi.OutputState }

func (DataSourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceResponse)(nil)).Elem()
}

func (o DataSourceResponseArrayOutput) ToDataSourceResponseArrayOutput() DataSourceResponseArrayOutput {
	return o
}

func (o DataSourceResponseArrayOutput) ToDataSourceResponseArrayOutputWithContext(ctx context.Context) DataSourceResponseArrayOutput {
	return o
}

func (o DataSourceResponseArrayOutput) Index(i pulumi.IntInput) DataSourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSourceResponse {
		return vs[0].([]DataSourceResponse)[vs[1].(int)]
	}).(DataSourceResponseOutput)
}

type EtwEventConfiguration struct {
	Filter *string `pulumi:"filter"`
	Id     int     `pulumi:"id"`
	Name   string  `pulumi:"name"`
}

// EtwEventConfigurationInput is an input type that accepts EtwEventConfigurationArgs and EtwEventConfigurationOutput values.
// You can construct a concrete instance of `EtwEventConfigurationInput` via:
//
//          EtwEventConfigurationArgs{...}
type EtwEventConfigurationInput interface {
	pulumi.Input

	ToEtwEventConfigurationOutput() EtwEventConfigurationOutput
	ToEtwEventConfigurationOutputWithContext(context.Context) EtwEventConfigurationOutput
}

type EtwEventConfigurationArgs struct {
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	Id     pulumi.IntInput       `pulumi:"id"`
	Name   pulumi.StringInput    `pulumi:"name"`
}

func (EtwEventConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EtwEventConfiguration)(nil)).Elem()
}

func (i EtwEventConfigurationArgs) ToEtwEventConfigurationOutput() EtwEventConfigurationOutput {
	return i.ToEtwEventConfigurationOutputWithContext(context.Background())
}

func (i EtwEventConfigurationArgs) ToEtwEventConfigurationOutputWithContext(ctx context.Context) EtwEventConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EtwEventConfigurationOutput)
}

// EtwEventConfigurationArrayInput is an input type that accepts EtwEventConfigurationArray and EtwEventConfigurationArrayOutput values.
// You can construct a concrete instance of `EtwEventConfigurationArrayInput` via:
//
//          EtwEventConfigurationArray{ EtwEventConfigurationArgs{...} }
type EtwEventConfigurationArrayInput interface {
	pulumi.Input

	ToEtwEventConfigurationArrayOutput() EtwEventConfigurationArrayOutput
	ToEtwEventConfigurationArrayOutputWithContext(context.Context) EtwEventConfigurationArrayOutput
}

type EtwEventConfigurationArray []EtwEventConfigurationInput

func (EtwEventConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EtwEventConfiguration)(nil)).Elem()
}

func (i EtwEventConfigurationArray) ToEtwEventConfigurationArrayOutput() EtwEventConfigurationArrayOutput {
	return i.ToEtwEventConfigurationArrayOutputWithContext(context.Background())
}

func (i EtwEventConfigurationArray) ToEtwEventConfigurationArrayOutputWithContext(ctx context.Context) EtwEventConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EtwEventConfigurationArrayOutput)
}

type EtwEventConfigurationOutput struct{ *pulumi.OutputState }

func (EtwEventConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EtwEventConfiguration)(nil)).Elem()
}

func (o EtwEventConfigurationOutput) ToEtwEventConfigurationOutput() EtwEventConfigurationOutput {
	return o
}

func (o EtwEventConfigurationOutput) ToEtwEventConfigurationOutputWithContext(ctx context.Context) EtwEventConfigurationOutput {
	return o
}

func (o EtwEventConfigurationOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EtwEventConfiguration) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o EtwEventConfigurationOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v EtwEventConfiguration) int { return v.Id }).(pulumi.IntOutput)
}

func (o EtwEventConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EtwEventConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

type EtwEventConfigurationArrayOutput struct{ *pulumi.OutputState }

func (EtwEventConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EtwEventConfiguration)(nil)).Elem()
}

func (o EtwEventConfigurationArrayOutput) ToEtwEventConfigurationArrayOutput() EtwEventConfigurationArrayOutput {
	return o
}

func (o EtwEventConfigurationArrayOutput) ToEtwEventConfigurationArrayOutputWithContext(ctx context.Context) EtwEventConfigurationArrayOutput {
	return o
}

func (o EtwEventConfigurationArrayOutput) Index(i pulumi.IntInput) EtwEventConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EtwEventConfiguration {
		return vs[0].([]EtwEventConfiguration)[vs[1].(int)]
	}).(EtwEventConfigurationOutput)
}

type EtwEventConfigurationResponse struct {
	Filter *string `pulumi:"filter"`
	Id     int     `pulumi:"id"`
	Name   string  `pulumi:"name"`
}

// EtwEventConfigurationResponseInput is an input type that accepts EtwEventConfigurationResponseArgs and EtwEventConfigurationResponseOutput values.
// You can construct a concrete instance of `EtwEventConfigurationResponseInput` via:
//
//          EtwEventConfigurationResponseArgs{...}
type EtwEventConfigurationResponseInput interface {
	pulumi.Input

	ToEtwEventConfigurationResponseOutput() EtwEventConfigurationResponseOutput
	ToEtwEventConfigurationResponseOutputWithContext(context.Context) EtwEventConfigurationResponseOutput
}

type EtwEventConfigurationResponseArgs struct {
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	Id     pulumi.IntInput       `pulumi:"id"`
	Name   pulumi.StringInput    `pulumi:"name"`
}

func (EtwEventConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EtwEventConfigurationResponse)(nil)).Elem()
}

func (i EtwEventConfigurationResponseArgs) ToEtwEventConfigurationResponseOutput() EtwEventConfigurationResponseOutput {
	return i.ToEtwEventConfigurationResponseOutputWithContext(context.Background())
}

func (i EtwEventConfigurationResponseArgs) ToEtwEventConfigurationResponseOutputWithContext(ctx context.Context) EtwEventConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EtwEventConfigurationResponseOutput)
}

// EtwEventConfigurationResponseArrayInput is an input type that accepts EtwEventConfigurationResponseArray and EtwEventConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `EtwEventConfigurationResponseArrayInput` via:
//
//          EtwEventConfigurationResponseArray{ EtwEventConfigurationResponseArgs{...} }
type EtwEventConfigurationResponseArrayInput interface {
	pulumi.Input

	ToEtwEventConfigurationResponseArrayOutput() EtwEventConfigurationResponseArrayOutput
	ToEtwEventConfigurationResponseArrayOutputWithContext(context.Context) EtwEventConfigurationResponseArrayOutput
}

type EtwEventConfigurationResponseArray []EtwEventConfigurationResponseInput

func (EtwEventConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EtwEventConfigurationResponse)(nil)).Elem()
}

func (i EtwEventConfigurationResponseArray) ToEtwEventConfigurationResponseArrayOutput() EtwEventConfigurationResponseArrayOutput {
	return i.ToEtwEventConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i EtwEventConfigurationResponseArray) ToEtwEventConfigurationResponseArrayOutputWithContext(ctx context.Context) EtwEventConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EtwEventConfigurationResponseArrayOutput)
}

type EtwEventConfigurationResponseOutput struct{ *pulumi.OutputState }

func (EtwEventConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EtwEventConfigurationResponse)(nil)).Elem()
}

func (o EtwEventConfigurationResponseOutput) ToEtwEventConfigurationResponseOutput() EtwEventConfigurationResponseOutput {
	return o
}

func (o EtwEventConfigurationResponseOutput) ToEtwEventConfigurationResponseOutputWithContext(ctx context.Context) EtwEventConfigurationResponseOutput {
	return o
}

func (o EtwEventConfigurationResponseOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EtwEventConfigurationResponse) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o EtwEventConfigurationResponseOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v EtwEventConfigurationResponse) int { return v.Id }).(pulumi.IntOutput)
}

func (o EtwEventConfigurationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EtwEventConfigurationResponse) string { return v.Name }).(pulumi.StringOutput)
}

type EtwEventConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (EtwEventConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EtwEventConfigurationResponse)(nil)).Elem()
}

func (o EtwEventConfigurationResponseArrayOutput) ToEtwEventConfigurationResponseArrayOutput() EtwEventConfigurationResponseArrayOutput {
	return o
}

func (o EtwEventConfigurationResponseArrayOutput) ToEtwEventConfigurationResponseArrayOutputWithContext(ctx context.Context) EtwEventConfigurationResponseArrayOutput {
	return o
}

func (o EtwEventConfigurationResponseArrayOutput) Index(i pulumi.IntInput) EtwEventConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EtwEventConfigurationResponse {
		return vs[0].([]EtwEventConfigurationResponse)[vs[1].(int)]
	}).(EtwEventConfigurationResponseOutput)
}

type EtwProviderConfiguration struct {
	Events []EtwEventConfiguration `pulumi:"events"`
	Id     string                  `pulumi:"id"`
}

// EtwProviderConfigurationInput is an input type that accepts EtwProviderConfigurationArgs and EtwProviderConfigurationOutput values.
// You can construct a concrete instance of `EtwProviderConfigurationInput` via:
//
//          EtwProviderConfigurationArgs{...}
type EtwProviderConfigurationInput interface {
	pulumi.Input

	ToEtwProviderConfigurationOutput() EtwProviderConfigurationOutput
	ToEtwProviderConfigurationOutputWithContext(context.Context) EtwProviderConfigurationOutput
}

type EtwProviderConfigurationArgs struct {
	Events EtwEventConfigurationArrayInput `pulumi:"events"`
	Id     pulumi.StringInput              `pulumi:"id"`
}

func (EtwProviderConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EtwProviderConfiguration)(nil)).Elem()
}

func (i EtwProviderConfigurationArgs) ToEtwProviderConfigurationOutput() EtwProviderConfigurationOutput {
	return i.ToEtwProviderConfigurationOutputWithContext(context.Background())
}

func (i EtwProviderConfigurationArgs) ToEtwProviderConfigurationOutputWithContext(ctx context.Context) EtwProviderConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EtwProviderConfigurationOutput)
}

// EtwProviderConfigurationArrayInput is an input type that accepts EtwProviderConfigurationArray and EtwProviderConfigurationArrayOutput values.
// You can construct a concrete instance of `EtwProviderConfigurationArrayInput` via:
//
//          EtwProviderConfigurationArray{ EtwProviderConfigurationArgs{...} }
type EtwProviderConfigurationArrayInput interface {
	pulumi.Input

	ToEtwProviderConfigurationArrayOutput() EtwProviderConfigurationArrayOutput
	ToEtwProviderConfigurationArrayOutputWithContext(context.Context) EtwProviderConfigurationArrayOutput
}

type EtwProviderConfigurationArray []EtwProviderConfigurationInput

func (EtwProviderConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EtwProviderConfiguration)(nil)).Elem()
}

func (i EtwProviderConfigurationArray) ToEtwProviderConfigurationArrayOutput() EtwProviderConfigurationArrayOutput {
	return i.ToEtwProviderConfigurationArrayOutputWithContext(context.Background())
}

func (i EtwProviderConfigurationArray) ToEtwProviderConfigurationArrayOutputWithContext(ctx context.Context) EtwProviderConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EtwProviderConfigurationArrayOutput)
}

type EtwProviderConfigurationOutput struct{ *pulumi.OutputState }

func (EtwProviderConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EtwProviderConfiguration)(nil)).Elem()
}

func (o EtwProviderConfigurationOutput) ToEtwProviderConfigurationOutput() EtwProviderConfigurationOutput {
	return o
}

func (o EtwProviderConfigurationOutput) ToEtwProviderConfigurationOutputWithContext(ctx context.Context) EtwProviderConfigurationOutput {
	return o
}

func (o EtwProviderConfigurationOutput) Events() EtwEventConfigurationArrayOutput {
	return o.ApplyT(func(v EtwProviderConfiguration) []EtwEventConfiguration { return v.Events }).(EtwEventConfigurationArrayOutput)
}

func (o EtwProviderConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EtwProviderConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

type EtwProviderConfigurationArrayOutput struct{ *pulumi.OutputState }

func (EtwProviderConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EtwProviderConfiguration)(nil)).Elem()
}

func (o EtwProviderConfigurationArrayOutput) ToEtwProviderConfigurationArrayOutput() EtwProviderConfigurationArrayOutput {
	return o
}

func (o EtwProviderConfigurationArrayOutput) ToEtwProviderConfigurationArrayOutputWithContext(ctx context.Context) EtwProviderConfigurationArrayOutput {
	return o
}

func (o EtwProviderConfigurationArrayOutput) Index(i pulumi.IntInput) EtwProviderConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EtwProviderConfiguration {
		return vs[0].([]EtwProviderConfiguration)[vs[1].(int)]
	}).(EtwProviderConfigurationOutput)
}

type EtwProviderConfigurationResponse struct {
	Events []EtwEventConfigurationResponse `pulumi:"events"`
	Id     string                          `pulumi:"id"`
}

// EtwProviderConfigurationResponseInput is an input type that accepts EtwProviderConfigurationResponseArgs and EtwProviderConfigurationResponseOutput values.
// You can construct a concrete instance of `EtwProviderConfigurationResponseInput` via:
//
//          EtwProviderConfigurationResponseArgs{...}
type EtwProviderConfigurationResponseInput interface {
	pulumi.Input

	ToEtwProviderConfigurationResponseOutput() EtwProviderConfigurationResponseOutput
	ToEtwProviderConfigurationResponseOutputWithContext(context.Context) EtwProviderConfigurationResponseOutput
}

type EtwProviderConfigurationResponseArgs struct {
	Events EtwEventConfigurationResponseArrayInput `pulumi:"events"`
	Id     pulumi.StringInput                      `pulumi:"id"`
}

func (EtwProviderConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EtwProviderConfigurationResponse)(nil)).Elem()
}

func (i EtwProviderConfigurationResponseArgs) ToEtwProviderConfigurationResponseOutput() EtwProviderConfigurationResponseOutput {
	return i.ToEtwProviderConfigurationResponseOutputWithContext(context.Background())
}

func (i EtwProviderConfigurationResponseArgs) ToEtwProviderConfigurationResponseOutputWithContext(ctx context.Context) EtwProviderConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EtwProviderConfigurationResponseOutput)
}

// EtwProviderConfigurationResponseArrayInput is an input type that accepts EtwProviderConfigurationResponseArray and EtwProviderConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `EtwProviderConfigurationResponseArrayInput` via:
//
//          EtwProviderConfigurationResponseArray{ EtwProviderConfigurationResponseArgs{...} }
type EtwProviderConfigurationResponseArrayInput interface {
	pulumi.Input

	ToEtwProviderConfigurationResponseArrayOutput() EtwProviderConfigurationResponseArrayOutput
	ToEtwProviderConfigurationResponseArrayOutputWithContext(context.Context) EtwProviderConfigurationResponseArrayOutput
}

type EtwProviderConfigurationResponseArray []EtwProviderConfigurationResponseInput

func (EtwProviderConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EtwProviderConfigurationResponse)(nil)).Elem()
}

func (i EtwProviderConfigurationResponseArray) ToEtwProviderConfigurationResponseArrayOutput() EtwProviderConfigurationResponseArrayOutput {
	return i.ToEtwProviderConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i EtwProviderConfigurationResponseArray) ToEtwProviderConfigurationResponseArrayOutputWithContext(ctx context.Context) EtwProviderConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EtwProviderConfigurationResponseArrayOutput)
}

type EtwProviderConfigurationResponseOutput struct{ *pulumi.OutputState }

func (EtwProviderConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EtwProviderConfigurationResponse)(nil)).Elem()
}

func (o EtwProviderConfigurationResponseOutput) ToEtwProviderConfigurationResponseOutput() EtwProviderConfigurationResponseOutput {
	return o
}

func (o EtwProviderConfigurationResponseOutput) ToEtwProviderConfigurationResponseOutputWithContext(ctx context.Context) EtwProviderConfigurationResponseOutput {
	return o
}

func (o EtwProviderConfigurationResponseOutput) Events() EtwEventConfigurationResponseArrayOutput {
	return o.ApplyT(func(v EtwProviderConfigurationResponse) []EtwEventConfigurationResponse { return v.Events }).(EtwEventConfigurationResponseArrayOutput)
}

func (o EtwProviderConfigurationResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EtwProviderConfigurationResponse) string { return v.Id }).(pulumi.StringOutput)
}

type EtwProviderConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (EtwProviderConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EtwProviderConfigurationResponse)(nil)).Elem()
}

func (o EtwProviderConfigurationResponseArrayOutput) ToEtwProviderConfigurationResponseArrayOutput() EtwProviderConfigurationResponseArrayOutput {
	return o
}

func (o EtwProviderConfigurationResponseArrayOutput) ToEtwProviderConfigurationResponseArrayOutputWithContext(ctx context.Context) EtwProviderConfigurationResponseArrayOutput {
	return o
}

func (o EtwProviderConfigurationResponseArrayOutput) Index(i pulumi.IntInput) EtwProviderConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EtwProviderConfigurationResponse {
		return vs[0].([]EtwProviderConfigurationResponse)[vs[1].(int)]
	}).(EtwProviderConfigurationResponseOutput)
}

type EventLogConfiguration struct {
	Filter  *string `pulumi:"filter"`
	LogName string  `pulumi:"logName"`
}

// EventLogConfigurationInput is an input type that accepts EventLogConfigurationArgs and EventLogConfigurationOutput values.
// You can construct a concrete instance of `EventLogConfigurationInput` via:
//
//          EventLogConfigurationArgs{...}
type EventLogConfigurationInput interface {
	pulumi.Input

	ToEventLogConfigurationOutput() EventLogConfigurationOutput
	ToEventLogConfigurationOutputWithContext(context.Context) EventLogConfigurationOutput
}

type EventLogConfigurationArgs struct {
	Filter  pulumi.StringPtrInput `pulumi:"filter"`
	LogName pulumi.StringInput    `pulumi:"logName"`
}

func (EventLogConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventLogConfiguration)(nil)).Elem()
}

func (i EventLogConfigurationArgs) ToEventLogConfigurationOutput() EventLogConfigurationOutput {
	return i.ToEventLogConfigurationOutputWithContext(context.Background())
}

func (i EventLogConfigurationArgs) ToEventLogConfigurationOutputWithContext(ctx context.Context) EventLogConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventLogConfigurationOutput)
}

// EventLogConfigurationArrayInput is an input type that accepts EventLogConfigurationArray and EventLogConfigurationArrayOutput values.
// You can construct a concrete instance of `EventLogConfigurationArrayInput` via:
//
//          EventLogConfigurationArray{ EventLogConfigurationArgs{...} }
type EventLogConfigurationArrayInput interface {
	pulumi.Input

	ToEventLogConfigurationArrayOutput() EventLogConfigurationArrayOutput
	ToEventLogConfigurationArrayOutputWithContext(context.Context) EventLogConfigurationArrayOutput
}

type EventLogConfigurationArray []EventLogConfigurationInput

func (EventLogConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventLogConfiguration)(nil)).Elem()
}

func (i EventLogConfigurationArray) ToEventLogConfigurationArrayOutput() EventLogConfigurationArrayOutput {
	return i.ToEventLogConfigurationArrayOutputWithContext(context.Background())
}

func (i EventLogConfigurationArray) ToEventLogConfigurationArrayOutputWithContext(ctx context.Context) EventLogConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventLogConfigurationArrayOutput)
}

type EventLogConfigurationOutput struct{ *pulumi.OutputState }

func (EventLogConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventLogConfiguration)(nil)).Elem()
}

func (o EventLogConfigurationOutput) ToEventLogConfigurationOutput() EventLogConfigurationOutput {
	return o
}

func (o EventLogConfigurationOutput) ToEventLogConfigurationOutputWithContext(ctx context.Context) EventLogConfigurationOutput {
	return o
}

func (o EventLogConfigurationOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventLogConfiguration) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o EventLogConfigurationOutput) LogName() pulumi.StringOutput {
	return o.ApplyT(func(v EventLogConfiguration) string { return v.LogName }).(pulumi.StringOutput)
}

type EventLogConfigurationArrayOutput struct{ *pulumi.OutputState }

func (EventLogConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventLogConfiguration)(nil)).Elem()
}

func (o EventLogConfigurationArrayOutput) ToEventLogConfigurationArrayOutput() EventLogConfigurationArrayOutput {
	return o
}

func (o EventLogConfigurationArrayOutput) ToEventLogConfigurationArrayOutputWithContext(ctx context.Context) EventLogConfigurationArrayOutput {
	return o
}

func (o EventLogConfigurationArrayOutput) Index(i pulumi.IntInput) EventLogConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventLogConfiguration {
		return vs[0].([]EventLogConfiguration)[vs[1].(int)]
	}).(EventLogConfigurationOutput)
}

type EventLogConfigurationResponse struct {
	Filter  *string `pulumi:"filter"`
	LogName string  `pulumi:"logName"`
}

// EventLogConfigurationResponseInput is an input type that accepts EventLogConfigurationResponseArgs and EventLogConfigurationResponseOutput values.
// You can construct a concrete instance of `EventLogConfigurationResponseInput` via:
//
//          EventLogConfigurationResponseArgs{...}
type EventLogConfigurationResponseInput interface {
	pulumi.Input

	ToEventLogConfigurationResponseOutput() EventLogConfigurationResponseOutput
	ToEventLogConfigurationResponseOutputWithContext(context.Context) EventLogConfigurationResponseOutput
}

type EventLogConfigurationResponseArgs struct {
	Filter  pulumi.StringPtrInput `pulumi:"filter"`
	LogName pulumi.StringInput    `pulumi:"logName"`
}

func (EventLogConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventLogConfigurationResponse)(nil)).Elem()
}

func (i EventLogConfigurationResponseArgs) ToEventLogConfigurationResponseOutput() EventLogConfigurationResponseOutput {
	return i.ToEventLogConfigurationResponseOutputWithContext(context.Background())
}

func (i EventLogConfigurationResponseArgs) ToEventLogConfigurationResponseOutputWithContext(ctx context.Context) EventLogConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventLogConfigurationResponseOutput)
}

// EventLogConfigurationResponseArrayInput is an input type that accepts EventLogConfigurationResponseArray and EventLogConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `EventLogConfigurationResponseArrayInput` via:
//
//          EventLogConfigurationResponseArray{ EventLogConfigurationResponseArgs{...} }
type EventLogConfigurationResponseArrayInput interface {
	pulumi.Input

	ToEventLogConfigurationResponseArrayOutput() EventLogConfigurationResponseArrayOutput
	ToEventLogConfigurationResponseArrayOutputWithContext(context.Context) EventLogConfigurationResponseArrayOutput
}

type EventLogConfigurationResponseArray []EventLogConfigurationResponseInput

func (EventLogConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventLogConfigurationResponse)(nil)).Elem()
}

func (i EventLogConfigurationResponseArray) ToEventLogConfigurationResponseArrayOutput() EventLogConfigurationResponseArrayOutput {
	return i.ToEventLogConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i EventLogConfigurationResponseArray) ToEventLogConfigurationResponseArrayOutputWithContext(ctx context.Context) EventLogConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventLogConfigurationResponseArrayOutput)
}

type EventLogConfigurationResponseOutput struct{ *pulumi.OutputState }

func (EventLogConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventLogConfigurationResponse)(nil)).Elem()
}

func (o EventLogConfigurationResponseOutput) ToEventLogConfigurationResponseOutput() EventLogConfigurationResponseOutput {
	return o
}

func (o EventLogConfigurationResponseOutput) ToEventLogConfigurationResponseOutputWithContext(ctx context.Context) EventLogConfigurationResponseOutput {
	return o
}

func (o EventLogConfigurationResponseOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventLogConfigurationResponse) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o EventLogConfigurationResponseOutput) LogName() pulumi.StringOutput {
	return o.ApplyT(func(v EventLogConfigurationResponse) string { return v.LogName }).(pulumi.StringOutput)
}

type EventLogConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (EventLogConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventLogConfigurationResponse)(nil)).Elem()
}

func (o EventLogConfigurationResponseArrayOutput) ToEventLogConfigurationResponseArrayOutput() EventLogConfigurationResponseArrayOutput {
	return o
}

func (o EventLogConfigurationResponseArrayOutput) ToEventLogConfigurationResponseArrayOutputWithContext(ctx context.Context) EventLogConfigurationResponseArrayOutput {
	return o
}

func (o EventLogConfigurationResponseArrayOutput) Index(i pulumi.IntInput) EventLogConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventLogConfigurationResponse {
		return vs[0].([]EventLogConfigurationResponse)[vs[1].(int)]
	}).(EventLogConfigurationResponseOutput)
}

type PerformanceCounterConfiguration struct {
	Instance       *string `pulumi:"instance"`
	Name           string  `pulumi:"name"`
	SamplingPeriod string  `pulumi:"samplingPeriod"`
}

// PerformanceCounterConfigurationInput is an input type that accepts PerformanceCounterConfigurationArgs and PerformanceCounterConfigurationOutput values.
// You can construct a concrete instance of `PerformanceCounterConfigurationInput` via:
//
//          PerformanceCounterConfigurationArgs{...}
type PerformanceCounterConfigurationInput interface {
	pulumi.Input

	ToPerformanceCounterConfigurationOutput() PerformanceCounterConfigurationOutput
	ToPerformanceCounterConfigurationOutputWithContext(context.Context) PerformanceCounterConfigurationOutput
}

type PerformanceCounterConfigurationArgs struct {
	Instance       pulumi.StringPtrInput `pulumi:"instance"`
	Name           pulumi.StringInput    `pulumi:"name"`
	SamplingPeriod pulumi.StringInput    `pulumi:"samplingPeriod"`
}

func (PerformanceCounterConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PerformanceCounterConfiguration)(nil)).Elem()
}

func (i PerformanceCounterConfigurationArgs) ToPerformanceCounterConfigurationOutput() PerformanceCounterConfigurationOutput {
	return i.ToPerformanceCounterConfigurationOutputWithContext(context.Background())
}

func (i PerformanceCounterConfigurationArgs) ToPerformanceCounterConfigurationOutputWithContext(ctx context.Context) PerformanceCounterConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerformanceCounterConfigurationOutput)
}

// PerformanceCounterConfigurationArrayInput is an input type that accepts PerformanceCounterConfigurationArray and PerformanceCounterConfigurationArrayOutput values.
// You can construct a concrete instance of `PerformanceCounterConfigurationArrayInput` via:
//
//          PerformanceCounterConfigurationArray{ PerformanceCounterConfigurationArgs{...} }
type PerformanceCounterConfigurationArrayInput interface {
	pulumi.Input

	ToPerformanceCounterConfigurationArrayOutput() PerformanceCounterConfigurationArrayOutput
	ToPerformanceCounterConfigurationArrayOutputWithContext(context.Context) PerformanceCounterConfigurationArrayOutput
}

type PerformanceCounterConfigurationArray []PerformanceCounterConfigurationInput

func (PerformanceCounterConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PerformanceCounterConfiguration)(nil)).Elem()
}

func (i PerformanceCounterConfigurationArray) ToPerformanceCounterConfigurationArrayOutput() PerformanceCounterConfigurationArrayOutput {
	return i.ToPerformanceCounterConfigurationArrayOutputWithContext(context.Background())
}

func (i PerformanceCounterConfigurationArray) ToPerformanceCounterConfigurationArrayOutputWithContext(ctx context.Context) PerformanceCounterConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerformanceCounterConfigurationArrayOutput)
}

type PerformanceCounterConfigurationOutput struct{ *pulumi.OutputState }

func (PerformanceCounterConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PerformanceCounterConfiguration)(nil)).Elem()
}

func (o PerformanceCounterConfigurationOutput) ToPerformanceCounterConfigurationOutput() PerformanceCounterConfigurationOutput {
	return o
}

func (o PerformanceCounterConfigurationOutput) ToPerformanceCounterConfigurationOutputWithContext(ctx context.Context) PerformanceCounterConfigurationOutput {
	return o
}

func (o PerformanceCounterConfigurationOutput) Instance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PerformanceCounterConfiguration) *string { return v.Instance }).(pulumi.StringPtrOutput)
}

func (o PerformanceCounterConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PerformanceCounterConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

func (o PerformanceCounterConfigurationOutput) SamplingPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v PerformanceCounterConfiguration) string { return v.SamplingPeriod }).(pulumi.StringOutput)
}

type PerformanceCounterConfigurationArrayOutput struct{ *pulumi.OutputState }

func (PerformanceCounterConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PerformanceCounterConfiguration)(nil)).Elem()
}

func (o PerformanceCounterConfigurationArrayOutput) ToPerformanceCounterConfigurationArrayOutput() PerformanceCounterConfigurationArrayOutput {
	return o
}

func (o PerformanceCounterConfigurationArrayOutput) ToPerformanceCounterConfigurationArrayOutputWithContext(ctx context.Context) PerformanceCounterConfigurationArrayOutput {
	return o
}

func (o PerformanceCounterConfigurationArrayOutput) Index(i pulumi.IntInput) PerformanceCounterConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PerformanceCounterConfiguration {
		return vs[0].([]PerformanceCounterConfiguration)[vs[1].(int)]
	}).(PerformanceCounterConfigurationOutput)
}

type PerformanceCounterConfigurationResponse struct {
	Instance       *string `pulumi:"instance"`
	Name           string  `pulumi:"name"`
	SamplingPeriod string  `pulumi:"samplingPeriod"`
}

// PerformanceCounterConfigurationResponseInput is an input type that accepts PerformanceCounterConfigurationResponseArgs and PerformanceCounterConfigurationResponseOutput values.
// You can construct a concrete instance of `PerformanceCounterConfigurationResponseInput` via:
//
//          PerformanceCounterConfigurationResponseArgs{...}
type PerformanceCounterConfigurationResponseInput interface {
	pulumi.Input

	ToPerformanceCounterConfigurationResponseOutput() PerformanceCounterConfigurationResponseOutput
	ToPerformanceCounterConfigurationResponseOutputWithContext(context.Context) PerformanceCounterConfigurationResponseOutput
}

type PerformanceCounterConfigurationResponseArgs struct {
	Instance       pulumi.StringPtrInput `pulumi:"instance"`
	Name           pulumi.StringInput    `pulumi:"name"`
	SamplingPeriod pulumi.StringInput    `pulumi:"samplingPeriod"`
}

func (PerformanceCounterConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PerformanceCounterConfigurationResponse)(nil)).Elem()
}

func (i PerformanceCounterConfigurationResponseArgs) ToPerformanceCounterConfigurationResponseOutput() PerformanceCounterConfigurationResponseOutput {
	return i.ToPerformanceCounterConfigurationResponseOutputWithContext(context.Background())
}

func (i PerformanceCounterConfigurationResponseArgs) ToPerformanceCounterConfigurationResponseOutputWithContext(ctx context.Context) PerformanceCounterConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerformanceCounterConfigurationResponseOutput)
}

// PerformanceCounterConfigurationResponseArrayInput is an input type that accepts PerformanceCounterConfigurationResponseArray and PerformanceCounterConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `PerformanceCounterConfigurationResponseArrayInput` via:
//
//          PerformanceCounterConfigurationResponseArray{ PerformanceCounterConfigurationResponseArgs{...} }
type PerformanceCounterConfigurationResponseArrayInput interface {
	pulumi.Input

	ToPerformanceCounterConfigurationResponseArrayOutput() PerformanceCounterConfigurationResponseArrayOutput
	ToPerformanceCounterConfigurationResponseArrayOutputWithContext(context.Context) PerformanceCounterConfigurationResponseArrayOutput
}

type PerformanceCounterConfigurationResponseArray []PerformanceCounterConfigurationResponseInput

func (PerformanceCounterConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PerformanceCounterConfigurationResponse)(nil)).Elem()
}

func (i PerformanceCounterConfigurationResponseArray) ToPerformanceCounterConfigurationResponseArrayOutput() PerformanceCounterConfigurationResponseArrayOutput {
	return i.ToPerformanceCounterConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i PerformanceCounterConfigurationResponseArray) ToPerformanceCounterConfigurationResponseArrayOutputWithContext(ctx context.Context) PerformanceCounterConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerformanceCounterConfigurationResponseArrayOutput)
}

type PerformanceCounterConfigurationResponseOutput struct{ *pulumi.OutputState }

func (PerformanceCounterConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PerformanceCounterConfigurationResponse)(nil)).Elem()
}

func (o PerformanceCounterConfigurationResponseOutput) ToPerformanceCounterConfigurationResponseOutput() PerformanceCounterConfigurationResponseOutput {
	return o
}

func (o PerformanceCounterConfigurationResponseOutput) ToPerformanceCounterConfigurationResponseOutputWithContext(ctx context.Context) PerformanceCounterConfigurationResponseOutput {
	return o
}

func (o PerformanceCounterConfigurationResponseOutput) Instance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PerformanceCounterConfigurationResponse) *string { return v.Instance }).(pulumi.StringPtrOutput)
}

func (o PerformanceCounterConfigurationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PerformanceCounterConfigurationResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o PerformanceCounterConfigurationResponseOutput) SamplingPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v PerformanceCounterConfigurationResponse) string { return v.SamplingPeriod }).(pulumi.StringOutput)
}

type PerformanceCounterConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (PerformanceCounterConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PerformanceCounterConfigurationResponse)(nil)).Elem()
}

func (o PerformanceCounterConfigurationResponseArrayOutput) ToPerformanceCounterConfigurationResponseArrayOutput() PerformanceCounterConfigurationResponseArrayOutput {
	return o
}

func (o PerformanceCounterConfigurationResponseArrayOutput) ToPerformanceCounterConfigurationResponseArrayOutputWithContext(ctx context.Context) PerformanceCounterConfigurationResponseArrayOutput {
	return o
}

func (o PerformanceCounterConfigurationResponseArrayOutput) Index(i pulumi.IntInput) PerformanceCounterConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PerformanceCounterConfigurationResponse {
		return vs[0].([]PerformanceCounterConfigurationResponse)[vs[1].(int)]
	}).(PerformanceCounterConfigurationResponseOutput)
}

type SinkConfiguration struct {
	Kind string `pulumi:"kind"`
}

// SinkConfigurationInput is an input type that accepts SinkConfigurationArgs and SinkConfigurationOutput values.
// You can construct a concrete instance of `SinkConfigurationInput` via:
//
//          SinkConfigurationArgs{...}
type SinkConfigurationInput interface {
	pulumi.Input

	ToSinkConfigurationOutput() SinkConfigurationOutput
	ToSinkConfigurationOutputWithContext(context.Context) SinkConfigurationOutput
}

type SinkConfigurationArgs struct {
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (SinkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SinkConfiguration)(nil)).Elem()
}

func (i SinkConfigurationArgs) ToSinkConfigurationOutput() SinkConfigurationOutput {
	return i.ToSinkConfigurationOutputWithContext(context.Background())
}

func (i SinkConfigurationArgs) ToSinkConfigurationOutputWithContext(ctx context.Context) SinkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SinkConfigurationOutput)
}

// SinkConfigurationArrayInput is an input type that accepts SinkConfigurationArray and SinkConfigurationArrayOutput values.
// You can construct a concrete instance of `SinkConfigurationArrayInput` via:
//
//          SinkConfigurationArray{ SinkConfigurationArgs{...} }
type SinkConfigurationArrayInput interface {
	pulumi.Input

	ToSinkConfigurationArrayOutput() SinkConfigurationArrayOutput
	ToSinkConfigurationArrayOutputWithContext(context.Context) SinkConfigurationArrayOutput
}

type SinkConfigurationArray []SinkConfigurationInput

func (SinkConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SinkConfiguration)(nil)).Elem()
}

func (i SinkConfigurationArray) ToSinkConfigurationArrayOutput() SinkConfigurationArrayOutput {
	return i.ToSinkConfigurationArrayOutputWithContext(context.Background())
}

func (i SinkConfigurationArray) ToSinkConfigurationArrayOutputWithContext(ctx context.Context) SinkConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SinkConfigurationArrayOutput)
}

type SinkConfigurationOutput struct{ *pulumi.OutputState }

func (SinkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SinkConfiguration)(nil)).Elem()
}

func (o SinkConfigurationOutput) ToSinkConfigurationOutput() SinkConfigurationOutput {
	return o
}

func (o SinkConfigurationOutput) ToSinkConfigurationOutputWithContext(ctx context.Context) SinkConfigurationOutput {
	return o
}

func (o SinkConfigurationOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v SinkConfiguration) string { return v.Kind }).(pulumi.StringOutput)
}

type SinkConfigurationArrayOutput struct{ *pulumi.OutputState }

func (SinkConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SinkConfiguration)(nil)).Elem()
}

func (o SinkConfigurationArrayOutput) ToSinkConfigurationArrayOutput() SinkConfigurationArrayOutput {
	return o
}

func (o SinkConfigurationArrayOutput) ToSinkConfigurationArrayOutputWithContext(ctx context.Context) SinkConfigurationArrayOutput {
	return o
}

func (o SinkConfigurationArrayOutput) Index(i pulumi.IntInput) SinkConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SinkConfiguration {
		return vs[0].([]SinkConfiguration)[vs[1].(int)]
	}).(SinkConfigurationOutput)
}

type SinkConfigurationResponse struct {
	Kind string `pulumi:"kind"`
}

// SinkConfigurationResponseInput is an input type that accepts SinkConfigurationResponseArgs and SinkConfigurationResponseOutput values.
// You can construct a concrete instance of `SinkConfigurationResponseInput` via:
//
//          SinkConfigurationResponseArgs{...}
type SinkConfigurationResponseInput interface {
	pulumi.Input

	ToSinkConfigurationResponseOutput() SinkConfigurationResponseOutput
	ToSinkConfigurationResponseOutputWithContext(context.Context) SinkConfigurationResponseOutput
}

type SinkConfigurationResponseArgs struct {
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (SinkConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SinkConfigurationResponse)(nil)).Elem()
}

func (i SinkConfigurationResponseArgs) ToSinkConfigurationResponseOutput() SinkConfigurationResponseOutput {
	return i.ToSinkConfigurationResponseOutputWithContext(context.Background())
}

func (i SinkConfigurationResponseArgs) ToSinkConfigurationResponseOutputWithContext(ctx context.Context) SinkConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SinkConfigurationResponseOutput)
}

// SinkConfigurationResponseArrayInput is an input type that accepts SinkConfigurationResponseArray and SinkConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `SinkConfigurationResponseArrayInput` via:
//
//          SinkConfigurationResponseArray{ SinkConfigurationResponseArgs{...} }
type SinkConfigurationResponseArrayInput interface {
	pulumi.Input

	ToSinkConfigurationResponseArrayOutput() SinkConfigurationResponseArrayOutput
	ToSinkConfigurationResponseArrayOutputWithContext(context.Context) SinkConfigurationResponseArrayOutput
}

type SinkConfigurationResponseArray []SinkConfigurationResponseInput

func (SinkConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SinkConfigurationResponse)(nil)).Elem()
}

func (i SinkConfigurationResponseArray) ToSinkConfigurationResponseArrayOutput() SinkConfigurationResponseArrayOutput {
	return i.ToSinkConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i SinkConfigurationResponseArray) ToSinkConfigurationResponseArrayOutputWithContext(ctx context.Context) SinkConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SinkConfigurationResponseArrayOutput)
}

type SinkConfigurationResponseOutput struct{ *pulumi.OutputState }

func (SinkConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SinkConfigurationResponse)(nil)).Elem()
}

func (o SinkConfigurationResponseOutput) ToSinkConfigurationResponseOutput() SinkConfigurationResponseOutput {
	return o
}

func (o SinkConfigurationResponseOutput) ToSinkConfigurationResponseOutputWithContext(ctx context.Context) SinkConfigurationResponseOutput {
	return o
}

func (o SinkConfigurationResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v SinkConfigurationResponse) string { return v.Kind }).(pulumi.StringOutput)
}

type SinkConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (SinkConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SinkConfigurationResponse)(nil)).Elem()
}

func (o SinkConfigurationResponseArrayOutput) ToSinkConfigurationResponseArrayOutput() SinkConfigurationResponseArrayOutput {
	return o
}

func (o SinkConfigurationResponseArrayOutput) ToSinkConfigurationResponseArrayOutputWithContext(ctx context.Context) SinkConfigurationResponseArrayOutput {
	return o
}

func (o SinkConfigurationResponseArrayOutput) Index(i pulumi.IntInput) SinkConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SinkConfigurationResponse {
		return vs[0].([]SinkConfigurationResponse)[vs[1].(int)]
	}).(SinkConfigurationResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(DataSourceOutput{})
	pulumi.RegisterOutputType(DataSourceArrayOutput{})
	pulumi.RegisterOutputType(DataSourceConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceConfigurationResponseOutput{})
	pulumi.RegisterOutputType(DataSourceResponseOutput{})
	pulumi.RegisterOutputType(DataSourceResponseArrayOutput{})
	pulumi.RegisterOutputType(EtwEventConfigurationOutput{})
	pulumi.RegisterOutputType(EtwEventConfigurationArrayOutput{})
	pulumi.RegisterOutputType(EtwEventConfigurationResponseOutput{})
	pulumi.RegisterOutputType(EtwEventConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(EtwProviderConfigurationOutput{})
	pulumi.RegisterOutputType(EtwProviderConfigurationArrayOutput{})
	pulumi.RegisterOutputType(EtwProviderConfigurationResponseOutput{})
	pulumi.RegisterOutputType(EtwProviderConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(EventLogConfigurationOutput{})
	pulumi.RegisterOutputType(EventLogConfigurationArrayOutput{})
	pulumi.RegisterOutputType(EventLogConfigurationResponseOutput{})
	pulumi.RegisterOutputType(EventLogConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(PerformanceCounterConfigurationOutput{})
	pulumi.RegisterOutputType(PerformanceCounterConfigurationArrayOutput{})
	pulumi.RegisterOutputType(PerformanceCounterConfigurationResponseOutput{})
	pulumi.RegisterOutputType(PerformanceCounterConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(SinkConfigurationOutput{})
	pulumi.RegisterOutputType(SinkConfigurationArrayOutput{})
	pulumi.RegisterOutputType(SinkConfigurationResponseOutput{})
	pulumi.RegisterOutputType(SinkConfigurationResponseArrayOutput{})
}
