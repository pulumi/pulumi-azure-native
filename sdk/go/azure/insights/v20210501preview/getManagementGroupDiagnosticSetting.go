// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210501preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The management group diagnostic setting resource.
func LookupManagementGroupDiagnosticSetting(ctx *pulumi.Context, args *LookupManagementGroupDiagnosticSettingArgs, opts ...pulumi.InvokeOption) (*LookupManagementGroupDiagnosticSettingResult, error) {
	var rv LookupManagementGroupDiagnosticSettingResult
	err := ctx.Invoke("azure-native:insights/v20210501preview:getManagementGroupDiagnosticSetting", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupManagementGroupDiagnosticSettingArgs struct {
	// The management group id.
	ManagementGroupId string `pulumi:"managementGroupId"`
	// The name of the diagnostic setting.
	Name string `pulumi:"name"`
}

// The management group diagnostic setting resource.
type LookupManagementGroupDiagnosticSettingResult struct {
	// The resource Id for the event hub authorization rule.
	EventHubAuthorizationRuleId *string `pulumi:"eventHubAuthorizationRuleId"`
	// The name of the event hub. If none is specified, the default event hub will be selected.
	EventHubName *string `pulumi:"eventHubName"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The list of logs settings.
	Logs []ManagementGroupLogSettingsResponse `pulumi:"logs"`
	// The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic Logs.
	MarketplacePartnerId *string `pulumi:"marketplacePartnerId"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.
	ServiceBusRuleId *string `pulumi:"serviceBusRuleId"`
	// The resource ID of the storage account to which you would like to send Diagnostic Logs.
	StorageAccountId *string `pulumi:"storageAccountId"`
	// The system metadata related to this resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic Logs. Example: /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
	WorkspaceId *string `pulumi:"workspaceId"`
}

func LookupManagementGroupDiagnosticSettingOutput(ctx *pulumi.Context, args LookupManagementGroupDiagnosticSettingOutputArgs, opts ...pulumi.InvokeOption) LookupManagementGroupDiagnosticSettingResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupManagementGroupDiagnosticSettingResult, error) {
			args := v.(LookupManagementGroupDiagnosticSettingArgs)
			r, err := LookupManagementGroupDiagnosticSetting(ctx, &args, opts...)
			var s LookupManagementGroupDiagnosticSettingResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupManagementGroupDiagnosticSettingResultOutput)
}

type LookupManagementGroupDiagnosticSettingOutputArgs struct {
	// The management group id.
	ManagementGroupId pulumi.StringInput `pulumi:"managementGroupId"`
	// The name of the diagnostic setting.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupManagementGroupDiagnosticSettingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagementGroupDiagnosticSettingArgs)(nil)).Elem()
}

// The management group diagnostic setting resource.
type LookupManagementGroupDiagnosticSettingResultOutput struct{ *pulumi.OutputState }

func (LookupManagementGroupDiagnosticSettingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagementGroupDiagnosticSettingResult)(nil)).Elem()
}

func (o LookupManagementGroupDiagnosticSettingResultOutput) ToLookupManagementGroupDiagnosticSettingResultOutput() LookupManagementGroupDiagnosticSettingResultOutput {
	return o
}

func (o LookupManagementGroupDiagnosticSettingResultOutput) ToLookupManagementGroupDiagnosticSettingResultOutputWithContext(ctx context.Context) LookupManagementGroupDiagnosticSettingResultOutput {
	return o
}

// The resource Id for the event hub authorization rule.
func (o LookupManagementGroupDiagnosticSettingResultOutput) EventHubAuthorizationRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagementGroupDiagnosticSettingResult) *string { return v.EventHubAuthorizationRuleId }).(pulumi.StringPtrOutput)
}

// The name of the event hub. If none is specified, the default event hub will be selected.
func (o LookupManagementGroupDiagnosticSettingResultOutput) EventHubName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagementGroupDiagnosticSettingResult) *string { return v.EventHubName }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupManagementGroupDiagnosticSettingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagementGroupDiagnosticSettingResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of logs settings.
func (o LookupManagementGroupDiagnosticSettingResultOutput) Logs() ManagementGroupLogSettingsResponseArrayOutput {
	return o.ApplyT(func(v LookupManagementGroupDiagnosticSettingResult) []ManagementGroupLogSettingsResponse {
		return v.Logs
	}).(ManagementGroupLogSettingsResponseArrayOutput)
}

// The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic Logs.
func (o LookupManagementGroupDiagnosticSettingResultOutput) MarketplacePartnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagementGroupDiagnosticSettingResult) *string { return v.MarketplacePartnerId }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o LookupManagementGroupDiagnosticSettingResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagementGroupDiagnosticSettingResult) string { return v.Name }).(pulumi.StringOutput)
}

// The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.
func (o LookupManagementGroupDiagnosticSettingResultOutput) ServiceBusRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagementGroupDiagnosticSettingResult) *string { return v.ServiceBusRuleId }).(pulumi.StringPtrOutput)
}

// The resource ID of the storage account to which you would like to send Diagnostic Logs.
func (o LookupManagementGroupDiagnosticSettingResultOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagementGroupDiagnosticSettingResult) *string { return v.StorageAccountId }).(pulumi.StringPtrOutput)
}

// The system metadata related to this resource.
func (o LookupManagementGroupDiagnosticSettingResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupManagementGroupDiagnosticSettingResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupManagementGroupDiagnosticSettingResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagementGroupDiagnosticSettingResult) string { return v.Type }).(pulumi.StringOutput)
}

// The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic Logs. Example: /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
func (o LookupManagementGroupDiagnosticSettingResultOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagementGroupDiagnosticSettingResult) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagementGroupDiagnosticSettingResultOutput{})
}
