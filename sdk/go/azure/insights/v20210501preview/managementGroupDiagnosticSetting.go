// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210501preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The management group diagnostic setting resource.
type ManagementGroupDiagnosticSetting struct {
	pulumi.CustomResourceState

	// The resource Id for the event hub authorization rule.
	EventHubAuthorizationRuleId pulumi.StringPtrOutput `pulumi:"eventHubAuthorizationRuleId"`
	// The name of the event hub. If none is specified, the default event hub will be selected.
	EventHubName pulumi.StringPtrOutput `pulumi:"eventHubName"`
	// The list of logs settings.
	Logs ManagementGroupLogSettingsResponseArrayOutput `pulumi:"logs"`
	// The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic Logs.
	MarketplacePartnerId pulumi.StringPtrOutput `pulumi:"marketplacePartnerId"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.
	ServiceBusRuleId pulumi.StringPtrOutput `pulumi:"serviceBusRuleId"`
	// The resource ID of the storage account to which you would like to send Diagnostic Logs.
	StorageAccountId pulumi.StringPtrOutput `pulumi:"storageAccountId"`
	// The system metadata related to this resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic Logs. Example: /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
	WorkspaceId pulumi.StringPtrOutput `pulumi:"workspaceId"`
}

// NewManagementGroupDiagnosticSetting registers a new resource with the given unique name, arguments, and options.
func NewManagementGroupDiagnosticSetting(ctx *pulumi.Context,
	name string, args *ManagementGroupDiagnosticSettingArgs, opts ...pulumi.ResourceOption) (*ManagementGroupDiagnosticSetting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagementGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ManagementGroupId'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:insights:ManagementGroupDiagnosticSetting"),
		},
		{
			Type: pulumi.String("azure-native:insights/v20200101preview:ManagementGroupDiagnosticSetting"),
		},
	})
	opts = append(opts, aliases)
	var resource ManagementGroupDiagnosticSetting
	err := ctx.RegisterResource("azure-native:insights/v20210501preview:ManagementGroupDiagnosticSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagementGroupDiagnosticSetting gets an existing ManagementGroupDiagnosticSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagementGroupDiagnosticSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagementGroupDiagnosticSettingState, opts ...pulumi.ResourceOption) (*ManagementGroupDiagnosticSetting, error) {
	var resource ManagementGroupDiagnosticSetting
	err := ctx.ReadResource("azure-native:insights/v20210501preview:ManagementGroupDiagnosticSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagementGroupDiagnosticSetting resources.
type managementGroupDiagnosticSettingState struct {
}

type ManagementGroupDiagnosticSettingState struct {
}

func (ManagementGroupDiagnosticSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*managementGroupDiagnosticSettingState)(nil)).Elem()
}

type managementGroupDiagnosticSettingArgs struct {
	// The resource Id for the event hub authorization rule.
	EventHubAuthorizationRuleId *string `pulumi:"eventHubAuthorizationRuleId"`
	// The name of the event hub. If none is specified, the default event hub will be selected.
	EventHubName *string `pulumi:"eventHubName"`
	// The list of logs settings.
	Logs []ManagementGroupLogSettings `pulumi:"logs"`
	// The management group id.
	ManagementGroupId string `pulumi:"managementGroupId"`
	// The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic Logs.
	MarketplacePartnerId *string `pulumi:"marketplacePartnerId"`
	// The name of the diagnostic setting.
	Name *string `pulumi:"name"`
	// The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.
	ServiceBusRuleId *string `pulumi:"serviceBusRuleId"`
	// The resource ID of the storage account to which you would like to send Diagnostic Logs.
	StorageAccountId *string `pulumi:"storageAccountId"`
	// The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic Logs. Example: /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
	WorkspaceId *string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a ManagementGroupDiagnosticSetting resource.
type ManagementGroupDiagnosticSettingArgs struct {
	// The resource Id for the event hub authorization rule.
	EventHubAuthorizationRuleId pulumi.StringPtrInput
	// The name of the event hub. If none is specified, the default event hub will be selected.
	EventHubName pulumi.StringPtrInput
	// The list of logs settings.
	Logs ManagementGroupLogSettingsArrayInput
	// The management group id.
	ManagementGroupId pulumi.StringInput
	// The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic Logs.
	MarketplacePartnerId pulumi.StringPtrInput
	// The name of the diagnostic setting.
	Name pulumi.StringPtrInput
	// The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.
	ServiceBusRuleId pulumi.StringPtrInput
	// The resource ID of the storage account to which you would like to send Diagnostic Logs.
	StorageAccountId pulumi.StringPtrInput
	// The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic Logs. Example: /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
	WorkspaceId pulumi.StringPtrInput
}

func (ManagementGroupDiagnosticSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managementGroupDiagnosticSettingArgs)(nil)).Elem()
}

type ManagementGroupDiagnosticSettingInput interface {
	pulumi.Input

	ToManagementGroupDiagnosticSettingOutput() ManagementGroupDiagnosticSettingOutput
	ToManagementGroupDiagnosticSettingOutputWithContext(ctx context.Context) ManagementGroupDiagnosticSettingOutput
}

func (*ManagementGroupDiagnosticSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementGroupDiagnosticSetting)(nil)).Elem()
}

func (i *ManagementGroupDiagnosticSetting) ToManagementGroupDiagnosticSettingOutput() ManagementGroupDiagnosticSettingOutput {
	return i.ToManagementGroupDiagnosticSettingOutputWithContext(context.Background())
}

func (i *ManagementGroupDiagnosticSetting) ToManagementGroupDiagnosticSettingOutputWithContext(ctx context.Context) ManagementGroupDiagnosticSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementGroupDiagnosticSettingOutput)
}

type ManagementGroupDiagnosticSettingOutput struct{ *pulumi.OutputState }

func (ManagementGroupDiagnosticSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementGroupDiagnosticSetting)(nil)).Elem()
}

func (o ManagementGroupDiagnosticSettingOutput) ToManagementGroupDiagnosticSettingOutput() ManagementGroupDiagnosticSettingOutput {
	return o
}

func (o ManagementGroupDiagnosticSettingOutput) ToManagementGroupDiagnosticSettingOutputWithContext(ctx context.Context) ManagementGroupDiagnosticSettingOutput {
	return o
}

// The resource Id for the event hub authorization rule.
func (o ManagementGroupDiagnosticSettingOutput) EventHubAuthorizationRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementGroupDiagnosticSetting) pulumi.StringPtrOutput { return v.EventHubAuthorizationRuleId }).(pulumi.StringPtrOutput)
}

// The name of the event hub. If none is specified, the default event hub will be selected.
func (o ManagementGroupDiagnosticSettingOutput) EventHubName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementGroupDiagnosticSetting) pulumi.StringPtrOutput { return v.EventHubName }).(pulumi.StringPtrOutput)
}

// The list of logs settings.
func (o ManagementGroupDiagnosticSettingOutput) Logs() ManagementGroupLogSettingsResponseArrayOutput {
	return o.ApplyT(func(v *ManagementGroupDiagnosticSetting) ManagementGroupLogSettingsResponseArrayOutput { return v.Logs }).(ManagementGroupLogSettingsResponseArrayOutput)
}

// The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic Logs.
func (o ManagementGroupDiagnosticSettingOutput) MarketplacePartnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementGroupDiagnosticSetting) pulumi.StringPtrOutput { return v.MarketplacePartnerId }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o ManagementGroupDiagnosticSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementGroupDiagnosticSetting) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.
func (o ManagementGroupDiagnosticSettingOutput) ServiceBusRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementGroupDiagnosticSetting) pulumi.StringPtrOutput { return v.ServiceBusRuleId }).(pulumi.StringPtrOutput)
}

// The resource ID of the storage account to which you would like to send Diagnostic Logs.
func (o ManagementGroupDiagnosticSettingOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementGroupDiagnosticSetting) pulumi.StringPtrOutput { return v.StorageAccountId }).(pulumi.StringPtrOutput)
}

// The system metadata related to this resource.
func (o ManagementGroupDiagnosticSettingOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ManagementGroupDiagnosticSetting) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ManagementGroupDiagnosticSettingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementGroupDiagnosticSetting) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic Logs. Example: /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
func (o ManagementGroupDiagnosticSettingOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementGroupDiagnosticSetting) pulumi.StringPtrOutput { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ManagementGroupDiagnosticSettingOutput{})
}
