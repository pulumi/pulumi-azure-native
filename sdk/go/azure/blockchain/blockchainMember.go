// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package blockchain

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Payload of the blockchain member which is exposed in the request/response of the resource provider.
// API Version: 2018-06-01-preview.
type BlockchainMember struct {
	pulumi.CustomResourceState

	// Gets or sets the consortium for the blockchain member.
	Consortium pulumi.StringPtrOutput `pulumi:"consortium"`
	// Gets the managed consortium management account address.
	ConsortiumManagementAccountAddress pulumi.StringOutput `pulumi:"consortiumManagementAccountAddress"`
	// Sets the managed consortium management account password.
	ConsortiumManagementAccountPassword pulumi.StringPtrOutput `pulumi:"consortiumManagementAccountPassword"`
	// Gets the display name of the member in the consortium.
	ConsortiumMemberDisplayName pulumi.StringPtrOutput `pulumi:"consortiumMemberDisplayName"`
	// Gets the role of the member in the consortium.
	ConsortiumRole pulumi.StringPtrOutput `pulumi:"consortiumRole"`
	// Gets the dns endpoint of the blockchain member.
	Dns pulumi.StringOutput `pulumi:"dns"`
	// Gets or sets firewall rules
	FirewallRules FirewallRuleResponseArrayOutput `pulumi:"firewallRules"`
	// The GEO location of the blockchain service.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Sets the basic auth password of the blockchain member.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Gets or sets the blockchain protocol.
	Protocol pulumi.StringPtrOutput `pulumi:"protocol"`
	// Gets or sets the blockchain member provision state.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Gets the public key of the blockchain member (default transaction node).
	PublicKey pulumi.StringOutput `pulumi:"publicKey"`
	// Gets the Ethereum root contract address of the blockchain.
	RootContractAddress pulumi.StringOutput `pulumi:"rootContractAddress"`
	// Gets or sets the blockchain member Sku.
	Sku SkuResponsePtrOutput `pulumi:"sku"`
	// Tags of the service which is a list of key value pairs that describes the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the service - e.g. "Microsoft.Blockchain"
	Type pulumi.StringOutput `pulumi:"type"`
	// Gets the auth user name of the blockchain member.
	UserName pulumi.StringOutput `pulumi:"userName"`
	// Gets or sets the blockchain validator nodes Sku.
	ValidatorNodesSku BlockchainMemberNodesSkuResponsePtrOutput `pulumi:"validatorNodesSku"`
}

// NewBlockchainMember registers a new resource with the given unique name, arguments, and options.
func NewBlockchainMember(ctx *pulumi.Context,
	name string, args *BlockchainMemberArgs, opts ...pulumi.ResourceOption) (*BlockchainMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:blockchain/v20180601preview:BlockchainMember"),
		},
	})
	opts = append(opts, aliases)
	var resource BlockchainMember
	err := ctx.RegisterResource("azure-native:blockchain:BlockchainMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBlockchainMember gets an existing BlockchainMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBlockchainMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BlockchainMemberState, opts ...pulumi.ResourceOption) (*BlockchainMember, error) {
	var resource BlockchainMember
	err := ctx.ReadResource("azure-native:blockchain:BlockchainMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BlockchainMember resources.
type blockchainMemberState struct {
}

type BlockchainMemberState struct {
}

func (BlockchainMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*blockchainMemberState)(nil)).Elem()
}

type blockchainMemberArgs struct {
	// Blockchain member name.
	BlockchainMemberName *string `pulumi:"blockchainMemberName"`
	// Gets or sets the consortium for the blockchain member.
	Consortium *string `pulumi:"consortium"`
	// Sets the managed consortium management account password.
	ConsortiumManagementAccountPassword *string `pulumi:"consortiumManagementAccountPassword"`
	// Gets the display name of the member in the consortium.
	ConsortiumMemberDisplayName *string `pulumi:"consortiumMemberDisplayName"`
	// Gets the role of the member in the consortium.
	ConsortiumRole *string `pulumi:"consortiumRole"`
	// Gets or sets firewall rules
	FirewallRules []FirewallRule `pulumi:"firewallRules"`
	// The GEO location of the blockchain service.
	Location *string `pulumi:"location"`
	// Sets the basic auth password of the blockchain member.
	Password *string `pulumi:"password"`
	// Gets or sets the blockchain protocol.
	Protocol *string `pulumi:"protocol"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Gets or sets the blockchain member Sku.
	Sku *Sku `pulumi:"sku"`
	// Tags of the service which is a list of key value pairs that describes the resource.
	Tags map[string]string `pulumi:"tags"`
	// Gets or sets the blockchain validator nodes Sku.
	ValidatorNodesSku *BlockchainMemberNodesSku `pulumi:"validatorNodesSku"`
}

// The set of arguments for constructing a BlockchainMember resource.
type BlockchainMemberArgs struct {
	// Blockchain member name.
	BlockchainMemberName pulumi.StringPtrInput
	// Gets or sets the consortium for the blockchain member.
	Consortium pulumi.StringPtrInput
	// Sets the managed consortium management account password.
	ConsortiumManagementAccountPassword pulumi.StringPtrInput
	// Gets the display name of the member in the consortium.
	ConsortiumMemberDisplayName pulumi.StringPtrInput
	// Gets the role of the member in the consortium.
	ConsortiumRole pulumi.StringPtrInput
	// Gets or sets firewall rules
	FirewallRules FirewallRuleArrayInput
	// The GEO location of the blockchain service.
	Location pulumi.StringPtrInput
	// Sets the basic auth password of the blockchain member.
	Password pulumi.StringPtrInput
	// Gets or sets the blockchain protocol.
	Protocol pulumi.StringPtrInput
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput
	// Gets or sets the blockchain member Sku.
	Sku SkuPtrInput
	// Tags of the service which is a list of key value pairs that describes the resource.
	Tags pulumi.StringMapInput
	// Gets or sets the blockchain validator nodes Sku.
	ValidatorNodesSku BlockchainMemberNodesSkuPtrInput
}

func (BlockchainMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*blockchainMemberArgs)(nil)).Elem()
}

type BlockchainMemberInput interface {
	pulumi.Input

	ToBlockchainMemberOutput() BlockchainMemberOutput
	ToBlockchainMemberOutputWithContext(ctx context.Context) BlockchainMemberOutput
}

func (*BlockchainMember) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainMember)(nil)).Elem()
}

func (i *BlockchainMember) ToBlockchainMemberOutput() BlockchainMemberOutput {
	return i.ToBlockchainMemberOutputWithContext(context.Background())
}

func (i *BlockchainMember) ToBlockchainMemberOutputWithContext(ctx context.Context) BlockchainMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainMemberOutput)
}

type BlockchainMemberOutput struct{ *pulumi.OutputState }

func (BlockchainMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainMember)(nil)).Elem()
}

func (o BlockchainMemberOutput) ToBlockchainMemberOutput() BlockchainMemberOutput {
	return o
}

func (o BlockchainMemberOutput) ToBlockchainMemberOutputWithContext(ctx context.Context) BlockchainMemberOutput {
	return o
}

// Gets or sets the consortium for the blockchain member.
func (o BlockchainMemberOutput) Consortium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlockchainMember) pulumi.StringPtrOutput { return v.Consortium }).(pulumi.StringPtrOutput)
}

// Gets the managed consortium management account address.
func (o BlockchainMemberOutput) ConsortiumManagementAccountAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *BlockchainMember) pulumi.StringOutput { return v.ConsortiumManagementAccountAddress }).(pulumi.StringOutput)
}

// Sets the managed consortium management account password.
func (o BlockchainMemberOutput) ConsortiumManagementAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlockchainMember) pulumi.StringPtrOutput { return v.ConsortiumManagementAccountPassword }).(pulumi.StringPtrOutput)
}

// Gets the display name of the member in the consortium.
func (o BlockchainMemberOutput) ConsortiumMemberDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlockchainMember) pulumi.StringPtrOutput { return v.ConsortiumMemberDisplayName }).(pulumi.StringPtrOutput)
}

// Gets the role of the member in the consortium.
func (o BlockchainMemberOutput) ConsortiumRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlockchainMember) pulumi.StringPtrOutput { return v.ConsortiumRole }).(pulumi.StringPtrOutput)
}

// Gets the dns endpoint of the blockchain member.
func (o BlockchainMemberOutput) Dns() pulumi.StringOutput {
	return o.ApplyT(func(v *BlockchainMember) pulumi.StringOutput { return v.Dns }).(pulumi.StringOutput)
}

// Gets or sets firewall rules
func (o BlockchainMemberOutput) FirewallRules() FirewallRuleResponseArrayOutput {
	return o.ApplyT(func(v *BlockchainMember) FirewallRuleResponseArrayOutput { return v.FirewallRules }).(FirewallRuleResponseArrayOutput)
}

// The GEO location of the blockchain service.
func (o BlockchainMemberOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlockchainMember) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o BlockchainMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BlockchainMember) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Sets the basic auth password of the blockchain member.
func (o BlockchainMemberOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlockchainMember) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Gets or sets the blockchain protocol.
func (o BlockchainMemberOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlockchainMember) pulumi.StringPtrOutput { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Gets or sets the blockchain member provision state.
func (o BlockchainMemberOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *BlockchainMember) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets the public key of the blockchain member (default transaction node).
func (o BlockchainMemberOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v *BlockchainMember) pulumi.StringOutput { return v.PublicKey }).(pulumi.StringOutput)
}

// Gets the Ethereum root contract address of the blockchain.
func (o BlockchainMemberOutput) RootContractAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *BlockchainMember) pulumi.StringOutput { return v.RootContractAddress }).(pulumi.StringOutput)
}

// Gets or sets the blockchain member Sku.
func (o BlockchainMemberOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v *BlockchainMember) SkuResponsePtrOutput { return v.Sku }).(SkuResponsePtrOutput)
}

// Tags of the service which is a list of key value pairs that describes the resource.
func (o BlockchainMemberOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BlockchainMember) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the service - e.g. "Microsoft.Blockchain"
func (o BlockchainMemberOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *BlockchainMember) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Gets the auth user name of the blockchain member.
func (o BlockchainMemberOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v *BlockchainMember) pulumi.StringOutput { return v.UserName }).(pulumi.StringOutput)
}

// Gets or sets the blockchain validator nodes Sku.
func (o BlockchainMemberOutput) ValidatorNodesSku() BlockchainMemberNodesSkuResponsePtrOutput {
	return o.ApplyT(func(v *BlockchainMember) BlockchainMemberNodesSkuResponsePtrOutput { return v.ValidatorNodesSku }).(BlockchainMemberNodesSkuResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(BlockchainMemberOutput{})
}
