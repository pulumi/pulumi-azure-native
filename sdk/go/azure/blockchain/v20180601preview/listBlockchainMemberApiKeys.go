// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180601preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Collection of the API key payload which is exposed in the response of the resource provider.
func ListBlockchainMemberApiKeys(ctx *pulumi.Context, args *ListBlockchainMemberApiKeysArgs, opts ...pulumi.InvokeOption) (*ListBlockchainMemberApiKeysResult, error) {
	var rv ListBlockchainMemberApiKeysResult
	err := ctx.Invoke("azure-native:blockchain/v20180601preview:listBlockchainMemberApiKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListBlockchainMemberApiKeysArgs struct {
	// Blockchain member name.
	BlockchainMemberName string `pulumi:"blockchainMemberName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Collection of the API key payload which is exposed in the response of the resource provider.
type ListBlockchainMemberApiKeysResult struct {
	// Gets or sets the collection of API key.
	Keys []ApiKeyResponse `pulumi:"keys"`
}

func ListBlockchainMemberApiKeysOutput(ctx *pulumi.Context, args ListBlockchainMemberApiKeysOutputArgs, opts ...pulumi.InvokeOption) ListBlockchainMemberApiKeysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListBlockchainMemberApiKeysResult, error) {
			args := v.(ListBlockchainMemberApiKeysArgs)
			r, err := ListBlockchainMemberApiKeys(ctx, &args, opts...)
			var s ListBlockchainMemberApiKeysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListBlockchainMemberApiKeysResultOutput)
}

type ListBlockchainMemberApiKeysOutputArgs struct {
	// Blockchain member name.
	BlockchainMemberName pulumi.StringInput `pulumi:"blockchainMemberName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (ListBlockchainMemberApiKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListBlockchainMemberApiKeysArgs)(nil)).Elem()
}

// Collection of the API key payload which is exposed in the response of the resource provider.
type ListBlockchainMemberApiKeysResultOutput struct{ *pulumi.OutputState }

func (ListBlockchainMemberApiKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListBlockchainMemberApiKeysResult)(nil)).Elem()
}

func (o ListBlockchainMemberApiKeysResultOutput) ToListBlockchainMemberApiKeysResultOutput() ListBlockchainMemberApiKeysResultOutput {
	return o
}

func (o ListBlockchainMemberApiKeysResultOutput) ToListBlockchainMemberApiKeysResultOutputWithContext(ctx context.Context) ListBlockchainMemberApiKeysResultOutput {
	return o
}

// Gets or sets the collection of API key.
func (o ListBlockchainMemberApiKeysResultOutput) Keys() ApiKeyResponseArrayOutput {
	return o.ApplyT(func(v ListBlockchainMemberApiKeysResult) []ApiKeyResponse { return v.Keys }).(ApiKeyResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListBlockchainMemberApiKeysResultOutput{})
}
