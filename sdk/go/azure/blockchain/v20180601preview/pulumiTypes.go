// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180601preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// API key payload which is exposed in the request/response of the resource provider.
type ApiKeyInvokeResponse struct {
	// Gets or sets the API key name.
	KeyName *string `pulumi:"keyName"`
	// Gets or sets the API key value.
	Value *string `pulumi:"value"`
}

// ApiKeyInvokeResponseInput is an input type that accepts ApiKeyInvokeResponseArgs and ApiKeyInvokeResponseOutput values.
// You can construct a concrete instance of `ApiKeyInvokeResponseInput` via:
//
//          ApiKeyInvokeResponseArgs{...}
type ApiKeyInvokeResponseInput interface {
	pulumi.Input

	ToApiKeyInvokeResponseOutput() ApiKeyInvokeResponseOutput
	ToApiKeyInvokeResponseOutputWithContext(context.Context) ApiKeyInvokeResponseOutput
}

// API key payload which is exposed in the request/response of the resource provider.
type ApiKeyInvokeResponseArgs struct {
	// Gets or sets the API key name.
	KeyName pulumi.StringPtrInput `pulumi:"keyName"`
	// Gets or sets the API key value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApiKeyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyInvokeResponse)(nil)).Elem()
}

func (i ApiKeyInvokeResponseArgs) ToApiKeyInvokeResponseOutput() ApiKeyInvokeResponseOutput {
	return i.ToApiKeyInvokeResponseOutputWithContext(context.Background())
}

func (i ApiKeyInvokeResponseArgs) ToApiKeyInvokeResponseOutputWithContext(ctx context.Context) ApiKeyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyInvokeResponseOutput)
}

// ApiKeyInvokeResponseArrayInput is an input type that accepts ApiKeyInvokeResponseArray and ApiKeyInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ApiKeyInvokeResponseArrayInput` via:
//
//          ApiKeyInvokeResponseArray{ ApiKeyInvokeResponseArgs{...} }
type ApiKeyInvokeResponseArrayInput interface {
	pulumi.Input

	ToApiKeyInvokeResponseArrayOutput() ApiKeyInvokeResponseArrayOutput
	ToApiKeyInvokeResponseArrayOutputWithContext(context.Context) ApiKeyInvokeResponseArrayOutput
}

type ApiKeyInvokeResponseArray []ApiKeyInvokeResponseInput

func (ApiKeyInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiKeyInvokeResponse)(nil)).Elem()
}

func (i ApiKeyInvokeResponseArray) ToApiKeyInvokeResponseArrayOutput() ApiKeyInvokeResponseArrayOutput {
	return i.ToApiKeyInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ApiKeyInvokeResponseArray) ToApiKeyInvokeResponseArrayOutputWithContext(ctx context.Context) ApiKeyInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyInvokeResponseArrayOutput)
}

// API key payload which is exposed in the request/response of the resource provider.
type ApiKeyInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApiKeyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyInvokeResponse)(nil)).Elem()
}

func (o ApiKeyInvokeResponseOutput) ToApiKeyInvokeResponseOutput() ApiKeyInvokeResponseOutput {
	return o
}

func (o ApiKeyInvokeResponseOutput) ToApiKeyInvokeResponseOutputWithContext(ctx context.Context) ApiKeyInvokeResponseOutput {
	return o
}

// Gets or sets the API key name.
func (o ApiKeyInvokeResponseOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyInvokeResponse) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// Gets or sets the API key value.
func (o ApiKeyInvokeResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyInvokeResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApiKeyInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ApiKeyInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiKeyInvokeResponse)(nil)).Elem()
}

func (o ApiKeyInvokeResponseArrayOutput) ToApiKeyInvokeResponseArrayOutput() ApiKeyInvokeResponseArrayOutput {
	return o
}

func (o ApiKeyInvokeResponseArrayOutput) ToApiKeyInvokeResponseArrayOutputWithContext(ctx context.Context) ApiKeyInvokeResponseArrayOutput {
	return o
}

func (o ApiKeyInvokeResponseArrayOutput) Index(i pulumi.IntInput) ApiKeyInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiKeyInvokeResponse {
		return vs[0].([]ApiKeyInvokeResponse)[vs[1].(int)]
	}).(ApiKeyInvokeResponseOutput)
}

// Payload of the blockchain member nodes Sku for a blockchain member.
type BlockchainMemberNodesSku struct {
	// Gets or sets the nodes capacity.
	Capacity *int `pulumi:"capacity"`
}

// BlockchainMemberNodesSkuInput is an input type that accepts BlockchainMemberNodesSkuArgs and BlockchainMemberNodesSkuOutput values.
// You can construct a concrete instance of `BlockchainMemberNodesSkuInput` via:
//
//          BlockchainMemberNodesSkuArgs{...}
type BlockchainMemberNodesSkuInput interface {
	pulumi.Input

	ToBlockchainMemberNodesSkuOutput() BlockchainMemberNodesSkuOutput
	ToBlockchainMemberNodesSkuOutputWithContext(context.Context) BlockchainMemberNodesSkuOutput
}

// Payload of the blockchain member nodes Sku for a blockchain member.
type BlockchainMemberNodesSkuArgs struct {
	// Gets or sets the nodes capacity.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
}

func (BlockchainMemberNodesSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainMemberNodesSku)(nil)).Elem()
}

func (i BlockchainMemberNodesSkuArgs) ToBlockchainMemberNodesSkuOutput() BlockchainMemberNodesSkuOutput {
	return i.ToBlockchainMemberNodesSkuOutputWithContext(context.Background())
}

func (i BlockchainMemberNodesSkuArgs) ToBlockchainMemberNodesSkuOutputWithContext(ctx context.Context) BlockchainMemberNodesSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainMemberNodesSkuOutput)
}

func (i BlockchainMemberNodesSkuArgs) ToBlockchainMemberNodesSkuPtrOutput() BlockchainMemberNodesSkuPtrOutput {
	return i.ToBlockchainMemberNodesSkuPtrOutputWithContext(context.Background())
}

func (i BlockchainMemberNodesSkuArgs) ToBlockchainMemberNodesSkuPtrOutputWithContext(ctx context.Context) BlockchainMemberNodesSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainMemberNodesSkuOutput).ToBlockchainMemberNodesSkuPtrOutputWithContext(ctx)
}

// BlockchainMemberNodesSkuPtrInput is an input type that accepts BlockchainMemberNodesSkuArgs, BlockchainMemberNodesSkuPtr and BlockchainMemberNodesSkuPtrOutput values.
// You can construct a concrete instance of `BlockchainMemberNodesSkuPtrInput` via:
//
//          BlockchainMemberNodesSkuArgs{...}
//
//  or:
//
//          nil
type BlockchainMemberNodesSkuPtrInput interface {
	pulumi.Input

	ToBlockchainMemberNodesSkuPtrOutput() BlockchainMemberNodesSkuPtrOutput
	ToBlockchainMemberNodesSkuPtrOutputWithContext(context.Context) BlockchainMemberNodesSkuPtrOutput
}

type blockchainMemberNodesSkuPtrType BlockchainMemberNodesSkuArgs

func BlockchainMemberNodesSkuPtr(v *BlockchainMemberNodesSkuArgs) BlockchainMemberNodesSkuPtrInput {
	return (*blockchainMemberNodesSkuPtrType)(v)
}

func (*blockchainMemberNodesSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainMemberNodesSku)(nil)).Elem()
}

func (i *blockchainMemberNodesSkuPtrType) ToBlockchainMemberNodesSkuPtrOutput() BlockchainMemberNodesSkuPtrOutput {
	return i.ToBlockchainMemberNodesSkuPtrOutputWithContext(context.Background())
}

func (i *blockchainMemberNodesSkuPtrType) ToBlockchainMemberNodesSkuPtrOutputWithContext(ctx context.Context) BlockchainMemberNodesSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainMemberNodesSkuPtrOutput)
}

// Payload of the blockchain member nodes Sku for a blockchain member.
type BlockchainMemberNodesSkuOutput struct{ *pulumi.OutputState }

func (BlockchainMemberNodesSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainMemberNodesSku)(nil)).Elem()
}

func (o BlockchainMemberNodesSkuOutput) ToBlockchainMemberNodesSkuOutput() BlockchainMemberNodesSkuOutput {
	return o
}

func (o BlockchainMemberNodesSkuOutput) ToBlockchainMemberNodesSkuOutputWithContext(ctx context.Context) BlockchainMemberNodesSkuOutput {
	return o
}

func (o BlockchainMemberNodesSkuOutput) ToBlockchainMemberNodesSkuPtrOutput() BlockchainMemberNodesSkuPtrOutput {
	return o.ToBlockchainMemberNodesSkuPtrOutputWithContext(context.Background())
}

func (o BlockchainMemberNodesSkuOutput) ToBlockchainMemberNodesSkuPtrOutputWithContext(ctx context.Context) BlockchainMemberNodesSkuPtrOutput {
	return o.ApplyT(func(v BlockchainMemberNodesSku) *BlockchainMemberNodesSku {
		return &v
	}).(BlockchainMemberNodesSkuPtrOutput)
}

// Gets or sets the nodes capacity.
func (o BlockchainMemberNodesSkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BlockchainMemberNodesSku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

type BlockchainMemberNodesSkuPtrOutput struct{ *pulumi.OutputState }

func (BlockchainMemberNodesSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainMemberNodesSku)(nil)).Elem()
}

func (o BlockchainMemberNodesSkuPtrOutput) ToBlockchainMemberNodesSkuPtrOutput() BlockchainMemberNodesSkuPtrOutput {
	return o
}

func (o BlockchainMemberNodesSkuPtrOutput) ToBlockchainMemberNodesSkuPtrOutputWithContext(ctx context.Context) BlockchainMemberNodesSkuPtrOutput {
	return o
}

func (o BlockchainMemberNodesSkuPtrOutput) Elem() BlockchainMemberNodesSkuOutput {
	return o.ApplyT(func(v *BlockchainMemberNodesSku) BlockchainMemberNodesSku { return *v }).(BlockchainMemberNodesSkuOutput)
}

// Gets or sets the nodes capacity.
func (o BlockchainMemberNodesSkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BlockchainMemberNodesSku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Payload of the blockchain member nodes Sku for a blockchain member.
type BlockchainMemberNodesSkuInvokeResponse struct {
	// Gets or sets the nodes capacity.
	Capacity *int `pulumi:"capacity"`
}

// BlockchainMemberNodesSkuInvokeResponseInput is an input type that accepts BlockchainMemberNodesSkuInvokeResponseArgs and BlockchainMemberNodesSkuInvokeResponseOutput values.
// You can construct a concrete instance of `BlockchainMemberNodesSkuInvokeResponseInput` via:
//
//          BlockchainMemberNodesSkuInvokeResponseArgs{...}
type BlockchainMemberNodesSkuInvokeResponseInput interface {
	pulumi.Input

	ToBlockchainMemberNodesSkuInvokeResponseOutput() BlockchainMemberNodesSkuInvokeResponseOutput
	ToBlockchainMemberNodesSkuInvokeResponseOutputWithContext(context.Context) BlockchainMemberNodesSkuInvokeResponseOutput
}

// Payload of the blockchain member nodes Sku for a blockchain member.
type BlockchainMemberNodesSkuInvokeResponseArgs struct {
	// Gets or sets the nodes capacity.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
}

func (BlockchainMemberNodesSkuInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainMemberNodesSkuInvokeResponse)(nil)).Elem()
}

func (i BlockchainMemberNodesSkuInvokeResponseArgs) ToBlockchainMemberNodesSkuInvokeResponseOutput() BlockchainMemberNodesSkuInvokeResponseOutput {
	return i.ToBlockchainMemberNodesSkuInvokeResponseOutputWithContext(context.Background())
}

func (i BlockchainMemberNodesSkuInvokeResponseArgs) ToBlockchainMemberNodesSkuInvokeResponseOutputWithContext(ctx context.Context) BlockchainMemberNodesSkuInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainMemberNodesSkuInvokeResponseOutput)
}

// Payload of the blockchain member nodes Sku for a blockchain member.
type BlockchainMemberNodesSkuInvokeResponseOutput struct{ *pulumi.OutputState }

func (BlockchainMemberNodesSkuInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainMemberNodesSkuInvokeResponse)(nil)).Elem()
}

func (o BlockchainMemberNodesSkuInvokeResponseOutput) ToBlockchainMemberNodesSkuInvokeResponseOutput() BlockchainMemberNodesSkuInvokeResponseOutput {
	return o
}

func (o BlockchainMemberNodesSkuInvokeResponseOutput) ToBlockchainMemberNodesSkuInvokeResponseOutputWithContext(ctx context.Context) BlockchainMemberNodesSkuInvokeResponseOutput {
	return o
}

// Gets or sets the nodes capacity.
func (o BlockchainMemberNodesSkuInvokeResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BlockchainMemberNodesSkuInvokeResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Payload of the blockchain member nodes Sku for a blockchain member.
type BlockchainMemberNodesSkuResponse struct {
	// Gets or sets the nodes capacity.
	Capacity *int `pulumi:"capacity"`
}

// BlockchainMemberNodesSkuResponseInput is an input type that accepts BlockchainMemberNodesSkuResponseArgs and BlockchainMemberNodesSkuResponseOutput values.
// You can construct a concrete instance of `BlockchainMemberNodesSkuResponseInput` via:
//
//          BlockchainMemberNodesSkuResponseArgs{...}
type BlockchainMemberNodesSkuResponseInput interface {
	pulumi.Input

	ToBlockchainMemberNodesSkuResponseOutput() BlockchainMemberNodesSkuResponseOutput
	ToBlockchainMemberNodesSkuResponseOutputWithContext(context.Context) BlockchainMemberNodesSkuResponseOutput
}

// Payload of the blockchain member nodes Sku for a blockchain member.
type BlockchainMemberNodesSkuResponseArgs struct {
	// Gets or sets the nodes capacity.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
}

func (BlockchainMemberNodesSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainMemberNodesSkuResponse)(nil)).Elem()
}

func (i BlockchainMemberNodesSkuResponseArgs) ToBlockchainMemberNodesSkuResponseOutput() BlockchainMemberNodesSkuResponseOutput {
	return i.ToBlockchainMemberNodesSkuResponseOutputWithContext(context.Background())
}

func (i BlockchainMemberNodesSkuResponseArgs) ToBlockchainMemberNodesSkuResponseOutputWithContext(ctx context.Context) BlockchainMemberNodesSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainMemberNodesSkuResponseOutput)
}

func (i BlockchainMemberNodesSkuResponseArgs) ToBlockchainMemberNodesSkuResponsePtrOutput() BlockchainMemberNodesSkuResponsePtrOutput {
	return i.ToBlockchainMemberNodesSkuResponsePtrOutputWithContext(context.Background())
}

func (i BlockchainMemberNodesSkuResponseArgs) ToBlockchainMemberNodesSkuResponsePtrOutputWithContext(ctx context.Context) BlockchainMemberNodesSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainMemberNodesSkuResponseOutput).ToBlockchainMemberNodesSkuResponsePtrOutputWithContext(ctx)
}

// BlockchainMemberNodesSkuResponsePtrInput is an input type that accepts BlockchainMemberNodesSkuResponseArgs, BlockchainMemberNodesSkuResponsePtr and BlockchainMemberNodesSkuResponsePtrOutput values.
// You can construct a concrete instance of `BlockchainMemberNodesSkuResponsePtrInput` via:
//
//          BlockchainMemberNodesSkuResponseArgs{...}
//
//  or:
//
//          nil
type BlockchainMemberNodesSkuResponsePtrInput interface {
	pulumi.Input

	ToBlockchainMemberNodesSkuResponsePtrOutput() BlockchainMemberNodesSkuResponsePtrOutput
	ToBlockchainMemberNodesSkuResponsePtrOutputWithContext(context.Context) BlockchainMemberNodesSkuResponsePtrOutput
}

type blockchainMemberNodesSkuResponsePtrType BlockchainMemberNodesSkuResponseArgs

func BlockchainMemberNodesSkuResponsePtr(v *BlockchainMemberNodesSkuResponseArgs) BlockchainMemberNodesSkuResponsePtrInput {
	return (*blockchainMemberNodesSkuResponsePtrType)(v)
}

func (*blockchainMemberNodesSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainMemberNodesSkuResponse)(nil)).Elem()
}

func (i *blockchainMemberNodesSkuResponsePtrType) ToBlockchainMemberNodesSkuResponsePtrOutput() BlockchainMemberNodesSkuResponsePtrOutput {
	return i.ToBlockchainMemberNodesSkuResponsePtrOutputWithContext(context.Background())
}

func (i *blockchainMemberNodesSkuResponsePtrType) ToBlockchainMemberNodesSkuResponsePtrOutputWithContext(ctx context.Context) BlockchainMemberNodesSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainMemberNodesSkuResponsePtrOutput)
}

// Payload of the blockchain member nodes Sku for a blockchain member.
type BlockchainMemberNodesSkuResponseOutput struct{ *pulumi.OutputState }

func (BlockchainMemberNodesSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainMemberNodesSkuResponse)(nil)).Elem()
}

func (o BlockchainMemberNodesSkuResponseOutput) ToBlockchainMemberNodesSkuResponseOutput() BlockchainMemberNodesSkuResponseOutput {
	return o
}

func (o BlockchainMemberNodesSkuResponseOutput) ToBlockchainMemberNodesSkuResponseOutputWithContext(ctx context.Context) BlockchainMemberNodesSkuResponseOutput {
	return o
}

func (o BlockchainMemberNodesSkuResponseOutput) ToBlockchainMemberNodesSkuResponsePtrOutput() BlockchainMemberNodesSkuResponsePtrOutput {
	return o.ToBlockchainMemberNodesSkuResponsePtrOutputWithContext(context.Background())
}

func (o BlockchainMemberNodesSkuResponseOutput) ToBlockchainMemberNodesSkuResponsePtrOutputWithContext(ctx context.Context) BlockchainMemberNodesSkuResponsePtrOutput {
	return o.ApplyT(func(v BlockchainMemberNodesSkuResponse) *BlockchainMemberNodesSkuResponse {
		return &v
	}).(BlockchainMemberNodesSkuResponsePtrOutput)
}

// Gets or sets the nodes capacity.
func (o BlockchainMemberNodesSkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BlockchainMemberNodesSkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

type BlockchainMemberNodesSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (BlockchainMemberNodesSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainMemberNodesSkuResponse)(nil)).Elem()
}

func (o BlockchainMemberNodesSkuResponsePtrOutput) ToBlockchainMemberNodesSkuResponsePtrOutput() BlockchainMemberNodesSkuResponsePtrOutput {
	return o
}

func (o BlockchainMemberNodesSkuResponsePtrOutput) ToBlockchainMemberNodesSkuResponsePtrOutputWithContext(ctx context.Context) BlockchainMemberNodesSkuResponsePtrOutput {
	return o
}

func (o BlockchainMemberNodesSkuResponsePtrOutput) Elem() BlockchainMemberNodesSkuResponseOutput {
	return o.ApplyT(func(v *BlockchainMemberNodesSkuResponse) BlockchainMemberNodesSkuResponse { return *v }).(BlockchainMemberNodesSkuResponseOutput)
}

// Gets or sets the nodes capacity.
func (o BlockchainMemberNodesSkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BlockchainMemberNodesSkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Consortium payload
type ConsortiumInvokeResponse struct {
	// Gets or sets the blockchain member name.
	Name *string `pulumi:"name"`
	// Gets or sets the protocol for the consortium.
	Protocol *string `pulumi:"protocol"`
}

// ConsortiumInvokeResponseInput is an input type that accepts ConsortiumInvokeResponseArgs and ConsortiumInvokeResponseOutput values.
// You can construct a concrete instance of `ConsortiumInvokeResponseInput` via:
//
//          ConsortiumInvokeResponseArgs{...}
type ConsortiumInvokeResponseInput interface {
	pulumi.Input

	ToConsortiumInvokeResponseOutput() ConsortiumInvokeResponseOutput
	ToConsortiumInvokeResponseOutputWithContext(context.Context) ConsortiumInvokeResponseOutput
}

// Consortium payload
type ConsortiumInvokeResponseArgs struct {
	// Gets or sets the blockchain member name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets the protocol for the consortium.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (ConsortiumInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsortiumInvokeResponse)(nil)).Elem()
}

func (i ConsortiumInvokeResponseArgs) ToConsortiumInvokeResponseOutput() ConsortiumInvokeResponseOutput {
	return i.ToConsortiumInvokeResponseOutputWithContext(context.Background())
}

func (i ConsortiumInvokeResponseArgs) ToConsortiumInvokeResponseOutputWithContext(ctx context.Context) ConsortiumInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsortiumInvokeResponseOutput)
}

// ConsortiumInvokeResponseArrayInput is an input type that accepts ConsortiumInvokeResponseArray and ConsortiumInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ConsortiumInvokeResponseArrayInput` via:
//
//          ConsortiumInvokeResponseArray{ ConsortiumInvokeResponseArgs{...} }
type ConsortiumInvokeResponseArrayInput interface {
	pulumi.Input

	ToConsortiumInvokeResponseArrayOutput() ConsortiumInvokeResponseArrayOutput
	ToConsortiumInvokeResponseArrayOutputWithContext(context.Context) ConsortiumInvokeResponseArrayOutput
}

type ConsortiumInvokeResponseArray []ConsortiumInvokeResponseInput

func (ConsortiumInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConsortiumInvokeResponse)(nil)).Elem()
}

func (i ConsortiumInvokeResponseArray) ToConsortiumInvokeResponseArrayOutput() ConsortiumInvokeResponseArrayOutput {
	return i.ToConsortiumInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ConsortiumInvokeResponseArray) ToConsortiumInvokeResponseArrayOutputWithContext(ctx context.Context) ConsortiumInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsortiumInvokeResponseArrayOutput)
}

// Consortium payload
type ConsortiumInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConsortiumInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsortiumInvokeResponse)(nil)).Elem()
}

func (o ConsortiumInvokeResponseOutput) ToConsortiumInvokeResponseOutput() ConsortiumInvokeResponseOutput {
	return o
}

func (o ConsortiumInvokeResponseOutput) ToConsortiumInvokeResponseOutputWithContext(ctx context.Context) ConsortiumInvokeResponseOutput {
	return o
}

// Gets or sets the blockchain member name.
func (o ConsortiumInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsortiumInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets the protocol for the consortium.
func (o ConsortiumInvokeResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsortiumInvokeResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type ConsortiumInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ConsortiumInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConsortiumInvokeResponse)(nil)).Elem()
}

func (o ConsortiumInvokeResponseArrayOutput) ToConsortiumInvokeResponseArrayOutput() ConsortiumInvokeResponseArrayOutput {
	return o
}

func (o ConsortiumInvokeResponseArrayOutput) ToConsortiumInvokeResponseArrayOutputWithContext(ctx context.Context) ConsortiumInvokeResponseArrayOutput {
	return o
}

func (o ConsortiumInvokeResponseArrayOutput) Index(i pulumi.IntInput) ConsortiumInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConsortiumInvokeResponse {
		return vs[0].([]ConsortiumInvokeResponse)[vs[1].(int)]
	}).(ConsortiumInvokeResponseOutput)
}

// Ip range for firewall rules
type FirewallRule struct {
	// Gets or sets the end IP address of the firewall rule range.
	EndIpAddress *string `pulumi:"endIpAddress"`
	// Gets or sets the name of the firewall rules.
	RuleName *string `pulumi:"ruleName"`
	// Gets or sets the start IP address of the firewall rule range.
	StartIpAddress *string `pulumi:"startIpAddress"`
}

// FirewallRuleInput is an input type that accepts FirewallRuleArgs and FirewallRuleOutput values.
// You can construct a concrete instance of `FirewallRuleInput` via:
//
//          FirewallRuleArgs{...}
type FirewallRuleInput interface {
	pulumi.Input

	ToFirewallRuleOutput() FirewallRuleOutput
	ToFirewallRuleOutputWithContext(context.Context) FirewallRuleOutput
}

// Ip range for firewall rules
type FirewallRuleArgs struct {
	// Gets or sets the end IP address of the firewall rule range.
	EndIpAddress pulumi.StringPtrInput `pulumi:"endIpAddress"`
	// Gets or sets the name of the firewall rules.
	RuleName pulumi.StringPtrInput `pulumi:"ruleName"`
	// Gets or sets the start IP address of the firewall rule range.
	StartIpAddress pulumi.StringPtrInput `pulumi:"startIpAddress"`
}

func (FirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRule)(nil)).Elem()
}

func (i FirewallRuleArgs) ToFirewallRuleOutput() FirewallRuleOutput {
	return i.ToFirewallRuleOutputWithContext(context.Background())
}

func (i FirewallRuleArgs) ToFirewallRuleOutputWithContext(ctx context.Context) FirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallRuleOutput)
}

// FirewallRuleArrayInput is an input type that accepts FirewallRuleArray and FirewallRuleArrayOutput values.
// You can construct a concrete instance of `FirewallRuleArrayInput` via:
//
//          FirewallRuleArray{ FirewallRuleArgs{...} }
type FirewallRuleArrayInput interface {
	pulumi.Input

	ToFirewallRuleArrayOutput() FirewallRuleArrayOutput
	ToFirewallRuleArrayOutputWithContext(context.Context) FirewallRuleArrayOutput
}

type FirewallRuleArray []FirewallRuleInput

func (FirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallRule)(nil)).Elem()
}

func (i FirewallRuleArray) ToFirewallRuleArrayOutput() FirewallRuleArrayOutput {
	return i.ToFirewallRuleArrayOutputWithContext(context.Background())
}

func (i FirewallRuleArray) ToFirewallRuleArrayOutputWithContext(ctx context.Context) FirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallRuleArrayOutput)
}

// Ip range for firewall rules
type FirewallRuleOutput struct{ *pulumi.OutputState }

func (FirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRule)(nil)).Elem()
}

func (o FirewallRuleOutput) ToFirewallRuleOutput() FirewallRuleOutput {
	return o
}

func (o FirewallRuleOutput) ToFirewallRuleOutputWithContext(ctx context.Context) FirewallRuleOutput {
	return o
}

// Gets or sets the end IP address of the firewall rule range.
func (o FirewallRuleOutput) EndIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallRule) *string { return v.EndIpAddress }).(pulumi.StringPtrOutput)
}

// Gets or sets the name of the firewall rules.
func (o FirewallRuleOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallRule) *string { return v.RuleName }).(pulumi.StringPtrOutput)
}

// Gets or sets the start IP address of the firewall rule range.
func (o FirewallRuleOutput) StartIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallRule) *string { return v.StartIpAddress }).(pulumi.StringPtrOutput)
}

type FirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (FirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallRule)(nil)).Elem()
}

func (o FirewallRuleArrayOutput) ToFirewallRuleArrayOutput() FirewallRuleArrayOutput {
	return o
}

func (o FirewallRuleArrayOutput) ToFirewallRuleArrayOutputWithContext(ctx context.Context) FirewallRuleArrayOutput {
	return o
}

func (o FirewallRuleArrayOutput) Index(i pulumi.IntInput) FirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallRule {
		return vs[0].([]FirewallRule)[vs[1].(int)]
	}).(FirewallRuleOutput)
}

// Ip range for firewall rules
type FirewallRuleInvokeResponse struct {
	// Gets or sets the end IP address of the firewall rule range.
	EndIpAddress *string `pulumi:"endIpAddress"`
	// Gets or sets the name of the firewall rules.
	RuleName *string `pulumi:"ruleName"`
	// Gets or sets the start IP address of the firewall rule range.
	StartIpAddress *string `pulumi:"startIpAddress"`
}

// FirewallRuleInvokeResponseInput is an input type that accepts FirewallRuleInvokeResponseArgs and FirewallRuleInvokeResponseOutput values.
// You can construct a concrete instance of `FirewallRuleInvokeResponseInput` via:
//
//          FirewallRuleInvokeResponseArgs{...}
type FirewallRuleInvokeResponseInput interface {
	pulumi.Input

	ToFirewallRuleInvokeResponseOutput() FirewallRuleInvokeResponseOutput
	ToFirewallRuleInvokeResponseOutputWithContext(context.Context) FirewallRuleInvokeResponseOutput
}

// Ip range for firewall rules
type FirewallRuleInvokeResponseArgs struct {
	// Gets or sets the end IP address of the firewall rule range.
	EndIpAddress pulumi.StringPtrInput `pulumi:"endIpAddress"`
	// Gets or sets the name of the firewall rules.
	RuleName pulumi.StringPtrInput `pulumi:"ruleName"`
	// Gets or sets the start IP address of the firewall rule range.
	StartIpAddress pulumi.StringPtrInput `pulumi:"startIpAddress"`
}

func (FirewallRuleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleInvokeResponse)(nil)).Elem()
}

func (i FirewallRuleInvokeResponseArgs) ToFirewallRuleInvokeResponseOutput() FirewallRuleInvokeResponseOutput {
	return i.ToFirewallRuleInvokeResponseOutputWithContext(context.Background())
}

func (i FirewallRuleInvokeResponseArgs) ToFirewallRuleInvokeResponseOutputWithContext(ctx context.Context) FirewallRuleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallRuleInvokeResponseOutput)
}

// FirewallRuleInvokeResponseArrayInput is an input type that accepts FirewallRuleInvokeResponseArray and FirewallRuleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `FirewallRuleInvokeResponseArrayInput` via:
//
//          FirewallRuleInvokeResponseArray{ FirewallRuleInvokeResponseArgs{...} }
type FirewallRuleInvokeResponseArrayInput interface {
	pulumi.Input

	ToFirewallRuleInvokeResponseArrayOutput() FirewallRuleInvokeResponseArrayOutput
	ToFirewallRuleInvokeResponseArrayOutputWithContext(context.Context) FirewallRuleInvokeResponseArrayOutput
}

type FirewallRuleInvokeResponseArray []FirewallRuleInvokeResponseInput

func (FirewallRuleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallRuleInvokeResponse)(nil)).Elem()
}

func (i FirewallRuleInvokeResponseArray) ToFirewallRuleInvokeResponseArrayOutput() FirewallRuleInvokeResponseArrayOutput {
	return i.ToFirewallRuleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i FirewallRuleInvokeResponseArray) ToFirewallRuleInvokeResponseArrayOutputWithContext(ctx context.Context) FirewallRuleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallRuleInvokeResponseArrayOutput)
}

// Ip range for firewall rules
type FirewallRuleInvokeResponseOutput struct{ *pulumi.OutputState }

func (FirewallRuleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleInvokeResponse)(nil)).Elem()
}

func (o FirewallRuleInvokeResponseOutput) ToFirewallRuleInvokeResponseOutput() FirewallRuleInvokeResponseOutput {
	return o
}

func (o FirewallRuleInvokeResponseOutput) ToFirewallRuleInvokeResponseOutputWithContext(ctx context.Context) FirewallRuleInvokeResponseOutput {
	return o
}

// Gets or sets the end IP address of the firewall rule range.
func (o FirewallRuleInvokeResponseOutput) EndIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallRuleInvokeResponse) *string { return v.EndIpAddress }).(pulumi.StringPtrOutput)
}

// Gets or sets the name of the firewall rules.
func (o FirewallRuleInvokeResponseOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallRuleInvokeResponse) *string { return v.RuleName }).(pulumi.StringPtrOutput)
}

// Gets or sets the start IP address of the firewall rule range.
func (o FirewallRuleInvokeResponseOutput) StartIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallRuleInvokeResponse) *string { return v.StartIpAddress }).(pulumi.StringPtrOutput)
}

type FirewallRuleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (FirewallRuleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallRuleInvokeResponse)(nil)).Elem()
}

func (o FirewallRuleInvokeResponseArrayOutput) ToFirewallRuleInvokeResponseArrayOutput() FirewallRuleInvokeResponseArrayOutput {
	return o
}

func (o FirewallRuleInvokeResponseArrayOutput) ToFirewallRuleInvokeResponseArrayOutputWithContext(ctx context.Context) FirewallRuleInvokeResponseArrayOutput {
	return o
}

func (o FirewallRuleInvokeResponseArrayOutput) Index(i pulumi.IntInput) FirewallRuleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallRuleInvokeResponse {
		return vs[0].([]FirewallRuleInvokeResponse)[vs[1].(int)]
	}).(FirewallRuleInvokeResponseOutput)
}

// Ip range for firewall rules
type FirewallRuleResponse struct {
	// Gets or sets the end IP address of the firewall rule range.
	EndIpAddress *string `pulumi:"endIpAddress"`
	// Gets or sets the name of the firewall rules.
	RuleName *string `pulumi:"ruleName"`
	// Gets or sets the start IP address of the firewall rule range.
	StartIpAddress *string `pulumi:"startIpAddress"`
}

// FirewallRuleResponseInput is an input type that accepts FirewallRuleResponseArgs and FirewallRuleResponseOutput values.
// You can construct a concrete instance of `FirewallRuleResponseInput` via:
//
//          FirewallRuleResponseArgs{...}
type FirewallRuleResponseInput interface {
	pulumi.Input

	ToFirewallRuleResponseOutput() FirewallRuleResponseOutput
	ToFirewallRuleResponseOutputWithContext(context.Context) FirewallRuleResponseOutput
}

// Ip range for firewall rules
type FirewallRuleResponseArgs struct {
	// Gets or sets the end IP address of the firewall rule range.
	EndIpAddress pulumi.StringPtrInput `pulumi:"endIpAddress"`
	// Gets or sets the name of the firewall rules.
	RuleName pulumi.StringPtrInput `pulumi:"ruleName"`
	// Gets or sets the start IP address of the firewall rule range.
	StartIpAddress pulumi.StringPtrInput `pulumi:"startIpAddress"`
}

func (FirewallRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleResponse)(nil)).Elem()
}

func (i FirewallRuleResponseArgs) ToFirewallRuleResponseOutput() FirewallRuleResponseOutput {
	return i.ToFirewallRuleResponseOutputWithContext(context.Background())
}

func (i FirewallRuleResponseArgs) ToFirewallRuleResponseOutputWithContext(ctx context.Context) FirewallRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallRuleResponseOutput)
}

// FirewallRuleResponseArrayInput is an input type that accepts FirewallRuleResponseArray and FirewallRuleResponseArrayOutput values.
// You can construct a concrete instance of `FirewallRuleResponseArrayInput` via:
//
//          FirewallRuleResponseArray{ FirewallRuleResponseArgs{...} }
type FirewallRuleResponseArrayInput interface {
	pulumi.Input

	ToFirewallRuleResponseArrayOutput() FirewallRuleResponseArrayOutput
	ToFirewallRuleResponseArrayOutputWithContext(context.Context) FirewallRuleResponseArrayOutput
}

type FirewallRuleResponseArray []FirewallRuleResponseInput

func (FirewallRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallRuleResponse)(nil)).Elem()
}

func (i FirewallRuleResponseArray) ToFirewallRuleResponseArrayOutput() FirewallRuleResponseArrayOutput {
	return i.ToFirewallRuleResponseArrayOutputWithContext(context.Background())
}

func (i FirewallRuleResponseArray) ToFirewallRuleResponseArrayOutputWithContext(ctx context.Context) FirewallRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallRuleResponseArrayOutput)
}

// Ip range for firewall rules
type FirewallRuleResponseOutput struct{ *pulumi.OutputState }

func (FirewallRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleResponse)(nil)).Elem()
}

func (o FirewallRuleResponseOutput) ToFirewallRuleResponseOutput() FirewallRuleResponseOutput {
	return o
}

func (o FirewallRuleResponseOutput) ToFirewallRuleResponseOutputWithContext(ctx context.Context) FirewallRuleResponseOutput {
	return o
}

// Gets or sets the end IP address of the firewall rule range.
func (o FirewallRuleResponseOutput) EndIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallRuleResponse) *string { return v.EndIpAddress }).(pulumi.StringPtrOutput)
}

// Gets or sets the name of the firewall rules.
func (o FirewallRuleResponseOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallRuleResponse) *string { return v.RuleName }).(pulumi.StringPtrOutput)
}

// Gets or sets the start IP address of the firewall rule range.
func (o FirewallRuleResponseOutput) StartIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallRuleResponse) *string { return v.StartIpAddress }).(pulumi.StringPtrOutput)
}

type FirewallRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (FirewallRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallRuleResponse)(nil)).Elem()
}

func (o FirewallRuleResponseArrayOutput) ToFirewallRuleResponseArrayOutput() FirewallRuleResponseArrayOutput {
	return o
}

func (o FirewallRuleResponseArrayOutput) ToFirewallRuleResponseArrayOutputWithContext(ctx context.Context) FirewallRuleResponseArrayOutput {
	return o
}

func (o FirewallRuleResponseArrayOutput) Index(i pulumi.IntInput) FirewallRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallRuleResponse {
		return vs[0].([]FirewallRuleResponse)[vs[1].(int)]
	}).(FirewallRuleResponseOutput)
}

// Blockchain member Sku in payload
type Sku struct {
	// Gets or sets Sku name
	Name *string `pulumi:"name"`
	// Gets or sets Sku tier
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// Blockchain member Sku in payload
type SkuArgs struct {
	// Gets or sets Sku name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets Sku tier
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// Blockchain member Sku in payload
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// Gets or sets Sku name
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets Sku tier
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// Gets or sets Sku name
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets or sets Sku tier
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Blockchain member Sku in payload
type SkuInvokeResponse struct {
	// Gets or sets Sku name
	Name *string `pulumi:"name"`
	// Gets or sets Sku tier
	Tier *string `pulumi:"tier"`
}

// SkuInvokeResponseInput is an input type that accepts SkuInvokeResponseArgs and SkuInvokeResponseOutput values.
// You can construct a concrete instance of `SkuInvokeResponseInput` via:
//
//          SkuInvokeResponseArgs{...}
type SkuInvokeResponseInput interface {
	pulumi.Input

	ToSkuInvokeResponseOutput() SkuInvokeResponseOutput
	ToSkuInvokeResponseOutputWithContext(context.Context) SkuInvokeResponseOutput
}

// Blockchain member Sku in payload
type SkuInvokeResponseArgs struct {
	// Gets or sets Sku name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets Sku tier
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuInvokeResponse)(nil)).Elem()
}

func (i SkuInvokeResponseArgs) ToSkuInvokeResponseOutput() SkuInvokeResponseOutput {
	return i.ToSkuInvokeResponseOutputWithContext(context.Background())
}

func (i SkuInvokeResponseArgs) ToSkuInvokeResponseOutputWithContext(ctx context.Context) SkuInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuInvokeResponseOutput)
}

// Blockchain member Sku in payload
type SkuInvokeResponseOutput struct{ *pulumi.OutputState }

func (SkuInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuInvokeResponse)(nil)).Elem()
}

func (o SkuInvokeResponseOutput) ToSkuInvokeResponseOutput() SkuInvokeResponseOutput {
	return o
}

func (o SkuInvokeResponseOutput) ToSkuInvokeResponseOutputWithContext(ctx context.Context) SkuInvokeResponseOutput {
	return o
}

// Gets or sets Sku name
func (o SkuInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets Sku tier
func (o SkuInvokeResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuInvokeResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

// Blockchain member Sku in payload
type SkuResponse struct {
	// Gets or sets Sku name
	Name *string `pulumi:"name"`
	// Gets or sets Sku tier
	Tier *string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// Blockchain member Sku in payload
type SkuResponseArgs struct {
	// Gets or sets Sku name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets Sku tier
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// Blockchain member Sku in payload
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// Gets or sets Sku name
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets Sku tier
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// Gets or sets Sku name
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets or sets Sku tier
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiKeyInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApiKeyInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(BlockchainMemberNodesSkuOutput{})
	pulumi.RegisterOutputType(BlockchainMemberNodesSkuPtrOutput{})
	pulumi.RegisterOutputType(BlockchainMemberNodesSkuInvokeResponseOutput{})
	pulumi.RegisterOutputType(BlockchainMemberNodesSkuResponseOutput{})
	pulumi.RegisterOutputType(BlockchainMemberNodesSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ConsortiumInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConsortiumInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(FirewallRuleOutput{})
	pulumi.RegisterOutputType(FirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(FirewallRuleInvokeResponseOutput{})
	pulumi.RegisterOutputType(FirewallRuleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(FirewallRuleResponseOutput{})
	pulumi.RegisterOutputType(FirewallRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuInvokeResponseOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
}
