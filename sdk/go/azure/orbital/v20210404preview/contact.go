// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210404preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Customer creates a contact resource for a spacecraft resource.
type Contact struct {
	pulumi.CustomResourceState

	// The reference to the contact profile resource.
	ContactProfile ResourceReferenceResponseOutput `pulumi:"contactProfile"`
	// Azimuth of the antenna at the end of the contact in decimal degrees.
	EndAzimuthDegrees pulumi.Float64Output `pulumi:"endAzimuthDegrees"`
	// Spacecraft elevation above the horizon at contact end.
	EndElevationDegrees pulumi.Float64Output `pulumi:"endElevationDegrees"`
	// Any error message while scheduling a contact.
	ErrorMessage pulumi.StringOutput `pulumi:"errorMessage"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Azure Ground Station name.
	GroundStationName pulumi.StringOutput `pulumi:"groundStationName"`
	// Maximum elevation of the antenna during the contact in decimal degrees.
	MaximumElevationDegrees pulumi.Float64Output `pulumi:"maximumElevationDegrees"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Reservation end time of a contact.
	ReservationEndTime pulumi.StringOutput `pulumi:"reservationEndTime"`
	// Reservation start time of a contact.
	ReservationStartTime pulumi.StringOutput `pulumi:"reservationStartTime"`
	// Receive end time of a contact.
	RxEndTime pulumi.StringOutput `pulumi:"rxEndTime"`
	// Receive start time of a contact.
	RxStartTime pulumi.StringOutput `pulumi:"rxStartTime"`
	// Azimuth of the antenna at the start of the contact in decimal degrees.
	StartAzimuthDegrees pulumi.Float64Output `pulumi:"startAzimuthDegrees"`
	// Spacecraft elevation above the horizon at contact start.
	StartElevationDegrees pulumi.Float64Output `pulumi:"startElevationDegrees"`
	// Status of a contact.
	Status pulumi.StringOutput `pulumi:"status"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Transmit end time of a contact.
	TxEndTime pulumi.StringOutput `pulumi:"txEndTime"`
	// Transmit start time of a contact.
	TxStartTime pulumi.StringOutput `pulumi:"txStartTime"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewContact registers a new resource with the given unique name, arguments, and options.
func NewContact(ctx *pulumi.Context,
	name string, args *ContactArgs, opts ...pulumi.ResourceOption) (*Contact, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContactProfile == nil {
		return nil, errors.New("invalid value for required argument 'ContactProfile'")
	}
	if args.GroundStationName == nil {
		return nil, errors.New("invalid value for required argument 'GroundStationName'")
	}
	if args.ReservationEndTime == nil {
		return nil, errors.New("invalid value for required argument 'ReservationEndTime'")
	}
	if args.ReservationStartTime == nil {
		return nil, errors.New("invalid value for required argument 'ReservationStartTime'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SpacecraftName == nil {
		return nil, errors.New("invalid value for required argument 'SpacecraftName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:orbital:Contact"),
		},
		{
			Type: pulumi.String("azure-native:orbital/v20220301:Contact"),
		},
	})
	opts = append(opts, aliases)
	var resource Contact
	err := ctx.RegisterResource("azure-native:orbital/v20210404preview:Contact", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContact gets an existing Contact resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContact(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContactState, opts ...pulumi.ResourceOption) (*Contact, error) {
	var resource Contact
	err := ctx.ReadResource("azure-native:orbital/v20210404preview:Contact", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Contact resources.
type contactState struct {
}

type ContactState struct {
}

func (ContactState) ElementType() reflect.Type {
	return reflect.TypeOf((*contactState)(nil)).Elem()
}

type contactArgs struct {
	// Contact Name
	ContactName *string `pulumi:"contactName"`
	// The reference to the contact profile resource.
	ContactProfile ResourceReference `pulumi:"contactProfile"`
	// Azure Ground Station name.
	GroundStationName string `pulumi:"groundStationName"`
	// Reservation end time of a contact.
	ReservationEndTime string `pulumi:"reservationEndTime"`
	// Reservation start time of a contact.
	ReservationStartTime string `pulumi:"reservationStartTime"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Spacecraft ID
	SpacecraftName string `pulumi:"spacecraftName"`
}

// The set of arguments for constructing a Contact resource.
type ContactArgs struct {
	// Contact Name
	ContactName pulumi.StringPtrInput
	// The reference to the contact profile resource.
	ContactProfile ResourceReferenceInput
	// Azure Ground Station name.
	GroundStationName pulumi.StringInput
	// Reservation end time of a contact.
	ReservationEndTime pulumi.StringInput
	// Reservation start time of a contact.
	ReservationStartTime pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Spacecraft ID
	SpacecraftName pulumi.StringInput
}

func (ContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*contactArgs)(nil)).Elem()
}

type ContactInput interface {
	pulumi.Input

	ToContactOutput() ContactOutput
	ToContactOutputWithContext(ctx context.Context) ContactOutput
}

func (*Contact) ElementType() reflect.Type {
	return reflect.TypeOf((**Contact)(nil)).Elem()
}

func (i *Contact) ToContactOutput() ContactOutput {
	return i.ToContactOutputWithContext(context.Background())
}

func (i *Contact) ToContactOutputWithContext(ctx context.Context) ContactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactOutput)
}

type ContactOutput struct{ *pulumi.OutputState }

func (ContactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Contact)(nil)).Elem()
}

func (o ContactOutput) ToContactOutput() ContactOutput {
	return o
}

func (o ContactOutput) ToContactOutputWithContext(ctx context.Context) ContactOutput {
	return o
}

// The reference to the contact profile resource.
func (o ContactOutput) ContactProfile() ResourceReferenceResponseOutput {
	return o.ApplyT(func(v *Contact) ResourceReferenceResponseOutput { return v.ContactProfile }).(ResourceReferenceResponseOutput)
}

// Azimuth of the antenna at the end of the contact in decimal degrees.
func (o ContactOutput) EndAzimuthDegrees() pulumi.Float64Output {
	return o.ApplyT(func(v *Contact) pulumi.Float64Output { return v.EndAzimuthDegrees }).(pulumi.Float64Output)
}

// Spacecraft elevation above the horizon at contact end.
func (o ContactOutput) EndElevationDegrees() pulumi.Float64Output {
	return o.ApplyT(func(v *Contact) pulumi.Float64Output { return v.EndElevationDegrees }).(pulumi.Float64Output)
}

// Any error message while scheduling a contact.
func (o ContactOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *Contact) pulumi.StringOutput { return v.ErrorMessage }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ContactOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *Contact) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Azure Ground Station name.
func (o ContactOutput) GroundStationName() pulumi.StringOutput {
	return o.ApplyT(func(v *Contact) pulumi.StringOutput { return v.GroundStationName }).(pulumi.StringOutput)
}

// Maximum elevation of the antenna during the contact in decimal degrees.
func (o ContactOutput) MaximumElevationDegrees() pulumi.Float64Output {
	return o.ApplyT(func(v *Contact) pulumi.Float64Output { return v.MaximumElevationDegrees }).(pulumi.Float64Output)
}

// The name of the resource
func (o ContactOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Contact) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Reservation end time of a contact.
func (o ContactOutput) ReservationEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Contact) pulumi.StringOutput { return v.ReservationEndTime }).(pulumi.StringOutput)
}

// Reservation start time of a contact.
func (o ContactOutput) ReservationStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Contact) pulumi.StringOutput { return v.ReservationStartTime }).(pulumi.StringOutput)
}

// Receive end time of a contact.
func (o ContactOutput) RxEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Contact) pulumi.StringOutput { return v.RxEndTime }).(pulumi.StringOutput)
}

// Receive start time of a contact.
func (o ContactOutput) RxStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Contact) pulumi.StringOutput { return v.RxStartTime }).(pulumi.StringOutput)
}

// Azimuth of the antenna at the start of the contact in decimal degrees.
func (o ContactOutput) StartAzimuthDegrees() pulumi.Float64Output {
	return o.ApplyT(func(v *Contact) pulumi.Float64Output { return v.StartAzimuthDegrees }).(pulumi.Float64Output)
}

// Spacecraft elevation above the horizon at contact start.
func (o ContactOutput) StartElevationDegrees() pulumi.Float64Output {
	return o.ApplyT(func(v *Contact) pulumi.Float64Output { return v.StartElevationDegrees }).(pulumi.Float64Output)
}

// Status of a contact.
func (o ContactOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Contact) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ContactOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Contact) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Transmit end time of a contact.
func (o ContactOutput) TxEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Contact) pulumi.StringOutput { return v.TxEndTime }).(pulumi.StringOutput)
}

// Transmit start time of a contact.
func (o ContactOutput) TxStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Contact) pulumi.StringOutput { return v.TxStartTime }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ContactOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Contact) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ContactOutput{})
}
