// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220301

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Customer creates a Contact Profile Resource, which will contain all of the configurations required for scheduling a contact.
type ContactProfile struct {
	pulumi.CustomResourceState

	// Auto-tracking configuration.
	AutoTrackingConfiguration pulumi.StringPtrOutput `pulumi:"autoTrackingConfiguration"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub.
	EventHubUri pulumi.StringPtrOutput `pulumi:"eventHubUri"`
	// Links of the Contact Profile. Describes RF links, modem processing, and IP endpoints.
	Links ContactProfileLinkResponseArrayOutput `pulumi:"links"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// Minimum viable elevation for the contact in decimal degrees. Used for listing the available contacts with a spacecraft at a given ground station.
	MinimumElevationDegrees pulumi.Float64PtrOutput `pulumi:"minimumElevationDegrees"`
	// Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station.
	MinimumViableContactDuration pulumi.StringPtrOutput `pulumi:"minimumViableContactDuration"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Network configuration of customer virtual network.
	NetworkConfiguration ContactProfilesPropertiesResponseNetworkConfigurationOutput `pulumi:"networkConfiguration"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewContactProfile registers a new resource with the given unique name, arguments, and options.
func NewContactProfile(ctx *pulumi.Context,
	name string, args *ContactProfileArgs, opts ...pulumi.ResourceOption) (*ContactProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Links == nil {
		return nil, errors.New("invalid value for required argument 'Links'")
	}
	if args.NetworkConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'NetworkConfiguration'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:orbital:ContactProfile"),
		},
		{
			Type: pulumi.String("azure-native:orbital/v20210404preview:ContactProfile"),
		},
	})
	opts = append(opts, aliases)
	var resource ContactProfile
	err := ctx.RegisterResource("azure-native:orbital/v20220301:ContactProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContactProfile gets an existing ContactProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContactProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContactProfileState, opts ...pulumi.ResourceOption) (*ContactProfile, error) {
	var resource ContactProfile
	err := ctx.ReadResource("azure-native:orbital/v20220301:ContactProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContactProfile resources.
type contactProfileState struct {
}

type ContactProfileState struct {
}

func (ContactProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*contactProfileState)(nil)).Elem()
}

type contactProfileArgs struct {
	// Auto-tracking configuration.
	AutoTrackingConfiguration *AutoTrackingConfiguration `pulumi:"autoTrackingConfiguration"`
	// Contact Profile name.
	ContactProfileName *string `pulumi:"contactProfileName"`
	// ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub.
	EventHubUri *string `pulumi:"eventHubUri"`
	// Links of the Contact Profile. Describes RF links, modem processing, and IP endpoints.
	Links []ContactProfileLink `pulumi:"links"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Minimum viable elevation for the contact in decimal degrees. Used for listing the available contacts with a spacecraft at a given ground station.
	MinimumElevationDegrees *float64 `pulumi:"minimumElevationDegrees"`
	// Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station.
	MinimumViableContactDuration *string `pulumi:"minimumViableContactDuration"`
	// Network configuration of customer virtual network.
	NetworkConfiguration ContactProfilesPropertiesNetworkConfiguration `pulumi:"networkConfiguration"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ContactProfile resource.
type ContactProfileArgs struct {
	// Auto-tracking configuration.
	AutoTrackingConfiguration AutoTrackingConfigurationPtrInput
	// Contact Profile name.
	ContactProfileName pulumi.StringPtrInput
	// ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub.
	EventHubUri pulumi.StringPtrInput
	// Links of the Contact Profile. Describes RF links, modem processing, and IP endpoints.
	Links ContactProfileLinkArrayInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Minimum viable elevation for the contact in decimal degrees. Used for listing the available contacts with a spacecraft at a given ground station.
	MinimumElevationDegrees pulumi.Float64PtrInput
	// Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station.
	MinimumViableContactDuration pulumi.StringPtrInput
	// Network configuration of customer virtual network.
	NetworkConfiguration ContactProfilesPropertiesNetworkConfigurationInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (ContactProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*contactProfileArgs)(nil)).Elem()
}

type ContactProfileInput interface {
	pulumi.Input

	ToContactProfileOutput() ContactProfileOutput
	ToContactProfileOutputWithContext(ctx context.Context) ContactProfileOutput
}

func (*ContactProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactProfile)(nil)).Elem()
}

func (i *ContactProfile) ToContactProfileOutput() ContactProfileOutput {
	return i.ToContactProfileOutputWithContext(context.Background())
}

func (i *ContactProfile) ToContactProfileOutputWithContext(ctx context.Context) ContactProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactProfileOutput)
}

type ContactProfileOutput struct{ *pulumi.OutputState }

func (ContactProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactProfile)(nil)).Elem()
}

func (o ContactProfileOutput) ToContactProfileOutput() ContactProfileOutput {
	return o
}

func (o ContactProfileOutput) ToContactProfileOutputWithContext(ctx context.Context) ContactProfileOutput {
	return o
}

// Auto-tracking configuration.
func (o ContactProfileOutput) AutoTrackingConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactProfile) pulumi.StringPtrOutput { return v.AutoTrackingConfiguration }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ContactProfileOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ContactProfile) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub.
func (o ContactProfileOutput) EventHubUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactProfile) pulumi.StringPtrOutput { return v.EventHubUri }).(pulumi.StringPtrOutput)
}

// Links of the Contact Profile. Describes RF links, modem processing, and IP endpoints.
func (o ContactProfileOutput) Links() ContactProfileLinkResponseArrayOutput {
	return o.ApplyT(func(v *ContactProfile) ContactProfileLinkResponseArrayOutput { return v.Links }).(ContactProfileLinkResponseArrayOutput)
}

// The geo-location where the resource lives
func (o ContactProfileOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ContactProfile) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Minimum viable elevation for the contact in decimal degrees. Used for listing the available contacts with a spacecraft at a given ground station.
func (o ContactProfileOutput) MinimumElevationDegrees() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContactProfile) pulumi.Float64PtrOutput { return v.MinimumElevationDegrees }).(pulumi.Float64PtrOutput)
}

// Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station.
func (o ContactProfileOutput) MinimumViableContactDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactProfile) pulumi.StringPtrOutput { return v.MinimumViableContactDuration }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o ContactProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ContactProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Network configuration of customer virtual network.
func (o ContactProfileOutput) NetworkConfiguration() ContactProfilesPropertiesResponseNetworkConfigurationOutput {
	return o.ApplyT(func(v *ContactProfile) ContactProfilesPropertiesResponseNetworkConfigurationOutput {
		return v.NetworkConfiguration
	}).(ContactProfilesPropertiesResponseNetworkConfigurationOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ContactProfileOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ContactProfile) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o ContactProfileOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContactProfile) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ContactProfileOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ContactProfile) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ContactProfileOutput{})
}
