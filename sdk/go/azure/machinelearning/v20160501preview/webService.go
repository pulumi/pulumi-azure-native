// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20160501preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Instance of an Azure ML web service resource.
type WebService struct {
	pulumi.CustomResourceState

	// Specifies the location of the resource.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name of the resource.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Contains the property payload that describes the web service.
	Properties WebServicePropertiesForGraphResponseOutput `pulumi:"properties"`
	// Contains resource tags defined as key/value pairs.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewWebService registers a new resource with the given unique name, arguments, and options.
func NewWebService(ctx *pulumi.Context,
	name string, args *WebServiceArgs, opts ...pulumi.ResourceOption) (*WebService, error) {
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.Properties == nil {
		return nil, errors.New("missing required argument 'Properties'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.WebServiceName == nil {
		return nil, errors.New("missing required argument 'WebServiceName'")
	}
	if args == nil {
		args = &WebServiceArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:machinelearning/latest:WebService"),
		},
		{
			Type: pulumi.String("azure-nextgen:machinelearning/v20170101:WebService"),
		},
	})
	opts = append(opts, aliases)
	var resource WebService
	err := ctx.RegisterResource("azure-nextgen:machinelearning/v20160501preview:WebService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebService gets an existing WebService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebServiceState, opts ...pulumi.ResourceOption) (*WebService, error) {
	var resource WebService
	err := ctx.ReadResource("azure-nextgen:machinelearning/v20160501preview:WebService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebService resources.
type webServiceState struct {
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// Specifies the name of the resource.
	Name *string `pulumi:"name"`
	// Contains the property payload that describes the web service.
	Properties *WebServicePropertiesForGraphResponse `pulumi:"properties"`
	// Contains resource tags defined as key/value pairs.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the type of the resource.
	Type *string `pulumi:"type"`
}

type WebServiceState struct {
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput
	// Specifies the name of the resource.
	Name pulumi.StringPtrInput
	// Contains the property payload that describes the web service.
	Properties WebServicePropertiesForGraphResponsePtrInput
	// Contains resource tags defined as key/value pairs.
	Tags pulumi.StringMapInput
	// Specifies the type of the resource.
	Type pulumi.StringPtrInput
}

func (WebServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*webServiceState)(nil)).Elem()
}

type webServiceArgs struct {
	// Specifies the location of the resource.
	Location string `pulumi:"location"`
	// Specifies the name of the resource.
	Name *string `pulumi:"name"`
	// Contains the property payload that describes the web service.
	Properties WebServicePropertiesForGraph `pulumi:"properties"`
	// Name of the resource group in which the web service is located.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Contains resource tags defined as key/value pairs.
	Tags map[string]string `pulumi:"tags"`
	// The name of the web service.
	WebServiceName string `pulumi:"webServiceName"`
}

// The set of arguments for constructing a WebService resource.
type WebServiceArgs struct {
	// Specifies the location of the resource.
	Location pulumi.StringInput
	// Specifies the name of the resource.
	Name pulumi.StringPtrInput
	// Contains the property payload that describes the web service.
	Properties WebServicePropertiesForGraphInput
	// Name of the resource group in which the web service is located.
	ResourceGroupName pulumi.StringInput
	// Contains resource tags defined as key/value pairs.
	Tags pulumi.StringMapInput
	// The name of the web service.
	WebServiceName pulumi.StringInput
}

func (WebServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webServiceArgs)(nil)).Elem()
}
