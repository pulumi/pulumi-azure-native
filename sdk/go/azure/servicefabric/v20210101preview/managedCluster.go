// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210101preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The manged cluster resource
type ManagedCluster struct {
	pulumi.CustomResourceState

	// List of add-on features to enable on the cluster.
	AddonFeatures pulumi.StringArrayOutput `pulumi:"addonFeatures"`
	// VM admin user password.
	AdminPassword pulumi.StringPtrOutput `pulumi:"adminPassword"`
	// VM admin user name.
	AdminUserName pulumi.StringOutput `pulumi:"adminUserName"`
	// Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to internet which can be overridden with custom Network Security Rules. The default value for this setting is false.
	AllowRdpAccess pulumi.BoolPtrOutput `pulumi:"allowRdpAccess"`
	// The policy used to clean up unused versions.
	ApplicationTypeVersionsCleanupPolicy ApplicationTypeVersionsCleanupPolicyResponsePtrOutput `pulumi:"applicationTypeVersionsCleanupPolicy"`
	// The AAD authentication settings of the cluster.
	AzureActiveDirectory AzureActiveDirectoryResponsePtrOutput `pulumi:"azureActiveDirectory"`
	// The port used for client connections to the cluster.
	ClientConnectionPort pulumi.IntPtrOutput `pulumi:"clientConnectionPort"`
	// Client certificates that are allowed to manage the cluster.
	Clients ClientCertificateResponseArrayOutput `pulumi:"clients"`
	// List of thumbprints of the cluster certificates.
	ClusterCertificateThumbprints pulumi.StringArrayOutput `pulumi:"clusterCertificateThumbprints"`
	// The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
	ClusterCodeVersion pulumi.StringPtrOutput `pulumi:"clusterCodeVersion"`
	// A service generated unique identifier for the cluster resource.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// The current state of the cluster.
	ClusterState pulumi.StringOutput `pulumi:"clusterState"`
	// Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0.
	ClusterUpgradeCadence pulumi.StringPtrOutput `pulumi:"clusterUpgradeCadence"`
	// The cluster dns name.
	DnsName pulumi.StringOutput `pulumi:"dnsName"`
	// Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false.
	EnableAutoOSUpgrade pulumi.BoolPtrOutput `pulumi:"enableAutoOSUpgrade"`
	// Azure resource etag.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The list of custom fabric settings to configure the cluster.
	FabricSettings SettingsSectionDescriptionResponseArrayOutput `pulumi:"fabricSettings"`
	// The fully qualified domain name associated with the public load balancer of the cluster.
	Fqdn pulumi.StringOutput `pulumi:"fqdn"`
	// The port used for HTTP connections to the cluster.
	HttpGatewayConnectionPort pulumi.IntPtrOutput `pulumi:"httpGatewayConnectionPort"`
	// The IPv4 address associated with the public load balancer of the cluster.
	Ipv4Address pulumi.StringOutput `pulumi:"ipv4Address"`
	// Load balancing rules that are applied to the public load balancer of the cluster.
	LoadBalancingRules LoadBalancingRuleResponseArrayOutput `pulumi:"loadBalancingRules"`
	// Azure resource location.
	Location pulumi.StringOutput `pulumi:"location"`
	// Azure resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Custom Network Security Rules that are applied to the virtual network of the cluster.
	NetworkSecurityRules NetworkSecurityRuleResponseArrayOutput `pulumi:"networkSecurityRules"`
	// The provisioning state of the managed cluster resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The sku of the managed cluster
	Sku SkuResponsePtrOutput `pulumi:"sku"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Azure resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Azure resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewManagedCluster registers a new resource with the given unique name, arguments, and options.
func NewManagedCluster(ctx *pulumi.Context,
	name string, args *ManagedClusterArgs, opts ...pulumi.ResourceOption) (*ManagedCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdminUserName == nil {
		return nil, errors.New("invalid value for required argument 'AdminUserName'")
	}
	if args.DnsName == nil {
		return nil, errors.New("invalid value for required argument 'DnsName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if isZero(args.ClientConnectionPort) {
		args.ClientConnectionPort = pulumi.IntPtr(19000)
	}
	if isZero(args.HttpGatewayConnectionPort) {
		args.HttpGatewayConnectionPort = pulumi.IntPtr(19080)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:servicefabric:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20200101preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20210501:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20210701preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20210901privatepreview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20211101preview:ManagedCluster"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20220101:ManagedCluster"),
		},
	})
	opts = append(opts, aliases)
	var resource ManagedCluster
	err := ctx.RegisterResource("azure-native:servicefabric/v20210101preview:ManagedCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedCluster gets an existing ManagedCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedClusterState, opts ...pulumi.ResourceOption) (*ManagedCluster, error) {
	var resource ManagedCluster
	err := ctx.ReadResource("azure-native:servicefabric/v20210101preview:ManagedCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedCluster resources.
type managedClusterState struct {
}

type ManagedClusterState struct {
}

func (ManagedClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedClusterState)(nil)).Elem()
}

type managedClusterArgs struct {
	// List of add-on features to enable on the cluster.
	AddonFeatures []string `pulumi:"addonFeatures"`
	// VM admin user password.
	AdminPassword *string `pulumi:"adminPassword"`
	// VM admin user name.
	AdminUserName string `pulumi:"adminUserName"`
	// Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to internet which can be overridden with custom Network Security Rules. The default value for this setting is false.
	AllowRdpAccess *bool `pulumi:"allowRdpAccess"`
	// The policy used to clean up unused versions.
	ApplicationTypeVersionsCleanupPolicy *ApplicationTypeVersionsCleanupPolicy `pulumi:"applicationTypeVersionsCleanupPolicy"`
	// The AAD authentication settings of the cluster.
	AzureActiveDirectory *AzureActiveDirectory `pulumi:"azureActiveDirectory"`
	// The port used for client connections to the cluster.
	ClientConnectionPort *int `pulumi:"clientConnectionPort"`
	// Client certificates that are allowed to manage the cluster.
	Clients []ClientCertificate `pulumi:"clients"`
	// The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
	ClusterCodeVersion *string `pulumi:"clusterCodeVersion"`
	// The name of the cluster resource.
	ClusterName *string `pulumi:"clusterName"`
	// Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0.
	ClusterUpgradeCadence *string `pulumi:"clusterUpgradeCadence"`
	// The cluster dns name.
	DnsName string `pulumi:"dnsName"`
	// Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false.
	EnableAutoOSUpgrade *bool `pulumi:"enableAutoOSUpgrade"`
	// The list of custom fabric settings to configure the cluster.
	FabricSettings []SettingsSectionDescription `pulumi:"fabricSettings"`
	// The port used for HTTP connections to the cluster.
	HttpGatewayConnectionPort *int `pulumi:"httpGatewayConnectionPort"`
	// Load balancing rules that are applied to the public load balancer of the cluster.
	LoadBalancingRules []LoadBalancingRule `pulumi:"loadBalancingRules"`
	// Azure resource location.
	Location *string `pulumi:"location"`
	// Custom Network Security Rules that are applied to the virtual network of the cluster.
	NetworkSecurityRules []NetworkSecurityRule `pulumi:"networkSecurityRules"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The sku of the managed cluster
	Sku *Sku `pulumi:"sku"`
	// Azure resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ManagedCluster resource.
type ManagedClusterArgs struct {
	// List of add-on features to enable on the cluster.
	AddonFeatures pulumi.StringArrayInput
	// VM admin user password.
	AdminPassword pulumi.StringPtrInput
	// VM admin user name.
	AdminUserName pulumi.StringInput
	// Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to internet which can be overridden with custom Network Security Rules. The default value for this setting is false.
	AllowRdpAccess pulumi.BoolPtrInput
	// The policy used to clean up unused versions.
	ApplicationTypeVersionsCleanupPolicy ApplicationTypeVersionsCleanupPolicyPtrInput
	// The AAD authentication settings of the cluster.
	AzureActiveDirectory AzureActiveDirectoryPtrInput
	// The port used for client connections to the cluster.
	ClientConnectionPort pulumi.IntPtrInput
	// Client certificates that are allowed to manage the cluster.
	Clients ClientCertificateArrayInput
	// The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
	ClusterCodeVersion pulumi.StringPtrInput
	// The name of the cluster resource.
	ClusterName pulumi.StringPtrInput
	// Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0.
	ClusterUpgradeCadence pulumi.StringPtrInput
	// The cluster dns name.
	DnsName pulumi.StringInput
	// Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false.
	EnableAutoOSUpgrade pulumi.BoolPtrInput
	// The list of custom fabric settings to configure the cluster.
	FabricSettings SettingsSectionDescriptionArrayInput
	// The port used for HTTP connections to the cluster.
	HttpGatewayConnectionPort pulumi.IntPtrInput
	// Load balancing rules that are applied to the public load balancer of the cluster.
	LoadBalancingRules LoadBalancingRuleArrayInput
	// Azure resource location.
	Location pulumi.StringPtrInput
	// Custom Network Security Rules that are applied to the virtual network of the cluster.
	NetworkSecurityRules NetworkSecurityRuleArrayInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The sku of the managed cluster
	Sku SkuPtrInput
	// Azure resource tags.
	Tags pulumi.StringMapInput
}

func (ManagedClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedClusterArgs)(nil)).Elem()
}

type ManagedClusterInput interface {
	pulumi.Input

	ToManagedClusterOutput() ManagedClusterOutput
	ToManagedClusterOutputWithContext(ctx context.Context) ManagedClusterOutput
}

func (*ManagedCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedCluster)(nil)).Elem()
}

func (i *ManagedCluster) ToManagedClusterOutput() ManagedClusterOutput {
	return i.ToManagedClusterOutputWithContext(context.Background())
}

func (i *ManagedCluster) ToManagedClusterOutputWithContext(ctx context.Context) ManagedClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterOutput)
}

type ManagedClusterOutput struct{ *pulumi.OutputState }

func (ManagedClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedCluster)(nil)).Elem()
}

func (o ManagedClusterOutput) ToManagedClusterOutput() ManagedClusterOutput {
	return o
}

func (o ManagedClusterOutput) ToManagedClusterOutputWithContext(ctx context.Context) ManagedClusterOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ManagedClusterOutput{})
}
