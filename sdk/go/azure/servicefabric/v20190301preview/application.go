// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190301preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The application resource.
//
// Deprecated: Version 2019-03-01-preview will be removed in v2 of the provider.
type Application struct {
	pulumi.CustomResourceState

	// Azure resource etag.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Azure resource location.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.
	MaximumNodes pulumi.Float64PtrOutput `pulumi:"maximumNodes"`
	// List of application capacity metric description.
	Metrics ApplicationMetricDescriptionResponseArrayOutput `pulumi:"metrics"`
	// The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.
	MinimumNodes pulumi.Float64PtrOutput `pulumi:"minimumNodes"`
	// Azure resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// List of application parameters with overridden values from their default values specified in the application manifest.
	Parameters pulumi.StringMapOutput `pulumi:"parameters"`
	// The current deployment or provisioning state, which only appears in the response
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Remove the current application capacity settings.
	RemoveApplicationCapacity pulumi.BoolPtrOutput `pulumi:"removeApplicationCapacity"`
	// Azure resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Azure resource type.
	Type pulumi.StringOutput `pulumi:"type"`
	// The application type name as defined in the application manifest.
	TypeName pulumi.StringPtrOutput `pulumi:"typeName"`
	// The version of the application type as defined in the application manifest.
	TypeVersion pulumi.StringPtrOutput `pulumi:"typeVersion"`
	// Describes the policy for a monitored application upgrade.
	UpgradePolicy ApplicationUpgradePolicyResponsePtrOutput `pulumi:"upgradePolicy"`
}

// NewApplication registers a new resource with the given unique name, arguments, and options.
func NewApplication(ctx *pulumi.Context,
	name string, args *ApplicationArgs, opts ...pulumi.ResourceOption) (*Application, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if isZero(args.MaximumNodes) {
		args.MaximumNodes = pulumi.Float64Ptr(0.0)
	}
	if args.UpgradePolicy != nil {
		args.UpgradePolicy = args.UpgradePolicy.ToApplicationUpgradePolicyPtrOutput().ApplyT(func(v *ApplicationUpgradePolicy) *ApplicationUpgradePolicy { return v.Defaults() }).(ApplicationUpgradePolicyPtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:servicefabric:Application"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20170701preview:Application"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20190301:Application"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20190601preview:Application"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20191101preview:Application"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20200301:Application"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20201201preview:Application"),
		},
		{
			Type: pulumi.String("azure-native:servicefabric/v20210601:Application"),
		},
	})
	opts = append(opts, aliases)
	var resource Application
	err := ctx.RegisterResource("azure-native:servicefabric/v20190301preview:Application", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplication gets an existing Application resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationState, opts ...pulumi.ResourceOption) (*Application, error) {
	var resource Application
	err := ctx.ReadResource("azure-native:servicefabric/v20190301preview:Application", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Application resources.
type applicationState struct {
}

type ApplicationState struct {
}

func (ApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationState)(nil)).Elem()
}

type applicationArgs struct {
	// The name of the application resource.
	ApplicationName *string `pulumi:"applicationName"`
	// The name of the cluster resource.
	ClusterName string `pulumi:"clusterName"`
	// Azure resource location.
	Location *string `pulumi:"location"`
	// The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.
	MaximumNodes *float64 `pulumi:"maximumNodes"`
	// List of application capacity metric description.
	Metrics []ApplicationMetricDescription `pulumi:"metrics"`
	// The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.
	MinimumNodes *float64 `pulumi:"minimumNodes"`
	// List of application parameters with overridden values from their default values specified in the application manifest.
	Parameters map[string]string `pulumi:"parameters"`
	// Remove the current application capacity settings.
	RemoveApplicationCapacity *bool `pulumi:"removeApplicationCapacity"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Azure resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The application type name as defined in the application manifest.
	TypeName *string `pulumi:"typeName"`
	// The version of the application type as defined in the application manifest.
	TypeVersion *string `pulumi:"typeVersion"`
	// Describes the policy for a monitored application upgrade.
	UpgradePolicy *ApplicationUpgradePolicy `pulumi:"upgradePolicy"`
}

// The set of arguments for constructing a Application resource.
type ApplicationArgs struct {
	// The name of the application resource.
	ApplicationName pulumi.StringPtrInput
	// The name of the cluster resource.
	ClusterName pulumi.StringInput
	// Azure resource location.
	Location pulumi.StringPtrInput
	// The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.
	MaximumNodes pulumi.Float64PtrInput
	// List of application capacity metric description.
	Metrics ApplicationMetricDescriptionArrayInput
	// The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.
	MinimumNodes pulumi.Float64PtrInput
	// List of application parameters with overridden values from their default values specified in the application manifest.
	Parameters pulumi.StringMapInput
	// Remove the current application capacity settings.
	RemoveApplicationCapacity pulumi.BoolPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// Azure resource tags.
	Tags pulumi.StringMapInput
	// The application type name as defined in the application manifest.
	TypeName pulumi.StringPtrInput
	// The version of the application type as defined in the application manifest.
	TypeVersion pulumi.StringPtrInput
	// Describes the policy for a monitored application upgrade.
	UpgradePolicy ApplicationUpgradePolicyPtrInput
}

func (ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationArgs)(nil)).Elem()
}

type ApplicationInput interface {
	pulumi.Input

	ToApplicationOutput() ApplicationOutput
	ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput
}

func (*Application) ElementType() reflect.Type {
	return reflect.TypeOf((**Application)(nil)).Elem()
}

func (i *Application) ToApplicationOutput() ApplicationOutput {
	return i.ToApplicationOutputWithContext(context.Background())
}

func (i *Application) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutput)
}

type ApplicationOutput struct{ *pulumi.OutputState }

func (ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Application)(nil)).Elem()
}

func (o ApplicationOutput) ToApplicationOutput() ApplicationOutput {
	return o
}

func (o ApplicationOutput) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return o
}

// Azure resource etag.
func (o ApplicationOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Azure resource location.
func (o ApplicationOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.
func (o ApplicationOutput) MaximumNodes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Application) pulumi.Float64PtrOutput { return v.MaximumNodes }).(pulumi.Float64PtrOutput)
}

// List of application capacity metric description.
func (o ApplicationOutput) Metrics() ApplicationMetricDescriptionResponseArrayOutput {
	return o.ApplyT(func(v *Application) ApplicationMetricDescriptionResponseArrayOutput { return v.Metrics }).(ApplicationMetricDescriptionResponseArrayOutput)
}

// The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.
func (o ApplicationOutput) MinimumNodes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Application) pulumi.Float64PtrOutput { return v.MinimumNodes }).(pulumi.Float64PtrOutput)
}

// Azure resource name.
func (o ApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of application parameters with overridden values from their default values specified in the application manifest.
func (o ApplicationOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Application) pulumi.StringMapOutput { return v.Parameters }).(pulumi.StringMapOutput)
}

// The current deployment or provisioning state, which only appears in the response
func (o ApplicationOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Remove the current application capacity settings.
func (o ApplicationOutput) RemoveApplicationCapacity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.BoolPtrOutput { return v.RemoveApplicationCapacity }).(pulumi.BoolPtrOutput)
}

// Azure resource tags.
func (o ApplicationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Application) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Azure resource type.
func (o ApplicationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The application type name as defined in the application manifest.
func (o ApplicationOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.TypeName }).(pulumi.StringPtrOutput)
}

// The version of the application type as defined in the application manifest.
func (o ApplicationOutput) TypeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.TypeVersion }).(pulumi.StringPtrOutput)
}

// Describes the policy for a monitored application upgrade.
func (o ApplicationOutput) UpgradePolicy() ApplicationUpgradePolicyResponsePtrOutput {
	return o.ApplyT(func(v *Application) ApplicationUpgradePolicyResponsePtrOutput { return v.UpgradePolicy }).(ApplicationUpgradePolicyResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationOutput{})
}
