// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190301preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ArmServicePackageActivationMode string

const (
	// Indicates the application package activation mode will use shared process.
	ArmServicePackageActivationModeSharedProcess = ArmServicePackageActivationMode("SharedProcess")
	// Indicates the application package activation mode will use exclusive process.
	ArmServicePackageActivationModeExclusiveProcess = ArmServicePackageActivationMode("ExclusiveProcess")
)

func (ArmServicePackageActivationMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmServicePackageActivationMode)(nil)).Elem()
}

func (e ArmServicePackageActivationMode) ToArmServicePackageActivationModeOutput() ArmServicePackageActivationModeOutput {
	return pulumi.ToOutput(e).(ArmServicePackageActivationModeOutput)
}

func (e ArmServicePackageActivationMode) ToArmServicePackageActivationModeOutputWithContext(ctx context.Context) ArmServicePackageActivationModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ArmServicePackageActivationModeOutput)
}

func (e ArmServicePackageActivationMode) ToArmServicePackageActivationModePtrOutput() ArmServicePackageActivationModePtrOutput {
	return e.ToArmServicePackageActivationModePtrOutputWithContext(context.Background())
}

func (e ArmServicePackageActivationMode) ToArmServicePackageActivationModePtrOutputWithContext(ctx context.Context) ArmServicePackageActivationModePtrOutput {
	return ArmServicePackageActivationMode(e).ToArmServicePackageActivationModeOutputWithContext(ctx).ToArmServicePackageActivationModePtrOutputWithContext(ctx)
}

func (e ArmServicePackageActivationMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ArmServicePackageActivationMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ArmServicePackageActivationMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ArmServicePackageActivationMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ArmServicePackageActivationModeOutput struct{ *pulumi.OutputState }

func (ArmServicePackageActivationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmServicePackageActivationMode)(nil)).Elem()
}

func (o ArmServicePackageActivationModeOutput) ToArmServicePackageActivationModeOutput() ArmServicePackageActivationModeOutput {
	return o
}

func (o ArmServicePackageActivationModeOutput) ToArmServicePackageActivationModeOutputWithContext(ctx context.Context) ArmServicePackageActivationModeOutput {
	return o
}

func (o ArmServicePackageActivationModeOutput) ToArmServicePackageActivationModePtrOutput() ArmServicePackageActivationModePtrOutput {
	return o.ToArmServicePackageActivationModePtrOutputWithContext(context.Background())
}

func (o ArmServicePackageActivationModeOutput) ToArmServicePackageActivationModePtrOutputWithContext(ctx context.Context) ArmServicePackageActivationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ArmServicePackageActivationMode) *ArmServicePackageActivationMode {
		return &v
	}).(ArmServicePackageActivationModePtrOutput)
}

func (o ArmServicePackageActivationModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ArmServicePackageActivationModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ArmServicePackageActivationMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ArmServicePackageActivationModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ArmServicePackageActivationModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ArmServicePackageActivationMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ArmServicePackageActivationModePtrOutput struct{ *pulumi.OutputState }

func (ArmServicePackageActivationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArmServicePackageActivationMode)(nil)).Elem()
}

func (o ArmServicePackageActivationModePtrOutput) ToArmServicePackageActivationModePtrOutput() ArmServicePackageActivationModePtrOutput {
	return o
}

func (o ArmServicePackageActivationModePtrOutput) ToArmServicePackageActivationModePtrOutputWithContext(ctx context.Context) ArmServicePackageActivationModePtrOutput {
	return o
}

func (o ArmServicePackageActivationModePtrOutput) Elem() ArmServicePackageActivationModeOutput {
	return o.ApplyT(func(v *ArmServicePackageActivationMode) ArmServicePackageActivationMode {
		if v != nil {
			return *v
		}
		var ret ArmServicePackageActivationMode
		return ret
	}).(ArmServicePackageActivationModeOutput)
}

func (o ArmServicePackageActivationModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ArmServicePackageActivationModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ArmServicePackageActivationMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ArmServicePackageActivationModeInput is an input type that accepts ArmServicePackageActivationModeArgs and ArmServicePackageActivationModeOutput values.
// You can construct a concrete instance of `ArmServicePackageActivationModeInput` via:
//
//          ArmServicePackageActivationModeArgs{...}
type ArmServicePackageActivationModeInput interface {
	pulumi.Input

	ToArmServicePackageActivationModeOutput() ArmServicePackageActivationModeOutput
	ToArmServicePackageActivationModeOutputWithContext(context.Context) ArmServicePackageActivationModeOutput
}

var armServicePackageActivationModePtrType = reflect.TypeOf((**ArmServicePackageActivationMode)(nil)).Elem()

type ArmServicePackageActivationModePtrInput interface {
	pulumi.Input

	ToArmServicePackageActivationModePtrOutput() ArmServicePackageActivationModePtrOutput
	ToArmServicePackageActivationModePtrOutputWithContext(context.Context) ArmServicePackageActivationModePtrOutput
}

type armServicePackageActivationModePtr string

func ArmServicePackageActivationModePtr(v string) ArmServicePackageActivationModePtrInput {
	return (*armServicePackageActivationModePtr)(&v)
}

func (*armServicePackageActivationModePtr) ElementType() reflect.Type {
	return armServicePackageActivationModePtrType
}

func (in *armServicePackageActivationModePtr) ToArmServicePackageActivationModePtrOutput() ArmServicePackageActivationModePtrOutput {
	return pulumi.ToOutput(in).(ArmServicePackageActivationModePtrOutput)
}

func (in *armServicePackageActivationModePtr) ToArmServicePackageActivationModePtrOutputWithContext(ctx context.Context) ArmServicePackageActivationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ArmServicePackageActivationModePtrOutput)
}

type ArmUpgradeFailureAction string

const (
	// Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails.
	ArmUpgradeFailureActionRollback = ArmUpgradeFailureAction("Rollback")
	// Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically.
	ArmUpgradeFailureActionManual = ArmUpgradeFailureAction("Manual")
)

func (ArmUpgradeFailureAction) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmUpgradeFailureAction)(nil)).Elem()
}

func (e ArmUpgradeFailureAction) ToArmUpgradeFailureActionOutput() ArmUpgradeFailureActionOutput {
	return pulumi.ToOutput(e).(ArmUpgradeFailureActionOutput)
}

func (e ArmUpgradeFailureAction) ToArmUpgradeFailureActionOutputWithContext(ctx context.Context) ArmUpgradeFailureActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ArmUpgradeFailureActionOutput)
}

func (e ArmUpgradeFailureAction) ToArmUpgradeFailureActionPtrOutput() ArmUpgradeFailureActionPtrOutput {
	return e.ToArmUpgradeFailureActionPtrOutputWithContext(context.Background())
}

func (e ArmUpgradeFailureAction) ToArmUpgradeFailureActionPtrOutputWithContext(ctx context.Context) ArmUpgradeFailureActionPtrOutput {
	return ArmUpgradeFailureAction(e).ToArmUpgradeFailureActionOutputWithContext(ctx).ToArmUpgradeFailureActionPtrOutputWithContext(ctx)
}

func (e ArmUpgradeFailureAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ArmUpgradeFailureAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ArmUpgradeFailureAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ArmUpgradeFailureAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ArmUpgradeFailureActionOutput struct{ *pulumi.OutputState }

func (ArmUpgradeFailureActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmUpgradeFailureAction)(nil)).Elem()
}

func (o ArmUpgradeFailureActionOutput) ToArmUpgradeFailureActionOutput() ArmUpgradeFailureActionOutput {
	return o
}

func (o ArmUpgradeFailureActionOutput) ToArmUpgradeFailureActionOutputWithContext(ctx context.Context) ArmUpgradeFailureActionOutput {
	return o
}

func (o ArmUpgradeFailureActionOutput) ToArmUpgradeFailureActionPtrOutput() ArmUpgradeFailureActionPtrOutput {
	return o.ToArmUpgradeFailureActionPtrOutputWithContext(context.Background())
}

func (o ArmUpgradeFailureActionOutput) ToArmUpgradeFailureActionPtrOutputWithContext(ctx context.Context) ArmUpgradeFailureActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ArmUpgradeFailureAction) *ArmUpgradeFailureAction {
		return &v
	}).(ArmUpgradeFailureActionPtrOutput)
}

func (o ArmUpgradeFailureActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ArmUpgradeFailureActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ArmUpgradeFailureAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ArmUpgradeFailureActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ArmUpgradeFailureActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ArmUpgradeFailureAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ArmUpgradeFailureActionPtrOutput struct{ *pulumi.OutputState }

func (ArmUpgradeFailureActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArmUpgradeFailureAction)(nil)).Elem()
}

func (o ArmUpgradeFailureActionPtrOutput) ToArmUpgradeFailureActionPtrOutput() ArmUpgradeFailureActionPtrOutput {
	return o
}

func (o ArmUpgradeFailureActionPtrOutput) ToArmUpgradeFailureActionPtrOutputWithContext(ctx context.Context) ArmUpgradeFailureActionPtrOutput {
	return o
}

func (o ArmUpgradeFailureActionPtrOutput) Elem() ArmUpgradeFailureActionOutput {
	return o.ApplyT(func(v *ArmUpgradeFailureAction) ArmUpgradeFailureAction {
		if v != nil {
			return *v
		}
		var ret ArmUpgradeFailureAction
		return ret
	}).(ArmUpgradeFailureActionOutput)
}

func (o ArmUpgradeFailureActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ArmUpgradeFailureActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ArmUpgradeFailureAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ArmUpgradeFailureActionInput is an input type that accepts ArmUpgradeFailureActionArgs and ArmUpgradeFailureActionOutput values.
// You can construct a concrete instance of `ArmUpgradeFailureActionInput` via:
//
//          ArmUpgradeFailureActionArgs{...}
type ArmUpgradeFailureActionInput interface {
	pulumi.Input

	ToArmUpgradeFailureActionOutput() ArmUpgradeFailureActionOutput
	ToArmUpgradeFailureActionOutputWithContext(context.Context) ArmUpgradeFailureActionOutput
}

var armUpgradeFailureActionPtrType = reflect.TypeOf((**ArmUpgradeFailureAction)(nil)).Elem()

type ArmUpgradeFailureActionPtrInput interface {
	pulumi.Input

	ToArmUpgradeFailureActionPtrOutput() ArmUpgradeFailureActionPtrOutput
	ToArmUpgradeFailureActionPtrOutputWithContext(context.Context) ArmUpgradeFailureActionPtrOutput
}

type armUpgradeFailureActionPtr string

func ArmUpgradeFailureActionPtr(v string) ArmUpgradeFailureActionPtrInput {
	return (*armUpgradeFailureActionPtr)(&v)
}

func (*armUpgradeFailureActionPtr) ElementType() reflect.Type {
	return armUpgradeFailureActionPtrType
}

func (in *armUpgradeFailureActionPtr) ToArmUpgradeFailureActionPtrOutput() ArmUpgradeFailureActionPtrOutput {
	return pulumi.ToOutput(in).(ArmUpgradeFailureActionPtrOutput)
}

func (in *armUpgradeFailureActionPtr) ToArmUpgradeFailureActionPtrOutputWithContext(ctx context.Context) ArmUpgradeFailureActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ArmUpgradeFailureActionPtrOutput)
}

type MoveCost string

const (
	// Zero move cost. This value is zero.
	MoveCostZero = MoveCost("Zero")
	// Specifies the move cost of the service as Low. The value is 1.
	MoveCostLow = MoveCost("Low")
	// Specifies the move cost of the service as Medium. The value is 2.
	MoveCostMedium = MoveCost("Medium")
	// Specifies the move cost of the service as High. The value is 3.
	MoveCostHigh = MoveCost("High")
)

func (MoveCost) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveCost)(nil)).Elem()
}

func (e MoveCost) ToMoveCostOutput() MoveCostOutput {
	return pulumi.ToOutput(e).(MoveCostOutput)
}

func (e MoveCost) ToMoveCostOutputWithContext(ctx context.Context) MoveCostOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MoveCostOutput)
}

func (e MoveCost) ToMoveCostPtrOutput() MoveCostPtrOutput {
	return e.ToMoveCostPtrOutputWithContext(context.Background())
}

func (e MoveCost) ToMoveCostPtrOutputWithContext(ctx context.Context) MoveCostPtrOutput {
	return MoveCost(e).ToMoveCostOutputWithContext(ctx).ToMoveCostPtrOutputWithContext(ctx)
}

func (e MoveCost) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MoveCost) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MoveCost) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MoveCost) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MoveCostOutput struct{ *pulumi.OutputState }

func (MoveCostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveCost)(nil)).Elem()
}

func (o MoveCostOutput) ToMoveCostOutput() MoveCostOutput {
	return o
}

func (o MoveCostOutput) ToMoveCostOutputWithContext(ctx context.Context) MoveCostOutput {
	return o
}

func (o MoveCostOutput) ToMoveCostPtrOutput() MoveCostPtrOutput {
	return o.ToMoveCostPtrOutputWithContext(context.Background())
}

func (o MoveCostOutput) ToMoveCostPtrOutputWithContext(ctx context.Context) MoveCostPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MoveCost) *MoveCost {
		return &v
	}).(MoveCostPtrOutput)
}

func (o MoveCostOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MoveCostOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MoveCost) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MoveCostOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MoveCostOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MoveCost) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MoveCostPtrOutput struct{ *pulumi.OutputState }

func (MoveCostPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveCost)(nil)).Elem()
}

func (o MoveCostPtrOutput) ToMoveCostPtrOutput() MoveCostPtrOutput {
	return o
}

func (o MoveCostPtrOutput) ToMoveCostPtrOutputWithContext(ctx context.Context) MoveCostPtrOutput {
	return o
}

func (o MoveCostPtrOutput) Elem() MoveCostOutput {
	return o.ApplyT(func(v *MoveCost) MoveCost {
		if v != nil {
			return *v
		}
		var ret MoveCost
		return ret
	}).(MoveCostOutput)
}

func (o MoveCostPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MoveCostPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MoveCost) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MoveCostInput is an input type that accepts MoveCostArgs and MoveCostOutput values.
// You can construct a concrete instance of `MoveCostInput` via:
//
//          MoveCostArgs{...}
type MoveCostInput interface {
	pulumi.Input

	ToMoveCostOutput() MoveCostOutput
	ToMoveCostOutputWithContext(context.Context) MoveCostOutput
}

var moveCostPtrType = reflect.TypeOf((**MoveCost)(nil)).Elem()

type MoveCostPtrInput interface {
	pulumi.Input

	ToMoveCostPtrOutput() MoveCostPtrOutput
	ToMoveCostPtrOutputWithContext(context.Context) MoveCostPtrOutput
}

type moveCostPtr string

func MoveCostPtr(v string) MoveCostPtrInput {
	return (*moveCostPtr)(&v)
}

func (*moveCostPtr) ElementType() reflect.Type {
	return moveCostPtrType
}

func (in *moveCostPtr) ToMoveCostPtrOutput() MoveCostPtrOutput {
	return pulumi.ToOutput(in).(MoveCostPtrOutput)
}

func (in *moveCostPtr) ToMoveCostPtrOutputWithContext(ctx context.Context) MoveCostPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MoveCostPtrOutput)
}

type PartitionScheme string

const (
	// Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
	PartitionSchemeInvalid = PartitionScheme("Invalid")
	// Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1.
	PartitionSchemeSingleton = PartitionScheme("Singleton")
	// Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2.
	PartitionSchemeUniformInt64Range = PartitionScheme("UniformInt64Range")
	// Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3
	PartitionSchemeNamed = PartitionScheme("Named")
)

func (PartitionScheme) ElementType() reflect.Type {
	return reflect.TypeOf((*PartitionScheme)(nil)).Elem()
}

func (e PartitionScheme) ToPartitionSchemeOutput() PartitionSchemeOutput {
	return pulumi.ToOutput(e).(PartitionSchemeOutput)
}

func (e PartitionScheme) ToPartitionSchemeOutputWithContext(ctx context.Context) PartitionSchemeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PartitionSchemeOutput)
}

func (e PartitionScheme) ToPartitionSchemePtrOutput() PartitionSchemePtrOutput {
	return e.ToPartitionSchemePtrOutputWithContext(context.Background())
}

func (e PartitionScheme) ToPartitionSchemePtrOutputWithContext(ctx context.Context) PartitionSchemePtrOutput {
	return PartitionScheme(e).ToPartitionSchemeOutputWithContext(ctx).ToPartitionSchemePtrOutputWithContext(ctx)
}

func (e PartitionScheme) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartitionScheme) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartitionScheme) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PartitionScheme) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PartitionSchemeOutput struct{ *pulumi.OutputState }

func (PartitionSchemeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PartitionScheme)(nil)).Elem()
}

func (o PartitionSchemeOutput) ToPartitionSchemeOutput() PartitionSchemeOutput {
	return o
}

func (o PartitionSchemeOutput) ToPartitionSchemeOutputWithContext(ctx context.Context) PartitionSchemeOutput {
	return o
}

func (o PartitionSchemeOutput) ToPartitionSchemePtrOutput() PartitionSchemePtrOutput {
	return o.ToPartitionSchemePtrOutputWithContext(context.Background())
}

func (o PartitionSchemeOutput) ToPartitionSchemePtrOutputWithContext(ctx context.Context) PartitionSchemePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PartitionScheme) *PartitionScheme {
		return &v
	}).(PartitionSchemePtrOutput)
}

func (o PartitionSchemeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PartitionSchemeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartitionScheme) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PartitionSchemeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartitionSchemeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartitionScheme) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PartitionSchemePtrOutput struct{ *pulumi.OutputState }

func (PartitionSchemePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PartitionScheme)(nil)).Elem()
}

func (o PartitionSchemePtrOutput) ToPartitionSchemePtrOutput() PartitionSchemePtrOutput {
	return o
}

func (o PartitionSchemePtrOutput) ToPartitionSchemePtrOutputWithContext(ctx context.Context) PartitionSchemePtrOutput {
	return o
}

func (o PartitionSchemePtrOutput) Elem() PartitionSchemeOutput {
	return o.ApplyT(func(v *PartitionScheme) PartitionScheme {
		if v != nil {
			return *v
		}
		var ret PartitionScheme
		return ret
	}).(PartitionSchemeOutput)
}

func (o PartitionSchemePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartitionSchemePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PartitionScheme) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PartitionSchemeInput is an input type that accepts PartitionSchemeArgs and PartitionSchemeOutput values.
// You can construct a concrete instance of `PartitionSchemeInput` via:
//
//          PartitionSchemeArgs{...}
type PartitionSchemeInput interface {
	pulumi.Input

	ToPartitionSchemeOutput() PartitionSchemeOutput
	ToPartitionSchemeOutputWithContext(context.Context) PartitionSchemeOutput
}

var partitionSchemePtrType = reflect.TypeOf((**PartitionScheme)(nil)).Elem()

type PartitionSchemePtrInput interface {
	pulumi.Input

	ToPartitionSchemePtrOutput() PartitionSchemePtrOutput
	ToPartitionSchemePtrOutputWithContext(context.Context) PartitionSchemePtrOutput
}

type partitionSchemePtr string

func PartitionSchemePtr(v string) PartitionSchemePtrInput {
	return (*partitionSchemePtr)(&v)
}

func (*partitionSchemePtr) ElementType() reflect.Type {
	return partitionSchemePtrType
}

func (in *partitionSchemePtr) ToPartitionSchemePtrOutput() PartitionSchemePtrOutput {
	return pulumi.ToOutput(in).(PartitionSchemePtrOutput)
}

func (in *partitionSchemePtr) ToPartitionSchemePtrOutputWithContext(ctx context.Context) PartitionSchemePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PartitionSchemePtrOutput)
}

type ServiceCorrelationScheme string

const (
	// An invalid correlation scheme. Cannot be used. The value is zero.
	ServiceCorrelationSchemeInvalid = ServiceCorrelationScheme("Invalid")
	// Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1.
	ServiceCorrelationSchemeAffinity = ServiceCorrelationScheme("Affinity")
	// Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2.
	ServiceCorrelationSchemeAlignedAffinity = ServiceCorrelationScheme("AlignedAffinity")
	// Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3.
	ServiceCorrelationSchemeNonAlignedAffinity = ServiceCorrelationScheme("NonAlignedAffinity")
)

func (ServiceCorrelationScheme) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCorrelationScheme)(nil)).Elem()
}

func (e ServiceCorrelationScheme) ToServiceCorrelationSchemeOutput() ServiceCorrelationSchemeOutput {
	return pulumi.ToOutput(e).(ServiceCorrelationSchemeOutput)
}

func (e ServiceCorrelationScheme) ToServiceCorrelationSchemeOutputWithContext(ctx context.Context) ServiceCorrelationSchemeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceCorrelationSchemeOutput)
}

func (e ServiceCorrelationScheme) ToServiceCorrelationSchemePtrOutput() ServiceCorrelationSchemePtrOutput {
	return e.ToServiceCorrelationSchemePtrOutputWithContext(context.Background())
}

func (e ServiceCorrelationScheme) ToServiceCorrelationSchemePtrOutputWithContext(ctx context.Context) ServiceCorrelationSchemePtrOutput {
	return ServiceCorrelationScheme(e).ToServiceCorrelationSchemeOutputWithContext(ctx).ToServiceCorrelationSchemePtrOutputWithContext(ctx)
}

func (e ServiceCorrelationScheme) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceCorrelationScheme) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceCorrelationScheme) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceCorrelationScheme) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceCorrelationSchemeOutput struct{ *pulumi.OutputState }

func (ServiceCorrelationSchemeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCorrelationScheme)(nil)).Elem()
}

func (o ServiceCorrelationSchemeOutput) ToServiceCorrelationSchemeOutput() ServiceCorrelationSchemeOutput {
	return o
}

func (o ServiceCorrelationSchemeOutput) ToServiceCorrelationSchemeOutputWithContext(ctx context.Context) ServiceCorrelationSchemeOutput {
	return o
}

func (o ServiceCorrelationSchemeOutput) ToServiceCorrelationSchemePtrOutput() ServiceCorrelationSchemePtrOutput {
	return o.ToServiceCorrelationSchemePtrOutputWithContext(context.Background())
}

func (o ServiceCorrelationSchemeOutput) ToServiceCorrelationSchemePtrOutputWithContext(ctx context.Context) ServiceCorrelationSchemePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceCorrelationScheme) *ServiceCorrelationScheme {
		return &v
	}).(ServiceCorrelationSchemePtrOutput)
}

func (o ServiceCorrelationSchemeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceCorrelationSchemeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceCorrelationScheme) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceCorrelationSchemeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceCorrelationSchemeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceCorrelationScheme) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceCorrelationSchemePtrOutput struct{ *pulumi.OutputState }

func (ServiceCorrelationSchemePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCorrelationScheme)(nil)).Elem()
}

func (o ServiceCorrelationSchemePtrOutput) ToServiceCorrelationSchemePtrOutput() ServiceCorrelationSchemePtrOutput {
	return o
}

func (o ServiceCorrelationSchemePtrOutput) ToServiceCorrelationSchemePtrOutputWithContext(ctx context.Context) ServiceCorrelationSchemePtrOutput {
	return o
}

func (o ServiceCorrelationSchemePtrOutput) Elem() ServiceCorrelationSchemeOutput {
	return o.ApplyT(func(v *ServiceCorrelationScheme) ServiceCorrelationScheme {
		if v != nil {
			return *v
		}
		var ret ServiceCorrelationScheme
		return ret
	}).(ServiceCorrelationSchemeOutput)
}

func (o ServiceCorrelationSchemePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceCorrelationSchemePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceCorrelationScheme) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceCorrelationSchemeInput is an input type that accepts ServiceCorrelationSchemeArgs and ServiceCorrelationSchemeOutput values.
// You can construct a concrete instance of `ServiceCorrelationSchemeInput` via:
//
//          ServiceCorrelationSchemeArgs{...}
type ServiceCorrelationSchemeInput interface {
	pulumi.Input

	ToServiceCorrelationSchemeOutput() ServiceCorrelationSchemeOutput
	ToServiceCorrelationSchemeOutputWithContext(context.Context) ServiceCorrelationSchemeOutput
}

var serviceCorrelationSchemePtrType = reflect.TypeOf((**ServiceCorrelationScheme)(nil)).Elem()

type ServiceCorrelationSchemePtrInput interface {
	pulumi.Input

	ToServiceCorrelationSchemePtrOutput() ServiceCorrelationSchemePtrOutput
	ToServiceCorrelationSchemePtrOutputWithContext(context.Context) ServiceCorrelationSchemePtrOutput
}

type serviceCorrelationSchemePtr string

func ServiceCorrelationSchemePtr(v string) ServiceCorrelationSchemePtrInput {
	return (*serviceCorrelationSchemePtr)(&v)
}

func (*serviceCorrelationSchemePtr) ElementType() reflect.Type {
	return serviceCorrelationSchemePtrType
}

func (in *serviceCorrelationSchemePtr) ToServiceCorrelationSchemePtrOutput() ServiceCorrelationSchemePtrOutput {
	return pulumi.ToOutput(in).(ServiceCorrelationSchemePtrOutput)
}

func (in *serviceCorrelationSchemePtr) ToServiceCorrelationSchemePtrOutputWithContext(ctx context.Context) ServiceCorrelationSchemePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceCorrelationSchemePtrOutput)
}

type ServiceKind string

const (
	// Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
	ServiceKindInvalid = ServiceKind("Invalid")
	// Does not use Service Fabric to make its state highly available or reliable. The value is 1.
	ServiceKindStateless = ServiceKind("Stateless")
	// Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
	ServiceKindStateful = ServiceKind("Stateful")
)

func (ServiceKind) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKind)(nil)).Elem()
}

func (e ServiceKind) ToServiceKindOutput() ServiceKindOutput {
	return pulumi.ToOutput(e).(ServiceKindOutput)
}

func (e ServiceKind) ToServiceKindOutputWithContext(ctx context.Context) ServiceKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceKindOutput)
}

func (e ServiceKind) ToServiceKindPtrOutput() ServiceKindPtrOutput {
	return e.ToServiceKindPtrOutputWithContext(context.Background())
}

func (e ServiceKind) ToServiceKindPtrOutputWithContext(ctx context.Context) ServiceKindPtrOutput {
	return ServiceKind(e).ToServiceKindOutputWithContext(ctx).ToServiceKindPtrOutputWithContext(ctx)
}

func (e ServiceKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceKindOutput struct{ *pulumi.OutputState }

func (ServiceKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceKind)(nil)).Elem()
}

func (o ServiceKindOutput) ToServiceKindOutput() ServiceKindOutput {
	return o
}

func (o ServiceKindOutput) ToServiceKindOutputWithContext(ctx context.Context) ServiceKindOutput {
	return o
}

func (o ServiceKindOutput) ToServiceKindPtrOutput() ServiceKindPtrOutput {
	return o.ToServiceKindPtrOutputWithContext(context.Background())
}

func (o ServiceKindOutput) ToServiceKindPtrOutputWithContext(ctx context.Context) ServiceKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceKind) *ServiceKind {
		return &v
	}).(ServiceKindPtrOutput)
}

func (o ServiceKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceKindPtrOutput struct{ *pulumi.OutputState }

func (ServiceKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceKind)(nil)).Elem()
}

func (o ServiceKindPtrOutput) ToServiceKindPtrOutput() ServiceKindPtrOutput {
	return o
}

func (o ServiceKindPtrOutput) ToServiceKindPtrOutputWithContext(ctx context.Context) ServiceKindPtrOutput {
	return o
}

func (o ServiceKindPtrOutput) Elem() ServiceKindOutput {
	return o.ApplyT(func(v *ServiceKind) ServiceKind {
		if v != nil {
			return *v
		}
		var ret ServiceKind
		return ret
	}).(ServiceKindOutput)
}

func (o ServiceKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceKindInput is an input type that accepts ServiceKindArgs and ServiceKindOutput values.
// You can construct a concrete instance of `ServiceKindInput` via:
//
//          ServiceKindArgs{...}
type ServiceKindInput interface {
	pulumi.Input

	ToServiceKindOutput() ServiceKindOutput
	ToServiceKindOutputWithContext(context.Context) ServiceKindOutput
}

var serviceKindPtrType = reflect.TypeOf((**ServiceKind)(nil)).Elem()

type ServiceKindPtrInput interface {
	pulumi.Input

	ToServiceKindPtrOutput() ServiceKindPtrOutput
	ToServiceKindPtrOutputWithContext(context.Context) ServiceKindPtrOutput
}

type serviceKindPtr string

func ServiceKindPtr(v string) ServiceKindPtrInput {
	return (*serviceKindPtr)(&v)
}

func (*serviceKindPtr) ElementType() reflect.Type {
	return serviceKindPtrType
}

func (in *serviceKindPtr) ToServiceKindPtrOutput() ServiceKindPtrOutput {
	return pulumi.ToOutput(in).(ServiceKindPtrOutput)
}

func (in *serviceKindPtr) ToServiceKindPtrOutputWithContext(ctx context.Context) ServiceKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceKindPtrOutput)
}

type ServiceLoadMetricWeight string

const (
	// Disables resource balancing for this metric. This value is zero.
	ServiceLoadMetricWeightZero = ServiceLoadMetricWeight("Zero")
	// Specifies the metric weight of the service load as Low. The value is 1.
	ServiceLoadMetricWeightLow = ServiceLoadMetricWeight("Low")
	// Specifies the metric weight of the service load as Medium. The value is 2.
	ServiceLoadMetricWeightMedium = ServiceLoadMetricWeight("Medium")
	// Specifies the metric weight of the service load as High. The value is 3.
	ServiceLoadMetricWeightHigh = ServiceLoadMetricWeight("High")
)

func (ServiceLoadMetricWeight) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLoadMetricWeight)(nil)).Elem()
}

func (e ServiceLoadMetricWeight) ToServiceLoadMetricWeightOutput() ServiceLoadMetricWeightOutput {
	return pulumi.ToOutput(e).(ServiceLoadMetricWeightOutput)
}

func (e ServiceLoadMetricWeight) ToServiceLoadMetricWeightOutputWithContext(ctx context.Context) ServiceLoadMetricWeightOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceLoadMetricWeightOutput)
}

func (e ServiceLoadMetricWeight) ToServiceLoadMetricWeightPtrOutput() ServiceLoadMetricWeightPtrOutput {
	return e.ToServiceLoadMetricWeightPtrOutputWithContext(context.Background())
}

func (e ServiceLoadMetricWeight) ToServiceLoadMetricWeightPtrOutputWithContext(ctx context.Context) ServiceLoadMetricWeightPtrOutput {
	return ServiceLoadMetricWeight(e).ToServiceLoadMetricWeightOutputWithContext(ctx).ToServiceLoadMetricWeightPtrOutputWithContext(ctx)
}

func (e ServiceLoadMetricWeight) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceLoadMetricWeight) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceLoadMetricWeight) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceLoadMetricWeight) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceLoadMetricWeightOutput struct{ *pulumi.OutputState }

func (ServiceLoadMetricWeightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLoadMetricWeight)(nil)).Elem()
}

func (o ServiceLoadMetricWeightOutput) ToServiceLoadMetricWeightOutput() ServiceLoadMetricWeightOutput {
	return o
}

func (o ServiceLoadMetricWeightOutput) ToServiceLoadMetricWeightOutputWithContext(ctx context.Context) ServiceLoadMetricWeightOutput {
	return o
}

func (o ServiceLoadMetricWeightOutput) ToServiceLoadMetricWeightPtrOutput() ServiceLoadMetricWeightPtrOutput {
	return o.ToServiceLoadMetricWeightPtrOutputWithContext(context.Background())
}

func (o ServiceLoadMetricWeightOutput) ToServiceLoadMetricWeightPtrOutputWithContext(ctx context.Context) ServiceLoadMetricWeightPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLoadMetricWeight) *ServiceLoadMetricWeight {
		return &v
	}).(ServiceLoadMetricWeightPtrOutput)
}

func (o ServiceLoadMetricWeightOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceLoadMetricWeightOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceLoadMetricWeight) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceLoadMetricWeightOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceLoadMetricWeightOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceLoadMetricWeight) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceLoadMetricWeightPtrOutput struct{ *pulumi.OutputState }

func (ServiceLoadMetricWeightPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLoadMetricWeight)(nil)).Elem()
}

func (o ServiceLoadMetricWeightPtrOutput) ToServiceLoadMetricWeightPtrOutput() ServiceLoadMetricWeightPtrOutput {
	return o
}

func (o ServiceLoadMetricWeightPtrOutput) ToServiceLoadMetricWeightPtrOutputWithContext(ctx context.Context) ServiceLoadMetricWeightPtrOutput {
	return o
}

func (o ServiceLoadMetricWeightPtrOutput) Elem() ServiceLoadMetricWeightOutput {
	return o.ApplyT(func(v *ServiceLoadMetricWeight) ServiceLoadMetricWeight {
		if v != nil {
			return *v
		}
		var ret ServiceLoadMetricWeight
		return ret
	}).(ServiceLoadMetricWeightOutput)
}

func (o ServiceLoadMetricWeightPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceLoadMetricWeightPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceLoadMetricWeight) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceLoadMetricWeightInput is an input type that accepts ServiceLoadMetricWeightArgs and ServiceLoadMetricWeightOutput values.
// You can construct a concrete instance of `ServiceLoadMetricWeightInput` via:
//
//          ServiceLoadMetricWeightArgs{...}
type ServiceLoadMetricWeightInput interface {
	pulumi.Input

	ToServiceLoadMetricWeightOutput() ServiceLoadMetricWeightOutput
	ToServiceLoadMetricWeightOutputWithContext(context.Context) ServiceLoadMetricWeightOutput
}

var serviceLoadMetricWeightPtrType = reflect.TypeOf((**ServiceLoadMetricWeight)(nil)).Elem()

type ServiceLoadMetricWeightPtrInput interface {
	pulumi.Input

	ToServiceLoadMetricWeightPtrOutput() ServiceLoadMetricWeightPtrOutput
	ToServiceLoadMetricWeightPtrOutputWithContext(context.Context) ServiceLoadMetricWeightPtrOutput
}

type serviceLoadMetricWeightPtr string

func ServiceLoadMetricWeightPtr(v string) ServiceLoadMetricWeightPtrInput {
	return (*serviceLoadMetricWeightPtr)(&v)
}

func (*serviceLoadMetricWeightPtr) ElementType() reflect.Type {
	return serviceLoadMetricWeightPtrType
}

func (in *serviceLoadMetricWeightPtr) ToServiceLoadMetricWeightPtrOutput() ServiceLoadMetricWeightPtrOutput {
	return pulumi.ToOutput(in).(ServiceLoadMetricWeightPtrOutput)
}

func (in *serviceLoadMetricWeightPtr) ToServiceLoadMetricWeightPtrOutputWithContext(ctx context.Context) ServiceLoadMetricWeightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceLoadMetricWeightPtrOutput)
}

type ServicePlacementPolicyType string

const (
	// Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
	ServicePlacementPolicyTypeInvalid = ServicePlacementPolicyType("Invalid")
	// Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
	ServicePlacementPolicyTypeInvalidDomain = ServicePlacementPolicyType("InvalidDomain")
	// Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
	ServicePlacementPolicyTypeRequiredDomain = ServicePlacementPolicyType("RequiredDomain")
	// Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
	ServicePlacementPolicyTypePreferredPrimaryDomain = ServicePlacementPolicyType("PreferredPrimaryDomain")
	// Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
	ServicePlacementPolicyTypeRequiredDomainDistribution = ServicePlacementPolicyType("RequiredDomainDistribution")
	// Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
	ServicePlacementPolicyTypeNonPartiallyPlaceService = ServicePlacementPolicyType("NonPartiallyPlaceService")
)

func (ServicePlacementPolicyType) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePlacementPolicyType)(nil)).Elem()
}

func (e ServicePlacementPolicyType) ToServicePlacementPolicyTypeOutput() ServicePlacementPolicyTypeOutput {
	return pulumi.ToOutput(e).(ServicePlacementPolicyTypeOutput)
}

func (e ServicePlacementPolicyType) ToServicePlacementPolicyTypeOutputWithContext(ctx context.Context) ServicePlacementPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServicePlacementPolicyTypeOutput)
}

func (e ServicePlacementPolicyType) ToServicePlacementPolicyTypePtrOutput() ServicePlacementPolicyTypePtrOutput {
	return e.ToServicePlacementPolicyTypePtrOutputWithContext(context.Background())
}

func (e ServicePlacementPolicyType) ToServicePlacementPolicyTypePtrOutputWithContext(ctx context.Context) ServicePlacementPolicyTypePtrOutput {
	return ServicePlacementPolicyType(e).ToServicePlacementPolicyTypeOutputWithContext(ctx).ToServicePlacementPolicyTypePtrOutputWithContext(ctx)
}

func (e ServicePlacementPolicyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServicePlacementPolicyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServicePlacementPolicyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServicePlacementPolicyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServicePlacementPolicyTypeOutput struct{ *pulumi.OutputState }

func (ServicePlacementPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePlacementPolicyType)(nil)).Elem()
}

func (o ServicePlacementPolicyTypeOutput) ToServicePlacementPolicyTypeOutput() ServicePlacementPolicyTypeOutput {
	return o
}

func (o ServicePlacementPolicyTypeOutput) ToServicePlacementPolicyTypeOutputWithContext(ctx context.Context) ServicePlacementPolicyTypeOutput {
	return o
}

func (o ServicePlacementPolicyTypeOutput) ToServicePlacementPolicyTypePtrOutput() ServicePlacementPolicyTypePtrOutput {
	return o.ToServicePlacementPolicyTypePtrOutputWithContext(context.Background())
}

func (o ServicePlacementPolicyTypeOutput) ToServicePlacementPolicyTypePtrOutputWithContext(ctx context.Context) ServicePlacementPolicyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServicePlacementPolicyType) *ServicePlacementPolicyType {
		return &v
	}).(ServicePlacementPolicyTypePtrOutput)
}

func (o ServicePlacementPolicyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServicePlacementPolicyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServicePlacementPolicyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServicePlacementPolicyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServicePlacementPolicyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServicePlacementPolicyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServicePlacementPolicyTypePtrOutput struct{ *pulumi.OutputState }

func (ServicePlacementPolicyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePlacementPolicyType)(nil)).Elem()
}

func (o ServicePlacementPolicyTypePtrOutput) ToServicePlacementPolicyTypePtrOutput() ServicePlacementPolicyTypePtrOutput {
	return o
}

func (o ServicePlacementPolicyTypePtrOutput) ToServicePlacementPolicyTypePtrOutputWithContext(ctx context.Context) ServicePlacementPolicyTypePtrOutput {
	return o
}

func (o ServicePlacementPolicyTypePtrOutput) Elem() ServicePlacementPolicyTypeOutput {
	return o.ApplyT(func(v *ServicePlacementPolicyType) ServicePlacementPolicyType {
		if v != nil {
			return *v
		}
		var ret ServicePlacementPolicyType
		return ret
	}).(ServicePlacementPolicyTypeOutput)
}

func (o ServicePlacementPolicyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServicePlacementPolicyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServicePlacementPolicyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServicePlacementPolicyTypeInput is an input type that accepts ServicePlacementPolicyTypeArgs and ServicePlacementPolicyTypeOutput values.
// You can construct a concrete instance of `ServicePlacementPolicyTypeInput` via:
//
//          ServicePlacementPolicyTypeArgs{...}
type ServicePlacementPolicyTypeInput interface {
	pulumi.Input

	ToServicePlacementPolicyTypeOutput() ServicePlacementPolicyTypeOutput
	ToServicePlacementPolicyTypeOutputWithContext(context.Context) ServicePlacementPolicyTypeOutput
}

var servicePlacementPolicyTypePtrType = reflect.TypeOf((**ServicePlacementPolicyType)(nil)).Elem()

type ServicePlacementPolicyTypePtrInput interface {
	pulumi.Input

	ToServicePlacementPolicyTypePtrOutput() ServicePlacementPolicyTypePtrOutput
	ToServicePlacementPolicyTypePtrOutputWithContext(context.Context) ServicePlacementPolicyTypePtrOutput
}

type servicePlacementPolicyTypePtr string

func ServicePlacementPolicyTypePtr(v string) ServicePlacementPolicyTypePtrInput {
	return (*servicePlacementPolicyTypePtr)(&v)
}

func (*servicePlacementPolicyTypePtr) ElementType() reflect.Type {
	return servicePlacementPolicyTypePtrType
}

func (in *servicePlacementPolicyTypePtr) ToServicePlacementPolicyTypePtrOutput() ServicePlacementPolicyTypePtrOutput {
	return pulumi.ToOutput(in).(ServicePlacementPolicyTypePtrOutput)
}

func (in *servicePlacementPolicyTypePtr) ToServicePlacementPolicyTypePtrOutputWithContext(ctx context.Context) ServicePlacementPolicyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServicePlacementPolicyTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ArmServicePackageActivationModeOutput{})
	pulumi.RegisterOutputType(ArmServicePackageActivationModePtrOutput{})
	pulumi.RegisterOutputType(ArmUpgradeFailureActionOutput{})
	pulumi.RegisterOutputType(ArmUpgradeFailureActionPtrOutput{})
	pulumi.RegisterOutputType(MoveCostOutput{})
	pulumi.RegisterOutputType(MoveCostPtrOutput{})
	pulumi.RegisterOutputType(PartitionSchemeOutput{})
	pulumi.RegisterOutputType(PartitionSchemePtrOutput{})
	pulumi.RegisterOutputType(ServiceCorrelationSchemeOutput{})
	pulumi.RegisterOutputType(ServiceCorrelationSchemePtrOutput{})
	pulumi.RegisterOutputType(ServiceKindOutput{})
	pulumi.RegisterOutputType(ServiceKindPtrOutput{})
	pulumi.RegisterOutputType(ServiceLoadMetricWeightOutput{})
	pulumi.RegisterOutputType(ServiceLoadMetricWeightPtrOutput{})
	pulumi.RegisterOutputType(ServicePlacementPolicyTypeOutput{})
	pulumi.RegisterOutputType(ServicePlacementPolicyTypePtrOutput{})
}
