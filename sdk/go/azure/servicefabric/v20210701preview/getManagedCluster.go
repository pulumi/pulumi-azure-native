// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210701preview

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The manged cluster resource
func LookupManagedCluster(ctx *pulumi.Context, args *LookupManagedClusterArgs, opts ...pulumi.InvokeOption) (*LookupManagedClusterResult, error) {
	var rv LookupManagedClusterResult
	err := ctx.Invoke("azure-native:servicefabric/v20210701preview:getManagedCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupManagedClusterArgs struct {
	// The name of the cluster resource.
	ClusterName string `pulumi:"clusterName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The manged cluster resource
type LookupManagedClusterResult struct {
	// List of add-on features to enable on the cluster.
	AddonFeatures []string `pulumi:"addonFeatures"`
	// VM admin user password.
	AdminPassword *string `pulumi:"adminPassword"`
	// VM admin user name.
	AdminUserName string `pulumi:"adminUserName"`
	// Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false.
	AllowRdpAccess *bool `pulumi:"allowRdpAccess"`
	// The policy used to clean up unused versions.
	ApplicationTypeVersionsCleanupPolicy *ApplicationTypeVersionsCleanupPolicyResponse `pulumi:"applicationTypeVersionsCleanupPolicy"`
	// The AAD authentication settings of the cluster.
	AzureActiveDirectory *AzureActiveDirectoryResponse `pulumi:"azureActiveDirectory"`
	// The port used for client connections to the cluster.
	ClientConnectionPort *int `pulumi:"clientConnectionPort"`
	// Client certificates that are allowed to manage the cluster.
	Clients []ClientCertificateResponse `pulumi:"clients"`
	// List of thumbprints of the cluster certificates.
	ClusterCertificateThumbprints []string `pulumi:"clusterCertificateThumbprints"`
	// The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
	ClusterCodeVersion *string `pulumi:"clusterCodeVersion"`
	// A service generated unique identifier for the cluster resource.
	ClusterId string `pulumi:"clusterId"`
	// The current state of the cluster.
	ClusterState string `pulumi:"clusterState"`
	// Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.
	ClusterUpgradeCadence *string `pulumi:"clusterUpgradeCadence"`
	// The upgrade mode of the cluster when new Service Fabric runtime version is available.
	ClusterUpgradeMode *string `pulumi:"clusterUpgradeMode"`
	// The cluster dns name.
	DnsName string `pulumi:"dnsName"`
	// Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false.
	EnableAutoOSUpgrade *bool `pulumi:"enableAutoOSUpgrade"`
	// Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false.
	EnableIpv6 *bool `pulumi:"enableIpv6"`
	// Azure resource etag.
	Etag string `pulumi:"etag"`
	// The list of custom fabric settings to configure the cluster.
	FabricSettings []SettingsSectionDescriptionResponse `pulumi:"fabricSettings"`
	// The fully qualified domain name associated with the public load balancer of the cluster.
	Fqdn string `pulumi:"fqdn"`
	// The port used for HTTP connections to the cluster.
	HttpGatewayConnectionPort *int `pulumi:"httpGatewayConnectionPort"`
	// Azure resource identifier.
	Id string `pulumi:"id"`
	// The list of IP tags associated with the default public IP address of the cluster.
	IpTags []IPTagResponse `pulumi:"ipTags"`
	// The IPv4 address associated with the public load balancer of the cluster.
	Ipv4Address string `pulumi:"ipv4Address"`
	// Load balancing rules that are applied to the public load balancer of the cluster.
	LoadBalancingRules []LoadBalancingRuleResponse `pulumi:"loadBalancingRules"`
	// Azure resource location.
	Location string `pulumi:"location"`
	// Azure resource name.
	Name string `pulumi:"name"`
	// Custom Network Security Rules that are applied to the Virtual Network of the cluster.
	NetworkSecurityRules []NetworkSecurityRuleResponse `pulumi:"networkSecurityRules"`
	// The provisioning state of the managed cluster resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The sku of the managed cluster
	Sku *SkuResponse `pulumi:"sku"`
	// If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created.
	SubnetId *string `pulumi:"subnetId"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Azure resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Azure resource type.
	Type string `pulumi:"type"`
	// Indicates if the cluster has zone resiliency.
	ZonalResiliency *bool `pulumi:"zonalResiliency"`
}

// Defaults sets the appropriate defaults for LookupManagedClusterResult
func (val *LookupManagedClusterResult) Defaults() *LookupManagedClusterResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.ClientConnectionPort) {
		clientConnectionPort_ := 19000
		tmp.ClientConnectionPort = &clientConnectionPort_
	}
	if isZero(tmp.HttpGatewayConnectionPort) {
		httpGatewayConnectionPort_ := 19080
		tmp.HttpGatewayConnectionPort = &httpGatewayConnectionPort_
	}
	if isZero(tmp.ZonalResiliency) {
		zonalResiliency_ := false
		tmp.ZonalResiliency = &zonalResiliency_
	}
	return &tmp
}
