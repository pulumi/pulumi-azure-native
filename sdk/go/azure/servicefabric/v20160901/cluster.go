// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20160901

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The cluster resource
type Cluster struct {
	pulumi.CustomResourceState

	// The available cluster code version which the cluster can upgrade to, note that you must choose upgradeMode to manual to upgrade to
	AvailableClusterVersions ClusterVersionDetailsResponseArrayOutput `pulumi:"availableClusterVersions"`
	// The settings to enable AAD authentication on the cluster
	AzureActiveDirectory AzureActiveDirectoryResponsePtrOutput `pulumi:"azureActiveDirectory"`
	// This primary certificate will be used as cluster node to node security, SSL certificate for cluster management endpoint and default admin client
	Certificate CertificateDescriptionResponsePtrOutput `pulumi:"certificate"`
	//  List of client certificates to whitelist based on common names
	ClientCertificateCommonNames ClientCertificateCommonNameResponseArrayOutput `pulumi:"clientCertificateCommonNames"`
	// The client thumbprint details ,it is used for client access for cluster operation
	ClientCertificateThumbprints ClientCertificateThumbprintResponseArrayOutput `pulumi:"clientCertificateThumbprints"`
	// The ServiceFabric code version running in your cluster
	ClusterCodeVersion pulumi.StringPtrOutput `pulumi:"clusterCodeVersion"`
	// The endpoint for the cluster connecting to servicefabric resource provider
	ClusterEndpoint pulumi.StringOutput `pulumi:"clusterEndpoint"`
	// The unique identifier for the cluster resource
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// The state for the cluster
	ClusterState pulumi.StringOutput `pulumi:"clusterState"`
	// The storage diagnostics account configuration details
	DiagnosticsStorageAccountConfig DiagnosticsStorageAccountConfigResponsePtrOutput `pulumi:"diagnosticsStorageAccountConfig"`
	// List of custom fabric settings to configure the cluster.
	FabricSettings SettingsSectionDescriptionResponseArrayOutput `pulumi:"fabricSettings"`
	// Resource location.
	Location pulumi.StringOutput `pulumi:"location"`
	// The http management endpoint of the cluster
	ManagementEndpoint pulumi.StringOutput `pulumi:"managementEndpoint"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The list of node types that make up the cluster
	NodeTypes NodeTypeDescriptionResponseArrayOutput `pulumi:"nodeTypes"`
	// The provisioning state of the cluster resource
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Cluster reliability level indicates replica set size of system service
	ReliabilityLevel pulumi.StringPtrOutput `pulumi:"reliabilityLevel"`
	// The server certificate used by reverse proxy
	ReverseProxyCertificate CertificateDescriptionResponsePtrOutput `pulumi:"reverseProxyCertificate"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
	// The policy to use when upgrading the cluster.
	UpgradeDescription ClusterUpgradePolicyResponsePtrOutput `pulumi:"upgradeDescription"`
	// Cluster upgrade mode indicates if fabric upgrade is initiated automatically by the system or not
	UpgradeMode pulumi.StringPtrOutput `pulumi:"upgradeMode"`
	// The name of VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.
	VmImage pulumi.StringPtrOutput `pulumi:"vmImage"`
}

// NewCluster registers a new resource with the given unique name, arguments, and options.
func NewCluster(ctx *pulumi.Context,
	name string, args *ClusterArgs, opts ...pulumi.ResourceOption) (*Cluster, error) {
	if args == nil || args.ClusterName == nil {
		return nil, errors.New("missing required argument 'ClusterName'")
	}
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.ManagementEndpoint == nil {
		return nil, errors.New("missing required argument 'ManagementEndpoint'")
	}
	if args == nil || args.NodeTypes == nil {
		return nil, errors.New("missing required argument 'NodeTypes'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &ClusterArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:servicefabric/latest:Cluster"),
		},
		{
			Type: pulumi.String("azure-nextgen:servicefabric/v20170701preview:Cluster"),
		},
		{
			Type: pulumi.String("azure-nextgen:servicefabric/v20180201:Cluster"),
		},
		{
			Type: pulumi.String("azure-nextgen:servicefabric/v20190301:Cluster"),
		},
		{
			Type: pulumi.String("azure-nextgen:servicefabric/v20190301preview:Cluster"),
		},
		{
			Type: pulumi.String("azure-nextgen:servicefabric/v20190601preview:Cluster"),
		},
		{
			Type: pulumi.String("azure-nextgen:servicefabric/v20191101preview:Cluster"),
		},
		{
			Type: pulumi.String("azure-nextgen:servicefabric/v20200301:Cluster"),
		},
	})
	opts = append(opts, aliases)
	var resource Cluster
	err := ctx.RegisterResource("azure-nextgen:servicefabric/v20160901:Cluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCluster gets an existing Cluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterState, opts ...pulumi.ResourceOption) (*Cluster, error) {
	var resource Cluster
	err := ctx.ReadResource("azure-nextgen:servicefabric/v20160901:Cluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cluster resources.
type clusterState struct {
	// The available cluster code version which the cluster can upgrade to, note that you must choose upgradeMode to manual to upgrade to
	AvailableClusterVersions []ClusterVersionDetailsResponse `pulumi:"availableClusterVersions"`
	// The settings to enable AAD authentication on the cluster
	AzureActiveDirectory *AzureActiveDirectoryResponse `pulumi:"azureActiveDirectory"`
	// This primary certificate will be used as cluster node to node security, SSL certificate for cluster management endpoint and default admin client
	Certificate *CertificateDescriptionResponse `pulumi:"certificate"`
	//  List of client certificates to whitelist based on common names
	ClientCertificateCommonNames []ClientCertificateCommonNameResponse `pulumi:"clientCertificateCommonNames"`
	// The client thumbprint details ,it is used for client access for cluster operation
	ClientCertificateThumbprints []ClientCertificateThumbprintResponse `pulumi:"clientCertificateThumbprints"`
	// The ServiceFabric code version running in your cluster
	ClusterCodeVersion *string `pulumi:"clusterCodeVersion"`
	// The endpoint for the cluster connecting to servicefabric resource provider
	ClusterEndpoint *string `pulumi:"clusterEndpoint"`
	// The unique identifier for the cluster resource
	ClusterId *string `pulumi:"clusterId"`
	// The state for the cluster
	ClusterState *string `pulumi:"clusterState"`
	// The storage diagnostics account configuration details
	DiagnosticsStorageAccountConfig *DiagnosticsStorageAccountConfigResponse `pulumi:"diagnosticsStorageAccountConfig"`
	// List of custom fabric settings to configure the cluster.
	FabricSettings []SettingsSectionDescriptionResponse `pulumi:"fabricSettings"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The http management endpoint of the cluster
	ManagementEndpoint *string `pulumi:"managementEndpoint"`
	// Resource name.
	Name *string `pulumi:"name"`
	// The list of node types that make up the cluster
	NodeTypes []NodeTypeDescriptionResponse `pulumi:"nodeTypes"`
	// The provisioning state of the cluster resource
	ProvisioningState *string `pulumi:"provisioningState"`
	// Cluster reliability level indicates replica set size of system service
	ReliabilityLevel *string `pulumi:"reliabilityLevel"`
	// The server certificate used by reverse proxy
	ReverseProxyCertificate *CertificateDescriptionResponse `pulumi:"reverseProxyCertificate"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type *string `pulumi:"type"`
	// The policy to use when upgrading the cluster.
	UpgradeDescription *ClusterUpgradePolicyResponse `pulumi:"upgradeDescription"`
	// Cluster upgrade mode indicates if fabric upgrade is initiated automatically by the system or not
	UpgradeMode *string `pulumi:"upgradeMode"`
	// The name of VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.
	VmImage *string `pulumi:"vmImage"`
}

type ClusterState struct {
	// The available cluster code version which the cluster can upgrade to, note that you must choose upgradeMode to manual to upgrade to
	AvailableClusterVersions ClusterVersionDetailsResponseArrayInput
	// The settings to enable AAD authentication on the cluster
	AzureActiveDirectory AzureActiveDirectoryResponsePtrInput
	// This primary certificate will be used as cluster node to node security, SSL certificate for cluster management endpoint and default admin client
	Certificate CertificateDescriptionResponsePtrInput
	//  List of client certificates to whitelist based on common names
	ClientCertificateCommonNames ClientCertificateCommonNameResponseArrayInput
	// The client thumbprint details ,it is used for client access for cluster operation
	ClientCertificateThumbprints ClientCertificateThumbprintResponseArrayInput
	// The ServiceFabric code version running in your cluster
	ClusterCodeVersion pulumi.StringPtrInput
	// The endpoint for the cluster connecting to servicefabric resource provider
	ClusterEndpoint pulumi.StringPtrInput
	// The unique identifier for the cluster resource
	ClusterId pulumi.StringPtrInput
	// The state for the cluster
	ClusterState pulumi.StringPtrInput
	// The storage diagnostics account configuration details
	DiagnosticsStorageAccountConfig DiagnosticsStorageAccountConfigResponsePtrInput
	// List of custom fabric settings to configure the cluster.
	FabricSettings SettingsSectionDescriptionResponseArrayInput
	// Resource location.
	Location pulumi.StringPtrInput
	// The http management endpoint of the cluster
	ManagementEndpoint pulumi.StringPtrInput
	// Resource name.
	Name pulumi.StringPtrInput
	// The list of node types that make up the cluster
	NodeTypes NodeTypeDescriptionResponseArrayInput
	// The provisioning state of the cluster resource
	ProvisioningState pulumi.StringPtrInput
	// Cluster reliability level indicates replica set size of system service
	ReliabilityLevel pulumi.StringPtrInput
	// The server certificate used by reverse proxy
	ReverseProxyCertificate CertificateDescriptionResponsePtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Resource type.
	Type pulumi.StringPtrInput
	// The policy to use when upgrading the cluster.
	UpgradeDescription ClusterUpgradePolicyResponsePtrInput
	// Cluster upgrade mode indicates if fabric upgrade is initiated automatically by the system or not
	UpgradeMode pulumi.StringPtrInput
	// The name of VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.
	VmImage pulumi.StringPtrInput
}

func (ClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterState)(nil)).Elem()
}

type clusterArgs struct {
	// The settings to enable AAD authentication on the cluster
	AzureActiveDirectory *AzureActiveDirectory `pulumi:"azureActiveDirectory"`
	// This primary certificate will be used as cluster node to node security, SSL certificate for cluster management endpoint and default admin client
	Certificate *CertificateDescription `pulumi:"certificate"`
	//  List of client certificates to whitelist based on common names
	ClientCertificateCommonNames []ClientCertificateCommonName `pulumi:"clientCertificateCommonNames"`
	// The client thumbprint details ,it is used for client access for cluster operation
	ClientCertificateThumbprints []ClientCertificateThumbprint `pulumi:"clientCertificateThumbprints"`
	// The ServiceFabric code version running in your cluster
	ClusterCodeVersion *string `pulumi:"clusterCodeVersion"`
	// The name of the cluster resource
	ClusterName string `pulumi:"clusterName"`
	// The storage diagnostics account configuration details
	DiagnosticsStorageAccountConfig *DiagnosticsStorageAccountConfig `pulumi:"diagnosticsStorageAccountConfig"`
	// List of custom fabric settings to configure the cluster.
	FabricSettings []SettingsSectionDescription `pulumi:"fabricSettings"`
	// Resource location.
	Location string `pulumi:"location"`
	// The http management endpoint of the cluster
	ManagementEndpoint string `pulumi:"managementEndpoint"`
	// The list of node types that make up the cluster
	NodeTypes []NodeTypeDescription `pulumi:"nodeTypes"`
	// Cluster reliability level indicates replica set size of system service
	ReliabilityLevel *string `pulumi:"reliabilityLevel"`
	// The name of the resource group to which the resource belongs or get created
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The server certificate used by reverse proxy
	ReverseProxyCertificate *CertificateDescription `pulumi:"reverseProxyCertificate"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The policy to use when upgrading the cluster.
	UpgradeDescription *ClusterUpgradePolicy `pulumi:"upgradeDescription"`
	// Cluster upgrade mode indicates if fabric upgrade is initiated automatically by the system or not
	UpgradeMode *string `pulumi:"upgradeMode"`
	// The name of VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.
	VmImage *string `pulumi:"vmImage"`
}

// The set of arguments for constructing a Cluster resource.
type ClusterArgs struct {
	// The settings to enable AAD authentication on the cluster
	AzureActiveDirectory AzureActiveDirectoryPtrInput
	// This primary certificate will be used as cluster node to node security, SSL certificate for cluster management endpoint and default admin client
	Certificate CertificateDescriptionPtrInput
	//  List of client certificates to whitelist based on common names
	ClientCertificateCommonNames ClientCertificateCommonNameArrayInput
	// The client thumbprint details ,it is used for client access for cluster operation
	ClientCertificateThumbprints ClientCertificateThumbprintArrayInput
	// The ServiceFabric code version running in your cluster
	ClusterCodeVersion pulumi.StringPtrInput
	// The name of the cluster resource
	ClusterName pulumi.StringInput
	// The storage diagnostics account configuration details
	DiagnosticsStorageAccountConfig DiagnosticsStorageAccountConfigPtrInput
	// List of custom fabric settings to configure the cluster.
	FabricSettings SettingsSectionDescriptionArrayInput
	// Resource location.
	Location pulumi.StringInput
	// The http management endpoint of the cluster
	ManagementEndpoint pulumi.StringInput
	// The list of node types that make up the cluster
	NodeTypes NodeTypeDescriptionArrayInput
	// Cluster reliability level indicates replica set size of system service
	ReliabilityLevel pulumi.StringPtrInput
	// The name of the resource group to which the resource belongs or get created
	ResourceGroupName pulumi.StringInput
	// The server certificate used by reverse proxy
	ReverseProxyCertificate CertificateDescriptionPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The policy to use when upgrading the cluster.
	UpgradeDescription ClusterUpgradePolicyPtrInput
	// Cluster upgrade mode indicates if fabric upgrade is initiated automatically by the system or not
	UpgradeMode pulumi.StringPtrInput
	// The name of VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.
	VmImage pulumi.StringPtrInput
}

func (ClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterArgs)(nil)).Elem()
}
