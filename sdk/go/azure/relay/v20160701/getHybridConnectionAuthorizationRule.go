// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20160701

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupHybridConnectionAuthorizationRule(ctx *pulumi.Context, args *LookupHybridConnectionAuthorizationRuleArgs, opts ...pulumi.InvokeOption) (*LookupHybridConnectionAuthorizationRuleResult, error) {
	var rv LookupHybridConnectionAuthorizationRuleResult
	err := ctx.Invoke("azure-nextgen:relay/v20160701:getHybridConnectionAuthorizationRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupHybridConnectionAuthorizationRuleArgs struct {
	// The authorizationRule name.
	AuthorizationRuleName string `pulumi:"authorizationRuleName"`
	// The hybrid connection name.
	HybridConnectionName string `pulumi:"hybridConnectionName"`
	// The Namespace Name
	NamespaceName string `pulumi:"namespaceName"`
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Description of a Namespace AuthorizationRules.
type LookupHybridConnectionAuthorizationRuleResult struct {
	// Resource name
	Name string `pulumi:"name"`
	// The rights associated with the rule.
	Rights []string `pulumi:"rights"`
	// Resource type
	Type string `pulumi:"type"`
}
