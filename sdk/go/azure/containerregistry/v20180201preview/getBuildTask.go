// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The build task that has the resource properties and all build items. The build task will have all information to schedule a build against it.
func LookupBuildTask(ctx *pulumi.Context, args *LookupBuildTaskArgs, opts ...pulumi.InvokeOption) (*LookupBuildTaskResult, error) {
	var rv LookupBuildTaskResult
	err := ctx.Invoke("azure-native:containerregistry/v20180201preview:getBuildTask", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupBuildTaskArgs struct {
	// The name of the container registry build task.
	BuildTaskName string `pulumi:"buildTaskName"`
	// The name of the container registry.
	RegistryName string `pulumi:"registryName"`
	// The name of the resource group to which the container registry belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The build task that has the resource properties and all build items. The build task will have all information to schedule a build against it.
type LookupBuildTaskResult struct {
	// The alternative updatable name for a build task.
	Alias string `pulumi:"alias"`
	// The creation date of build task.
	CreationDate string `pulumi:"creationDate"`
	// The resource ID.
	Id string `pulumi:"id"`
	// The location of the resource. This cannot be changed after the resource is created.
	Location string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The platform properties against which the build has to happen.
	Platform PlatformPropertiesResponse `pulumi:"platform"`
	// The provisioning state of the build task.
	ProvisioningState string `pulumi:"provisioningState"`
	// The properties that describes the source(code) for the build task.
	SourceRepository SourceRepositoryPropertiesResponse `pulumi:"sourceRepository"`
	// The current status of build task.
	Status *string `pulumi:"status"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// Build timeout in seconds.
	Timeout *int `pulumi:"timeout"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupBuildTaskResult
func (val *LookupBuildTaskResult) Defaults() *LookupBuildTaskResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.SourceRepository = *tmp.SourceRepository.Defaults()

	if isZero(tmp.Timeout) {
		timeout_ := 3600
		tmp.Timeout = &timeout_
	}
	return &tmp
}

func LookupBuildTaskOutput(ctx *pulumi.Context, args LookupBuildTaskOutputArgs, opts ...pulumi.InvokeOption) LookupBuildTaskResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBuildTaskResult, error) {
			args := v.(LookupBuildTaskArgs)
			r, err := LookupBuildTask(ctx, &args, opts...)
			var s LookupBuildTaskResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBuildTaskResultOutput)
}

type LookupBuildTaskOutputArgs struct {
	// The name of the container registry build task.
	BuildTaskName pulumi.StringInput `pulumi:"buildTaskName"`
	// The name of the container registry.
	RegistryName pulumi.StringInput `pulumi:"registryName"`
	// The name of the resource group to which the container registry belongs.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupBuildTaskOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBuildTaskArgs)(nil)).Elem()
}

// The build task that has the resource properties and all build items. The build task will have all information to schedule a build against it.
type LookupBuildTaskResultOutput struct{ *pulumi.OutputState }

func (LookupBuildTaskResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBuildTaskResult)(nil)).Elem()
}

func (o LookupBuildTaskResultOutput) ToLookupBuildTaskResultOutput() LookupBuildTaskResultOutput {
	return o
}

func (o LookupBuildTaskResultOutput) ToLookupBuildTaskResultOutputWithContext(ctx context.Context) LookupBuildTaskResultOutput {
	return o
}

// The alternative updatable name for a build task.
func (o LookupBuildTaskResultOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildTaskResult) string { return v.Alias }).(pulumi.StringOutput)
}

// The creation date of build task.
func (o LookupBuildTaskResultOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildTaskResult) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The resource ID.
func (o LookupBuildTaskResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildTaskResult) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the resource. This cannot be changed after the resource is created.
func (o LookupBuildTaskResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildTaskResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource.
func (o LookupBuildTaskResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildTaskResult) string { return v.Name }).(pulumi.StringOutput)
}

// The platform properties against which the build has to happen.
func (o LookupBuildTaskResultOutput) Platform() PlatformPropertiesResponseOutput {
	return o.ApplyT(func(v LookupBuildTaskResult) PlatformPropertiesResponse { return v.Platform }).(PlatformPropertiesResponseOutput)
}

// The provisioning state of the build task.
func (o LookupBuildTaskResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildTaskResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The properties that describes the source(code) for the build task.
func (o LookupBuildTaskResultOutput) SourceRepository() SourceRepositoryPropertiesResponseOutput {
	return o.ApplyT(func(v LookupBuildTaskResult) SourceRepositoryPropertiesResponse { return v.SourceRepository }).(SourceRepositoryPropertiesResponseOutput)
}

// The current status of build task.
func (o LookupBuildTaskResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBuildTaskResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The tags of the resource.
func (o LookupBuildTaskResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBuildTaskResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Build timeout in seconds.
func (o LookupBuildTaskResultOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupBuildTaskResult) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The type of the resource.
func (o LookupBuildTaskResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildTaskResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBuildTaskResultOutput{})
}
