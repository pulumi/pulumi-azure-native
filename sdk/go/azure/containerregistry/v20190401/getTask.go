// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190401

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The task that has the ARM resource and task properties.
// The task will have all information to schedule a run against it.
func LookupTask(ctx *pulumi.Context, args *LookupTaskArgs, opts ...pulumi.InvokeOption) (*LookupTaskResult, error) {
	var rv LookupTaskResult
	err := ctx.Invoke("azure-native:containerregistry/v20190401:getTask", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupTaskArgs struct {
	// The name of the container registry.
	RegistryName string `pulumi:"registryName"`
	// The name of the resource group to which the container registry belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the container registry task.
	TaskName string `pulumi:"taskName"`
}

// The task that has the ARM resource and task properties.
// The task will have all information to schedule a run against it.
type LookupTaskResult struct {
	// The machine configuration of the run agent.
	AgentConfiguration *AgentPropertiesResponse `pulumi:"agentConfiguration"`
	// The creation date of task.
	CreationDate string `pulumi:"creationDate"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials *CredentialsResponse `pulumi:"credentials"`
	// The resource ID.
	Id string `pulumi:"id"`
	// Identity for the resource.
	Identity *IdentityPropertiesResponse `pulumi:"identity"`
	// The location of the resource. This cannot be changed after the resource is created.
	Location string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesResponse `pulumi:"platform"`
	// The provisioning state of the task.
	ProvisioningState string `pulumi:"provisioningState"`
	// The current status of task.
	Status *string `pulumi:"status"`
	// The properties of a task step.
	Step interface{} `pulumi:"step"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// Run timeout in seconds.
	Timeout *int `pulumi:"timeout"`
	// The properties that describe all triggers for the task.
	Trigger *TriggerPropertiesResponse `pulumi:"trigger"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupTaskResult
func (val *LookupTaskResult) Defaults() *LookupTaskResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Timeout) {
		timeout_ := 3600
		tmp.Timeout = &timeout_
	}
	tmp.Trigger = tmp.Trigger.Defaults()

	return &tmp
}

func LookupTaskOutput(ctx *pulumi.Context, args LookupTaskOutputArgs, opts ...pulumi.InvokeOption) LookupTaskResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTaskResult, error) {
			args := v.(LookupTaskArgs)
			r, err := LookupTask(ctx, &args, opts...)
			var s LookupTaskResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTaskResultOutput)
}

type LookupTaskOutputArgs struct {
	// The name of the container registry.
	RegistryName pulumi.StringInput `pulumi:"registryName"`
	// The name of the resource group to which the container registry belongs.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the container registry task.
	TaskName pulumi.StringInput `pulumi:"taskName"`
}

func (LookupTaskOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTaskArgs)(nil)).Elem()
}

// The task that has the ARM resource and task properties.
// The task will have all information to schedule a run against it.
type LookupTaskResultOutput struct{ *pulumi.OutputState }

func (LookupTaskResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTaskResult)(nil)).Elem()
}

func (o LookupTaskResultOutput) ToLookupTaskResultOutput() LookupTaskResultOutput {
	return o
}

func (o LookupTaskResultOutput) ToLookupTaskResultOutputWithContext(ctx context.Context) LookupTaskResultOutput {
	return o
}

// The machine configuration of the run agent.
func (o LookupTaskResultOutput) AgentConfiguration() AgentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupTaskResult) *AgentPropertiesResponse { return v.AgentConfiguration }).(AgentPropertiesResponsePtrOutput)
}

// The creation date of task.
func (o LookupTaskResultOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTaskResult) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The properties that describes a set of credentials that will be used when this run is invoked.
func (o LookupTaskResultOutput) Credentials() CredentialsResponsePtrOutput {
	return o.ApplyT(func(v LookupTaskResult) *CredentialsResponse { return v.Credentials }).(CredentialsResponsePtrOutput)
}

// The resource ID.
func (o LookupTaskResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTaskResult) string { return v.Id }).(pulumi.StringOutput)
}

// Identity for the resource.
func (o LookupTaskResultOutput) Identity() IdentityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupTaskResult) *IdentityPropertiesResponse { return v.Identity }).(IdentityPropertiesResponsePtrOutput)
}

// The location of the resource. This cannot be changed after the resource is created.
func (o LookupTaskResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTaskResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource.
func (o LookupTaskResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTaskResult) string { return v.Name }).(pulumi.StringOutput)
}

// The platform properties against which the run has to happen.
func (o LookupTaskResultOutput) Platform() PlatformPropertiesResponseOutput {
	return o.ApplyT(func(v LookupTaskResult) PlatformPropertiesResponse { return v.Platform }).(PlatformPropertiesResponseOutput)
}

// The provisioning state of the task.
func (o LookupTaskResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTaskResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The current status of task.
func (o LookupTaskResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTaskResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The properties of a task step.
func (o LookupTaskResultOutput) Step() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupTaskResult) interface{} { return v.Step }).(pulumi.AnyOutput)
}

// The tags of the resource.
func (o LookupTaskResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupTaskResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Run timeout in seconds.
func (o LookupTaskResultOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupTaskResult) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The properties that describe all triggers for the task.
func (o LookupTaskResultOutput) Trigger() TriggerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupTaskResult) *TriggerPropertiesResponse { return v.Trigger }).(TriggerPropertiesResponsePtrOutput)
}

// The type of the resource.
func (o LookupTaskResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTaskResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTaskResultOutput{})
}
