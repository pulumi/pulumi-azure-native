// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The agent that initiated the event. For most situations, this could be from the authorization context of the request.
type ActorInvokeResponse struct {
	// The subject or username associated with the request context that generated the event.
	Name *string `pulumi:"name"`
}

// ActorInvokeResponseInput is an input type that accepts ActorInvokeResponseArgs and ActorInvokeResponseOutput values.
// You can construct a concrete instance of `ActorInvokeResponseInput` via:
//
//          ActorInvokeResponseArgs{...}
type ActorInvokeResponseInput interface {
	pulumi.Input

	ToActorInvokeResponseOutput() ActorInvokeResponseOutput
	ToActorInvokeResponseOutputWithContext(context.Context) ActorInvokeResponseOutput
}

// The agent that initiated the event. For most situations, this could be from the authorization context of the request.
type ActorInvokeResponseArgs struct {
	// The subject or username associated with the request context that generated the event.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ActorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActorInvokeResponse)(nil)).Elem()
}

func (i ActorInvokeResponseArgs) ToActorInvokeResponseOutput() ActorInvokeResponseOutput {
	return i.ToActorInvokeResponseOutputWithContext(context.Background())
}

func (i ActorInvokeResponseArgs) ToActorInvokeResponseOutputWithContext(ctx context.Context) ActorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActorInvokeResponseOutput)
}

func (i ActorInvokeResponseArgs) ToActorInvokeResponsePtrOutput() ActorInvokeResponsePtrOutput {
	return i.ToActorInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ActorInvokeResponseArgs) ToActorInvokeResponsePtrOutputWithContext(ctx context.Context) ActorInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActorInvokeResponseOutput).ToActorInvokeResponsePtrOutputWithContext(ctx)
}

// ActorInvokeResponsePtrInput is an input type that accepts ActorInvokeResponseArgs, ActorInvokeResponsePtr and ActorInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ActorInvokeResponsePtrInput` via:
//
//          ActorInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ActorInvokeResponsePtrInput interface {
	pulumi.Input

	ToActorInvokeResponsePtrOutput() ActorInvokeResponsePtrOutput
	ToActorInvokeResponsePtrOutputWithContext(context.Context) ActorInvokeResponsePtrOutput
}

type actorInvokeResponsePtrType ActorInvokeResponseArgs

func ActorInvokeResponsePtr(v *ActorInvokeResponseArgs) ActorInvokeResponsePtrInput {
	return (*actorInvokeResponsePtrType)(v)
}

func (*actorInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActorInvokeResponse)(nil)).Elem()
}

func (i *actorInvokeResponsePtrType) ToActorInvokeResponsePtrOutput() ActorInvokeResponsePtrOutput {
	return i.ToActorInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *actorInvokeResponsePtrType) ToActorInvokeResponsePtrOutputWithContext(ctx context.Context) ActorInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActorInvokeResponsePtrOutput)
}

// The agent that initiated the event. For most situations, this could be from the authorization context of the request.
type ActorInvokeResponseOutput struct{ *pulumi.OutputState }

func (ActorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActorInvokeResponse)(nil)).Elem()
}

func (o ActorInvokeResponseOutput) ToActorInvokeResponseOutput() ActorInvokeResponseOutput {
	return o
}

func (o ActorInvokeResponseOutput) ToActorInvokeResponseOutputWithContext(ctx context.Context) ActorInvokeResponseOutput {
	return o
}

func (o ActorInvokeResponseOutput) ToActorInvokeResponsePtrOutput() ActorInvokeResponsePtrOutput {
	return o.ToActorInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ActorInvokeResponseOutput) ToActorInvokeResponsePtrOutputWithContext(ctx context.Context) ActorInvokeResponsePtrOutput {
	return o.ApplyT(func(v ActorInvokeResponse) *ActorInvokeResponse {
		return &v
	}).(ActorInvokeResponsePtrOutput)
}

// The subject or username associated with the request context that generated the event.
func (o ActorInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActorInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ActorInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ActorInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActorInvokeResponse)(nil)).Elem()
}

func (o ActorInvokeResponsePtrOutput) ToActorInvokeResponsePtrOutput() ActorInvokeResponsePtrOutput {
	return o
}

func (o ActorInvokeResponsePtrOutput) ToActorInvokeResponsePtrOutputWithContext(ctx context.Context) ActorInvokeResponsePtrOutput {
	return o
}

func (o ActorInvokeResponsePtrOutput) Elem() ActorInvokeResponseOutput {
	return o.ApplyT(func(v *ActorInvokeResponse) ActorInvokeResponse { return *v }).(ActorInvokeResponseOutput)
}

// The subject or username associated with the request context that generated the event.
func (o ActorInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActorInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The properties that determine the run agent configuration.
type AgentProperties struct {
	// The CPU configuration in terms of number of cores required for the run.
	Cpu *int `pulumi:"cpu"`
}

// AgentPropertiesInput is an input type that accepts AgentPropertiesArgs and AgentPropertiesOutput values.
// You can construct a concrete instance of `AgentPropertiesInput` via:
//
//          AgentPropertiesArgs{...}
type AgentPropertiesInput interface {
	pulumi.Input

	ToAgentPropertiesOutput() AgentPropertiesOutput
	ToAgentPropertiesOutputWithContext(context.Context) AgentPropertiesOutput
}

// The properties that determine the run agent configuration.
type AgentPropertiesArgs struct {
	// The CPU configuration in terms of number of cores required for the run.
	Cpu pulumi.IntPtrInput `pulumi:"cpu"`
}

func (AgentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentProperties)(nil)).Elem()
}

func (i AgentPropertiesArgs) ToAgentPropertiesOutput() AgentPropertiesOutput {
	return i.ToAgentPropertiesOutputWithContext(context.Background())
}

func (i AgentPropertiesArgs) ToAgentPropertiesOutputWithContext(ctx context.Context) AgentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesOutput)
}

func (i AgentPropertiesArgs) ToAgentPropertiesPtrOutput() AgentPropertiesPtrOutput {
	return i.ToAgentPropertiesPtrOutputWithContext(context.Background())
}

func (i AgentPropertiesArgs) ToAgentPropertiesPtrOutputWithContext(ctx context.Context) AgentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesOutput).ToAgentPropertiesPtrOutputWithContext(ctx)
}

// AgentPropertiesPtrInput is an input type that accepts AgentPropertiesArgs, AgentPropertiesPtr and AgentPropertiesPtrOutput values.
// You can construct a concrete instance of `AgentPropertiesPtrInput` via:
//
//          AgentPropertiesArgs{...}
//
//  or:
//
//          nil
type AgentPropertiesPtrInput interface {
	pulumi.Input

	ToAgentPropertiesPtrOutput() AgentPropertiesPtrOutput
	ToAgentPropertiesPtrOutputWithContext(context.Context) AgentPropertiesPtrOutput
}

type agentPropertiesPtrType AgentPropertiesArgs

func AgentPropertiesPtr(v *AgentPropertiesArgs) AgentPropertiesPtrInput {
	return (*agentPropertiesPtrType)(v)
}

func (*agentPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentProperties)(nil)).Elem()
}

func (i *agentPropertiesPtrType) ToAgentPropertiesPtrOutput() AgentPropertiesPtrOutput {
	return i.ToAgentPropertiesPtrOutputWithContext(context.Background())
}

func (i *agentPropertiesPtrType) ToAgentPropertiesPtrOutputWithContext(ctx context.Context) AgentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesPtrOutput)
}

// The properties that determine the run agent configuration.
type AgentPropertiesOutput struct{ *pulumi.OutputState }

func (AgentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentProperties)(nil)).Elem()
}

func (o AgentPropertiesOutput) ToAgentPropertiesOutput() AgentPropertiesOutput {
	return o
}

func (o AgentPropertiesOutput) ToAgentPropertiesOutputWithContext(ctx context.Context) AgentPropertiesOutput {
	return o
}

func (o AgentPropertiesOutput) ToAgentPropertiesPtrOutput() AgentPropertiesPtrOutput {
	return o.ToAgentPropertiesPtrOutputWithContext(context.Background())
}

func (o AgentPropertiesOutput) ToAgentPropertiesPtrOutputWithContext(ctx context.Context) AgentPropertiesPtrOutput {
	return o.ApplyT(func(v AgentProperties) *AgentProperties {
		return &v
	}).(AgentPropertiesPtrOutput)
}

// The CPU configuration in terms of number of cores required for the run.
func (o AgentPropertiesOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentProperties) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

type AgentPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AgentPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentProperties)(nil)).Elem()
}

func (o AgentPropertiesPtrOutput) ToAgentPropertiesPtrOutput() AgentPropertiesPtrOutput {
	return o
}

func (o AgentPropertiesPtrOutput) ToAgentPropertiesPtrOutputWithContext(ctx context.Context) AgentPropertiesPtrOutput {
	return o
}

func (o AgentPropertiesPtrOutput) Elem() AgentPropertiesOutput {
	return o.ApplyT(func(v *AgentProperties) AgentProperties { return *v }).(AgentPropertiesOutput)
}

// The CPU configuration in terms of number of cores required for the run.
func (o AgentPropertiesPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentProperties) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

// The properties that determine the run agent configuration.
type AgentPropertiesInvokeResponse struct {
	// The CPU configuration in terms of number of cores required for the run.
	Cpu *int `pulumi:"cpu"`
}

// AgentPropertiesInvokeResponseInput is an input type that accepts AgentPropertiesInvokeResponseArgs and AgentPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `AgentPropertiesInvokeResponseInput` via:
//
//          AgentPropertiesInvokeResponseArgs{...}
type AgentPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToAgentPropertiesInvokeResponseOutput() AgentPropertiesInvokeResponseOutput
	ToAgentPropertiesInvokeResponseOutputWithContext(context.Context) AgentPropertiesInvokeResponseOutput
}

// The properties that determine the run agent configuration.
type AgentPropertiesInvokeResponseArgs struct {
	// The CPU configuration in terms of number of cores required for the run.
	Cpu pulumi.IntPtrInput `pulumi:"cpu"`
}

func (AgentPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPropertiesInvokeResponse)(nil)).Elem()
}

func (i AgentPropertiesInvokeResponseArgs) ToAgentPropertiesInvokeResponseOutput() AgentPropertiesInvokeResponseOutput {
	return i.ToAgentPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i AgentPropertiesInvokeResponseArgs) ToAgentPropertiesInvokeResponseOutputWithContext(ctx context.Context) AgentPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesInvokeResponseOutput)
}

// The properties that determine the run agent configuration.
type AgentPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (AgentPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPropertiesInvokeResponse)(nil)).Elem()
}

func (o AgentPropertiesInvokeResponseOutput) ToAgentPropertiesInvokeResponseOutput() AgentPropertiesInvokeResponseOutput {
	return o
}

func (o AgentPropertiesInvokeResponseOutput) ToAgentPropertiesInvokeResponseOutputWithContext(ctx context.Context) AgentPropertiesInvokeResponseOutput {
	return o
}

// The CPU configuration in terms of number of cores required for the run.
func (o AgentPropertiesInvokeResponseOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentPropertiesInvokeResponse) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

// The properties that determine the run agent configuration.
type AgentPropertiesResponse struct {
	// The CPU configuration in terms of number of cores required for the run.
	Cpu *int `pulumi:"cpu"`
}

// AgentPropertiesResponseInput is an input type that accepts AgentPropertiesResponseArgs and AgentPropertiesResponseOutput values.
// You can construct a concrete instance of `AgentPropertiesResponseInput` via:
//
//          AgentPropertiesResponseArgs{...}
type AgentPropertiesResponseInput interface {
	pulumi.Input

	ToAgentPropertiesResponseOutput() AgentPropertiesResponseOutput
	ToAgentPropertiesResponseOutputWithContext(context.Context) AgentPropertiesResponseOutput
}

// The properties that determine the run agent configuration.
type AgentPropertiesResponseArgs struct {
	// The CPU configuration in terms of number of cores required for the run.
	Cpu pulumi.IntPtrInput `pulumi:"cpu"`
}

func (AgentPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPropertiesResponse)(nil)).Elem()
}

func (i AgentPropertiesResponseArgs) ToAgentPropertiesResponseOutput() AgentPropertiesResponseOutput {
	return i.ToAgentPropertiesResponseOutputWithContext(context.Background())
}

func (i AgentPropertiesResponseArgs) ToAgentPropertiesResponseOutputWithContext(ctx context.Context) AgentPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesResponseOutput)
}

func (i AgentPropertiesResponseArgs) ToAgentPropertiesResponsePtrOutput() AgentPropertiesResponsePtrOutput {
	return i.ToAgentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AgentPropertiesResponseArgs) ToAgentPropertiesResponsePtrOutputWithContext(ctx context.Context) AgentPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesResponseOutput).ToAgentPropertiesResponsePtrOutputWithContext(ctx)
}

// AgentPropertiesResponsePtrInput is an input type that accepts AgentPropertiesResponseArgs, AgentPropertiesResponsePtr and AgentPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AgentPropertiesResponsePtrInput` via:
//
//          AgentPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AgentPropertiesResponsePtrInput interface {
	pulumi.Input

	ToAgentPropertiesResponsePtrOutput() AgentPropertiesResponsePtrOutput
	ToAgentPropertiesResponsePtrOutputWithContext(context.Context) AgentPropertiesResponsePtrOutput
}

type agentPropertiesResponsePtrType AgentPropertiesResponseArgs

func AgentPropertiesResponsePtr(v *AgentPropertiesResponseArgs) AgentPropertiesResponsePtrInput {
	return (*agentPropertiesResponsePtrType)(v)
}

func (*agentPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPropertiesResponse)(nil)).Elem()
}

func (i *agentPropertiesResponsePtrType) ToAgentPropertiesResponsePtrOutput() AgentPropertiesResponsePtrOutput {
	return i.ToAgentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *agentPropertiesResponsePtrType) ToAgentPropertiesResponsePtrOutputWithContext(ctx context.Context) AgentPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesResponsePtrOutput)
}

// The properties that determine the run agent configuration.
type AgentPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AgentPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPropertiesResponse)(nil)).Elem()
}

func (o AgentPropertiesResponseOutput) ToAgentPropertiesResponseOutput() AgentPropertiesResponseOutput {
	return o
}

func (o AgentPropertiesResponseOutput) ToAgentPropertiesResponseOutputWithContext(ctx context.Context) AgentPropertiesResponseOutput {
	return o
}

func (o AgentPropertiesResponseOutput) ToAgentPropertiesResponsePtrOutput() AgentPropertiesResponsePtrOutput {
	return o.ToAgentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AgentPropertiesResponseOutput) ToAgentPropertiesResponsePtrOutputWithContext(ctx context.Context) AgentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AgentPropertiesResponse) *AgentPropertiesResponse {
		return &v
	}).(AgentPropertiesResponsePtrOutput)
}

// The CPU configuration in terms of number of cores required for the run.
func (o AgentPropertiesResponseOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentPropertiesResponse) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

type AgentPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AgentPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPropertiesResponse)(nil)).Elem()
}

func (o AgentPropertiesResponsePtrOutput) ToAgentPropertiesResponsePtrOutput() AgentPropertiesResponsePtrOutput {
	return o
}

func (o AgentPropertiesResponsePtrOutput) ToAgentPropertiesResponsePtrOutputWithContext(ctx context.Context) AgentPropertiesResponsePtrOutput {
	return o
}

func (o AgentPropertiesResponsePtrOutput) Elem() AgentPropertiesResponseOutput {
	return o.ApplyT(func(v *AgentPropertiesResponse) AgentPropertiesResponse { return *v }).(AgentPropertiesResponseOutput)
}

// The CPU configuration in terms of number of cores required for the run.
func (o AgentPropertiesResponsePtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

// The properties of a run argument.
type ArgumentInvokeResponse struct {
	// Flag to indicate whether the argument represents a secret and want to be removed from build logs.
	IsSecret *bool `pulumi:"isSecret"`
	// The name of the argument.
	Name string `pulumi:"name"`
	// The value of the argument.
	Value string `pulumi:"value"`
}

// ArgumentInvokeResponseInput is an input type that accepts ArgumentInvokeResponseArgs and ArgumentInvokeResponseOutput values.
// You can construct a concrete instance of `ArgumentInvokeResponseInput` via:
//
//          ArgumentInvokeResponseArgs{...}
type ArgumentInvokeResponseInput interface {
	pulumi.Input

	ToArgumentInvokeResponseOutput() ArgumentInvokeResponseOutput
	ToArgumentInvokeResponseOutputWithContext(context.Context) ArgumentInvokeResponseOutput
}

// The properties of a run argument.
type ArgumentInvokeResponseArgs struct {
	// Flag to indicate whether the argument represents a secret and want to be removed from build logs.
	IsSecret pulumi.BoolPtrInput `pulumi:"isSecret"`
	// The name of the argument.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the argument.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ArgumentInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArgumentInvokeResponse)(nil)).Elem()
}

func (i ArgumentInvokeResponseArgs) ToArgumentInvokeResponseOutput() ArgumentInvokeResponseOutput {
	return i.ToArgumentInvokeResponseOutputWithContext(context.Background())
}

func (i ArgumentInvokeResponseArgs) ToArgumentInvokeResponseOutputWithContext(ctx context.Context) ArgumentInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArgumentInvokeResponseOutput)
}

// ArgumentInvokeResponseArrayInput is an input type that accepts ArgumentInvokeResponseArray and ArgumentInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ArgumentInvokeResponseArrayInput` via:
//
//          ArgumentInvokeResponseArray{ ArgumentInvokeResponseArgs{...} }
type ArgumentInvokeResponseArrayInput interface {
	pulumi.Input

	ToArgumentInvokeResponseArrayOutput() ArgumentInvokeResponseArrayOutput
	ToArgumentInvokeResponseArrayOutputWithContext(context.Context) ArgumentInvokeResponseArrayOutput
}

type ArgumentInvokeResponseArray []ArgumentInvokeResponseInput

func (ArgumentInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArgumentInvokeResponse)(nil)).Elem()
}

func (i ArgumentInvokeResponseArray) ToArgumentInvokeResponseArrayOutput() ArgumentInvokeResponseArrayOutput {
	return i.ToArgumentInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ArgumentInvokeResponseArray) ToArgumentInvokeResponseArrayOutputWithContext(ctx context.Context) ArgumentInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArgumentInvokeResponseArrayOutput)
}

// The properties of a run argument.
type ArgumentInvokeResponseOutput struct{ *pulumi.OutputState }

func (ArgumentInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArgumentInvokeResponse)(nil)).Elem()
}

func (o ArgumentInvokeResponseOutput) ToArgumentInvokeResponseOutput() ArgumentInvokeResponseOutput {
	return o
}

func (o ArgumentInvokeResponseOutput) ToArgumentInvokeResponseOutputWithContext(ctx context.Context) ArgumentInvokeResponseOutput {
	return o
}

// Flag to indicate whether the argument represents a secret and want to be removed from build logs.
func (o ArgumentInvokeResponseOutput) IsSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ArgumentInvokeResponse) *bool { return v.IsSecret }).(pulumi.BoolPtrOutput)
}

// The name of the argument.
func (o ArgumentInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ArgumentInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the argument.
func (o ArgumentInvokeResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ArgumentInvokeResponse) string { return v.Value }).(pulumi.StringOutput)
}

type ArgumentInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ArgumentInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArgumentInvokeResponse)(nil)).Elem()
}

func (o ArgumentInvokeResponseArrayOutput) ToArgumentInvokeResponseArrayOutput() ArgumentInvokeResponseArrayOutput {
	return o
}

func (o ArgumentInvokeResponseArrayOutput) ToArgumentInvokeResponseArrayOutputWithContext(ctx context.Context) ArgumentInvokeResponseArrayOutput {
	return o
}

func (o ArgumentInvokeResponseArrayOutput) Index(i pulumi.IntInput) ArgumentInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArgumentInvokeResponse {
		return vs[0].([]ArgumentInvokeResponse)[vs[1].(int)]
	}).(ArgumentInvokeResponseOutput)
}

// The properties of a run argument.
type ArgumentResponse struct {
	// Flag to indicate whether the argument represents a secret and want to be removed from build logs.
	IsSecret *bool `pulumi:"isSecret"`
	// The name of the argument.
	Name string `pulumi:"name"`
	// The value of the argument.
	Value string `pulumi:"value"`
}

// ArgumentResponseInput is an input type that accepts ArgumentResponseArgs and ArgumentResponseOutput values.
// You can construct a concrete instance of `ArgumentResponseInput` via:
//
//          ArgumentResponseArgs{...}
type ArgumentResponseInput interface {
	pulumi.Input

	ToArgumentResponseOutput() ArgumentResponseOutput
	ToArgumentResponseOutputWithContext(context.Context) ArgumentResponseOutput
}

// The properties of a run argument.
type ArgumentResponseArgs struct {
	// Flag to indicate whether the argument represents a secret and want to be removed from build logs.
	IsSecret pulumi.BoolPtrInput `pulumi:"isSecret"`
	// The name of the argument.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the argument.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ArgumentResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArgumentResponse)(nil)).Elem()
}

func (i ArgumentResponseArgs) ToArgumentResponseOutput() ArgumentResponseOutput {
	return i.ToArgumentResponseOutputWithContext(context.Background())
}

func (i ArgumentResponseArgs) ToArgumentResponseOutputWithContext(ctx context.Context) ArgumentResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArgumentResponseOutput)
}

// ArgumentResponseArrayInput is an input type that accepts ArgumentResponseArray and ArgumentResponseArrayOutput values.
// You can construct a concrete instance of `ArgumentResponseArrayInput` via:
//
//          ArgumentResponseArray{ ArgumentResponseArgs{...} }
type ArgumentResponseArrayInput interface {
	pulumi.Input

	ToArgumentResponseArrayOutput() ArgumentResponseArrayOutput
	ToArgumentResponseArrayOutputWithContext(context.Context) ArgumentResponseArrayOutput
}

type ArgumentResponseArray []ArgumentResponseInput

func (ArgumentResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArgumentResponse)(nil)).Elem()
}

func (i ArgumentResponseArray) ToArgumentResponseArrayOutput() ArgumentResponseArrayOutput {
	return i.ToArgumentResponseArrayOutputWithContext(context.Background())
}

func (i ArgumentResponseArray) ToArgumentResponseArrayOutputWithContext(ctx context.Context) ArgumentResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArgumentResponseArrayOutput)
}

// The properties of a run argument.
type ArgumentResponseOutput struct{ *pulumi.OutputState }

func (ArgumentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArgumentResponse)(nil)).Elem()
}

func (o ArgumentResponseOutput) ToArgumentResponseOutput() ArgumentResponseOutput {
	return o
}

func (o ArgumentResponseOutput) ToArgumentResponseOutputWithContext(ctx context.Context) ArgumentResponseOutput {
	return o
}

// Flag to indicate whether the argument represents a secret and want to be removed from build logs.
func (o ArgumentResponseOutput) IsSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ArgumentResponse) *bool { return v.IsSecret }).(pulumi.BoolPtrOutput)
}

// The name of the argument.
func (o ArgumentResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ArgumentResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the argument.
func (o ArgumentResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ArgumentResponse) string { return v.Value }).(pulumi.StringOutput)
}

type ArgumentResponseArrayOutput struct{ *pulumi.OutputState }

func (ArgumentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArgumentResponse)(nil)).Elem()
}

func (o ArgumentResponseArrayOutput) ToArgumentResponseArrayOutput() ArgumentResponseArrayOutput {
	return o
}

func (o ArgumentResponseArrayOutput) ToArgumentResponseArrayOutputWithContext(ctx context.Context) ArgumentResponseArrayOutput {
	return o
}

func (o ArgumentResponseArrayOutput) Index(i pulumi.IntInput) ArgumentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArgumentResponse {
		return vs[0].([]ArgumentResponse)[vs[1].(int)]
	}).(ArgumentResponseOutput)
}

// The authorization properties for accessing the source code repository.
type AuthInfo struct {
	// Time in seconds that the token remains valid
	ExpiresIn *int `pulumi:"expiresIn"`
	// The refresh token used to refresh the access token.
	RefreshToken *string `pulumi:"refreshToken"`
	// The scope of the access token.
	Scope *string `pulumi:"scope"`
	// The access token used to access the source control provider.
	Token string `pulumi:"token"`
	// The type of Auth token.
	TokenType string `pulumi:"tokenType"`
}

// AuthInfoInput is an input type that accepts AuthInfoArgs and AuthInfoOutput values.
// You can construct a concrete instance of `AuthInfoInput` via:
//
//          AuthInfoArgs{...}
type AuthInfoInput interface {
	pulumi.Input

	ToAuthInfoOutput() AuthInfoOutput
	ToAuthInfoOutputWithContext(context.Context) AuthInfoOutput
}

// The authorization properties for accessing the source code repository.
type AuthInfoArgs struct {
	// Time in seconds that the token remains valid
	ExpiresIn pulumi.IntPtrInput `pulumi:"expiresIn"`
	// The refresh token used to refresh the access token.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
	// The scope of the access token.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The access token used to access the source control provider.
	Token pulumi.StringInput `pulumi:"token"`
	// The type of Auth token.
	TokenType pulumi.StringInput `pulumi:"tokenType"`
}

func (AuthInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthInfo)(nil)).Elem()
}

func (i AuthInfoArgs) ToAuthInfoOutput() AuthInfoOutput {
	return i.ToAuthInfoOutputWithContext(context.Background())
}

func (i AuthInfoArgs) ToAuthInfoOutputWithContext(ctx context.Context) AuthInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoOutput)
}

func (i AuthInfoArgs) ToAuthInfoPtrOutput() AuthInfoPtrOutput {
	return i.ToAuthInfoPtrOutputWithContext(context.Background())
}

func (i AuthInfoArgs) ToAuthInfoPtrOutputWithContext(ctx context.Context) AuthInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoOutput).ToAuthInfoPtrOutputWithContext(ctx)
}

// AuthInfoPtrInput is an input type that accepts AuthInfoArgs, AuthInfoPtr and AuthInfoPtrOutput values.
// You can construct a concrete instance of `AuthInfoPtrInput` via:
//
//          AuthInfoArgs{...}
//
//  or:
//
//          nil
type AuthInfoPtrInput interface {
	pulumi.Input

	ToAuthInfoPtrOutput() AuthInfoPtrOutput
	ToAuthInfoPtrOutputWithContext(context.Context) AuthInfoPtrOutput
}

type authInfoPtrType AuthInfoArgs

func AuthInfoPtr(v *AuthInfoArgs) AuthInfoPtrInput {
	return (*authInfoPtrType)(v)
}

func (*authInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthInfo)(nil)).Elem()
}

func (i *authInfoPtrType) ToAuthInfoPtrOutput() AuthInfoPtrOutput {
	return i.ToAuthInfoPtrOutputWithContext(context.Background())
}

func (i *authInfoPtrType) ToAuthInfoPtrOutputWithContext(ctx context.Context) AuthInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoPtrOutput)
}

// The authorization properties for accessing the source code repository.
type AuthInfoOutput struct{ *pulumi.OutputState }

func (AuthInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthInfo)(nil)).Elem()
}

func (o AuthInfoOutput) ToAuthInfoOutput() AuthInfoOutput {
	return o
}

func (o AuthInfoOutput) ToAuthInfoOutputWithContext(ctx context.Context) AuthInfoOutput {
	return o
}

func (o AuthInfoOutput) ToAuthInfoPtrOutput() AuthInfoPtrOutput {
	return o.ToAuthInfoPtrOutputWithContext(context.Background())
}

func (o AuthInfoOutput) ToAuthInfoPtrOutputWithContext(ctx context.Context) AuthInfoPtrOutput {
	return o.ApplyT(func(v AuthInfo) *AuthInfo {
		return &v
	}).(AuthInfoPtrOutput)
}

// Time in seconds that the token remains valid
func (o AuthInfoOutput) ExpiresIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AuthInfo) *int { return v.ExpiresIn }).(pulumi.IntPtrOutput)
}

// The refresh token used to refresh the access token.
func (o AuthInfoOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthInfo) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

// The scope of the access token.
func (o AuthInfoOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthInfo) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The access token used to access the source control provider.
func (o AuthInfoOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v AuthInfo) string { return v.Token }).(pulumi.StringOutput)
}

// The type of Auth token.
func (o AuthInfoOutput) TokenType() pulumi.StringOutput {
	return o.ApplyT(func(v AuthInfo) string { return v.TokenType }).(pulumi.StringOutput)
}

type AuthInfoPtrOutput struct{ *pulumi.OutputState }

func (AuthInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthInfo)(nil)).Elem()
}

func (o AuthInfoPtrOutput) ToAuthInfoPtrOutput() AuthInfoPtrOutput {
	return o
}

func (o AuthInfoPtrOutput) ToAuthInfoPtrOutputWithContext(ctx context.Context) AuthInfoPtrOutput {
	return o
}

func (o AuthInfoPtrOutput) Elem() AuthInfoOutput {
	return o.ApplyT(func(v *AuthInfo) AuthInfo { return *v }).(AuthInfoOutput)
}

// Time in seconds that the token remains valid
func (o AuthInfoPtrOutput) ExpiresIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuthInfo) *int {
		if v == nil {
			return nil
		}
		return v.ExpiresIn
	}).(pulumi.IntPtrOutput)
}

// The refresh token used to refresh the access token.
func (o AuthInfoPtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfo) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

// The scope of the access token.
func (o AuthInfoPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfo) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The access token used to access the source control provider.
func (o AuthInfoPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

// The type of Auth token.
func (o AuthInfoPtrOutput) TokenType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfo) *string {
		if v == nil {
			return nil
		}
		return &v.TokenType
	}).(pulumi.StringPtrOutput)
}

// The authorization properties for accessing the source code repository.
type AuthInfoInvokeResponse struct {
	// Time in seconds that the token remains valid
	ExpiresIn *int `pulumi:"expiresIn"`
	// The refresh token used to refresh the access token.
	RefreshToken *string `pulumi:"refreshToken"`
	// The scope of the access token.
	Scope *string `pulumi:"scope"`
	// The access token used to access the source control provider.
	Token string `pulumi:"token"`
	// The type of Auth token.
	TokenType string `pulumi:"tokenType"`
}

// AuthInfoInvokeResponseInput is an input type that accepts AuthInfoInvokeResponseArgs and AuthInfoInvokeResponseOutput values.
// You can construct a concrete instance of `AuthInfoInvokeResponseInput` via:
//
//          AuthInfoInvokeResponseArgs{...}
type AuthInfoInvokeResponseInput interface {
	pulumi.Input

	ToAuthInfoInvokeResponseOutput() AuthInfoInvokeResponseOutput
	ToAuthInfoInvokeResponseOutputWithContext(context.Context) AuthInfoInvokeResponseOutput
}

// The authorization properties for accessing the source code repository.
type AuthInfoInvokeResponseArgs struct {
	// Time in seconds that the token remains valid
	ExpiresIn pulumi.IntPtrInput `pulumi:"expiresIn"`
	// The refresh token used to refresh the access token.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
	// The scope of the access token.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The access token used to access the source control provider.
	Token pulumi.StringInput `pulumi:"token"`
	// The type of Auth token.
	TokenType pulumi.StringInput `pulumi:"tokenType"`
}

func (AuthInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthInfoInvokeResponse)(nil)).Elem()
}

func (i AuthInfoInvokeResponseArgs) ToAuthInfoInvokeResponseOutput() AuthInfoInvokeResponseOutput {
	return i.ToAuthInfoInvokeResponseOutputWithContext(context.Background())
}

func (i AuthInfoInvokeResponseArgs) ToAuthInfoInvokeResponseOutputWithContext(ctx context.Context) AuthInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoInvokeResponseOutput)
}

func (i AuthInfoInvokeResponseArgs) ToAuthInfoInvokeResponsePtrOutput() AuthInfoInvokeResponsePtrOutput {
	return i.ToAuthInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i AuthInfoInvokeResponseArgs) ToAuthInfoInvokeResponsePtrOutputWithContext(ctx context.Context) AuthInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoInvokeResponseOutput).ToAuthInfoInvokeResponsePtrOutputWithContext(ctx)
}

// AuthInfoInvokeResponsePtrInput is an input type that accepts AuthInfoInvokeResponseArgs, AuthInfoInvokeResponsePtr and AuthInfoInvokeResponsePtrOutput values.
// You can construct a concrete instance of `AuthInfoInvokeResponsePtrInput` via:
//
//          AuthInfoInvokeResponseArgs{...}
//
//  or:
//
//          nil
type AuthInfoInvokeResponsePtrInput interface {
	pulumi.Input

	ToAuthInfoInvokeResponsePtrOutput() AuthInfoInvokeResponsePtrOutput
	ToAuthInfoInvokeResponsePtrOutputWithContext(context.Context) AuthInfoInvokeResponsePtrOutput
}

type authInfoInvokeResponsePtrType AuthInfoInvokeResponseArgs

func AuthInfoInvokeResponsePtr(v *AuthInfoInvokeResponseArgs) AuthInfoInvokeResponsePtrInput {
	return (*authInfoInvokeResponsePtrType)(v)
}

func (*authInfoInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthInfoInvokeResponse)(nil)).Elem()
}

func (i *authInfoInvokeResponsePtrType) ToAuthInfoInvokeResponsePtrOutput() AuthInfoInvokeResponsePtrOutput {
	return i.ToAuthInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *authInfoInvokeResponsePtrType) ToAuthInfoInvokeResponsePtrOutputWithContext(ctx context.Context) AuthInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoInvokeResponsePtrOutput)
}

// The authorization properties for accessing the source code repository.
type AuthInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (AuthInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthInfoInvokeResponse)(nil)).Elem()
}

func (o AuthInfoInvokeResponseOutput) ToAuthInfoInvokeResponseOutput() AuthInfoInvokeResponseOutput {
	return o
}

func (o AuthInfoInvokeResponseOutput) ToAuthInfoInvokeResponseOutputWithContext(ctx context.Context) AuthInfoInvokeResponseOutput {
	return o
}

func (o AuthInfoInvokeResponseOutput) ToAuthInfoInvokeResponsePtrOutput() AuthInfoInvokeResponsePtrOutput {
	return o.ToAuthInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (o AuthInfoInvokeResponseOutput) ToAuthInfoInvokeResponsePtrOutputWithContext(ctx context.Context) AuthInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v AuthInfoInvokeResponse) *AuthInfoInvokeResponse {
		return &v
	}).(AuthInfoInvokeResponsePtrOutput)
}

// Time in seconds that the token remains valid
func (o AuthInfoInvokeResponseOutput) ExpiresIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AuthInfoInvokeResponse) *int { return v.ExpiresIn }).(pulumi.IntPtrOutput)
}

// The refresh token used to refresh the access token.
func (o AuthInfoInvokeResponseOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthInfoInvokeResponse) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

// The scope of the access token.
func (o AuthInfoInvokeResponseOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthInfoInvokeResponse) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The access token used to access the source control provider.
func (o AuthInfoInvokeResponseOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v AuthInfoInvokeResponse) string { return v.Token }).(pulumi.StringOutput)
}

// The type of Auth token.
func (o AuthInfoInvokeResponseOutput) TokenType() pulumi.StringOutput {
	return o.ApplyT(func(v AuthInfoInvokeResponse) string { return v.TokenType }).(pulumi.StringOutput)
}

type AuthInfoInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthInfoInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthInfoInvokeResponse)(nil)).Elem()
}

func (o AuthInfoInvokeResponsePtrOutput) ToAuthInfoInvokeResponsePtrOutput() AuthInfoInvokeResponsePtrOutput {
	return o
}

func (o AuthInfoInvokeResponsePtrOutput) ToAuthInfoInvokeResponsePtrOutputWithContext(ctx context.Context) AuthInfoInvokeResponsePtrOutput {
	return o
}

func (o AuthInfoInvokeResponsePtrOutput) Elem() AuthInfoInvokeResponseOutput {
	return o.ApplyT(func(v *AuthInfoInvokeResponse) AuthInfoInvokeResponse { return *v }).(AuthInfoInvokeResponseOutput)
}

// Time in seconds that the token remains valid
func (o AuthInfoInvokeResponsePtrOutput) ExpiresIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuthInfoInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.ExpiresIn
	}).(pulumi.IntPtrOutput)
}

// The refresh token used to refresh the access token.
func (o AuthInfoInvokeResponsePtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

// The scope of the access token.
func (o AuthInfoInvokeResponsePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The access token used to access the source control provider.
func (o AuthInfoInvokeResponsePtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

// The type of Auth token.
func (o AuthInfoInvokeResponsePtrOutput) TokenType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TokenType
	}).(pulumi.StringPtrOutput)
}

// The authorization properties for accessing the source code repository.
type AuthInfoResponse struct {
	// Time in seconds that the token remains valid
	ExpiresIn *int `pulumi:"expiresIn"`
	// The refresh token used to refresh the access token.
	RefreshToken *string `pulumi:"refreshToken"`
	// The scope of the access token.
	Scope *string `pulumi:"scope"`
	// The access token used to access the source control provider.
	Token string `pulumi:"token"`
	// The type of Auth token.
	TokenType string `pulumi:"tokenType"`
}

// AuthInfoResponseInput is an input type that accepts AuthInfoResponseArgs and AuthInfoResponseOutput values.
// You can construct a concrete instance of `AuthInfoResponseInput` via:
//
//          AuthInfoResponseArgs{...}
type AuthInfoResponseInput interface {
	pulumi.Input

	ToAuthInfoResponseOutput() AuthInfoResponseOutput
	ToAuthInfoResponseOutputWithContext(context.Context) AuthInfoResponseOutput
}

// The authorization properties for accessing the source code repository.
type AuthInfoResponseArgs struct {
	// Time in seconds that the token remains valid
	ExpiresIn pulumi.IntPtrInput `pulumi:"expiresIn"`
	// The refresh token used to refresh the access token.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
	// The scope of the access token.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The access token used to access the source control provider.
	Token pulumi.StringInput `pulumi:"token"`
	// The type of Auth token.
	TokenType pulumi.StringInput `pulumi:"tokenType"`
}

func (AuthInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthInfoResponse)(nil)).Elem()
}

func (i AuthInfoResponseArgs) ToAuthInfoResponseOutput() AuthInfoResponseOutput {
	return i.ToAuthInfoResponseOutputWithContext(context.Background())
}

func (i AuthInfoResponseArgs) ToAuthInfoResponseOutputWithContext(ctx context.Context) AuthInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoResponseOutput)
}

func (i AuthInfoResponseArgs) ToAuthInfoResponsePtrOutput() AuthInfoResponsePtrOutput {
	return i.ToAuthInfoResponsePtrOutputWithContext(context.Background())
}

func (i AuthInfoResponseArgs) ToAuthInfoResponsePtrOutputWithContext(ctx context.Context) AuthInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoResponseOutput).ToAuthInfoResponsePtrOutputWithContext(ctx)
}

// AuthInfoResponsePtrInput is an input type that accepts AuthInfoResponseArgs, AuthInfoResponsePtr and AuthInfoResponsePtrOutput values.
// You can construct a concrete instance of `AuthInfoResponsePtrInput` via:
//
//          AuthInfoResponseArgs{...}
//
//  or:
//
//          nil
type AuthInfoResponsePtrInput interface {
	pulumi.Input

	ToAuthInfoResponsePtrOutput() AuthInfoResponsePtrOutput
	ToAuthInfoResponsePtrOutputWithContext(context.Context) AuthInfoResponsePtrOutput
}

type authInfoResponsePtrType AuthInfoResponseArgs

func AuthInfoResponsePtr(v *AuthInfoResponseArgs) AuthInfoResponsePtrInput {
	return (*authInfoResponsePtrType)(v)
}

func (*authInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthInfoResponse)(nil)).Elem()
}

func (i *authInfoResponsePtrType) ToAuthInfoResponsePtrOutput() AuthInfoResponsePtrOutput {
	return i.ToAuthInfoResponsePtrOutputWithContext(context.Background())
}

func (i *authInfoResponsePtrType) ToAuthInfoResponsePtrOutputWithContext(ctx context.Context) AuthInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoResponsePtrOutput)
}

// The authorization properties for accessing the source code repository.
type AuthInfoResponseOutput struct{ *pulumi.OutputState }

func (AuthInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthInfoResponse)(nil)).Elem()
}

func (o AuthInfoResponseOutput) ToAuthInfoResponseOutput() AuthInfoResponseOutput {
	return o
}

func (o AuthInfoResponseOutput) ToAuthInfoResponseOutputWithContext(ctx context.Context) AuthInfoResponseOutput {
	return o
}

func (o AuthInfoResponseOutput) ToAuthInfoResponsePtrOutput() AuthInfoResponsePtrOutput {
	return o.ToAuthInfoResponsePtrOutputWithContext(context.Background())
}

func (o AuthInfoResponseOutput) ToAuthInfoResponsePtrOutputWithContext(ctx context.Context) AuthInfoResponsePtrOutput {
	return o.ApplyT(func(v AuthInfoResponse) *AuthInfoResponse {
		return &v
	}).(AuthInfoResponsePtrOutput)
}

// Time in seconds that the token remains valid
func (o AuthInfoResponseOutput) ExpiresIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AuthInfoResponse) *int { return v.ExpiresIn }).(pulumi.IntPtrOutput)
}

// The refresh token used to refresh the access token.
func (o AuthInfoResponseOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthInfoResponse) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

// The scope of the access token.
func (o AuthInfoResponseOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthInfoResponse) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The access token used to access the source control provider.
func (o AuthInfoResponseOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v AuthInfoResponse) string { return v.Token }).(pulumi.StringOutput)
}

// The type of Auth token.
func (o AuthInfoResponseOutput) TokenType() pulumi.StringOutput {
	return o.ApplyT(func(v AuthInfoResponse) string { return v.TokenType }).(pulumi.StringOutput)
}

type AuthInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthInfoResponse)(nil)).Elem()
}

func (o AuthInfoResponsePtrOutput) ToAuthInfoResponsePtrOutput() AuthInfoResponsePtrOutput {
	return o
}

func (o AuthInfoResponsePtrOutput) ToAuthInfoResponsePtrOutputWithContext(ctx context.Context) AuthInfoResponsePtrOutput {
	return o
}

func (o AuthInfoResponsePtrOutput) Elem() AuthInfoResponseOutput {
	return o.ApplyT(func(v *AuthInfoResponse) AuthInfoResponse { return *v }).(AuthInfoResponseOutput)
}

// Time in seconds that the token remains valid
func (o AuthInfoResponsePtrOutput) ExpiresIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuthInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.ExpiresIn
	}).(pulumi.IntPtrOutput)
}

// The refresh token used to refresh the access token.
func (o AuthInfoResponsePtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

// The scope of the access token.
func (o AuthInfoResponsePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The access token used to access the source control provider.
func (o AuthInfoResponsePtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

// The type of Auth token.
func (o AuthInfoResponsePtrOutput) TokenType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TokenType
	}).(pulumi.StringPtrOutput)
}

// Properties that describe a base image dependency.
type BaseImageDependencyInvokeResponse struct {
	// The sha256-based digest of the image manifest.
	Digest *string `pulumi:"digest"`
	// The registry login server.
	Registry *string `pulumi:"registry"`
	// The repository name.
	Repository *string `pulumi:"repository"`
	// The tag name.
	Tag *string `pulumi:"tag"`
	// The type of the base image dependency.
	Type *string `pulumi:"type"`
}

// BaseImageDependencyInvokeResponseInput is an input type that accepts BaseImageDependencyInvokeResponseArgs and BaseImageDependencyInvokeResponseOutput values.
// You can construct a concrete instance of `BaseImageDependencyInvokeResponseInput` via:
//
//          BaseImageDependencyInvokeResponseArgs{...}
type BaseImageDependencyInvokeResponseInput interface {
	pulumi.Input

	ToBaseImageDependencyInvokeResponseOutput() BaseImageDependencyInvokeResponseOutput
	ToBaseImageDependencyInvokeResponseOutputWithContext(context.Context) BaseImageDependencyInvokeResponseOutput
}

// Properties that describe a base image dependency.
type BaseImageDependencyInvokeResponseArgs struct {
	// The sha256-based digest of the image manifest.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// The registry login server.
	Registry pulumi.StringPtrInput `pulumi:"registry"`
	// The repository name.
	Repository pulumi.StringPtrInput `pulumi:"repository"`
	// The tag name.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// The type of the base image dependency.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (BaseImageDependencyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageDependencyInvokeResponse)(nil)).Elem()
}

func (i BaseImageDependencyInvokeResponseArgs) ToBaseImageDependencyInvokeResponseOutput() BaseImageDependencyInvokeResponseOutput {
	return i.ToBaseImageDependencyInvokeResponseOutputWithContext(context.Background())
}

func (i BaseImageDependencyInvokeResponseArgs) ToBaseImageDependencyInvokeResponseOutputWithContext(ctx context.Context) BaseImageDependencyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageDependencyInvokeResponseOutput)
}

// BaseImageDependencyInvokeResponseArrayInput is an input type that accepts BaseImageDependencyInvokeResponseArray and BaseImageDependencyInvokeResponseArrayOutput values.
// You can construct a concrete instance of `BaseImageDependencyInvokeResponseArrayInput` via:
//
//          BaseImageDependencyInvokeResponseArray{ BaseImageDependencyInvokeResponseArgs{...} }
type BaseImageDependencyInvokeResponseArrayInput interface {
	pulumi.Input

	ToBaseImageDependencyInvokeResponseArrayOutput() BaseImageDependencyInvokeResponseArrayOutput
	ToBaseImageDependencyInvokeResponseArrayOutputWithContext(context.Context) BaseImageDependencyInvokeResponseArrayOutput
}

type BaseImageDependencyInvokeResponseArray []BaseImageDependencyInvokeResponseInput

func (BaseImageDependencyInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaseImageDependencyInvokeResponse)(nil)).Elem()
}

func (i BaseImageDependencyInvokeResponseArray) ToBaseImageDependencyInvokeResponseArrayOutput() BaseImageDependencyInvokeResponseArrayOutput {
	return i.ToBaseImageDependencyInvokeResponseArrayOutputWithContext(context.Background())
}

func (i BaseImageDependencyInvokeResponseArray) ToBaseImageDependencyInvokeResponseArrayOutputWithContext(ctx context.Context) BaseImageDependencyInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageDependencyInvokeResponseArrayOutput)
}

// Properties that describe a base image dependency.
type BaseImageDependencyInvokeResponseOutput struct{ *pulumi.OutputState }

func (BaseImageDependencyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageDependencyInvokeResponse)(nil)).Elem()
}

func (o BaseImageDependencyInvokeResponseOutput) ToBaseImageDependencyInvokeResponseOutput() BaseImageDependencyInvokeResponseOutput {
	return o
}

func (o BaseImageDependencyInvokeResponseOutput) ToBaseImageDependencyInvokeResponseOutputWithContext(ctx context.Context) BaseImageDependencyInvokeResponseOutput {
	return o
}

// The sha256-based digest of the image manifest.
func (o BaseImageDependencyInvokeResponseOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyInvokeResponse) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// The registry login server.
func (o BaseImageDependencyInvokeResponseOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyInvokeResponse) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

// The repository name.
func (o BaseImageDependencyInvokeResponseOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyInvokeResponse) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

// The tag name.
func (o BaseImageDependencyInvokeResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyInvokeResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// The type of the base image dependency.
func (o BaseImageDependencyInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type BaseImageDependencyInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (BaseImageDependencyInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaseImageDependencyInvokeResponse)(nil)).Elem()
}

func (o BaseImageDependencyInvokeResponseArrayOutput) ToBaseImageDependencyInvokeResponseArrayOutput() BaseImageDependencyInvokeResponseArrayOutput {
	return o
}

func (o BaseImageDependencyInvokeResponseArrayOutput) ToBaseImageDependencyInvokeResponseArrayOutputWithContext(ctx context.Context) BaseImageDependencyInvokeResponseArrayOutput {
	return o
}

func (o BaseImageDependencyInvokeResponseArrayOutput) Index(i pulumi.IntInput) BaseImageDependencyInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BaseImageDependencyInvokeResponse {
		return vs[0].([]BaseImageDependencyInvokeResponse)[vs[1].(int)]
	}).(BaseImageDependencyInvokeResponseOutput)
}

// Properties that describe a base image dependency.
type BaseImageDependencyResponse struct {
	// The sha256-based digest of the image manifest.
	Digest *string `pulumi:"digest"`
	// The registry login server.
	Registry *string `pulumi:"registry"`
	// The repository name.
	Repository *string `pulumi:"repository"`
	// The tag name.
	Tag *string `pulumi:"tag"`
	// The type of the base image dependency.
	Type *string `pulumi:"type"`
}

// BaseImageDependencyResponseInput is an input type that accepts BaseImageDependencyResponseArgs and BaseImageDependencyResponseOutput values.
// You can construct a concrete instance of `BaseImageDependencyResponseInput` via:
//
//          BaseImageDependencyResponseArgs{...}
type BaseImageDependencyResponseInput interface {
	pulumi.Input

	ToBaseImageDependencyResponseOutput() BaseImageDependencyResponseOutput
	ToBaseImageDependencyResponseOutputWithContext(context.Context) BaseImageDependencyResponseOutput
}

// Properties that describe a base image dependency.
type BaseImageDependencyResponseArgs struct {
	// The sha256-based digest of the image manifest.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// The registry login server.
	Registry pulumi.StringPtrInput `pulumi:"registry"`
	// The repository name.
	Repository pulumi.StringPtrInput `pulumi:"repository"`
	// The tag name.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// The type of the base image dependency.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (BaseImageDependencyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageDependencyResponse)(nil)).Elem()
}

func (i BaseImageDependencyResponseArgs) ToBaseImageDependencyResponseOutput() BaseImageDependencyResponseOutput {
	return i.ToBaseImageDependencyResponseOutputWithContext(context.Background())
}

func (i BaseImageDependencyResponseArgs) ToBaseImageDependencyResponseOutputWithContext(ctx context.Context) BaseImageDependencyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageDependencyResponseOutput)
}

// BaseImageDependencyResponseArrayInput is an input type that accepts BaseImageDependencyResponseArray and BaseImageDependencyResponseArrayOutput values.
// You can construct a concrete instance of `BaseImageDependencyResponseArrayInput` via:
//
//          BaseImageDependencyResponseArray{ BaseImageDependencyResponseArgs{...} }
type BaseImageDependencyResponseArrayInput interface {
	pulumi.Input

	ToBaseImageDependencyResponseArrayOutput() BaseImageDependencyResponseArrayOutput
	ToBaseImageDependencyResponseArrayOutputWithContext(context.Context) BaseImageDependencyResponseArrayOutput
}

type BaseImageDependencyResponseArray []BaseImageDependencyResponseInput

func (BaseImageDependencyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaseImageDependencyResponse)(nil)).Elem()
}

func (i BaseImageDependencyResponseArray) ToBaseImageDependencyResponseArrayOutput() BaseImageDependencyResponseArrayOutput {
	return i.ToBaseImageDependencyResponseArrayOutputWithContext(context.Background())
}

func (i BaseImageDependencyResponseArray) ToBaseImageDependencyResponseArrayOutputWithContext(ctx context.Context) BaseImageDependencyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageDependencyResponseArrayOutput)
}

// Properties that describe a base image dependency.
type BaseImageDependencyResponseOutput struct{ *pulumi.OutputState }

func (BaseImageDependencyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageDependencyResponse)(nil)).Elem()
}

func (o BaseImageDependencyResponseOutput) ToBaseImageDependencyResponseOutput() BaseImageDependencyResponseOutput {
	return o
}

func (o BaseImageDependencyResponseOutput) ToBaseImageDependencyResponseOutputWithContext(ctx context.Context) BaseImageDependencyResponseOutput {
	return o
}

// The sha256-based digest of the image manifest.
func (o BaseImageDependencyResponseOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyResponse) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// The registry login server.
func (o BaseImageDependencyResponseOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyResponse) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

// The repository name.
func (o BaseImageDependencyResponseOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyResponse) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

// The tag name.
func (o BaseImageDependencyResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// The type of the base image dependency.
func (o BaseImageDependencyResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type BaseImageDependencyResponseArrayOutput struct{ *pulumi.OutputState }

func (BaseImageDependencyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaseImageDependencyResponse)(nil)).Elem()
}

func (o BaseImageDependencyResponseArrayOutput) ToBaseImageDependencyResponseArrayOutput() BaseImageDependencyResponseArrayOutput {
	return o
}

func (o BaseImageDependencyResponseArrayOutput) ToBaseImageDependencyResponseArrayOutputWithContext(ctx context.Context) BaseImageDependencyResponseArrayOutput {
	return o
}

func (o BaseImageDependencyResponseArrayOutput) Index(i pulumi.IntInput) BaseImageDependencyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BaseImageDependencyResponse {
		return vs[0].([]BaseImageDependencyResponse)[vs[1].(int)]
	}).(BaseImageDependencyResponseOutput)
}

// The trigger based on base image dependency.
type BaseImageTrigger struct {
	// The type of the auto trigger for base image dependency updates.
	BaseImageTriggerType string `pulumi:"baseImageTriggerType"`
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// BaseImageTriggerInput is an input type that accepts BaseImageTriggerArgs and BaseImageTriggerOutput values.
// You can construct a concrete instance of `BaseImageTriggerInput` via:
//
//          BaseImageTriggerArgs{...}
type BaseImageTriggerInput interface {
	pulumi.Input

	ToBaseImageTriggerOutput() BaseImageTriggerOutput
	ToBaseImageTriggerOutputWithContext(context.Context) BaseImageTriggerOutput
}

// The trigger based on base image dependency.
type BaseImageTriggerArgs struct {
	// The type of the auto trigger for base image dependency updates.
	BaseImageTriggerType pulumi.StringInput `pulumi:"baseImageTriggerType"`
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (BaseImageTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageTrigger)(nil)).Elem()
}

func (i BaseImageTriggerArgs) ToBaseImageTriggerOutput() BaseImageTriggerOutput {
	return i.ToBaseImageTriggerOutputWithContext(context.Background())
}

func (i BaseImageTriggerArgs) ToBaseImageTriggerOutputWithContext(ctx context.Context) BaseImageTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerOutput)
}

func (i BaseImageTriggerArgs) ToBaseImageTriggerPtrOutput() BaseImageTriggerPtrOutput {
	return i.ToBaseImageTriggerPtrOutputWithContext(context.Background())
}

func (i BaseImageTriggerArgs) ToBaseImageTriggerPtrOutputWithContext(ctx context.Context) BaseImageTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerOutput).ToBaseImageTriggerPtrOutputWithContext(ctx)
}

// BaseImageTriggerPtrInput is an input type that accepts BaseImageTriggerArgs, BaseImageTriggerPtr and BaseImageTriggerPtrOutput values.
// You can construct a concrete instance of `BaseImageTriggerPtrInput` via:
//
//          BaseImageTriggerArgs{...}
//
//  or:
//
//          nil
type BaseImageTriggerPtrInput interface {
	pulumi.Input

	ToBaseImageTriggerPtrOutput() BaseImageTriggerPtrOutput
	ToBaseImageTriggerPtrOutputWithContext(context.Context) BaseImageTriggerPtrOutput
}

type baseImageTriggerPtrType BaseImageTriggerArgs

func BaseImageTriggerPtr(v *BaseImageTriggerArgs) BaseImageTriggerPtrInput {
	return (*baseImageTriggerPtrType)(v)
}

func (*baseImageTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseImageTrigger)(nil)).Elem()
}

func (i *baseImageTriggerPtrType) ToBaseImageTriggerPtrOutput() BaseImageTriggerPtrOutput {
	return i.ToBaseImageTriggerPtrOutputWithContext(context.Background())
}

func (i *baseImageTriggerPtrType) ToBaseImageTriggerPtrOutputWithContext(ctx context.Context) BaseImageTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerPtrOutput)
}

// The trigger based on base image dependency.
type BaseImageTriggerOutput struct{ *pulumi.OutputState }

func (BaseImageTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageTrigger)(nil)).Elem()
}

func (o BaseImageTriggerOutput) ToBaseImageTriggerOutput() BaseImageTriggerOutput {
	return o
}

func (o BaseImageTriggerOutput) ToBaseImageTriggerOutputWithContext(ctx context.Context) BaseImageTriggerOutput {
	return o
}

func (o BaseImageTriggerOutput) ToBaseImageTriggerPtrOutput() BaseImageTriggerPtrOutput {
	return o.ToBaseImageTriggerPtrOutputWithContext(context.Background())
}

func (o BaseImageTriggerOutput) ToBaseImageTriggerPtrOutputWithContext(ctx context.Context) BaseImageTriggerPtrOutput {
	return o.ApplyT(func(v BaseImageTrigger) *BaseImageTrigger {
		return &v
	}).(BaseImageTriggerPtrOutput)
}

// The type of the auto trigger for base image dependency updates.
func (o BaseImageTriggerOutput) BaseImageTriggerType() pulumi.StringOutput {
	return o.ApplyT(func(v BaseImageTrigger) string { return v.BaseImageTriggerType }).(pulumi.StringOutput)
}

// The name of the trigger.
func (o BaseImageTriggerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BaseImageTrigger) string { return v.Name }).(pulumi.StringOutput)
}

// The current status of trigger.
func (o BaseImageTriggerOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageTrigger) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type BaseImageTriggerPtrOutput struct{ *pulumi.OutputState }

func (BaseImageTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseImageTrigger)(nil)).Elem()
}

func (o BaseImageTriggerPtrOutput) ToBaseImageTriggerPtrOutput() BaseImageTriggerPtrOutput {
	return o
}

func (o BaseImageTriggerPtrOutput) ToBaseImageTriggerPtrOutputWithContext(ctx context.Context) BaseImageTriggerPtrOutput {
	return o
}

func (o BaseImageTriggerPtrOutput) Elem() BaseImageTriggerOutput {
	return o.ApplyT(func(v *BaseImageTrigger) BaseImageTrigger { return *v }).(BaseImageTriggerOutput)
}

// The type of the auto trigger for base image dependency updates.
func (o BaseImageTriggerPtrOutput) BaseImageTriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTrigger) *string {
		if v == nil {
			return nil
		}
		return &v.BaseImageTriggerType
	}).(pulumi.StringPtrOutput)
}

// The name of the trigger.
func (o BaseImageTriggerPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTrigger) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The current status of trigger.
func (o BaseImageTriggerPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTrigger) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The trigger based on base image dependency.
type BaseImageTriggerInvokeResponse struct {
	// The type of the auto trigger for base image dependency updates.
	BaseImageTriggerType string `pulumi:"baseImageTriggerType"`
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// BaseImageTriggerInvokeResponseInput is an input type that accepts BaseImageTriggerInvokeResponseArgs and BaseImageTriggerInvokeResponseOutput values.
// You can construct a concrete instance of `BaseImageTriggerInvokeResponseInput` via:
//
//          BaseImageTriggerInvokeResponseArgs{...}
type BaseImageTriggerInvokeResponseInput interface {
	pulumi.Input

	ToBaseImageTriggerInvokeResponseOutput() BaseImageTriggerInvokeResponseOutput
	ToBaseImageTriggerInvokeResponseOutputWithContext(context.Context) BaseImageTriggerInvokeResponseOutput
}

// The trigger based on base image dependency.
type BaseImageTriggerInvokeResponseArgs struct {
	// The type of the auto trigger for base image dependency updates.
	BaseImageTriggerType pulumi.StringInput `pulumi:"baseImageTriggerType"`
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (BaseImageTriggerInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageTriggerInvokeResponse)(nil)).Elem()
}

func (i BaseImageTriggerInvokeResponseArgs) ToBaseImageTriggerInvokeResponseOutput() BaseImageTriggerInvokeResponseOutput {
	return i.ToBaseImageTriggerInvokeResponseOutputWithContext(context.Background())
}

func (i BaseImageTriggerInvokeResponseArgs) ToBaseImageTriggerInvokeResponseOutputWithContext(ctx context.Context) BaseImageTriggerInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerInvokeResponseOutput)
}

func (i BaseImageTriggerInvokeResponseArgs) ToBaseImageTriggerInvokeResponsePtrOutput() BaseImageTriggerInvokeResponsePtrOutput {
	return i.ToBaseImageTriggerInvokeResponsePtrOutputWithContext(context.Background())
}

func (i BaseImageTriggerInvokeResponseArgs) ToBaseImageTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerInvokeResponseOutput).ToBaseImageTriggerInvokeResponsePtrOutputWithContext(ctx)
}

// BaseImageTriggerInvokeResponsePtrInput is an input type that accepts BaseImageTriggerInvokeResponseArgs, BaseImageTriggerInvokeResponsePtr and BaseImageTriggerInvokeResponsePtrOutput values.
// You can construct a concrete instance of `BaseImageTriggerInvokeResponsePtrInput` via:
//
//          BaseImageTriggerInvokeResponseArgs{...}
//
//  or:
//
//          nil
type BaseImageTriggerInvokeResponsePtrInput interface {
	pulumi.Input

	ToBaseImageTriggerInvokeResponsePtrOutput() BaseImageTriggerInvokeResponsePtrOutput
	ToBaseImageTriggerInvokeResponsePtrOutputWithContext(context.Context) BaseImageTriggerInvokeResponsePtrOutput
}

type baseImageTriggerInvokeResponsePtrType BaseImageTriggerInvokeResponseArgs

func BaseImageTriggerInvokeResponsePtr(v *BaseImageTriggerInvokeResponseArgs) BaseImageTriggerInvokeResponsePtrInput {
	return (*baseImageTriggerInvokeResponsePtrType)(v)
}

func (*baseImageTriggerInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseImageTriggerInvokeResponse)(nil)).Elem()
}

func (i *baseImageTriggerInvokeResponsePtrType) ToBaseImageTriggerInvokeResponsePtrOutput() BaseImageTriggerInvokeResponsePtrOutput {
	return i.ToBaseImageTriggerInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *baseImageTriggerInvokeResponsePtrType) ToBaseImageTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerInvokeResponsePtrOutput)
}

// The trigger based on base image dependency.
type BaseImageTriggerInvokeResponseOutput struct{ *pulumi.OutputState }

func (BaseImageTriggerInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageTriggerInvokeResponse)(nil)).Elem()
}

func (o BaseImageTriggerInvokeResponseOutput) ToBaseImageTriggerInvokeResponseOutput() BaseImageTriggerInvokeResponseOutput {
	return o
}

func (o BaseImageTriggerInvokeResponseOutput) ToBaseImageTriggerInvokeResponseOutputWithContext(ctx context.Context) BaseImageTriggerInvokeResponseOutput {
	return o
}

func (o BaseImageTriggerInvokeResponseOutput) ToBaseImageTriggerInvokeResponsePtrOutput() BaseImageTriggerInvokeResponsePtrOutput {
	return o.ToBaseImageTriggerInvokeResponsePtrOutputWithContext(context.Background())
}

func (o BaseImageTriggerInvokeResponseOutput) ToBaseImageTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerInvokeResponsePtrOutput {
	return o.ApplyT(func(v BaseImageTriggerInvokeResponse) *BaseImageTriggerInvokeResponse {
		return &v
	}).(BaseImageTriggerInvokeResponsePtrOutput)
}

// The type of the auto trigger for base image dependency updates.
func (o BaseImageTriggerInvokeResponseOutput) BaseImageTriggerType() pulumi.StringOutput {
	return o.ApplyT(func(v BaseImageTriggerInvokeResponse) string { return v.BaseImageTriggerType }).(pulumi.StringOutput)
}

// The name of the trigger.
func (o BaseImageTriggerInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BaseImageTriggerInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The current status of trigger.
func (o BaseImageTriggerInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageTriggerInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type BaseImageTriggerInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (BaseImageTriggerInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseImageTriggerInvokeResponse)(nil)).Elem()
}

func (o BaseImageTriggerInvokeResponsePtrOutput) ToBaseImageTriggerInvokeResponsePtrOutput() BaseImageTriggerInvokeResponsePtrOutput {
	return o
}

func (o BaseImageTriggerInvokeResponsePtrOutput) ToBaseImageTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerInvokeResponsePtrOutput {
	return o
}

func (o BaseImageTriggerInvokeResponsePtrOutput) Elem() BaseImageTriggerInvokeResponseOutput {
	return o.ApplyT(func(v *BaseImageTriggerInvokeResponse) BaseImageTriggerInvokeResponse { return *v }).(BaseImageTriggerInvokeResponseOutput)
}

// The type of the auto trigger for base image dependency updates.
func (o BaseImageTriggerInvokeResponsePtrOutput) BaseImageTriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BaseImageTriggerType
	}).(pulumi.StringPtrOutput)
}

// The name of the trigger.
func (o BaseImageTriggerInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The current status of trigger.
func (o BaseImageTriggerInvokeResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The trigger based on base image dependency.
type BaseImageTriggerResponse struct {
	// The type of the auto trigger for base image dependency updates.
	BaseImageTriggerType string `pulumi:"baseImageTriggerType"`
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// BaseImageTriggerResponseInput is an input type that accepts BaseImageTriggerResponseArgs and BaseImageTriggerResponseOutput values.
// You can construct a concrete instance of `BaseImageTriggerResponseInput` via:
//
//          BaseImageTriggerResponseArgs{...}
type BaseImageTriggerResponseInput interface {
	pulumi.Input

	ToBaseImageTriggerResponseOutput() BaseImageTriggerResponseOutput
	ToBaseImageTriggerResponseOutputWithContext(context.Context) BaseImageTriggerResponseOutput
}

// The trigger based on base image dependency.
type BaseImageTriggerResponseArgs struct {
	// The type of the auto trigger for base image dependency updates.
	BaseImageTriggerType pulumi.StringInput `pulumi:"baseImageTriggerType"`
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (BaseImageTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageTriggerResponse)(nil)).Elem()
}

func (i BaseImageTriggerResponseArgs) ToBaseImageTriggerResponseOutput() BaseImageTriggerResponseOutput {
	return i.ToBaseImageTriggerResponseOutputWithContext(context.Background())
}

func (i BaseImageTriggerResponseArgs) ToBaseImageTriggerResponseOutputWithContext(ctx context.Context) BaseImageTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerResponseOutput)
}

func (i BaseImageTriggerResponseArgs) ToBaseImageTriggerResponsePtrOutput() BaseImageTriggerResponsePtrOutput {
	return i.ToBaseImageTriggerResponsePtrOutputWithContext(context.Background())
}

func (i BaseImageTriggerResponseArgs) ToBaseImageTriggerResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerResponseOutput).ToBaseImageTriggerResponsePtrOutputWithContext(ctx)
}

// BaseImageTriggerResponsePtrInput is an input type that accepts BaseImageTriggerResponseArgs, BaseImageTriggerResponsePtr and BaseImageTriggerResponsePtrOutput values.
// You can construct a concrete instance of `BaseImageTriggerResponsePtrInput` via:
//
//          BaseImageTriggerResponseArgs{...}
//
//  or:
//
//          nil
type BaseImageTriggerResponsePtrInput interface {
	pulumi.Input

	ToBaseImageTriggerResponsePtrOutput() BaseImageTriggerResponsePtrOutput
	ToBaseImageTriggerResponsePtrOutputWithContext(context.Context) BaseImageTriggerResponsePtrOutput
}

type baseImageTriggerResponsePtrType BaseImageTriggerResponseArgs

func BaseImageTriggerResponsePtr(v *BaseImageTriggerResponseArgs) BaseImageTriggerResponsePtrInput {
	return (*baseImageTriggerResponsePtrType)(v)
}

func (*baseImageTriggerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseImageTriggerResponse)(nil)).Elem()
}

func (i *baseImageTriggerResponsePtrType) ToBaseImageTriggerResponsePtrOutput() BaseImageTriggerResponsePtrOutput {
	return i.ToBaseImageTriggerResponsePtrOutputWithContext(context.Background())
}

func (i *baseImageTriggerResponsePtrType) ToBaseImageTriggerResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerResponsePtrOutput)
}

// The trigger based on base image dependency.
type BaseImageTriggerResponseOutput struct{ *pulumi.OutputState }

func (BaseImageTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageTriggerResponse)(nil)).Elem()
}

func (o BaseImageTriggerResponseOutput) ToBaseImageTriggerResponseOutput() BaseImageTriggerResponseOutput {
	return o
}

func (o BaseImageTriggerResponseOutput) ToBaseImageTriggerResponseOutputWithContext(ctx context.Context) BaseImageTriggerResponseOutput {
	return o
}

func (o BaseImageTriggerResponseOutput) ToBaseImageTriggerResponsePtrOutput() BaseImageTriggerResponsePtrOutput {
	return o.ToBaseImageTriggerResponsePtrOutputWithContext(context.Background())
}

func (o BaseImageTriggerResponseOutput) ToBaseImageTriggerResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerResponsePtrOutput {
	return o.ApplyT(func(v BaseImageTriggerResponse) *BaseImageTriggerResponse {
		return &v
	}).(BaseImageTriggerResponsePtrOutput)
}

// The type of the auto trigger for base image dependency updates.
func (o BaseImageTriggerResponseOutput) BaseImageTriggerType() pulumi.StringOutput {
	return o.ApplyT(func(v BaseImageTriggerResponse) string { return v.BaseImageTriggerType }).(pulumi.StringOutput)
}

// The name of the trigger.
func (o BaseImageTriggerResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BaseImageTriggerResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The current status of trigger.
func (o BaseImageTriggerResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageTriggerResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type BaseImageTriggerResponsePtrOutput struct{ *pulumi.OutputState }

func (BaseImageTriggerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseImageTriggerResponse)(nil)).Elem()
}

func (o BaseImageTriggerResponsePtrOutput) ToBaseImageTriggerResponsePtrOutput() BaseImageTriggerResponsePtrOutput {
	return o
}

func (o BaseImageTriggerResponsePtrOutput) ToBaseImageTriggerResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerResponsePtrOutput {
	return o
}

func (o BaseImageTriggerResponsePtrOutput) Elem() BaseImageTriggerResponseOutput {
	return o.ApplyT(func(v *BaseImageTriggerResponse) BaseImageTriggerResponse { return *v }).(BaseImageTriggerResponseOutput)
}

// The type of the auto trigger for base image dependency updates.
func (o BaseImageTriggerResponsePtrOutput) BaseImageTriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BaseImageTriggerType
	}).(pulumi.StringPtrOutput)
}

// The name of the trigger.
func (o BaseImageTriggerResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The current status of trigger.
func (o BaseImageTriggerResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type Credentials struct {
	// Describes the credential parameters for accessing other custom registries. The key
	// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
	// the value of the item will be the registry credentials for accessing the registry.
	CustomRegistries map[string]CustomRegistryCredentials `pulumi:"customRegistries"`
	// Describes the credential parameters for accessing the source registry.
	SourceRegistry *SourceRegistryCredentials `pulumi:"sourceRegistry"`
}

// CredentialsInput is an input type that accepts CredentialsArgs and CredentialsOutput values.
// You can construct a concrete instance of `CredentialsInput` via:
//
//          CredentialsArgs{...}
type CredentialsInput interface {
	pulumi.Input

	ToCredentialsOutput() CredentialsOutput
	ToCredentialsOutputWithContext(context.Context) CredentialsOutput
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsArgs struct {
	// Describes the credential parameters for accessing other custom registries. The key
	// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
	// the value of the item will be the registry credentials for accessing the registry.
	CustomRegistries CustomRegistryCredentialsMapInput `pulumi:"customRegistries"`
	// Describes the credential parameters for accessing the source registry.
	SourceRegistry SourceRegistryCredentialsPtrInput `pulumi:"sourceRegistry"`
}

func (CredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Credentials)(nil)).Elem()
}

func (i CredentialsArgs) ToCredentialsOutput() CredentialsOutput {
	return i.ToCredentialsOutputWithContext(context.Background())
}

func (i CredentialsArgs) ToCredentialsOutputWithContext(ctx context.Context) CredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsOutput)
}

func (i CredentialsArgs) ToCredentialsPtrOutput() CredentialsPtrOutput {
	return i.ToCredentialsPtrOutputWithContext(context.Background())
}

func (i CredentialsArgs) ToCredentialsPtrOutputWithContext(ctx context.Context) CredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsOutput).ToCredentialsPtrOutputWithContext(ctx)
}

// CredentialsPtrInput is an input type that accepts CredentialsArgs, CredentialsPtr and CredentialsPtrOutput values.
// You can construct a concrete instance of `CredentialsPtrInput` via:
//
//          CredentialsArgs{...}
//
//  or:
//
//          nil
type CredentialsPtrInput interface {
	pulumi.Input

	ToCredentialsPtrOutput() CredentialsPtrOutput
	ToCredentialsPtrOutputWithContext(context.Context) CredentialsPtrOutput
}

type credentialsPtrType CredentialsArgs

func CredentialsPtr(v *CredentialsArgs) CredentialsPtrInput {
	return (*credentialsPtrType)(v)
}

func (*credentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Credentials)(nil)).Elem()
}

func (i *credentialsPtrType) ToCredentialsPtrOutput() CredentialsPtrOutput {
	return i.ToCredentialsPtrOutputWithContext(context.Background())
}

func (i *credentialsPtrType) ToCredentialsPtrOutputWithContext(ctx context.Context) CredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsPtrOutput)
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsOutput struct{ *pulumi.OutputState }

func (CredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Credentials)(nil)).Elem()
}

func (o CredentialsOutput) ToCredentialsOutput() CredentialsOutput {
	return o
}

func (o CredentialsOutput) ToCredentialsOutputWithContext(ctx context.Context) CredentialsOutput {
	return o
}

func (o CredentialsOutput) ToCredentialsPtrOutput() CredentialsPtrOutput {
	return o.ToCredentialsPtrOutputWithContext(context.Background())
}

func (o CredentialsOutput) ToCredentialsPtrOutputWithContext(ctx context.Context) CredentialsPtrOutput {
	return o.ApplyT(func(v Credentials) *Credentials {
		return &v
	}).(CredentialsPtrOutput)
}

// Describes the credential parameters for accessing other custom registries. The key
// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
// the value of the item will be the registry credentials for accessing the registry.
func (o CredentialsOutput) CustomRegistries() CustomRegistryCredentialsMapOutput {
	return o.ApplyT(func(v Credentials) map[string]CustomRegistryCredentials { return v.CustomRegistries }).(CustomRegistryCredentialsMapOutput)
}

// Describes the credential parameters for accessing the source registry.
func (o CredentialsOutput) SourceRegistry() SourceRegistryCredentialsPtrOutput {
	return o.ApplyT(func(v Credentials) *SourceRegistryCredentials { return v.SourceRegistry }).(SourceRegistryCredentialsPtrOutput)
}

type CredentialsPtrOutput struct{ *pulumi.OutputState }

func (CredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Credentials)(nil)).Elem()
}

func (o CredentialsPtrOutput) ToCredentialsPtrOutput() CredentialsPtrOutput {
	return o
}

func (o CredentialsPtrOutput) ToCredentialsPtrOutputWithContext(ctx context.Context) CredentialsPtrOutput {
	return o
}

func (o CredentialsPtrOutput) Elem() CredentialsOutput {
	return o.ApplyT(func(v *Credentials) Credentials { return *v }).(CredentialsOutput)
}

// Describes the credential parameters for accessing other custom registries. The key
// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
// the value of the item will be the registry credentials for accessing the registry.
func (o CredentialsPtrOutput) CustomRegistries() CustomRegistryCredentialsMapOutput {
	return o.ApplyT(func(v *Credentials) map[string]CustomRegistryCredentials {
		if v == nil {
			return nil
		}
		return v.CustomRegistries
	}).(CustomRegistryCredentialsMapOutput)
}

// Describes the credential parameters for accessing the source registry.
func (o CredentialsPtrOutput) SourceRegistry() SourceRegistryCredentialsPtrOutput {
	return o.ApplyT(func(v *Credentials) *SourceRegistryCredentials {
		if v == nil {
			return nil
		}
		return v.SourceRegistry
	}).(SourceRegistryCredentialsPtrOutput)
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsInvokeResponse struct {
	// Describes the credential parameters for accessing other custom registries. The key
	// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
	// the value of the item will be the registry credentials for accessing the registry.
	CustomRegistries map[string]CustomRegistryCredentialsInvokeResponse `pulumi:"customRegistries"`
	// Describes the credential parameters for accessing the source registry.
	SourceRegistry *SourceRegistryCredentialsInvokeResponse `pulumi:"sourceRegistry"`
}

// CredentialsInvokeResponseInput is an input type that accepts CredentialsInvokeResponseArgs and CredentialsInvokeResponseOutput values.
// You can construct a concrete instance of `CredentialsInvokeResponseInput` via:
//
//          CredentialsInvokeResponseArgs{...}
type CredentialsInvokeResponseInput interface {
	pulumi.Input

	ToCredentialsInvokeResponseOutput() CredentialsInvokeResponseOutput
	ToCredentialsInvokeResponseOutputWithContext(context.Context) CredentialsInvokeResponseOutput
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsInvokeResponseArgs struct {
	// Describes the credential parameters for accessing other custom registries. The key
	// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
	// the value of the item will be the registry credentials for accessing the registry.
	CustomRegistries CustomRegistryCredentialsInvokeResponseMapInput `pulumi:"customRegistries"`
	// Describes the credential parameters for accessing the source registry.
	SourceRegistry SourceRegistryCredentialsInvokeResponsePtrInput `pulumi:"sourceRegistry"`
}

func (CredentialsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialsInvokeResponse)(nil)).Elem()
}

func (i CredentialsInvokeResponseArgs) ToCredentialsInvokeResponseOutput() CredentialsInvokeResponseOutput {
	return i.ToCredentialsInvokeResponseOutputWithContext(context.Background())
}

func (i CredentialsInvokeResponseArgs) ToCredentialsInvokeResponseOutputWithContext(ctx context.Context) CredentialsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsInvokeResponseOutput)
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsInvokeResponseOutput struct{ *pulumi.OutputState }

func (CredentialsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialsInvokeResponse)(nil)).Elem()
}

func (o CredentialsInvokeResponseOutput) ToCredentialsInvokeResponseOutput() CredentialsInvokeResponseOutput {
	return o
}

func (o CredentialsInvokeResponseOutput) ToCredentialsInvokeResponseOutputWithContext(ctx context.Context) CredentialsInvokeResponseOutput {
	return o
}

// Describes the credential parameters for accessing other custom registries. The key
// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
// the value of the item will be the registry credentials for accessing the registry.
func (o CredentialsInvokeResponseOutput) CustomRegistries() CustomRegistryCredentialsInvokeResponseMapOutput {
	return o.ApplyT(func(v CredentialsInvokeResponse) map[string]CustomRegistryCredentialsInvokeResponse {
		return v.CustomRegistries
	}).(CustomRegistryCredentialsInvokeResponseMapOutput)
}

// Describes the credential parameters for accessing the source registry.
func (o CredentialsInvokeResponseOutput) SourceRegistry() SourceRegistryCredentialsInvokeResponsePtrOutput {
	return o.ApplyT(func(v CredentialsInvokeResponse) *SourceRegistryCredentialsInvokeResponse { return v.SourceRegistry }).(SourceRegistryCredentialsInvokeResponsePtrOutput)
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsResponse struct {
	// Describes the credential parameters for accessing other custom registries. The key
	// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
	// the value of the item will be the registry credentials for accessing the registry.
	CustomRegistries map[string]CustomRegistryCredentialsResponse `pulumi:"customRegistries"`
	// Describes the credential parameters for accessing the source registry.
	SourceRegistry *SourceRegistryCredentialsResponse `pulumi:"sourceRegistry"`
}

// CredentialsResponseInput is an input type that accepts CredentialsResponseArgs and CredentialsResponseOutput values.
// You can construct a concrete instance of `CredentialsResponseInput` via:
//
//          CredentialsResponseArgs{...}
type CredentialsResponseInput interface {
	pulumi.Input

	ToCredentialsResponseOutput() CredentialsResponseOutput
	ToCredentialsResponseOutputWithContext(context.Context) CredentialsResponseOutput
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsResponseArgs struct {
	// Describes the credential parameters for accessing other custom registries. The key
	// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
	// the value of the item will be the registry credentials for accessing the registry.
	CustomRegistries CustomRegistryCredentialsResponseMapInput `pulumi:"customRegistries"`
	// Describes the credential parameters for accessing the source registry.
	SourceRegistry SourceRegistryCredentialsResponsePtrInput `pulumi:"sourceRegistry"`
}

func (CredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialsResponse)(nil)).Elem()
}

func (i CredentialsResponseArgs) ToCredentialsResponseOutput() CredentialsResponseOutput {
	return i.ToCredentialsResponseOutputWithContext(context.Background())
}

func (i CredentialsResponseArgs) ToCredentialsResponseOutputWithContext(ctx context.Context) CredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsResponseOutput)
}

func (i CredentialsResponseArgs) ToCredentialsResponsePtrOutput() CredentialsResponsePtrOutput {
	return i.ToCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i CredentialsResponseArgs) ToCredentialsResponsePtrOutputWithContext(ctx context.Context) CredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsResponseOutput).ToCredentialsResponsePtrOutputWithContext(ctx)
}

// CredentialsResponsePtrInput is an input type that accepts CredentialsResponseArgs, CredentialsResponsePtr and CredentialsResponsePtrOutput values.
// You can construct a concrete instance of `CredentialsResponsePtrInput` via:
//
//          CredentialsResponseArgs{...}
//
//  or:
//
//          nil
type CredentialsResponsePtrInput interface {
	pulumi.Input

	ToCredentialsResponsePtrOutput() CredentialsResponsePtrOutput
	ToCredentialsResponsePtrOutputWithContext(context.Context) CredentialsResponsePtrOutput
}

type credentialsResponsePtrType CredentialsResponseArgs

func CredentialsResponsePtr(v *CredentialsResponseArgs) CredentialsResponsePtrInput {
	return (*credentialsResponsePtrType)(v)
}

func (*credentialsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CredentialsResponse)(nil)).Elem()
}

func (i *credentialsResponsePtrType) ToCredentialsResponsePtrOutput() CredentialsResponsePtrOutput {
	return i.ToCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i *credentialsResponsePtrType) ToCredentialsResponsePtrOutputWithContext(ctx context.Context) CredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsResponsePtrOutput)
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsResponseOutput struct{ *pulumi.OutputState }

func (CredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialsResponse)(nil)).Elem()
}

func (o CredentialsResponseOutput) ToCredentialsResponseOutput() CredentialsResponseOutput {
	return o
}

func (o CredentialsResponseOutput) ToCredentialsResponseOutputWithContext(ctx context.Context) CredentialsResponseOutput {
	return o
}

func (o CredentialsResponseOutput) ToCredentialsResponsePtrOutput() CredentialsResponsePtrOutput {
	return o.ToCredentialsResponsePtrOutputWithContext(context.Background())
}

func (o CredentialsResponseOutput) ToCredentialsResponsePtrOutputWithContext(ctx context.Context) CredentialsResponsePtrOutput {
	return o.ApplyT(func(v CredentialsResponse) *CredentialsResponse {
		return &v
	}).(CredentialsResponsePtrOutput)
}

// Describes the credential parameters for accessing other custom registries. The key
// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
// the value of the item will be the registry credentials for accessing the registry.
func (o CredentialsResponseOutput) CustomRegistries() CustomRegistryCredentialsResponseMapOutput {
	return o.ApplyT(func(v CredentialsResponse) map[string]CustomRegistryCredentialsResponse { return v.CustomRegistries }).(CustomRegistryCredentialsResponseMapOutput)
}

// Describes the credential parameters for accessing the source registry.
func (o CredentialsResponseOutput) SourceRegistry() SourceRegistryCredentialsResponsePtrOutput {
	return o.ApplyT(func(v CredentialsResponse) *SourceRegistryCredentialsResponse { return v.SourceRegistry }).(SourceRegistryCredentialsResponsePtrOutput)
}

type CredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (CredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CredentialsResponse)(nil)).Elem()
}

func (o CredentialsResponsePtrOutput) ToCredentialsResponsePtrOutput() CredentialsResponsePtrOutput {
	return o
}

func (o CredentialsResponsePtrOutput) ToCredentialsResponsePtrOutputWithContext(ctx context.Context) CredentialsResponsePtrOutput {
	return o
}

func (o CredentialsResponsePtrOutput) Elem() CredentialsResponseOutput {
	return o.ApplyT(func(v *CredentialsResponse) CredentialsResponse { return *v }).(CredentialsResponseOutput)
}

// Describes the credential parameters for accessing other custom registries. The key
// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
// the value of the item will be the registry credentials for accessing the registry.
func (o CredentialsResponsePtrOutput) CustomRegistries() CustomRegistryCredentialsResponseMapOutput {
	return o.ApplyT(func(v *CredentialsResponse) map[string]CustomRegistryCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.CustomRegistries
	}).(CustomRegistryCredentialsResponseMapOutput)
}

// Describes the credential parameters for accessing the source registry.
func (o CredentialsResponsePtrOutput) SourceRegistry() SourceRegistryCredentialsResponsePtrOutput {
	return o.ApplyT(func(v *CredentialsResponse) *SourceRegistryCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.SourceRegistry
	}).(SourceRegistryCredentialsResponsePtrOutput)
}

// Describes the credentials that will be used to access a custom registry during a run.
type CustomRegistryCredentials struct {
	// Indicates the managed identity assigned to the custom credential. If a user-assigned identity
	// this value is the Client ID. If a system-assigned identity, the value will be `system`. In
	// the case of a system-assigned identity, the Client ID will be determined by the runner. This
	// identity may be used to authenticate to key vault to retrieve credentials or it may be the only
	// source of authentication used for accessing the registry.
	Identity *string `pulumi:"identity"`
	// The password for logging into the custom registry. The password is a secret
	// object that allows multiple ways of providing the value for it.
	Password *SecretObject `pulumi:"password"`
	// The username for logging into the custom registry.
	UserName *SecretObject `pulumi:"userName"`
}

// CustomRegistryCredentialsInput is an input type that accepts CustomRegistryCredentialsArgs and CustomRegistryCredentialsOutput values.
// You can construct a concrete instance of `CustomRegistryCredentialsInput` via:
//
//          CustomRegistryCredentialsArgs{...}
type CustomRegistryCredentialsInput interface {
	pulumi.Input

	ToCustomRegistryCredentialsOutput() CustomRegistryCredentialsOutput
	ToCustomRegistryCredentialsOutputWithContext(context.Context) CustomRegistryCredentialsOutput
}

// Describes the credentials that will be used to access a custom registry during a run.
type CustomRegistryCredentialsArgs struct {
	// Indicates the managed identity assigned to the custom credential. If a user-assigned identity
	// this value is the Client ID. If a system-assigned identity, the value will be `system`. In
	// the case of a system-assigned identity, the Client ID will be determined by the runner. This
	// identity may be used to authenticate to key vault to retrieve credentials or it may be the only
	// source of authentication used for accessing the registry.
	Identity pulumi.StringPtrInput `pulumi:"identity"`
	// The password for logging into the custom registry. The password is a secret
	// object that allows multiple ways of providing the value for it.
	Password SecretObjectPtrInput `pulumi:"password"`
	// The username for logging into the custom registry.
	UserName SecretObjectPtrInput `pulumi:"userName"`
}

func (CustomRegistryCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRegistryCredentials)(nil)).Elem()
}

func (i CustomRegistryCredentialsArgs) ToCustomRegistryCredentialsOutput() CustomRegistryCredentialsOutput {
	return i.ToCustomRegistryCredentialsOutputWithContext(context.Background())
}

func (i CustomRegistryCredentialsArgs) ToCustomRegistryCredentialsOutputWithContext(ctx context.Context) CustomRegistryCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRegistryCredentialsOutput)
}

// CustomRegistryCredentialsMapInput is an input type that accepts CustomRegistryCredentialsMap and CustomRegistryCredentialsMapOutput values.
// You can construct a concrete instance of `CustomRegistryCredentialsMapInput` via:
//
//          CustomRegistryCredentialsMap{ "key": CustomRegistryCredentialsArgs{...} }
type CustomRegistryCredentialsMapInput interface {
	pulumi.Input

	ToCustomRegistryCredentialsMapOutput() CustomRegistryCredentialsMapOutput
	ToCustomRegistryCredentialsMapOutputWithContext(context.Context) CustomRegistryCredentialsMapOutput
}

type CustomRegistryCredentialsMap map[string]CustomRegistryCredentialsInput

func (CustomRegistryCredentialsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CustomRegistryCredentials)(nil)).Elem()
}

func (i CustomRegistryCredentialsMap) ToCustomRegistryCredentialsMapOutput() CustomRegistryCredentialsMapOutput {
	return i.ToCustomRegistryCredentialsMapOutputWithContext(context.Background())
}

func (i CustomRegistryCredentialsMap) ToCustomRegistryCredentialsMapOutputWithContext(ctx context.Context) CustomRegistryCredentialsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRegistryCredentialsMapOutput)
}

// Describes the credentials that will be used to access a custom registry during a run.
type CustomRegistryCredentialsOutput struct{ *pulumi.OutputState }

func (CustomRegistryCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRegistryCredentials)(nil)).Elem()
}

func (o CustomRegistryCredentialsOutput) ToCustomRegistryCredentialsOutput() CustomRegistryCredentialsOutput {
	return o
}

func (o CustomRegistryCredentialsOutput) ToCustomRegistryCredentialsOutputWithContext(ctx context.Context) CustomRegistryCredentialsOutput {
	return o
}

// Indicates the managed identity assigned to the custom credential. If a user-assigned identity
// this value is the Client ID. If a system-assigned identity, the value will be `system`. In
// the case of a system-assigned identity, the Client ID will be determined by the runner. This
// identity may be used to authenticate to key vault to retrieve credentials or it may be the only
// source of authentication used for accessing the registry.
func (o CustomRegistryCredentialsOutput) Identity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRegistryCredentials) *string { return v.Identity }).(pulumi.StringPtrOutput)
}

// The password for logging into the custom registry. The password is a secret
// object that allows multiple ways of providing the value for it.
func (o CustomRegistryCredentialsOutput) Password() SecretObjectPtrOutput {
	return o.ApplyT(func(v CustomRegistryCredentials) *SecretObject { return v.Password }).(SecretObjectPtrOutput)
}

// The username for logging into the custom registry.
func (o CustomRegistryCredentialsOutput) UserName() SecretObjectPtrOutput {
	return o.ApplyT(func(v CustomRegistryCredentials) *SecretObject { return v.UserName }).(SecretObjectPtrOutput)
}

type CustomRegistryCredentialsMapOutput struct{ *pulumi.OutputState }

func (CustomRegistryCredentialsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CustomRegistryCredentials)(nil)).Elem()
}

func (o CustomRegistryCredentialsMapOutput) ToCustomRegistryCredentialsMapOutput() CustomRegistryCredentialsMapOutput {
	return o
}

func (o CustomRegistryCredentialsMapOutput) ToCustomRegistryCredentialsMapOutputWithContext(ctx context.Context) CustomRegistryCredentialsMapOutput {
	return o
}

func (o CustomRegistryCredentialsMapOutput) MapIndex(k pulumi.StringInput) CustomRegistryCredentialsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CustomRegistryCredentials {
		return vs[0].(map[string]CustomRegistryCredentials)[vs[1].(string)]
	}).(CustomRegistryCredentialsOutput)
}

// Describes the credentials that will be used to access a custom registry during a run.
type CustomRegistryCredentialsInvokeResponse struct {
	// Indicates the managed identity assigned to the custom credential. If a user-assigned identity
	// this value is the Client ID. If a system-assigned identity, the value will be `system`. In
	// the case of a system-assigned identity, the Client ID will be determined by the runner. This
	// identity may be used to authenticate to key vault to retrieve credentials or it may be the only
	// source of authentication used for accessing the registry.
	Identity *string `pulumi:"identity"`
	// The password for logging into the custom registry. The password is a secret
	// object that allows multiple ways of providing the value for it.
	Password *SecretObjectInvokeResponse `pulumi:"password"`
	// The username for logging into the custom registry.
	UserName *SecretObjectInvokeResponse `pulumi:"userName"`
}

// CustomRegistryCredentialsInvokeResponseInput is an input type that accepts CustomRegistryCredentialsInvokeResponseArgs and CustomRegistryCredentialsInvokeResponseOutput values.
// You can construct a concrete instance of `CustomRegistryCredentialsInvokeResponseInput` via:
//
//          CustomRegistryCredentialsInvokeResponseArgs{...}
type CustomRegistryCredentialsInvokeResponseInput interface {
	pulumi.Input

	ToCustomRegistryCredentialsInvokeResponseOutput() CustomRegistryCredentialsInvokeResponseOutput
	ToCustomRegistryCredentialsInvokeResponseOutputWithContext(context.Context) CustomRegistryCredentialsInvokeResponseOutput
}

// Describes the credentials that will be used to access a custom registry during a run.
type CustomRegistryCredentialsInvokeResponseArgs struct {
	// Indicates the managed identity assigned to the custom credential. If a user-assigned identity
	// this value is the Client ID. If a system-assigned identity, the value will be `system`. In
	// the case of a system-assigned identity, the Client ID will be determined by the runner. This
	// identity may be used to authenticate to key vault to retrieve credentials or it may be the only
	// source of authentication used for accessing the registry.
	Identity pulumi.StringPtrInput `pulumi:"identity"`
	// The password for logging into the custom registry. The password is a secret
	// object that allows multiple ways of providing the value for it.
	Password SecretObjectInvokeResponsePtrInput `pulumi:"password"`
	// The username for logging into the custom registry.
	UserName SecretObjectInvokeResponsePtrInput `pulumi:"userName"`
}

func (CustomRegistryCredentialsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRegistryCredentialsInvokeResponse)(nil)).Elem()
}

func (i CustomRegistryCredentialsInvokeResponseArgs) ToCustomRegistryCredentialsInvokeResponseOutput() CustomRegistryCredentialsInvokeResponseOutput {
	return i.ToCustomRegistryCredentialsInvokeResponseOutputWithContext(context.Background())
}

func (i CustomRegistryCredentialsInvokeResponseArgs) ToCustomRegistryCredentialsInvokeResponseOutputWithContext(ctx context.Context) CustomRegistryCredentialsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRegistryCredentialsInvokeResponseOutput)
}

// CustomRegistryCredentialsInvokeResponseMapInput is an input type that accepts CustomRegistryCredentialsInvokeResponseMap and CustomRegistryCredentialsInvokeResponseMapOutput values.
// You can construct a concrete instance of `CustomRegistryCredentialsInvokeResponseMapInput` via:
//
//          CustomRegistryCredentialsInvokeResponseMap{ "key": CustomRegistryCredentialsInvokeResponseArgs{...} }
type CustomRegistryCredentialsInvokeResponseMapInput interface {
	pulumi.Input

	ToCustomRegistryCredentialsInvokeResponseMapOutput() CustomRegistryCredentialsInvokeResponseMapOutput
	ToCustomRegistryCredentialsInvokeResponseMapOutputWithContext(context.Context) CustomRegistryCredentialsInvokeResponseMapOutput
}

type CustomRegistryCredentialsInvokeResponseMap map[string]CustomRegistryCredentialsInvokeResponseInput

func (CustomRegistryCredentialsInvokeResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CustomRegistryCredentialsInvokeResponse)(nil)).Elem()
}

func (i CustomRegistryCredentialsInvokeResponseMap) ToCustomRegistryCredentialsInvokeResponseMapOutput() CustomRegistryCredentialsInvokeResponseMapOutput {
	return i.ToCustomRegistryCredentialsInvokeResponseMapOutputWithContext(context.Background())
}

func (i CustomRegistryCredentialsInvokeResponseMap) ToCustomRegistryCredentialsInvokeResponseMapOutputWithContext(ctx context.Context) CustomRegistryCredentialsInvokeResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRegistryCredentialsInvokeResponseMapOutput)
}

// Describes the credentials that will be used to access a custom registry during a run.
type CustomRegistryCredentialsInvokeResponseOutput struct{ *pulumi.OutputState }

func (CustomRegistryCredentialsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRegistryCredentialsInvokeResponse)(nil)).Elem()
}

func (o CustomRegistryCredentialsInvokeResponseOutput) ToCustomRegistryCredentialsInvokeResponseOutput() CustomRegistryCredentialsInvokeResponseOutput {
	return o
}

func (o CustomRegistryCredentialsInvokeResponseOutput) ToCustomRegistryCredentialsInvokeResponseOutputWithContext(ctx context.Context) CustomRegistryCredentialsInvokeResponseOutput {
	return o
}

// Indicates the managed identity assigned to the custom credential. If a user-assigned identity
// this value is the Client ID. If a system-assigned identity, the value will be `system`. In
// the case of a system-assigned identity, the Client ID will be determined by the runner. This
// identity may be used to authenticate to key vault to retrieve credentials or it may be the only
// source of authentication used for accessing the registry.
func (o CustomRegistryCredentialsInvokeResponseOutput) Identity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRegistryCredentialsInvokeResponse) *string { return v.Identity }).(pulumi.StringPtrOutput)
}

// The password for logging into the custom registry. The password is a secret
// object that allows multiple ways of providing the value for it.
func (o CustomRegistryCredentialsInvokeResponseOutput) Password() SecretObjectInvokeResponsePtrOutput {
	return o.ApplyT(func(v CustomRegistryCredentialsInvokeResponse) *SecretObjectInvokeResponse { return v.Password }).(SecretObjectInvokeResponsePtrOutput)
}

// The username for logging into the custom registry.
func (o CustomRegistryCredentialsInvokeResponseOutput) UserName() SecretObjectInvokeResponsePtrOutput {
	return o.ApplyT(func(v CustomRegistryCredentialsInvokeResponse) *SecretObjectInvokeResponse { return v.UserName }).(SecretObjectInvokeResponsePtrOutput)
}

type CustomRegistryCredentialsInvokeResponseMapOutput struct{ *pulumi.OutputState }

func (CustomRegistryCredentialsInvokeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CustomRegistryCredentialsInvokeResponse)(nil)).Elem()
}

func (o CustomRegistryCredentialsInvokeResponseMapOutput) ToCustomRegistryCredentialsInvokeResponseMapOutput() CustomRegistryCredentialsInvokeResponseMapOutput {
	return o
}

func (o CustomRegistryCredentialsInvokeResponseMapOutput) ToCustomRegistryCredentialsInvokeResponseMapOutputWithContext(ctx context.Context) CustomRegistryCredentialsInvokeResponseMapOutput {
	return o
}

func (o CustomRegistryCredentialsInvokeResponseMapOutput) MapIndex(k pulumi.StringInput) CustomRegistryCredentialsInvokeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CustomRegistryCredentialsInvokeResponse {
		return vs[0].(map[string]CustomRegistryCredentialsInvokeResponse)[vs[1].(string)]
	}).(CustomRegistryCredentialsInvokeResponseOutput)
}

// Describes the credentials that will be used to access a custom registry during a run.
type CustomRegistryCredentialsResponse struct {
	// Indicates the managed identity assigned to the custom credential. If a user-assigned identity
	// this value is the Client ID. If a system-assigned identity, the value will be `system`. In
	// the case of a system-assigned identity, the Client ID will be determined by the runner. This
	// identity may be used to authenticate to key vault to retrieve credentials or it may be the only
	// source of authentication used for accessing the registry.
	Identity *string `pulumi:"identity"`
	// The password for logging into the custom registry. The password is a secret
	// object that allows multiple ways of providing the value for it.
	Password *SecretObjectResponse `pulumi:"password"`
	// The username for logging into the custom registry.
	UserName *SecretObjectResponse `pulumi:"userName"`
}

// CustomRegistryCredentialsResponseInput is an input type that accepts CustomRegistryCredentialsResponseArgs and CustomRegistryCredentialsResponseOutput values.
// You can construct a concrete instance of `CustomRegistryCredentialsResponseInput` via:
//
//          CustomRegistryCredentialsResponseArgs{...}
type CustomRegistryCredentialsResponseInput interface {
	pulumi.Input

	ToCustomRegistryCredentialsResponseOutput() CustomRegistryCredentialsResponseOutput
	ToCustomRegistryCredentialsResponseOutputWithContext(context.Context) CustomRegistryCredentialsResponseOutput
}

// Describes the credentials that will be used to access a custom registry during a run.
type CustomRegistryCredentialsResponseArgs struct {
	// Indicates the managed identity assigned to the custom credential. If a user-assigned identity
	// this value is the Client ID. If a system-assigned identity, the value will be `system`. In
	// the case of a system-assigned identity, the Client ID will be determined by the runner. This
	// identity may be used to authenticate to key vault to retrieve credentials or it may be the only
	// source of authentication used for accessing the registry.
	Identity pulumi.StringPtrInput `pulumi:"identity"`
	// The password for logging into the custom registry. The password is a secret
	// object that allows multiple ways of providing the value for it.
	Password SecretObjectResponsePtrInput `pulumi:"password"`
	// The username for logging into the custom registry.
	UserName SecretObjectResponsePtrInput `pulumi:"userName"`
}

func (CustomRegistryCredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRegistryCredentialsResponse)(nil)).Elem()
}

func (i CustomRegistryCredentialsResponseArgs) ToCustomRegistryCredentialsResponseOutput() CustomRegistryCredentialsResponseOutput {
	return i.ToCustomRegistryCredentialsResponseOutputWithContext(context.Background())
}

func (i CustomRegistryCredentialsResponseArgs) ToCustomRegistryCredentialsResponseOutputWithContext(ctx context.Context) CustomRegistryCredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRegistryCredentialsResponseOutput)
}

// CustomRegistryCredentialsResponseMapInput is an input type that accepts CustomRegistryCredentialsResponseMap and CustomRegistryCredentialsResponseMapOutput values.
// You can construct a concrete instance of `CustomRegistryCredentialsResponseMapInput` via:
//
//          CustomRegistryCredentialsResponseMap{ "key": CustomRegistryCredentialsResponseArgs{...} }
type CustomRegistryCredentialsResponseMapInput interface {
	pulumi.Input

	ToCustomRegistryCredentialsResponseMapOutput() CustomRegistryCredentialsResponseMapOutput
	ToCustomRegistryCredentialsResponseMapOutputWithContext(context.Context) CustomRegistryCredentialsResponseMapOutput
}

type CustomRegistryCredentialsResponseMap map[string]CustomRegistryCredentialsResponseInput

func (CustomRegistryCredentialsResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CustomRegistryCredentialsResponse)(nil)).Elem()
}

func (i CustomRegistryCredentialsResponseMap) ToCustomRegistryCredentialsResponseMapOutput() CustomRegistryCredentialsResponseMapOutput {
	return i.ToCustomRegistryCredentialsResponseMapOutputWithContext(context.Background())
}

func (i CustomRegistryCredentialsResponseMap) ToCustomRegistryCredentialsResponseMapOutputWithContext(ctx context.Context) CustomRegistryCredentialsResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRegistryCredentialsResponseMapOutput)
}

// Describes the credentials that will be used to access a custom registry during a run.
type CustomRegistryCredentialsResponseOutput struct{ *pulumi.OutputState }

func (CustomRegistryCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRegistryCredentialsResponse)(nil)).Elem()
}

func (o CustomRegistryCredentialsResponseOutput) ToCustomRegistryCredentialsResponseOutput() CustomRegistryCredentialsResponseOutput {
	return o
}

func (o CustomRegistryCredentialsResponseOutput) ToCustomRegistryCredentialsResponseOutputWithContext(ctx context.Context) CustomRegistryCredentialsResponseOutput {
	return o
}

// Indicates the managed identity assigned to the custom credential. If a user-assigned identity
// this value is the Client ID. If a system-assigned identity, the value will be `system`. In
// the case of a system-assigned identity, the Client ID will be determined by the runner. This
// identity may be used to authenticate to key vault to retrieve credentials or it may be the only
// source of authentication used for accessing the registry.
func (o CustomRegistryCredentialsResponseOutput) Identity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRegistryCredentialsResponse) *string { return v.Identity }).(pulumi.StringPtrOutput)
}

// The password for logging into the custom registry. The password is a secret
// object that allows multiple ways of providing the value for it.
func (o CustomRegistryCredentialsResponseOutput) Password() SecretObjectResponsePtrOutput {
	return o.ApplyT(func(v CustomRegistryCredentialsResponse) *SecretObjectResponse { return v.Password }).(SecretObjectResponsePtrOutput)
}

// The username for logging into the custom registry.
func (o CustomRegistryCredentialsResponseOutput) UserName() SecretObjectResponsePtrOutput {
	return o.ApplyT(func(v CustomRegistryCredentialsResponse) *SecretObjectResponse { return v.UserName }).(SecretObjectResponsePtrOutput)
}

type CustomRegistryCredentialsResponseMapOutput struct{ *pulumi.OutputState }

func (CustomRegistryCredentialsResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CustomRegistryCredentialsResponse)(nil)).Elem()
}

func (o CustomRegistryCredentialsResponseMapOutput) ToCustomRegistryCredentialsResponseMapOutput() CustomRegistryCredentialsResponseMapOutput {
	return o
}

func (o CustomRegistryCredentialsResponseMapOutput) ToCustomRegistryCredentialsResponseMapOutputWithContext(ctx context.Context) CustomRegistryCredentialsResponseMapOutput {
	return o
}

func (o CustomRegistryCredentialsResponseMapOutput) MapIndex(k pulumi.StringInput) CustomRegistryCredentialsResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CustomRegistryCredentialsResponse {
		return vs[0].(map[string]CustomRegistryCredentialsResponse)[vs[1].(string)]
	}).(CustomRegistryCredentialsResponseOutput)
}

// The Docker build step.
type DockerBuildStepInvokeResponse struct {
	// The collection of override arguments to be used when executing this build step.
	Arguments []ArgumentInvokeResponse `pulumi:"arguments"`
	// List of base image dependencies for a step.
	BaseImageDependencies []BaseImageDependencyInvokeResponse `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath *string `pulumi:"contextPath"`
	// The Docker file path relative to the source context.
	DockerFilePath string `pulumi:"dockerFilePath"`
	// The fully qualified image names including the repository and tag.
	ImageNames []string `pulumi:"imageNames"`
	// The value of this property indicates whether the image built should be pushed to the registry or not.
	IsPushEnabled *bool `pulumi:"isPushEnabled"`
	// The value of this property indicates whether the image cache is enabled or not.
	NoCache *bool `pulumi:"noCache"`
	// The name of the target build stage for the docker build.
	Target *string `pulumi:"target"`
	// The type of the step.
	// Expected value is 'Docker'.
	Type string `pulumi:"type"`
}

// DockerBuildStepInvokeResponseInput is an input type that accepts DockerBuildStepInvokeResponseArgs and DockerBuildStepInvokeResponseOutput values.
// You can construct a concrete instance of `DockerBuildStepInvokeResponseInput` via:
//
//          DockerBuildStepInvokeResponseArgs{...}
type DockerBuildStepInvokeResponseInput interface {
	pulumi.Input

	ToDockerBuildStepInvokeResponseOutput() DockerBuildStepInvokeResponseOutput
	ToDockerBuildStepInvokeResponseOutputWithContext(context.Context) DockerBuildStepInvokeResponseOutput
}

// The Docker build step.
type DockerBuildStepInvokeResponseArgs struct {
	// The collection of override arguments to be used when executing this build step.
	Arguments ArgumentInvokeResponseArrayInput `pulumi:"arguments"`
	// List of base image dependencies for a step.
	BaseImageDependencies BaseImageDependencyInvokeResponseArrayInput `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// The Docker file path relative to the source context.
	DockerFilePath pulumi.StringInput `pulumi:"dockerFilePath"`
	// The fully qualified image names including the repository and tag.
	ImageNames pulumi.StringArrayInput `pulumi:"imageNames"`
	// The value of this property indicates whether the image built should be pushed to the registry or not.
	IsPushEnabled pulumi.BoolPtrInput `pulumi:"isPushEnabled"`
	// The value of this property indicates whether the image cache is enabled or not.
	NoCache pulumi.BoolPtrInput `pulumi:"noCache"`
	// The name of the target build stage for the docker build.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The type of the step.
	// Expected value is 'Docker'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DockerBuildStepInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildStepInvokeResponse)(nil)).Elem()
}

func (i DockerBuildStepInvokeResponseArgs) ToDockerBuildStepInvokeResponseOutput() DockerBuildStepInvokeResponseOutput {
	return i.ToDockerBuildStepInvokeResponseOutputWithContext(context.Background())
}

func (i DockerBuildStepInvokeResponseArgs) ToDockerBuildStepInvokeResponseOutputWithContext(ctx context.Context) DockerBuildStepInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerBuildStepInvokeResponseOutput)
}

// The Docker build step.
type DockerBuildStepInvokeResponseOutput struct{ *pulumi.OutputState }

func (DockerBuildStepInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildStepInvokeResponse)(nil)).Elem()
}

func (o DockerBuildStepInvokeResponseOutput) ToDockerBuildStepInvokeResponseOutput() DockerBuildStepInvokeResponseOutput {
	return o
}

func (o DockerBuildStepInvokeResponseOutput) ToDockerBuildStepInvokeResponseOutputWithContext(ctx context.Context) DockerBuildStepInvokeResponseOutput {
	return o
}

// The collection of override arguments to be used when executing this build step.
func (o DockerBuildStepInvokeResponseOutput) Arguments() ArgumentInvokeResponseArrayOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) []ArgumentInvokeResponse { return v.Arguments }).(ArgumentInvokeResponseArrayOutput)
}

// List of base image dependencies for a step.
func (o DockerBuildStepInvokeResponseOutput) BaseImageDependencies() BaseImageDependencyInvokeResponseArrayOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) []BaseImageDependencyInvokeResponse {
		return v.BaseImageDependencies
	}).(BaseImageDependencyInvokeResponseArrayOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o DockerBuildStepInvokeResponseOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o DockerBuildStepInvokeResponseOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// The Docker file path relative to the source context.
func (o DockerBuildStepInvokeResponseOutput) DockerFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) string { return v.DockerFilePath }).(pulumi.StringOutput)
}

// The fully qualified image names including the repository and tag.
func (o DockerBuildStepInvokeResponseOutput) ImageNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) []string { return v.ImageNames }).(pulumi.StringArrayOutput)
}

// The value of this property indicates whether the image built should be pushed to the registry or not.
func (o DockerBuildStepInvokeResponseOutput) IsPushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) *bool { return v.IsPushEnabled }).(pulumi.BoolPtrOutput)
}

// The value of this property indicates whether the image cache is enabled or not.
func (o DockerBuildStepInvokeResponseOutput) NoCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) *bool { return v.NoCache }).(pulumi.BoolPtrOutput)
}

// The name of the target build stage for the docker build.
func (o DockerBuildStepInvokeResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The type of the step.
// Expected value is 'Docker'.
func (o DockerBuildStepInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The Docker build step.
type DockerBuildStepResponse struct {
	// The collection of override arguments to be used when executing this build step.
	Arguments []ArgumentResponse `pulumi:"arguments"`
	// List of base image dependencies for a step.
	BaseImageDependencies []BaseImageDependencyResponse `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath *string `pulumi:"contextPath"`
	// The Docker file path relative to the source context.
	DockerFilePath string `pulumi:"dockerFilePath"`
	// The fully qualified image names including the repository and tag.
	ImageNames []string `pulumi:"imageNames"`
	// The value of this property indicates whether the image built should be pushed to the registry or not.
	IsPushEnabled *bool `pulumi:"isPushEnabled"`
	// The value of this property indicates whether the image cache is enabled or not.
	NoCache *bool `pulumi:"noCache"`
	// The name of the target build stage for the docker build.
	Target *string `pulumi:"target"`
	// The type of the step.
	// Expected value is 'Docker'.
	Type string `pulumi:"type"`
}

// DockerBuildStepResponseInput is an input type that accepts DockerBuildStepResponseArgs and DockerBuildStepResponseOutput values.
// You can construct a concrete instance of `DockerBuildStepResponseInput` via:
//
//          DockerBuildStepResponseArgs{...}
type DockerBuildStepResponseInput interface {
	pulumi.Input

	ToDockerBuildStepResponseOutput() DockerBuildStepResponseOutput
	ToDockerBuildStepResponseOutputWithContext(context.Context) DockerBuildStepResponseOutput
}

// The Docker build step.
type DockerBuildStepResponseArgs struct {
	// The collection of override arguments to be used when executing this build step.
	Arguments ArgumentResponseArrayInput `pulumi:"arguments"`
	// List of base image dependencies for a step.
	BaseImageDependencies BaseImageDependencyResponseArrayInput `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// The Docker file path relative to the source context.
	DockerFilePath pulumi.StringInput `pulumi:"dockerFilePath"`
	// The fully qualified image names including the repository and tag.
	ImageNames pulumi.StringArrayInput `pulumi:"imageNames"`
	// The value of this property indicates whether the image built should be pushed to the registry or not.
	IsPushEnabled pulumi.BoolPtrInput `pulumi:"isPushEnabled"`
	// The value of this property indicates whether the image cache is enabled or not.
	NoCache pulumi.BoolPtrInput `pulumi:"noCache"`
	// The name of the target build stage for the docker build.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The type of the step.
	// Expected value is 'Docker'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DockerBuildStepResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildStepResponse)(nil)).Elem()
}

func (i DockerBuildStepResponseArgs) ToDockerBuildStepResponseOutput() DockerBuildStepResponseOutput {
	return i.ToDockerBuildStepResponseOutputWithContext(context.Background())
}

func (i DockerBuildStepResponseArgs) ToDockerBuildStepResponseOutputWithContext(ctx context.Context) DockerBuildStepResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerBuildStepResponseOutput)
}

// The Docker build step.
type DockerBuildStepResponseOutput struct{ *pulumi.OutputState }

func (DockerBuildStepResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildStepResponse)(nil)).Elem()
}

func (o DockerBuildStepResponseOutput) ToDockerBuildStepResponseOutput() DockerBuildStepResponseOutput {
	return o
}

func (o DockerBuildStepResponseOutput) ToDockerBuildStepResponseOutputWithContext(ctx context.Context) DockerBuildStepResponseOutput {
	return o
}

// The collection of override arguments to be used when executing this build step.
func (o DockerBuildStepResponseOutput) Arguments() ArgumentResponseArrayOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) []ArgumentResponse { return v.Arguments }).(ArgumentResponseArrayOutput)
}

// List of base image dependencies for a step.
func (o DockerBuildStepResponseOutput) BaseImageDependencies() BaseImageDependencyResponseArrayOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) []BaseImageDependencyResponse { return v.BaseImageDependencies }).(BaseImageDependencyResponseArrayOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o DockerBuildStepResponseOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o DockerBuildStepResponseOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// The Docker file path relative to the source context.
func (o DockerBuildStepResponseOutput) DockerFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) string { return v.DockerFilePath }).(pulumi.StringOutput)
}

// The fully qualified image names including the repository and tag.
func (o DockerBuildStepResponseOutput) ImageNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) []string { return v.ImageNames }).(pulumi.StringArrayOutput)
}

// The value of this property indicates whether the image built should be pushed to the registry or not.
func (o DockerBuildStepResponseOutput) IsPushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) *bool { return v.IsPushEnabled }).(pulumi.BoolPtrOutput)
}

// The value of this property indicates whether the image cache is enabled or not.
func (o DockerBuildStepResponseOutput) NoCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) *bool { return v.NoCache }).(pulumi.BoolPtrOutput)
}

// The name of the target build stage for the docker build.
func (o DockerBuildStepResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The type of the step.
// Expected value is 'Docker'.
func (o DockerBuildStepResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of a encoded task step.
type EncodedTaskStepInvokeResponse struct {
	// List of base image dependencies for a step.
	BaseImageDependencies []BaseImageDependencyInvokeResponse `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath *string `pulumi:"contextPath"`
	// Base64 encoded value of the template/definition file content.
	EncodedTaskContent string `pulumi:"encodedTaskContent"`
	// Base64 encoded value of the parameters/values file content.
	EncodedValuesContent *string `pulumi:"encodedValuesContent"`
	// The type of the step.
	// Expected value is 'EncodedTask'.
	Type string `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values []SetValueInvokeResponse `pulumi:"values"`
}

// EncodedTaskStepInvokeResponseInput is an input type that accepts EncodedTaskStepInvokeResponseArgs and EncodedTaskStepInvokeResponseOutput values.
// You can construct a concrete instance of `EncodedTaskStepInvokeResponseInput` via:
//
//          EncodedTaskStepInvokeResponseArgs{...}
type EncodedTaskStepInvokeResponseInput interface {
	pulumi.Input

	ToEncodedTaskStepInvokeResponseOutput() EncodedTaskStepInvokeResponseOutput
	ToEncodedTaskStepInvokeResponseOutputWithContext(context.Context) EncodedTaskStepInvokeResponseOutput
}

// The properties of a encoded task step.
type EncodedTaskStepInvokeResponseArgs struct {
	// List of base image dependencies for a step.
	BaseImageDependencies BaseImageDependencyInvokeResponseArrayInput `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// Base64 encoded value of the template/definition file content.
	EncodedTaskContent pulumi.StringInput `pulumi:"encodedTaskContent"`
	// Base64 encoded value of the parameters/values file content.
	EncodedValuesContent pulumi.StringPtrInput `pulumi:"encodedValuesContent"`
	// The type of the step.
	// Expected value is 'EncodedTask'.
	Type pulumi.StringInput `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values SetValueInvokeResponseArrayInput `pulumi:"values"`
}

func (EncodedTaskStepInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncodedTaskStepInvokeResponse)(nil)).Elem()
}

func (i EncodedTaskStepInvokeResponseArgs) ToEncodedTaskStepInvokeResponseOutput() EncodedTaskStepInvokeResponseOutput {
	return i.ToEncodedTaskStepInvokeResponseOutputWithContext(context.Background())
}

func (i EncodedTaskStepInvokeResponseArgs) ToEncodedTaskStepInvokeResponseOutputWithContext(ctx context.Context) EncodedTaskStepInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncodedTaskStepInvokeResponseOutput)
}

// The properties of a encoded task step.
type EncodedTaskStepInvokeResponseOutput struct{ *pulumi.OutputState }

func (EncodedTaskStepInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncodedTaskStepInvokeResponse)(nil)).Elem()
}

func (o EncodedTaskStepInvokeResponseOutput) ToEncodedTaskStepInvokeResponseOutput() EncodedTaskStepInvokeResponseOutput {
	return o
}

func (o EncodedTaskStepInvokeResponseOutput) ToEncodedTaskStepInvokeResponseOutputWithContext(ctx context.Context) EncodedTaskStepInvokeResponseOutput {
	return o
}

// List of base image dependencies for a step.
func (o EncodedTaskStepInvokeResponseOutput) BaseImageDependencies() BaseImageDependencyInvokeResponseArrayOutput {
	return o.ApplyT(func(v EncodedTaskStepInvokeResponse) []BaseImageDependencyInvokeResponse {
		return v.BaseImageDependencies
	}).(BaseImageDependencyInvokeResponseArrayOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o EncodedTaskStepInvokeResponseOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskStepInvokeResponse) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o EncodedTaskStepInvokeResponseOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskStepInvokeResponse) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// Base64 encoded value of the template/definition file content.
func (o EncodedTaskStepInvokeResponseOutput) EncodedTaskContent() pulumi.StringOutput {
	return o.ApplyT(func(v EncodedTaskStepInvokeResponse) string { return v.EncodedTaskContent }).(pulumi.StringOutput)
}

// Base64 encoded value of the parameters/values file content.
func (o EncodedTaskStepInvokeResponseOutput) EncodedValuesContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskStepInvokeResponse) *string { return v.EncodedValuesContent }).(pulumi.StringPtrOutput)
}

// The type of the step.
// Expected value is 'EncodedTask'.
func (o EncodedTaskStepInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EncodedTaskStepInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The collection of overridable values that can be passed when running a task.
func (o EncodedTaskStepInvokeResponseOutput) Values() SetValueInvokeResponseArrayOutput {
	return o.ApplyT(func(v EncodedTaskStepInvokeResponse) []SetValueInvokeResponse { return v.Values }).(SetValueInvokeResponseArrayOutput)
}

// The properties of a encoded task step.
type EncodedTaskStepResponse struct {
	// List of base image dependencies for a step.
	BaseImageDependencies []BaseImageDependencyResponse `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath *string `pulumi:"contextPath"`
	// Base64 encoded value of the template/definition file content.
	EncodedTaskContent string `pulumi:"encodedTaskContent"`
	// Base64 encoded value of the parameters/values file content.
	EncodedValuesContent *string `pulumi:"encodedValuesContent"`
	// The type of the step.
	// Expected value is 'EncodedTask'.
	Type string `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values []SetValueResponse `pulumi:"values"`
}

// EncodedTaskStepResponseInput is an input type that accepts EncodedTaskStepResponseArgs and EncodedTaskStepResponseOutput values.
// You can construct a concrete instance of `EncodedTaskStepResponseInput` via:
//
//          EncodedTaskStepResponseArgs{...}
type EncodedTaskStepResponseInput interface {
	pulumi.Input

	ToEncodedTaskStepResponseOutput() EncodedTaskStepResponseOutput
	ToEncodedTaskStepResponseOutputWithContext(context.Context) EncodedTaskStepResponseOutput
}

// The properties of a encoded task step.
type EncodedTaskStepResponseArgs struct {
	// List of base image dependencies for a step.
	BaseImageDependencies BaseImageDependencyResponseArrayInput `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// Base64 encoded value of the template/definition file content.
	EncodedTaskContent pulumi.StringInput `pulumi:"encodedTaskContent"`
	// Base64 encoded value of the parameters/values file content.
	EncodedValuesContent pulumi.StringPtrInput `pulumi:"encodedValuesContent"`
	// The type of the step.
	// Expected value is 'EncodedTask'.
	Type pulumi.StringInput `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values SetValueResponseArrayInput `pulumi:"values"`
}

func (EncodedTaskStepResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncodedTaskStepResponse)(nil)).Elem()
}

func (i EncodedTaskStepResponseArgs) ToEncodedTaskStepResponseOutput() EncodedTaskStepResponseOutput {
	return i.ToEncodedTaskStepResponseOutputWithContext(context.Background())
}

func (i EncodedTaskStepResponseArgs) ToEncodedTaskStepResponseOutputWithContext(ctx context.Context) EncodedTaskStepResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncodedTaskStepResponseOutput)
}

// The properties of a encoded task step.
type EncodedTaskStepResponseOutput struct{ *pulumi.OutputState }

func (EncodedTaskStepResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncodedTaskStepResponse)(nil)).Elem()
}

func (o EncodedTaskStepResponseOutput) ToEncodedTaskStepResponseOutput() EncodedTaskStepResponseOutput {
	return o
}

func (o EncodedTaskStepResponseOutput) ToEncodedTaskStepResponseOutputWithContext(ctx context.Context) EncodedTaskStepResponseOutput {
	return o
}

// List of base image dependencies for a step.
func (o EncodedTaskStepResponseOutput) BaseImageDependencies() BaseImageDependencyResponseArrayOutput {
	return o.ApplyT(func(v EncodedTaskStepResponse) []BaseImageDependencyResponse { return v.BaseImageDependencies }).(BaseImageDependencyResponseArrayOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o EncodedTaskStepResponseOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskStepResponse) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o EncodedTaskStepResponseOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskStepResponse) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// Base64 encoded value of the template/definition file content.
func (o EncodedTaskStepResponseOutput) EncodedTaskContent() pulumi.StringOutput {
	return o.ApplyT(func(v EncodedTaskStepResponse) string { return v.EncodedTaskContent }).(pulumi.StringOutput)
}

// Base64 encoded value of the parameters/values file content.
func (o EncodedTaskStepResponseOutput) EncodedValuesContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskStepResponse) *string { return v.EncodedValuesContent }).(pulumi.StringPtrOutput)
}

// The type of the step.
// Expected value is 'EncodedTask'.
func (o EncodedTaskStepResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EncodedTaskStepResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The collection of overridable values that can be passed when running a task.
func (o EncodedTaskStepResponseOutput) Values() SetValueResponseArrayOutput {
	return o.ApplyT(func(v EncodedTaskStepResponse) []SetValueResponse { return v.Values }).(SetValueResponseArrayOutput)
}

// The content of the event request message.
type EventContentInvokeResponse struct {
	// The action that encompasses the provided event.
	Action *string `pulumi:"action"`
	// The agent that initiated the event. For most situations, this could be from the authorization context of the request.
	Actor *ActorInvokeResponse `pulumi:"actor"`
	// The event ID.
	Id *string `pulumi:"id"`
	// The request that generated the event.
	Request *RequestInvokeResponse `pulumi:"request"`
	// The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.
	Source *SourceInvokeResponse `pulumi:"source"`
	// The target of the event.
	Target *TargetInvokeResponse `pulumi:"target"`
	// The time at which the event occurred.
	Timestamp *string `pulumi:"timestamp"`
}

// EventContentInvokeResponseInput is an input type that accepts EventContentInvokeResponseArgs and EventContentInvokeResponseOutput values.
// You can construct a concrete instance of `EventContentInvokeResponseInput` via:
//
//          EventContentInvokeResponseArgs{...}
type EventContentInvokeResponseInput interface {
	pulumi.Input

	ToEventContentInvokeResponseOutput() EventContentInvokeResponseOutput
	ToEventContentInvokeResponseOutputWithContext(context.Context) EventContentInvokeResponseOutput
}

// The content of the event request message.
type EventContentInvokeResponseArgs struct {
	// The action that encompasses the provided event.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The agent that initiated the event. For most situations, this could be from the authorization context of the request.
	Actor ActorInvokeResponsePtrInput `pulumi:"actor"`
	// The event ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The request that generated the event.
	Request RequestInvokeResponsePtrInput `pulumi:"request"`
	// The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.
	Source SourceInvokeResponsePtrInput `pulumi:"source"`
	// The target of the event.
	Target TargetInvokeResponsePtrInput `pulumi:"target"`
	// The time at which the event occurred.
	Timestamp pulumi.StringPtrInput `pulumi:"timestamp"`
}

func (EventContentInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventContentInvokeResponse)(nil)).Elem()
}

func (i EventContentInvokeResponseArgs) ToEventContentInvokeResponseOutput() EventContentInvokeResponseOutput {
	return i.ToEventContentInvokeResponseOutputWithContext(context.Background())
}

func (i EventContentInvokeResponseArgs) ToEventContentInvokeResponseOutputWithContext(ctx context.Context) EventContentInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventContentInvokeResponseOutput)
}

func (i EventContentInvokeResponseArgs) ToEventContentInvokeResponsePtrOutput() EventContentInvokeResponsePtrOutput {
	return i.ToEventContentInvokeResponsePtrOutputWithContext(context.Background())
}

func (i EventContentInvokeResponseArgs) ToEventContentInvokeResponsePtrOutputWithContext(ctx context.Context) EventContentInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventContentInvokeResponseOutput).ToEventContentInvokeResponsePtrOutputWithContext(ctx)
}

// EventContentInvokeResponsePtrInput is an input type that accepts EventContentInvokeResponseArgs, EventContentInvokeResponsePtr and EventContentInvokeResponsePtrOutput values.
// You can construct a concrete instance of `EventContentInvokeResponsePtrInput` via:
//
//          EventContentInvokeResponseArgs{...}
//
//  or:
//
//          nil
type EventContentInvokeResponsePtrInput interface {
	pulumi.Input

	ToEventContentInvokeResponsePtrOutput() EventContentInvokeResponsePtrOutput
	ToEventContentInvokeResponsePtrOutputWithContext(context.Context) EventContentInvokeResponsePtrOutput
}

type eventContentInvokeResponsePtrType EventContentInvokeResponseArgs

func EventContentInvokeResponsePtr(v *EventContentInvokeResponseArgs) EventContentInvokeResponsePtrInput {
	return (*eventContentInvokeResponsePtrType)(v)
}

func (*eventContentInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventContentInvokeResponse)(nil)).Elem()
}

func (i *eventContentInvokeResponsePtrType) ToEventContentInvokeResponsePtrOutput() EventContentInvokeResponsePtrOutput {
	return i.ToEventContentInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *eventContentInvokeResponsePtrType) ToEventContentInvokeResponsePtrOutputWithContext(ctx context.Context) EventContentInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventContentInvokeResponsePtrOutput)
}

// The content of the event request message.
type EventContentInvokeResponseOutput struct{ *pulumi.OutputState }

func (EventContentInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventContentInvokeResponse)(nil)).Elem()
}

func (o EventContentInvokeResponseOutput) ToEventContentInvokeResponseOutput() EventContentInvokeResponseOutput {
	return o
}

func (o EventContentInvokeResponseOutput) ToEventContentInvokeResponseOutputWithContext(ctx context.Context) EventContentInvokeResponseOutput {
	return o
}

func (o EventContentInvokeResponseOutput) ToEventContentInvokeResponsePtrOutput() EventContentInvokeResponsePtrOutput {
	return o.ToEventContentInvokeResponsePtrOutputWithContext(context.Background())
}

func (o EventContentInvokeResponseOutput) ToEventContentInvokeResponsePtrOutputWithContext(ctx context.Context) EventContentInvokeResponsePtrOutput {
	return o.ApplyT(func(v EventContentInvokeResponse) *EventContentInvokeResponse {
		return &v
	}).(EventContentInvokeResponsePtrOutput)
}

// The action that encompasses the provided event.
func (o EventContentInvokeResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventContentInvokeResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The agent that initiated the event. For most situations, this could be from the authorization context of the request.
func (o EventContentInvokeResponseOutput) Actor() ActorInvokeResponsePtrOutput {
	return o.ApplyT(func(v EventContentInvokeResponse) *ActorInvokeResponse { return v.Actor }).(ActorInvokeResponsePtrOutput)
}

// The event ID.
func (o EventContentInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventContentInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The request that generated the event.
func (o EventContentInvokeResponseOutput) Request() RequestInvokeResponsePtrOutput {
	return o.ApplyT(func(v EventContentInvokeResponse) *RequestInvokeResponse { return v.Request }).(RequestInvokeResponsePtrOutput)
}

// The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.
func (o EventContentInvokeResponseOutput) Source() SourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v EventContentInvokeResponse) *SourceInvokeResponse { return v.Source }).(SourceInvokeResponsePtrOutput)
}

// The target of the event.
func (o EventContentInvokeResponseOutput) Target() TargetInvokeResponsePtrOutput {
	return o.ApplyT(func(v EventContentInvokeResponse) *TargetInvokeResponse { return v.Target }).(TargetInvokeResponsePtrOutput)
}

// The time at which the event occurred.
func (o EventContentInvokeResponseOutput) Timestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventContentInvokeResponse) *string { return v.Timestamp }).(pulumi.StringPtrOutput)
}

type EventContentInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (EventContentInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventContentInvokeResponse)(nil)).Elem()
}

func (o EventContentInvokeResponsePtrOutput) ToEventContentInvokeResponsePtrOutput() EventContentInvokeResponsePtrOutput {
	return o
}

func (o EventContentInvokeResponsePtrOutput) ToEventContentInvokeResponsePtrOutputWithContext(ctx context.Context) EventContentInvokeResponsePtrOutput {
	return o
}

func (o EventContentInvokeResponsePtrOutput) Elem() EventContentInvokeResponseOutput {
	return o.ApplyT(func(v *EventContentInvokeResponse) EventContentInvokeResponse { return *v }).(EventContentInvokeResponseOutput)
}

// The action that encompasses the provided event.
func (o EventContentInvokeResponsePtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventContentInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// The agent that initiated the event. For most situations, this could be from the authorization context of the request.
func (o EventContentInvokeResponsePtrOutput) Actor() ActorInvokeResponsePtrOutput {
	return o.ApplyT(func(v *EventContentInvokeResponse) *ActorInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Actor
	}).(ActorInvokeResponsePtrOutput)
}

// The event ID.
func (o EventContentInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventContentInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The request that generated the event.
func (o EventContentInvokeResponsePtrOutput) Request() RequestInvokeResponsePtrOutput {
	return o.ApplyT(func(v *EventContentInvokeResponse) *RequestInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Request
	}).(RequestInvokeResponsePtrOutput)
}

// The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.
func (o EventContentInvokeResponsePtrOutput) Source() SourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v *EventContentInvokeResponse) *SourceInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Source
	}).(SourceInvokeResponsePtrOutput)
}

// The target of the event.
func (o EventContentInvokeResponsePtrOutput) Target() TargetInvokeResponsePtrOutput {
	return o.ApplyT(func(v *EventContentInvokeResponse) *TargetInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Target
	}).(TargetInvokeResponsePtrOutput)
}

// The time at which the event occurred.
func (o EventContentInvokeResponsePtrOutput) Timestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventContentInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Timestamp
	}).(pulumi.StringPtrOutput)
}

// The event for a webhook.
type EventInvokeResponse struct {
	// The event request message sent to the service URI.
	EventRequestMessage *EventRequestMessageInvokeResponse `pulumi:"eventRequestMessage"`
	// The event response message received from the service URI.
	EventResponseMessage *EventResponseMessageInvokeResponse `pulumi:"eventResponseMessage"`
	// The event ID.
	Id *string `pulumi:"id"`
}

// EventInvokeResponseInput is an input type that accepts EventInvokeResponseArgs and EventInvokeResponseOutput values.
// You can construct a concrete instance of `EventInvokeResponseInput` via:
//
//          EventInvokeResponseArgs{...}
type EventInvokeResponseInput interface {
	pulumi.Input

	ToEventInvokeResponseOutput() EventInvokeResponseOutput
	ToEventInvokeResponseOutputWithContext(context.Context) EventInvokeResponseOutput
}

// The event for a webhook.
type EventInvokeResponseArgs struct {
	// The event request message sent to the service URI.
	EventRequestMessage EventRequestMessageInvokeResponsePtrInput `pulumi:"eventRequestMessage"`
	// The event response message received from the service URI.
	EventResponseMessage EventResponseMessageInvokeResponsePtrInput `pulumi:"eventResponseMessage"`
	// The event ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (EventInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventInvokeResponse)(nil)).Elem()
}

func (i EventInvokeResponseArgs) ToEventInvokeResponseOutput() EventInvokeResponseOutput {
	return i.ToEventInvokeResponseOutputWithContext(context.Background())
}

func (i EventInvokeResponseArgs) ToEventInvokeResponseOutputWithContext(ctx context.Context) EventInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventInvokeResponseOutput)
}

// EventInvokeResponseArrayInput is an input type that accepts EventInvokeResponseArray and EventInvokeResponseArrayOutput values.
// You can construct a concrete instance of `EventInvokeResponseArrayInput` via:
//
//          EventInvokeResponseArray{ EventInvokeResponseArgs{...} }
type EventInvokeResponseArrayInput interface {
	pulumi.Input

	ToEventInvokeResponseArrayOutput() EventInvokeResponseArrayOutput
	ToEventInvokeResponseArrayOutputWithContext(context.Context) EventInvokeResponseArrayOutput
}

type EventInvokeResponseArray []EventInvokeResponseInput

func (EventInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventInvokeResponse)(nil)).Elem()
}

func (i EventInvokeResponseArray) ToEventInvokeResponseArrayOutput() EventInvokeResponseArrayOutput {
	return i.ToEventInvokeResponseArrayOutputWithContext(context.Background())
}

func (i EventInvokeResponseArray) ToEventInvokeResponseArrayOutputWithContext(ctx context.Context) EventInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventInvokeResponseArrayOutput)
}

// The event for a webhook.
type EventInvokeResponseOutput struct{ *pulumi.OutputState }

func (EventInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventInvokeResponse)(nil)).Elem()
}

func (o EventInvokeResponseOutput) ToEventInvokeResponseOutput() EventInvokeResponseOutput {
	return o
}

func (o EventInvokeResponseOutput) ToEventInvokeResponseOutputWithContext(ctx context.Context) EventInvokeResponseOutput {
	return o
}

// The event request message sent to the service URI.
func (o EventInvokeResponseOutput) EventRequestMessage() EventRequestMessageInvokeResponsePtrOutput {
	return o.ApplyT(func(v EventInvokeResponse) *EventRequestMessageInvokeResponse { return v.EventRequestMessage }).(EventRequestMessageInvokeResponsePtrOutput)
}

// The event response message received from the service URI.
func (o EventInvokeResponseOutput) EventResponseMessage() EventResponseMessageInvokeResponsePtrOutput {
	return o.ApplyT(func(v EventInvokeResponse) *EventResponseMessageInvokeResponse { return v.EventResponseMessage }).(EventResponseMessageInvokeResponsePtrOutput)
}

// The event ID.
func (o EventInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type EventInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (EventInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventInvokeResponse)(nil)).Elem()
}

func (o EventInvokeResponseArrayOutput) ToEventInvokeResponseArrayOutput() EventInvokeResponseArrayOutput {
	return o
}

func (o EventInvokeResponseArrayOutput) ToEventInvokeResponseArrayOutputWithContext(ctx context.Context) EventInvokeResponseArrayOutput {
	return o
}

func (o EventInvokeResponseArrayOutput) Index(i pulumi.IntInput) EventInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventInvokeResponse {
		return vs[0].([]EventInvokeResponse)[vs[1].(int)]
	}).(EventInvokeResponseOutput)
}

// The event request message sent to the service URI.
type EventRequestMessageInvokeResponse struct {
	// The content of the event request message.
	Content *EventContentInvokeResponse `pulumi:"content"`
	// The headers of the event request message.
	Headers map[string]string `pulumi:"headers"`
	// The HTTP method used to send the event request message.
	Method *string `pulumi:"method"`
	// The URI used to send the event request message.
	RequestUri *string `pulumi:"requestUri"`
	// The HTTP message version.
	Version *string `pulumi:"version"`
}

// EventRequestMessageInvokeResponseInput is an input type that accepts EventRequestMessageInvokeResponseArgs and EventRequestMessageInvokeResponseOutput values.
// You can construct a concrete instance of `EventRequestMessageInvokeResponseInput` via:
//
//          EventRequestMessageInvokeResponseArgs{...}
type EventRequestMessageInvokeResponseInput interface {
	pulumi.Input

	ToEventRequestMessageInvokeResponseOutput() EventRequestMessageInvokeResponseOutput
	ToEventRequestMessageInvokeResponseOutputWithContext(context.Context) EventRequestMessageInvokeResponseOutput
}

// The event request message sent to the service URI.
type EventRequestMessageInvokeResponseArgs struct {
	// The content of the event request message.
	Content EventContentInvokeResponsePtrInput `pulumi:"content"`
	// The headers of the event request message.
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// The HTTP method used to send the event request message.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The URI used to send the event request message.
	RequestUri pulumi.StringPtrInput `pulumi:"requestUri"`
	// The HTTP message version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (EventRequestMessageInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventRequestMessageInvokeResponse)(nil)).Elem()
}

func (i EventRequestMessageInvokeResponseArgs) ToEventRequestMessageInvokeResponseOutput() EventRequestMessageInvokeResponseOutput {
	return i.ToEventRequestMessageInvokeResponseOutputWithContext(context.Background())
}

func (i EventRequestMessageInvokeResponseArgs) ToEventRequestMessageInvokeResponseOutputWithContext(ctx context.Context) EventRequestMessageInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventRequestMessageInvokeResponseOutput)
}

func (i EventRequestMessageInvokeResponseArgs) ToEventRequestMessageInvokeResponsePtrOutput() EventRequestMessageInvokeResponsePtrOutput {
	return i.ToEventRequestMessageInvokeResponsePtrOutputWithContext(context.Background())
}

func (i EventRequestMessageInvokeResponseArgs) ToEventRequestMessageInvokeResponsePtrOutputWithContext(ctx context.Context) EventRequestMessageInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventRequestMessageInvokeResponseOutput).ToEventRequestMessageInvokeResponsePtrOutputWithContext(ctx)
}

// EventRequestMessageInvokeResponsePtrInput is an input type that accepts EventRequestMessageInvokeResponseArgs, EventRequestMessageInvokeResponsePtr and EventRequestMessageInvokeResponsePtrOutput values.
// You can construct a concrete instance of `EventRequestMessageInvokeResponsePtrInput` via:
//
//          EventRequestMessageInvokeResponseArgs{...}
//
//  or:
//
//          nil
type EventRequestMessageInvokeResponsePtrInput interface {
	pulumi.Input

	ToEventRequestMessageInvokeResponsePtrOutput() EventRequestMessageInvokeResponsePtrOutput
	ToEventRequestMessageInvokeResponsePtrOutputWithContext(context.Context) EventRequestMessageInvokeResponsePtrOutput
}

type eventRequestMessageInvokeResponsePtrType EventRequestMessageInvokeResponseArgs

func EventRequestMessageInvokeResponsePtr(v *EventRequestMessageInvokeResponseArgs) EventRequestMessageInvokeResponsePtrInput {
	return (*eventRequestMessageInvokeResponsePtrType)(v)
}

func (*eventRequestMessageInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventRequestMessageInvokeResponse)(nil)).Elem()
}

func (i *eventRequestMessageInvokeResponsePtrType) ToEventRequestMessageInvokeResponsePtrOutput() EventRequestMessageInvokeResponsePtrOutput {
	return i.ToEventRequestMessageInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *eventRequestMessageInvokeResponsePtrType) ToEventRequestMessageInvokeResponsePtrOutputWithContext(ctx context.Context) EventRequestMessageInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventRequestMessageInvokeResponsePtrOutput)
}

// The event request message sent to the service URI.
type EventRequestMessageInvokeResponseOutput struct{ *pulumi.OutputState }

func (EventRequestMessageInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventRequestMessageInvokeResponse)(nil)).Elem()
}

func (o EventRequestMessageInvokeResponseOutput) ToEventRequestMessageInvokeResponseOutput() EventRequestMessageInvokeResponseOutput {
	return o
}

func (o EventRequestMessageInvokeResponseOutput) ToEventRequestMessageInvokeResponseOutputWithContext(ctx context.Context) EventRequestMessageInvokeResponseOutput {
	return o
}

func (o EventRequestMessageInvokeResponseOutput) ToEventRequestMessageInvokeResponsePtrOutput() EventRequestMessageInvokeResponsePtrOutput {
	return o.ToEventRequestMessageInvokeResponsePtrOutputWithContext(context.Background())
}

func (o EventRequestMessageInvokeResponseOutput) ToEventRequestMessageInvokeResponsePtrOutputWithContext(ctx context.Context) EventRequestMessageInvokeResponsePtrOutput {
	return o.ApplyT(func(v EventRequestMessageInvokeResponse) *EventRequestMessageInvokeResponse {
		return &v
	}).(EventRequestMessageInvokeResponsePtrOutput)
}

// The content of the event request message.
func (o EventRequestMessageInvokeResponseOutput) Content() EventContentInvokeResponsePtrOutput {
	return o.ApplyT(func(v EventRequestMessageInvokeResponse) *EventContentInvokeResponse { return v.Content }).(EventContentInvokeResponsePtrOutput)
}

// The headers of the event request message.
func (o EventRequestMessageInvokeResponseOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v EventRequestMessageInvokeResponse) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// The HTTP method used to send the event request message.
func (o EventRequestMessageInvokeResponseOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventRequestMessageInvokeResponse) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The URI used to send the event request message.
func (o EventRequestMessageInvokeResponseOutput) RequestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventRequestMessageInvokeResponse) *string { return v.RequestUri }).(pulumi.StringPtrOutput)
}

// The HTTP message version.
func (o EventRequestMessageInvokeResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventRequestMessageInvokeResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type EventRequestMessageInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (EventRequestMessageInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventRequestMessageInvokeResponse)(nil)).Elem()
}

func (o EventRequestMessageInvokeResponsePtrOutput) ToEventRequestMessageInvokeResponsePtrOutput() EventRequestMessageInvokeResponsePtrOutput {
	return o
}

func (o EventRequestMessageInvokeResponsePtrOutput) ToEventRequestMessageInvokeResponsePtrOutputWithContext(ctx context.Context) EventRequestMessageInvokeResponsePtrOutput {
	return o
}

func (o EventRequestMessageInvokeResponsePtrOutput) Elem() EventRequestMessageInvokeResponseOutput {
	return o.ApplyT(func(v *EventRequestMessageInvokeResponse) EventRequestMessageInvokeResponse { return *v }).(EventRequestMessageInvokeResponseOutput)
}

// The content of the event request message.
func (o EventRequestMessageInvokeResponsePtrOutput) Content() EventContentInvokeResponsePtrOutput {
	return o.ApplyT(func(v *EventRequestMessageInvokeResponse) *EventContentInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Content
	}).(EventContentInvokeResponsePtrOutput)
}

// The headers of the event request message.
func (o EventRequestMessageInvokeResponsePtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EventRequestMessageInvokeResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

// The HTTP method used to send the event request message.
func (o EventRequestMessageInvokeResponsePtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventRequestMessageInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The URI used to send the event request message.
func (o EventRequestMessageInvokeResponsePtrOutput) RequestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventRequestMessageInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.RequestUri
	}).(pulumi.StringPtrOutput)
}

// The HTTP message version.
func (o EventRequestMessageInvokeResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventRequestMessageInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The event response message received from the service URI.
type EventResponseMessageInvokeResponse struct {
	// The content of the event response message.
	Content *string `pulumi:"content"`
	// The headers of the event response message.
	Headers map[string]string `pulumi:"headers"`
	// The reason phrase of the event response message.
	ReasonPhrase *string `pulumi:"reasonPhrase"`
	// The status code of the event response message.
	StatusCode *string `pulumi:"statusCode"`
	// The HTTP message version.
	Version *string `pulumi:"version"`
}

// EventResponseMessageInvokeResponseInput is an input type that accepts EventResponseMessageInvokeResponseArgs and EventResponseMessageInvokeResponseOutput values.
// You can construct a concrete instance of `EventResponseMessageInvokeResponseInput` via:
//
//          EventResponseMessageInvokeResponseArgs{...}
type EventResponseMessageInvokeResponseInput interface {
	pulumi.Input

	ToEventResponseMessageInvokeResponseOutput() EventResponseMessageInvokeResponseOutput
	ToEventResponseMessageInvokeResponseOutputWithContext(context.Context) EventResponseMessageInvokeResponseOutput
}

// The event response message received from the service URI.
type EventResponseMessageInvokeResponseArgs struct {
	// The content of the event response message.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// The headers of the event response message.
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// The reason phrase of the event response message.
	ReasonPhrase pulumi.StringPtrInput `pulumi:"reasonPhrase"`
	// The status code of the event response message.
	StatusCode pulumi.StringPtrInput `pulumi:"statusCode"`
	// The HTTP message version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (EventResponseMessageInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventResponseMessageInvokeResponse)(nil)).Elem()
}

func (i EventResponseMessageInvokeResponseArgs) ToEventResponseMessageInvokeResponseOutput() EventResponseMessageInvokeResponseOutput {
	return i.ToEventResponseMessageInvokeResponseOutputWithContext(context.Background())
}

func (i EventResponseMessageInvokeResponseArgs) ToEventResponseMessageInvokeResponseOutputWithContext(ctx context.Context) EventResponseMessageInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventResponseMessageInvokeResponseOutput)
}

func (i EventResponseMessageInvokeResponseArgs) ToEventResponseMessageInvokeResponsePtrOutput() EventResponseMessageInvokeResponsePtrOutput {
	return i.ToEventResponseMessageInvokeResponsePtrOutputWithContext(context.Background())
}

func (i EventResponseMessageInvokeResponseArgs) ToEventResponseMessageInvokeResponsePtrOutputWithContext(ctx context.Context) EventResponseMessageInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventResponseMessageInvokeResponseOutput).ToEventResponseMessageInvokeResponsePtrOutputWithContext(ctx)
}

// EventResponseMessageInvokeResponsePtrInput is an input type that accepts EventResponseMessageInvokeResponseArgs, EventResponseMessageInvokeResponsePtr and EventResponseMessageInvokeResponsePtrOutput values.
// You can construct a concrete instance of `EventResponseMessageInvokeResponsePtrInput` via:
//
//          EventResponseMessageInvokeResponseArgs{...}
//
//  or:
//
//          nil
type EventResponseMessageInvokeResponsePtrInput interface {
	pulumi.Input

	ToEventResponseMessageInvokeResponsePtrOutput() EventResponseMessageInvokeResponsePtrOutput
	ToEventResponseMessageInvokeResponsePtrOutputWithContext(context.Context) EventResponseMessageInvokeResponsePtrOutput
}

type eventResponseMessageInvokeResponsePtrType EventResponseMessageInvokeResponseArgs

func EventResponseMessageInvokeResponsePtr(v *EventResponseMessageInvokeResponseArgs) EventResponseMessageInvokeResponsePtrInput {
	return (*eventResponseMessageInvokeResponsePtrType)(v)
}

func (*eventResponseMessageInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventResponseMessageInvokeResponse)(nil)).Elem()
}

func (i *eventResponseMessageInvokeResponsePtrType) ToEventResponseMessageInvokeResponsePtrOutput() EventResponseMessageInvokeResponsePtrOutput {
	return i.ToEventResponseMessageInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *eventResponseMessageInvokeResponsePtrType) ToEventResponseMessageInvokeResponsePtrOutputWithContext(ctx context.Context) EventResponseMessageInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventResponseMessageInvokeResponsePtrOutput)
}

// The event response message received from the service URI.
type EventResponseMessageInvokeResponseOutput struct{ *pulumi.OutputState }

func (EventResponseMessageInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventResponseMessageInvokeResponse)(nil)).Elem()
}

func (o EventResponseMessageInvokeResponseOutput) ToEventResponseMessageInvokeResponseOutput() EventResponseMessageInvokeResponseOutput {
	return o
}

func (o EventResponseMessageInvokeResponseOutput) ToEventResponseMessageInvokeResponseOutputWithContext(ctx context.Context) EventResponseMessageInvokeResponseOutput {
	return o
}

func (o EventResponseMessageInvokeResponseOutput) ToEventResponseMessageInvokeResponsePtrOutput() EventResponseMessageInvokeResponsePtrOutput {
	return o.ToEventResponseMessageInvokeResponsePtrOutputWithContext(context.Background())
}

func (o EventResponseMessageInvokeResponseOutput) ToEventResponseMessageInvokeResponsePtrOutputWithContext(ctx context.Context) EventResponseMessageInvokeResponsePtrOutput {
	return o.ApplyT(func(v EventResponseMessageInvokeResponse) *EventResponseMessageInvokeResponse {
		return &v
	}).(EventResponseMessageInvokeResponsePtrOutput)
}

// The content of the event response message.
func (o EventResponseMessageInvokeResponseOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventResponseMessageInvokeResponse) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// The headers of the event response message.
func (o EventResponseMessageInvokeResponseOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v EventResponseMessageInvokeResponse) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// The reason phrase of the event response message.
func (o EventResponseMessageInvokeResponseOutput) ReasonPhrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventResponseMessageInvokeResponse) *string { return v.ReasonPhrase }).(pulumi.StringPtrOutput)
}

// The status code of the event response message.
func (o EventResponseMessageInvokeResponseOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventResponseMessageInvokeResponse) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

// The HTTP message version.
func (o EventResponseMessageInvokeResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventResponseMessageInvokeResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type EventResponseMessageInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (EventResponseMessageInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventResponseMessageInvokeResponse)(nil)).Elem()
}

func (o EventResponseMessageInvokeResponsePtrOutput) ToEventResponseMessageInvokeResponsePtrOutput() EventResponseMessageInvokeResponsePtrOutput {
	return o
}

func (o EventResponseMessageInvokeResponsePtrOutput) ToEventResponseMessageInvokeResponsePtrOutputWithContext(ctx context.Context) EventResponseMessageInvokeResponsePtrOutput {
	return o
}

func (o EventResponseMessageInvokeResponsePtrOutput) Elem() EventResponseMessageInvokeResponseOutput {
	return o.ApplyT(func(v *EventResponseMessageInvokeResponse) EventResponseMessageInvokeResponse { return *v }).(EventResponseMessageInvokeResponseOutput)
}

// The content of the event response message.
func (o EventResponseMessageInvokeResponsePtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventResponseMessageInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// The headers of the event response message.
func (o EventResponseMessageInvokeResponsePtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EventResponseMessageInvokeResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

// The reason phrase of the event response message.
func (o EventResponseMessageInvokeResponsePtrOutput) ReasonPhrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventResponseMessageInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReasonPhrase
	}).(pulumi.StringPtrOutput)
}

// The status code of the event response message.
func (o EventResponseMessageInvokeResponsePtrOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventResponseMessageInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.StatusCode
	}).(pulumi.StringPtrOutput)
}

// The HTTP message version.
func (o EventResponseMessageInvokeResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventResponseMessageInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The properties of a task step.
type FileTaskStepInvokeResponse struct {
	// List of base image dependencies for a step.
	BaseImageDependencies []BaseImageDependencyInvokeResponse `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath *string `pulumi:"contextPath"`
	// The task template/definition file path relative to the source context.
	TaskFilePath string `pulumi:"taskFilePath"`
	// The type of the step.
	// Expected value is 'FileTask'.
	Type string `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values []SetValueInvokeResponse `pulumi:"values"`
	// The task values/parameters file path relative to the source context.
	ValuesFilePath *string `pulumi:"valuesFilePath"`
}

// FileTaskStepInvokeResponseInput is an input type that accepts FileTaskStepInvokeResponseArgs and FileTaskStepInvokeResponseOutput values.
// You can construct a concrete instance of `FileTaskStepInvokeResponseInput` via:
//
//          FileTaskStepInvokeResponseArgs{...}
type FileTaskStepInvokeResponseInput interface {
	pulumi.Input

	ToFileTaskStepInvokeResponseOutput() FileTaskStepInvokeResponseOutput
	ToFileTaskStepInvokeResponseOutputWithContext(context.Context) FileTaskStepInvokeResponseOutput
}

// The properties of a task step.
type FileTaskStepInvokeResponseArgs struct {
	// List of base image dependencies for a step.
	BaseImageDependencies BaseImageDependencyInvokeResponseArrayInput `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// The task template/definition file path relative to the source context.
	TaskFilePath pulumi.StringInput `pulumi:"taskFilePath"`
	// The type of the step.
	// Expected value is 'FileTask'.
	Type pulumi.StringInput `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values SetValueInvokeResponseArrayInput `pulumi:"values"`
	// The task values/parameters file path relative to the source context.
	ValuesFilePath pulumi.StringPtrInput `pulumi:"valuesFilePath"`
}

func (FileTaskStepInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileTaskStepInvokeResponse)(nil)).Elem()
}

func (i FileTaskStepInvokeResponseArgs) ToFileTaskStepInvokeResponseOutput() FileTaskStepInvokeResponseOutput {
	return i.ToFileTaskStepInvokeResponseOutputWithContext(context.Background())
}

func (i FileTaskStepInvokeResponseArgs) ToFileTaskStepInvokeResponseOutputWithContext(ctx context.Context) FileTaskStepInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileTaskStepInvokeResponseOutput)
}

// The properties of a task step.
type FileTaskStepInvokeResponseOutput struct{ *pulumi.OutputState }

func (FileTaskStepInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileTaskStepInvokeResponse)(nil)).Elem()
}

func (o FileTaskStepInvokeResponseOutput) ToFileTaskStepInvokeResponseOutput() FileTaskStepInvokeResponseOutput {
	return o
}

func (o FileTaskStepInvokeResponseOutput) ToFileTaskStepInvokeResponseOutputWithContext(ctx context.Context) FileTaskStepInvokeResponseOutput {
	return o
}

// List of base image dependencies for a step.
func (o FileTaskStepInvokeResponseOutput) BaseImageDependencies() BaseImageDependencyInvokeResponseArrayOutput {
	return o.ApplyT(func(v FileTaskStepInvokeResponse) []BaseImageDependencyInvokeResponse { return v.BaseImageDependencies }).(BaseImageDependencyInvokeResponseArrayOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o FileTaskStepInvokeResponseOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskStepInvokeResponse) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o FileTaskStepInvokeResponseOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskStepInvokeResponse) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// The task template/definition file path relative to the source context.
func (o FileTaskStepInvokeResponseOutput) TaskFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v FileTaskStepInvokeResponse) string { return v.TaskFilePath }).(pulumi.StringOutput)
}

// The type of the step.
// Expected value is 'FileTask'.
func (o FileTaskStepInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FileTaskStepInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The collection of overridable values that can be passed when running a task.
func (o FileTaskStepInvokeResponseOutput) Values() SetValueInvokeResponseArrayOutput {
	return o.ApplyT(func(v FileTaskStepInvokeResponse) []SetValueInvokeResponse { return v.Values }).(SetValueInvokeResponseArrayOutput)
}

// The task values/parameters file path relative to the source context.
func (o FileTaskStepInvokeResponseOutput) ValuesFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskStepInvokeResponse) *string { return v.ValuesFilePath }).(pulumi.StringPtrOutput)
}

// The properties of a task step.
type FileTaskStepResponse struct {
	// List of base image dependencies for a step.
	BaseImageDependencies []BaseImageDependencyResponse `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath *string `pulumi:"contextPath"`
	// The task template/definition file path relative to the source context.
	TaskFilePath string `pulumi:"taskFilePath"`
	// The type of the step.
	// Expected value is 'FileTask'.
	Type string `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values []SetValueResponse `pulumi:"values"`
	// The task values/parameters file path relative to the source context.
	ValuesFilePath *string `pulumi:"valuesFilePath"`
}

// FileTaskStepResponseInput is an input type that accepts FileTaskStepResponseArgs and FileTaskStepResponseOutput values.
// You can construct a concrete instance of `FileTaskStepResponseInput` via:
//
//          FileTaskStepResponseArgs{...}
type FileTaskStepResponseInput interface {
	pulumi.Input

	ToFileTaskStepResponseOutput() FileTaskStepResponseOutput
	ToFileTaskStepResponseOutputWithContext(context.Context) FileTaskStepResponseOutput
}

// The properties of a task step.
type FileTaskStepResponseArgs struct {
	// List of base image dependencies for a step.
	BaseImageDependencies BaseImageDependencyResponseArrayInput `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// The task template/definition file path relative to the source context.
	TaskFilePath pulumi.StringInput `pulumi:"taskFilePath"`
	// The type of the step.
	// Expected value is 'FileTask'.
	Type pulumi.StringInput `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values SetValueResponseArrayInput `pulumi:"values"`
	// The task values/parameters file path relative to the source context.
	ValuesFilePath pulumi.StringPtrInput `pulumi:"valuesFilePath"`
}

func (FileTaskStepResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileTaskStepResponse)(nil)).Elem()
}

func (i FileTaskStepResponseArgs) ToFileTaskStepResponseOutput() FileTaskStepResponseOutput {
	return i.ToFileTaskStepResponseOutputWithContext(context.Background())
}

func (i FileTaskStepResponseArgs) ToFileTaskStepResponseOutputWithContext(ctx context.Context) FileTaskStepResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileTaskStepResponseOutput)
}

// The properties of a task step.
type FileTaskStepResponseOutput struct{ *pulumi.OutputState }

func (FileTaskStepResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileTaskStepResponse)(nil)).Elem()
}

func (o FileTaskStepResponseOutput) ToFileTaskStepResponseOutput() FileTaskStepResponseOutput {
	return o
}

func (o FileTaskStepResponseOutput) ToFileTaskStepResponseOutputWithContext(ctx context.Context) FileTaskStepResponseOutput {
	return o
}

// List of base image dependencies for a step.
func (o FileTaskStepResponseOutput) BaseImageDependencies() BaseImageDependencyResponseArrayOutput {
	return o.ApplyT(func(v FileTaskStepResponse) []BaseImageDependencyResponse { return v.BaseImageDependencies }).(BaseImageDependencyResponseArrayOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o FileTaskStepResponseOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskStepResponse) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o FileTaskStepResponseOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskStepResponse) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// The task template/definition file path relative to the source context.
func (o FileTaskStepResponseOutput) TaskFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v FileTaskStepResponse) string { return v.TaskFilePath }).(pulumi.StringOutput)
}

// The type of the step.
// Expected value is 'FileTask'.
func (o FileTaskStepResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FileTaskStepResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The collection of overridable values that can be passed when running a task.
func (o FileTaskStepResponseOutput) Values() SetValueResponseArrayOutput {
	return o.ApplyT(func(v FileTaskStepResponse) []SetValueResponse { return v.Values }).(SetValueResponseArrayOutput)
}

// The task values/parameters file path relative to the source context.
func (o FileTaskStepResponseOutput) ValuesFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskStepResponse) *string { return v.ValuesFilePath }).(pulumi.StringPtrOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRule struct {
	// The action of IP ACL rule.
	Action *string `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	IPAddressOrRange string `pulumi:"iPAddressOrRange"`
}

// IPRuleInput is an input type that accepts IPRuleArgs and IPRuleOutput values.
// You can construct a concrete instance of `IPRuleInput` via:
//
//          IPRuleArgs{...}
type IPRuleInput interface {
	pulumi.Input

	ToIPRuleOutput() IPRuleOutput
	ToIPRuleOutputWithContext(context.Context) IPRuleOutput
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleArgs struct {
	// The action of IP ACL rule.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	IPAddressOrRange pulumi.StringInput `pulumi:"iPAddressOrRange"`
}

func (IPRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRule)(nil)).Elem()
}

func (i IPRuleArgs) ToIPRuleOutput() IPRuleOutput {
	return i.ToIPRuleOutputWithContext(context.Background())
}

func (i IPRuleArgs) ToIPRuleOutputWithContext(ctx context.Context) IPRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleOutput)
}

// IPRuleArrayInput is an input type that accepts IPRuleArray and IPRuleArrayOutput values.
// You can construct a concrete instance of `IPRuleArrayInput` via:
//
//          IPRuleArray{ IPRuleArgs{...} }
type IPRuleArrayInput interface {
	pulumi.Input

	ToIPRuleArrayOutput() IPRuleArrayOutput
	ToIPRuleArrayOutputWithContext(context.Context) IPRuleArrayOutput
}

type IPRuleArray []IPRuleInput

func (IPRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRule)(nil)).Elem()
}

func (i IPRuleArray) ToIPRuleArrayOutput() IPRuleArrayOutput {
	return i.ToIPRuleArrayOutputWithContext(context.Background())
}

func (i IPRuleArray) ToIPRuleArrayOutputWithContext(ctx context.Context) IPRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleArrayOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleOutput struct{ *pulumi.OutputState }

func (IPRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRule)(nil)).Elem()
}

func (o IPRuleOutput) ToIPRuleOutput() IPRuleOutput {
	return o
}

func (o IPRuleOutput) ToIPRuleOutputWithContext(ctx context.Context) IPRuleOutput {
	return o
}

// The action of IP ACL rule.
func (o IPRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
func (o IPRuleOutput) IPAddressOrRange() pulumi.StringOutput {
	return o.ApplyT(func(v IPRule) string { return v.IPAddressOrRange }).(pulumi.StringOutput)
}

type IPRuleArrayOutput struct{ *pulumi.OutputState }

func (IPRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRule)(nil)).Elem()
}

func (o IPRuleArrayOutput) ToIPRuleArrayOutput() IPRuleArrayOutput {
	return o
}

func (o IPRuleArrayOutput) ToIPRuleArrayOutputWithContext(ctx context.Context) IPRuleArrayOutput {
	return o
}

func (o IPRuleArrayOutput) Index(i pulumi.IntInput) IPRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPRule {
		return vs[0].([]IPRule)[vs[1].(int)]
	}).(IPRuleOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleInvokeResponse struct {
	// The action of IP ACL rule.
	Action *string `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	IPAddressOrRange string `pulumi:"iPAddressOrRange"`
}

// IPRuleInvokeResponseInput is an input type that accepts IPRuleInvokeResponseArgs and IPRuleInvokeResponseOutput values.
// You can construct a concrete instance of `IPRuleInvokeResponseInput` via:
//
//          IPRuleInvokeResponseArgs{...}
type IPRuleInvokeResponseInput interface {
	pulumi.Input

	ToIPRuleInvokeResponseOutput() IPRuleInvokeResponseOutput
	ToIPRuleInvokeResponseOutputWithContext(context.Context) IPRuleInvokeResponseOutput
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleInvokeResponseArgs struct {
	// The action of IP ACL rule.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	IPAddressOrRange pulumi.StringInput `pulumi:"iPAddressOrRange"`
}

func (IPRuleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRuleInvokeResponse)(nil)).Elem()
}

func (i IPRuleInvokeResponseArgs) ToIPRuleInvokeResponseOutput() IPRuleInvokeResponseOutput {
	return i.ToIPRuleInvokeResponseOutputWithContext(context.Background())
}

func (i IPRuleInvokeResponseArgs) ToIPRuleInvokeResponseOutputWithContext(ctx context.Context) IPRuleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleInvokeResponseOutput)
}

// IPRuleInvokeResponseArrayInput is an input type that accepts IPRuleInvokeResponseArray and IPRuleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `IPRuleInvokeResponseArrayInput` via:
//
//          IPRuleInvokeResponseArray{ IPRuleInvokeResponseArgs{...} }
type IPRuleInvokeResponseArrayInput interface {
	pulumi.Input

	ToIPRuleInvokeResponseArrayOutput() IPRuleInvokeResponseArrayOutput
	ToIPRuleInvokeResponseArrayOutputWithContext(context.Context) IPRuleInvokeResponseArrayOutput
}

type IPRuleInvokeResponseArray []IPRuleInvokeResponseInput

func (IPRuleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRuleInvokeResponse)(nil)).Elem()
}

func (i IPRuleInvokeResponseArray) ToIPRuleInvokeResponseArrayOutput() IPRuleInvokeResponseArrayOutput {
	return i.ToIPRuleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i IPRuleInvokeResponseArray) ToIPRuleInvokeResponseArrayOutputWithContext(ctx context.Context) IPRuleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleInvokeResponseArrayOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleInvokeResponseOutput struct{ *pulumi.OutputState }

func (IPRuleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRuleInvokeResponse)(nil)).Elem()
}

func (o IPRuleInvokeResponseOutput) ToIPRuleInvokeResponseOutput() IPRuleInvokeResponseOutput {
	return o
}

func (o IPRuleInvokeResponseOutput) ToIPRuleInvokeResponseOutputWithContext(ctx context.Context) IPRuleInvokeResponseOutput {
	return o
}

// The action of IP ACL rule.
func (o IPRuleInvokeResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPRuleInvokeResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
func (o IPRuleInvokeResponseOutput) IPAddressOrRange() pulumi.StringOutput {
	return o.ApplyT(func(v IPRuleInvokeResponse) string { return v.IPAddressOrRange }).(pulumi.StringOutput)
}

type IPRuleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (IPRuleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRuleInvokeResponse)(nil)).Elem()
}

func (o IPRuleInvokeResponseArrayOutput) ToIPRuleInvokeResponseArrayOutput() IPRuleInvokeResponseArrayOutput {
	return o
}

func (o IPRuleInvokeResponseArrayOutput) ToIPRuleInvokeResponseArrayOutputWithContext(ctx context.Context) IPRuleInvokeResponseArrayOutput {
	return o
}

func (o IPRuleInvokeResponseArrayOutput) Index(i pulumi.IntInput) IPRuleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPRuleInvokeResponse {
		return vs[0].([]IPRuleInvokeResponse)[vs[1].(int)]
	}).(IPRuleInvokeResponseOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleResponse struct {
	// The action of IP ACL rule.
	Action *string `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	IPAddressOrRange string `pulumi:"iPAddressOrRange"`
}

// IPRuleResponseInput is an input type that accepts IPRuleResponseArgs and IPRuleResponseOutput values.
// You can construct a concrete instance of `IPRuleResponseInput` via:
//
//          IPRuleResponseArgs{...}
type IPRuleResponseInput interface {
	pulumi.Input

	ToIPRuleResponseOutput() IPRuleResponseOutput
	ToIPRuleResponseOutputWithContext(context.Context) IPRuleResponseOutput
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleResponseArgs struct {
	// The action of IP ACL rule.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	IPAddressOrRange pulumi.StringInput `pulumi:"iPAddressOrRange"`
}

func (IPRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRuleResponse)(nil)).Elem()
}

func (i IPRuleResponseArgs) ToIPRuleResponseOutput() IPRuleResponseOutput {
	return i.ToIPRuleResponseOutputWithContext(context.Background())
}

func (i IPRuleResponseArgs) ToIPRuleResponseOutputWithContext(ctx context.Context) IPRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleResponseOutput)
}

// IPRuleResponseArrayInput is an input type that accepts IPRuleResponseArray and IPRuleResponseArrayOutput values.
// You can construct a concrete instance of `IPRuleResponseArrayInput` via:
//
//          IPRuleResponseArray{ IPRuleResponseArgs{...} }
type IPRuleResponseArrayInput interface {
	pulumi.Input

	ToIPRuleResponseArrayOutput() IPRuleResponseArrayOutput
	ToIPRuleResponseArrayOutputWithContext(context.Context) IPRuleResponseArrayOutput
}

type IPRuleResponseArray []IPRuleResponseInput

func (IPRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRuleResponse)(nil)).Elem()
}

func (i IPRuleResponseArray) ToIPRuleResponseArrayOutput() IPRuleResponseArrayOutput {
	return i.ToIPRuleResponseArrayOutputWithContext(context.Background())
}

func (i IPRuleResponseArray) ToIPRuleResponseArrayOutputWithContext(ctx context.Context) IPRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleResponseArrayOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleResponseOutput struct{ *pulumi.OutputState }

func (IPRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRuleResponse)(nil)).Elem()
}

func (o IPRuleResponseOutput) ToIPRuleResponseOutput() IPRuleResponseOutput {
	return o
}

func (o IPRuleResponseOutput) ToIPRuleResponseOutputWithContext(ctx context.Context) IPRuleResponseOutput {
	return o
}

// The action of IP ACL rule.
func (o IPRuleResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPRuleResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
func (o IPRuleResponseOutput) IPAddressOrRange() pulumi.StringOutput {
	return o.ApplyT(func(v IPRuleResponse) string { return v.IPAddressOrRange }).(pulumi.StringOutput)
}

type IPRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (IPRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRuleResponse)(nil)).Elem()
}

func (o IPRuleResponseArrayOutput) ToIPRuleResponseArrayOutput() IPRuleResponseArrayOutput {
	return o
}

func (o IPRuleResponseArrayOutput) ToIPRuleResponseArrayOutputWithContext(ctx context.Context) IPRuleResponseArrayOutput {
	return o
}

func (o IPRuleResponseArrayOutput) Index(i pulumi.IntInput) IPRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPRuleResponse {
		return vs[0].([]IPRuleResponse)[vs[1].(int)]
	}).(IPRuleResponseOutput)
}

// Managed identity for the resource.
type IdentityProperties struct {
	// The principal ID of resource identity.
	PrincipalId *string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId *string `pulumi:"tenantId"`
	// The identity type.
	Type *string `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]UserIdentityProperties `pulumi:"userAssignedIdentities"`
}

// IdentityPropertiesInput is an input type that accepts IdentityPropertiesArgs and IdentityPropertiesOutput values.
// You can construct a concrete instance of `IdentityPropertiesInput` via:
//
//          IdentityPropertiesArgs{...}
type IdentityPropertiesInput interface {
	pulumi.Input

	ToIdentityPropertiesOutput() IdentityPropertiesOutput
	ToIdentityPropertiesOutputWithContext(context.Context) IdentityPropertiesOutput
}

// Managed identity for the resource.
type IdentityPropertiesArgs struct {
	// The principal ID of resource identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The identity type.
	Type ResourceIdentityType `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities UserIdentityPropertiesMapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProperties)(nil)).Elem()
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesOutput() IdentityPropertiesOutput {
	return i.ToIdentityPropertiesOutputWithContext(context.Background())
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesOutputWithContext(ctx context.Context) IdentityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesOutput)
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return i.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesOutput).ToIdentityPropertiesPtrOutputWithContext(ctx)
}

// IdentityPropertiesPtrInput is an input type that accepts IdentityPropertiesArgs, IdentityPropertiesPtr and IdentityPropertiesPtrOutput values.
// You can construct a concrete instance of `IdentityPropertiesPtrInput` via:
//
//          IdentityPropertiesArgs{...}
//
//  or:
//
//          nil
type IdentityPropertiesPtrInput interface {
	pulumi.Input

	ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput
	ToIdentityPropertiesPtrOutputWithContext(context.Context) IdentityPropertiesPtrOutput
}

type identityPropertiesPtrType IdentityPropertiesArgs

func IdentityPropertiesPtr(v *IdentityPropertiesArgs) IdentityPropertiesPtrInput {
	return (*identityPropertiesPtrType)(v)
}

func (*identityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProperties)(nil)).Elem()
}

func (i *identityPropertiesPtrType) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return i.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i *identityPropertiesPtrType) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesPtrOutput)
}

// Managed identity for the resource.
type IdentityPropertiesOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProperties)(nil)).Elem()
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesOutput() IdentityPropertiesOutput {
	return o
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesOutputWithContext(ctx context.Context) IdentityPropertiesOutput {
	return o
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return o.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *IdentityProperties {
		return &v
	}).(IdentityPropertiesPtrOutput)
}

// The principal ID of resource identity.
func (o IdentityPropertiesOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityPropertiesOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityPropertiesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity
// dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityPropertiesOutput) UserAssignedIdentities() UserIdentityPropertiesMapOutput {
	return o.ApplyT(func(v IdentityProperties) map[string]UserIdentityProperties { return v.UserAssignedIdentities }).(UserIdentityPropertiesMapOutput)
}

type IdentityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProperties)(nil)).Elem()
}

func (o IdentityPropertiesPtrOutput) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return o
}

func (o IdentityPropertiesPtrOutput) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return o
}

func (o IdentityPropertiesPtrOutput) Elem() IdentityPropertiesOutput {
	return o.ApplyT(func(v *IdentityProperties) IdentityProperties { return *v }).(IdentityPropertiesOutput)
}

// The principal ID of resource identity.
func (o IdentityPropertiesPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityPropertiesPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityPropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity
// dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityPropertiesPtrOutput) UserAssignedIdentities() UserIdentityPropertiesMapOutput {
	return o.ApplyT(func(v *IdentityProperties) map[string]UserIdentityProperties {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserIdentityPropertiesMapOutput)
}

// Managed identity for the resource.
type IdentityPropertiesInvokeResponse struct {
	// The principal ID of resource identity.
	PrincipalId *string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId *string `pulumi:"tenantId"`
	// The identity type.
	Type *string `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]UserIdentityPropertiesInvokeResponse `pulumi:"userAssignedIdentities"`
}

// IdentityPropertiesInvokeResponseInput is an input type that accepts IdentityPropertiesInvokeResponseArgs and IdentityPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `IdentityPropertiesInvokeResponseInput` via:
//
//          IdentityPropertiesInvokeResponseArgs{...}
type IdentityPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToIdentityPropertiesInvokeResponseOutput() IdentityPropertiesInvokeResponseOutput
	ToIdentityPropertiesInvokeResponseOutputWithContext(context.Context) IdentityPropertiesInvokeResponseOutput
}

// Managed identity for the resource.
type IdentityPropertiesInvokeResponseArgs struct {
	// The principal ID of resource identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities UserIdentityPropertiesInvokeResponseMapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesInvokeResponse)(nil)).Elem()
}

func (i IdentityPropertiesInvokeResponseArgs) ToIdentityPropertiesInvokeResponseOutput() IdentityPropertiesInvokeResponseOutput {
	return i.ToIdentityPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i IdentityPropertiesInvokeResponseArgs) ToIdentityPropertiesInvokeResponseOutputWithContext(ctx context.Context) IdentityPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesInvokeResponseOutput)
}

// Managed identity for the resource.
type IdentityPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesInvokeResponse)(nil)).Elem()
}

func (o IdentityPropertiesInvokeResponseOutput) ToIdentityPropertiesInvokeResponseOutput() IdentityPropertiesInvokeResponseOutput {
	return o
}

func (o IdentityPropertiesInvokeResponseOutput) ToIdentityPropertiesInvokeResponseOutputWithContext(ctx context.Context) IdentityPropertiesInvokeResponseOutput {
	return o
}

// The principal ID of resource identity.
func (o IdentityPropertiesInvokeResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesInvokeResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityPropertiesInvokeResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesInvokeResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityPropertiesInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity
// dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityPropertiesInvokeResponseOutput) UserAssignedIdentities() UserIdentityPropertiesInvokeResponseMapOutput {
	return o.ApplyT(func(v IdentityPropertiesInvokeResponse) map[string]UserIdentityPropertiesInvokeResponse {
		return v.UserAssignedIdentities
	}).(UserIdentityPropertiesInvokeResponseMapOutput)
}

// Managed identity for the resource.
type IdentityPropertiesResponse struct {
	// The principal ID of resource identity.
	PrincipalId *string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId *string `pulumi:"tenantId"`
	// The identity type.
	Type *string `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]UserIdentityPropertiesResponse `pulumi:"userAssignedIdentities"`
}

// IdentityPropertiesResponseInput is an input type that accepts IdentityPropertiesResponseArgs and IdentityPropertiesResponseOutput values.
// You can construct a concrete instance of `IdentityPropertiesResponseInput` via:
//
//          IdentityPropertiesResponseArgs{...}
type IdentityPropertiesResponseInput interface {
	pulumi.Input

	ToIdentityPropertiesResponseOutput() IdentityPropertiesResponseOutput
	ToIdentityPropertiesResponseOutputWithContext(context.Context) IdentityPropertiesResponseOutput
}

// Managed identity for the resource.
type IdentityPropertiesResponseArgs struct {
	// The principal ID of resource identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities UserIdentityPropertiesResponseMapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesResponse)(nil)).Elem()
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponseOutput() IdentityPropertiesResponseOutput {
	return i.ToIdentityPropertiesResponseOutputWithContext(context.Background())
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponseOutputWithContext(ctx context.Context) IdentityPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesResponseOutput)
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return i.ToIdentityPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesResponseOutput).ToIdentityPropertiesResponsePtrOutputWithContext(ctx)
}

// IdentityPropertiesResponsePtrInput is an input type that accepts IdentityPropertiesResponseArgs, IdentityPropertiesResponsePtr and IdentityPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `IdentityPropertiesResponsePtrInput` via:
//
//          IdentityPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type IdentityPropertiesResponsePtrInput interface {
	pulumi.Input

	ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput
	ToIdentityPropertiesResponsePtrOutputWithContext(context.Context) IdentityPropertiesResponsePtrOutput
}

type identityPropertiesResponsePtrType IdentityPropertiesResponseArgs

func IdentityPropertiesResponsePtr(v *IdentityPropertiesResponseArgs) IdentityPropertiesResponsePtrInput {
	return (*identityPropertiesResponsePtrType)(v)
}

func (*identityPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPropertiesResponse)(nil)).Elem()
}

func (i *identityPropertiesResponsePtrType) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return i.ToIdentityPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *identityPropertiesResponsePtrType) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesResponsePtrOutput)
}

// Managed identity for the resource.
type IdentityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesResponse)(nil)).Elem()
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponseOutput() IdentityPropertiesResponseOutput {
	return o
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponseOutputWithContext(ctx context.Context) IdentityPropertiesResponseOutput {
	return o
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return o.ToIdentityPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *IdentityPropertiesResponse {
		return &v
	}).(IdentityPropertiesResponsePtrOutput)
}

// The principal ID of resource identity.
func (o IdentityPropertiesResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityPropertiesResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityPropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity
// dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityPropertiesResponseOutput) UserAssignedIdentities() UserIdentityPropertiesResponseMapOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) map[string]UserIdentityPropertiesResponse {
		return v.UserAssignedIdentities
	}).(UserIdentityPropertiesResponseMapOutput)
}

type IdentityPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPropertiesResponse)(nil)).Elem()
}

func (o IdentityPropertiesResponsePtrOutput) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return o
}

func (o IdentityPropertiesResponsePtrOutput) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return o
}

func (o IdentityPropertiesResponsePtrOutput) Elem() IdentityPropertiesResponseOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) IdentityPropertiesResponse { return *v }).(IdentityPropertiesResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityPropertiesResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityPropertiesResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity
// dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityPropertiesResponsePtrOutput) UserAssignedIdentities() UserIdentityPropertiesResponseMapOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) map[string]UserIdentityPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserIdentityPropertiesResponseMapOutput)
}

// The network rule set for a container registry.
type NetworkRuleSet struct {
	// The default action of allow or deny when no other rules match.
	DefaultAction string `pulumi:"defaultAction"`
	// The IP ACL rules.
	IpRules []IPRule `pulumi:"ipRules"`
	// The virtual network rules.
	VirtualNetworkRules []VirtualNetworkRule `pulumi:"virtualNetworkRules"`
}

// NetworkRuleSetInput is an input type that accepts NetworkRuleSetArgs and NetworkRuleSetOutput values.
// You can construct a concrete instance of `NetworkRuleSetInput` via:
//
//          NetworkRuleSetArgs{...}
type NetworkRuleSetInput interface {
	pulumi.Input

	ToNetworkRuleSetOutput() NetworkRuleSetOutput
	ToNetworkRuleSetOutputWithContext(context.Context) NetworkRuleSetOutput
}

// The network rule set for a container registry.
type NetworkRuleSetArgs struct {
	// The default action of allow or deny when no other rules match.
	DefaultAction pulumi.StringInput `pulumi:"defaultAction"`
	// The IP ACL rules.
	IpRules IPRuleArrayInput `pulumi:"ipRules"`
	// The virtual network rules.
	VirtualNetworkRules VirtualNetworkRuleArrayInput `pulumi:"virtualNetworkRules"`
}

func (NetworkRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSet)(nil)).Elem()
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetOutput() NetworkRuleSetOutput {
	return i.ToNetworkRuleSetOutputWithContext(context.Background())
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetOutputWithContext(ctx context.Context) NetworkRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetOutput)
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return i.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetOutput).ToNetworkRuleSetPtrOutputWithContext(ctx)
}

// NetworkRuleSetPtrInput is an input type that accepts NetworkRuleSetArgs, NetworkRuleSetPtr and NetworkRuleSetPtrOutput values.
// You can construct a concrete instance of `NetworkRuleSetPtrInput` via:
//
//          NetworkRuleSetArgs{...}
//
//  or:
//
//          nil
type NetworkRuleSetPtrInput interface {
	pulumi.Input

	ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput
	ToNetworkRuleSetPtrOutputWithContext(context.Context) NetworkRuleSetPtrOutput
}

type networkRuleSetPtrType NetworkRuleSetArgs

func NetworkRuleSetPtr(v *NetworkRuleSetArgs) NetworkRuleSetPtrInput {
	return (*networkRuleSetPtrType)(v)
}

func (*networkRuleSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSet)(nil)).Elem()
}

func (i *networkRuleSetPtrType) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return i.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (i *networkRuleSetPtrType) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetPtrOutput)
}

// The network rule set for a container registry.
type NetworkRuleSetOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSet)(nil)).Elem()
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetOutput() NetworkRuleSetOutput {
	return o
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetOutputWithContext(ctx context.Context) NetworkRuleSetOutput {
	return o
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return o.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return o.ApplyT(func(v NetworkRuleSet) *NetworkRuleSet {
		return &v
	}).(NetworkRuleSetPtrOutput)
}

// The default action of allow or deny when no other rules match.
func (o NetworkRuleSetOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRuleSet) string { return v.DefaultAction }).(pulumi.StringOutput)
}

// The IP ACL rules.
func (o NetworkRuleSetOutput) IpRules() IPRuleArrayOutput {
	return o.ApplyT(func(v NetworkRuleSet) []IPRule { return v.IpRules }).(IPRuleArrayOutput)
}

// The virtual network rules.
func (o NetworkRuleSetOutput) VirtualNetworkRules() VirtualNetworkRuleArrayOutput {
	return o.ApplyT(func(v NetworkRuleSet) []VirtualNetworkRule { return v.VirtualNetworkRules }).(VirtualNetworkRuleArrayOutput)
}

type NetworkRuleSetPtrOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSet)(nil)).Elem()
}

func (o NetworkRuleSetPtrOutput) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return o
}

func (o NetworkRuleSetPtrOutput) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return o
}

func (o NetworkRuleSetPtrOutput) Elem() NetworkRuleSetOutput {
	return o.ApplyT(func(v *NetworkRuleSet) NetworkRuleSet { return *v }).(NetworkRuleSetOutput)
}

// The default action of allow or deny when no other rules match.
func (o NetworkRuleSetPtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSet) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// The IP ACL rules.
func (o NetworkRuleSetPtrOutput) IpRules() IPRuleArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSet) []IPRule {
		if v == nil {
			return nil
		}
		return v.IpRules
	}).(IPRuleArrayOutput)
}

// The virtual network rules.
func (o NetworkRuleSetPtrOutput) VirtualNetworkRules() VirtualNetworkRuleArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSet) []VirtualNetworkRule {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkRules
	}).(VirtualNetworkRuleArrayOutput)
}

// The network rule set for a container registry.
type NetworkRuleSetInvokeResponse struct {
	// The default action of allow or deny when no other rules match.
	DefaultAction string `pulumi:"defaultAction"`
	// The IP ACL rules.
	IpRules []IPRuleInvokeResponse `pulumi:"ipRules"`
	// The virtual network rules.
	VirtualNetworkRules []VirtualNetworkRuleInvokeResponse `pulumi:"virtualNetworkRules"`
}

// NetworkRuleSetInvokeResponseInput is an input type that accepts NetworkRuleSetInvokeResponseArgs and NetworkRuleSetInvokeResponseOutput values.
// You can construct a concrete instance of `NetworkRuleSetInvokeResponseInput` via:
//
//          NetworkRuleSetInvokeResponseArgs{...}
type NetworkRuleSetInvokeResponseInput interface {
	pulumi.Input

	ToNetworkRuleSetInvokeResponseOutput() NetworkRuleSetInvokeResponseOutput
	ToNetworkRuleSetInvokeResponseOutputWithContext(context.Context) NetworkRuleSetInvokeResponseOutput
}

// The network rule set for a container registry.
type NetworkRuleSetInvokeResponseArgs struct {
	// The default action of allow or deny when no other rules match.
	DefaultAction pulumi.StringInput `pulumi:"defaultAction"`
	// The IP ACL rules.
	IpRules IPRuleInvokeResponseArrayInput `pulumi:"ipRules"`
	// The virtual network rules.
	VirtualNetworkRules VirtualNetworkRuleInvokeResponseArrayInput `pulumi:"virtualNetworkRules"`
}

func (NetworkRuleSetInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSetInvokeResponse)(nil)).Elem()
}

func (i NetworkRuleSetInvokeResponseArgs) ToNetworkRuleSetInvokeResponseOutput() NetworkRuleSetInvokeResponseOutput {
	return i.ToNetworkRuleSetInvokeResponseOutputWithContext(context.Background())
}

func (i NetworkRuleSetInvokeResponseArgs) ToNetworkRuleSetInvokeResponseOutputWithContext(ctx context.Context) NetworkRuleSetInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetInvokeResponseOutput)
}

// The network rule set for a container registry.
type NetworkRuleSetInvokeResponseOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSetInvokeResponse)(nil)).Elem()
}

func (o NetworkRuleSetInvokeResponseOutput) ToNetworkRuleSetInvokeResponseOutput() NetworkRuleSetInvokeResponseOutput {
	return o
}

func (o NetworkRuleSetInvokeResponseOutput) ToNetworkRuleSetInvokeResponseOutputWithContext(ctx context.Context) NetworkRuleSetInvokeResponseOutput {
	return o
}

// The default action of allow or deny when no other rules match.
func (o NetworkRuleSetInvokeResponseOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRuleSetInvokeResponse) string { return v.DefaultAction }).(pulumi.StringOutput)
}

// The IP ACL rules.
func (o NetworkRuleSetInvokeResponseOutput) IpRules() IPRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v NetworkRuleSetInvokeResponse) []IPRuleInvokeResponse { return v.IpRules }).(IPRuleInvokeResponseArrayOutput)
}

// The virtual network rules.
func (o NetworkRuleSetInvokeResponseOutput) VirtualNetworkRules() VirtualNetworkRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v NetworkRuleSetInvokeResponse) []VirtualNetworkRuleInvokeResponse { return v.VirtualNetworkRules }).(VirtualNetworkRuleInvokeResponseArrayOutput)
}

// The network rule set for a container registry.
type NetworkRuleSetResponse struct {
	// The default action of allow or deny when no other rules match.
	DefaultAction string `pulumi:"defaultAction"`
	// The IP ACL rules.
	IpRules []IPRuleResponse `pulumi:"ipRules"`
	// The virtual network rules.
	VirtualNetworkRules []VirtualNetworkRuleResponse `pulumi:"virtualNetworkRules"`
}

// NetworkRuleSetResponseInput is an input type that accepts NetworkRuleSetResponseArgs and NetworkRuleSetResponseOutput values.
// You can construct a concrete instance of `NetworkRuleSetResponseInput` via:
//
//          NetworkRuleSetResponseArgs{...}
type NetworkRuleSetResponseInput interface {
	pulumi.Input

	ToNetworkRuleSetResponseOutput() NetworkRuleSetResponseOutput
	ToNetworkRuleSetResponseOutputWithContext(context.Context) NetworkRuleSetResponseOutput
}

// The network rule set for a container registry.
type NetworkRuleSetResponseArgs struct {
	// The default action of allow or deny when no other rules match.
	DefaultAction pulumi.StringInput `pulumi:"defaultAction"`
	// The IP ACL rules.
	IpRules IPRuleResponseArrayInput `pulumi:"ipRules"`
	// The virtual network rules.
	VirtualNetworkRules VirtualNetworkRuleResponseArrayInput `pulumi:"virtualNetworkRules"`
}

func (NetworkRuleSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSetResponse)(nil)).Elem()
}

func (i NetworkRuleSetResponseArgs) ToNetworkRuleSetResponseOutput() NetworkRuleSetResponseOutput {
	return i.ToNetworkRuleSetResponseOutputWithContext(context.Background())
}

func (i NetworkRuleSetResponseArgs) ToNetworkRuleSetResponseOutputWithContext(ctx context.Context) NetworkRuleSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetResponseOutput)
}

func (i NetworkRuleSetResponseArgs) ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput {
	return i.ToNetworkRuleSetResponsePtrOutputWithContext(context.Background())
}

func (i NetworkRuleSetResponseArgs) ToNetworkRuleSetResponsePtrOutputWithContext(ctx context.Context) NetworkRuleSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetResponseOutput).ToNetworkRuleSetResponsePtrOutputWithContext(ctx)
}

// NetworkRuleSetResponsePtrInput is an input type that accepts NetworkRuleSetResponseArgs, NetworkRuleSetResponsePtr and NetworkRuleSetResponsePtrOutput values.
// You can construct a concrete instance of `NetworkRuleSetResponsePtrInput` via:
//
//          NetworkRuleSetResponseArgs{...}
//
//  or:
//
//          nil
type NetworkRuleSetResponsePtrInput interface {
	pulumi.Input

	ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput
	ToNetworkRuleSetResponsePtrOutputWithContext(context.Context) NetworkRuleSetResponsePtrOutput
}

type networkRuleSetResponsePtrType NetworkRuleSetResponseArgs

func NetworkRuleSetResponsePtr(v *NetworkRuleSetResponseArgs) NetworkRuleSetResponsePtrInput {
	return (*networkRuleSetResponsePtrType)(v)
}

func (*networkRuleSetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSetResponse)(nil)).Elem()
}

func (i *networkRuleSetResponsePtrType) ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput {
	return i.ToNetworkRuleSetResponsePtrOutputWithContext(context.Background())
}

func (i *networkRuleSetResponsePtrType) ToNetworkRuleSetResponsePtrOutputWithContext(ctx context.Context) NetworkRuleSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetResponsePtrOutput)
}

// The network rule set for a container registry.
type NetworkRuleSetResponseOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSetResponse)(nil)).Elem()
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponseOutput() NetworkRuleSetResponseOutput {
	return o
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponseOutputWithContext(ctx context.Context) NetworkRuleSetResponseOutput {
	return o
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput {
	return o.ToNetworkRuleSetResponsePtrOutputWithContext(context.Background())
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponsePtrOutputWithContext(ctx context.Context) NetworkRuleSetResponsePtrOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) *NetworkRuleSetResponse {
		return &v
	}).(NetworkRuleSetResponsePtrOutput)
}

// The default action of allow or deny when no other rules match.
func (o NetworkRuleSetResponseOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) string { return v.DefaultAction }).(pulumi.StringOutput)
}

// The IP ACL rules.
func (o NetworkRuleSetResponseOutput) IpRules() IPRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) []IPRuleResponse { return v.IpRules }).(IPRuleResponseArrayOutput)
}

// The virtual network rules.
func (o NetworkRuleSetResponseOutput) VirtualNetworkRules() VirtualNetworkRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) []VirtualNetworkRuleResponse { return v.VirtualNetworkRules }).(VirtualNetworkRuleResponseArrayOutput)
}

type NetworkRuleSetResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSetResponse)(nil)).Elem()
}

func (o NetworkRuleSetResponsePtrOutput) ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput {
	return o
}

func (o NetworkRuleSetResponsePtrOutput) ToNetworkRuleSetResponsePtrOutputWithContext(ctx context.Context) NetworkRuleSetResponsePtrOutput {
	return o
}

func (o NetworkRuleSetResponsePtrOutput) Elem() NetworkRuleSetResponseOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) NetworkRuleSetResponse { return *v }).(NetworkRuleSetResponseOutput)
}

// The default action of allow or deny when no other rules match.
func (o NetworkRuleSetResponsePtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// The IP ACL rules.
func (o NetworkRuleSetResponsePtrOutput) IpRules() IPRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) []IPRuleResponse {
		if v == nil {
			return nil
		}
		return v.IpRules
	}).(IPRuleResponseArrayOutput)
}

// The virtual network rules.
func (o NetworkRuleSetResponsePtrOutput) VirtualNetworkRules() VirtualNetworkRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) []VirtualNetworkRuleResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkRules
	}).(VirtualNetworkRuleResponseArrayOutput)
}

// The platform properties against which the run has to happen.
type PlatformProperties struct {
	// The OS architecture.
	Architecture *string `pulumi:"architecture"`
	// The operating system type required for the run.
	Os string `pulumi:"os"`
	// Variant of the CPU.
	Variant *string `pulumi:"variant"`
}

// PlatformPropertiesInput is an input type that accepts PlatformPropertiesArgs and PlatformPropertiesOutput values.
// You can construct a concrete instance of `PlatformPropertiesInput` via:
//
//          PlatformPropertiesArgs{...}
type PlatformPropertiesInput interface {
	pulumi.Input

	ToPlatformPropertiesOutput() PlatformPropertiesOutput
	ToPlatformPropertiesOutputWithContext(context.Context) PlatformPropertiesOutput
}

// The platform properties against which the run has to happen.
type PlatformPropertiesArgs struct {
	// The OS architecture.
	Architecture pulumi.StringPtrInput `pulumi:"architecture"`
	// The operating system type required for the run.
	Os pulumi.StringInput `pulumi:"os"`
	// Variant of the CPU.
	Variant pulumi.StringPtrInput `pulumi:"variant"`
}

func (PlatformPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformProperties)(nil)).Elem()
}

func (i PlatformPropertiesArgs) ToPlatformPropertiesOutput() PlatformPropertiesOutput {
	return i.ToPlatformPropertiesOutputWithContext(context.Background())
}

func (i PlatformPropertiesArgs) ToPlatformPropertiesOutputWithContext(ctx context.Context) PlatformPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesOutput)
}

func (i PlatformPropertiesArgs) ToPlatformPropertiesPtrOutput() PlatformPropertiesPtrOutput {
	return i.ToPlatformPropertiesPtrOutputWithContext(context.Background())
}

func (i PlatformPropertiesArgs) ToPlatformPropertiesPtrOutputWithContext(ctx context.Context) PlatformPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesOutput).ToPlatformPropertiesPtrOutputWithContext(ctx)
}

// PlatformPropertiesPtrInput is an input type that accepts PlatformPropertiesArgs, PlatformPropertiesPtr and PlatformPropertiesPtrOutput values.
// You can construct a concrete instance of `PlatformPropertiesPtrInput` via:
//
//          PlatformPropertiesArgs{...}
//
//  or:
//
//          nil
type PlatformPropertiesPtrInput interface {
	pulumi.Input

	ToPlatformPropertiesPtrOutput() PlatformPropertiesPtrOutput
	ToPlatformPropertiesPtrOutputWithContext(context.Context) PlatformPropertiesPtrOutput
}

type platformPropertiesPtrType PlatformPropertiesArgs

func PlatformPropertiesPtr(v *PlatformPropertiesArgs) PlatformPropertiesPtrInput {
	return (*platformPropertiesPtrType)(v)
}

func (*platformPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformProperties)(nil)).Elem()
}

func (i *platformPropertiesPtrType) ToPlatformPropertiesPtrOutput() PlatformPropertiesPtrOutput {
	return i.ToPlatformPropertiesPtrOutputWithContext(context.Background())
}

func (i *platformPropertiesPtrType) ToPlatformPropertiesPtrOutputWithContext(ctx context.Context) PlatformPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesPtrOutput)
}

// The platform properties against which the run has to happen.
type PlatformPropertiesOutput struct{ *pulumi.OutputState }

func (PlatformPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformProperties)(nil)).Elem()
}

func (o PlatformPropertiesOutput) ToPlatformPropertiesOutput() PlatformPropertiesOutput {
	return o
}

func (o PlatformPropertiesOutput) ToPlatformPropertiesOutputWithContext(ctx context.Context) PlatformPropertiesOutput {
	return o
}

func (o PlatformPropertiesOutput) ToPlatformPropertiesPtrOutput() PlatformPropertiesPtrOutput {
	return o.ToPlatformPropertiesPtrOutputWithContext(context.Background())
}

func (o PlatformPropertiesOutput) ToPlatformPropertiesPtrOutputWithContext(ctx context.Context) PlatformPropertiesPtrOutput {
	return o.ApplyT(func(v PlatformProperties) *PlatformProperties {
		return &v
	}).(PlatformPropertiesPtrOutput)
}

// The OS architecture.
func (o PlatformPropertiesOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformProperties) *string { return v.Architecture }).(pulumi.StringPtrOutput)
}

// The operating system type required for the run.
func (o PlatformPropertiesOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v PlatformProperties) string { return v.Os }).(pulumi.StringOutput)
}

// Variant of the CPU.
func (o PlatformPropertiesOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformProperties) *string { return v.Variant }).(pulumi.StringPtrOutput)
}

type PlatformPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PlatformPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformProperties)(nil)).Elem()
}

func (o PlatformPropertiesPtrOutput) ToPlatformPropertiesPtrOutput() PlatformPropertiesPtrOutput {
	return o
}

func (o PlatformPropertiesPtrOutput) ToPlatformPropertiesPtrOutputWithContext(ctx context.Context) PlatformPropertiesPtrOutput {
	return o
}

func (o PlatformPropertiesPtrOutput) Elem() PlatformPropertiesOutput {
	return o.ApplyT(func(v *PlatformProperties) PlatformProperties { return *v }).(PlatformPropertiesOutput)
}

// The OS architecture.
func (o PlatformPropertiesPtrOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformProperties) *string {
		if v == nil {
			return nil
		}
		return v.Architecture
	}).(pulumi.StringPtrOutput)
}

// The operating system type required for the run.
func (o PlatformPropertiesPtrOutput) Os() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Os
	}).(pulumi.StringPtrOutput)
}

// Variant of the CPU.
func (o PlatformPropertiesPtrOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformProperties) *string {
		if v == nil {
			return nil
		}
		return v.Variant
	}).(pulumi.StringPtrOutput)
}

// The platform properties against which the run has to happen.
type PlatformPropertiesInvokeResponse struct {
	// The OS architecture.
	Architecture *string `pulumi:"architecture"`
	// The operating system type required for the run.
	Os string `pulumi:"os"`
	// Variant of the CPU.
	Variant *string `pulumi:"variant"`
}

// PlatformPropertiesInvokeResponseInput is an input type that accepts PlatformPropertiesInvokeResponseArgs and PlatformPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `PlatformPropertiesInvokeResponseInput` via:
//
//          PlatformPropertiesInvokeResponseArgs{...}
type PlatformPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToPlatformPropertiesInvokeResponseOutput() PlatformPropertiesInvokeResponseOutput
	ToPlatformPropertiesInvokeResponseOutputWithContext(context.Context) PlatformPropertiesInvokeResponseOutput
}

// The platform properties against which the run has to happen.
type PlatformPropertiesInvokeResponseArgs struct {
	// The OS architecture.
	Architecture pulumi.StringPtrInput `pulumi:"architecture"`
	// The operating system type required for the run.
	Os pulumi.StringInput `pulumi:"os"`
	// Variant of the CPU.
	Variant pulumi.StringPtrInput `pulumi:"variant"`
}

func (PlatformPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformPropertiesInvokeResponse)(nil)).Elem()
}

func (i PlatformPropertiesInvokeResponseArgs) ToPlatformPropertiesInvokeResponseOutput() PlatformPropertiesInvokeResponseOutput {
	return i.ToPlatformPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i PlatformPropertiesInvokeResponseArgs) ToPlatformPropertiesInvokeResponseOutputWithContext(ctx context.Context) PlatformPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesInvokeResponseOutput)
}

// The platform properties against which the run has to happen.
type PlatformPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (PlatformPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformPropertiesInvokeResponse)(nil)).Elem()
}

func (o PlatformPropertiesInvokeResponseOutput) ToPlatformPropertiesInvokeResponseOutput() PlatformPropertiesInvokeResponseOutput {
	return o
}

func (o PlatformPropertiesInvokeResponseOutput) ToPlatformPropertiesInvokeResponseOutputWithContext(ctx context.Context) PlatformPropertiesInvokeResponseOutput {
	return o
}

// The OS architecture.
func (o PlatformPropertiesInvokeResponseOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformPropertiesInvokeResponse) *string { return v.Architecture }).(pulumi.StringPtrOutput)
}

// The operating system type required for the run.
func (o PlatformPropertiesInvokeResponseOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v PlatformPropertiesInvokeResponse) string { return v.Os }).(pulumi.StringOutput)
}

// Variant of the CPU.
func (o PlatformPropertiesInvokeResponseOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformPropertiesInvokeResponse) *string { return v.Variant }).(pulumi.StringPtrOutput)
}

// The platform properties against which the run has to happen.
type PlatformPropertiesResponse struct {
	// The OS architecture.
	Architecture *string `pulumi:"architecture"`
	// The operating system type required for the run.
	Os string `pulumi:"os"`
	// Variant of the CPU.
	Variant *string `pulumi:"variant"`
}

// PlatformPropertiesResponseInput is an input type that accepts PlatformPropertiesResponseArgs and PlatformPropertiesResponseOutput values.
// You can construct a concrete instance of `PlatformPropertiesResponseInput` via:
//
//          PlatformPropertiesResponseArgs{...}
type PlatformPropertiesResponseInput interface {
	pulumi.Input

	ToPlatformPropertiesResponseOutput() PlatformPropertiesResponseOutput
	ToPlatformPropertiesResponseOutputWithContext(context.Context) PlatformPropertiesResponseOutput
}

// The platform properties against which the run has to happen.
type PlatformPropertiesResponseArgs struct {
	// The OS architecture.
	Architecture pulumi.StringPtrInput `pulumi:"architecture"`
	// The operating system type required for the run.
	Os pulumi.StringInput `pulumi:"os"`
	// Variant of the CPU.
	Variant pulumi.StringPtrInput `pulumi:"variant"`
}

func (PlatformPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformPropertiesResponse)(nil)).Elem()
}

func (i PlatformPropertiesResponseArgs) ToPlatformPropertiesResponseOutput() PlatformPropertiesResponseOutput {
	return i.ToPlatformPropertiesResponseOutputWithContext(context.Background())
}

func (i PlatformPropertiesResponseArgs) ToPlatformPropertiesResponseOutputWithContext(ctx context.Context) PlatformPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesResponseOutput)
}

func (i PlatformPropertiesResponseArgs) ToPlatformPropertiesResponsePtrOutput() PlatformPropertiesResponsePtrOutput {
	return i.ToPlatformPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i PlatformPropertiesResponseArgs) ToPlatformPropertiesResponsePtrOutputWithContext(ctx context.Context) PlatformPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesResponseOutput).ToPlatformPropertiesResponsePtrOutputWithContext(ctx)
}

// PlatformPropertiesResponsePtrInput is an input type that accepts PlatformPropertiesResponseArgs, PlatformPropertiesResponsePtr and PlatformPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `PlatformPropertiesResponsePtrInput` via:
//
//          PlatformPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type PlatformPropertiesResponsePtrInput interface {
	pulumi.Input

	ToPlatformPropertiesResponsePtrOutput() PlatformPropertiesResponsePtrOutput
	ToPlatformPropertiesResponsePtrOutputWithContext(context.Context) PlatformPropertiesResponsePtrOutput
}

type platformPropertiesResponsePtrType PlatformPropertiesResponseArgs

func PlatformPropertiesResponsePtr(v *PlatformPropertiesResponseArgs) PlatformPropertiesResponsePtrInput {
	return (*platformPropertiesResponsePtrType)(v)
}

func (*platformPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformPropertiesResponse)(nil)).Elem()
}

func (i *platformPropertiesResponsePtrType) ToPlatformPropertiesResponsePtrOutput() PlatformPropertiesResponsePtrOutput {
	return i.ToPlatformPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *platformPropertiesResponsePtrType) ToPlatformPropertiesResponsePtrOutputWithContext(ctx context.Context) PlatformPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesResponsePtrOutput)
}

// The platform properties against which the run has to happen.
type PlatformPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PlatformPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformPropertiesResponse)(nil)).Elem()
}

func (o PlatformPropertiesResponseOutput) ToPlatformPropertiesResponseOutput() PlatformPropertiesResponseOutput {
	return o
}

func (o PlatformPropertiesResponseOutput) ToPlatformPropertiesResponseOutputWithContext(ctx context.Context) PlatformPropertiesResponseOutput {
	return o
}

func (o PlatformPropertiesResponseOutput) ToPlatformPropertiesResponsePtrOutput() PlatformPropertiesResponsePtrOutput {
	return o.ToPlatformPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o PlatformPropertiesResponseOutput) ToPlatformPropertiesResponsePtrOutputWithContext(ctx context.Context) PlatformPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PlatformPropertiesResponse) *PlatformPropertiesResponse {
		return &v
	}).(PlatformPropertiesResponsePtrOutput)
}

// The OS architecture.
func (o PlatformPropertiesResponseOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformPropertiesResponse) *string { return v.Architecture }).(pulumi.StringPtrOutput)
}

// The operating system type required for the run.
func (o PlatformPropertiesResponseOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v PlatformPropertiesResponse) string { return v.Os }).(pulumi.StringOutput)
}

// Variant of the CPU.
func (o PlatformPropertiesResponseOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformPropertiesResponse) *string { return v.Variant }).(pulumi.StringPtrOutput)
}

type PlatformPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PlatformPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformPropertiesResponse)(nil)).Elem()
}

func (o PlatformPropertiesResponsePtrOutput) ToPlatformPropertiesResponsePtrOutput() PlatformPropertiesResponsePtrOutput {
	return o
}

func (o PlatformPropertiesResponsePtrOutput) ToPlatformPropertiesResponsePtrOutputWithContext(ctx context.Context) PlatformPropertiesResponsePtrOutput {
	return o
}

func (o PlatformPropertiesResponsePtrOutput) Elem() PlatformPropertiesResponseOutput {
	return o.ApplyT(func(v *PlatformPropertiesResponse) PlatformPropertiesResponse { return *v }).(PlatformPropertiesResponseOutput)
}

// The OS architecture.
func (o PlatformPropertiesResponsePtrOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Architecture
	}).(pulumi.StringPtrOutput)
}

// The operating system type required for the run.
func (o PlatformPropertiesResponsePtrOutput) Os() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Os
	}).(pulumi.StringPtrOutput)
}

// Variant of the CPU.
func (o PlatformPropertiesResponsePtrOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Variant
	}).(pulumi.StringPtrOutput)
}

// The policies for a container registry.
type Policies struct {
	// The quarantine policy for a container registry.
	QuarantinePolicy *QuarantinePolicy `pulumi:"quarantinePolicy"`
	// The retention policy for a container registry.
	RetentionPolicy *RetentionPolicy `pulumi:"retentionPolicy"`
	// The content trust policy for a container registry.
	TrustPolicy *TrustPolicy `pulumi:"trustPolicy"`
}

// PoliciesInput is an input type that accepts PoliciesArgs and PoliciesOutput values.
// You can construct a concrete instance of `PoliciesInput` via:
//
//          PoliciesArgs{...}
type PoliciesInput interface {
	pulumi.Input

	ToPoliciesOutput() PoliciesOutput
	ToPoliciesOutputWithContext(context.Context) PoliciesOutput
}

// The policies for a container registry.
type PoliciesArgs struct {
	// The quarantine policy for a container registry.
	QuarantinePolicy QuarantinePolicyPtrInput `pulumi:"quarantinePolicy"`
	// The retention policy for a container registry.
	RetentionPolicy RetentionPolicyPtrInput `pulumi:"retentionPolicy"`
	// The content trust policy for a container registry.
	TrustPolicy TrustPolicyPtrInput `pulumi:"trustPolicy"`
}

func (PoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policies)(nil)).Elem()
}

func (i PoliciesArgs) ToPoliciesOutput() PoliciesOutput {
	return i.ToPoliciesOutputWithContext(context.Background())
}

func (i PoliciesArgs) ToPoliciesOutputWithContext(ctx context.Context) PoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesOutput)
}

func (i PoliciesArgs) ToPoliciesPtrOutput() PoliciesPtrOutput {
	return i.ToPoliciesPtrOutputWithContext(context.Background())
}

func (i PoliciesArgs) ToPoliciesPtrOutputWithContext(ctx context.Context) PoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesOutput).ToPoliciesPtrOutputWithContext(ctx)
}

// PoliciesPtrInput is an input type that accepts PoliciesArgs, PoliciesPtr and PoliciesPtrOutput values.
// You can construct a concrete instance of `PoliciesPtrInput` via:
//
//          PoliciesArgs{...}
//
//  or:
//
//          nil
type PoliciesPtrInput interface {
	pulumi.Input

	ToPoliciesPtrOutput() PoliciesPtrOutput
	ToPoliciesPtrOutputWithContext(context.Context) PoliciesPtrOutput
}

type policiesPtrType PoliciesArgs

func PoliciesPtr(v *PoliciesArgs) PoliciesPtrInput {
	return (*policiesPtrType)(v)
}

func (*policiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Policies)(nil)).Elem()
}

func (i *policiesPtrType) ToPoliciesPtrOutput() PoliciesPtrOutput {
	return i.ToPoliciesPtrOutputWithContext(context.Background())
}

func (i *policiesPtrType) ToPoliciesPtrOutputWithContext(ctx context.Context) PoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesPtrOutput)
}

// The policies for a container registry.
type PoliciesOutput struct{ *pulumi.OutputState }

func (PoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policies)(nil)).Elem()
}

func (o PoliciesOutput) ToPoliciesOutput() PoliciesOutput {
	return o
}

func (o PoliciesOutput) ToPoliciesOutputWithContext(ctx context.Context) PoliciesOutput {
	return o
}

func (o PoliciesOutput) ToPoliciesPtrOutput() PoliciesPtrOutput {
	return o.ToPoliciesPtrOutputWithContext(context.Background())
}

func (o PoliciesOutput) ToPoliciesPtrOutputWithContext(ctx context.Context) PoliciesPtrOutput {
	return o.ApplyT(func(v Policies) *Policies {
		return &v
	}).(PoliciesPtrOutput)
}

// The quarantine policy for a container registry.
func (o PoliciesOutput) QuarantinePolicy() QuarantinePolicyPtrOutput {
	return o.ApplyT(func(v Policies) *QuarantinePolicy { return v.QuarantinePolicy }).(QuarantinePolicyPtrOutput)
}

// The retention policy for a container registry.
func (o PoliciesOutput) RetentionPolicy() RetentionPolicyPtrOutput {
	return o.ApplyT(func(v Policies) *RetentionPolicy { return v.RetentionPolicy }).(RetentionPolicyPtrOutput)
}

// The content trust policy for a container registry.
func (o PoliciesOutput) TrustPolicy() TrustPolicyPtrOutput {
	return o.ApplyT(func(v Policies) *TrustPolicy { return v.TrustPolicy }).(TrustPolicyPtrOutput)
}

type PoliciesPtrOutput struct{ *pulumi.OutputState }

func (PoliciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Policies)(nil)).Elem()
}

func (o PoliciesPtrOutput) ToPoliciesPtrOutput() PoliciesPtrOutput {
	return o
}

func (o PoliciesPtrOutput) ToPoliciesPtrOutputWithContext(ctx context.Context) PoliciesPtrOutput {
	return o
}

func (o PoliciesPtrOutput) Elem() PoliciesOutput {
	return o.ApplyT(func(v *Policies) Policies { return *v }).(PoliciesOutput)
}

// The quarantine policy for a container registry.
func (o PoliciesPtrOutput) QuarantinePolicy() QuarantinePolicyPtrOutput {
	return o.ApplyT(func(v *Policies) *QuarantinePolicy {
		if v == nil {
			return nil
		}
		return v.QuarantinePolicy
	}).(QuarantinePolicyPtrOutput)
}

// The retention policy for a container registry.
func (o PoliciesPtrOutput) RetentionPolicy() RetentionPolicyPtrOutput {
	return o.ApplyT(func(v *Policies) *RetentionPolicy {
		if v == nil {
			return nil
		}
		return v.RetentionPolicy
	}).(RetentionPolicyPtrOutput)
}

// The content trust policy for a container registry.
func (o PoliciesPtrOutput) TrustPolicy() TrustPolicyPtrOutput {
	return o.ApplyT(func(v *Policies) *TrustPolicy {
		if v == nil {
			return nil
		}
		return v.TrustPolicy
	}).(TrustPolicyPtrOutput)
}

// The policies for a container registry.
type PoliciesInvokeResponse struct {
	// The quarantine policy for a container registry.
	QuarantinePolicy *QuarantinePolicyInvokeResponse `pulumi:"quarantinePolicy"`
	// The retention policy for a container registry.
	RetentionPolicy *RetentionPolicyInvokeResponse `pulumi:"retentionPolicy"`
	// The content trust policy for a container registry.
	TrustPolicy *TrustPolicyInvokeResponse `pulumi:"trustPolicy"`
}

// PoliciesInvokeResponseInput is an input type that accepts PoliciesInvokeResponseArgs and PoliciesInvokeResponseOutput values.
// You can construct a concrete instance of `PoliciesInvokeResponseInput` via:
//
//          PoliciesInvokeResponseArgs{...}
type PoliciesInvokeResponseInput interface {
	pulumi.Input

	ToPoliciesInvokeResponseOutput() PoliciesInvokeResponseOutput
	ToPoliciesInvokeResponseOutputWithContext(context.Context) PoliciesInvokeResponseOutput
}

// The policies for a container registry.
type PoliciesInvokeResponseArgs struct {
	// The quarantine policy for a container registry.
	QuarantinePolicy QuarantinePolicyInvokeResponsePtrInput `pulumi:"quarantinePolicy"`
	// The retention policy for a container registry.
	RetentionPolicy RetentionPolicyInvokeResponsePtrInput `pulumi:"retentionPolicy"`
	// The content trust policy for a container registry.
	TrustPolicy TrustPolicyInvokeResponsePtrInput `pulumi:"trustPolicy"`
}

func (PoliciesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoliciesInvokeResponse)(nil)).Elem()
}

func (i PoliciesInvokeResponseArgs) ToPoliciesInvokeResponseOutput() PoliciesInvokeResponseOutput {
	return i.ToPoliciesInvokeResponseOutputWithContext(context.Background())
}

func (i PoliciesInvokeResponseArgs) ToPoliciesInvokeResponseOutputWithContext(ctx context.Context) PoliciesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesInvokeResponseOutput)
}

// The policies for a container registry.
type PoliciesInvokeResponseOutput struct{ *pulumi.OutputState }

func (PoliciesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoliciesInvokeResponse)(nil)).Elem()
}

func (o PoliciesInvokeResponseOutput) ToPoliciesInvokeResponseOutput() PoliciesInvokeResponseOutput {
	return o
}

func (o PoliciesInvokeResponseOutput) ToPoliciesInvokeResponseOutputWithContext(ctx context.Context) PoliciesInvokeResponseOutput {
	return o
}

// The quarantine policy for a container registry.
func (o PoliciesInvokeResponseOutput) QuarantinePolicy() QuarantinePolicyInvokeResponsePtrOutput {
	return o.ApplyT(func(v PoliciesInvokeResponse) *QuarantinePolicyInvokeResponse { return v.QuarantinePolicy }).(QuarantinePolicyInvokeResponsePtrOutput)
}

// The retention policy for a container registry.
func (o PoliciesInvokeResponseOutput) RetentionPolicy() RetentionPolicyInvokeResponsePtrOutput {
	return o.ApplyT(func(v PoliciesInvokeResponse) *RetentionPolicyInvokeResponse { return v.RetentionPolicy }).(RetentionPolicyInvokeResponsePtrOutput)
}

// The content trust policy for a container registry.
func (o PoliciesInvokeResponseOutput) TrustPolicy() TrustPolicyInvokeResponsePtrOutput {
	return o.ApplyT(func(v PoliciesInvokeResponse) *TrustPolicyInvokeResponse { return v.TrustPolicy }).(TrustPolicyInvokeResponsePtrOutput)
}

// The policies for a container registry.
type PoliciesResponse struct {
	// The quarantine policy for a container registry.
	QuarantinePolicy *QuarantinePolicyResponse `pulumi:"quarantinePolicy"`
	// The retention policy for a container registry.
	RetentionPolicy *RetentionPolicyResponse `pulumi:"retentionPolicy"`
	// The content trust policy for a container registry.
	TrustPolicy *TrustPolicyResponse `pulumi:"trustPolicy"`
}

// PoliciesResponseInput is an input type that accepts PoliciesResponseArgs and PoliciesResponseOutput values.
// You can construct a concrete instance of `PoliciesResponseInput` via:
//
//          PoliciesResponseArgs{...}
type PoliciesResponseInput interface {
	pulumi.Input

	ToPoliciesResponseOutput() PoliciesResponseOutput
	ToPoliciesResponseOutputWithContext(context.Context) PoliciesResponseOutput
}

// The policies for a container registry.
type PoliciesResponseArgs struct {
	// The quarantine policy for a container registry.
	QuarantinePolicy QuarantinePolicyResponsePtrInput `pulumi:"quarantinePolicy"`
	// The retention policy for a container registry.
	RetentionPolicy RetentionPolicyResponsePtrInput `pulumi:"retentionPolicy"`
	// The content trust policy for a container registry.
	TrustPolicy TrustPolicyResponsePtrInput `pulumi:"trustPolicy"`
}

func (PoliciesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoliciesResponse)(nil)).Elem()
}

func (i PoliciesResponseArgs) ToPoliciesResponseOutput() PoliciesResponseOutput {
	return i.ToPoliciesResponseOutputWithContext(context.Background())
}

func (i PoliciesResponseArgs) ToPoliciesResponseOutputWithContext(ctx context.Context) PoliciesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesResponseOutput)
}

func (i PoliciesResponseArgs) ToPoliciesResponsePtrOutput() PoliciesResponsePtrOutput {
	return i.ToPoliciesResponsePtrOutputWithContext(context.Background())
}

func (i PoliciesResponseArgs) ToPoliciesResponsePtrOutputWithContext(ctx context.Context) PoliciesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesResponseOutput).ToPoliciesResponsePtrOutputWithContext(ctx)
}

// PoliciesResponsePtrInput is an input type that accepts PoliciesResponseArgs, PoliciesResponsePtr and PoliciesResponsePtrOutput values.
// You can construct a concrete instance of `PoliciesResponsePtrInput` via:
//
//          PoliciesResponseArgs{...}
//
//  or:
//
//          nil
type PoliciesResponsePtrInput interface {
	pulumi.Input

	ToPoliciesResponsePtrOutput() PoliciesResponsePtrOutput
	ToPoliciesResponsePtrOutputWithContext(context.Context) PoliciesResponsePtrOutput
}

type policiesResponsePtrType PoliciesResponseArgs

func PoliciesResponsePtr(v *PoliciesResponseArgs) PoliciesResponsePtrInput {
	return (*policiesResponsePtrType)(v)
}

func (*policiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoliciesResponse)(nil)).Elem()
}

func (i *policiesResponsePtrType) ToPoliciesResponsePtrOutput() PoliciesResponsePtrOutput {
	return i.ToPoliciesResponsePtrOutputWithContext(context.Background())
}

func (i *policiesResponsePtrType) ToPoliciesResponsePtrOutputWithContext(ctx context.Context) PoliciesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesResponsePtrOutput)
}

// The policies for a container registry.
type PoliciesResponseOutput struct{ *pulumi.OutputState }

func (PoliciesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoliciesResponse)(nil)).Elem()
}

func (o PoliciesResponseOutput) ToPoliciesResponseOutput() PoliciesResponseOutput {
	return o
}

func (o PoliciesResponseOutput) ToPoliciesResponseOutputWithContext(ctx context.Context) PoliciesResponseOutput {
	return o
}

func (o PoliciesResponseOutput) ToPoliciesResponsePtrOutput() PoliciesResponsePtrOutput {
	return o.ToPoliciesResponsePtrOutputWithContext(context.Background())
}

func (o PoliciesResponseOutput) ToPoliciesResponsePtrOutputWithContext(ctx context.Context) PoliciesResponsePtrOutput {
	return o.ApplyT(func(v PoliciesResponse) *PoliciesResponse {
		return &v
	}).(PoliciesResponsePtrOutput)
}

// The quarantine policy for a container registry.
func (o PoliciesResponseOutput) QuarantinePolicy() QuarantinePolicyResponsePtrOutput {
	return o.ApplyT(func(v PoliciesResponse) *QuarantinePolicyResponse { return v.QuarantinePolicy }).(QuarantinePolicyResponsePtrOutput)
}

// The retention policy for a container registry.
func (o PoliciesResponseOutput) RetentionPolicy() RetentionPolicyResponsePtrOutput {
	return o.ApplyT(func(v PoliciesResponse) *RetentionPolicyResponse { return v.RetentionPolicy }).(RetentionPolicyResponsePtrOutput)
}

// The content trust policy for a container registry.
func (o PoliciesResponseOutput) TrustPolicy() TrustPolicyResponsePtrOutput {
	return o.ApplyT(func(v PoliciesResponse) *TrustPolicyResponse { return v.TrustPolicy }).(TrustPolicyResponsePtrOutput)
}

type PoliciesResponsePtrOutput struct{ *pulumi.OutputState }

func (PoliciesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoliciesResponse)(nil)).Elem()
}

func (o PoliciesResponsePtrOutput) ToPoliciesResponsePtrOutput() PoliciesResponsePtrOutput {
	return o
}

func (o PoliciesResponsePtrOutput) ToPoliciesResponsePtrOutputWithContext(ctx context.Context) PoliciesResponsePtrOutput {
	return o
}

func (o PoliciesResponsePtrOutput) Elem() PoliciesResponseOutput {
	return o.ApplyT(func(v *PoliciesResponse) PoliciesResponse { return *v }).(PoliciesResponseOutput)
}

// The quarantine policy for a container registry.
func (o PoliciesResponsePtrOutput) QuarantinePolicy() QuarantinePolicyResponsePtrOutput {
	return o.ApplyT(func(v *PoliciesResponse) *QuarantinePolicyResponse {
		if v == nil {
			return nil
		}
		return v.QuarantinePolicy
	}).(QuarantinePolicyResponsePtrOutput)
}

// The retention policy for a container registry.
func (o PoliciesResponsePtrOutput) RetentionPolicy() RetentionPolicyResponsePtrOutput {
	return o.ApplyT(func(v *PoliciesResponse) *RetentionPolicyResponse {
		if v == nil {
			return nil
		}
		return v.RetentionPolicy
	}).(RetentionPolicyResponsePtrOutput)
}

// The content trust policy for a container registry.
func (o PoliciesResponsePtrOutput) TrustPolicy() TrustPolicyResponsePtrOutput {
	return o.ApplyT(func(v *PoliciesResponse) *TrustPolicyResponse {
		if v == nil {
			return nil
		}
		return v.TrustPolicy
	}).(TrustPolicyResponsePtrOutput)
}

// The quarantine policy for a container registry.
type QuarantinePolicy struct {
	// The value that indicates whether the policy is enabled or not.
	Status *string `pulumi:"status"`
}

// QuarantinePolicyInput is an input type that accepts QuarantinePolicyArgs and QuarantinePolicyOutput values.
// You can construct a concrete instance of `QuarantinePolicyInput` via:
//
//          QuarantinePolicyArgs{...}
type QuarantinePolicyInput interface {
	pulumi.Input

	ToQuarantinePolicyOutput() QuarantinePolicyOutput
	ToQuarantinePolicyOutputWithContext(context.Context) QuarantinePolicyOutput
}

// The quarantine policy for a container registry.
type QuarantinePolicyArgs struct {
	// The value that indicates whether the policy is enabled or not.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (QuarantinePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuarantinePolicy)(nil)).Elem()
}

func (i QuarantinePolicyArgs) ToQuarantinePolicyOutput() QuarantinePolicyOutput {
	return i.ToQuarantinePolicyOutputWithContext(context.Background())
}

func (i QuarantinePolicyArgs) ToQuarantinePolicyOutputWithContext(ctx context.Context) QuarantinePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuarantinePolicyOutput)
}

func (i QuarantinePolicyArgs) ToQuarantinePolicyPtrOutput() QuarantinePolicyPtrOutput {
	return i.ToQuarantinePolicyPtrOutputWithContext(context.Background())
}

func (i QuarantinePolicyArgs) ToQuarantinePolicyPtrOutputWithContext(ctx context.Context) QuarantinePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuarantinePolicyOutput).ToQuarantinePolicyPtrOutputWithContext(ctx)
}

// QuarantinePolicyPtrInput is an input type that accepts QuarantinePolicyArgs, QuarantinePolicyPtr and QuarantinePolicyPtrOutput values.
// You can construct a concrete instance of `QuarantinePolicyPtrInput` via:
//
//          QuarantinePolicyArgs{...}
//
//  or:
//
//          nil
type QuarantinePolicyPtrInput interface {
	pulumi.Input

	ToQuarantinePolicyPtrOutput() QuarantinePolicyPtrOutput
	ToQuarantinePolicyPtrOutputWithContext(context.Context) QuarantinePolicyPtrOutput
}

type quarantinePolicyPtrType QuarantinePolicyArgs

func QuarantinePolicyPtr(v *QuarantinePolicyArgs) QuarantinePolicyPtrInput {
	return (*quarantinePolicyPtrType)(v)
}

func (*quarantinePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QuarantinePolicy)(nil)).Elem()
}

func (i *quarantinePolicyPtrType) ToQuarantinePolicyPtrOutput() QuarantinePolicyPtrOutput {
	return i.ToQuarantinePolicyPtrOutputWithContext(context.Background())
}

func (i *quarantinePolicyPtrType) ToQuarantinePolicyPtrOutputWithContext(ctx context.Context) QuarantinePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuarantinePolicyPtrOutput)
}

// The quarantine policy for a container registry.
type QuarantinePolicyOutput struct{ *pulumi.OutputState }

func (QuarantinePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuarantinePolicy)(nil)).Elem()
}

func (o QuarantinePolicyOutput) ToQuarantinePolicyOutput() QuarantinePolicyOutput {
	return o
}

func (o QuarantinePolicyOutput) ToQuarantinePolicyOutputWithContext(ctx context.Context) QuarantinePolicyOutput {
	return o
}

func (o QuarantinePolicyOutput) ToQuarantinePolicyPtrOutput() QuarantinePolicyPtrOutput {
	return o.ToQuarantinePolicyPtrOutputWithContext(context.Background())
}

func (o QuarantinePolicyOutput) ToQuarantinePolicyPtrOutputWithContext(ctx context.Context) QuarantinePolicyPtrOutput {
	return o.ApplyT(func(v QuarantinePolicy) *QuarantinePolicy {
		return &v
	}).(QuarantinePolicyPtrOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o QuarantinePolicyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QuarantinePolicy) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type QuarantinePolicyPtrOutput struct{ *pulumi.OutputState }

func (QuarantinePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuarantinePolicy)(nil)).Elem()
}

func (o QuarantinePolicyPtrOutput) ToQuarantinePolicyPtrOutput() QuarantinePolicyPtrOutput {
	return o
}

func (o QuarantinePolicyPtrOutput) ToQuarantinePolicyPtrOutputWithContext(ctx context.Context) QuarantinePolicyPtrOutput {
	return o
}

func (o QuarantinePolicyPtrOutput) Elem() QuarantinePolicyOutput {
	return o.ApplyT(func(v *QuarantinePolicy) QuarantinePolicy { return *v }).(QuarantinePolicyOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o QuarantinePolicyPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuarantinePolicy) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The quarantine policy for a container registry.
type QuarantinePolicyInvokeResponse struct {
	// The value that indicates whether the policy is enabled or not.
	Status *string `pulumi:"status"`
}

// QuarantinePolicyInvokeResponseInput is an input type that accepts QuarantinePolicyInvokeResponseArgs and QuarantinePolicyInvokeResponseOutput values.
// You can construct a concrete instance of `QuarantinePolicyInvokeResponseInput` via:
//
//          QuarantinePolicyInvokeResponseArgs{...}
type QuarantinePolicyInvokeResponseInput interface {
	pulumi.Input

	ToQuarantinePolicyInvokeResponseOutput() QuarantinePolicyInvokeResponseOutput
	ToQuarantinePolicyInvokeResponseOutputWithContext(context.Context) QuarantinePolicyInvokeResponseOutput
}

// The quarantine policy for a container registry.
type QuarantinePolicyInvokeResponseArgs struct {
	// The value that indicates whether the policy is enabled or not.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (QuarantinePolicyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuarantinePolicyInvokeResponse)(nil)).Elem()
}

func (i QuarantinePolicyInvokeResponseArgs) ToQuarantinePolicyInvokeResponseOutput() QuarantinePolicyInvokeResponseOutput {
	return i.ToQuarantinePolicyInvokeResponseOutputWithContext(context.Background())
}

func (i QuarantinePolicyInvokeResponseArgs) ToQuarantinePolicyInvokeResponseOutputWithContext(ctx context.Context) QuarantinePolicyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuarantinePolicyInvokeResponseOutput)
}

func (i QuarantinePolicyInvokeResponseArgs) ToQuarantinePolicyInvokeResponsePtrOutput() QuarantinePolicyInvokeResponsePtrOutput {
	return i.ToQuarantinePolicyInvokeResponsePtrOutputWithContext(context.Background())
}

func (i QuarantinePolicyInvokeResponseArgs) ToQuarantinePolicyInvokeResponsePtrOutputWithContext(ctx context.Context) QuarantinePolicyInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuarantinePolicyInvokeResponseOutput).ToQuarantinePolicyInvokeResponsePtrOutputWithContext(ctx)
}

// QuarantinePolicyInvokeResponsePtrInput is an input type that accepts QuarantinePolicyInvokeResponseArgs, QuarantinePolicyInvokeResponsePtr and QuarantinePolicyInvokeResponsePtrOutput values.
// You can construct a concrete instance of `QuarantinePolicyInvokeResponsePtrInput` via:
//
//          QuarantinePolicyInvokeResponseArgs{...}
//
//  or:
//
//          nil
type QuarantinePolicyInvokeResponsePtrInput interface {
	pulumi.Input

	ToQuarantinePolicyInvokeResponsePtrOutput() QuarantinePolicyInvokeResponsePtrOutput
	ToQuarantinePolicyInvokeResponsePtrOutputWithContext(context.Context) QuarantinePolicyInvokeResponsePtrOutput
}

type quarantinePolicyInvokeResponsePtrType QuarantinePolicyInvokeResponseArgs

func QuarantinePolicyInvokeResponsePtr(v *QuarantinePolicyInvokeResponseArgs) QuarantinePolicyInvokeResponsePtrInput {
	return (*quarantinePolicyInvokeResponsePtrType)(v)
}

func (*quarantinePolicyInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QuarantinePolicyInvokeResponse)(nil)).Elem()
}

func (i *quarantinePolicyInvokeResponsePtrType) ToQuarantinePolicyInvokeResponsePtrOutput() QuarantinePolicyInvokeResponsePtrOutput {
	return i.ToQuarantinePolicyInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *quarantinePolicyInvokeResponsePtrType) ToQuarantinePolicyInvokeResponsePtrOutputWithContext(ctx context.Context) QuarantinePolicyInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuarantinePolicyInvokeResponsePtrOutput)
}

// The quarantine policy for a container registry.
type QuarantinePolicyInvokeResponseOutput struct{ *pulumi.OutputState }

func (QuarantinePolicyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuarantinePolicyInvokeResponse)(nil)).Elem()
}

func (o QuarantinePolicyInvokeResponseOutput) ToQuarantinePolicyInvokeResponseOutput() QuarantinePolicyInvokeResponseOutput {
	return o
}

func (o QuarantinePolicyInvokeResponseOutput) ToQuarantinePolicyInvokeResponseOutputWithContext(ctx context.Context) QuarantinePolicyInvokeResponseOutput {
	return o
}

func (o QuarantinePolicyInvokeResponseOutput) ToQuarantinePolicyInvokeResponsePtrOutput() QuarantinePolicyInvokeResponsePtrOutput {
	return o.ToQuarantinePolicyInvokeResponsePtrOutputWithContext(context.Background())
}

func (o QuarantinePolicyInvokeResponseOutput) ToQuarantinePolicyInvokeResponsePtrOutputWithContext(ctx context.Context) QuarantinePolicyInvokeResponsePtrOutput {
	return o.ApplyT(func(v QuarantinePolicyInvokeResponse) *QuarantinePolicyInvokeResponse {
		return &v
	}).(QuarantinePolicyInvokeResponsePtrOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o QuarantinePolicyInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QuarantinePolicyInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type QuarantinePolicyInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (QuarantinePolicyInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuarantinePolicyInvokeResponse)(nil)).Elem()
}

func (o QuarantinePolicyInvokeResponsePtrOutput) ToQuarantinePolicyInvokeResponsePtrOutput() QuarantinePolicyInvokeResponsePtrOutput {
	return o
}

func (o QuarantinePolicyInvokeResponsePtrOutput) ToQuarantinePolicyInvokeResponsePtrOutputWithContext(ctx context.Context) QuarantinePolicyInvokeResponsePtrOutput {
	return o
}

func (o QuarantinePolicyInvokeResponsePtrOutput) Elem() QuarantinePolicyInvokeResponseOutput {
	return o.ApplyT(func(v *QuarantinePolicyInvokeResponse) QuarantinePolicyInvokeResponse { return *v }).(QuarantinePolicyInvokeResponseOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o QuarantinePolicyInvokeResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuarantinePolicyInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The quarantine policy for a container registry.
type QuarantinePolicyResponse struct {
	// The value that indicates whether the policy is enabled or not.
	Status *string `pulumi:"status"`
}

// QuarantinePolicyResponseInput is an input type that accepts QuarantinePolicyResponseArgs and QuarantinePolicyResponseOutput values.
// You can construct a concrete instance of `QuarantinePolicyResponseInput` via:
//
//          QuarantinePolicyResponseArgs{...}
type QuarantinePolicyResponseInput interface {
	pulumi.Input

	ToQuarantinePolicyResponseOutput() QuarantinePolicyResponseOutput
	ToQuarantinePolicyResponseOutputWithContext(context.Context) QuarantinePolicyResponseOutput
}

// The quarantine policy for a container registry.
type QuarantinePolicyResponseArgs struct {
	// The value that indicates whether the policy is enabled or not.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (QuarantinePolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuarantinePolicyResponse)(nil)).Elem()
}

func (i QuarantinePolicyResponseArgs) ToQuarantinePolicyResponseOutput() QuarantinePolicyResponseOutput {
	return i.ToQuarantinePolicyResponseOutputWithContext(context.Background())
}

func (i QuarantinePolicyResponseArgs) ToQuarantinePolicyResponseOutputWithContext(ctx context.Context) QuarantinePolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuarantinePolicyResponseOutput)
}

func (i QuarantinePolicyResponseArgs) ToQuarantinePolicyResponsePtrOutput() QuarantinePolicyResponsePtrOutput {
	return i.ToQuarantinePolicyResponsePtrOutputWithContext(context.Background())
}

func (i QuarantinePolicyResponseArgs) ToQuarantinePolicyResponsePtrOutputWithContext(ctx context.Context) QuarantinePolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuarantinePolicyResponseOutput).ToQuarantinePolicyResponsePtrOutputWithContext(ctx)
}

// QuarantinePolicyResponsePtrInput is an input type that accepts QuarantinePolicyResponseArgs, QuarantinePolicyResponsePtr and QuarantinePolicyResponsePtrOutput values.
// You can construct a concrete instance of `QuarantinePolicyResponsePtrInput` via:
//
//          QuarantinePolicyResponseArgs{...}
//
//  or:
//
//          nil
type QuarantinePolicyResponsePtrInput interface {
	pulumi.Input

	ToQuarantinePolicyResponsePtrOutput() QuarantinePolicyResponsePtrOutput
	ToQuarantinePolicyResponsePtrOutputWithContext(context.Context) QuarantinePolicyResponsePtrOutput
}

type quarantinePolicyResponsePtrType QuarantinePolicyResponseArgs

func QuarantinePolicyResponsePtr(v *QuarantinePolicyResponseArgs) QuarantinePolicyResponsePtrInput {
	return (*quarantinePolicyResponsePtrType)(v)
}

func (*quarantinePolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QuarantinePolicyResponse)(nil)).Elem()
}

func (i *quarantinePolicyResponsePtrType) ToQuarantinePolicyResponsePtrOutput() QuarantinePolicyResponsePtrOutput {
	return i.ToQuarantinePolicyResponsePtrOutputWithContext(context.Background())
}

func (i *quarantinePolicyResponsePtrType) ToQuarantinePolicyResponsePtrOutputWithContext(ctx context.Context) QuarantinePolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuarantinePolicyResponsePtrOutput)
}

// The quarantine policy for a container registry.
type QuarantinePolicyResponseOutput struct{ *pulumi.OutputState }

func (QuarantinePolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuarantinePolicyResponse)(nil)).Elem()
}

func (o QuarantinePolicyResponseOutput) ToQuarantinePolicyResponseOutput() QuarantinePolicyResponseOutput {
	return o
}

func (o QuarantinePolicyResponseOutput) ToQuarantinePolicyResponseOutputWithContext(ctx context.Context) QuarantinePolicyResponseOutput {
	return o
}

func (o QuarantinePolicyResponseOutput) ToQuarantinePolicyResponsePtrOutput() QuarantinePolicyResponsePtrOutput {
	return o.ToQuarantinePolicyResponsePtrOutputWithContext(context.Background())
}

func (o QuarantinePolicyResponseOutput) ToQuarantinePolicyResponsePtrOutputWithContext(ctx context.Context) QuarantinePolicyResponsePtrOutput {
	return o.ApplyT(func(v QuarantinePolicyResponse) *QuarantinePolicyResponse {
		return &v
	}).(QuarantinePolicyResponsePtrOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o QuarantinePolicyResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QuarantinePolicyResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type QuarantinePolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (QuarantinePolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuarantinePolicyResponse)(nil)).Elem()
}

func (o QuarantinePolicyResponsePtrOutput) ToQuarantinePolicyResponsePtrOutput() QuarantinePolicyResponsePtrOutput {
	return o
}

func (o QuarantinePolicyResponsePtrOutput) ToQuarantinePolicyResponsePtrOutputWithContext(ctx context.Context) QuarantinePolicyResponsePtrOutput {
	return o
}

func (o QuarantinePolicyResponsePtrOutput) Elem() QuarantinePolicyResponseOutput {
	return o.ApplyT(func(v *QuarantinePolicyResponse) QuarantinePolicyResponse { return *v }).(QuarantinePolicyResponseOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o QuarantinePolicyResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuarantinePolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The login password for the container registry.
type RegistryPasswordInvokeResponse struct {
	// The password name.
	Name *string `pulumi:"name"`
	// The password value.
	Value *string `pulumi:"value"`
}

// RegistryPasswordInvokeResponseInput is an input type that accepts RegistryPasswordInvokeResponseArgs and RegistryPasswordInvokeResponseOutput values.
// You can construct a concrete instance of `RegistryPasswordInvokeResponseInput` via:
//
//          RegistryPasswordInvokeResponseArgs{...}
type RegistryPasswordInvokeResponseInput interface {
	pulumi.Input

	ToRegistryPasswordInvokeResponseOutput() RegistryPasswordInvokeResponseOutput
	ToRegistryPasswordInvokeResponseOutputWithContext(context.Context) RegistryPasswordInvokeResponseOutput
}

// The login password for the container registry.
type RegistryPasswordInvokeResponseArgs struct {
	// The password name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The password value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RegistryPasswordInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryPasswordInvokeResponse)(nil)).Elem()
}

func (i RegistryPasswordInvokeResponseArgs) ToRegistryPasswordInvokeResponseOutput() RegistryPasswordInvokeResponseOutput {
	return i.ToRegistryPasswordInvokeResponseOutputWithContext(context.Background())
}

func (i RegistryPasswordInvokeResponseArgs) ToRegistryPasswordInvokeResponseOutputWithContext(ctx context.Context) RegistryPasswordInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryPasswordInvokeResponseOutput)
}

// RegistryPasswordInvokeResponseArrayInput is an input type that accepts RegistryPasswordInvokeResponseArray and RegistryPasswordInvokeResponseArrayOutput values.
// You can construct a concrete instance of `RegistryPasswordInvokeResponseArrayInput` via:
//
//          RegistryPasswordInvokeResponseArray{ RegistryPasswordInvokeResponseArgs{...} }
type RegistryPasswordInvokeResponseArrayInput interface {
	pulumi.Input

	ToRegistryPasswordInvokeResponseArrayOutput() RegistryPasswordInvokeResponseArrayOutput
	ToRegistryPasswordInvokeResponseArrayOutputWithContext(context.Context) RegistryPasswordInvokeResponseArrayOutput
}

type RegistryPasswordInvokeResponseArray []RegistryPasswordInvokeResponseInput

func (RegistryPasswordInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryPasswordInvokeResponse)(nil)).Elem()
}

func (i RegistryPasswordInvokeResponseArray) ToRegistryPasswordInvokeResponseArrayOutput() RegistryPasswordInvokeResponseArrayOutput {
	return i.ToRegistryPasswordInvokeResponseArrayOutputWithContext(context.Background())
}

func (i RegistryPasswordInvokeResponseArray) ToRegistryPasswordInvokeResponseArrayOutputWithContext(ctx context.Context) RegistryPasswordInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryPasswordInvokeResponseArrayOutput)
}

// The login password for the container registry.
type RegistryPasswordInvokeResponseOutput struct{ *pulumi.OutputState }

func (RegistryPasswordInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryPasswordInvokeResponse)(nil)).Elem()
}

func (o RegistryPasswordInvokeResponseOutput) ToRegistryPasswordInvokeResponseOutput() RegistryPasswordInvokeResponseOutput {
	return o
}

func (o RegistryPasswordInvokeResponseOutput) ToRegistryPasswordInvokeResponseOutputWithContext(ctx context.Context) RegistryPasswordInvokeResponseOutput {
	return o
}

// The password name.
func (o RegistryPasswordInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryPasswordInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The password value.
func (o RegistryPasswordInvokeResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryPasswordInvokeResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RegistryPasswordInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (RegistryPasswordInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryPasswordInvokeResponse)(nil)).Elem()
}

func (o RegistryPasswordInvokeResponseArrayOutput) ToRegistryPasswordInvokeResponseArrayOutput() RegistryPasswordInvokeResponseArrayOutput {
	return o
}

func (o RegistryPasswordInvokeResponseArrayOutput) ToRegistryPasswordInvokeResponseArrayOutputWithContext(ctx context.Context) RegistryPasswordInvokeResponseArrayOutput {
	return o
}

func (o RegistryPasswordInvokeResponseArrayOutput) Index(i pulumi.IntInput) RegistryPasswordInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegistryPasswordInvokeResponse {
		return vs[0].([]RegistryPasswordInvokeResponse)[vs[1].(int)]
	}).(RegistryPasswordInvokeResponseOutput)
}

// The request that generated the event.
type RequestInvokeResponse struct {
	// The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the standard http request.
	Addr *string `pulumi:"addr"`
	// The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests.
	Host *string `pulumi:"host"`
	// The ID of the request that initiated the event.
	Id *string `pulumi:"id"`
	// The request method that generated the event.
	Method *string `pulumi:"method"`
	// The user agent header of the request.
	Useragent *string `pulumi:"useragent"`
}

// RequestInvokeResponseInput is an input type that accepts RequestInvokeResponseArgs and RequestInvokeResponseOutput values.
// You can construct a concrete instance of `RequestInvokeResponseInput` via:
//
//          RequestInvokeResponseArgs{...}
type RequestInvokeResponseInput interface {
	pulumi.Input

	ToRequestInvokeResponseOutput() RequestInvokeResponseOutput
	ToRequestInvokeResponseOutputWithContext(context.Context) RequestInvokeResponseOutput
}

// The request that generated the event.
type RequestInvokeResponseArgs struct {
	// The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the standard http request.
	Addr pulumi.StringPtrInput `pulumi:"addr"`
	// The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The ID of the request that initiated the event.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The request method that generated the event.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The user agent header of the request.
	Useragent pulumi.StringPtrInput `pulumi:"useragent"`
}

func (RequestInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestInvokeResponse)(nil)).Elem()
}

func (i RequestInvokeResponseArgs) ToRequestInvokeResponseOutput() RequestInvokeResponseOutput {
	return i.ToRequestInvokeResponseOutputWithContext(context.Background())
}

func (i RequestInvokeResponseArgs) ToRequestInvokeResponseOutputWithContext(ctx context.Context) RequestInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestInvokeResponseOutput)
}

func (i RequestInvokeResponseArgs) ToRequestInvokeResponsePtrOutput() RequestInvokeResponsePtrOutput {
	return i.ToRequestInvokeResponsePtrOutputWithContext(context.Background())
}

func (i RequestInvokeResponseArgs) ToRequestInvokeResponsePtrOutputWithContext(ctx context.Context) RequestInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestInvokeResponseOutput).ToRequestInvokeResponsePtrOutputWithContext(ctx)
}

// RequestInvokeResponsePtrInput is an input type that accepts RequestInvokeResponseArgs, RequestInvokeResponsePtr and RequestInvokeResponsePtrOutput values.
// You can construct a concrete instance of `RequestInvokeResponsePtrInput` via:
//
//          RequestInvokeResponseArgs{...}
//
//  or:
//
//          nil
type RequestInvokeResponsePtrInput interface {
	pulumi.Input

	ToRequestInvokeResponsePtrOutput() RequestInvokeResponsePtrOutput
	ToRequestInvokeResponsePtrOutputWithContext(context.Context) RequestInvokeResponsePtrOutput
}

type requestInvokeResponsePtrType RequestInvokeResponseArgs

func RequestInvokeResponsePtr(v *RequestInvokeResponseArgs) RequestInvokeResponsePtrInput {
	return (*requestInvokeResponsePtrType)(v)
}

func (*requestInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestInvokeResponse)(nil)).Elem()
}

func (i *requestInvokeResponsePtrType) ToRequestInvokeResponsePtrOutput() RequestInvokeResponsePtrOutput {
	return i.ToRequestInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *requestInvokeResponsePtrType) ToRequestInvokeResponsePtrOutputWithContext(ctx context.Context) RequestInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestInvokeResponsePtrOutput)
}

// The request that generated the event.
type RequestInvokeResponseOutput struct{ *pulumi.OutputState }

func (RequestInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestInvokeResponse)(nil)).Elem()
}

func (o RequestInvokeResponseOutput) ToRequestInvokeResponseOutput() RequestInvokeResponseOutput {
	return o
}

func (o RequestInvokeResponseOutput) ToRequestInvokeResponseOutputWithContext(ctx context.Context) RequestInvokeResponseOutput {
	return o
}

func (o RequestInvokeResponseOutput) ToRequestInvokeResponsePtrOutput() RequestInvokeResponsePtrOutput {
	return o.ToRequestInvokeResponsePtrOutputWithContext(context.Background())
}

func (o RequestInvokeResponseOutput) ToRequestInvokeResponsePtrOutputWithContext(ctx context.Context) RequestInvokeResponsePtrOutput {
	return o.ApplyT(func(v RequestInvokeResponse) *RequestInvokeResponse {
		return &v
	}).(RequestInvokeResponsePtrOutput)
}

// The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the standard http request.
func (o RequestInvokeResponseOutput) Addr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestInvokeResponse) *string { return v.Addr }).(pulumi.StringPtrOutput)
}

// The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests.
func (o RequestInvokeResponseOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestInvokeResponse) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The ID of the request that initiated the event.
func (o RequestInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The request method that generated the event.
func (o RequestInvokeResponseOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestInvokeResponse) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The user agent header of the request.
func (o RequestInvokeResponseOutput) Useragent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestInvokeResponse) *string { return v.Useragent }).(pulumi.StringPtrOutput)
}

type RequestInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (RequestInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestInvokeResponse)(nil)).Elem()
}

func (o RequestInvokeResponsePtrOutput) ToRequestInvokeResponsePtrOutput() RequestInvokeResponsePtrOutput {
	return o
}

func (o RequestInvokeResponsePtrOutput) ToRequestInvokeResponsePtrOutputWithContext(ctx context.Context) RequestInvokeResponsePtrOutput {
	return o
}

func (o RequestInvokeResponsePtrOutput) Elem() RequestInvokeResponseOutput {
	return o.ApplyT(func(v *RequestInvokeResponse) RequestInvokeResponse { return *v }).(RequestInvokeResponseOutput)
}

// The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the standard http request.
func (o RequestInvokeResponsePtrOutput) Addr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Addr
	}).(pulumi.StringPtrOutput)
}

// The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests.
func (o RequestInvokeResponsePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The ID of the request that initiated the event.
func (o RequestInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The request method that generated the event.
func (o RequestInvokeResponsePtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The user agent header of the request.
func (o RequestInvokeResponsePtrOutput) Useragent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Useragent
	}).(pulumi.StringPtrOutput)
}

// The retention policy for a container registry.
type RetentionPolicy struct {
	// The number of days to retain an untagged manifest after which it gets purged.
	Days *int `pulumi:"days"`
	// The value that indicates whether the policy is enabled or not.
	Status *string `pulumi:"status"`
}

// RetentionPolicyInput is an input type that accepts RetentionPolicyArgs and RetentionPolicyOutput values.
// You can construct a concrete instance of `RetentionPolicyInput` via:
//
//          RetentionPolicyArgs{...}
type RetentionPolicyInput interface {
	pulumi.Input

	ToRetentionPolicyOutput() RetentionPolicyOutput
	ToRetentionPolicyOutputWithContext(context.Context) RetentionPolicyOutput
}

// The retention policy for a container registry.
type RetentionPolicyArgs struct {
	// The number of days to retain an untagged manifest after which it gets purged.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// The value that indicates whether the policy is enabled or not.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicy)(nil)).Elem()
}

func (i RetentionPolicyArgs) ToRetentionPolicyOutput() RetentionPolicyOutput {
	return i.ToRetentionPolicyOutputWithContext(context.Background())
}

func (i RetentionPolicyArgs) ToRetentionPolicyOutputWithContext(ctx context.Context) RetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyOutput)
}

func (i RetentionPolicyArgs) ToRetentionPolicyPtrOutput() RetentionPolicyPtrOutput {
	return i.ToRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i RetentionPolicyArgs) ToRetentionPolicyPtrOutputWithContext(ctx context.Context) RetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyOutput).ToRetentionPolicyPtrOutputWithContext(ctx)
}

// RetentionPolicyPtrInput is an input type that accepts RetentionPolicyArgs, RetentionPolicyPtr and RetentionPolicyPtrOutput values.
// You can construct a concrete instance of `RetentionPolicyPtrInput` via:
//
//          RetentionPolicyArgs{...}
//
//  or:
//
//          nil
type RetentionPolicyPtrInput interface {
	pulumi.Input

	ToRetentionPolicyPtrOutput() RetentionPolicyPtrOutput
	ToRetentionPolicyPtrOutputWithContext(context.Context) RetentionPolicyPtrOutput
}

type retentionPolicyPtrType RetentionPolicyArgs

func RetentionPolicyPtr(v *RetentionPolicyArgs) RetentionPolicyPtrInput {
	return (*retentionPolicyPtrType)(v)
}

func (*retentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicy)(nil)).Elem()
}

func (i *retentionPolicyPtrType) ToRetentionPolicyPtrOutput() RetentionPolicyPtrOutput {
	return i.ToRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *retentionPolicyPtrType) ToRetentionPolicyPtrOutputWithContext(ctx context.Context) RetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyPtrOutput)
}

// The retention policy for a container registry.
type RetentionPolicyOutput struct{ *pulumi.OutputState }

func (RetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicy)(nil)).Elem()
}

func (o RetentionPolicyOutput) ToRetentionPolicyOutput() RetentionPolicyOutput {
	return o
}

func (o RetentionPolicyOutput) ToRetentionPolicyOutputWithContext(ctx context.Context) RetentionPolicyOutput {
	return o
}

func (o RetentionPolicyOutput) ToRetentionPolicyPtrOutput() RetentionPolicyPtrOutput {
	return o.ToRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o RetentionPolicyOutput) ToRetentionPolicyPtrOutputWithContext(ctx context.Context) RetentionPolicyPtrOutput {
	return o.ApplyT(func(v RetentionPolicy) *RetentionPolicy {
		return &v
	}).(RetentionPolicyPtrOutput)
}

// The number of days to retain an untagged manifest after which it gets purged.
func (o RetentionPolicyOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionPolicy) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o RetentionPolicyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RetentionPolicy) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (RetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicy)(nil)).Elem()
}

func (o RetentionPolicyPtrOutput) ToRetentionPolicyPtrOutput() RetentionPolicyPtrOutput {
	return o
}

func (o RetentionPolicyPtrOutput) ToRetentionPolicyPtrOutputWithContext(ctx context.Context) RetentionPolicyPtrOutput {
	return o
}

func (o RetentionPolicyPtrOutput) Elem() RetentionPolicyOutput {
	return o.ApplyT(func(v *RetentionPolicy) RetentionPolicy { return *v }).(RetentionPolicyOutput)
}

// The number of days to retain an untagged manifest after which it gets purged.
func (o RetentionPolicyPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o RetentionPolicyPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RetentionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The retention policy for a container registry.
type RetentionPolicyInvokeResponse struct {
	// The number of days to retain an untagged manifest after which it gets purged.
	Days *int `pulumi:"days"`
	// The timestamp when the policy was last updated.
	LastUpdatedTime string `pulumi:"lastUpdatedTime"`
	// The value that indicates whether the policy is enabled or not.
	Status *string `pulumi:"status"`
}

// RetentionPolicyInvokeResponseInput is an input type that accepts RetentionPolicyInvokeResponseArgs and RetentionPolicyInvokeResponseOutput values.
// You can construct a concrete instance of `RetentionPolicyInvokeResponseInput` via:
//
//          RetentionPolicyInvokeResponseArgs{...}
type RetentionPolicyInvokeResponseInput interface {
	pulumi.Input

	ToRetentionPolicyInvokeResponseOutput() RetentionPolicyInvokeResponseOutput
	ToRetentionPolicyInvokeResponseOutputWithContext(context.Context) RetentionPolicyInvokeResponseOutput
}

// The retention policy for a container registry.
type RetentionPolicyInvokeResponseArgs struct {
	// The number of days to retain an untagged manifest after which it gets purged.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// The timestamp when the policy was last updated.
	LastUpdatedTime pulumi.StringInput `pulumi:"lastUpdatedTime"`
	// The value that indicates whether the policy is enabled or not.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RetentionPolicyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyInvokeResponse)(nil)).Elem()
}

func (i RetentionPolicyInvokeResponseArgs) ToRetentionPolicyInvokeResponseOutput() RetentionPolicyInvokeResponseOutput {
	return i.ToRetentionPolicyInvokeResponseOutputWithContext(context.Background())
}

func (i RetentionPolicyInvokeResponseArgs) ToRetentionPolicyInvokeResponseOutputWithContext(ctx context.Context) RetentionPolicyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyInvokeResponseOutput)
}

func (i RetentionPolicyInvokeResponseArgs) ToRetentionPolicyInvokeResponsePtrOutput() RetentionPolicyInvokeResponsePtrOutput {
	return i.ToRetentionPolicyInvokeResponsePtrOutputWithContext(context.Background())
}

func (i RetentionPolicyInvokeResponseArgs) ToRetentionPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyInvokeResponseOutput).ToRetentionPolicyInvokeResponsePtrOutputWithContext(ctx)
}

// RetentionPolicyInvokeResponsePtrInput is an input type that accepts RetentionPolicyInvokeResponseArgs, RetentionPolicyInvokeResponsePtr and RetentionPolicyInvokeResponsePtrOutput values.
// You can construct a concrete instance of `RetentionPolicyInvokeResponsePtrInput` via:
//
//          RetentionPolicyInvokeResponseArgs{...}
//
//  or:
//
//          nil
type RetentionPolicyInvokeResponsePtrInput interface {
	pulumi.Input

	ToRetentionPolicyInvokeResponsePtrOutput() RetentionPolicyInvokeResponsePtrOutput
	ToRetentionPolicyInvokeResponsePtrOutputWithContext(context.Context) RetentionPolicyInvokeResponsePtrOutput
}

type retentionPolicyInvokeResponsePtrType RetentionPolicyInvokeResponseArgs

func RetentionPolicyInvokeResponsePtr(v *RetentionPolicyInvokeResponseArgs) RetentionPolicyInvokeResponsePtrInput {
	return (*retentionPolicyInvokeResponsePtrType)(v)
}

func (*retentionPolicyInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicyInvokeResponse)(nil)).Elem()
}

func (i *retentionPolicyInvokeResponsePtrType) ToRetentionPolicyInvokeResponsePtrOutput() RetentionPolicyInvokeResponsePtrOutput {
	return i.ToRetentionPolicyInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *retentionPolicyInvokeResponsePtrType) ToRetentionPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyInvokeResponsePtrOutput)
}

// The retention policy for a container registry.
type RetentionPolicyInvokeResponseOutput struct{ *pulumi.OutputState }

func (RetentionPolicyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyInvokeResponse)(nil)).Elem()
}

func (o RetentionPolicyInvokeResponseOutput) ToRetentionPolicyInvokeResponseOutput() RetentionPolicyInvokeResponseOutput {
	return o
}

func (o RetentionPolicyInvokeResponseOutput) ToRetentionPolicyInvokeResponseOutputWithContext(ctx context.Context) RetentionPolicyInvokeResponseOutput {
	return o
}

func (o RetentionPolicyInvokeResponseOutput) ToRetentionPolicyInvokeResponsePtrOutput() RetentionPolicyInvokeResponsePtrOutput {
	return o.ToRetentionPolicyInvokeResponsePtrOutputWithContext(context.Background())
}

func (o RetentionPolicyInvokeResponseOutput) ToRetentionPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyInvokeResponsePtrOutput {
	return o.ApplyT(func(v RetentionPolicyInvokeResponse) *RetentionPolicyInvokeResponse {
		return &v
	}).(RetentionPolicyInvokeResponsePtrOutput)
}

// The number of days to retain an untagged manifest after which it gets purged.
func (o RetentionPolicyInvokeResponseOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionPolicyInvokeResponse) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// The timestamp when the policy was last updated.
func (o RetentionPolicyInvokeResponseOutput) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v RetentionPolicyInvokeResponse) string { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o RetentionPolicyInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RetentionPolicyInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RetentionPolicyInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (RetentionPolicyInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicyInvokeResponse)(nil)).Elem()
}

func (o RetentionPolicyInvokeResponsePtrOutput) ToRetentionPolicyInvokeResponsePtrOutput() RetentionPolicyInvokeResponsePtrOutput {
	return o
}

func (o RetentionPolicyInvokeResponsePtrOutput) ToRetentionPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyInvokeResponsePtrOutput {
	return o
}

func (o RetentionPolicyInvokeResponsePtrOutput) Elem() RetentionPolicyInvokeResponseOutput {
	return o.ApplyT(func(v *RetentionPolicyInvokeResponse) RetentionPolicyInvokeResponse { return *v }).(RetentionPolicyInvokeResponseOutput)
}

// The number of days to retain an untagged manifest after which it gets purged.
func (o RetentionPolicyInvokeResponsePtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// The timestamp when the policy was last updated.
func (o RetentionPolicyInvokeResponsePtrOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUpdatedTime
	}).(pulumi.StringPtrOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o RetentionPolicyInvokeResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The retention policy for a container registry.
type RetentionPolicyResponse struct {
	// The number of days to retain an untagged manifest after which it gets purged.
	Days *int `pulumi:"days"`
	// The timestamp when the policy was last updated.
	LastUpdatedTime string `pulumi:"lastUpdatedTime"`
	// The value that indicates whether the policy is enabled or not.
	Status *string `pulumi:"status"`
}

// RetentionPolicyResponseInput is an input type that accepts RetentionPolicyResponseArgs and RetentionPolicyResponseOutput values.
// You can construct a concrete instance of `RetentionPolicyResponseInput` via:
//
//          RetentionPolicyResponseArgs{...}
type RetentionPolicyResponseInput interface {
	pulumi.Input

	ToRetentionPolicyResponseOutput() RetentionPolicyResponseOutput
	ToRetentionPolicyResponseOutputWithContext(context.Context) RetentionPolicyResponseOutput
}

// The retention policy for a container registry.
type RetentionPolicyResponseArgs struct {
	// The number of days to retain an untagged manifest after which it gets purged.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// The timestamp when the policy was last updated.
	LastUpdatedTime pulumi.StringInput `pulumi:"lastUpdatedTime"`
	// The value that indicates whether the policy is enabled or not.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RetentionPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyResponse)(nil)).Elem()
}

func (i RetentionPolicyResponseArgs) ToRetentionPolicyResponseOutput() RetentionPolicyResponseOutput {
	return i.ToRetentionPolicyResponseOutputWithContext(context.Background())
}

func (i RetentionPolicyResponseArgs) ToRetentionPolicyResponseOutputWithContext(ctx context.Context) RetentionPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyResponseOutput)
}

func (i RetentionPolicyResponseArgs) ToRetentionPolicyResponsePtrOutput() RetentionPolicyResponsePtrOutput {
	return i.ToRetentionPolicyResponsePtrOutputWithContext(context.Background())
}

func (i RetentionPolicyResponseArgs) ToRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyResponseOutput).ToRetentionPolicyResponsePtrOutputWithContext(ctx)
}

// RetentionPolicyResponsePtrInput is an input type that accepts RetentionPolicyResponseArgs, RetentionPolicyResponsePtr and RetentionPolicyResponsePtrOutput values.
// You can construct a concrete instance of `RetentionPolicyResponsePtrInput` via:
//
//          RetentionPolicyResponseArgs{...}
//
//  or:
//
//          nil
type RetentionPolicyResponsePtrInput interface {
	pulumi.Input

	ToRetentionPolicyResponsePtrOutput() RetentionPolicyResponsePtrOutput
	ToRetentionPolicyResponsePtrOutputWithContext(context.Context) RetentionPolicyResponsePtrOutput
}

type retentionPolicyResponsePtrType RetentionPolicyResponseArgs

func RetentionPolicyResponsePtr(v *RetentionPolicyResponseArgs) RetentionPolicyResponsePtrInput {
	return (*retentionPolicyResponsePtrType)(v)
}

func (*retentionPolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicyResponse)(nil)).Elem()
}

func (i *retentionPolicyResponsePtrType) ToRetentionPolicyResponsePtrOutput() RetentionPolicyResponsePtrOutput {
	return i.ToRetentionPolicyResponsePtrOutputWithContext(context.Background())
}

func (i *retentionPolicyResponsePtrType) ToRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyResponsePtrOutput)
}

// The retention policy for a container registry.
type RetentionPolicyResponseOutput struct{ *pulumi.OutputState }

func (RetentionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyResponse)(nil)).Elem()
}

func (o RetentionPolicyResponseOutput) ToRetentionPolicyResponseOutput() RetentionPolicyResponseOutput {
	return o
}

func (o RetentionPolicyResponseOutput) ToRetentionPolicyResponseOutputWithContext(ctx context.Context) RetentionPolicyResponseOutput {
	return o
}

func (o RetentionPolicyResponseOutput) ToRetentionPolicyResponsePtrOutput() RetentionPolicyResponsePtrOutput {
	return o.ToRetentionPolicyResponsePtrOutputWithContext(context.Background())
}

func (o RetentionPolicyResponseOutput) ToRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyResponsePtrOutput {
	return o.ApplyT(func(v RetentionPolicyResponse) *RetentionPolicyResponse {
		return &v
	}).(RetentionPolicyResponsePtrOutput)
}

// The number of days to retain an untagged manifest after which it gets purged.
func (o RetentionPolicyResponseOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionPolicyResponse) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// The timestamp when the policy was last updated.
func (o RetentionPolicyResponseOutput) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v RetentionPolicyResponse) string { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o RetentionPolicyResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RetentionPolicyResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RetentionPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (RetentionPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicyResponse)(nil)).Elem()
}

func (o RetentionPolicyResponsePtrOutput) ToRetentionPolicyResponsePtrOutput() RetentionPolicyResponsePtrOutput {
	return o
}

func (o RetentionPolicyResponsePtrOutput) ToRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyResponsePtrOutput {
	return o
}

func (o RetentionPolicyResponsePtrOutput) Elem() RetentionPolicyResponseOutput {
	return o.ApplyT(func(v *RetentionPolicyResponse) RetentionPolicyResponse { return *v }).(RetentionPolicyResponseOutput)
}

// The number of days to retain an untagged manifest after which it gets purged.
func (o RetentionPolicyResponsePtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// The timestamp when the policy was last updated.
func (o RetentionPolicyResponsePtrOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUpdatedTime
	}).(pulumi.StringPtrOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o RetentionPolicyResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Describes the properties of a secret object value.
type SecretObject struct {
	// The type of the secret object which determines how the value of the secret object has to be
	// interpreted.
	Type *string `pulumi:"type"`
	// The value of the secret. The format of this value will be determined
	// based on the type of the secret object. If the type is Opaque, the value will be
	// used as is without any modification.
	Value *string `pulumi:"value"`
}

// SecretObjectInput is an input type that accepts SecretObjectArgs and SecretObjectOutput values.
// You can construct a concrete instance of `SecretObjectInput` via:
//
//          SecretObjectArgs{...}
type SecretObjectInput interface {
	pulumi.Input

	ToSecretObjectOutput() SecretObjectOutput
	ToSecretObjectOutputWithContext(context.Context) SecretObjectOutput
}

// Describes the properties of a secret object value.
type SecretObjectArgs struct {
	// The type of the secret object which determines how the value of the secret object has to be
	// interpreted.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the secret. The format of this value will be determined
	// based on the type of the secret object. If the type is Opaque, the value will be
	// used as is without any modification.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecretObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretObject)(nil)).Elem()
}

func (i SecretObjectArgs) ToSecretObjectOutput() SecretObjectOutput {
	return i.ToSecretObjectOutputWithContext(context.Background())
}

func (i SecretObjectArgs) ToSecretObjectOutputWithContext(ctx context.Context) SecretObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretObjectOutput)
}

func (i SecretObjectArgs) ToSecretObjectPtrOutput() SecretObjectPtrOutput {
	return i.ToSecretObjectPtrOutputWithContext(context.Background())
}

func (i SecretObjectArgs) ToSecretObjectPtrOutputWithContext(ctx context.Context) SecretObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretObjectOutput).ToSecretObjectPtrOutputWithContext(ctx)
}

// SecretObjectPtrInput is an input type that accepts SecretObjectArgs, SecretObjectPtr and SecretObjectPtrOutput values.
// You can construct a concrete instance of `SecretObjectPtrInput` via:
//
//          SecretObjectArgs{...}
//
//  or:
//
//          nil
type SecretObjectPtrInput interface {
	pulumi.Input

	ToSecretObjectPtrOutput() SecretObjectPtrOutput
	ToSecretObjectPtrOutputWithContext(context.Context) SecretObjectPtrOutput
}

type secretObjectPtrType SecretObjectArgs

func SecretObjectPtr(v *SecretObjectArgs) SecretObjectPtrInput {
	return (*secretObjectPtrType)(v)
}

func (*secretObjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretObject)(nil)).Elem()
}

func (i *secretObjectPtrType) ToSecretObjectPtrOutput() SecretObjectPtrOutput {
	return i.ToSecretObjectPtrOutputWithContext(context.Background())
}

func (i *secretObjectPtrType) ToSecretObjectPtrOutputWithContext(ctx context.Context) SecretObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretObjectPtrOutput)
}

// Describes the properties of a secret object value.
type SecretObjectOutput struct{ *pulumi.OutputState }

func (SecretObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretObject)(nil)).Elem()
}

func (o SecretObjectOutput) ToSecretObjectOutput() SecretObjectOutput {
	return o
}

func (o SecretObjectOutput) ToSecretObjectOutputWithContext(ctx context.Context) SecretObjectOutput {
	return o
}

func (o SecretObjectOutput) ToSecretObjectPtrOutput() SecretObjectPtrOutput {
	return o.ToSecretObjectPtrOutputWithContext(context.Background())
}

func (o SecretObjectOutput) ToSecretObjectPtrOutputWithContext(ctx context.Context) SecretObjectPtrOutput {
	return o.ApplyT(func(v SecretObject) *SecretObject {
		return &v
	}).(SecretObjectPtrOutput)
}

// The type of the secret object which determines how the value of the secret object has to be
// interpreted.
func (o SecretObjectOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretObject) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the secret. The format of this value will be determined
// based on the type of the secret object. If the type is Opaque, the value will be
// used as is without any modification.
func (o SecretObjectOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretObject) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecretObjectPtrOutput struct{ *pulumi.OutputState }

func (SecretObjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretObject)(nil)).Elem()
}

func (o SecretObjectPtrOutput) ToSecretObjectPtrOutput() SecretObjectPtrOutput {
	return o
}

func (o SecretObjectPtrOutput) ToSecretObjectPtrOutputWithContext(ctx context.Context) SecretObjectPtrOutput {
	return o
}

func (o SecretObjectPtrOutput) Elem() SecretObjectOutput {
	return o.ApplyT(func(v *SecretObject) SecretObject { return *v }).(SecretObjectOutput)
}

// The type of the secret object which determines how the value of the secret object has to be
// interpreted.
func (o SecretObjectPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretObject) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The value of the secret. The format of this value will be determined
// based on the type of the secret object. If the type is Opaque, the value will be
// used as is without any modification.
func (o SecretObjectPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretObject) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Describes the properties of a secret object value.
type SecretObjectInvokeResponse struct {
	// The type of the secret object which determines how the value of the secret object has to be
	// interpreted.
	Type *string `pulumi:"type"`
	// The value of the secret. The format of this value will be determined
	// based on the type of the secret object. If the type is Opaque, the value will be
	// used as is without any modification.
	Value *string `pulumi:"value"`
}

// SecretObjectInvokeResponseInput is an input type that accepts SecretObjectInvokeResponseArgs and SecretObjectInvokeResponseOutput values.
// You can construct a concrete instance of `SecretObjectInvokeResponseInput` via:
//
//          SecretObjectInvokeResponseArgs{...}
type SecretObjectInvokeResponseInput interface {
	pulumi.Input

	ToSecretObjectInvokeResponseOutput() SecretObjectInvokeResponseOutput
	ToSecretObjectInvokeResponseOutputWithContext(context.Context) SecretObjectInvokeResponseOutput
}

// Describes the properties of a secret object value.
type SecretObjectInvokeResponseArgs struct {
	// The type of the secret object which determines how the value of the secret object has to be
	// interpreted.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the secret. The format of this value will be determined
	// based on the type of the secret object. If the type is Opaque, the value will be
	// used as is without any modification.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecretObjectInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretObjectInvokeResponse)(nil)).Elem()
}

func (i SecretObjectInvokeResponseArgs) ToSecretObjectInvokeResponseOutput() SecretObjectInvokeResponseOutput {
	return i.ToSecretObjectInvokeResponseOutputWithContext(context.Background())
}

func (i SecretObjectInvokeResponseArgs) ToSecretObjectInvokeResponseOutputWithContext(ctx context.Context) SecretObjectInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretObjectInvokeResponseOutput)
}

func (i SecretObjectInvokeResponseArgs) ToSecretObjectInvokeResponsePtrOutput() SecretObjectInvokeResponsePtrOutput {
	return i.ToSecretObjectInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SecretObjectInvokeResponseArgs) ToSecretObjectInvokeResponsePtrOutputWithContext(ctx context.Context) SecretObjectInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretObjectInvokeResponseOutput).ToSecretObjectInvokeResponsePtrOutputWithContext(ctx)
}

// SecretObjectInvokeResponsePtrInput is an input type that accepts SecretObjectInvokeResponseArgs, SecretObjectInvokeResponsePtr and SecretObjectInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SecretObjectInvokeResponsePtrInput` via:
//
//          SecretObjectInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SecretObjectInvokeResponsePtrInput interface {
	pulumi.Input

	ToSecretObjectInvokeResponsePtrOutput() SecretObjectInvokeResponsePtrOutput
	ToSecretObjectInvokeResponsePtrOutputWithContext(context.Context) SecretObjectInvokeResponsePtrOutput
}

type secretObjectInvokeResponsePtrType SecretObjectInvokeResponseArgs

func SecretObjectInvokeResponsePtr(v *SecretObjectInvokeResponseArgs) SecretObjectInvokeResponsePtrInput {
	return (*secretObjectInvokeResponsePtrType)(v)
}

func (*secretObjectInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretObjectInvokeResponse)(nil)).Elem()
}

func (i *secretObjectInvokeResponsePtrType) ToSecretObjectInvokeResponsePtrOutput() SecretObjectInvokeResponsePtrOutput {
	return i.ToSecretObjectInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *secretObjectInvokeResponsePtrType) ToSecretObjectInvokeResponsePtrOutputWithContext(ctx context.Context) SecretObjectInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretObjectInvokeResponsePtrOutput)
}

// Describes the properties of a secret object value.
type SecretObjectInvokeResponseOutput struct{ *pulumi.OutputState }

func (SecretObjectInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretObjectInvokeResponse)(nil)).Elem()
}

func (o SecretObjectInvokeResponseOutput) ToSecretObjectInvokeResponseOutput() SecretObjectInvokeResponseOutput {
	return o
}

func (o SecretObjectInvokeResponseOutput) ToSecretObjectInvokeResponseOutputWithContext(ctx context.Context) SecretObjectInvokeResponseOutput {
	return o
}

func (o SecretObjectInvokeResponseOutput) ToSecretObjectInvokeResponsePtrOutput() SecretObjectInvokeResponsePtrOutput {
	return o.ToSecretObjectInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SecretObjectInvokeResponseOutput) ToSecretObjectInvokeResponsePtrOutputWithContext(ctx context.Context) SecretObjectInvokeResponsePtrOutput {
	return o.ApplyT(func(v SecretObjectInvokeResponse) *SecretObjectInvokeResponse {
		return &v
	}).(SecretObjectInvokeResponsePtrOutput)
}

// The type of the secret object which determines how the value of the secret object has to be
// interpreted.
func (o SecretObjectInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretObjectInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the secret. The format of this value will be determined
// based on the type of the secret object. If the type is Opaque, the value will be
// used as is without any modification.
func (o SecretObjectInvokeResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretObjectInvokeResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecretObjectInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SecretObjectInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretObjectInvokeResponse)(nil)).Elem()
}

func (o SecretObjectInvokeResponsePtrOutput) ToSecretObjectInvokeResponsePtrOutput() SecretObjectInvokeResponsePtrOutput {
	return o
}

func (o SecretObjectInvokeResponsePtrOutput) ToSecretObjectInvokeResponsePtrOutputWithContext(ctx context.Context) SecretObjectInvokeResponsePtrOutput {
	return o
}

func (o SecretObjectInvokeResponsePtrOutput) Elem() SecretObjectInvokeResponseOutput {
	return o.ApplyT(func(v *SecretObjectInvokeResponse) SecretObjectInvokeResponse { return *v }).(SecretObjectInvokeResponseOutput)
}

// The type of the secret object which determines how the value of the secret object has to be
// interpreted.
func (o SecretObjectInvokeResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretObjectInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The value of the secret. The format of this value will be determined
// based on the type of the secret object. If the type is Opaque, the value will be
// used as is without any modification.
func (o SecretObjectInvokeResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretObjectInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Describes the properties of a secret object value.
type SecretObjectResponse struct {
	// The type of the secret object which determines how the value of the secret object has to be
	// interpreted.
	Type *string `pulumi:"type"`
	// The value of the secret. The format of this value will be determined
	// based on the type of the secret object. If the type is Opaque, the value will be
	// used as is without any modification.
	Value *string `pulumi:"value"`
}

// SecretObjectResponseInput is an input type that accepts SecretObjectResponseArgs and SecretObjectResponseOutput values.
// You can construct a concrete instance of `SecretObjectResponseInput` via:
//
//          SecretObjectResponseArgs{...}
type SecretObjectResponseInput interface {
	pulumi.Input

	ToSecretObjectResponseOutput() SecretObjectResponseOutput
	ToSecretObjectResponseOutputWithContext(context.Context) SecretObjectResponseOutput
}

// Describes the properties of a secret object value.
type SecretObjectResponseArgs struct {
	// The type of the secret object which determines how the value of the secret object has to be
	// interpreted.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the secret. The format of this value will be determined
	// based on the type of the secret object. If the type is Opaque, the value will be
	// used as is without any modification.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecretObjectResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretObjectResponse)(nil)).Elem()
}

func (i SecretObjectResponseArgs) ToSecretObjectResponseOutput() SecretObjectResponseOutput {
	return i.ToSecretObjectResponseOutputWithContext(context.Background())
}

func (i SecretObjectResponseArgs) ToSecretObjectResponseOutputWithContext(ctx context.Context) SecretObjectResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretObjectResponseOutput)
}

func (i SecretObjectResponseArgs) ToSecretObjectResponsePtrOutput() SecretObjectResponsePtrOutput {
	return i.ToSecretObjectResponsePtrOutputWithContext(context.Background())
}

func (i SecretObjectResponseArgs) ToSecretObjectResponsePtrOutputWithContext(ctx context.Context) SecretObjectResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretObjectResponseOutput).ToSecretObjectResponsePtrOutputWithContext(ctx)
}

// SecretObjectResponsePtrInput is an input type that accepts SecretObjectResponseArgs, SecretObjectResponsePtr and SecretObjectResponsePtrOutput values.
// You can construct a concrete instance of `SecretObjectResponsePtrInput` via:
//
//          SecretObjectResponseArgs{...}
//
//  or:
//
//          nil
type SecretObjectResponsePtrInput interface {
	pulumi.Input

	ToSecretObjectResponsePtrOutput() SecretObjectResponsePtrOutput
	ToSecretObjectResponsePtrOutputWithContext(context.Context) SecretObjectResponsePtrOutput
}

type secretObjectResponsePtrType SecretObjectResponseArgs

func SecretObjectResponsePtr(v *SecretObjectResponseArgs) SecretObjectResponsePtrInput {
	return (*secretObjectResponsePtrType)(v)
}

func (*secretObjectResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretObjectResponse)(nil)).Elem()
}

func (i *secretObjectResponsePtrType) ToSecretObjectResponsePtrOutput() SecretObjectResponsePtrOutput {
	return i.ToSecretObjectResponsePtrOutputWithContext(context.Background())
}

func (i *secretObjectResponsePtrType) ToSecretObjectResponsePtrOutputWithContext(ctx context.Context) SecretObjectResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretObjectResponsePtrOutput)
}

// Describes the properties of a secret object value.
type SecretObjectResponseOutput struct{ *pulumi.OutputState }

func (SecretObjectResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretObjectResponse)(nil)).Elem()
}

func (o SecretObjectResponseOutput) ToSecretObjectResponseOutput() SecretObjectResponseOutput {
	return o
}

func (o SecretObjectResponseOutput) ToSecretObjectResponseOutputWithContext(ctx context.Context) SecretObjectResponseOutput {
	return o
}

func (o SecretObjectResponseOutput) ToSecretObjectResponsePtrOutput() SecretObjectResponsePtrOutput {
	return o.ToSecretObjectResponsePtrOutputWithContext(context.Background())
}

func (o SecretObjectResponseOutput) ToSecretObjectResponsePtrOutputWithContext(ctx context.Context) SecretObjectResponsePtrOutput {
	return o.ApplyT(func(v SecretObjectResponse) *SecretObjectResponse {
		return &v
	}).(SecretObjectResponsePtrOutput)
}

// The type of the secret object which determines how the value of the secret object has to be
// interpreted.
func (o SecretObjectResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretObjectResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the secret. The format of this value will be determined
// based on the type of the secret object. If the type is Opaque, the value will be
// used as is without any modification.
func (o SecretObjectResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretObjectResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecretObjectResponsePtrOutput struct{ *pulumi.OutputState }

func (SecretObjectResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretObjectResponse)(nil)).Elem()
}

func (o SecretObjectResponsePtrOutput) ToSecretObjectResponsePtrOutput() SecretObjectResponsePtrOutput {
	return o
}

func (o SecretObjectResponsePtrOutput) ToSecretObjectResponsePtrOutputWithContext(ctx context.Context) SecretObjectResponsePtrOutput {
	return o
}

func (o SecretObjectResponsePtrOutput) Elem() SecretObjectResponseOutput {
	return o.ApplyT(func(v *SecretObjectResponse) SecretObjectResponse { return *v }).(SecretObjectResponseOutput)
}

// The type of the secret object which determines how the value of the secret object has to be
// interpreted.
func (o SecretObjectResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretObjectResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The value of the secret. The format of this value will be determined
// based on the type of the secret object. If the type is Opaque, the value will be
// used as is without any modification.
func (o SecretObjectResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretObjectResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// The properties of a overridable value that can be passed to a task template.
type SetValueInvokeResponse struct {
	// Flag to indicate whether the value represents a secret or not.
	IsSecret *bool `pulumi:"isSecret"`
	// The name of the overridable value.
	Name string `pulumi:"name"`
	// The overridable value.
	Value string `pulumi:"value"`
}

// SetValueInvokeResponseInput is an input type that accepts SetValueInvokeResponseArgs and SetValueInvokeResponseOutput values.
// You can construct a concrete instance of `SetValueInvokeResponseInput` via:
//
//          SetValueInvokeResponseArgs{...}
type SetValueInvokeResponseInput interface {
	pulumi.Input

	ToSetValueInvokeResponseOutput() SetValueInvokeResponseOutput
	ToSetValueInvokeResponseOutputWithContext(context.Context) SetValueInvokeResponseOutput
}

// The properties of a overridable value that can be passed to a task template.
type SetValueInvokeResponseArgs struct {
	// Flag to indicate whether the value represents a secret or not.
	IsSecret pulumi.BoolPtrInput `pulumi:"isSecret"`
	// The name of the overridable value.
	Name pulumi.StringInput `pulumi:"name"`
	// The overridable value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SetValueInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SetValueInvokeResponse)(nil)).Elem()
}

func (i SetValueInvokeResponseArgs) ToSetValueInvokeResponseOutput() SetValueInvokeResponseOutput {
	return i.ToSetValueInvokeResponseOutputWithContext(context.Background())
}

func (i SetValueInvokeResponseArgs) ToSetValueInvokeResponseOutputWithContext(ctx context.Context) SetValueInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetValueInvokeResponseOutput)
}

// SetValueInvokeResponseArrayInput is an input type that accepts SetValueInvokeResponseArray and SetValueInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SetValueInvokeResponseArrayInput` via:
//
//          SetValueInvokeResponseArray{ SetValueInvokeResponseArgs{...} }
type SetValueInvokeResponseArrayInput interface {
	pulumi.Input

	ToSetValueInvokeResponseArrayOutput() SetValueInvokeResponseArrayOutput
	ToSetValueInvokeResponseArrayOutputWithContext(context.Context) SetValueInvokeResponseArrayOutput
}

type SetValueInvokeResponseArray []SetValueInvokeResponseInput

func (SetValueInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SetValueInvokeResponse)(nil)).Elem()
}

func (i SetValueInvokeResponseArray) ToSetValueInvokeResponseArrayOutput() SetValueInvokeResponseArrayOutput {
	return i.ToSetValueInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SetValueInvokeResponseArray) ToSetValueInvokeResponseArrayOutputWithContext(ctx context.Context) SetValueInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetValueInvokeResponseArrayOutput)
}

// The properties of a overridable value that can be passed to a task template.
type SetValueInvokeResponseOutput struct{ *pulumi.OutputState }

func (SetValueInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SetValueInvokeResponse)(nil)).Elem()
}

func (o SetValueInvokeResponseOutput) ToSetValueInvokeResponseOutput() SetValueInvokeResponseOutput {
	return o
}

func (o SetValueInvokeResponseOutput) ToSetValueInvokeResponseOutputWithContext(ctx context.Context) SetValueInvokeResponseOutput {
	return o
}

// Flag to indicate whether the value represents a secret or not.
func (o SetValueInvokeResponseOutput) IsSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SetValueInvokeResponse) *bool { return v.IsSecret }).(pulumi.BoolPtrOutput)
}

// The name of the overridable value.
func (o SetValueInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SetValueInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The overridable value.
func (o SetValueInvokeResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SetValueInvokeResponse) string { return v.Value }).(pulumi.StringOutput)
}

type SetValueInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SetValueInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SetValueInvokeResponse)(nil)).Elem()
}

func (o SetValueInvokeResponseArrayOutput) ToSetValueInvokeResponseArrayOutput() SetValueInvokeResponseArrayOutput {
	return o
}

func (o SetValueInvokeResponseArrayOutput) ToSetValueInvokeResponseArrayOutputWithContext(ctx context.Context) SetValueInvokeResponseArrayOutput {
	return o
}

func (o SetValueInvokeResponseArrayOutput) Index(i pulumi.IntInput) SetValueInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SetValueInvokeResponse {
		return vs[0].([]SetValueInvokeResponse)[vs[1].(int)]
	}).(SetValueInvokeResponseOutput)
}

// The properties of a overridable value that can be passed to a task template.
type SetValueResponse struct {
	// Flag to indicate whether the value represents a secret or not.
	IsSecret *bool `pulumi:"isSecret"`
	// The name of the overridable value.
	Name string `pulumi:"name"`
	// The overridable value.
	Value string `pulumi:"value"`
}

// SetValueResponseInput is an input type that accepts SetValueResponseArgs and SetValueResponseOutput values.
// You can construct a concrete instance of `SetValueResponseInput` via:
//
//          SetValueResponseArgs{...}
type SetValueResponseInput interface {
	pulumi.Input

	ToSetValueResponseOutput() SetValueResponseOutput
	ToSetValueResponseOutputWithContext(context.Context) SetValueResponseOutput
}

// The properties of a overridable value that can be passed to a task template.
type SetValueResponseArgs struct {
	// Flag to indicate whether the value represents a secret or not.
	IsSecret pulumi.BoolPtrInput `pulumi:"isSecret"`
	// The name of the overridable value.
	Name pulumi.StringInput `pulumi:"name"`
	// The overridable value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SetValueResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SetValueResponse)(nil)).Elem()
}

func (i SetValueResponseArgs) ToSetValueResponseOutput() SetValueResponseOutput {
	return i.ToSetValueResponseOutputWithContext(context.Background())
}

func (i SetValueResponseArgs) ToSetValueResponseOutputWithContext(ctx context.Context) SetValueResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetValueResponseOutput)
}

// SetValueResponseArrayInput is an input type that accepts SetValueResponseArray and SetValueResponseArrayOutput values.
// You can construct a concrete instance of `SetValueResponseArrayInput` via:
//
//          SetValueResponseArray{ SetValueResponseArgs{...} }
type SetValueResponseArrayInput interface {
	pulumi.Input

	ToSetValueResponseArrayOutput() SetValueResponseArrayOutput
	ToSetValueResponseArrayOutputWithContext(context.Context) SetValueResponseArrayOutput
}

type SetValueResponseArray []SetValueResponseInput

func (SetValueResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SetValueResponse)(nil)).Elem()
}

func (i SetValueResponseArray) ToSetValueResponseArrayOutput() SetValueResponseArrayOutput {
	return i.ToSetValueResponseArrayOutputWithContext(context.Background())
}

func (i SetValueResponseArray) ToSetValueResponseArrayOutputWithContext(ctx context.Context) SetValueResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetValueResponseArrayOutput)
}

// The properties of a overridable value that can be passed to a task template.
type SetValueResponseOutput struct{ *pulumi.OutputState }

func (SetValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SetValueResponse)(nil)).Elem()
}

func (o SetValueResponseOutput) ToSetValueResponseOutput() SetValueResponseOutput {
	return o
}

func (o SetValueResponseOutput) ToSetValueResponseOutputWithContext(ctx context.Context) SetValueResponseOutput {
	return o
}

// Flag to indicate whether the value represents a secret or not.
func (o SetValueResponseOutput) IsSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SetValueResponse) *bool { return v.IsSecret }).(pulumi.BoolPtrOutput)
}

// The name of the overridable value.
func (o SetValueResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SetValueResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The overridable value.
func (o SetValueResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SetValueResponse) string { return v.Value }).(pulumi.StringOutput)
}

type SetValueResponseArrayOutput struct{ *pulumi.OutputState }

func (SetValueResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SetValueResponse)(nil)).Elem()
}

func (o SetValueResponseArrayOutput) ToSetValueResponseArrayOutput() SetValueResponseArrayOutput {
	return o
}

func (o SetValueResponseArrayOutput) ToSetValueResponseArrayOutputWithContext(ctx context.Context) SetValueResponseArrayOutput {
	return o
}

func (o SetValueResponseArrayOutput) Index(i pulumi.IntInput) SetValueResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SetValueResponse {
		return vs[0].([]SetValueResponse)[vs[1].(int)]
	}).(SetValueResponseOutput)
}

// The SKU of a container registry.
type Sku struct {
	// The SKU name of the container registry. Required for registry creation.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The SKU of a container registry.
type SkuArgs struct {
	// The SKU name of the container registry. Required for registry creation.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The SKU of a container registry.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The SKU name of the container registry. Required for registry creation.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// The SKU name of the container registry. Required for registry creation.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU of a container registry.
type SkuInvokeResponse struct {
	// The SKU name of the container registry. Required for registry creation.
	Name string `pulumi:"name"`
	// The SKU tier based on the SKU name.
	Tier string `pulumi:"tier"`
}

// SkuInvokeResponseInput is an input type that accepts SkuInvokeResponseArgs and SkuInvokeResponseOutput values.
// You can construct a concrete instance of `SkuInvokeResponseInput` via:
//
//          SkuInvokeResponseArgs{...}
type SkuInvokeResponseInput interface {
	pulumi.Input

	ToSkuInvokeResponseOutput() SkuInvokeResponseOutput
	ToSkuInvokeResponseOutputWithContext(context.Context) SkuInvokeResponseOutput
}

// The SKU of a container registry.
type SkuInvokeResponseArgs struct {
	// The SKU name of the container registry. Required for registry creation.
	Name pulumi.StringInput `pulumi:"name"`
	// The SKU tier based on the SKU name.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (SkuInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuInvokeResponse)(nil)).Elem()
}

func (i SkuInvokeResponseArgs) ToSkuInvokeResponseOutput() SkuInvokeResponseOutput {
	return i.ToSkuInvokeResponseOutputWithContext(context.Background())
}

func (i SkuInvokeResponseArgs) ToSkuInvokeResponseOutputWithContext(ctx context.Context) SkuInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuInvokeResponseOutput)
}

// The SKU of a container registry.
type SkuInvokeResponseOutput struct{ *pulumi.OutputState }

func (SkuInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuInvokeResponse)(nil)).Elem()
}

func (o SkuInvokeResponseOutput) ToSkuInvokeResponseOutput() SkuInvokeResponseOutput {
	return o
}

func (o SkuInvokeResponseOutput) ToSkuInvokeResponseOutputWithContext(ctx context.Context) SkuInvokeResponseOutput {
	return o
}

// The SKU name of the container registry. Required for registry creation.
func (o SkuInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU tier based on the SKU name.
func (o SkuInvokeResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v SkuInvokeResponse) string { return v.Tier }).(pulumi.StringOutput)
}

// The SKU of a container registry.
type SkuResponse struct {
	// The SKU name of the container registry. Required for registry creation.
	Name string `pulumi:"name"`
	// The SKU tier based on the SKU name.
	Tier string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// The SKU of a container registry.
type SkuResponseArgs struct {
	// The SKU name of the container registry. Required for registry creation.
	Name pulumi.StringInput `pulumi:"name"`
	// The SKU tier based on the SKU name.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// The SKU of a container registry.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The SKU name of the container registry. Required for registry creation.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU tier based on the SKU name.
func (o SkuResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The SKU name of the container registry. Required for registry creation.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU tier based on the SKU name.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.
type SourceInvokeResponse struct {
	// The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port.
	Addr *string `pulumi:"addr"`
	// The running instance of an application. Changes after each restart.
	InstanceID *string `pulumi:"instanceID"`
}

// SourceInvokeResponseInput is an input type that accepts SourceInvokeResponseArgs and SourceInvokeResponseOutput values.
// You can construct a concrete instance of `SourceInvokeResponseInput` via:
//
//          SourceInvokeResponseArgs{...}
type SourceInvokeResponseInput interface {
	pulumi.Input

	ToSourceInvokeResponseOutput() SourceInvokeResponseOutput
	ToSourceInvokeResponseOutputWithContext(context.Context) SourceInvokeResponseOutput
}

// The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.
type SourceInvokeResponseArgs struct {
	// The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port.
	Addr pulumi.StringPtrInput `pulumi:"addr"`
	// The running instance of an application. Changes after each restart.
	InstanceID pulumi.StringPtrInput `pulumi:"instanceID"`
}

func (SourceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceInvokeResponse)(nil)).Elem()
}

func (i SourceInvokeResponseArgs) ToSourceInvokeResponseOutput() SourceInvokeResponseOutput {
	return i.ToSourceInvokeResponseOutputWithContext(context.Background())
}

func (i SourceInvokeResponseArgs) ToSourceInvokeResponseOutputWithContext(ctx context.Context) SourceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceInvokeResponseOutput)
}

func (i SourceInvokeResponseArgs) ToSourceInvokeResponsePtrOutput() SourceInvokeResponsePtrOutput {
	return i.ToSourceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SourceInvokeResponseArgs) ToSourceInvokeResponsePtrOutputWithContext(ctx context.Context) SourceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceInvokeResponseOutput).ToSourceInvokeResponsePtrOutputWithContext(ctx)
}

// SourceInvokeResponsePtrInput is an input type that accepts SourceInvokeResponseArgs, SourceInvokeResponsePtr and SourceInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SourceInvokeResponsePtrInput` via:
//
//          SourceInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SourceInvokeResponsePtrInput interface {
	pulumi.Input

	ToSourceInvokeResponsePtrOutput() SourceInvokeResponsePtrOutput
	ToSourceInvokeResponsePtrOutputWithContext(context.Context) SourceInvokeResponsePtrOutput
}

type sourceInvokeResponsePtrType SourceInvokeResponseArgs

func SourceInvokeResponsePtr(v *SourceInvokeResponseArgs) SourceInvokeResponsePtrInput {
	return (*sourceInvokeResponsePtrType)(v)
}

func (*sourceInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceInvokeResponse)(nil)).Elem()
}

func (i *sourceInvokeResponsePtrType) ToSourceInvokeResponsePtrOutput() SourceInvokeResponsePtrOutput {
	return i.ToSourceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *sourceInvokeResponsePtrType) ToSourceInvokeResponsePtrOutputWithContext(ctx context.Context) SourceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceInvokeResponsePtrOutput)
}

// The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.
type SourceInvokeResponseOutput struct{ *pulumi.OutputState }

func (SourceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceInvokeResponse)(nil)).Elem()
}

func (o SourceInvokeResponseOutput) ToSourceInvokeResponseOutput() SourceInvokeResponseOutput {
	return o
}

func (o SourceInvokeResponseOutput) ToSourceInvokeResponseOutputWithContext(ctx context.Context) SourceInvokeResponseOutput {
	return o
}

func (o SourceInvokeResponseOutput) ToSourceInvokeResponsePtrOutput() SourceInvokeResponsePtrOutput {
	return o.ToSourceInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SourceInvokeResponseOutput) ToSourceInvokeResponsePtrOutputWithContext(ctx context.Context) SourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v SourceInvokeResponse) *SourceInvokeResponse {
		return &v
	}).(SourceInvokeResponsePtrOutput)
}

// The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port.
func (o SourceInvokeResponseOutput) Addr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceInvokeResponse) *string { return v.Addr }).(pulumi.StringPtrOutput)
}

// The running instance of an application. Changes after each restart.
func (o SourceInvokeResponseOutput) InstanceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceInvokeResponse) *string { return v.InstanceID }).(pulumi.StringPtrOutput)
}

type SourceInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SourceInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceInvokeResponse)(nil)).Elem()
}

func (o SourceInvokeResponsePtrOutput) ToSourceInvokeResponsePtrOutput() SourceInvokeResponsePtrOutput {
	return o
}

func (o SourceInvokeResponsePtrOutput) ToSourceInvokeResponsePtrOutputWithContext(ctx context.Context) SourceInvokeResponsePtrOutput {
	return o
}

func (o SourceInvokeResponsePtrOutput) Elem() SourceInvokeResponseOutput {
	return o.ApplyT(func(v *SourceInvokeResponse) SourceInvokeResponse { return *v }).(SourceInvokeResponseOutput)
}

// The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port.
func (o SourceInvokeResponsePtrOutput) Addr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Addr
	}).(pulumi.StringPtrOutput)
}

// The running instance of an application. Changes after each restart.
func (o SourceInvokeResponsePtrOutput) InstanceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.InstanceID
	}).(pulumi.StringPtrOutput)
}

// The properties of the source code repository.
type SourceProperties struct {
	// The branch name of the source code.
	Branch *string `pulumi:"branch"`
	// The full URL to the source code repository
	RepositoryUrl string `pulumi:"repositoryUrl"`
	// The authorization properties for accessing the source code repository and to set up
	// webhooks for notifications.
	SourceControlAuthProperties *AuthInfo `pulumi:"sourceControlAuthProperties"`
	// The type of source control service.
	SourceControlType string `pulumi:"sourceControlType"`
}

// SourcePropertiesInput is an input type that accepts SourcePropertiesArgs and SourcePropertiesOutput values.
// You can construct a concrete instance of `SourcePropertiesInput` via:
//
//          SourcePropertiesArgs{...}
type SourcePropertiesInput interface {
	pulumi.Input

	ToSourcePropertiesOutput() SourcePropertiesOutput
	ToSourcePropertiesOutputWithContext(context.Context) SourcePropertiesOutput
}

// The properties of the source code repository.
type SourcePropertiesArgs struct {
	// The branch name of the source code.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The full URL to the source code repository
	RepositoryUrl pulumi.StringInput `pulumi:"repositoryUrl"`
	// The authorization properties for accessing the source code repository and to set up
	// webhooks for notifications.
	SourceControlAuthProperties AuthInfoPtrInput `pulumi:"sourceControlAuthProperties"`
	// The type of source control service.
	SourceControlType pulumi.StringInput `pulumi:"sourceControlType"`
}

func (SourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceProperties)(nil)).Elem()
}

func (i SourcePropertiesArgs) ToSourcePropertiesOutput() SourcePropertiesOutput {
	return i.ToSourcePropertiesOutputWithContext(context.Background())
}

func (i SourcePropertiesArgs) ToSourcePropertiesOutputWithContext(ctx context.Context) SourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePropertiesOutput)
}

// The properties of the source code repository.
type SourcePropertiesOutput struct{ *pulumi.OutputState }

func (SourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceProperties)(nil)).Elem()
}

func (o SourcePropertiesOutput) ToSourcePropertiesOutput() SourcePropertiesOutput {
	return o
}

func (o SourcePropertiesOutput) ToSourcePropertiesOutputWithContext(ctx context.Context) SourcePropertiesOutput {
	return o
}

// The branch name of the source code.
func (o SourcePropertiesOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceProperties) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The full URL to the source code repository
func (o SourcePropertiesOutput) RepositoryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v SourceProperties) string { return v.RepositoryUrl }).(pulumi.StringOutput)
}

// The authorization properties for accessing the source code repository and to set up
// webhooks for notifications.
func (o SourcePropertiesOutput) SourceControlAuthProperties() AuthInfoPtrOutput {
	return o.ApplyT(func(v SourceProperties) *AuthInfo { return v.SourceControlAuthProperties }).(AuthInfoPtrOutput)
}

// The type of source control service.
func (o SourcePropertiesOutput) SourceControlType() pulumi.StringOutput {
	return o.ApplyT(func(v SourceProperties) string { return v.SourceControlType }).(pulumi.StringOutput)
}

// The properties of the source code repository.
type SourcePropertiesInvokeResponse struct {
	// The branch name of the source code.
	Branch *string `pulumi:"branch"`
	// The full URL to the source code repository
	RepositoryUrl string `pulumi:"repositoryUrl"`
	// The authorization properties for accessing the source code repository and to set up
	// webhooks for notifications.
	SourceControlAuthProperties *AuthInfoInvokeResponse `pulumi:"sourceControlAuthProperties"`
	// The type of source control service.
	SourceControlType string `pulumi:"sourceControlType"`
}

// SourcePropertiesInvokeResponseInput is an input type that accepts SourcePropertiesInvokeResponseArgs and SourcePropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `SourcePropertiesInvokeResponseInput` via:
//
//          SourcePropertiesInvokeResponseArgs{...}
type SourcePropertiesInvokeResponseInput interface {
	pulumi.Input

	ToSourcePropertiesInvokeResponseOutput() SourcePropertiesInvokeResponseOutput
	ToSourcePropertiesInvokeResponseOutputWithContext(context.Context) SourcePropertiesInvokeResponseOutput
}

// The properties of the source code repository.
type SourcePropertiesInvokeResponseArgs struct {
	// The branch name of the source code.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The full URL to the source code repository
	RepositoryUrl pulumi.StringInput `pulumi:"repositoryUrl"`
	// The authorization properties for accessing the source code repository and to set up
	// webhooks for notifications.
	SourceControlAuthProperties AuthInfoInvokeResponsePtrInput `pulumi:"sourceControlAuthProperties"`
	// The type of source control service.
	SourceControlType pulumi.StringInput `pulumi:"sourceControlType"`
}

func (SourcePropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourcePropertiesInvokeResponse)(nil)).Elem()
}

func (i SourcePropertiesInvokeResponseArgs) ToSourcePropertiesInvokeResponseOutput() SourcePropertiesInvokeResponseOutput {
	return i.ToSourcePropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i SourcePropertiesInvokeResponseArgs) ToSourcePropertiesInvokeResponseOutputWithContext(ctx context.Context) SourcePropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePropertiesInvokeResponseOutput)
}

// The properties of the source code repository.
type SourcePropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (SourcePropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourcePropertiesInvokeResponse)(nil)).Elem()
}

func (o SourcePropertiesInvokeResponseOutput) ToSourcePropertiesInvokeResponseOutput() SourcePropertiesInvokeResponseOutput {
	return o
}

func (o SourcePropertiesInvokeResponseOutput) ToSourcePropertiesInvokeResponseOutputWithContext(ctx context.Context) SourcePropertiesInvokeResponseOutput {
	return o
}

// The branch name of the source code.
func (o SourcePropertiesInvokeResponseOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourcePropertiesInvokeResponse) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The full URL to the source code repository
func (o SourcePropertiesInvokeResponseOutput) RepositoryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v SourcePropertiesInvokeResponse) string { return v.RepositoryUrl }).(pulumi.StringOutput)
}

// The authorization properties for accessing the source code repository and to set up
// webhooks for notifications.
func (o SourcePropertiesInvokeResponseOutput) SourceControlAuthProperties() AuthInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v SourcePropertiesInvokeResponse) *AuthInfoInvokeResponse { return v.SourceControlAuthProperties }).(AuthInfoInvokeResponsePtrOutput)
}

// The type of source control service.
func (o SourcePropertiesInvokeResponseOutput) SourceControlType() pulumi.StringOutput {
	return o.ApplyT(func(v SourcePropertiesInvokeResponse) string { return v.SourceControlType }).(pulumi.StringOutput)
}

// The properties of the source code repository.
type SourcePropertiesResponse struct {
	// The branch name of the source code.
	Branch *string `pulumi:"branch"`
	// The full URL to the source code repository
	RepositoryUrl string `pulumi:"repositoryUrl"`
	// The authorization properties for accessing the source code repository and to set up
	// webhooks for notifications.
	SourceControlAuthProperties *AuthInfoResponse `pulumi:"sourceControlAuthProperties"`
	// The type of source control service.
	SourceControlType string `pulumi:"sourceControlType"`
}

// SourcePropertiesResponseInput is an input type that accepts SourcePropertiesResponseArgs and SourcePropertiesResponseOutput values.
// You can construct a concrete instance of `SourcePropertiesResponseInput` via:
//
//          SourcePropertiesResponseArgs{...}
type SourcePropertiesResponseInput interface {
	pulumi.Input

	ToSourcePropertiesResponseOutput() SourcePropertiesResponseOutput
	ToSourcePropertiesResponseOutputWithContext(context.Context) SourcePropertiesResponseOutput
}

// The properties of the source code repository.
type SourcePropertiesResponseArgs struct {
	// The branch name of the source code.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The full URL to the source code repository
	RepositoryUrl pulumi.StringInput `pulumi:"repositoryUrl"`
	// The authorization properties for accessing the source code repository and to set up
	// webhooks for notifications.
	SourceControlAuthProperties AuthInfoResponsePtrInput `pulumi:"sourceControlAuthProperties"`
	// The type of source control service.
	SourceControlType pulumi.StringInput `pulumi:"sourceControlType"`
}

func (SourcePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourcePropertiesResponse)(nil)).Elem()
}

func (i SourcePropertiesResponseArgs) ToSourcePropertiesResponseOutput() SourcePropertiesResponseOutput {
	return i.ToSourcePropertiesResponseOutputWithContext(context.Background())
}

func (i SourcePropertiesResponseArgs) ToSourcePropertiesResponseOutputWithContext(ctx context.Context) SourcePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePropertiesResponseOutput)
}

// The properties of the source code repository.
type SourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourcePropertiesResponse)(nil)).Elem()
}

func (o SourcePropertiesResponseOutput) ToSourcePropertiesResponseOutput() SourcePropertiesResponseOutput {
	return o
}

func (o SourcePropertiesResponseOutput) ToSourcePropertiesResponseOutputWithContext(ctx context.Context) SourcePropertiesResponseOutput {
	return o
}

// The branch name of the source code.
func (o SourcePropertiesResponseOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourcePropertiesResponse) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The full URL to the source code repository
func (o SourcePropertiesResponseOutput) RepositoryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v SourcePropertiesResponse) string { return v.RepositoryUrl }).(pulumi.StringOutput)
}

// The authorization properties for accessing the source code repository and to set up
// webhooks for notifications.
func (o SourcePropertiesResponseOutput) SourceControlAuthProperties() AuthInfoResponsePtrOutput {
	return o.ApplyT(func(v SourcePropertiesResponse) *AuthInfoResponse { return v.SourceControlAuthProperties }).(AuthInfoResponsePtrOutput)
}

// The type of source control service.
func (o SourcePropertiesResponseOutput) SourceControlType() pulumi.StringOutput {
	return o.ApplyT(func(v SourcePropertiesResponse) string { return v.SourceControlType }).(pulumi.StringOutput)
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentials struct {
	// The authentication mode which determines the source registry login scope. The credentials for the source registry
	// will be generated using the given scope. These credentials will be used to login to
	// the source registry during the run.
	LoginMode *string `pulumi:"loginMode"`
}

// SourceRegistryCredentialsInput is an input type that accepts SourceRegistryCredentialsArgs and SourceRegistryCredentialsOutput values.
// You can construct a concrete instance of `SourceRegistryCredentialsInput` via:
//
//          SourceRegistryCredentialsArgs{...}
type SourceRegistryCredentialsInput interface {
	pulumi.Input

	ToSourceRegistryCredentialsOutput() SourceRegistryCredentialsOutput
	ToSourceRegistryCredentialsOutputWithContext(context.Context) SourceRegistryCredentialsOutput
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsArgs struct {
	// The authentication mode which determines the source registry login scope. The credentials for the source registry
	// will be generated using the given scope. These credentials will be used to login to
	// the source registry during the run.
	LoginMode pulumi.StringPtrInput `pulumi:"loginMode"`
}

func (SourceRegistryCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceRegistryCredentials)(nil)).Elem()
}

func (i SourceRegistryCredentialsArgs) ToSourceRegistryCredentialsOutput() SourceRegistryCredentialsOutput {
	return i.ToSourceRegistryCredentialsOutputWithContext(context.Background())
}

func (i SourceRegistryCredentialsArgs) ToSourceRegistryCredentialsOutputWithContext(ctx context.Context) SourceRegistryCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsOutput)
}

func (i SourceRegistryCredentialsArgs) ToSourceRegistryCredentialsPtrOutput() SourceRegistryCredentialsPtrOutput {
	return i.ToSourceRegistryCredentialsPtrOutputWithContext(context.Background())
}

func (i SourceRegistryCredentialsArgs) ToSourceRegistryCredentialsPtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsOutput).ToSourceRegistryCredentialsPtrOutputWithContext(ctx)
}

// SourceRegistryCredentialsPtrInput is an input type that accepts SourceRegistryCredentialsArgs, SourceRegistryCredentialsPtr and SourceRegistryCredentialsPtrOutput values.
// You can construct a concrete instance of `SourceRegistryCredentialsPtrInput` via:
//
//          SourceRegistryCredentialsArgs{...}
//
//  or:
//
//          nil
type SourceRegistryCredentialsPtrInput interface {
	pulumi.Input

	ToSourceRegistryCredentialsPtrOutput() SourceRegistryCredentialsPtrOutput
	ToSourceRegistryCredentialsPtrOutputWithContext(context.Context) SourceRegistryCredentialsPtrOutput
}

type sourceRegistryCredentialsPtrType SourceRegistryCredentialsArgs

func SourceRegistryCredentialsPtr(v *SourceRegistryCredentialsArgs) SourceRegistryCredentialsPtrInput {
	return (*sourceRegistryCredentialsPtrType)(v)
}

func (*sourceRegistryCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceRegistryCredentials)(nil)).Elem()
}

func (i *sourceRegistryCredentialsPtrType) ToSourceRegistryCredentialsPtrOutput() SourceRegistryCredentialsPtrOutput {
	return i.ToSourceRegistryCredentialsPtrOutputWithContext(context.Background())
}

func (i *sourceRegistryCredentialsPtrType) ToSourceRegistryCredentialsPtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsPtrOutput)
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsOutput struct{ *pulumi.OutputState }

func (SourceRegistryCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceRegistryCredentials)(nil)).Elem()
}

func (o SourceRegistryCredentialsOutput) ToSourceRegistryCredentialsOutput() SourceRegistryCredentialsOutput {
	return o
}

func (o SourceRegistryCredentialsOutput) ToSourceRegistryCredentialsOutputWithContext(ctx context.Context) SourceRegistryCredentialsOutput {
	return o
}

func (o SourceRegistryCredentialsOutput) ToSourceRegistryCredentialsPtrOutput() SourceRegistryCredentialsPtrOutput {
	return o.ToSourceRegistryCredentialsPtrOutputWithContext(context.Background())
}

func (o SourceRegistryCredentialsOutput) ToSourceRegistryCredentialsPtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsPtrOutput {
	return o.ApplyT(func(v SourceRegistryCredentials) *SourceRegistryCredentials {
		return &v
	}).(SourceRegistryCredentialsPtrOutput)
}

// The authentication mode which determines the source registry login scope. The credentials for the source registry
// will be generated using the given scope. These credentials will be used to login to
// the source registry during the run.
func (o SourceRegistryCredentialsOutput) LoginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceRegistryCredentials) *string { return v.LoginMode }).(pulumi.StringPtrOutput)
}

type SourceRegistryCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SourceRegistryCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceRegistryCredentials)(nil)).Elem()
}

func (o SourceRegistryCredentialsPtrOutput) ToSourceRegistryCredentialsPtrOutput() SourceRegistryCredentialsPtrOutput {
	return o
}

func (o SourceRegistryCredentialsPtrOutput) ToSourceRegistryCredentialsPtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsPtrOutput {
	return o
}

func (o SourceRegistryCredentialsPtrOutput) Elem() SourceRegistryCredentialsOutput {
	return o.ApplyT(func(v *SourceRegistryCredentials) SourceRegistryCredentials { return *v }).(SourceRegistryCredentialsOutput)
}

// The authentication mode which determines the source registry login scope. The credentials for the source registry
// will be generated using the given scope. These credentials will be used to login to
// the source registry during the run.
func (o SourceRegistryCredentialsPtrOutput) LoginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceRegistryCredentials) *string {
		if v == nil {
			return nil
		}
		return v.LoginMode
	}).(pulumi.StringPtrOutput)
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsInvokeResponse struct {
	// The authentication mode which determines the source registry login scope. The credentials for the source registry
	// will be generated using the given scope. These credentials will be used to login to
	// the source registry during the run.
	LoginMode *string `pulumi:"loginMode"`
}

// SourceRegistryCredentialsInvokeResponseInput is an input type that accepts SourceRegistryCredentialsInvokeResponseArgs and SourceRegistryCredentialsInvokeResponseOutput values.
// You can construct a concrete instance of `SourceRegistryCredentialsInvokeResponseInput` via:
//
//          SourceRegistryCredentialsInvokeResponseArgs{...}
type SourceRegistryCredentialsInvokeResponseInput interface {
	pulumi.Input

	ToSourceRegistryCredentialsInvokeResponseOutput() SourceRegistryCredentialsInvokeResponseOutput
	ToSourceRegistryCredentialsInvokeResponseOutputWithContext(context.Context) SourceRegistryCredentialsInvokeResponseOutput
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsInvokeResponseArgs struct {
	// The authentication mode which determines the source registry login scope. The credentials for the source registry
	// will be generated using the given scope. These credentials will be used to login to
	// the source registry during the run.
	LoginMode pulumi.StringPtrInput `pulumi:"loginMode"`
}

func (SourceRegistryCredentialsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceRegistryCredentialsInvokeResponse)(nil)).Elem()
}

func (i SourceRegistryCredentialsInvokeResponseArgs) ToSourceRegistryCredentialsInvokeResponseOutput() SourceRegistryCredentialsInvokeResponseOutput {
	return i.ToSourceRegistryCredentialsInvokeResponseOutputWithContext(context.Background())
}

func (i SourceRegistryCredentialsInvokeResponseArgs) ToSourceRegistryCredentialsInvokeResponseOutputWithContext(ctx context.Context) SourceRegistryCredentialsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsInvokeResponseOutput)
}

func (i SourceRegistryCredentialsInvokeResponseArgs) ToSourceRegistryCredentialsInvokeResponsePtrOutput() SourceRegistryCredentialsInvokeResponsePtrOutput {
	return i.ToSourceRegistryCredentialsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SourceRegistryCredentialsInvokeResponseArgs) ToSourceRegistryCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsInvokeResponseOutput).ToSourceRegistryCredentialsInvokeResponsePtrOutputWithContext(ctx)
}

// SourceRegistryCredentialsInvokeResponsePtrInput is an input type that accepts SourceRegistryCredentialsInvokeResponseArgs, SourceRegistryCredentialsInvokeResponsePtr and SourceRegistryCredentialsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SourceRegistryCredentialsInvokeResponsePtrInput` via:
//
//          SourceRegistryCredentialsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SourceRegistryCredentialsInvokeResponsePtrInput interface {
	pulumi.Input

	ToSourceRegistryCredentialsInvokeResponsePtrOutput() SourceRegistryCredentialsInvokeResponsePtrOutput
	ToSourceRegistryCredentialsInvokeResponsePtrOutputWithContext(context.Context) SourceRegistryCredentialsInvokeResponsePtrOutput
}

type sourceRegistryCredentialsInvokeResponsePtrType SourceRegistryCredentialsInvokeResponseArgs

func SourceRegistryCredentialsInvokeResponsePtr(v *SourceRegistryCredentialsInvokeResponseArgs) SourceRegistryCredentialsInvokeResponsePtrInput {
	return (*sourceRegistryCredentialsInvokeResponsePtrType)(v)
}

func (*sourceRegistryCredentialsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceRegistryCredentialsInvokeResponse)(nil)).Elem()
}

func (i *sourceRegistryCredentialsInvokeResponsePtrType) ToSourceRegistryCredentialsInvokeResponsePtrOutput() SourceRegistryCredentialsInvokeResponsePtrOutput {
	return i.ToSourceRegistryCredentialsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *sourceRegistryCredentialsInvokeResponsePtrType) ToSourceRegistryCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsInvokeResponsePtrOutput)
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsInvokeResponseOutput struct{ *pulumi.OutputState }

func (SourceRegistryCredentialsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceRegistryCredentialsInvokeResponse)(nil)).Elem()
}

func (o SourceRegistryCredentialsInvokeResponseOutput) ToSourceRegistryCredentialsInvokeResponseOutput() SourceRegistryCredentialsInvokeResponseOutput {
	return o
}

func (o SourceRegistryCredentialsInvokeResponseOutput) ToSourceRegistryCredentialsInvokeResponseOutputWithContext(ctx context.Context) SourceRegistryCredentialsInvokeResponseOutput {
	return o
}

func (o SourceRegistryCredentialsInvokeResponseOutput) ToSourceRegistryCredentialsInvokeResponsePtrOutput() SourceRegistryCredentialsInvokeResponsePtrOutput {
	return o.ToSourceRegistryCredentialsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SourceRegistryCredentialsInvokeResponseOutput) ToSourceRegistryCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsInvokeResponsePtrOutput {
	return o.ApplyT(func(v SourceRegistryCredentialsInvokeResponse) *SourceRegistryCredentialsInvokeResponse {
		return &v
	}).(SourceRegistryCredentialsInvokeResponsePtrOutput)
}

// The authentication mode which determines the source registry login scope. The credentials for the source registry
// will be generated using the given scope. These credentials will be used to login to
// the source registry during the run.
func (o SourceRegistryCredentialsInvokeResponseOutput) LoginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceRegistryCredentialsInvokeResponse) *string { return v.LoginMode }).(pulumi.StringPtrOutput)
}

type SourceRegistryCredentialsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SourceRegistryCredentialsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceRegistryCredentialsInvokeResponse)(nil)).Elem()
}

func (o SourceRegistryCredentialsInvokeResponsePtrOutput) ToSourceRegistryCredentialsInvokeResponsePtrOutput() SourceRegistryCredentialsInvokeResponsePtrOutput {
	return o
}

func (o SourceRegistryCredentialsInvokeResponsePtrOutput) ToSourceRegistryCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsInvokeResponsePtrOutput {
	return o
}

func (o SourceRegistryCredentialsInvokeResponsePtrOutput) Elem() SourceRegistryCredentialsInvokeResponseOutput {
	return o.ApplyT(func(v *SourceRegistryCredentialsInvokeResponse) SourceRegistryCredentialsInvokeResponse { return *v }).(SourceRegistryCredentialsInvokeResponseOutput)
}

// The authentication mode which determines the source registry login scope. The credentials for the source registry
// will be generated using the given scope. These credentials will be used to login to
// the source registry during the run.
func (o SourceRegistryCredentialsInvokeResponsePtrOutput) LoginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceRegistryCredentialsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.LoginMode
	}).(pulumi.StringPtrOutput)
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsResponse struct {
	// The authentication mode which determines the source registry login scope. The credentials for the source registry
	// will be generated using the given scope. These credentials will be used to login to
	// the source registry during the run.
	LoginMode *string `pulumi:"loginMode"`
}

// SourceRegistryCredentialsResponseInput is an input type that accepts SourceRegistryCredentialsResponseArgs and SourceRegistryCredentialsResponseOutput values.
// You can construct a concrete instance of `SourceRegistryCredentialsResponseInput` via:
//
//          SourceRegistryCredentialsResponseArgs{...}
type SourceRegistryCredentialsResponseInput interface {
	pulumi.Input

	ToSourceRegistryCredentialsResponseOutput() SourceRegistryCredentialsResponseOutput
	ToSourceRegistryCredentialsResponseOutputWithContext(context.Context) SourceRegistryCredentialsResponseOutput
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsResponseArgs struct {
	// The authentication mode which determines the source registry login scope. The credentials for the source registry
	// will be generated using the given scope. These credentials will be used to login to
	// the source registry during the run.
	LoginMode pulumi.StringPtrInput `pulumi:"loginMode"`
}

func (SourceRegistryCredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceRegistryCredentialsResponse)(nil)).Elem()
}

func (i SourceRegistryCredentialsResponseArgs) ToSourceRegistryCredentialsResponseOutput() SourceRegistryCredentialsResponseOutput {
	return i.ToSourceRegistryCredentialsResponseOutputWithContext(context.Background())
}

func (i SourceRegistryCredentialsResponseArgs) ToSourceRegistryCredentialsResponseOutputWithContext(ctx context.Context) SourceRegistryCredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsResponseOutput)
}

func (i SourceRegistryCredentialsResponseArgs) ToSourceRegistryCredentialsResponsePtrOutput() SourceRegistryCredentialsResponsePtrOutput {
	return i.ToSourceRegistryCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i SourceRegistryCredentialsResponseArgs) ToSourceRegistryCredentialsResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsResponseOutput).ToSourceRegistryCredentialsResponsePtrOutputWithContext(ctx)
}

// SourceRegistryCredentialsResponsePtrInput is an input type that accepts SourceRegistryCredentialsResponseArgs, SourceRegistryCredentialsResponsePtr and SourceRegistryCredentialsResponsePtrOutput values.
// You can construct a concrete instance of `SourceRegistryCredentialsResponsePtrInput` via:
//
//          SourceRegistryCredentialsResponseArgs{...}
//
//  or:
//
//          nil
type SourceRegistryCredentialsResponsePtrInput interface {
	pulumi.Input

	ToSourceRegistryCredentialsResponsePtrOutput() SourceRegistryCredentialsResponsePtrOutput
	ToSourceRegistryCredentialsResponsePtrOutputWithContext(context.Context) SourceRegistryCredentialsResponsePtrOutput
}

type sourceRegistryCredentialsResponsePtrType SourceRegistryCredentialsResponseArgs

func SourceRegistryCredentialsResponsePtr(v *SourceRegistryCredentialsResponseArgs) SourceRegistryCredentialsResponsePtrInput {
	return (*sourceRegistryCredentialsResponsePtrType)(v)
}

func (*sourceRegistryCredentialsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceRegistryCredentialsResponse)(nil)).Elem()
}

func (i *sourceRegistryCredentialsResponsePtrType) ToSourceRegistryCredentialsResponsePtrOutput() SourceRegistryCredentialsResponsePtrOutput {
	return i.ToSourceRegistryCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i *sourceRegistryCredentialsResponsePtrType) ToSourceRegistryCredentialsResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsResponsePtrOutput)
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsResponseOutput struct{ *pulumi.OutputState }

func (SourceRegistryCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceRegistryCredentialsResponse)(nil)).Elem()
}

func (o SourceRegistryCredentialsResponseOutput) ToSourceRegistryCredentialsResponseOutput() SourceRegistryCredentialsResponseOutput {
	return o
}

func (o SourceRegistryCredentialsResponseOutput) ToSourceRegistryCredentialsResponseOutputWithContext(ctx context.Context) SourceRegistryCredentialsResponseOutput {
	return o
}

func (o SourceRegistryCredentialsResponseOutput) ToSourceRegistryCredentialsResponsePtrOutput() SourceRegistryCredentialsResponsePtrOutput {
	return o.ToSourceRegistryCredentialsResponsePtrOutputWithContext(context.Background())
}

func (o SourceRegistryCredentialsResponseOutput) ToSourceRegistryCredentialsResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsResponsePtrOutput {
	return o.ApplyT(func(v SourceRegistryCredentialsResponse) *SourceRegistryCredentialsResponse {
		return &v
	}).(SourceRegistryCredentialsResponsePtrOutput)
}

// The authentication mode which determines the source registry login scope. The credentials for the source registry
// will be generated using the given scope. These credentials will be used to login to
// the source registry during the run.
func (o SourceRegistryCredentialsResponseOutput) LoginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceRegistryCredentialsResponse) *string { return v.LoginMode }).(pulumi.StringPtrOutput)
}

type SourceRegistryCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (SourceRegistryCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceRegistryCredentialsResponse)(nil)).Elem()
}

func (o SourceRegistryCredentialsResponsePtrOutput) ToSourceRegistryCredentialsResponsePtrOutput() SourceRegistryCredentialsResponsePtrOutput {
	return o
}

func (o SourceRegistryCredentialsResponsePtrOutput) ToSourceRegistryCredentialsResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsResponsePtrOutput {
	return o
}

func (o SourceRegistryCredentialsResponsePtrOutput) Elem() SourceRegistryCredentialsResponseOutput {
	return o.ApplyT(func(v *SourceRegistryCredentialsResponse) SourceRegistryCredentialsResponse { return *v }).(SourceRegistryCredentialsResponseOutput)
}

// The authentication mode which determines the source registry login scope. The credentials for the source registry
// will be generated using the given scope. These credentials will be used to login to
// the source registry during the run.
func (o SourceRegistryCredentialsResponsePtrOutput) LoginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceRegistryCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LoginMode
	}).(pulumi.StringPtrOutput)
}

// The properties of a source based trigger.
type SourceTrigger struct {
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The properties that describes the source(code) for the task.
	SourceRepository SourceProperties `pulumi:"sourceRepository"`
	// The source event corresponding to the trigger.
	SourceTriggerEvents []string `pulumi:"sourceTriggerEvents"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// SourceTriggerInput is an input type that accepts SourceTriggerArgs and SourceTriggerOutput values.
// You can construct a concrete instance of `SourceTriggerInput` via:
//
//          SourceTriggerArgs{...}
type SourceTriggerInput interface {
	pulumi.Input

	ToSourceTriggerOutput() SourceTriggerOutput
	ToSourceTriggerOutputWithContext(context.Context) SourceTriggerOutput
}

// The properties of a source based trigger.
type SourceTriggerArgs struct {
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties that describes the source(code) for the task.
	SourceRepository SourcePropertiesInput `pulumi:"sourceRepository"`
	// The source event corresponding to the trigger.
	SourceTriggerEvents pulumi.StringArrayInput `pulumi:"sourceTriggerEvents"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SourceTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTrigger)(nil)).Elem()
}

func (i SourceTriggerArgs) ToSourceTriggerOutput() SourceTriggerOutput {
	return i.ToSourceTriggerOutputWithContext(context.Background())
}

func (i SourceTriggerArgs) ToSourceTriggerOutputWithContext(ctx context.Context) SourceTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerOutput)
}

// SourceTriggerArrayInput is an input type that accepts SourceTriggerArray and SourceTriggerArrayOutput values.
// You can construct a concrete instance of `SourceTriggerArrayInput` via:
//
//          SourceTriggerArray{ SourceTriggerArgs{...} }
type SourceTriggerArrayInput interface {
	pulumi.Input

	ToSourceTriggerArrayOutput() SourceTriggerArrayOutput
	ToSourceTriggerArrayOutputWithContext(context.Context) SourceTriggerArrayOutput
}

type SourceTriggerArray []SourceTriggerInput

func (SourceTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceTrigger)(nil)).Elem()
}

func (i SourceTriggerArray) ToSourceTriggerArrayOutput() SourceTriggerArrayOutput {
	return i.ToSourceTriggerArrayOutputWithContext(context.Background())
}

func (i SourceTriggerArray) ToSourceTriggerArrayOutputWithContext(ctx context.Context) SourceTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerArrayOutput)
}

// The properties of a source based trigger.
type SourceTriggerOutput struct{ *pulumi.OutputState }

func (SourceTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTrigger)(nil)).Elem()
}

func (o SourceTriggerOutput) ToSourceTriggerOutput() SourceTriggerOutput {
	return o
}

func (o SourceTriggerOutput) ToSourceTriggerOutputWithContext(ctx context.Context) SourceTriggerOutput {
	return o
}

// The name of the trigger.
func (o SourceTriggerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SourceTrigger) string { return v.Name }).(pulumi.StringOutput)
}

// The properties that describes the source(code) for the task.
func (o SourceTriggerOutput) SourceRepository() SourcePropertiesOutput {
	return o.ApplyT(func(v SourceTrigger) SourceProperties { return v.SourceRepository }).(SourcePropertiesOutput)
}

// The source event corresponding to the trigger.
func (o SourceTriggerOutput) SourceTriggerEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SourceTrigger) []string { return v.SourceTriggerEvents }).(pulumi.StringArrayOutput)
}

// The current status of trigger.
func (o SourceTriggerOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTrigger) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SourceTriggerArrayOutput struct{ *pulumi.OutputState }

func (SourceTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceTrigger)(nil)).Elem()
}

func (o SourceTriggerArrayOutput) ToSourceTriggerArrayOutput() SourceTriggerArrayOutput {
	return o
}

func (o SourceTriggerArrayOutput) ToSourceTriggerArrayOutputWithContext(ctx context.Context) SourceTriggerArrayOutput {
	return o
}

func (o SourceTriggerArrayOutput) Index(i pulumi.IntInput) SourceTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SourceTrigger {
		return vs[0].([]SourceTrigger)[vs[1].(int)]
	}).(SourceTriggerOutput)
}

// The properties of a source based trigger.
type SourceTriggerInvokeResponse struct {
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The properties that describes the source(code) for the task.
	SourceRepository SourcePropertiesInvokeResponse `pulumi:"sourceRepository"`
	// The source event corresponding to the trigger.
	SourceTriggerEvents []string `pulumi:"sourceTriggerEvents"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// SourceTriggerInvokeResponseInput is an input type that accepts SourceTriggerInvokeResponseArgs and SourceTriggerInvokeResponseOutput values.
// You can construct a concrete instance of `SourceTriggerInvokeResponseInput` via:
//
//          SourceTriggerInvokeResponseArgs{...}
type SourceTriggerInvokeResponseInput interface {
	pulumi.Input

	ToSourceTriggerInvokeResponseOutput() SourceTriggerInvokeResponseOutput
	ToSourceTriggerInvokeResponseOutputWithContext(context.Context) SourceTriggerInvokeResponseOutput
}

// The properties of a source based trigger.
type SourceTriggerInvokeResponseArgs struct {
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties that describes the source(code) for the task.
	SourceRepository SourcePropertiesInvokeResponseInput `pulumi:"sourceRepository"`
	// The source event corresponding to the trigger.
	SourceTriggerEvents pulumi.StringArrayInput `pulumi:"sourceTriggerEvents"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SourceTriggerInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTriggerInvokeResponse)(nil)).Elem()
}

func (i SourceTriggerInvokeResponseArgs) ToSourceTriggerInvokeResponseOutput() SourceTriggerInvokeResponseOutput {
	return i.ToSourceTriggerInvokeResponseOutputWithContext(context.Background())
}

func (i SourceTriggerInvokeResponseArgs) ToSourceTriggerInvokeResponseOutputWithContext(ctx context.Context) SourceTriggerInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerInvokeResponseOutput)
}

// SourceTriggerInvokeResponseArrayInput is an input type that accepts SourceTriggerInvokeResponseArray and SourceTriggerInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SourceTriggerInvokeResponseArrayInput` via:
//
//          SourceTriggerInvokeResponseArray{ SourceTriggerInvokeResponseArgs{...} }
type SourceTriggerInvokeResponseArrayInput interface {
	pulumi.Input

	ToSourceTriggerInvokeResponseArrayOutput() SourceTriggerInvokeResponseArrayOutput
	ToSourceTriggerInvokeResponseArrayOutputWithContext(context.Context) SourceTriggerInvokeResponseArrayOutput
}

type SourceTriggerInvokeResponseArray []SourceTriggerInvokeResponseInput

func (SourceTriggerInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceTriggerInvokeResponse)(nil)).Elem()
}

func (i SourceTriggerInvokeResponseArray) ToSourceTriggerInvokeResponseArrayOutput() SourceTriggerInvokeResponseArrayOutput {
	return i.ToSourceTriggerInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SourceTriggerInvokeResponseArray) ToSourceTriggerInvokeResponseArrayOutputWithContext(ctx context.Context) SourceTriggerInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerInvokeResponseArrayOutput)
}

// The properties of a source based trigger.
type SourceTriggerInvokeResponseOutput struct{ *pulumi.OutputState }

func (SourceTriggerInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTriggerInvokeResponse)(nil)).Elem()
}

func (o SourceTriggerInvokeResponseOutput) ToSourceTriggerInvokeResponseOutput() SourceTriggerInvokeResponseOutput {
	return o
}

func (o SourceTriggerInvokeResponseOutput) ToSourceTriggerInvokeResponseOutputWithContext(ctx context.Context) SourceTriggerInvokeResponseOutput {
	return o
}

// The name of the trigger.
func (o SourceTriggerInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SourceTriggerInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The properties that describes the source(code) for the task.
func (o SourceTriggerInvokeResponseOutput) SourceRepository() SourcePropertiesInvokeResponseOutput {
	return o.ApplyT(func(v SourceTriggerInvokeResponse) SourcePropertiesInvokeResponse { return v.SourceRepository }).(SourcePropertiesInvokeResponseOutput)
}

// The source event corresponding to the trigger.
func (o SourceTriggerInvokeResponseOutput) SourceTriggerEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SourceTriggerInvokeResponse) []string { return v.SourceTriggerEvents }).(pulumi.StringArrayOutput)
}

// The current status of trigger.
func (o SourceTriggerInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SourceTriggerInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SourceTriggerInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceTriggerInvokeResponse)(nil)).Elem()
}

func (o SourceTriggerInvokeResponseArrayOutput) ToSourceTriggerInvokeResponseArrayOutput() SourceTriggerInvokeResponseArrayOutput {
	return o
}

func (o SourceTriggerInvokeResponseArrayOutput) ToSourceTriggerInvokeResponseArrayOutputWithContext(ctx context.Context) SourceTriggerInvokeResponseArrayOutput {
	return o
}

func (o SourceTriggerInvokeResponseArrayOutput) Index(i pulumi.IntInput) SourceTriggerInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SourceTriggerInvokeResponse {
		return vs[0].([]SourceTriggerInvokeResponse)[vs[1].(int)]
	}).(SourceTriggerInvokeResponseOutput)
}

// The properties of a source based trigger.
type SourceTriggerResponse struct {
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The properties that describes the source(code) for the task.
	SourceRepository SourcePropertiesResponse `pulumi:"sourceRepository"`
	// The source event corresponding to the trigger.
	SourceTriggerEvents []string `pulumi:"sourceTriggerEvents"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// SourceTriggerResponseInput is an input type that accepts SourceTriggerResponseArgs and SourceTriggerResponseOutput values.
// You can construct a concrete instance of `SourceTriggerResponseInput` via:
//
//          SourceTriggerResponseArgs{...}
type SourceTriggerResponseInput interface {
	pulumi.Input

	ToSourceTriggerResponseOutput() SourceTriggerResponseOutput
	ToSourceTriggerResponseOutputWithContext(context.Context) SourceTriggerResponseOutput
}

// The properties of a source based trigger.
type SourceTriggerResponseArgs struct {
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties that describes the source(code) for the task.
	SourceRepository SourcePropertiesResponseInput `pulumi:"sourceRepository"`
	// The source event corresponding to the trigger.
	SourceTriggerEvents pulumi.StringArrayInput `pulumi:"sourceTriggerEvents"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SourceTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTriggerResponse)(nil)).Elem()
}

func (i SourceTriggerResponseArgs) ToSourceTriggerResponseOutput() SourceTriggerResponseOutput {
	return i.ToSourceTriggerResponseOutputWithContext(context.Background())
}

func (i SourceTriggerResponseArgs) ToSourceTriggerResponseOutputWithContext(ctx context.Context) SourceTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerResponseOutput)
}

// SourceTriggerResponseArrayInput is an input type that accepts SourceTriggerResponseArray and SourceTriggerResponseArrayOutput values.
// You can construct a concrete instance of `SourceTriggerResponseArrayInput` via:
//
//          SourceTriggerResponseArray{ SourceTriggerResponseArgs{...} }
type SourceTriggerResponseArrayInput interface {
	pulumi.Input

	ToSourceTriggerResponseArrayOutput() SourceTriggerResponseArrayOutput
	ToSourceTriggerResponseArrayOutputWithContext(context.Context) SourceTriggerResponseArrayOutput
}

type SourceTriggerResponseArray []SourceTriggerResponseInput

func (SourceTriggerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceTriggerResponse)(nil)).Elem()
}

func (i SourceTriggerResponseArray) ToSourceTriggerResponseArrayOutput() SourceTriggerResponseArrayOutput {
	return i.ToSourceTriggerResponseArrayOutputWithContext(context.Background())
}

func (i SourceTriggerResponseArray) ToSourceTriggerResponseArrayOutputWithContext(ctx context.Context) SourceTriggerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerResponseArrayOutput)
}

// The properties of a source based trigger.
type SourceTriggerResponseOutput struct{ *pulumi.OutputState }

func (SourceTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTriggerResponse)(nil)).Elem()
}

func (o SourceTriggerResponseOutput) ToSourceTriggerResponseOutput() SourceTriggerResponseOutput {
	return o
}

func (o SourceTriggerResponseOutput) ToSourceTriggerResponseOutputWithContext(ctx context.Context) SourceTriggerResponseOutput {
	return o
}

// The name of the trigger.
func (o SourceTriggerResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SourceTriggerResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The properties that describes the source(code) for the task.
func (o SourceTriggerResponseOutput) SourceRepository() SourcePropertiesResponseOutput {
	return o.ApplyT(func(v SourceTriggerResponse) SourcePropertiesResponse { return v.SourceRepository }).(SourcePropertiesResponseOutput)
}

// The source event corresponding to the trigger.
func (o SourceTriggerResponseOutput) SourceTriggerEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SourceTriggerResponse) []string { return v.SourceTriggerEvents }).(pulumi.StringArrayOutput)
}

// The current status of trigger.
func (o SourceTriggerResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SourceTriggerResponseArrayOutput struct{ *pulumi.OutputState }

func (SourceTriggerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceTriggerResponse)(nil)).Elem()
}

func (o SourceTriggerResponseArrayOutput) ToSourceTriggerResponseArrayOutput() SourceTriggerResponseArrayOutput {
	return o
}

func (o SourceTriggerResponseArrayOutput) ToSourceTriggerResponseArrayOutputWithContext(ctx context.Context) SourceTriggerResponseArrayOutput {
	return o
}

func (o SourceTriggerResponseArrayOutput) Index(i pulumi.IntInput) SourceTriggerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SourceTriggerResponse {
		return vs[0].([]SourceTriggerResponse)[vs[1].(int)]
	}).(SourceTriggerResponseOutput)
}

// The status of an Azure resource at the time the operation was called.
type StatusInvokeResponse struct {
	// The short label for the status.
	DisplayStatus string `pulumi:"displayStatus"`
	// The detailed message for the status, including alerts and error messages.
	Message string `pulumi:"message"`
	// The timestamp when the status was changed to the current value.
	Timestamp string `pulumi:"timestamp"`
}

// StatusInvokeResponseInput is an input type that accepts StatusInvokeResponseArgs and StatusInvokeResponseOutput values.
// You can construct a concrete instance of `StatusInvokeResponseInput` via:
//
//          StatusInvokeResponseArgs{...}
type StatusInvokeResponseInput interface {
	pulumi.Input

	ToStatusInvokeResponseOutput() StatusInvokeResponseOutput
	ToStatusInvokeResponseOutputWithContext(context.Context) StatusInvokeResponseOutput
}

// The status of an Azure resource at the time the operation was called.
type StatusInvokeResponseArgs struct {
	// The short label for the status.
	DisplayStatus pulumi.StringInput `pulumi:"displayStatus"`
	// The detailed message for the status, including alerts and error messages.
	Message pulumi.StringInput `pulumi:"message"`
	// The timestamp when the status was changed to the current value.
	Timestamp pulumi.StringInput `pulumi:"timestamp"`
}

func (StatusInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusInvokeResponse)(nil)).Elem()
}

func (i StatusInvokeResponseArgs) ToStatusInvokeResponseOutput() StatusInvokeResponseOutput {
	return i.ToStatusInvokeResponseOutputWithContext(context.Background())
}

func (i StatusInvokeResponseArgs) ToStatusInvokeResponseOutputWithContext(ctx context.Context) StatusInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusInvokeResponseOutput)
}

// The status of an Azure resource at the time the operation was called.
type StatusInvokeResponseOutput struct{ *pulumi.OutputState }

func (StatusInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusInvokeResponse)(nil)).Elem()
}

func (o StatusInvokeResponseOutput) ToStatusInvokeResponseOutput() StatusInvokeResponseOutput {
	return o
}

func (o StatusInvokeResponseOutput) ToStatusInvokeResponseOutputWithContext(ctx context.Context) StatusInvokeResponseOutput {
	return o
}

// The short label for the status.
func (o StatusInvokeResponseOutput) DisplayStatus() pulumi.StringOutput {
	return o.ApplyT(func(v StatusInvokeResponse) string { return v.DisplayStatus }).(pulumi.StringOutput)
}

// The detailed message for the status, including alerts and error messages.
func (o StatusInvokeResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v StatusInvokeResponse) string { return v.Message }).(pulumi.StringOutput)
}

// The timestamp when the status was changed to the current value.
func (o StatusInvokeResponseOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v StatusInvokeResponse) string { return v.Timestamp }).(pulumi.StringOutput)
}

// The status of an Azure resource at the time the operation was called.
type StatusResponse struct {
	// The short label for the status.
	DisplayStatus string `pulumi:"displayStatus"`
	// The detailed message for the status, including alerts and error messages.
	Message string `pulumi:"message"`
	// The timestamp when the status was changed to the current value.
	Timestamp string `pulumi:"timestamp"`
}

// StatusResponseInput is an input type that accepts StatusResponseArgs and StatusResponseOutput values.
// You can construct a concrete instance of `StatusResponseInput` via:
//
//          StatusResponseArgs{...}
type StatusResponseInput interface {
	pulumi.Input

	ToStatusResponseOutput() StatusResponseOutput
	ToStatusResponseOutputWithContext(context.Context) StatusResponseOutput
}

// The status of an Azure resource at the time the operation was called.
type StatusResponseArgs struct {
	// The short label for the status.
	DisplayStatus pulumi.StringInput `pulumi:"displayStatus"`
	// The detailed message for the status, including alerts and error messages.
	Message pulumi.StringInput `pulumi:"message"`
	// The timestamp when the status was changed to the current value.
	Timestamp pulumi.StringInput `pulumi:"timestamp"`
}

func (StatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusResponse)(nil)).Elem()
}

func (i StatusResponseArgs) ToStatusResponseOutput() StatusResponseOutput {
	return i.ToStatusResponseOutputWithContext(context.Background())
}

func (i StatusResponseArgs) ToStatusResponseOutputWithContext(ctx context.Context) StatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusResponseOutput)
}

func (i StatusResponseArgs) ToStatusResponsePtrOutput() StatusResponsePtrOutput {
	return i.ToStatusResponsePtrOutputWithContext(context.Background())
}

func (i StatusResponseArgs) ToStatusResponsePtrOutputWithContext(ctx context.Context) StatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusResponseOutput).ToStatusResponsePtrOutputWithContext(ctx)
}

// StatusResponsePtrInput is an input type that accepts StatusResponseArgs, StatusResponsePtr and StatusResponsePtrOutput values.
// You can construct a concrete instance of `StatusResponsePtrInput` via:
//
//          StatusResponseArgs{...}
//
//  or:
//
//          nil
type StatusResponsePtrInput interface {
	pulumi.Input

	ToStatusResponsePtrOutput() StatusResponsePtrOutput
	ToStatusResponsePtrOutputWithContext(context.Context) StatusResponsePtrOutput
}

type statusResponsePtrType StatusResponseArgs

func StatusResponsePtr(v *StatusResponseArgs) StatusResponsePtrInput {
	return (*statusResponsePtrType)(v)
}

func (*statusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusResponse)(nil)).Elem()
}

func (i *statusResponsePtrType) ToStatusResponsePtrOutput() StatusResponsePtrOutput {
	return i.ToStatusResponsePtrOutputWithContext(context.Background())
}

func (i *statusResponsePtrType) ToStatusResponsePtrOutputWithContext(ctx context.Context) StatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusResponsePtrOutput)
}

// The status of an Azure resource at the time the operation was called.
type StatusResponseOutput struct{ *pulumi.OutputState }

func (StatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusResponse)(nil)).Elem()
}

func (o StatusResponseOutput) ToStatusResponseOutput() StatusResponseOutput {
	return o
}

func (o StatusResponseOutput) ToStatusResponseOutputWithContext(ctx context.Context) StatusResponseOutput {
	return o
}

func (o StatusResponseOutput) ToStatusResponsePtrOutput() StatusResponsePtrOutput {
	return o.ToStatusResponsePtrOutputWithContext(context.Background())
}

func (o StatusResponseOutput) ToStatusResponsePtrOutputWithContext(ctx context.Context) StatusResponsePtrOutput {
	return o.ApplyT(func(v StatusResponse) *StatusResponse {
		return &v
	}).(StatusResponsePtrOutput)
}

// The short label for the status.
func (o StatusResponseOutput) DisplayStatus() pulumi.StringOutput {
	return o.ApplyT(func(v StatusResponse) string { return v.DisplayStatus }).(pulumi.StringOutput)
}

// The detailed message for the status, including alerts and error messages.
func (o StatusResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v StatusResponse) string { return v.Message }).(pulumi.StringOutput)
}

// The timestamp when the status was changed to the current value.
func (o StatusResponseOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v StatusResponse) string { return v.Timestamp }).(pulumi.StringOutput)
}

type StatusResponsePtrOutput struct{ *pulumi.OutputState }

func (StatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusResponse)(nil)).Elem()
}

func (o StatusResponsePtrOutput) ToStatusResponsePtrOutput() StatusResponsePtrOutput {
	return o
}

func (o StatusResponsePtrOutput) ToStatusResponsePtrOutputWithContext(ctx context.Context) StatusResponsePtrOutput {
	return o
}

func (o StatusResponsePtrOutput) Elem() StatusResponseOutput {
	return o.ApplyT(func(v *StatusResponse) StatusResponse { return *v }).(StatusResponseOutput)
}

// The short label for the status.
func (o StatusResponsePtrOutput) DisplayStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayStatus
	}).(pulumi.StringPtrOutput)
}

// The detailed message for the status, including alerts and error messages.
func (o StatusResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// The timestamp when the status was changed to the current value.
func (o StatusResponsePtrOutput) Timestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Timestamp
	}).(pulumi.StringPtrOutput)
}

// The properties of a storage account for a container registry. Only applicable to Classic SKU.
type StorageAccountProperties struct {
	// The resource ID of the storage account.
	Id string `pulumi:"id"`
}

// StorageAccountPropertiesInput is an input type that accepts StorageAccountPropertiesArgs and StorageAccountPropertiesOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesInput` via:
//
//          StorageAccountPropertiesArgs{...}
type StorageAccountPropertiesInput interface {
	pulumi.Input

	ToStorageAccountPropertiesOutput() StorageAccountPropertiesOutput
	ToStorageAccountPropertiesOutputWithContext(context.Context) StorageAccountPropertiesOutput
}

// The properties of a storage account for a container registry. Only applicable to Classic SKU.
type StorageAccountPropertiesArgs struct {
	// The resource ID of the storage account.
	Id pulumi.StringInput `pulumi:"id"`
}

func (StorageAccountPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountProperties)(nil)).Elem()
}

func (i StorageAccountPropertiesArgs) ToStorageAccountPropertiesOutput() StorageAccountPropertiesOutput {
	return i.ToStorageAccountPropertiesOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesArgs) ToStorageAccountPropertiesOutputWithContext(ctx context.Context) StorageAccountPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesOutput)
}

func (i StorageAccountPropertiesArgs) ToStorageAccountPropertiesPtrOutput() StorageAccountPropertiesPtrOutput {
	return i.ToStorageAccountPropertiesPtrOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesArgs) ToStorageAccountPropertiesPtrOutputWithContext(ctx context.Context) StorageAccountPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesOutput).ToStorageAccountPropertiesPtrOutputWithContext(ctx)
}

// StorageAccountPropertiesPtrInput is an input type that accepts StorageAccountPropertiesArgs, StorageAccountPropertiesPtr and StorageAccountPropertiesPtrOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesPtrInput` via:
//
//          StorageAccountPropertiesArgs{...}
//
//  or:
//
//          nil
type StorageAccountPropertiesPtrInput interface {
	pulumi.Input

	ToStorageAccountPropertiesPtrOutput() StorageAccountPropertiesPtrOutput
	ToStorageAccountPropertiesPtrOutputWithContext(context.Context) StorageAccountPropertiesPtrOutput
}

type storageAccountPropertiesPtrType StorageAccountPropertiesArgs

func StorageAccountPropertiesPtr(v *StorageAccountPropertiesArgs) StorageAccountPropertiesPtrInput {
	return (*storageAccountPropertiesPtrType)(v)
}

func (*storageAccountPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountProperties)(nil)).Elem()
}

func (i *storageAccountPropertiesPtrType) ToStorageAccountPropertiesPtrOutput() StorageAccountPropertiesPtrOutput {
	return i.ToStorageAccountPropertiesPtrOutputWithContext(context.Background())
}

func (i *storageAccountPropertiesPtrType) ToStorageAccountPropertiesPtrOutputWithContext(ctx context.Context) StorageAccountPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesPtrOutput)
}

// The properties of a storage account for a container registry. Only applicable to Classic SKU.
type StorageAccountPropertiesOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountProperties)(nil)).Elem()
}

func (o StorageAccountPropertiesOutput) ToStorageAccountPropertiesOutput() StorageAccountPropertiesOutput {
	return o
}

func (o StorageAccountPropertiesOutput) ToStorageAccountPropertiesOutputWithContext(ctx context.Context) StorageAccountPropertiesOutput {
	return o
}

func (o StorageAccountPropertiesOutput) ToStorageAccountPropertiesPtrOutput() StorageAccountPropertiesPtrOutput {
	return o.ToStorageAccountPropertiesPtrOutputWithContext(context.Background())
}

func (o StorageAccountPropertiesOutput) ToStorageAccountPropertiesPtrOutputWithContext(ctx context.Context) StorageAccountPropertiesPtrOutput {
	return o.ApplyT(func(v StorageAccountProperties) *StorageAccountProperties {
		return &v
	}).(StorageAccountPropertiesPtrOutput)
}

// The resource ID of the storage account.
func (o StorageAccountPropertiesOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountProperties) string { return v.Id }).(pulumi.StringOutput)
}

type StorageAccountPropertiesPtrOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountProperties)(nil)).Elem()
}

func (o StorageAccountPropertiesPtrOutput) ToStorageAccountPropertiesPtrOutput() StorageAccountPropertiesPtrOutput {
	return o
}

func (o StorageAccountPropertiesPtrOutput) ToStorageAccountPropertiesPtrOutputWithContext(ctx context.Context) StorageAccountPropertiesPtrOutput {
	return o
}

func (o StorageAccountPropertiesPtrOutput) Elem() StorageAccountPropertiesOutput {
	return o.ApplyT(func(v *StorageAccountProperties) StorageAccountProperties { return *v }).(StorageAccountPropertiesOutput)
}

// The resource ID of the storage account.
func (o StorageAccountPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The properties of a storage account for a container registry. Only applicable to Classic SKU.
type StorageAccountPropertiesInvokeResponse struct {
	// The resource ID of the storage account.
	Id string `pulumi:"id"`
}

// StorageAccountPropertiesInvokeResponseInput is an input type that accepts StorageAccountPropertiesInvokeResponseArgs and StorageAccountPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesInvokeResponseInput` via:
//
//          StorageAccountPropertiesInvokeResponseArgs{...}
type StorageAccountPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToStorageAccountPropertiesInvokeResponseOutput() StorageAccountPropertiesInvokeResponseOutput
	ToStorageAccountPropertiesInvokeResponseOutputWithContext(context.Context) StorageAccountPropertiesInvokeResponseOutput
}

// The properties of a storage account for a container registry. Only applicable to Classic SKU.
type StorageAccountPropertiesInvokeResponseArgs struct {
	// The resource ID of the storage account.
	Id pulumi.StringInput `pulumi:"id"`
}

func (StorageAccountPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountPropertiesInvokeResponse)(nil)).Elem()
}

func (i StorageAccountPropertiesInvokeResponseArgs) ToStorageAccountPropertiesInvokeResponseOutput() StorageAccountPropertiesInvokeResponseOutput {
	return i.ToStorageAccountPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesInvokeResponseArgs) ToStorageAccountPropertiesInvokeResponseOutputWithContext(ctx context.Context) StorageAccountPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesInvokeResponseOutput)
}

// The properties of a storage account for a container registry. Only applicable to Classic SKU.
type StorageAccountPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountPropertiesInvokeResponse)(nil)).Elem()
}

func (o StorageAccountPropertiesInvokeResponseOutput) ToStorageAccountPropertiesInvokeResponseOutput() StorageAccountPropertiesInvokeResponseOutput {
	return o
}

func (o StorageAccountPropertiesInvokeResponseOutput) ToStorageAccountPropertiesInvokeResponseOutputWithContext(ctx context.Context) StorageAccountPropertiesInvokeResponseOutput {
	return o
}

// The resource ID of the storage account.
func (o StorageAccountPropertiesInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountPropertiesInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The properties of a storage account for a container registry. Only applicable to Classic SKU.
type StorageAccountPropertiesResponse struct {
	// The resource ID of the storage account.
	Id string `pulumi:"id"`
}

// StorageAccountPropertiesResponseInput is an input type that accepts StorageAccountPropertiesResponseArgs and StorageAccountPropertiesResponseOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesResponseInput` via:
//
//          StorageAccountPropertiesResponseArgs{...}
type StorageAccountPropertiesResponseInput interface {
	pulumi.Input

	ToStorageAccountPropertiesResponseOutput() StorageAccountPropertiesResponseOutput
	ToStorageAccountPropertiesResponseOutputWithContext(context.Context) StorageAccountPropertiesResponseOutput
}

// The properties of a storage account for a container registry. Only applicable to Classic SKU.
type StorageAccountPropertiesResponseArgs struct {
	// The resource ID of the storage account.
	Id pulumi.StringInput `pulumi:"id"`
}

func (StorageAccountPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountPropertiesResponse)(nil)).Elem()
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponseOutput() StorageAccountPropertiesResponseOutput {
	return i.ToStorageAccountPropertiesResponseOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponseOutputWithContext(ctx context.Context) StorageAccountPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesResponseOutput)
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return i.ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesResponseOutput).ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx)
}

// StorageAccountPropertiesResponsePtrInput is an input type that accepts StorageAccountPropertiesResponseArgs, StorageAccountPropertiesResponsePtr and StorageAccountPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesResponsePtrInput` via:
//
//          StorageAccountPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type StorageAccountPropertiesResponsePtrInput interface {
	pulumi.Input

	ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput
	ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Context) StorageAccountPropertiesResponsePtrOutput
}

type storageAccountPropertiesResponsePtrType StorageAccountPropertiesResponseArgs

func StorageAccountPropertiesResponsePtr(v *StorageAccountPropertiesResponseArgs) StorageAccountPropertiesResponsePtrInput {
	return (*storageAccountPropertiesResponsePtrType)(v)
}

func (*storageAccountPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountPropertiesResponse)(nil)).Elem()
}

func (i *storageAccountPropertiesResponsePtrType) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return i.ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *storageAccountPropertiesResponsePtrType) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesResponsePtrOutput)
}

// The properties of a storage account for a container registry. Only applicable to Classic SKU.
type StorageAccountPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountPropertiesResponse)(nil)).Elem()
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponseOutput() StorageAccountPropertiesResponseOutput {
	return o
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponseOutputWithContext(ctx context.Context) StorageAccountPropertiesResponseOutput {
	return o
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return o.ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) *StorageAccountPropertiesResponse {
		return &v
	}).(StorageAccountPropertiesResponsePtrOutput)
}

// The resource ID of the storage account.
func (o StorageAccountPropertiesResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) string { return v.Id }).(pulumi.StringOutput)
}

type StorageAccountPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountPropertiesResponse)(nil)).Elem()
}

func (o StorageAccountPropertiesResponsePtrOutput) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return o
}

func (o StorageAccountPropertiesResponsePtrOutput) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return o
}

func (o StorageAccountPropertiesResponsePtrOutput) Elem() StorageAccountPropertiesResponseOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) StorageAccountPropertiesResponse { return *v }).(StorageAccountPropertiesResponseOutput)
}

// The resource ID of the storage account.
func (o StorageAccountPropertiesResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The target of the event.
type TargetInvokeResponse struct {
	// The digest of the content, as defined by the Registry V2 HTTP API Specification.
	Digest *string `pulumi:"digest"`
	// The number of bytes of the content. Same as Size field.
	Length *float64 `pulumi:"length"`
	// The MIME type of the referenced object.
	MediaType *string `pulumi:"mediaType"`
	// The name of the artifact.
	Name *string `pulumi:"name"`
	// The repository name.
	Repository *string `pulumi:"repository"`
	// The number of bytes of the content. Same as Length field.
	Size *float64 `pulumi:"size"`
	// The tag name.
	Tag *string `pulumi:"tag"`
	// The direct URL to the content.
	Url *string `pulumi:"url"`
	// The version of the artifact.
	Version *string `pulumi:"version"`
}

// TargetInvokeResponseInput is an input type that accepts TargetInvokeResponseArgs and TargetInvokeResponseOutput values.
// You can construct a concrete instance of `TargetInvokeResponseInput` via:
//
//          TargetInvokeResponseArgs{...}
type TargetInvokeResponseInput interface {
	pulumi.Input

	ToTargetInvokeResponseOutput() TargetInvokeResponseOutput
	ToTargetInvokeResponseOutputWithContext(context.Context) TargetInvokeResponseOutput
}

// The target of the event.
type TargetInvokeResponseArgs struct {
	// The digest of the content, as defined by the Registry V2 HTTP API Specification.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// The number of bytes of the content. Same as Size field.
	Length pulumi.Float64PtrInput `pulumi:"length"`
	// The MIME type of the referenced object.
	MediaType pulumi.StringPtrInput `pulumi:"mediaType"`
	// The name of the artifact.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The repository name.
	Repository pulumi.StringPtrInput `pulumi:"repository"`
	// The number of bytes of the content. Same as Length field.
	Size pulumi.Float64PtrInput `pulumi:"size"`
	// The tag name.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// The direct URL to the content.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// The version of the artifact.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (TargetInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetInvokeResponse)(nil)).Elem()
}

func (i TargetInvokeResponseArgs) ToTargetInvokeResponseOutput() TargetInvokeResponseOutput {
	return i.ToTargetInvokeResponseOutputWithContext(context.Background())
}

func (i TargetInvokeResponseArgs) ToTargetInvokeResponseOutputWithContext(ctx context.Context) TargetInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetInvokeResponseOutput)
}

func (i TargetInvokeResponseArgs) ToTargetInvokeResponsePtrOutput() TargetInvokeResponsePtrOutput {
	return i.ToTargetInvokeResponsePtrOutputWithContext(context.Background())
}

func (i TargetInvokeResponseArgs) ToTargetInvokeResponsePtrOutputWithContext(ctx context.Context) TargetInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetInvokeResponseOutput).ToTargetInvokeResponsePtrOutputWithContext(ctx)
}

// TargetInvokeResponsePtrInput is an input type that accepts TargetInvokeResponseArgs, TargetInvokeResponsePtr and TargetInvokeResponsePtrOutput values.
// You can construct a concrete instance of `TargetInvokeResponsePtrInput` via:
//
//          TargetInvokeResponseArgs{...}
//
//  or:
//
//          nil
type TargetInvokeResponsePtrInput interface {
	pulumi.Input

	ToTargetInvokeResponsePtrOutput() TargetInvokeResponsePtrOutput
	ToTargetInvokeResponsePtrOutputWithContext(context.Context) TargetInvokeResponsePtrOutput
}

type targetInvokeResponsePtrType TargetInvokeResponseArgs

func TargetInvokeResponsePtr(v *TargetInvokeResponseArgs) TargetInvokeResponsePtrInput {
	return (*targetInvokeResponsePtrType)(v)
}

func (*targetInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetInvokeResponse)(nil)).Elem()
}

func (i *targetInvokeResponsePtrType) ToTargetInvokeResponsePtrOutput() TargetInvokeResponsePtrOutput {
	return i.ToTargetInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *targetInvokeResponsePtrType) ToTargetInvokeResponsePtrOutputWithContext(ctx context.Context) TargetInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetInvokeResponsePtrOutput)
}

// The target of the event.
type TargetInvokeResponseOutput struct{ *pulumi.OutputState }

func (TargetInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetInvokeResponse)(nil)).Elem()
}

func (o TargetInvokeResponseOutput) ToTargetInvokeResponseOutput() TargetInvokeResponseOutput {
	return o
}

func (o TargetInvokeResponseOutput) ToTargetInvokeResponseOutputWithContext(ctx context.Context) TargetInvokeResponseOutput {
	return o
}

func (o TargetInvokeResponseOutput) ToTargetInvokeResponsePtrOutput() TargetInvokeResponsePtrOutput {
	return o.ToTargetInvokeResponsePtrOutputWithContext(context.Background())
}

func (o TargetInvokeResponseOutput) ToTargetInvokeResponsePtrOutputWithContext(ctx context.Context) TargetInvokeResponsePtrOutput {
	return o.ApplyT(func(v TargetInvokeResponse) *TargetInvokeResponse {
		return &v
	}).(TargetInvokeResponsePtrOutput)
}

// The digest of the content, as defined by the Registry V2 HTTP API Specification.
func (o TargetInvokeResponseOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetInvokeResponse) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// The number of bytes of the content. Same as Size field.
func (o TargetInvokeResponseOutput) Length() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TargetInvokeResponse) *float64 { return v.Length }).(pulumi.Float64PtrOutput)
}

// The MIME type of the referenced object.
func (o TargetInvokeResponseOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetInvokeResponse) *string { return v.MediaType }).(pulumi.StringPtrOutput)
}

// The name of the artifact.
func (o TargetInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The repository name.
func (o TargetInvokeResponseOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetInvokeResponse) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

// The number of bytes of the content. Same as Length field.
func (o TargetInvokeResponseOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TargetInvokeResponse) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

// The tag name.
func (o TargetInvokeResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetInvokeResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// The direct URL to the content.
func (o TargetInvokeResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetInvokeResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// The version of the artifact.
func (o TargetInvokeResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetInvokeResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type TargetInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (TargetInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetInvokeResponse)(nil)).Elem()
}

func (o TargetInvokeResponsePtrOutput) ToTargetInvokeResponsePtrOutput() TargetInvokeResponsePtrOutput {
	return o
}

func (o TargetInvokeResponsePtrOutput) ToTargetInvokeResponsePtrOutputWithContext(ctx context.Context) TargetInvokeResponsePtrOutput {
	return o
}

func (o TargetInvokeResponsePtrOutput) Elem() TargetInvokeResponseOutput {
	return o.ApplyT(func(v *TargetInvokeResponse) TargetInvokeResponse { return *v }).(TargetInvokeResponseOutput)
}

// The digest of the content, as defined by the Registry V2 HTTP API Specification.
func (o TargetInvokeResponsePtrOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Digest
	}).(pulumi.StringPtrOutput)
}

// The number of bytes of the content. Same as Size field.
func (o TargetInvokeResponsePtrOutput) Length() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TargetInvokeResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Length
	}).(pulumi.Float64PtrOutput)
}

// The MIME type of the referenced object.
func (o TargetInvokeResponsePtrOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.MediaType
	}).(pulumi.StringPtrOutput)
}

// The name of the artifact.
func (o TargetInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The repository name.
func (o TargetInvokeResponsePtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Repository
	}).(pulumi.StringPtrOutput)
}

// The number of bytes of the content. Same as Length field.
func (o TargetInvokeResponsePtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TargetInvokeResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.Float64PtrOutput)
}

// The tag name.
func (o TargetInvokeResponsePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

// The direct URL to the content.
func (o TargetInvokeResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// The version of the artifact.
func (o TargetInvokeResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Base properties for any task step.
type TaskStepProperties struct {
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath *string `pulumi:"contextPath"`
}

// TaskStepPropertiesInput is an input type that accepts TaskStepPropertiesArgs and TaskStepPropertiesOutput values.
// You can construct a concrete instance of `TaskStepPropertiesInput` via:
//
//          TaskStepPropertiesArgs{...}
type TaskStepPropertiesInput interface {
	pulumi.Input

	ToTaskStepPropertiesOutput() TaskStepPropertiesOutput
	ToTaskStepPropertiesOutputWithContext(context.Context) TaskStepPropertiesOutput
}

// Base properties for any task step.
type TaskStepPropertiesArgs struct {
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
}

func (TaskStepPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskStepProperties)(nil)).Elem()
}

func (i TaskStepPropertiesArgs) ToTaskStepPropertiesOutput() TaskStepPropertiesOutput {
	return i.ToTaskStepPropertiesOutputWithContext(context.Background())
}

func (i TaskStepPropertiesArgs) ToTaskStepPropertiesOutputWithContext(ctx context.Context) TaskStepPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskStepPropertiesOutput)
}

func (i TaskStepPropertiesArgs) ToTaskStepPropertiesPtrOutput() TaskStepPropertiesPtrOutput {
	return i.ToTaskStepPropertiesPtrOutputWithContext(context.Background())
}

func (i TaskStepPropertiesArgs) ToTaskStepPropertiesPtrOutputWithContext(ctx context.Context) TaskStepPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskStepPropertiesOutput).ToTaskStepPropertiesPtrOutputWithContext(ctx)
}

// TaskStepPropertiesPtrInput is an input type that accepts TaskStepPropertiesArgs, TaskStepPropertiesPtr and TaskStepPropertiesPtrOutput values.
// You can construct a concrete instance of `TaskStepPropertiesPtrInput` via:
//
//          TaskStepPropertiesArgs{...}
//
//  or:
//
//          nil
type TaskStepPropertiesPtrInput interface {
	pulumi.Input

	ToTaskStepPropertiesPtrOutput() TaskStepPropertiesPtrOutput
	ToTaskStepPropertiesPtrOutputWithContext(context.Context) TaskStepPropertiesPtrOutput
}

type taskStepPropertiesPtrType TaskStepPropertiesArgs

func TaskStepPropertiesPtr(v *TaskStepPropertiesArgs) TaskStepPropertiesPtrInput {
	return (*taskStepPropertiesPtrType)(v)
}

func (*taskStepPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskStepProperties)(nil)).Elem()
}

func (i *taskStepPropertiesPtrType) ToTaskStepPropertiesPtrOutput() TaskStepPropertiesPtrOutput {
	return i.ToTaskStepPropertiesPtrOutputWithContext(context.Background())
}

func (i *taskStepPropertiesPtrType) ToTaskStepPropertiesPtrOutputWithContext(ctx context.Context) TaskStepPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskStepPropertiesPtrOutput)
}

// Base properties for any task step.
type TaskStepPropertiesOutput struct{ *pulumi.OutputState }

func (TaskStepPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskStepProperties)(nil)).Elem()
}

func (o TaskStepPropertiesOutput) ToTaskStepPropertiesOutput() TaskStepPropertiesOutput {
	return o
}

func (o TaskStepPropertiesOutput) ToTaskStepPropertiesOutputWithContext(ctx context.Context) TaskStepPropertiesOutput {
	return o
}

func (o TaskStepPropertiesOutput) ToTaskStepPropertiesPtrOutput() TaskStepPropertiesPtrOutput {
	return o.ToTaskStepPropertiesPtrOutputWithContext(context.Background())
}

func (o TaskStepPropertiesOutput) ToTaskStepPropertiesPtrOutputWithContext(ctx context.Context) TaskStepPropertiesPtrOutput {
	return o.ApplyT(func(v TaskStepProperties) *TaskStepProperties {
		return &v
	}).(TaskStepPropertiesPtrOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o TaskStepPropertiesOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskStepProperties) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o TaskStepPropertiesOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskStepProperties) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

type TaskStepPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TaskStepPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskStepProperties)(nil)).Elem()
}

func (o TaskStepPropertiesPtrOutput) ToTaskStepPropertiesPtrOutput() TaskStepPropertiesPtrOutput {
	return o
}

func (o TaskStepPropertiesPtrOutput) ToTaskStepPropertiesPtrOutputWithContext(ctx context.Context) TaskStepPropertiesPtrOutput {
	return o
}

func (o TaskStepPropertiesPtrOutput) Elem() TaskStepPropertiesOutput {
	return o.ApplyT(func(v *TaskStepProperties) TaskStepProperties { return *v }).(TaskStepPropertiesOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o TaskStepPropertiesPtrOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskStepProperties) *string {
		if v == nil {
			return nil
		}
		return v.ContextAccessToken
	}).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o TaskStepPropertiesPtrOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskStepProperties) *string {
		if v == nil {
			return nil
		}
		return v.ContextPath
	}).(pulumi.StringPtrOutput)
}

// The properties of a timer trigger.
type TimerTrigger struct {
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The CRON expression for the task schedule
	Schedule string `pulumi:"schedule"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// TimerTriggerInput is an input type that accepts TimerTriggerArgs and TimerTriggerOutput values.
// You can construct a concrete instance of `TimerTriggerInput` via:
//
//          TimerTriggerArgs{...}
type TimerTriggerInput interface {
	pulumi.Input

	ToTimerTriggerOutput() TimerTriggerOutput
	ToTimerTriggerOutputWithContext(context.Context) TimerTriggerOutput
}

// The properties of a timer trigger.
type TimerTriggerArgs struct {
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The CRON expression for the task schedule
	Schedule pulumi.StringInput `pulumi:"schedule"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (TimerTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTrigger)(nil)).Elem()
}

func (i TimerTriggerArgs) ToTimerTriggerOutput() TimerTriggerOutput {
	return i.ToTimerTriggerOutputWithContext(context.Background())
}

func (i TimerTriggerArgs) ToTimerTriggerOutputWithContext(ctx context.Context) TimerTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerOutput)
}

// TimerTriggerArrayInput is an input type that accepts TimerTriggerArray and TimerTriggerArrayOutput values.
// You can construct a concrete instance of `TimerTriggerArrayInput` via:
//
//          TimerTriggerArray{ TimerTriggerArgs{...} }
type TimerTriggerArrayInput interface {
	pulumi.Input

	ToTimerTriggerArrayOutput() TimerTriggerArrayOutput
	ToTimerTriggerArrayOutputWithContext(context.Context) TimerTriggerArrayOutput
}

type TimerTriggerArray []TimerTriggerInput

func (TimerTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimerTrigger)(nil)).Elem()
}

func (i TimerTriggerArray) ToTimerTriggerArrayOutput() TimerTriggerArrayOutput {
	return i.ToTimerTriggerArrayOutputWithContext(context.Background())
}

func (i TimerTriggerArray) ToTimerTriggerArrayOutputWithContext(ctx context.Context) TimerTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerArrayOutput)
}

// The properties of a timer trigger.
type TimerTriggerOutput struct{ *pulumi.OutputState }

func (TimerTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTrigger)(nil)).Elem()
}

func (o TimerTriggerOutput) ToTimerTriggerOutput() TimerTriggerOutput {
	return o
}

func (o TimerTriggerOutput) ToTimerTriggerOutputWithContext(ctx context.Context) TimerTriggerOutput {
	return o
}

// The name of the trigger.
func (o TimerTriggerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TimerTrigger) string { return v.Name }).(pulumi.StringOutput)
}

// The CRON expression for the task schedule
func (o TimerTriggerOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v TimerTrigger) string { return v.Schedule }).(pulumi.StringOutput)
}

// The current status of trigger.
func (o TimerTriggerOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimerTrigger) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type TimerTriggerArrayOutput struct{ *pulumi.OutputState }

func (TimerTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimerTrigger)(nil)).Elem()
}

func (o TimerTriggerArrayOutput) ToTimerTriggerArrayOutput() TimerTriggerArrayOutput {
	return o
}

func (o TimerTriggerArrayOutput) ToTimerTriggerArrayOutputWithContext(ctx context.Context) TimerTriggerArrayOutput {
	return o
}

func (o TimerTriggerArrayOutput) Index(i pulumi.IntInput) TimerTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimerTrigger {
		return vs[0].([]TimerTrigger)[vs[1].(int)]
	}).(TimerTriggerOutput)
}

// The properties of a timer trigger.
type TimerTriggerInvokeResponse struct {
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The CRON expression for the task schedule
	Schedule string `pulumi:"schedule"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// TimerTriggerInvokeResponseInput is an input type that accepts TimerTriggerInvokeResponseArgs and TimerTriggerInvokeResponseOutput values.
// You can construct a concrete instance of `TimerTriggerInvokeResponseInput` via:
//
//          TimerTriggerInvokeResponseArgs{...}
type TimerTriggerInvokeResponseInput interface {
	pulumi.Input

	ToTimerTriggerInvokeResponseOutput() TimerTriggerInvokeResponseOutput
	ToTimerTriggerInvokeResponseOutputWithContext(context.Context) TimerTriggerInvokeResponseOutput
}

// The properties of a timer trigger.
type TimerTriggerInvokeResponseArgs struct {
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The CRON expression for the task schedule
	Schedule pulumi.StringInput `pulumi:"schedule"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (TimerTriggerInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTriggerInvokeResponse)(nil)).Elem()
}

func (i TimerTriggerInvokeResponseArgs) ToTimerTriggerInvokeResponseOutput() TimerTriggerInvokeResponseOutput {
	return i.ToTimerTriggerInvokeResponseOutputWithContext(context.Background())
}

func (i TimerTriggerInvokeResponseArgs) ToTimerTriggerInvokeResponseOutputWithContext(ctx context.Context) TimerTriggerInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerInvokeResponseOutput)
}

// TimerTriggerInvokeResponseArrayInput is an input type that accepts TimerTriggerInvokeResponseArray and TimerTriggerInvokeResponseArrayOutput values.
// You can construct a concrete instance of `TimerTriggerInvokeResponseArrayInput` via:
//
//          TimerTriggerInvokeResponseArray{ TimerTriggerInvokeResponseArgs{...} }
type TimerTriggerInvokeResponseArrayInput interface {
	pulumi.Input

	ToTimerTriggerInvokeResponseArrayOutput() TimerTriggerInvokeResponseArrayOutput
	ToTimerTriggerInvokeResponseArrayOutputWithContext(context.Context) TimerTriggerInvokeResponseArrayOutput
}

type TimerTriggerInvokeResponseArray []TimerTriggerInvokeResponseInput

func (TimerTriggerInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimerTriggerInvokeResponse)(nil)).Elem()
}

func (i TimerTriggerInvokeResponseArray) ToTimerTriggerInvokeResponseArrayOutput() TimerTriggerInvokeResponseArrayOutput {
	return i.ToTimerTriggerInvokeResponseArrayOutputWithContext(context.Background())
}

func (i TimerTriggerInvokeResponseArray) ToTimerTriggerInvokeResponseArrayOutputWithContext(ctx context.Context) TimerTriggerInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerInvokeResponseArrayOutput)
}

// The properties of a timer trigger.
type TimerTriggerInvokeResponseOutput struct{ *pulumi.OutputState }

func (TimerTriggerInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTriggerInvokeResponse)(nil)).Elem()
}

func (o TimerTriggerInvokeResponseOutput) ToTimerTriggerInvokeResponseOutput() TimerTriggerInvokeResponseOutput {
	return o
}

func (o TimerTriggerInvokeResponseOutput) ToTimerTriggerInvokeResponseOutputWithContext(ctx context.Context) TimerTriggerInvokeResponseOutput {
	return o
}

// The name of the trigger.
func (o TimerTriggerInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TimerTriggerInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The CRON expression for the task schedule
func (o TimerTriggerInvokeResponseOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v TimerTriggerInvokeResponse) string { return v.Schedule }).(pulumi.StringOutput)
}

// The current status of trigger.
func (o TimerTriggerInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimerTriggerInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type TimerTriggerInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (TimerTriggerInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimerTriggerInvokeResponse)(nil)).Elem()
}

func (o TimerTriggerInvokeResponseArrayOutput) ToTimerTriggerInvokeResponseArrayOutput() TimerTriggerInvokeResponseArrayOutput {
	return o
}

func (o TimerTriggerInvokeResponseArrayOutput) ToTimerTriggerInvokeResponseArrayOutputWithContext(ctx context.Context) TimerTriggerInvokeResponseArrayOutput {
	return o
}

func (o TimerTriggerInvokeResponseArrayOutput) Index(i pulumi.IntInput) TimerTriggerInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimerTriggerInvokeResponse {
		return vs[0].([]TimerTriggerInvokeResponse)[vs[1].(int)]
	}).(TimerTriggerInvokeResponseOutput)
}

// The properties of a timer trigger.
type TimerTriggerResponse struct {
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The CRON expression for the task schedule
	Schedule string `pulumi:"schedule"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// TimerTriggerResponseInput is an input type that accepts TimerTriggerResponseArgs and TimerTriggerResponseOutput values.
// You can construct a concrete instance of `TimerTriggerResponseInput` via:
//
//          TimerTriggerResponseArgs{...}
type TimerTriggerResponseInput interface {
	pulumi.Input

	ToTimerTriggerResponseOutput() TimerTriggerResponseOutput
	ToTimerTriggerResponseOutputWithContext(context.Context) TimerTriggerResponseOutput
}

// The properties of a timer trigger.
type TimerTriggerResponseArgs struct {
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The CRON expression for the task schedule
	Schedule pulumi.StringInput `pulumi:"schedule"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (TimerTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTriggerResponse)(nil)).Elem()
}

func (i TimerTriggerResponseArgs) ToTimerTriggerResponseOutput() TimerTriggerResponseOutput {
	return i.ToTimerTriggerResponseOutputWithContext(context.Background())
}

func (i TimerTriggerResponseArgs) ToTimerTriggerResponseOutputWithContext(ctx context.Context) TimerTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerResponseOutput)
}

// TimerTriggerResponseArrayInput is an input type that accepts TimerTriggerResponseArray and TimerTriggerResponseArrayOutput values.
// You can construct a concrete instance of `TimerTriggerResponseArrayInput` via:
//
//          TimerTriggerResponseArray{ TimerTriggerResponseArgs{...} }
type TimerTriggerResponseArrayInput interface {
	pulumi.Input

	ToTimerTriggerResponseArrayOutput() TimerTriggerResponseArrayOutput
	ToTimerTriggerResponseArrayOutputWithContext(context.Context) TimerTriggerResponseArrayOutput
}

type TimerTriggerResponseArray []TimerTriggerResponseInput

func (TimerTriggerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimerTriggerResponse)(nil)).Elem()
}

func (i TimerTriggerResponseArray) ToTimerTriggerResponseArrayOutput() TimerTriggerResponseArrayOutput {
	return i.ToTimerTriggerResponseArrayOutputWithContext(context.Background())
}

func (i TimerTriggerResponseArray) ToTimerTriggerResponseArrayOutputWithContext(ctx context.Context) TimerTriggerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerResponseArrayOutput)
}

// The properties of a timer trigger.
type TimerTriggerResponseOutput struct{ *pulumi.OutputState }

func (TimerTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTriggerResponse)(nil)).Elem()
}

func (o TimerTriggerResponseOutput) ToTimerTriggerResponseOutput() TimerTriggerResponseOutput {
	return o
}

func (o TimerTriggerResponseOutput) ToTimerTriggerResponseOutputWithContext(ctx context.Context) TimerTriggerResponseOutput {
	return o
}

// The name of the trigger.
func (o TimerTriggerResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TimerTriggerResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The CRON expression for the task schedule
func (o TimerTriggerResponseOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v TimerTriggerResponse) string { return v.Schedule }).(pulumi.StringOutput)
}

// The current status of trigger.
func (o TimerTriggerResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimerTriggerResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type TimerTriggerResponseArrayOutput struct{ *pulumi.OutputState }

func (TimerTriggerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimerTriggerResponse)(nil)).Elem()
}

func (o TimerTriggerResponseArrayOutput) ToTimerTriggerResponseArrayOutput() TimerTriggerResponseArrayOutput {
	return o
}

func (o TimerTriggerResponseArrayOutput) ToTimerTriggerResponseArrayOutputWithContext(ctx context.Context) TimerTriggerResponseArrayOutput {
	return o
}

func (o TimerTriggerResponseArrayOutput) Index(i pulumi.IntInput) TimerTriggerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimerTriggerResponse {
		return vs[0].([]TimerTriggerResponse)[vs[1].(int)]
	}).(TimerTriggerResponseOutput)
}

// The properties of a trigger.
type TriggerProperties struct {
	// The trigger based on base image dependencies.
	BaseImageTrigger *BaseImageTrigger `pulumi:"baseImageTrigger"`
	// The collection of triggers based on source code repository.
	SourceTriggers []SourceTrigger `pulumi:"sourceTriggers"`
	// The collection of timer triggers.
	TimerTriggers []TimerTrigger `pulumi:"timerTriggers"`
}

// TriggerPropertiesInput is an input type that accepts TriggerPropertiesArgs and TriggerPropertiesOutput values.
// You can construct a concrete instance of `TriggerPropertiesInput` via:
//
//          TriggerPropertiesArgs{...}
type TriggerPropertiesInput interface {
	pulumi.Input

	ToTriggerPropertiesOutput() TriggerPropertiesOutput
	ToTriggerPropertiesOutputWithContext(context.Context) TriggerPropertiesOutput
}

// The properties of a trigger.
type TriggerPropertiesArgs struct {
	// The trigger based on base image dependencies.
	BaseImageTrigger BaseImageTriggerPtrInput `pulumi:"baseImageTrigger"`
	// The collection of triggers based on source code repository.
	SourceTriggers SourceTriggerArrayInput `pulumi:"sourceTriggers"`
	// The collection of timer triggers.
	TimerTriggers TimerTriggerArrayInput `pulumi:"timerTriggers"`
}

func (TriggerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerProperties)(nil)).Elem()
}

func (i TriggerPropertiesArgs) ToTriggerPropertiesOutput() TriggerPropertiesOutput {
	return i.ToTriggerPropertiesOutputWithContext(context.Background())
}

func (i TriggerPropertiesArgs) ToTriggerPropertiesOutputWithContext(ctx context.Context) TriggerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesOutput)
}

func (i TriggerPropertiesArgs) ToTriggerPropertiesPtrOutput() TriggerPropertiesPtrOutput {
	return i.ToTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (i TriggerPropertiesArgs) ToTriggerPropertiesPtrOutputWithContext(ctx context.Context) TriggerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesOutput).ToTriggerPropertiesPtrOutputWithContext(ctx)
}

// TriggerPropertiesPtrInput is an input type that accepts TriggerPropertiesArgs, TriggerPropertiesPtr and TriggerPropertiesPtrOutput values.
// You can construct a concrete instance of `TriggerPropertiesPtrInput` via:
//
//          TriggerPropertiesArgs{...}
//
//  or:
//
//          nil
type TriggerPropertiesPtrInput interface {
	pulumi.Input

	ToTriggerPropertiesPtrOutput() TriggerPropertiesPtrOutput
	ToTriggerPropertiesPtrOutputWithContext(context.Context) TriggerPropertiesPtrOutput
}

type triggerPropertiesPtrType TriggerPropertiesArgs

func TriggerPropertiesPtr(v *TriggerPropertiesArgs) TriggerPropertiesPtrInput {
	return (*triggerPropertiesPtrType)(v)
}

func (*triggerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerProperties)(nil)).Elem()
}

func (i *triggerPropertiesPtrType) ToTriggerPropertiesPtrOutput() TriggerPropertiesPtrOutput {
	return i.ToTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (i *triggerPropertiesPtrType) ToTriggerPropertiesPtrOutputWithContext(ctx context.Context) TriggerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesPtrOutput)
}

// The properties of a trigger.
type TriggerPropertiesOutput struct{ *pulumi.OutputState }

func (TriggerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerProperties)(nil)).Elem()
}

func (o TriggerPropertiesOutput) ToTriggerPropertiesOutput() TriggerPropertiesOutput {
	return o
}

func (o TriggerPropertiesOutput) ToTriggerPropertiesOutputWithContext(ctx context.Context) TriggerPropertiesOutput {
	return o
}

func (o TriggerPropertiesOutput) ToTriggerPropertiesPtrOutput() TriggerPropertiesPtrOutput {
	return o.ToTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (o TriggerPropertiesOutput) ToTriggerPropertiesPtrOutputWithContext(ctx context.Context) TriggerPropertiesPtrOutput {
	return o.ApplyT(func(v TriggerProperties) *TriggerProperties {
		return &v
	}).(TriggerPropertiesPtrOutput)
}

// The trigger based on base image dependencies.
func (o TriggerPropertiesOutput) BaseImageTrigger() BaseImageTriggerPtrOutput {
	return o.ApplyT(func(v TriggerProperties) *BaseImageTrigger { return v.BaseImageTrigger }).(BaseImageTriggerPtrOutput)
}

// The collection of triggers based on source code repository.
func (o TriggerPropertiesOutput) SourceTriggers() SourceTriggerArrayOutput {
	return o.ApplyT(func(v TriggerProperties) []SourceTrigger { return v.SourceTriggers }).(SourceTriggerArrayOutput)
}

// The collection of timer triggers.
func (o TriggerPropertiesOutput) TimerTriggers() TimerTriggerArrayOutput {
	return o.ApplyT(func(v TriggerProperties) []TimerTrigger { return v.TimerTriggers }).(TimerTriggerArrayOutput)
}

type TriggerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TriggerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerProperties)(nil)).Elem()
}

func (o TriggerPropertiesPtrOutput) ToTriggerPropertiesPtrOutput() TriggerPropertiesPtrOutput {
	return o
}

func (o TriggerPropertiesPtrOutput) ToTriggerPropertiesPtrOutputWithContext(ctx context.Context) TriggerPropertiesPtrOutput {
	return o
}

func (o TriggerPropertiesPtrOutput) Elem() TriggerPropertiesOutput {
	return o.ApplyT(func(v *TriggerProperties) TriggerProperties { return *v }).(TriggerPropertiesOutput)
}

// The trigger based on base image dependencies.
func (o TriggerPropertiesPtrOutput) BaseImageTrigger() BaseImageTriggerPtrOutput {
	return o.ApplyT(func(v *TriggerProperties) *BaseImageTrigger {
		if v == nil {
			return nil
		}
		return v.BaseImageTrigger
	}).(BaseImageTriggerPtrOutput)
}

// The collection of triggers based on source code repository.
func (o TriggerPropertiesPtrOutput) SourceTriggers() SourceTriggerArrayOutput {
	return o.ApplyT(func(v *TriggerProperties) []SourceTrigger {
		if v == nil {
			return nil
		}
		return v.SourceTriggers
	}).(SourceTriggerArrayOutput)
}

// The collection of timer triggers.
func (o TriggerPropertiesPtrOutput) TimerTriggers() TimerTriggerArrayOutput {
	return o.ApplyT(func(v *TriggerProperties) []TimerTrigger {
		if v == nil {
			return nil
		}
		return v.TimerTriggers
	}).(TimerTriggerArrayOutput)
}

// The properties of a trigger.
type TriggerPropertiesInvokeResponse struct {
	// The trigger based on base image dependencies.
	BaseImageTrigger *BaseImageTriggerInvokeResponse `pulumi:"baseImageTrigger"`
	// The collection of triggers based on source code repository.
	SourceTriggers []SourceTriggerInvokeResponse `pulumi:"sourceTriggers"`
	// The collection of timer triggers.
	TimerTriggers []TimerTriggerInvokeResponse `pulumi:"timerTriggers"`
}

// TriggerPropertiesInvokeResponseInput is an input type that accepts TriggerPropertiesInvokeResponseArgs and TriggerPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `TriggerPropertiesInvokeResponseInput` via:
//
//          TriggerPropertiesInvokeResponseArgs{...}
type TriggerPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToTriggerPropertiesInvokeResponseOutput() TriggerPropertiesInvokeResponseOutput
	ToTriggerPropertiesInvokeResponseOutputWithContext(context.Context) TriggerPropertiesInvokeResponseOutput
}

// The properties of a trigger.
type TriggerPropertiesInvokeResponseArgs struct {
	// The trigger based on base image dependencies.
	BaseImageTrigger BaseImageTriggerInvokeResponsePtrInput `pulumi:"baseImageTrigger"`
	// The collection of triggers based on source code repository.
	SourceTriggers SourceTriggerInvokeResponseArrayInput `pulumi:"sourceTriggers"`
	// The collection of timer triggers.
	TimerTriggers TimerTriggerInvokeResponseArrayInput `pulumi:"timerTriggers"`
}

func (TriggerPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPropertiesInvokeResponse)(nil)).Elem()
}

func (i TriggerPropertiesInvokeResponseArgs) ToTriggerPropertiesInvokeResponseOutput() TriggerPropertiesInvokeResponseOutput {
	return i.ToTriggerPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i TriggerPropertiesInvokeResponseArgs) ToTriggerPropertiesInvokeResponseOutputWithContext(ctx context.Context) TriggerPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesInvokeResponseOutput)
}

// The properties of a trigger.
type TriggerPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (TriggerPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPropertiesInvokeResponse)(nil)).Elem()
}

func (o TriggerPropertiesInvokeResponseOutput) ToTriggerPropertiesInvokeResponseOutput() TriggerPropertiesInvokeResponseOutput {
	return o
}

func (o TriggerPropertiesInvokeResponseOutput) ToTriggerPropertiesInvokeResponseOutputWithContext(ctx context.Context) TriggerPropertiesInvokeResponseOutput {
	return o
}

// The trigger based on base image dependencies.
func (o TriggerPropertiesInvokeResponseOutput) BaseImageTrigger() BaseImageTriggerInvokeResponsePtrOutput {
	return o.ApplyT(func(v TriggerPropertiesInvokeResponse) *BaseImageTriggerInvokeResponse { return v.BaseImageTrigger }).(BaseImageTriggerInvokeResponsePtrOutput)
}

// The collection of triggers based on source code repository.
func (o TriggerPropertiesInvokeResponseOutput) SourceTriggers() SourceTriggerInvokeResponseArrayOutput {
	return o.ApplyT(func(v TriggerPropertiesInvokeResponse) []SourceTriggerInvokeResponse { return v.SourceTriggers }).(SourceTriggerInvokeResponseArrayOutput)
}

// The collection of timer triggers.
func (o TriggerPropertiesInvokeResponseOutput) TimerTriggers() TimerTriggerInvokeResponseArrayOutput {
	return o.ApplyT(func(v TriggerPropertiesInvokeResponse) []TimerTriggerInvokeResponse { return v.TimerTriggers }).(TimerTriggerInvokeResponseArrayOutput)
}

// The properties of a trigger.
type TriggerPropertiesResponse struct {
	// The trigger based on base image dependencies.
	BaseImageTrigger *BaseImageTriggerResponse `pulumi:"baseImageTrigger"`
	// The collection of triggers based on source code repository.
	SourceTriggers []SourceTriggerResponse `pulumi:"sourceTriggers"`
	// The collection of timer triggers.
	TimerTriggers []TimerTriggerResponse `pulumi:"timerTriggers"`
}

// TriggerPropertiesResponseInput is an input type that accepts TriggerPropertiesResponseArgs and TriggerPropertiesResponseOutput values.
// You can construct a concrete instance of `TriggerPropertiesResponseInput` via:
//
//          TriggerPropertiesResponseArgs{...}
type TriggerPropertiesResponseInput interface {
	pulumi.Input

	ToTriggerPropertiesResponseOutput() TriggerPropertiesResponseOutput
	ToTriggerPropertiesResponseOutputWithContext(context.Context) TriggerPropertiesResponseOutput
}

// The properties of a trigger.
type TriggerPropertiesResponseArgs struct {
	// The trigger based on base image dependencies.
	BaseImageTrigger BaseImageTriggerResponsePtrInput `pulumi:"baseImageTrigger"`
	// The collection of triggers based on source code repository.
	SourceTriggers SourceTriggerResponseArrayInput `pulumi:"sourceTriggers"`
	// The collection of timer triggers.
	TimerTriggers TimerTriggerResponseArrayInput `pulumi:"timerTriggers"`
}

func (TriggerPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPropertiesResponse)(nil)).Elem()
}

func (i TriggerPropertiesResponseArgs) ToTriggerPropertiesResponseOutput() TriggerPropertiesResponseOutput {
	return i.ToTriggerPropertiesResponseOutputWithContext(context.Background())
}

func (i TriggerPropertiesResponseArgs) ToTriggerPropertiesResponseOutputWithContext(ctx context.Context) TriggerPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesResponseOutput)
}

func (i TriggerPropertiesResponseArgs) ToTriggerPropertiesResponsePtrOutput() TriggerPropertiesResponsePtrOutput {
	return i.ToTriggerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i TriggerPropertiesResponseArgs) ToTriggerPropertiesResponsePtrOutputWithContext(ctx context.Context) TriggerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesResponseOutput).ToTriggerPropertiesResponsePtrOutputWithContext(ctx)
}

// TriggerPropertiesResponsePtrInput is an input type that accepts TriggerPropertiesResponseArgs, TriggerPropertiesResponsePtr and TriggerPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `TriggerPropertiesResponsePtrInput` via:
//
//          TriggerPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type TriggerPropertiesResponsePtrInput interface {
	pulumi.Input

	ToTriggerPropertiesResponsePtrOutput() TriggerPropertiesResponsePtrOutput
	ToTriggerPropertiesResponsePtrOutputWithContext(context.Context) TriggerPropertiesResponsePtrOutput
}

type triggerPropertiesResponsePtrType TriggerPropertiesResponseArgs

func TriggerPropertiesResponsePtr(v *TriggerPropertiesResponseArgs) TriggerPropertiesResponsePtrInput {
	return (*triggerPropertiesResponsePtrType)(v)
}

func (*triggerPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerPropertiesResponse)(nil)).Elem()
}

func (i *triggerPropertiesResponsePtrType) ToTriggerPropertiesResponsePtrOutput() TriggerPropertiesResponsePtrOutput {
	return i.ToTriggerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *triggerPropertiesResponsePtrType) ToTriggerPropertiesResponsePtrOutputWithContext(ctx context.Context) TriggerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesResponsePtrOutput)
}

// The properties of a trigger.
type TriggerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TriggerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPropertiesResponse)(nil)).Elem()
}

func (o TriggerPropertiesResponseOutput) ToTriggerPropertiesResponseOutput() TriggerPropertiesResponseOutput {
	return o
}

func (o TriggerPropertiesResponseOutput) ToTriggerPropertiesResponseOutputWithContext(ctx context.Context) TriggerPropertiesResponseOutput {
	return o
}

func (o TriggerPropertiesResponseOutput) ToTriggerPropertiesResponsePtrOutput() TriggerPropertiesResponsePtrOutput {
	return o.ToTriggerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o TriggerPropertiesResponseOutput) ToTriggerPropertiesResponsePtrOutputWithContext(ctx context.Context) TriggerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TriggerPropertiesResponse) *TriggerPropertiesResponse {
		return &v
	}).(TriggerPropertiesResponsePtrOutput)
}

// The trigger based on base image dependencies.
func (o TriggerPropertiesResponseOutput) BaseImageTrigger() BaseImageTriggerResponsePtrOutput {
	return o.ApplyT(func(v TriggerPropertiesResponse) *BaseImageTriggerResponse { return v.BaseImageTrigger }).(BaseImageTriggerResponsePtrOutput)
}

// The collection of triggers based on source code repository.
func (o TriggerPropertiesResponseOutput) SourceTriggers() SourceTriggerResponseArrayOutput {
	return o.ApplyT(func(v TriggerPropertiesResponse) []SourceTriggerResponse { return v.SourceTriggers }).(SourceTriggerResponseArrayOutput)
}

// The collection of timer triggers.
func (o TriggerPropertiesResponseOutput) TimerTriggers() TimerTriggerResponseArrayOutput {
	return o.ApplyT(func(v TriggerPropertiesResponse) []TimerTriggerResponse { return v.TimerTriggers }).(TimerTriggerResponseArrayOutput)
}

type TriggerPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TriggerPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerPropertiesResponse)(nil)).Elem()
}

func (o TriggerPropertiesResponsePtrOutput) ToTriggerPropertiesResponsePtrOutput() TriggerPropertiesResponsePtrOutput {
	return o
}

func (o TriggerPropertiesResponsePtrOutput) ToTriggerPropertiesResponsePtrOutputWithContext(ctx context.Context) TriggerPropertiesResponsePtrOutput {
	return o
}

func (o TriggerPropertiesResponsePtrOutput) Elem() TriggerPropertiesResponseOutput {
	return o.ApplyT(func(v *TriggerPropertiesResponse) TriggerPropertiesResponse { return *v }).(TriggerPropertiesResponseOutput)
}

// The trigger based on base image dependencies.
func (o TriggerPropertiesResponsePtrOutput) BaseImageTrigger() BaseImageTriggerResponsePtrOutput {
	return o.ApplyT(func(v *TriggerPropertiesResponse) *BaseImageTriggerResponse {
		if v == nil {
			return nil
		}
		return v.BaseImageTrigger
	}).(BaseImageTriggerResponsePtrOutput)
}

// The collection of triggers based on source code repository.
func (o TriggerPropertiesResponsePtrOutput) SourceTriggers() SourceTriggerResponseArrayOutput {
	return o.ApplyT(func(v *TriggerPropertiesResponse) []SourceTriggerResponse {
		if v == nil {
			return nil
		}
		return v.SourceTriggers
	}).(SourceTriggerResponseArrayOutput)
}

// The collection of timer triggers.
func (o TriggerPropertiesResponsePtrOutput) TimerTriggers() TimerTriggerResponseArrayOutput {
	return o.ApplyT(func(v *TriggerPropertiesResponse) []TimerTriggerResponse {
		if v == nil {
			return nil
		}
		return v.TimerTriggers
	}).(TimerTriggerResponseArrayOutput)
}

// The content trust policy for a container registry.
type TrustPolicy struct {
	// The value that indicates whether the policy is enabled or not.
	Status *string `pulumi:"status"`
	// The type of trust policy.
	Type *string `pulumi:"type"`
}

// TrustPolicyInput is an input type that accepts TrustPolicyArgs and TrustPolicyOutput values.
// You can construct a concrete instance of `TrustPolicyInput` via:
//
//          TrustPolicyArgs{...}
type TrustPolicyInput interface {
	pulumi.Input

	ToTrustPolicyOutput() TrustPolicyOutput
	ToTrustPolicyOutputWithContext(context.Context) TrustPolicyOutput
}

// The content trust policy for a container registry.
type TrustPolicyArgs struct {
	// The value that indicates whether the policy is enabled or not.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The type of trust policy.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (TrustPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustPolicy)(nil)).Elem()
}

func (i TrustPolicyArgs) ToTrustPolicyOutput() TrustPolicyOutput {
	return i.ToTrustPolicyOutputWithContext(context.Background())
}

func (i TrustPolicyArgs) ToTrustPolicyOutputWithContext(ctx context.Context) TrustPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustPolicyOutput)
}

func (i TrustPolicyArgs) ToTrustPolicyPtrOutput() TrustPolicyPtrOutput {
	return i.ToTrustPolicyPtrOutputWithContext(context.Background())
}

func (i TrustPolicyArgs) ToTrustPolicyPtrOutputWithContext(ctx context.Context) TrustPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustPolicyOutput).ToTrustPolicyPtrOutputWithContext(ctx)
}

// TrustPolicyPtrInput is an input type that accepts TrustPolicyArgs, TrustPolicyPtr and TrustPolicyPtrOutput values.
// You can construct a concrete instance of `TrustPolicyPtrInput` via:
//
//          TrustPolicyArgs{...}
//
//  or:
//
//          nil
type TrustPolicyPtrInput interface {
	pulumi.Input

	ToTrustPolicyPtrOutput() TrustPolicyPtrOutput
	ToTrustPolicyPtrOutputWithContext(context.Context) TrustPolicyPtrOutput
}

type trustPolicyPtrType TrustPolicyArgs

func TrustPolicyPtr(v *TrustPolicyArgs) TrustPolicyPtrInput {
	return (*trustPolicyPtrType)(v)
}

func (*trustPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrustPolicy)(nil)).Elem()
}

func (i *trustPolicyPtrType) ToTrustPolicyPtrOutput() TrustPolicyPtrOutput {
	return i.ToTrustPolicyPtrOutputWithContext(context.Background())
}

func (i *trustPolicyPtrType) ToTrustPolicyPtrOutputWithContext(ctx context.Context) TrustPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustPolicyPtrOutput)
}

// The content trust policy for a container registry.
type TrustPolicyOutput struct{ *pulumi.OutputState }

func (TrustPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustPolicy)(nil)).Elem()
}

func (o TrustPolicyOutput) ToTrustPolicyOutput() TrustPolicyOutput {
	return o
}

func (o TrustPolicyOutput) ToTrustPolicyOutputWithContext(ctx context.Context) TrustPolicyOutput {
	return o
}

func (o TrustPolicyOutput) ToTrustPolicyPtrOutput() TrustPolicyPtrOutput {
	return o.ToTrustPolicyPtrOutputWithContext(context.Background())
}

func (o TrustPolicyOutput) ToTrustPolicyPtrOutputWithContext(ctx context.Context) TrustPolicyPtrOutput {
	return o.ApplyT(func(v TrustPolicy) *TrustPolicy {
		return &v
	}).(TrustPolicyPtrOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o TrustPolicyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustPolicy) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The type of trust policy.
func (o TrustPolicyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustPolicy) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TrustPolicyPtrOutput struct{ *pulumi.OutputState }

func (TrustPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrustPolicy)(nil)).Elem()
}

func (o TrustPolicyPtrOutput) ToTrustPolicyPtrOutput() TrustPolicyPtrOutput {
	return o
}

func (o TrustPolicyPtrOutput) ToTrustPolicyPtrOutputWithContext(ctx context.Context) TrustPolicyPtrOutput {
	return o
}

func (o TrustPolicyPtrOutput) Elem() TrustPolicyOutput {
	return o.ApplyT(func(v *TrustPolicy) TrustPolicy { return *v }).(TrustPolicyOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o TrustPolicyPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrustPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The type of trust policy.
func (o TrustPolicyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrustPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The content trust policy for a container registry.
type TrustPolicyInvokeResponse struct {
	// The value that indicates whether the policy is enabled or not.
	Status *string `pulumi:"status"`
	// The type of trust policy.
	Type *string `pulumi:"type"`
}

// TrustPolicyInvokeResponseInput is an input type that accepts TrustPolicyInvokeResponseArgs and TrustPolicyInvokeResponseOutput values.
// You can construct a concrete instance of `TrustPolicyInvokeResponseInput` via:
//
//          TrustPolicyInvokeResponseArgs{...}
type TrustPolicyInvokeResponseInput interface {
	pulumi.Input

	ToTrustPolicyInvokeResponseOutput() TrustPolicyInvokeResponseOutput
	ToTrustPolicyInvokeResponseOutputWithContext(context.Context) TrustPolicyInvokeResponseOutput
}

// The content trust policy for a container registry.
type TrustPolicyInvokeResponseArgs struct {
	// The value that indicates whether the policy is enabled or not.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The type of trust policy.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (TrustPolicyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustPolicyInvokeResponse)(nil)).Elem()
}

func (i TrustPolicyInvokeResponseArgs) ToTrustPolicyInvokeResponseOutput() TrustPolicyInvokeResponseOutput {
	return i.ToTrustPolicyInvokeResponseOutputWithContext(context.Background())
}

func (i TrustPolicyInvokeResponseArgs) ToTrustPolicyInvokeResponseOutputWithContext(ctx context.Context) TrustPolicyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustPolicyInvokeResponseOutput)
}

func (i TrustPolicyInvokeResponseArgs) ToTrustPolicyInvokeResponsePtrOutput() TrustPolicyInvokeResponsePtrOutput {
	return i.ToTrustPolicyInvokeResponsePtrOutputWithContext(context.Background())
}

func (i TrustPolicyInvokeResponseArgs) ToTrustPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) TrustPolicyInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustPolicyInvokeResponseOutput).ToTrustPolicyInvokeResponsePtrOutputWithContext(ctx)
}

// TrustPolicyInvokeResponsePtrInput is an input type that accepts TrustPolicyInvokeResponseArgs, TrustPolicyInvokeResponsePtr and TrustPolicyInvokeResponsePtrOutput values.
// You can construct a concrete instance of `TrustPolicyInvokeResponsePtrInput` via:
//
//          TrustPolicyInvokeResponseArgs{...}
//
//  or:
//
//          nil
type TrustPolicyInvokeResponsePtrInput interface {
	pulumi.Input

	ToTrustPolicyInvokeResponsePtrOutput() TrustPolicyInvokeResponsePtrOutput
	ToTrustPolicyInvokeResponsePtrOutputWithContext(context.Context) TrustPolicyInvokeResponsePtrOutput
}

type trustPolicyInvokeResponsePtrType TrustPolicyInvokeResponseArgs

func TrustPolicyInvokeResponsePtr(v *TrustPolicyInvokeResponseArgs) TrustPolicyInvokeResponsePtrInput {
	return (*trustPolicyInvokeResponsePtrType)(v)
}

func (*trustPolicyInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrustPolicyInvokeResponse)(nil)).Elem()
}

func (i *trustPolicyInvokeResponsePtrType) ToTrustPolicyInvokeResponsePtrOutput() TrustPolicyInvokeResponsePtrOutput {
	return i.ToTrustPolicyInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *trustPolicyInvokeResponsePtrType) ToTrustPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) TrustPolicyInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustPolicyInvokeResponsePtrOutput)
}

// The content trust policy for a container registry.
type TrustPolicyInvokeResponseOutput struct{ *pulumi.OutputState }

func (TrustPolicyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustPolicyInvokeResponse)(nil)).Elem()
}

func (o TrustPolicyInvokeResponseOutput) ToTrustPolicyInvokeResponseOutput() TrustPolicyInvokeResponseOutput {
	return o
}

func (o TrustPolicyInvokeResponseOutput) ToTrustPolicyInvokeResponseOutputWithContext(ctx context.Context) TrustPolicyInvokeResponseOutput {
	return o
}

func (o TrustPolicyInvokeResponseOutput) ToTrustPolicyInvokeResponsePtrOutput() TrustPolicyInvokeResponsePtrOutput {
	return o.ToTrustPolicyInvokeResponsePtrOutputWithContext(context.Background())
}

func (o TrustPolicyInvokeResponseOutput) ToTrustPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) TrustPolicyInvokeResponsePtrOutput {
	return o.ApplyT(func(v TrustPolicyInvokeResponse) *TrustPolicyInvokeResponse {
		return &v
	}).(TrustPolicyInvokeResponsePtrOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o TrustPolicyInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustPolicyInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The type of trust policy.
func (o TrustPolicyInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustPolicyInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TrustPolicyInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (TrustPolicyInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrustPolicyInvokeResponse)(nil)).Elem()
}

func (o TrustPolicyInvokeResponsePtrOutput) ToTrustPolicyInvokeResponsePtrOutput() TrustPolicyInvokeResponsePtrOutput {
	return o
}

func (o TrustPolicyInvokeResponsePtrOutput) ToTrustPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) TrustPolicyInvokeResponsePtrOutput {
	return o
}

func (o TrustPolicyInvokeResponsePtrOutput) Elem() TrustPolicyInvokeResponseOutput {
	return o.ApplyT(func(v *TrustPolicyInvokeResponse) TrustPolicyInvokeResponse { return *v }).(TrustPolicyInvokeResponseOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o TrustPolicyInvokeResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrustPolicyInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The type of trust policy.
func (o TrustPolicyInvokeResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrustPolicyInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The content trust policy for a container registry.
type TrustPolicyResponse struct {
	// The value that indicates whether the policy is enabled or not.
	Status *string `pulumi:"status"`
	// The type of trust policy.
	Type *string `pulumi:"type"`
}

// TrustPolicyResponseInput is an input type that accepts TrustPolicyResponseArgs and TrustPolicyResponseOutput values.
// You can construct a concrete instance of `TrustPolicyResponseInput` via:
//
//          TrustPolicyResponseArgs{...}
type TrustPolicyResponseInput interface {
	pulumi.Input

	ToTrustPolicyResponseOutput() TrustPolicyResponseOutput
	ToTrustPolicyResponseOutputWithContext(context.Context) TrustPolicyResponseOutput
}

// The content trust policy for a container registry.
type TrustPolicyResponseArgs struct {
	// The value that indicates whether the policy is enabled or not.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The type of trust policy.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (TrustPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustPolicyResponse)(nil)).Elem()
}

func (i TrustPolicyResponseArgs) ToTrustPolicyResponseOutput() TrustPolicyResponseOutput {
	return i.ToTrustPolicyResponseOutputWithContext(context.Background())
}

func (i TrustPolicyResponseArgs) ToTrustPolicyResponseOutputWithContext(ctx context.Context) TrustPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustPolicyResponseOutput)
}

func (i TrustPolicyResponseArgs) ToTrustPolicyResponsePtrOutput() TrustPolicyResponsePtrOutput {
	return i.ToTrustPolicyResponsePtrOutputWithContext(context.Background())
}

func (i TrustPolicyResponseArgs) ToTrustPolicyResponsePtrOutputWithContext(ctx context.Context) TrustPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustPolicyResponseOutput).ToTrustPolicyResponsePtrOutputWithContext(ctx)
}

// TrustPolicyResponsePtrInput is an input type that accepts TrustPolicyResponseArgs, TrustPolicyResponsePtr and TrustPolicyResponsePtrOutput values.
// You can construct a concrete instance of `TrustPolicyResponsePtrInput` via:
//
//          TrustPolicyResponseArgs{...}
//
//  or:
//
//          nil
type TrustPolicyResponsePtrInput interface {
	pulumi.Input

	ToTrustPolicyResponsePtrOutput() TrustPolicyResponsePtrOutput
	ToTrustPolicyResponsePtrOutputWithContext(context.Context) TrustPolicyResponsePtrOutput
}

type trustPolicyResponsePtrType TrustPolicyResponseArgs

func TrustPolicyResponsePtr(v *TrustPolicyResponseArgs) TrustPolicyResponsePtrInput {
	return (*trustPolicyResponsePtrType)(v)
}

func (*trustPolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrustPolicyResponse)(nil)).Elem()
}

func (i *trustPolicyResponsePtrType) ToTrustPolicyResponsePtrOutput() TrustPolicyResponsePtrOutput {
	return i.ToTrustPolicyResponsePtrOutputWithContext(context.Background())
}

func (i *trustPolicyResponsePtrType) ToTrustPolicyResponsePtrOutputWithContext(ctx context.Context) TrustPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustPolicyResponsePtrOutput)
}

// The content trust policy for a container registry.
type TrustPolicyResponseOutput struct{ *pulumi.OutputState }

func (TrustPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustPolicyResponse)(nil)).Elem()
}

func (o TrustPolicyResponseOutput) ToTrustPolicyResponseOutput() TrustPolicyResponseOutput {
	return o
}

func (o TrustPolicyResponseOutput) ToTrustPolicyResponseOutputWithContext(ctx context.Context) TrustPolicyResponseOutput {
	return o
}

func (o TrustPolicyResponseOutput) ToTrustPolicyResponsePtrOutput() TrustPolicyResponsePtrOutput {
	return o.ToTrustPolicyResponsePtrOutputWithContext(context.Background())
}

func (o TrustPolicyResponseOutput) ToTrustPolicyResponsePtrOutputWithContext(ctx context.Context) TrustPolicyResponsePtrOutput {
	return o.ApplyT(func(v TrustPolicyResponse) *TrustPolicyResponse {
		return &v
	}).(TrustPolicyResponsePtrOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o TrustPolicyResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustPolicyResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The type of trust policy.
func (o TrustPolicyResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustPolicyResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TrustPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (TrustPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrustPolicyResponse)(nil)).Elem()
}

func (o TrustPolicyResponsePtrOutput) ToTrustPolicyResponsePtrOutput() TrustPolicyResponsePtrOutput {
	return o
}

func (o TrustPolicyResponsePtrOutput) ToTrustPolicyResponsePtrOutputWithContext(ctx context.Context) TrustPolicyResponsePtrOutput {
	return o
}

func (o TrustPolicyResponsePtrOutput) Elem() TrustPolicyResponseOutput {
	return o.ApplyT(func(v *TrustPolicyResponse) TrustPolicyResponse { return *v }).(TrustPolicyResponseOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o TrustPolicyResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrustPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The type of trust policy.
func (o TrustPolicyResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrustPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type UserIdentityProperties struct {
	// The client id of user assigned identity.
	ClientId *string `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId *string `pulumi:"principalId"`
}

// UserIdentityPropertiesInput is an input type that accepts UserIdentityPropertiesArgs and UserIdentityPropertiesOutput values.
// You can construct a concrete instance of `UserIdentityPropertiesInput` via:
//
//          UserIdentityPropertiesArgs{...}
type UserIdentityPropertiesInput interface {
	pulumi.Input

	ToUserIdentityPropertiesOutput() UserIdentityPropertiesOutput
	ToUserIdentityPropertiesOutputWithContext(context.Context) UserIdentityPropertiesOutput
}

type UserIdentityPropertiesArgs struct {
	// The client id of user assigned identity.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
}

func (UserIdentityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityProperties)(nil)).Elem()
}

func (i UserIdentityPropertiesArgs) ToUserIdentityPropertiesOutput() UserIdentityPropertiesOutput {
	return i.ToUserIdentityPropertiesOutputWithContext(context.Background())
}

func (i UserIdentityPropertiesArgs) ToUserIdentityPropertiesOutputWithContext(ctx context.Context) UserIdentityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityPropertiesOutput)
}

// UserIdentityPropertiesMapInput is an input type that accepts UserIdentityPropertiesMap and UserIdentityPropertiesMapOutput values.
// You can construct a concrete instance of `UserIdentityPropertiesMapInput` via:
//
//          UserIdentityPropertiesMap{ "key": UserIdentityPropertiesArgs{...} }
type UserIdentityPropertiesMapInput interface {
	pulumi.Input

	ToUserIdentityPropertiesMapOutput() UserIdentityPropertiesMapOutput
	ToUserIdentityPropertiesMapOutputWithContext(context.Context) UserIdentityPropertiesMapOutput
}

type UserIdentityPropertiesMap map[string]UserIdentityPropertiesInput

func (UserIdentityPropertiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityProperties)(nil)).Elem()
}

func (i UserIdentityPropertiesMap) ToUserIdentityPropertiesMapOutput() UserIdentityPropertiesMapOutput {
	return i.ToUserIdentityPropertiesMapOutputWithContext(context.Background())
}

func (i UserIdentityPropertiesMap) ToUserIdentityPropertiesMapOutputWithContext(ctx context.Context) UserIdentityPropertiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityPropertiesMapOutput)
}

type UserIdentityPropertiesOutput struct{ *pulumi.OutputState }

func (UserIdentityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityProperties)(nil)).Elem()
}

func (o UserIdentityPropertiesOutput) ToUserIdentityPropertiesOutput() UserIdentityPropertiesOutput {
	return o
}

func (o UserIdentityPropertiesOutput) ToUserIdentityPropertiesOutputWithContext(ctx context.Context) UserIdentityPropertiesOutput {
	return o
}

// The client id of user assigned identity.
func (o UserIdentityPropertiesOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityProperties) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The principal id of user assigned identity.
func (o UserIdentityPropertiesOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityProperties) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

type UserIdentityPropertiesMapOutput struct{ *pulumi.OutputState }

func (UserIdentityPropertiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityProperties)(nil)).Elem()
}

func (o UserIdentityPropertiesMapOutput) ToUserIdentityPropertiesMapOutput() UserIdentityPropertiesMapOutput {
	return o
}

func (o UserIdentityPropertiesMapOutput) ToUserIdentityPropertiesMapOutputWithContext(ctx context.Context) UserIdentityPropertiesMapOutput {
	return o
}

func (o UserIdentityPropertiesMapOutput) MapIndex(k pulumi.StringInput) UserIdentityPropertiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserIdentityProperties {
		return vs[0].(map[string]UserIdentityProperties)[vs[1].(string)]
	}).(UserIdentityPropertiesOutput)
}

type UserIdentityPropertiesInvokeResponse struct {
	// The client id of user assigned identity.
	ClientId *string `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId *string `pulumi:"principalId"`
}

// UserIdentityPropertiesInvokeResponseInput is an input type that accepts UserIdentityPropertiesInvokeResponseArgs and UserIdentityPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `UserIdentityPropertiesInvokeResponseInput` via:
//
//          UserIdentityPropertiesInvokeResponseArgs{...}
type UserIdentityPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToUserIdentityPropertiesInvokeResponseOutput() UserIdentityPropertiesInvokeResponseOutput
	ToUserIdentityPropertiesInvokeResponseOutputWithContext(context.Context) UserIdentityPropertiesInvokeResponseOutput
}

type UserIdentityPropertiesInvokeResponseArgs struct {
	// The client id of user assigned identity.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
}

func (UserIdentityPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityPropertiesInvokeResponse)(nil)).Elem()
}

func (i UserIdentityPropertiesInvokeResponseArgs) ToUserIdentityPropertiesInvokeResponseOutput() UserIdentityPropertiesInvokeResponseOutput {
	return i.ToUserIdentityPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i UserIdentityPropertiesInvokeResponseArgs) ToUserIdentityPropertiesInvokeResponseOutputWithContext(ctx context.Context) UserIdentityPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityPropertiesInvokeResponseOutput)
}

// UserIdentityPropertiesInvokeResponseMapInput is an input type that accepts UserIdentityPropertiesInvokeResponseMap and UserIdentityPropertiesInvokeResponseMapOutput values.
// You can construct a concrete instance of `UserIdentityPropertiesInvokeResponseMapInput` via:
//
//          UserIdentityPropertiesInvokeResponseMap{ "key": UserIdentityPropertiesInvokeResponseArgs{...} }
type UserIdentityPropertiesInvokeResponseMapInput interface {
	pulumi.Input

	ToUserIdentityPropertiesInvokeResponseMapOutput() UserIdentityPropertiesInvokeResponseMapOutput
	ToUserIdentityPropertiesInvokeResponseMapOutputWithContext(context.Context) UserIdentityPropertiesInvokeResponseMapOutput
}

type UserIdentityPropertiesInvokeResponseMap map[string]UserIdentityPropertiesInvokeResponseInput

func (UserIdentityPropertiesInvokeResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityPropertiesInvokeResponse)(nil)).Elem()
}

func (i UserIdentityPropertiesInvokeResponseMap) ToUserIdentityPropertiesInvokeResponseMapOutput() UserIdentityPropertiesInvokeResponseMapOutput {
	return i.ToUserIdentityPropertiesInvokeResponseMapOutputWithContext(context.Background())
}

func (i UserIdentityPropertiesInvokeResponseMap) ToUserIdentityPropertiesInvokeResponseMapOutputWithContext(ctx context.Context) UserIdentityPropertiesInvokeResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityPropertiesInvokeResponseMapOutput)
}

type UserIdentityPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (UserIdentityPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityPropertiesInvokeResponse)(nil)).Elem()
}

func (o UserIdentityPropertiesInvokeResponseOutput) ToUserIdentityPropertiesInvokeResponseOutput() UserIdentityPropertiesInvokeResponseOutput {
	return o
}

func (o UserIdentityPropertiesInvokeResponseOutput) ToUserIdentityPropertiesInvokeResponseOutputWithContext(ctx context.Context) UserIdentityPropertiesInvokeResponseOutput {
	return o
}

// The client id of user assigned identity.
func (o UserIdentityPropertiesInvokeResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityPropertiesInvokeResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The principal id of user assigned identity.
func (o UserIdentityPropertiesInvokeResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityPropertiesInvokeResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

type UserIdentityPropertiesInvokeResponseMapOutput struct{ *pulumi.OutputState }

func (UserIdentityPropertiesInvokeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityPropertiesInvokeResponse)(nil)).Elem()
}

func (o UserIdentityPropertiesInvokeResponseMapOutput) ToUserIdentityPropertiesInvokeResponseMapOutput() UserIdentityPropertiesInvokeResponseMapOutput {
	return o
}

func (o UserIdentityPropertiesInvokeResponseMapOutput) ToUserIdentityPropertiesInvokeResponseMapOutputWithContext(ctx context.Context) UserIdentityPropertiesInvokeResponseMapOutput {
	return o
}

func (o UserIdentityPropertiesInvokeResponseMapOutput) MapIndex(k pulumi.StringInput) UserIdentityPropertiesInvokeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserIdentityPropertiesInvokeResponse {
		return vs[0].(map[string]UserIdentityPropertiesInvokeResponse)[vs[1].(string)]
	}).(UserIdentityPropertiesInvokeResponseOutput)
}

type UserIdentityPropertiesResponse struct {
	// The client id of user assigned identity.
	ClientId *string `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId *string `pulumi:"principalId"`
}

// UserIdentityPropertiesResponseInput is an input type that accepts UserIdentityPropertiesResponseArgs and UserIdentityPropertiesResponseOutput values.
// You can construct a concrete instance of `UserIdentityPropertiesResponseInput` via:
//
//          UserIdentityPropertiesResponseArgs{...}
type UserIdentityPropertiesResponseInput interface {
	pulumi.Input

	ToUserIdentityPropertiesResponseOutput() UserIdentityPropertiesResponseOutput
	ToUserIdentityPropertiesResponseOutputWithContext(context.Context) UserIdentityPropertiesResponseOutput
}

type UserIdentityPropertiesResponseArgs struct {
	// The client id of user assigned identity.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
}

func (UserIdentityPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityPropertiesResponse)(nil)).Elem()
}

func (i UserIdentityPropertiesResponseArgs) ToUserIdentityPropertiesResponseOutput() UserIdentityPropertiesResponseOutput {
	return i.ToUserIdentityPropertiesResponseOutputWithContext(context.Background())
}

func (i UserIdentityPropertiesResponseArgs) ToUserIdentityPropertiesResponseOutputWithContext(ctx context.Context) UserIdentityPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityPropertiesResponseOutput)
}

// UserIdentityPropertiesResponseMapInput is an input type that accepts UserIdentityPropertiesResponseMap and UserIdentityPropertiesResponseMapOutput values.
// You can construct a concrete instance of `UserIdentityPropertiesResponseMapInput` via:
//
//          UserIdentityPropertiesResponseMap{ "key": UserIdentityPropertiesResponseArgs{...} }
type UserIdentityPropertiesResponseMapInput interface {
	pulumi.Input

	ToUserIdentityPropertiesResponseMapOutput() UserIdentityPropertiesResponseMapOutput
	ToUserIdentityPropertiesResponseMapOutputWithContext(context.Context) UserIdentityPropertiesResponseMapOutput
}

type UserIdentityPropertiesResponseMap map[string]UserIdentityPropertiesResponseInput

func (UserIdentityPropertiesResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityPropertiesResponse)(nil)).Elem()
}

func (i UserIdentityPropertiesResponseMap) ToUserIdentityPropertiesResponseMapOutput() UserIdentityPropertiesResponseMapOutput {
	return i.ToUserIdentityPropertiesResponseMapOutputWithContext(context.Background())
}

func (i UserIdentityPropertiesResponseMap) ToUserIdentityPropertiesResponseMapOutputWithContext(ctx context.Context) UserIdentityPropertiesResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityPropertiesResponseMapOutput)
}

type UserIdentityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (UserIdentityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityPropertiesResponse)(nil)).Elem()
}

func (o UserIdentityPropertiesResponseOutput) ToUserIdentityPropertiesResponseOutput() UserIdentityPropertiesResponseOutput {
	return o
}

func (o UserIdentityPropertiesResponseOutput) ToUserIdentityPropertiesResponseOutputWithContext(ctx context.Context) UserIdentityPropertiesResponseOutput {
	return o
}

// The client id of user assigned identity.
func (o UserIdentityPropertiesResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityPropertiesResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The principal id of user assigned identity.
func (o UserIdentityPropertiesResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityPropertiesResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

type UserIdentityPropertiesResponseMapOutput struct{ *pulumi.OutputState }

func (UserIdentityPropertiesResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityPropertiesResponse)(nil)).Elem()
}

func (o UserIdentityPropertiesResponseMapOutput) ToUserIdentityPropertiesResponseMapOutput() UserIdentityPropertiesResponseMapOutput {
	return o
}

func (o UserIdentityPropertiesResponseMapOutput) ToUserIdentityPropertiesResponseMapOutputWithContext(ctx context.Context) UserIdentityPropertiesResponseMapOutput {
	return o
}

func (o UserIdentityPropertiesResponseMapOutput) MapIndex(k pulumi.StringInput) UserIdentityPropertiesResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserIdentityPropertiesResponse {
		return vs[0].(map[string]UserIdentityPropertiesResponse)[vs[1].(string)]
	}).(UserIdentityPropertiesResponseOutput)
}

// Virtual network rule.
type VirtualNetworkRule struct {
	// The action of virtual network rule.
	Action *string `pulumi:"action"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	VirtualNetworkResourceId string `pulumi:"virtualNetworkResourceId"`
}

// VirtualNetworkRuleInput is an input type that accepts VirtualNetworkRuleArgs and VirtualNetworkRuleOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleInput` via:
//
//          VirtualNetworkRuleArgs{...}
type VirtualNetworkRuleInput interface {
	pulumi.Input

	ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput
	ToVirtualNetworkRuleOutputWithContext(context.Context) VirtualNetworkRuleOutput
}

// Virtual network rule.
type VirtualNetworkRuleArgs struct {
	// The action of virtual network rule.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	VirtualNetworkResourceId pulumi.StringInput `pulumi:"virtualNetworkResourceId"`
}

func (VirtualNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRule)(nil)).Elem()
}

func (i VirtualNetworkRuleArgs) ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput {
	return i.ToVirtualNetworkRuleOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleArgs) ToVirtualNetworkRuleOutputWithContext(ctx context.Context) VirtualNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleOutput)
}

// VirtualNetworkRuleArrayInput is an input type that accepts VirtualNetworkRuleArray and VirtualNetworkRuleArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleArrayInput` via:
//
//          VirtualNetworkRuleArray{ VirtualNetworkRuleArgs{...} }
type VirtualNetworkRuleArrayInput interface {
	pulumi.Input

	ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput
	ToVirtualNetworkRuleArrayOutputWithContext(context.Context) VirtualNetworkRuleArrayOutput
}

type VirtualNetworkRuleArray []VirtualNetworkRuleInput

func (VirtualNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRule)(nil)).Elem()
}

func (i VirtualNetworkRuleArray) ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput {
	return i.ToVirtualNetworkRuleArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleArray) ToVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleArrayOutput)
}

// Virtual network rule.
type VirtualNetworkRuleOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRule)(nil)).Elem()
}

func (o VirtualNetworkRuleOutput) ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput {
	return o
}

func (o VirtualNetworkRuleOutput) ToVirtualNetworkRuleOutputWithContext(ctx context.Context) VirtualNetworkRuleOutput {
	return o
}

// The action of virtual network rule.
func (o VirtualNetworkRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
func (o VirtualNetworkRuleOutput) VirtualNetworkResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkRule) string { return v.VirtualNetworkResourceId }).(pulumi.StringOutput)
}

type VirtualNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRule)(nil)).Elem()
}

func (o VirtualNetworkRuleArrayOutput) ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput {
	return o
}

func (o VirtualNetworkRuleArrayOutput) ToVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleArrayOutput {
	return o
}

func (o VirtualNetworkRuleArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRule {
		return vs[0].([]VirtualNetworkRule)[vs[1].(int)]
	}).(VirtualNetworkRuleOutput)
}

// Virtual network rule.
type VirtualNetworkRuleInvokeResponse struct {
	// The action of virtual network rule.
	Action *string `pulumi:"action"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	VirtualNetworkResourceId string `pulumi:"virtualNetworkResourceId"`
}

// VirtualNetworkRuleInvokeResponseInput is an input type that accepts VirtualNetworkRuleInvokeResponseArgs and VirtualNetworkRuleInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleInvokeResponseInput` via:
//
//          VirtualNetworkRuleInvokeResponseArgs{...}
type VirtualNetworkRuleInvokeResponseInput interface {
	pulumi.Input

	ToVirtualNetworkRuleInvokeResponseOutput() VirtualNetworkRuleInvokeResponseOutput
	ToVirtualNetworkRuleInvokeResponseOutputWithContext(context.Context) VirtualNetworkRuleInvokeResponseOutput
}

// Virtual network rule.
type VirtualNetworkRuleInvokeResponseArgs struct {
	// The action of virtual network rule.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	VirtualNetworkResourceId pulumi.StringInput `pulumi:"virtualNetworkResourceId"`
}

func (VirtualNetworkRuleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRuleInvokeResponse)(nil)).Elem()
}

func (i VirtualNetworkRuleInvokeResponseArgs) ToVirtualNetworkRuleInvokeResponseOutput() VirtualNetworkRuleInvokeResponseOutput {
	return i.ToVirtualNetworkRuleInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleInvokeResponseArgs) ToVirtualNetworkRuleInvokeResponseOutputWithContext(ctx context.Context) VirtualNetworkRuleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleInvokeResponseOutput)
}

// VirtualNetworkRuleInvokeResponseArrayInput is an input type that accepts VirtualNetworkRuleInvokeResponseArray and VirtualNetworkRuleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleInvokeResponseArrayInput` via:
//
//          VirtualNetworkRuleInvokeResponseArray{ VirtualNetworkRuleInvokeResponseArgs{...} }
type VirtualNetworkRuleInvokeResponseArrayInput interface {
	pulumi.Input

	ToVirtualNetworkRuleInvokeResponseArrayOutput() VirtualNetworkRuleInvokeResponseArrayOutput
	ToVirtualNetworkRuleInvokeResponseArrayOutputWithContext(context.Context) VirtualNetworkRuleInvokeResponseArrayOutput
}

type VirtualNetworkRuleInvokeResponseArray []VirtualNetworkRuleInvokeResponseInput

func (VirtualNetworkRuleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRuleInvokeResponse)(nil)).Elem()
}

func (i VirtualNetworkRuleInvokeResponseArray) ToVirtualNetworkRuleInvokeResponseArrayOutput() VirtualNetworkRuleInvokeResponseArrayOutput {
	return i.ToVirtualNetworkRuleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleInvokeResponseArray) ToVirtualNetworkRuleInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleInvokeResponseArrayOutput)
}

// Virtual network rule.
type VirtualNetworkRuleInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRuleInvokeResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleInvokeResponseOutput) ToVirtualNetworkRuleInvokeResponseOutput() VirtualNetworkRuleInvokeResponseOutput {
	return o
}

func (o VirtualNetworkRuleInvokeResponseOutput) ToVirtualNetworkRuleInvokeResponseOutputWithContext(ctx context.Context) VirtualNetworkRuleInvokeResponseOutput {
	return o
}

// The action of virtual network rule.
func (o VirtualNetworkRuleInvokeResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleInvokeResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
func (o VirtualNetworkRuleInvokeResponseOutput) VirtualNetworkResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkRuleInvokeResponse) string { return v.VirtualNetworkResourceId }).(pulumi.StringOutput)
}

type VirtualNetworkRuleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRuleInvokeResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleInvokeResponseArrayOutput) ToVirtualNetworkRuleInvokeResponseArrayOutput() VirtualNetworkRuleInvokeResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleInvokeResponseArrayOutput) ToVirtualNetworkRuleInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleInvokeResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleInvokeResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRuleInvokeResponse {
		return vs[0].([]VirtualNetworkRuleInvokeResponse)[vs[1].(int)]
	}).(VirtualNetworkRuleInvokeResponseOutput)
}

// Virtual network rule.
type VirtualNetworkRuleResponse struct {
	// The action of virtual network rule.
	Action *string `pulumi:"action"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	VirtualNetworkResourceId string `pulumi:"virtualNetworkResourceId"`
}

// VirtualNetworkRuleResponseInput is an input type that accepts VirtualNetworkRuleResponseArgs and VirtualNetworkRuleResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleResponseInput` via:
//
//          VirtualNetworkRuleResponseArgs{...}
type VirtualNetworkRuleResponseInput interface {
	pulumi.Input

	ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput
	ToVirtualNetworkRuleResponseOutputWithContext(context.Context) VirtualNetworkRuleResponseOutput
}

// Virtual network rule.
type VirtualNetworkRuleResponseArgs struct {
	// The action of virtual network rule.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	VirtualNetworkResourceId pulumi.StringInput `pulumi:"virtualNetworkResourceId"`
}

func (VirtualNetworkRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRuleResponse)(nil)).Elem()
}

func (i VirtualNetworkRuleResponseArgs) ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput {
	return i.ToVirtualNetworkRuleResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleResponseArgs) ToVirtualNetworkRuleResponseOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleResponseOutput)
}

// VirtualNetworkRuleResponseArrayInput is an input type that accepts VirtualNetworkRuleResponseArray and VirtualNetworkRuleResponseArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleResponseArrayInput` via:
//
//          VirtualNetworkRuleResponseArray{ VirtualNetworkRuleResponseArgs{...} }
type VirtualNetworkRuleResponseArrayInput interface {
	pulumi.Input

	ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput
	ToVirtualNetworkRuleResponseArrayOutputWithContext(context.Context) VirtualNetworkRuleResponseArrayOutput
}

type VirtualNetworkRuleResponseArray []VirtualNetworkRuleResponseInput

func (VirtualNetworkRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRuleResponse)(nil)).Elem()
}

func (i VirtualNetworkRuleResponseArray) ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput {
	return i.ToVirtualNetworkRuleResponseArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleResponseArray) ToVirtualNetworkRuleResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleResponseArrayOutput)
}

// Virtual network rule.
type VirtualNetworkRuleResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleResponseOutput) ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput {
	return o
}

func (o VirtualNetworkRuleResponseOutput) ToVirtualNetworkRuleResponseOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseOutput {
	return o
}

// The action of virtual network rule.
func (o VirtualNetworkRuleResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
func (o VirtualNetworkRuleResponseOutput) VirtualNetworkResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) string { return v.VirtualNetworkResourceId }).(pulumi.StringOutput)
}

type VirtualNetworkRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleResponseArrayOutput) ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleResponseArrayOutput) ToVirtualNetworkRuleResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRuleResponse {
		return vs[0].([]VirtualNetworkRuleResponse)[vs[1].(int)]
	}).(VirtualNetworkRuleResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ActorInvokeResponseOutput{})
	pulumi.RegisterOutputType(ActorInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(AgentPropertiesOutput{})
	pulumi.RegisterOutputType(AgentPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AgentPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(AgentPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AgentPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ArgumentInvokeResponseOutput{})
	pulumi.RegisterOutputType(ArgumentInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ArgumentResponseOutput{})
	pulumi.RegisterOutputType(ArgumentResponseArrayOutput{})
	pulumi.RegisterOutputType(AuthInfoOutput{})
	pulumi.RegisterOutputType(AuthInfoPtrOutput{})
	pulumi.RegisterOutputType(AuthInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(AuthInfoInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(AuthInfoResponseOutput{})
	pulumi.RegisterOutputType(AuthInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(BaseImageDependencyInvokeResponseOutput{})
	pulumi.RegisterOutputType(BaseImageDependencyInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(BaseImageDependencyResponseOutput{})
	pulumi.RegisterOutputType(BaseImageDependencyResponseArrayOutput{})
	pulumi.RegisterOutputType(BaseImageTriggerOutput{})
	pulumi.RegisterOutputType(BaseImageTriggerPtrOutput{})
	pulumi.RegisterOutputType(BaseImageTriggerInvokeResponseOutput{})
	pulumi.RegisterOutputType(BaseImageTriggerInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(BaseImageTriggerResponseOutput{})
	pulumi.RegisterOutputType(BaseImageTriggerResponsePtrOutput{})
	pulumi.RegisterOutputType(CredentialsOutput{})
	pulumi.RegisterOutputType(CredentialsPtrOutput{})
	pulumi.RegisterOutputType(CredentialsInvokeResponseOutput{})
	pulumi.RegisterOutputType(CredentialsResponseOutput{})
	pulumi.RegisterOutputType(CredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomRegistryCredentialsOutput{})
	pulumi.RegisterOutputType(CustomRegistryCredentialsMapOutput{})
	pulumi.RegisterOutputType(CustomRegistryCredentialsInvokeResponseOutput{})
	pulumi.RegisterOutputType(CustomRegistryCredentialsInvokeResponseMapOutput{})
	pulumi.RegisterOutputType(CustomRegistryCredentialsResponseOutput{})
	pulumi.RegisterOutputType(CustomRegistryCredentialsResponseMapOutput{})
	pulumi.RegisterOutputType(DockerBuildStepInvokeResponseOutput{})
	pulumi.RegisterOutputType(DockerBuildStepResponseOutput{})
	pulumi.RegisterOutputType(EncodedTaskStepInvokeResponseOutput{})
	pulumi.RegisterOutputType(EncodedTaskStepResponseOutput{})
	pulumi.RegisterOutputType(EventContentInvokeResponseOutput{})
	pulumi.RegisterOutputType(EventContentInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(EventInvokeResponseOutput{})
	pulumi.RegisterOutputType(EventInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(EventRequestMessageInvokeResponseOutput{})
	pulumi.RegisterOutputType(EventRequestMessageInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(EventResponseMessageInvokeResponseOutput{})
	pulumi.RegisterOutputType(EventResponseMessageInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(FileTaskStepInvokeResponseOutput{})
	pulumi.RegisterOutputType(FileTaskStepResponseOutput{})
	pulumi.RegisterOutputType(IPRuleOutput{})
	pulumi.RegisterOutputType(IPRuleArrayOutput{})
	pulumi.RegisterOutputType(IPRuleInvokeResponseOutput{})
	pulumi.RegisterOutputType(IPRuleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(IPRuleResponseOutput{})
	pulumi.RegisterOutputType(IPRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetPtrOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetInvokeResponseOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetResponseOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetResponsePtrOutput{})
	pulumi.RegisterOutputType(PlatformPropertiesOutput{})
	pulumi.RegisterOutputType(PlatformPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PlatformPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(PlatformPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PlatformPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PoliciesOutput{})
	pulumi.RegisterOutputType(PoliciesPtrOutput{})
	pulumi.RegisterOutputType(PoliciesInvokeResponseOutput{})
	pulumi.RegisterOutputType(PoliciesResponseOutput{})
	pulumi.RegisterOutputType(PoliciesResponsePtrOutput{})
	pulumi.RegisterOutputType(QuarantinePolicyOutput{})
	pulumi.RegisterOutputType(QuarantinePolicyPtrOutput{})
	pulumi.RegisterOutputType(QuarantinePolicyInvokeResponseOutput{})
	pulumi.RegisterOutputType(QuarantinePolicyInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(QuarantinePolicyResponseOutput{})
	pulumi.RegisterOutputType(QuarantinePolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(RegistryPasswordInvokeResponseOutput{})
	pulumi.RegisterOutputType(RegistryPasswordInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(RequestInvokeResponseOutput{})
	pulumi.RegisterOutputType(RequestInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(RetentionPolicyOutput{})
	pulumi.RegisterOutputType(RetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(RetentionPolicyInvokeResponseOutput{})
	pulumi.RegisterOutputType(RetentionPolicyInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(RetentionPolicyResponseOutput{})
	pulumi.RegisterOutputType(RetentionPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(SecretObjectOutput{})
	pulumi.RegisterOutputType(SecretObjectPtrOutput{})
	pulumi.RegisterOutputType(SecretObjectInvokeResponseOutput{})
	pulumi.RegisterOutputType(SecretObjectInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SecretObjectResponseOutput{})
	pulumi.RegisterOutputType(SecretObjectResponsePtrOutput{})
	pulumi.RegisterOutputType(SetValueInvokeResponseOutput{})
	pulumi.RegisterOutputType(SetValueInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SetValueResponseOutput{})
	pulumi.RegisterOutputType(SetValueResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuInvokeResponseOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SourceInvokeResponseOutput{})
	pulumi.RegisterOutputType(SourceInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SourcePropertiesOutput{})
	pulumi.RegisterOutputType(SourcePropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(SourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SourceRegistryCredentialsOutput{})
	pulumi.RegisterOutputType(SourceRegistryCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SourceRegistryCredentialsInvokeResponseOutput{})
	pulumi.RegisterOutputType(SourceRegistryCredentialsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SourceRegistryCredentialsResponseOutput{})
	pulumi.RegisterOutputType(SourceRegistryCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(SourceTriggerOutput{})
	pulumi.RegisterOutputType(SourceTriggerArrayOutput{})
	pulumi.RegisterOutputType(SourceTriggerInvokeResponseOutput{})
	pulumi.RegisterOutputType(SourceTriggerInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SourceTriggerResponseOutput{})
	pulumi.RegisterOutputType(SourceTriggerResponseArrayOutput{})
	pulumi.RegisterOutputType(StatusInvokeResponseOutput{})
	pulumi.RegisterOutputType(StatusResponseOutput{})
	pulumi.RegisterOutputType(StatusResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesPtrOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TargetInvokeResponseOutput{})
	pulumi.RegisterOutputType(TargetInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(TaskStepPropertiesOutput{})
	pulumi.RegisterOutputType(TaskStepPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TimerTriggerOutput{})
	pulumi.RegisterOutputType(TimerTriggerArrayOutput{})
	pulumi.RegisterOutputType(TimerTriggerInvokeResponseOutput{})
	pulumi.RegisterOutputType(TimerTriggerInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(TimerTriggerResponseOutput{})
	pulumi.RegisterOutputType(TimerTriggerResponseArrayOutput{})
	pulumi.RegisterOutputType(TriggerPropertiesOutput{})
	pulumi.RegisterOutputType(TriggerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TriggerPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(TriggerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TriggerPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TrustPolicyOutput{})
	pulumi.RegisterOutputType(TrustPolicyPtrOutput{})
	pulumi.RegisterOutputType(TrustPolicyInvokeResponseOutput{})
	pulumi.RegisterOutputType(TrustPolicyInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(TrustPolicyResponseOutput{})
	pulumi.RegisterOutputType(TrustPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(UserIdentityPropertiesOutput{})
	pulumi.RegisterOutputType(UserIdentityPropertiesMapOutput{})
	pulumi.RegisterOutputType(UserIdentityPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(UserIdentityPropertiesInvokeResponseMapOutput{})
	pulumi.RegisterOutputType(UserIdentityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(UserIdentityPropertiesResponseMapOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleResponseArrayOutput{})
}
