// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190601preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The task that has the ARM resource and task properties.
// The task will have all information to schedule a run against it.
type Task struct {
	pulumi.CustomResourceState

	// The machine configuration of the run agent.
	AgentConfiguration AgentPropertiesResponsePtrOutput `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the task.
	AgentPoolName pulumi.StringPtrOutput `pulumi:"agentPoolName"`
	// The creation date of task.
	CreationDate pulumi.StringOutput `pulumi:"creationDate"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials CredentialsResponsePtrOutput `pulumi:"credentials"`
	// Identity for the resource.
	Identity IdentityPropertiesResponsePtrOutput `pulumi:"identity"`
	// The value of this property indicates whether the task resource is system task or not.
	IsSystemTask pulumi.BoolPtrOutput `pulumi:"isSystemTask"`
	// The location of the resource. This cannot be changed after the resource is created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate pulumi.StringPtrOutput `pulumi:"logTemplate"`
	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesResponsePtrOutput `pulumi:"platform"`
	// The provisioning state of the task.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The current status of task.
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// The properties of a task step.
	Step pulumi.AnyOutput `pulumi:"step"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The tags of the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Run timeout in seconds.
	Timeout pulumi.IntPtrOutput `pulumi:"timeout"`
	// The properties that describe all triggers for the task.
	Trigger TriggerPropertiesResponsePtrOutput `pulumi:"trigger"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewTask registers a new resource with the given unique name, arguments, and options.
func NewTask(ctx *pulumi.Context,
	name string, args *TaskArgs, opts ...pulumi.ResourceOption) (*Task, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RegistryName == nil {
		return nil, errors.New("invalid value for required argument 'RegistryName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if isZero(args.IsSystemTask) {
		args.IsSystemTask = pulumi.BoolPtr(false)
	}
	if isZero(args.Timeout) {
		args.Timeout = pulumi.IntPtr(3600)
	}
	if args.Trigger != nil {
		args.Trigger = args.Trigger.ToTriggerPropertiesPtrOutput().ApplyT(func(v *TriggerProperties) *TriggerProperties { return v.Defaults() }).(TriggerPropertiesPtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:containerregistry:Task"),
		},
		{
			Type: pulumi.String("azure-native:containerregistry/v20180201preview:Task"),
		},
		{
			Type: pulumi.String("azure-native:containerregistry/v20180901:Task"),
		},
		{
			Type: pulumi.String("azure-native:containerregistry/v20190401:Task"),
		},
	})
	opts = append(opts, aliases)
	var resource Task
	err := ctx.RegisterResource("azure-native:containerregistry/v20190601preview:Task", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTask gets an existing Task resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTask(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TaskState, opts ...pulumi.ResourceOption) (*Task, error) {
	var resource Task
	err := ctx.ReadResource("azure-native:containerregistry/v20190601preview:Task", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Task resources.
type taskState struct {
}

type TaskState struct {
}

func (TaskState) ElementType() reflect.Type {
	return reflect.TypeOf((*taskState)(nil)).Elem()
}

type taskArgs struct {
	// The machine configuration of the run agent.
	AgentConfiguration *AgentProperties `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the task.
	AgentPoolName *string `pulumi:"agentPoolName"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials *Credentials `pulumi:"credentials"`
	// Identity for the resource.
	Identity *IdentityProperties `pulumi:"identity"`
	// The value of this property indicates whether the task resource is system task or not.
	IsSystemTask *bool `pulumi:"isSystemTask"`
	// The location of the resource. This cannot be changed after the resource is created.
	Location *string `pulumi:"location"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate *string `pulumi:"logTemplate"`
	// The platform properties against which the run has to happen.
	Platform *PlatformProperties `pulumi:"platform"`
	// The name of the container registry.
	RegistryName string `pulumi:"registryName"`
	// The name of the resource group to which the container registry belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The current status of task.
	Status *string `pulumi:"status"`
	// The properties of a task step.
	Step interface{} `pulumi:"step"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The name of the container registry task.
	TaskName *string `pulumi:"taskName"`
	// Run timeout in seconds.
	Timeout *int `pulumi:"timeout"`
	// The properties that describe all triggers for the task.
	Trigger *TriggerProperties `pulumi:"trigger"`
}

// The set of arguments for constructing a Task resource.
type TaskArgs struct {
	// The machine configuration of the run agent.
	AgentConfiguration AgentPropertiesPtrInput
	// The dedicated agent pool for the task.
	AgentPoolName pulumi.StringPtrInput
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials CredentialsPtrInput
	// Identity for the resource.
	Identity IdentityPropertiesPtrInput
	// The value of this property indicates whether the task resource is system task or not.
	IsSystemTask pulumi.BoolPtrInput
	// The location of the resource. This cannot be changed after the resource is created.
	Location pulumi.StringPtrInput
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate pulumi.StringPtrInput
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesPtrInput
	// The name of the container registry.
	RegistryName pulumi.StringInput
	// The name of the resource group to which the container registry belongs.
	ResourceGroupName pulumi.StringInput
	// The current status of task.
	Status pulumi.StringPtrInput
	// The properties of a task step.
	Step pulumi.Input
	// The tags of the resource.
	Tags pulumi.StringMapInput
	// The name of the container registry task.
	TaskName pulumi.StringPtrInput
	// Run timeout in seconds.
	Timeout pulumi.IntPtrInput
	// The properties that describe all triggers for the task.
	Trigger TriggerPropertiesPtrInput
}

func (TaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*taskArgs)(nil)).Elem()
}

type TaskInput interface {
	pulumi.Input

	ToTaskOutput() TaskOutput
	ToTaskOutputWithContext(ctx context.Context) TaskOutput
}

func (*Task) ElementType() reflect.Type {
	return reflect.TypeOf((**Task)(nil)).Elem()
}

func (i *Task) ToTaskOutput() TaskOutput {
	return i.ToTaskOutputWithContext(context.Background())
}

func (i *Task) ToTaskOutputWithContext(ctx context.Context) TaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskOutput)
}

type TaskOutput struct{ *pulumi.OutputState }

func (TaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Task)(nil)).Elem()
}

func (o TaskOutput) ToTaskOutput() TaskOutput {
	return o
}

func (o TaskOutput) ToTaskOutputWithContext(ctx context.Context) TaskOutput {
	return o
}

// The machine configuration of the run agent.
func (o TaskOutput) AgentConfiguration() AgentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *Task) AgentPropertiesResponsePtrOutput { return v.AgentConfiguration }).(AgentPropertiesResponsePtrOutput)
}

// The dedicated agent pool for the task.
func (o TaskOutput) AgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Task) pulumi.StringPtrOutput { return v.AgentPoolName }).(pulumi.StringPtrOutput)
}

// The creation date of task.
func (o TaskOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v *Task) pulumi.StringOutput { return v.CreationDate }).(pulumi.StringOutput)
}

// The properties that describes a set of credentials that will be used when this run is invoked.
func (o TaskOutput) Credentials() CredentialsResponsePtrOutput {
	return o.ApplyT(func(v *Task) CredentialsResponsePtrOutput { return v.Credentials }).(CredentialsResponsePtrOutput)
}

// Identity for the resource.
func (o TaskOutput) Identity() IdentityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *Task) IdentityPropertiesResponsePtrOutput { return v.Identity }).(IdentityPropertiesResponsePtrOutput)
}

// The value of this property indicates whether the task resource is system task or not.
func (o TaskOutput) IsSystemTask() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Task) pulumi.BoolPtrOutput { return v.IsSystemTask }).(pulumi.BoolPtrOutput)
}

// The location of the resource. This cannot be changed after the resource is created.
func (o TaskOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Task) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The template that describes the repository and tag information for run log artifact.
func (o TaskOutput) LogTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Task) pulumi.StringPtrOutput { return v.LogTemplate }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o TaskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Task) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The platform properties against which the run has to happen.
func (o TaskOutput) Platform() PlatformPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *Task) PlatformPropertiesResponsePtrOutput { return v.Platform }).(PlatformPropertiesResponsePtrOutput)
}

// The provisioning state of the task.
func (o TaskOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *Task) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The current status of task.
func (o TaskOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Task) pulumi.StringPtrOutput { return v.Status }).(pulumi.StringPtrOutput)
}

// The properties of a task step.
func (o TaskOutput) Step() pulumi.AnyOutput {
	return o.ApplyT(func(v *Task) pulumi.AnyOutput { return v.Step }).(pulumi.AnyOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o TaskOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Task) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The tags of the resource.
func (o TaskOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Task) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Run timeout in seconds.
func (o TaskOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Task) pulumi.IntPtrOutput { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The properties that describe all triggers for the task.
func (o TaskOutput) Trigger() TriggerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *Task) TriggerPropertiesResponsePtrOutput { return v.Trigger }).(TriggerPropertiesResponsePtrOutput)
}

// The type of the resource.
func (o TaskOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Task) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(TaskOutput{})
}
