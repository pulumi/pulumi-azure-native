// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190601preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The properties that determine the run agent configuration.
type AgentProperties struct {
	// The CPU configuration in terms of number of cores required for the run.
	Cpu *int `pulumi:"cpu"`
}

// AgentPropertiesInput is an input type that accepts AgentPropertiesArgs and AgentPropertiesOutput values.
// You can construct a concrete instance of `AgentPropertiesInput` via:
//
//          AgentPropertiesArgs{...}
type AgentPropertiesInput interface {
	pulumi.Input

	ToAgentPropertiesOutput() AgentPropertiesOutput
	ToAgentPropertiesOutputWithContext(context.Context) AgentPropertiesOutput
}

// The properties that determine the run agent configuration.
type AgentPropertiesArgs struct {
	// The CPU configuration in terms of number of cores required for the run.
	Cpu pulumi.IntPtrInput `pulumi:"cpu"`
}

func (AgentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentProperties)(nil)).Elem()
}

func (i AgentPropertiesArgs) ToAgentPropertiesOutput() AgentPropertiesOutput {
	return i.ToAgentPropertiesOutputWithContext(context.Background())
}

func (i AgentPropertiesArgs) ToAgentPropertiesOutputWithContext(ctx context.Context) AgentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesOutput)
}

func (i AgentPropertiesArgs) ToAgentPropertiesPtrOutput() AgentPropertiesPtrOutput {
	return i.ToAgentPropertiesPtrOutputWithContext(context.Background())
}

func (i AgentPropertiesArgs) ToAgentPropertiesPtrOutputWithContext(ctx context.Context) AgentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesOutput).ToAgentPropertiesPtrOutputWithContext(ctx)
}

// AgentPropertiesPtrInput is an input type that accepts AgentPropertiesArgs, AgentPropertiesPtr and AgentPropertiesPtrOutput values.
// You can construct a concrete instance of `AgentPropertiesPtrInput` via:
//
//          AgentPropertiesArgs{...}
//
//  or:
//
//          nil
type AgentPropertiesPtrInput interface {
	pulumi.Input

	ToAgentPropertiesPtrOutput() AgentPropertiesPtrOutput
	ToAgentPropertiesPtrOutputWithContext(context.Context) AgentPropertiesPtrOutput
}

type agentPropertiesPtrType AgentPropertiesArgs

func AgentPropertiesPtr(v *AgentPropertiesArgs) AgentPropertiesPtrInput {
	return (*agentPropertiesPtrType)(v)
}

func (*agentPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentProperties)(nil)).Elem()
}

func (i *agentPropertiesPtrType) ToAgentPropertiesPtrOutput() AgentPropertiesPtrOutput {
	return i.ToAgentPropertiesPtrOutputWithContext(context.Background())
}

func (i *agentPropertiesPtrType) ToAgentPropertiesPtrOutputWithContext(ctx context.Context) AgentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesPtrOutput)
}

// The properties that determine the run agent configuration.
type AgentPropertiesOutput struct{ *pulumi.OutputState }

func (AgentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentProperties)(nil)).Elem()
}

func (o AgentPropertiesOutput) ToAgentPropertiesOutput() AgentPropertiesOutput {
	return o
}

func (o AgentPropertiesOutput) ToAgentPropertiesOutputWithContext(ctx context.Context) AgentPropertiesOutput {
	return o
}

func (o AgentPropertiesOutput) ToAgentPropertiesPtrOutput() AgentPropertiesPtrOutput {
	return o.ToAgentPropertiesPtrOutputWithContext(context.Background())
}

func (o AgentPropertiesOutput) ToAgentPropertiesPtrOutputWithContext(ctx context.Context) AgentPropertiesPtrOutput {
	return o.ApplyT(func(v AgentProperties) *AgentProperties {
		return &v
	}).(AgentPropertiesPtrOutput)
}

// The CPU configuration in terms of number of cores required for the run.
func (o AgentPropertiesOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentProperties) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

type AgentPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AgentPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentProperties)(nil)).Elem()
}

func (o AgentPropertiesPtrOutput) ToAgentPropertiesPtrOutput() AgentPropertiesPtrOutput {
	return o
}

func (o AgentPropertiesPtrOutput) ToAgentPropertiesPtrOutputWithContext(ctx context.Context) AgentPropertiesPtrOutput {
	return o
}

func (o AgentPropertiesPtrOutput) Elem() AgentPropertiesOutput {
	return o.ApplyT(func(v *AgentProperties) AgentProperties { return *v }).(AgentPropertiesOutput)
}

// The CPU configuration in terms of number of cores required for the run.
func (o AgentPropertiesPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentProperties) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

// The properties that determine the run agent configuration.
type AgentPropertiesInvokeResponse struct {
	// The CPU configuration in terms of number of cores required for the run.
	Cpu *int `pulumi:"cpu"`
}

// AgentPropertiesInvokeResponseInput is an input type that accepts AgentPropertiesInvokeResponseArgs and AgentPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `AgentPropertiesInvokeResponseInput` via:
//
//          AgentPropertiesInvokeResponseArgs{...}
type AgentPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToAgentPropertiesInvokeResponseOutput() AgentPropertiesInvokeResponseOutput
	ToAgentPropertiesInvokeResponseOutputWithContext(context.Context) AgentPropertiesInvokeResponseOutput
}

// The properties that determine the run agent configuration.
type AgentPropertiesInvokeResponseArgs struct {
	// The CPU configuration in terms of number of cores required for the run.
	Cpu pulumi.IntPtrInput `pulumi:"cpu"`
}

func (AgentPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPropertiesInvokeResponse)(nil)).Elem()
}

func (i AgentPropertiesInvokeResponseArgs) ToAgentPropertiesInvokeResponseOutput() AgentPropertiesInvokeResponseOutput {
	return i.ToAgentPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i AgentPropertiesInvokeResponseArgs) ToAgentPropertiesInvokeResponseOutputWithContext(ctx context.Context) AgentPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesInvokeResponseOutput)
}

func (i AgentPropertiesInvokeResponseArgs) ToAgentPropertiesInvokeResponsePtrOutput() AgentPropertiesInvokeResponsePtrOutput {
	return i.ToAgentPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i AgentPropertiesInvokeResponseArgs) ToAgentPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) AgentPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesInvokeResponseOutput).ToAgentPropertiesInvokeResponsePtrOutputWithContext(ctx)
}

// AgentPropertiesInvokeResponsePtrInput is an input type that accepts AgentPropertiesInvokeResponseArgs, AgentPropertiesInvokeResponsePtr and AgentPropertiesInvokeResponsePtrOutput values.
// You can construct a concrete instance of `AgentPropertiesInvokeResponsePtrInput` via:
//
//          AgentPropertiesInvokeResponseArgs{...}
//
//  or:
//
//          nil
type AgentPropertiesInvokeResponsePtrInput interface {
	pulumi.Input

	ToAgentPropertiesInvokeResponsePtrOutput() AgentPropertiesInvokeResponsePtrOutput
	ToAgentPropertiesInvokeResponsePtrOutputWithContext(context.Context) AgentPropertiesInvokeResponsePtrOutput
}

type agentPropertiesInvokeResponsePtrType AgentPropertiesInvokeResponseArgs

func AgentPropertiesInvokeResponsePtr(v *AgentPropertiesInvokeResponseArgs) AgentPropertiesInvokeResponsePtrInput {
	return (*agentPropertiesInvokeResponsePtrType)(v)
}

func (*agentPropertiesInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPropertiesInvokeResponse)(nil)).Elem()
}

func (i *agentPropertiesInvokeResponsePtrType) ToAgentPropertiesInvokeResponsePtrOutput() AgentPropertiesInvokeResponsePtrOutput {
	return i.ToAgentPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *agentPropertiesInvokeResponsePtrType) ToAgentPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) AgentPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesInvokeResponsePtrOutput)
}

// The properties that determine the run agent configuration.
type AgentPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (AgentPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPropertiesInvokeResponse)(nil)).Elem()
}

func (o AgentPropertiesInvokeResponseOutput) ToAgentPropertiesInvokeResponseOutput() AgentPropertiesInvokeResponseOutput {
	return o
}

func (o AgentPropertiesInvokeResponseOutput) ToAgentPropertiesInvokeResponseOutputWithContext(ctx context.Context) AgentPropertiesInvokeResponseOutput {
	return o
}

func (o AgentPropertiesInvokeResponseOutput) ToAgentPropertiesInvokeResponsePtrOutput() AgentPropertiesInvokeResponsePtrOutput {
	return o.ToAgentPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (o AgentPropertiesInvokeResponseOutput) ToAgentPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) AgentPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v AgentPropertiesInvokeResponse) *AgentPropertiesInvokeResponse {
		return &v
	}).(AgentPropertiesInvokeResponsePtrOutput)
}

// The CPU configuration in terms of number of cores required for the run.
func (o AgentPropertiesInvokeResponseOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentPropertiesInvokeResponse) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

type AgentPropertiesInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (AgentPropertiesInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPropertiesInvokeResponse)(nil)).Elem()
}

func (o AgentPropertiesInvokeResponsePtrOutput) ToAgentPropertiesInvokeResponsePtrOutput() AgentPropertiesInvokeResponsePtrOutput {
	return o
}

func (o AgentPropertiesInvokeResponsePtrOutput) ToAgentPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) AgentPropertiesInvokeResponsePtrOutput {
	return o
}

func (o AgentPropertiesInvokeResponsePtrOutput) Elem() AgentPropertiesInvokeResponseOutput {
	return o.ApplyT(func(v *AgentPropertiesInvokeResponse) AgentPropertiesInvokeResponse { return *v }).(AgentPropertiesInvokeResponseOutput)
}

// The CPU configuration in terms of number of cores required for the run.
func (o AgentPropertiesInvokeResponsePtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentPropertiesInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

// The properties that determine the run agent configuration.
type AgentPropertiesResponse struct {
	// The CPU configuration in terms of number of cores required for the run.
	Cpu *int `pulumi:"cpu"`
}

// AgentPropertiesResponseInput is an input type that accepts AgentPropertiesResponseArgs and AgentPropertiesResponseOutput values.
// You can construct a concrete instance of `AgentPropertiesResponseInput` via:
//
//          AgentPropertiesResponseArgs{...}
type AgentPropertiesResponseInput interface {
	pulumi.Input

	ToAgentPropertiesResponseOutput() AgentPropertiesResponseOutput
	ToAgentPropertiesResponseOutputWithContext(context.Context) AgentPropertiesResponseOutput
}

// The properties that determine the run agent configuration.
type AgentPropertiesResponseArgs struct {
	// The CPU configuration in terms of number of cores required for the run.
	Cpu pulumi.IntPtrInput `pulumi:"cpu"`
}

func (AgentPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPropertiesResponse)(nil)).Elem()
}

func (i AgentPropertiesResponseArgs) ToAgentPropertiesResponseOutput() AgentPropertiesResponseOutput {
	return i.ToAgentPropertiesResponseOutputWithContext(context.Background())
}

func (i AgentPropertiesResponseArgs) ToAgentPropertiesResponseOutputWithContext(ctx context.Context) AgentPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesResponseOutput)
}

func (i AgentPropertiesResponseArgs) ToAgentPropertiesResponsePtrOutput() AgentPropertiesResponsePtrOutput {
	return i.ToAgentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AgentPropertiesResponseArgs) ToAgentPropertiesResponsePtrOutputWithContext(ctx context.Context) AgentPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesResponseOutput).ToAgentPropertiesResponsePtrOutputWithContext(ctx)
}

// AgentPropertiesResponsePtrInput is an input type that accepts AgentPropertiesResponseArgs, AgentPropertiesResponsePtr and AgentPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AgentPropertiesResponsePtrInput` via:
//
//          AgentPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AgentPropertiesResponsePtrInput interface {
	pulumi.Input

	ToAgentPropertiesResponsePtrOutput() AgentPropertiesResponsePtrOutput
	ToAgentPropertiesResponsePtrOutputWithContext(context.Context) AgentPropertiesResponsePtrOutput
}

type agentPropertiesResponsePtrType AgentPropertiesResponseArgs

func AgentPropertiesResponsePtr(v *AgentPropertiesResponseArgs) AgentPropertiesResponsePtrInput {
	return (*agentPropertiesResponsePtrType)(v)
}

func (*agentPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPropertiesResponse)(nil)).Elem()
}

func (i *agentPropertiesResponsePtrType) ToAgentPropertiesResponsePtrOutput() AgentPropertiesResponsePtrOutput {
	return i.ToAgentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *agentPropertiesResponsePtrType) ToAgentPropertiesResponsePtrOutputWithContext(ctx context.Context) AgentPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesResponsePtrOutput)
}

// The properties that determine the run agent configuration.
type AgentPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AgentPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPropertiesResponse)(nil)).Elem()
}

func (o AgentPropertiesResponseOutput) ToAgentPropertiesResponseOutput() AgentPropertiesResponseOutput {
	return o
}

func (o AgentPropertiesResponseOutput) ToAgentPropertiesResponseOutputWithContext(ctx context.Context) AgentPropertiesResponseOutput {
	return o
}

func (o AgentPropertiesResponseOutput) ToAgentPropertiesResponsePtrOutput() AgentPropertiesResponsePtrOutput {
	return o.ToAgentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AgentPropertiesResponseOutput) ToAgentPropertiesResponsePtrOutputWithContext(ctx context.Context) AgentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AgentPropertiesResponse) *AgentPropertiesResponse {
		return &v
	}).(AgentPropertiesResponsePtrOutput)
}

// The CPU configuration in terms of number of cores required for the run.
func (o AgentPropertiesResponseOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentPropertiesResponse) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

type AgentPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AgentPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPropertiesResponse)(nil)).Elem()
}

func (o AgentPropertiesResponsePtrOutput) ToAgentPropertiesResponsePtrOutput() AgentPropertiesResponsePtrOutput {
	return o
}

func (o AgentPropertiesResponsePtrOutput) ToAgentPropertiesResponsePtrOutputWithContext(ctx context.Context) AgentPropertiesResponsePtrOutput {
	return o
}

func (o AgentPropertiesResponsePtrOutput) Elem() AgentPropertiesResponseOutput {
	return o.ApplyT(func(v *AgentPropertiesResponse) AgentPropertiesResponse { return *v }).(AgentPropertiesResponseOutput)
}

// The CPU configuration in terms of number of cores required for the run.
func (o AgentPropertiesResponsePtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

// The properties of a run argument.
type Argument struct {
	// Flag to indicate whether the argument represents a secret and want to be removed from build logs.
	IsSecret *bool `pulumi:"isSecret"`
	// The name of the argument.
	Name string `pulumi:"name"`
	// The value of the argument.
	Value string `pulumi:"value"`
}

// ArgumentInput is an input type that accepts ArgumentArgs and ArgumentOutput values.
// You can construct a concrete instance of `ArgumentInput` via:
//
//          ArgumentArgs{...}
type ArgumentInput interface {
	pulumi.Input

	ToArgumentOutput() ArgumentOutput
	ToArgumentOutputWithContext(context.Context) ArgumentOutput
}

// The properties of a run argument.
type ArgumentArgs struct {
	// Flag to indicate whether the argument represents a secret and want to be removed from build logs.
	IsSecret pulumi.BoolPtrInput `pulumi:"isSecret"`
	// The name of the argument.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the argument.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Argument)(nil)).Elem()
}

func (i ArgumentArgs) ToArgumentOutput() ArgumentOutput {
	return i.ToArgumentOutputWithContext(context.Background())
}

func (i ArgumentArgs) ToArgumentOutputWithContext(ctx context.Context) ArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArgumentOutput)
}

// ArgumentArrayInput is an input type that accepts ArgumentArray and ArgumentArrayOutput values.
// You can construct a concrete instance of `ArgumentArrayInput` via:
//
//          ArgumentArray{ ArgumentArgs{...} }
type ArgumentArrayInput interface {
	pulumi.Input

	ToArgumentArrayOutput() ArgumentArrayOutput
	ToArgumentArrayOutputWithContext(context.Context) ArgumentArrayOutput
}

type ArgumentArray []ArgumentInput

func (ArgumentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Argument)(nil)).Elem()
}

func (i ArgumentArray) ToArgumentArrayOutput() ArgumentArrayOutput {
	return i.ToArgumentArrayOutputWithContext(context.Background())
}

func (i ArgumentArray) ToArgumentArrayOutputWithContext(ctx context.Context) ArgumentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArgumentArrayOutput)
}

// The properties of a run argument.
type ArgumentOutput struct{ *pulumi.OutputState }

func (ArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Argument)(nil)).Elem()
}

func (o ArgumentOutput) ToArgumentOutput() ArgumentOutput {
	return o
}

func (o ArgumentOutput) ToArgumentOutputWithContext(ctx context.Context) ArgumentOutput {
	return o
}

// Flag to indicate whether the argument represents a secret and want to be removed from build logs.
func (o ArgumentOutput) IsSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Argument) *bool { return v.IsSecret }).(pulumi.BoolPtrOutput)
}

// The name of the argument.
func (o ArgumentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Argument) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the argument.
func (o ArgumentOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v Argument) string { return v.Value }).(pulumi.StringOutput)
}

type ArgumentArrayOutput struct{ *pulumi.OutputState }

func (ArgumentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Argument)(nil)).Elem()
}

func (o ArgumentArrayOutput) ToArgumentArrayOutput() ArgumentArrayOutput {
	return o
}

func (o ArgumentArrayOutput) ToArgumentArrayOutputWithContext(ctx context.Context) ArgumentArrayOutput {
	return o
}

func (o ArgumentArrayOutput) Index(i pulumi.IntInput) ArgumentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Argument {
		return vs[0].([]Argument)[vs[1].(int)]
	}).(ArgumentOutput)
}

// The properties of a run argument.
type ArgumentInvokeResponse struct {
	// Flag to indicate whether the argument represents a secret and want to be removed from build logs.
	IsSecret *bool `pulumi:"isSecret"`
	// The name of the argument.
	Name string `pulumi:"name"`
	// The value of the argument.
	Value string `pulumi:"value"`
}

// ArgumentInvokeResponseInput is an input type that accepts ArgumentInvokeResponseArgs and ArgumentInvokeResponseOutput values.
// You can construct a concrete instance of `ArgumentInvokeResponseInput` via:
//
//          ArgumentInvokeResponseArgs{...}
type ArgumentInvokeResponseInput interface {
	pulumi.Input

	ToArgumentInvokeResponseOutput() ArgumentInvokeResponseOutput
	ToArgumentInvokeResponseOutputWithContext(context.Context) ArgumentInvokeResponseOutput
}

// The properties of a run argument.
type ArgumentInvokeResponseArgs struct {
	// Flag to indicate whether the argument represents a secret and want to be removed from build logs.
	IsSecret pulumi.BoolPtrInput `pulumi:"isSecret"`
	// The name of the argument.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the argument.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ArgumentInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArgumentInvokeResponse)(nil)).Elem()
}

func (i ArgumentInvokeResponseArgs) ToArgumentInvokeResponseOutput() ArgumentInvokeResponseOutput {
	return i.ToArgumentInvokeResponseOutputWithContext(context.Background())
}

func (i ArgumentInvokeResponseArgs) ToArgumentInvokeResponseOutputWithContext(ctx context.Context) ArgumentInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArgumentInvokeResponseOutput)
}

// ArgumentInvokeResponseArrayInput is an input type that accepts ArgumentInvokeResponseArray and ArgumentInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ArgumentInvokeResponseArrayInput` via:
//
//          ArgumentInvokeResponseArray{ ArgumentInvokeResponseArgs{...} }
type ArgumentInvokeResponseArrayInput interface {
	pulumi.Input

	ToArgumentInvokeResponseArrayOutput() ArgumentInvokeResponseArrayOutput
	ToArgumentInvokeResponseArrayOutputWithContext(context.Context) ArgumentInvokeResponseArrayOutput
}

type ArgumentInvokeResponseArray []ArgumentInvokeResponseInput

func (ArgumentInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArgumentInvokeResponse)(nil)).Elem()
}

func (i ArgumentInvokeResponseArray) ToArgumentInvokeResponseArrayOutput() ArgumentInvokeResponseArrayOutput {
	return i.ToArgumentInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ArgumentInvokeResponseArray) ToArgumentInvokeResponseArrayOutputWithContext(ctx context.Context) ArgumentInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArgumentInvokeResponseArrayOutput)
}

// The properties of a run argument.
type ArgumentInvokeResponseOutput struct{ *pulumi.OutputState }

func (ArgumentInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArgumentInvokeResponse)(nil)).Elem()
}

func (o ArgumentInvokeResponseOutput) ToArgumentInvokeResponseOutput() ArgumentInvokeResponseOutput {
	return o
}

func (o ArgumentInvokeResponseOutput) ToArgumentInvokeResponseOutputWithContext(ctx context.Context) ArgumentInvokeResponseOutput {
	return o
}

// Flag to indicate whether the argument represents a secret and want to be removed from build logs.
func (o ArgumentInvokeResponseOutput) IsSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ArgumentInvokeResponse) *bool { return v.IsSecret }).(pulumi.BoolPtrOutput)
}

// The name of the argument.
func (o ArgumentInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ArgumentInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the argument.
func (o ArgumentInvokeResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ArgumentInvokeResponse) string { return v.Value }).(pulumi.StringOutput)
}

type ArgumentInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ArgumentInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArgumentInvokeResponse)(nil)).Elem()
}

func (o ArgumentInvokeResponseArrayOutput) ToArgumentInvokeResponseArrayOutput() ArgumentInvokeResponseArrayOutput {
	return o
}

func (o ArgumentInvokeResponseArrayOutput) ToArgumentInvokeResponseArrayOutputWithContext(ctx context.Context) ArgumentInvokeResponseArrayOutput {
	return o
}

func (o ArgumentInvokeResponseArrayOutput) Index(i pulumi.IntInput) ArgumentInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArgumentInvokeResponse {
		return vs[0].([]ArgumentInvokeResponse)[vs[1].(int)]
	}).(ArgumentInvokeResponseOutput)
}

// The properties of a run argument.
type ArgumentResponse struct {
	// Flag to indicate whether the argument represents a secret and want to be removed from build logs.
	IsSecret *bool `pulumi:"isSecret"`
	// The name of the argument.
	Name string `pulumi:"name"`
	// The value of the argument.
	Value string `pulumi:"value"`
}

// ArgumentResponseInput is an input type that accepts ArgumentResponseArgs and ArgumentResponseOutput values.
// You can construct a concrete instance of `ArgumentResponseInput` via:
//
//          ArgumentResponseArgs{...}
type ArgumentResponseInput interface {
	pulumi.Input

	ToArgumentResponseOutput() ArgumentResponseOutput
	ToArgumentResponseOutputWithContext(context.Context) ArgumentResponseOutput
}

// The properties of a run argument.
type ArgumentResponseArgs struct {
	// Flag to indicate whether the argument represents a secret and want to be removed from build logs.
	IsSecret pulumi.BoolPtrInput `pulumi:"isSecret"`
	// The name of the argument.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the argument.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ArgumentResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArgumentResponse)(nil)).Elem()
}

func (i ArgumentResponseArgs) ToArgumentResponseOutput() ArgumentResponseOutput {
	return i.ToArgumentResponseOutputWithContext(context.Background())
}

func (i ArgumentResponseArgs) ToArgumentResponseOutputWithContext(ctx context.Context) ArgumentResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArgumentResponseOutput)
}

// ArgumentResponseArrayInput is an input type that accepts ArgumentResponseArray and ArgumentResponseArrayOutput values.
// You can construct a concrete instance of `ArgumentResponseArrayInput` via:
//
//          ArgumentResponseArray{ ArgumentResponseArgs{...} }
type ArgumentResponseArrayInput interface {
	pulumi.Input

	ToArgumentResponseArrayOutput() ArgumentResponseArrayOutput
	ToArgumentResponseArrayOutputWithContext(context.Context) ArgumentResponseArrayOutput
}

type ArgumentResponseArray []ArgumentResponseInput

func (ArgumentResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArgumentResponse)(nil)).Elem()
}

func (i ArgumentResponseArray) ToArgumentResponseArrayOutput() ArgumentResponseArrayOutput {
	return i.ToArgumentResponseArrayOutputWithContext(context.Background())
}

func (i ArgumentResponseArray) ToArgumentResponseArrayOutputWithContext(ctx context.Context) ArgumentResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArgumentResponseArrayOutput)
}

// The properties of a run argument.
type ArgumentResponseOutput struct{ *pulumi.OutputState }

func (ArgumentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArgumentResponse)(nil)).Elem()
}

func (o ArgumentResponseOutput) ToArgumentResponseOutput() ArgumentResponseOutput {
	return o
}

func (o ArgumentResponseOutput) ToArgumentResponseOutputWithContext(ctx context.Context) ArgumentResponseOutput {
	return o
}

// Flag to indicate whether the argument represents a secret and want to be removed from build logs.
func (o ArgumentResponseOutput) IsSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ArgumentResponse) *bool { return v.IsSecret }).(pulumi.BoolPtrOutput)
}

// The name of the argument.
func (o ArgumentResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ArgumentResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the argument.
func (o ArgumentResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ArgumentResponse) string { return v.Value }).(pulumi.StringOutput)
}

type ArgumentResponseArrayOutput struct{ *pulumi.OutputState }

func (ArgumentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArgumentResponse)(nil)).Elem()
}

func (o ArgumentResponseArrayOutput) ToArgumentResponseArrayOutput() ArgumentResponseArrayOutput {
	return o
}

func (o ArgumentResponseArrayOutput) ToArgumentResponseArrayOutputWithContext(ctx context.Context) ArgumentResponseArrayOutput {
	return o
}

func (o ArgumentResponseArrayOutput) Index(i pulumi.IntInput) ArgumentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArgumentResponse {
		return vs[0].([]ArgumentResponse)[vs[1].(int)]
	}).(ArgumentResponseOutput)
}

// The authorization properties for accessing the source code repository.
type AuthInfo struct {
	// Time in seconds that the token remains valid
	ExpiresIn *int `pulumi:"expiresIn"`
	// The refresh token used to refresh the access token.
	RefreshToken *string `pulumi:"refreshToken"`
	// The scope of the access token.
	Scope *string `pulumi:"scope"`
	// The access token used to access the source control provider.
	Token string `pulumi:"token"`
	// The type of Auth token.
	TokenType string `pulumi:"tokenType"`
}

// AuthInfoInput is an input type that accepts AuthInfoArgs and AuthInfoOutput values.
// You can construct a concrete instance of `AuthInfoInput` via:
//
//          AuthInfoArgs{...}
type AuthInfoInput interface {
	pulumi.Input

	ToAuthInfoOutput() AuthInfoOutput
	ToAuthInfoOutputWithContext(context.Context) AuthInfoOutput
}

// The authorization properties for accessing the source code repository.
type AuthInfoArgs struct {
	// Time in seconds that the token remains valid
	ExpiresIn pulumi.IntPtrInput `pulumi:"expiresIn"`
	// The refresh token used to refresh the access token.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
	// The scope of the access token.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The access token used to access the source control provider.
	Token pulumi.StringInput `pulumi:"token"`
	// The type of Auth token.
	TokenType pulumi.StringInput `pulumi:"tokenType"`
}

func (AuthInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthInfo)(nil)).Elem()
}

func (i AuthInfoArgs) ToAuthInfoOutput() AuthInfoOutput {
	return i.ToAuthInfoOutputWithContext(context.Background())
}

func (i AuthInfoArgs) ToAuthInfoOutputWithContext(ctx context.Context) AuthInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoOutput)
}

func (i AuthInfoArgs) ToAuthInfoPtrOutput() AuthInfoPtrOutput {
	return i.ToAuthInfoPtrOutputWithContext(context.Background())
}

func (i AuthInfoArgs) ToAuthInfoPtrOutputWithContext(ctx context.Context) AuthInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoOutput).ToAuthInfoPtrOutputWithContext(ctx)
}

// AuthInfoPtrInput is an input type that accepts AuthInfoArgs, AuthInfoPtr and AuthInfoPtrOutput values.
// You can construct a concrete instance of `AuthInfoPtrInput` via:
//
//          AuthInfoArgs{...}
//
//  or:
//
//          nil
type AuthInfoPtrInput interface {
	pulumi.Input

	ToAuthInfoPtrOutput() AuthInfoPtrOutput
	ToAuthInfoPtrOutputWithContext(context.Context) AuthInfoPtrOutput
}

type authInfoPtrType AuthInfoArgs

func AuthInfoPtr(v *AuthInfoArgs) AuthInfoPtrInput {
	return (*authInfoPtrType)(v)
}

func (*authInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthInfo)(nil)).Elem()
}

func (i *authInfoPtrType) ToAuthInfoPtrOutput() AuthInfoPtrOutput {
	return i.ToAuthInfoPtrOutputWithContext(context.Background())
}

func (i *authInfoPtrType) ToAuthInfoPtrOutputWithContext(ctx context.Context) AuthInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoPtrOutput)
}

// The authorization properties for accessing the source code repository.
type AuthInfoOutput struct{ *pulumi.OutputState }

func (AuthInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthInfo)(nil)).Elem()
}

func (o AuthInfoOutput) ToAuthInfoOutput() AuthInfoOutput {
	return o
}

func (o AuthInfoOutput) ToAuthInfoOutputWithContext(ctx context.Context) AuthInfoOutput {
	return o
}

func (o AuthInfoOutput) ToAuthInfoPtrOutput() AuthInfoPtrOutput {
	return o.ToAuthInfoPtrOutputWithContext(context.Background())
}

func (o AuthInfoOutput) ToAuthInfoPtrOutputWithContext(ctx context.Context) AuthInfoPtrOutput {
	return o.ApplyT(func(v AuthInfo) *AuthInfo {
		return &v
	}).(AuthInfoPtrOutput)
}

// Time in seconds that the token remains valid
func (o AuthInfoOutput) ExpiresIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AuthInfo) *int { return v.ExpiresIn }).(pulumi.IntPtrOutput)
}

// The refresh token used to refresh the access token.
func (o AuthInfoOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthInfo) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

// The scope of the access token.
func (o AuthInfoOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthInfo) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The access token used to access the source control provider.
func (o AuthInfoOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v AuthInfo) string { return v.Token }).(pulumi.StringOutput)
}

// The type of Auth token.
func (o AuthInfoOutput) TokenType() pulumi.StringOutput {
	return o.ApplyT(func(v AuthInfo) string { return v.TokenType }).(pulumi.StringOutput)
}

type AuthInfoPtrOutput struct{ *pulumi.OutputState }

func (AuthInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthInfo)(nil)).Elem()
}

func (o AuthInfoPtrOutput) ToAuthInfoPtrOutput() AuthInfoPtrOutput {
	return o
}

func (o AuthInfoPtrOutput) ToAuthInfoPtrOutputWithContext(ctx context.Context) AuthInfoPtrOutput {
	return o
}

func (o AuthInfoPtrOutput) Elem() AuthInfoOutput {
	return o.ApplyT(func(v *AuthInfo) AuthInfo { return *v }).(AuthInfoOutput)
}

// Time in seconds that the token remains valid
func (o AuthInfoPtrOutput) ExpiresIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuthInfo) *int {
		if v == nil {
			return nil
		}
		return v.ExpiresIn
	}).(pulumi.IntPtrOutput)
}

// The refresh token used to refresh the access token.
func (o AuthInfoPtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfo) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

// The scope of the access token.
func (o AuthInfoPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfo) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The access token used to access the source control provider.
func (o AuthInfoPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

// The type of Auth token.
func (o AuthInfoPtrOutput) TokenType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfo) *string {
		if v == nil {
			return nil
		}
		return &v.TokenType
	}).(pulumi.StringPtrOutput)
}

// The authorization properties for accessing the source code repository.
type AuthInfoInvokeResponse struct {
	// Time in seconds that the token remains valid
	ExpiresIn *int `pulumi:"expiresIn"`
	// The refresh token used to refresh the access token.
	RefreshToken *string `pulumi:"refreshToken"`
	// The scope of the access token.
	Scope *string `pulumi:"scope"`
	// The access token used to access the source control provider.
	Token string `pulumi:"token"`
	// The type of Auth token.
	TokenType string `pulumi:"tokenType"`
}

// AuthInfoInvokeResponseInput is an input type that accepts AuthInfoInvokeResponseArgs and AuthInfoInvokeResponseOutput values.
// You can construct a concrete instance of `AuthInfoInvokeResponseInput` via:
//
//          AuthInfoInvokeResponseArgs{...}
type AuthInfoInvokeResponseInput interface {
	pulumi.Input

	ToAuthInfoInvokeResponseOutput() AuthInfoInvokeResponseOutput
	ToAuthInfoInvokeResponseOutputWithContext(context.Context) AuthInfoInvokeResponseOutput
}

// The authorization properties for accessing the source code repository.
type AuthInfoInvokeResponseArgs struct {
	// Time in seconds that the token remains valid
	ExpiresIn pulumi.IntPtrInput `pulumi:"expiresIn"`
	// The refresh token used to refresh the access token.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
	// The scope of the access token.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The access token used to access the source control provider.
	Token pulumi.StringInput `pulumi:"token"`
	// The type of Auth token.
	TokenType pulumi.StringInput `pulumi:"tokenType"`
}

func (AuthInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthInfoInvokeResponse)(nil)).Elem()
}

func (i AuthInfoInvokeResponseArgs) ToAuthInfoInvokeResponseOutput() AuthInfoInvokeResponseOutput {
	return i.ToAuthInfoInvokeResponseOutputWithContext(context.Background())
}

func (i AuthInfoInvokeResponseArgs) ToAuthInfoInvokeResponseOutputWithContext(ctx context.Context) AuthInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoInvokeResponseOutput)
}

func (i AuthInfoInvokeResponseArgs) ToAuthInfoInvokeResponsePtrOutput() AuthInfoInvokeResponsePtrOutput {
	return i.ToAuthInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i AuthInfoInvokeResponseArgs) ToAuthInfoInvokeResponsePtrOutputWithContext(ctx context.Context) AuthInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoInvokeResponseOutput).ToAuthInfoInvokeResponsePtrOutputWithContext(ctx)
}

// AuthInfoInvokeResponsePtrInput is an input type that accepts AuthInfoInvokeResponseArgs, AuthInfoInvokeResponsePtr and AuthInfoInvokeResponsePtrOutput values.
// You can construct a concrete instance of `AuthInfoInvokeResponsePtrInput` via:
//
//          AuthInfoInvokeResponseArgs{...}
//
//  or:
//
//          nil
type AuthInfoInvokeResponsePtrInput interface {
	pulumi.Input

	ToAuthInfoInvokeResponsePtrOutput() AuthInfoInvokeResponsePtrOutput
	ToAuthInfoInvokeResponsePtrOutputWithContext(context.Context) AuthInfoInvokeResponsePtrOutput
}

type authInfoInvokeResponsePtrType AuthInfoInvokeResponseArgs

func AuthInfoInvokeResponsePtr(v *AuthInfoInvokeResponseArgs) AuthInfoInvokeResponsePtrInput {
	return (*authInfoInvokeResponsePtrType)(v)
}

func (*authInfoInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthInfoInvokeResponse)(nil)).Elem()
}

func (i *authInfoInvokeResponsePtrType) ToAuthInfoInvokeResponsePtrOutput() AuthInfoInvokeResponsePtrOutput {
	return i.ToAuthInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *authInfoInvokeResponsePtrType) ToAuthInfoInvokeResponsePtrOutputWithContext(ctx context.Context) AuthInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoInvokeResponsePtrOutput)
}

// The authorization properties for accessing the source code repository.
type AuthInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (AuthInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthInfoInvokeResponse)(nil)).Elem()
}

func (o AuthInfoInvokeResponseOutput) ToAuthInfoInvokeResponseOutput() AuthInfoInvokeResponseOutput {
	return o
}

func (o AuthInfoInvokeResponseOutput) ToAuthInfoInvokeResponseOutputWithContext(ctx context.Context) AuthInfoInvokeResponseOutput {
	return o
}

func (o AuthInfoInvokeResponseOutput) ToAuthInfoInvokeResponsePtrOutput() AuthInfoInvokeResponsePtrOutput {
	return o.ToAuthInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (o AuthInfoInvokeResponseOutput) ToAuthInfoInvokeResponsePtrOutputWithContext(ctx context.Context) AuthInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v AuthInfoInvokeResponse) *AuthInfoInvokeResponse {
		return &v
	}).(AuthInfoInvokeResponsePtrOutput)
}

// Time in seconds that the token remains valid
func (o AuthInfoInvokeResponseOutput) ExpiresIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AuthInfoInvokeResponse) *int { return v.ExpiresIn }).(pulumi.IntPtrOutput)
}

// The refresh token used to refresh the access token.
func (o AuthInfoInvokeResponseOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthInfoInvokeResponse) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

// The scope of the access token.
func (o AuthInfoInvokeResponseOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthInfoInvokeResponse) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The access token used to access the source control provider.
func (o AuthInfoInvokeResponseOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v AuthInfoInvokeResponse) string { return v.Token }).(pulumi.StringOutput)
}

// The type of Auth token.
func (o AuthInfoInvokeResponseOutput) TokenType() pulumi.StringOutput {
	return o.ApplyT(func(v AuthInfoInvokeResponse) string { return v.TokenType }).(pulumi.StringOutput)
}

type AuthInfoInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthInfoInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthInfoInvokeResponse)(nil)).Elem()
}

func (o AuthInfoInvokeResponsePtrOutput) ToAuthInfoInvokeResponsePtrOutput() AuthInfoInvokeResponsePtrOutput {
	return o
}

func (o AuthInfoInvokeResponsePtrOutput) ToAuthInfoInvokeResponsePtrOutputWithContext(ctx context.Context) AuthInfoInvokeResponsePtrOutput {
	return o
}

func (o AuthInfoInvokeResponsePtrOutput) Elem() AuthInfoInvokeResponseOutput {
	return o.ApplyT(func(v *AuthInfoInvokeResponse) AuthInfoInvokeResponse { return *v }).(AuthInfoInvokeResponseOutput)
}

// Time in seconds that the token remains valid
func (o AuthInfoInvokeResponsePtrOutput) ExpiresIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuthInfoInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.ExpiresIn
	}).(pulumi.IntPtrOutput)
}

// The refresh token used to refresh the access token.
func (o AuthInfoInvokeResponsePtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

// The scope of the access token.
func (o AuthInfoInvokeResponsePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The access token used to access the source control provider.
func (o AuthInfoInvokeResponsePtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

// The type of Auth token.
func (o AuthInfoInvokeResponsePtrOutput) TokenType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TokenType
	}).(pulumi.StringPtrOutput)
}

// The authorization properties for accessing the source code repository.
type AuthInfoResponse struct {
	// Time in seconds that the token remains valid
	ExpiresIn *int `pulumi:"expiresIn"`
	// The refresh token used to refresh the access token.
	RefreshToken *string `pulumi:"refreshToken"`
	// The scope of the access token.
	Scope *string `pulumi:"scope"`
	// The access token used to access the source control provider.
	Token string `pulumi:"token"`
	// The type of Auth token.
	TokenType string `pulumi:"tokenType"`
}

// AuthInfoResponseInput is an input type that accepts AuthInfoResponseArgs and AuthInfoResponseOutput values.
// You can construct a concrete instance of `AuthInfoResponseInput` via:
//
//          AuthInfoResponseArgs{...}
type AuthInfoResponseInput interface {
	pulumi.Input

	ToAuthInfoResponseOutput() AuthInfoResponseOutput
	ToAuthInfoResponseOutputWithContext(context.Context) AuthInfoResponseOutput
}

// The authorization properties for accessing the source code repository.
type AuthInfoResponseArgs struct {
	// Time in seconds that the token remains valid
	ExpiresIn pulumi.IntPtrInput `pulumi:"expiresIn"`
	// The refresh token used to refresh the access token.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
	// The scope of the access token.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The access token used to access the source control provider.
	Token pulumi.StringInput `pulumi:"token"`
	// The type of Auth token.
	TokenType pulumi.StringInput `pulumi:"tokenType"`
}

func (AuthInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthInfoResponse)(nil)).Elem()
}

func (i AuthInfoResponseArgs) ToAuthInfoResponseOutput() AuthInfoResponseOutput {
	return i.ToAuthInfoResponseOutputWithContext(context.Background())
}

func (i AuthInfoResponseArgs) ToAuthInfoResponseOutputWithContext(ctx context.Context) AuthInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoResponseOutput)
}

func (i AuthInfoResponseArgs) ToAuthInfoResponsePtrOutput() AuthInfoResponsePtrOutput {
	return i.ToAuthInfoResponsePtrOutputWithContext(context.Background())
}

func (i AuthInfoResponseArgs) ToAuthInfoResponsePtrOutputWithContext(ctx context.Context) AuthInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoResponseOutput).ToAuthInfoResponsePtrOutputWithContext(ctx)
}

// AuthInfoResponsePtrInput is an input type that accepts AuthInfoResponseArgs, AuthInfoResponsePtr and AuthInfoResponsePtrOutput values.
// You can construct a concrete instance of `AuthInfoResponsePtrInput` via:
//
//          AuthInfoResponseArgs{...}
//
//  or:
//
//          nil
type AuthInfoResponsePtrInput interface {
	pulumi.Input

	ToAuthInfoResponsePtrOutput() AuthInfoResponsePtrOutput
	ToAuthInfoResponsePtrOutputWithContext(context.Context) AuthInfoResponsePtrOutput
}

type authInfoResponsePtrType AuthInfoResponseArgs

func AuthInfoResponsePtr(v *AuthInfoResponseArgs) AuthInfoResponsePtrInput {
	return (*authInfoResponsePtrType)(v)
}

func (*authInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthInfoResponse)(nil)).Elem()
}

func (i *authInfoResponsePtrType) ToAuthInfoResponsePtrOutput() AuthInfoResponsePtrOutput {
	return i.ToAuthInfoResponsePtrOutputWithContext(context.Background())
}

func (i *authInfoResponsePtrType) ToAuthInfoResponsePtrOutputWithContext(ctx context.Context) AuthInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoResponsePtrOutput)
}

// The authorization properties for accessing the source code repository.
type AuthInfoResponseOutput struct{ *pulumi.OutputState }

func (AuthInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthInfoResponse)(nil)).Elem()
}

func (o AuthInfoResponseOutput) ToAuthInfoResponseOutput() AuthInfoResponseOutput {
	return o
}

func (o AuthInfoResponseOutput) ToAuthInfoResponseOutputWithContext(ctx context.Context) AuthInfoResponseOutput {
	return o
}

func (o AuthInfoResponseOutput) ToAuthInfoResponsePtrOutput() AuthInfoResponsePtrOutput {
	return o.ToAuthInfoResponsePtrOutputWithContext(context.Background())
}

func (o AuthInfoResponseOutput) ToAuthInfoResponsePtrOutputWithContext(ctx context.Context) AuthInfoResponsePtrOutput {
	return o.ApplyT(func(v AuthInfoResponse) *AuthInfoResponse {
		return &v
	}).(AuthInfoResponsePtrOutput)
}

// Time in seconds that the token remains valid
func (o AuthInfoResponseOutput) ExpiresIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AuthInfoResponse) *int { return v.ExpiresIn }).(pulumi.IntPtrOutput)
}

// The refresh token used to refresh the access token.
func (o AuthInfoResponseOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthInfoResponse) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

// The scope of the access token.
func (o AuthInfoResponseOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthInfoResponse) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The access token used to access the source control provider.
func (o AuthInfoResponseOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v AuthInfoResponse) string { return v.Token }).(pulumi.StringOutput)
}

// The type of Auth token.
func (o AuthInfoResponseOutput) TokenType() pulumi.StringOutput {
	return o.ApplyT(func(v AuthInfoResponse) string { return v.TokenType }).(pulumi.StringOutput)
}

type AuthInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthInfoResponse)(nil)).Elem()
}

func (o AuthInfoResponsePtrOutput) ToAuthInfoResponsePtrOutput() AuthInfoResponsePtrOutput {
	return o
}

func (o AuthInfoResponsePtrOutput) ToAuthInfoResponsePtrOutputWithContext(ctx context.Context) AuthInfoResponsePtrOutput {
	return o
}

func (o AuthInfoResponsePtrOutput) Elem() AuthInfoResponseOutput {
	return o.ApplyT(func(v *AuthInfoResponse) AuthInfoResponse { return *v }).(AuthInfoResponseOutput)
}

// Time in seconds that the token remains valid
func (o AuthInfoResponsePtrOutput) ExpiresIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuthInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.ExpiresIn
	}).(pulumi.IntPtrOutput)
}

// The refresh token used to refresh the access token.
func (o AuthInfoResponsePtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

// The scope of the access token.
func (o AuthInfoResponsePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The access token used to access the source control provider.
func (o AuthInfoResponsePtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

// The type of Auth token.
func (o AuthInfoResponsePtrOutput) TokenType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TokenType
	}).(pulumi.StringPtrOutput)
}

// Properties that describe a base image dependency.
type BaseImageDependencyInvokeResponse struct {
	// The sha256-based digest of the image manifest.
	Digest *string `pulumi:"digest"`
	// The registry login server.
	Registry *string `pulumi:"registry"`
	// The repository name.
	Repository *string `pulumi:"repository"`
	// The tag name.
	Tag *string `pulumi:"tag"`
	// The type of the base image dependency.
	Type *string `pulumi:"type"`
}

// BaseImageDependencyInvokeResponseInput is an input type that accepts BaseImageDependencyInvokeResponseArgs and BaseImageDependencyInvokeResponseOutput values.
// You can construct a concrete instance of `BaseImageDependencyInvokeResponseInput` via:
//
//          BaseImageDependencyInvokeResponseArgs{...}
type BaseImageDependencyInvokeResponseInput interface {
	pulumi.Input

	ToBaseImageDependencyInvokeResponseOutput() BaseImageDependencyInvokeResponseOutput
	ToBaseImageDependencyInvokeResponseOutputWithContext(context.Context) BaseImageDependencyInvokeResponseOutput
}

// Properties that describe a base image dependency.
type BaseImageDependencyInvokeResponseArgs struct {
	// The sha256-based digest of the image manifest.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// The registry login server.
	Registry pulumi.StringPtrInput `pulumi:"registry"`
	// The repository name.
	Repository pulumi.StringPtrInput `pulumi:"repository"`
	// The tag name.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// The type of the base image dependency.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (BaseImageDependencyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageDependencyInvokeResponse)(nil)).Elem()
}

func (i BaseImageDependencyInvokeResponseArgs) ToBaseImageDependencyInvokeResponseOutput() BaseImageDependencyInvokeResponseOutput {
	return i.ToBaseImageDependencyInvokeResponseOutputWithContext(context.Background())
}

func (i BaseImageDependencyInvokeResponseArgs) ToBaseImageDependencyInvokeResponseOutputWithContext(ctx context.Context) BaseImageDependencyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageDependencyInvokeResponseOutput)
}

// BaseImageDependencyInvokeResponseArrayInput is an input type that accepts BaseImageDependencyInvokeResponseArray and BaseImageDependencyInvokeResponseArrayOutput values.
// You can construct a concrete instance of `BaseImageDependencyInvokeResponseArrayInput` via:
//
//          BaseImageDependencyInvokeResponseArray{ BaseImageDependencyInvokeResponseArgs{...} }
type BaseImageDependencyInvokeResponseArrayInput interface {
	pulumi.Input

	ToBaseImageDependencyInvokeResponseArrayOutput() BaseImageDependencyInvokeResponseArrayOutput
	ToBaseImageDependencyInvokeResponseArrayOutputWithContext(context.Context) BaseImageDependencyInvokeResponseArrayOutput
}

type BaseImageDependencyInvokeResponseArray []BaseImageDependencyInvokeResponseInput

func (BaseImageDependencyInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaseImageDependencyInvokeResponse)(nil)).Elem()
}

func (i BaseImageDependencyInvokeResponseArray) ToBaseImageDependencyInvokeResponseArrayOutput() BaseImageDependencyInvokeResponseArrayOutput {
	return i.ToBaseImageDependencyInvokeResponseArrayOutputWithContext(context.Background())
}

func (i BaseImageDependencyInvokeResponseArray) ToBaseImageDependencyInvokeResponseArrayOutputWithContext(ctx context.Context) BaseImageDependencyInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageDependencyInvokeResponseArrayOutput)
}

// Properties that describe a base image dependency.
type BaseImageDependencyInvokeResponseOutput struct{ *pulumi.OutputState }

func (BaseImageDependencyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageDependencyInvokeResponse)(nil)).Elem()
}

func (o BaseImageDependencyInvokeResponseOutput) ToBaseImageDependencyInvokeResponseOutput() BaseImageDependencyInvokeResponseOutput {
	return o
}

func (o BaseImageDependencyInvokeResponseOutput) ToBaseImageDependencyInvokeResponseOutputWithContext(ctx context.Context) BaseImageDependencyInvokeResponseOutput {
	return o
}

// The sha256-based digest of the image manifest.
func (o BaseImageDependencyInvokeResponseOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyInvokeResponse) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// The registry login server.
func (o BaseImageDependencyInvokeResponseOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyInvokeResponse) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

// The repository name.
func (o BaseImageDependencyInvokeResponseOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyInvokeResponse) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

// The tag name.
func (o BaseImageDependencyInvokeResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyInvokeResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// The type of the base image dependency.
func (o BaseImageDependencyInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type BaseImageDependencyInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (BaseImageDependencyInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaseImageDependencyInvokeResponse)(nil)).Elem()
}

func (o BaseImageDependencyInvokeResponseArrayOutput) ToBaseImageDependencyInvokeResponseArrayOutput() BaseImageDependencyInvokeResponseArrayOutput {
	return o
}

func (o BaseImageDependencyInvokeResponseArrayOutput) ToBaseImageDependencyInvokeResponseArrayOutputWithContext(ctx context.Context) BaseImageDependencyInvokeResponseArrayOutput {
	return o
}

func (o BaseImageDependencyInvokeResponseArrayOutput) Index(i pulumi.IntInput) BaseImageDependencyInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BaseImageDependencyInvokeResponse {
		return vs[0].([]BaseImageDependencyInvokeResponse)[vs[1].(int)]
	}).(BaseImageDependencyInvokeResponseOutput)
}

// Properties that describe a base image dependency.
type BaseImageDependencyResponse struct {
	// The sha256-based digest of the image manifest.
	Digest *string `pulumi:"digest"`
	// The registry login server.
	Registry *string `pulumi:"registry"`
	// The repository name.
	Repository *string `pulumi:"repository"`
	// The tag name.
	Tag *string `pulumi:"tag"`
	// The type of the base image dependency.
	Type *string `pulumi:"type"`
}

// BaseImageDependencyResponseInput is an input type that accepts BaseImageDependencyResponseArgs and BaseImageDependencyResponseOutput values.
// You can construct a concrete instance of `BaseImageDependencyResponseInput` via:
//
//          BaseImageDependencyResponseArgs{...}
type BaseImageDependencyResponseInput interface {
	pulumi.Input

	ToBaseImageDependencyResponseOutput() BaseImageDependencyResponseOutput
	ToBaseImageDependencyResponseOutputWithContext(context.Context) BaseImageDependencyResponseOutput
}

// Properties that describe a base image dependency.
type BaseImageDependencyResponseArgs struct {
	// The sha256-based digest of the image manifest.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// The registry login server.
	Registry pulumi.StringPtrInput `pulumi:"registry"`
	// The repository name.
	Repository pulumi.StringPtrInput `pulumi:"repository"`
	// The tag name.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// The type of the base image dependency.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (BaseImageDependencyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageDependencyResponse)(nil)).Elem()
}

func (i BaseImageDependencyResponseArgs) ToBaseImageDependencyResponseOutput() BaseImageDependencyResponseOutput {
	return i.ToBaseImageDependencyResponseOutputWithContext(context.Background())
}

func (i BaseImageDependencyResponseArgs) ToBaseImageDependencyResponseOutputWithContext(ctx context.Context) BaseImageDependencyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageDependencyResponseOutput)
}

// BaseImageDependencyResponseArrayInput is an input type that accepts BaseImageDependencyResponseArray and BaseImageDependencyResponseArrayOutput values.
// You can construct a concrete instance of `BaseImageDependencyResponseArrayInput` via:
//
//          BaseImageDependencyResponseArray{ BaseImageDependencyResponseArgs{...} }
type BaseImageDependencyResponseArrayInput interface {
	pulumi.Input

	ToBaseImageDependencyResponseArrayOutput() BaseImageDependencyResponseArrayOutput
	ToBaseImageDependencyResponseArrayOutputWithContext(context.Context) BaseImageDependencyResponseArrayOutput
}

type BaseImageDependencyResponseArray []BaseImageDependencyResponseInput

func (BaseImageDependencyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaseImageDependencyResponse)(nil)).Elem()
}

func (i BaseImageDependencyResponseArray) ToBaseImageDependencyResponseArrayOutput() BaseImageDependencyResponseArrayOutput {
	return i.ToBaseImageDependencyResponseArrayOutputWithContext(context.Background())
}

func (i BaseImageDependencyResponseArray) ToBaseImageDependencyResponseArrayOutputWithContext(ctx context.Context) BaseImageDependencyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageDependencyResponseArrayOutput)
}

// Properties that describe a base image dependency.
type BaseImageDependencyResponseOutput struct{ *pulumi.OutputState }

func (BaseImageDependencyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageDependencyResponse)(nil)).Elem()
}

func (o BaseImageDependencyResponseOutput) ToBaseImageDependencyResponseOutput() BaseImageDependencyResponseOutput {
	return o
}

func (o BaseImageDependencyResponseOutput) ToBaseImageDependencyResponseOutputWithContext(ctx context.Context) BaseImageDependencyResponseOutput {
	return o
}

// The sha256-based digest of the image manifest.
func (o BaseImageDependencyResponseOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyResponse) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// The registry login server.
func (o BaseImageDependencyResponseOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyResponse) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

// The repository name.
func (o BaseImageDependencyResponseOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyResponse) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

// The tag name.
func (o BaseImageDependencyResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// The type of the base image dependency.
func (o BaseImageDependencyResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type BaseImageDependencyResponseArrayOutput struct{ *pulumi.OutputState }

func (BaseImageDependencyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaseImageDependencyResponse)(nil)).Elem()
}

func (o BaseImageDependencyResponseArrayOutput) ToBaseImageDependencyResponseArrayOutput() BaseImageDependencyResponseArrayOutput {
	return o
}

func (o BaseImageDependencyResponseArrayOutput) ToBaseImageDependencyResponseArrayOutputWithContext(ctx context.Context) BaseImageDependencyResponseArrayOutput {
	return o
}

func (o BaseImageDependencyResponseArrayOutput) Index(i pulumi.IntInput) BaseImageDependencyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BaseImageDependencyResponse {
		return vs[0].([]BaseImageDependencyResponse)[vs[1].(int)]
	}).(BaseImageDependencyResponseOutput)
}

// The trigger based on base image dependency.
type BaseImageTrigger struct {
	// The type of the auto trigger for base image dependency updates.
	BaseImageTriggerType string `pulumi:"baseImageTriggerType"`
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
	// The endpoint URL for receiving update triggers.
	UpdateTriggerEndpoint *string `pulumi:"updateTriggerEndpoint"`
	// Type of Payload body for Base image update triggers.
	UpdateTriggerPayloadType *string `pulumi:"updateTriggerPayloadType"`
}

// BaseImageTriggerInput is an input type that accepts BaseImageTriggerArgs and BaseImageTriggerOutput values.
// You can construct a concrete instance of `BaseImageTriggerInput` via:
//
//          BaseImageTriggerArgs{...}
type BaseImageTriggerInput interface {
	pulumi.Input

	ToBaseImageTriggerOutput() BaseImageTriggerOutput
	ToBaseImageTriggerOutputWithContext(context.Context) BaseImageTriggerOutput
}

// The trigger based on base image dependency.
type BaseImageTriggerArgs struct {
	// The type of the auto trigger for base image dependency updates.
	BaseImageTriggerType pulumi.StringInput `pulumi:"baseImageTriggerType"`
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The endpoint URL for receiving update triggers.
	UpdateTriggerEndpoint pulumi.StringPtrInput `pulumi:"updateTriggerEndpoint"`
	// Type of Payload body for Base image update triggers.
	UpdateTriggerPayloadType pulumi.StringPtrInput `pulumi:"updateTriggerPayloadType"`
}

func (BaseImageTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageTrigger)(nil)).Elem()
}

func (i BaseImageTriggerArgs) ToBaseImageTriggerOutput() BaseImageTriggerOutput {
	return i.ToBaseImageTriggerOutputWithContext(context.Background())
}

func (i BaseImageTriggerArgs) ToBaseImageTriggerOutputWithContext(ctx context.Context) BaseImageTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerOutput)
}

func (i BaseImageTriggerArgs) ToBaseImageTriggerPtrOutput() BaseImageTriggerPtrOutput {
	return i.ToBaseImageTriggerPtrOutputWithContext(context.Background())
}

func (i BaseImageTriggerArgs) ToBaseImageTriggerPtrOutputWithContext(ctx context.Context) BaseImageTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerOutput).ToBaseImageTriggerPtrOutputWithContext(ctx)
}

// BaseImageTriggerPtrInput is an input type that accepts BaseImageTriggerArgs, BaseImageTriggerPtr and BaseImageTriggerPtrOutput values.
// You can construct a concrete instance of `BaseImageTriggerPtrInput` via:
//
//          BaseImageTriggerArgs{...}
//
//  or:
//
//          nil
type BaseImageTriggerPtrInput interface {
	pulumi.Input

	ToBaseImageTriggerPtrOutput() BaseImageTriggerPtrOutput
	ToBaseImageTriggerPtrOutputWithContext(context.Context) BaseImageTriggerPtrOutput
}

type baseImageTriggerPtrType BaseImageTriggerArgs

func BaseImageTriggerPtr(v *BaseImageTriggerArgs) BaseImageTriggerPtrInput {
	return (*baseImageTriggerPtrType)(v)
}

func (*baseImageTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseImageTrigger)(nil)).Elem()
}

func (i *baseImageTriggerPtrType) ToBaseImageTriggerPtrOutput() BaseImageTriggerPtrOutput {
	return i.ToBaseImageTriggerPtrOutputWithContext(context.Background())
}

func (i *baseImageTriggerPtrType) ToBaseImageTriggerPtrOutputWithContext(ctx context.Context) BaseImageTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerPtrOutput)
}

// The trigger based on base image dependency.
type BaseImageTriggerOutput struct{ *pulumi.OutputState }

func (BaseImageTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageTrigger)(nil)).Elem()
}

func (o BaseImageTriggerOutput) ToBaseImageTriggerOutput() BaseImageTriggerOutput {
	return o
}

func (o BaseImageTriggerOutput) ToBaseImageTriggerOutputWithContext(ctx context.Context) BaseImageTriggerOutput {
	return o
}

func (o BaseImageTriggerOutput) ToBaseImageTriggerPtrOutput() BaseImageTriggerPtrOutput {
	return o.ToBaseImageTriggerPtrOutputWithContext(context.Background())
}

func (o BaseImageTriggerOutput) ToBaseImageTriggerPtrOutputWithContext(ctx context.Context) BaseImageTriggerPtrOutput {
	return o.ApplyT(func(v BaseImageTrigger) *BaseImageTrigger {
		return &v
	}).(BaseImageTriggerPtrOutput)
}

// The type of the auto trigger for base image dependency updates.
func (o BaseImageTriggerOutput) BaseImageTriggerType() pulumi.StringOutput {
	return o.ApplyT(func(v BaseImageTrigger) string { return v.BaseImageTriggerType }).(pulumi.StringOutput)
}

// The name of the trigger.
func (o BaseImageTriggerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BaseImageTrigger) string { return v.Name }).(pulumi.StringOutput)
}

// The current status of trigger.
func (o BaseImageTriggerOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageTrigger) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The endpoint URL for receiving update triggers.
func (o BaseImageTriggerOutput) UpdateTriggerEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageTrigger) *string { return v.UpdateTriggerEndpoint }).(pulumi.StringPtrOutput)
}

// Type of Payload body for Base image update triggers.
func (o BaseImageTriggerOutput) UpdateTriggerPayloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageTrigger) *string { return v.UpdateTriggerPayloadType }).(pulumi.StringPtrOutput)
}

type BaseImageTriggerPtrOutput struct{ *pulumi.OutputState }

func (BaseImageTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseImageTrigger)(nil)).Elem()
}

func (o BaseImageTriggerPtrOutput) ToBaseImageTriggerPtrOutput() BaseImageTriggerPtrOutput {
	return o
}

func (o BaseImageTriggerPtrOutput) ToBaseImageTriggerPtrOutputWithContext(ctx context.Context) BaseImageTriggerPtrOutput {
	return o
}

func (o BaseImageTriggerPtrOutput) Elem() BaseImageTriggerOutput {
	return o.ApplyT(func(v *BaseImageTrigger) BaseImageTrigger { return *v }).(BaseImageTriggerOutput)
}

// The type of the auto trigger for base image dependency updates.
func (o BaseImageTriggerPtrOutput) BaseImageTriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTrigger) *string {
		if v == nil {
			return nil
		}
		return &v.BaseImageTriggerType
	}).(pulumi.StringPtrOutput)
}

// The name of the trigger.
func (o BaseImageTriggerPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTrigger) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The current status of trigger.
func (o BaseImageTriggerPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTrigger) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The endpoint URL for receiving update triggers.
func (o BaseImageTriggerPtrOutput) UpdateTriggerEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTrigger) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTriggerEndpoint
	}).(pulumi.StringPtrOutput)
}

// Type of Payload body for Base image update triggers.
func (o BaseImageTriggerPtrOutput) UpdateTriggerPayloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTrigger) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTriggerPayloadType
	}).(pulumi.StringPtrOutput)
}

// The trigger based on base image dependency.
type BaseImageTriggerInvokeResponse struct {
	// The type of the auto trigger for base image dependency updates.
	BaseImageTriggerType string `pulumi:"baseImageTriggerType"`
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
	// The endpoint URL for receiving update triggers.
	UpdateTriggerEndpoint *string `pulumi:"updateTriggerEndpoint"`
	// Type of Payload body for Base image update triggers.
	UpdateTriggerPayloadType *string `pulumi:"updateTriggerPayloadType"`
}

// BaseImageTriggerInvokeResponseInput is an input type that accepts BaseImageTriggerInvokeResponseArgs and BaseImageTriggerInvokeResponseOutput values.
// You can construct a concrete instance of `BaseImageTriggerInvokeResponseInput` via:
//
//          BaseImageTriggerInvokeResponseArgs{...}
type BaseImageTriggerInvokeResponseInput interface {
	pulumi.Input

	ToBaseImageTriggerInvokeResponseOutput() BaseImageTriggerInvokeResponseOutput
	ToBaseImageTriggerInvokeResponseOutputWithContext(context.Context) BaseImageTriggerInvokeResponseOutput
}

// The trigger based on base image dependency.
type BaseImageTriggerInvokeResponseArgs struct {
	// The type of the auto trigger for base image dependency updates.
	BaseImageTriggerType pulumi.StringInput `pulumi:"baseImageTriggerType"`
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The endpoint URL for receiving update triggers.
	UpdateTriggerEndpoint pulumi.StringPtrInput `pulumi:"updateTriggerEndpoint"`
	// Type of Payload body for Base image update triggers.
	UpdateTriggerPayloadType pulumi.StringPtrInput `pulumi:"updateTriggerPayloadType"`
}

func (BaseImageTriggerInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageTriggerInvokeResponse)(nil)).Elem()
}

func (i BaseImageTriggerInvokeResponseArgs) ToBaseImageTriggerInvokeResponseOutput() BaseImageTriggerInvokeResponseOutput {
	return i.ToBaseImageTriggerInvokeResponseOutputWithContext(context.Background())
}

func (i BaseImageTriggerInvokeResponseArgs) ToBaseImageTriggerInvokeResponseOutputWithContext(ctx context.Context) BaseImageTriggerInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerInvokeResponseOutput)
}

func (i BaseImageTriggerInvokeResponseArgs) ToBaseImageTriggerInvokeResponsePtrOutput() BaseImageTriggerInvokeResponsePtrOutput {
	return i.ToBaseImageTriggerInvokeResponsePtrOutputWithContext(context.Background())
}

func (i BaseImageTriggerInvokeResponseArgs) ToBaseImageTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerInvokeResponseOutput).ToBaseImageTriggerInvokeResponsePtrOutputWithContext(ctx)
}

// BaseImageTriggerInvokeResponsePtrInput is an input type that accepts BaseImageTriggerInvokeResponseArgs, BaseImageTriggerInvokeResponsePtr and BaseImageTriggerInvokeResponsePtrOutput values.
// You can construct a concrete instance of `BaseImageTriggerInvokeResponsePtrInput` via:
//
//          BaseImageTriggerInvokeResponseArgs{...}
//
//  or:
//
//          nil
type BaseImageTriggerInvokeResponsePtrInput interface {
	pulumi.Input

	ToBaseImageTriggerInvokeResponsePtrOutput() BaseImageTriggerInvokeResponsePtrOutput
	ToBaseImageTriggerInvokeResponsePtrOutputWithContext(context.Context) BaseImageTriggerInvokeResponsePtrOutput
}

type baseImageTriggerInvokeResponsePtrType BaseImageTriggerInvokeResponseArgs

func BaseImageTriggerInvokeResponsePtr(v *BaseImageTriggerInvokeResponseArgs) BaseImageTriggerInvokeResponsePtrInput {
	return (*baseImageTriggerInvokeResponsePtrType)(v)
}

func (*baseImageTriggerInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseImageTriggerInvokeResponse)(nil)).Elem()
}

func (i *baseImageTriggerInvokeResponsePtrType) ToBaseImageTriggerInvokeResponsePtrOutput() BaseImageTriggerInvokeResponsePtrOutput {
	return i.ToBaseImageTriggerInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *baseImageTriggerInvokeResponsePtrType) ToBaseImageTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerInvokeResponsePtrOutput)
}

// The trigger based on base image dependency.
type BaseImageTriggerInvokeResponseOutput struct{ *pulumi.OutputState }

func (BaseImageTriggerInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageTriggerInvokeResponse)(nil)).Elem()
}

func (o BaseImageTriggerInvokeResponseOutput) ToBaseImageTriggerInvokeResponseOutput() BaseImageTriggerInvokeResponseOutput {
	return o
}

func (o BaseImageTriggerInvokeResponseOutput) ToBaseImageTriggerInvokeResponseOutputWithContext(ctx context.Context) BaseImageTriggerInvokeResponseOutput {
	return o
}

func (o BaseImageTriggerInvokeResponseOutput) ToBaseImageTriggerInvokeResponsePtrOutput() BaseImageTriggerInvokeResponsePtrOutput {
	return o.ToBaseImageTriggerInvokeResponsePtrOutputWithContext(context.Background())
}

func (o BaseImageTriggerInvokeResponseOutput) ToBaseImageTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerInvokeResponsePtrOutput {
	return o.ApplyT(func(v BaseImageTriggerInvokeResponse) *BaseImageTriggerInvokeResponse {
		return &v
	}).(BaseImageTriggerInvokeResponsePtrOutput)
}

// The type of the auto trigger for base image dependency updates.
func (o BaseImageTriggerInvokeResponseOutput) BaseImageTriggerType() pulumi.StringOutput {
	return o.ApplyT(func(v BaseImageTriggerInvokeResponse) string { return v.BaseImageTriggerType }).(pulumi.StringOutput)
}

// The name of the trigger.
func (o BaseImageTriggerInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BaseImageTriggerInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The current status of trigger.
func (o BaseImageTriggerInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageTriggerInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The endpoint URL for receiving update triggers.
func (o BaseImageTriggerInvokeResponseOutput) UpdateTriggerEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageTriggerInvokeResponse) *string { return v.UpdateTriggerEndpoint }).(pulumi.StringPtrOutput)
}

// Type of Payload body for Base image update triggers.
func (o BaseImageTriggerInvokeResponseOutput) UpdateTriggerPayloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageTriggerInvokeResponse) *string { return v.UpdateTriggerPayloadType }).(pulumi.StringPtrOutput)
}

type BaseImageTriggerInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (BaseImageTriggerInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseImageTriggerInvokeResponse)(nil)).Elem()
}

func (o BaseImageTriggerInvokeResponsePtrOutput) ToBaseImageTriggerInvokeResponsePtrOutput() BaseImageTriggerInvokeResponsePtrOutput {
	return o
}

func (o BaseImageTriggerInvokeResponsePtrOutput) ToBaseImageTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerInvokeResponsePtrOutput {
	return o
}

func (o BaseImageTriggerInvokeResponsePtrOutput) Elem() BaseImageTriggerInvokeResponseOutput {
	return o.ApplyT(func(v *BaseImageTriggerInvokeResponse) BaseImageTriggerInvokeResponse { return *v }).(BaseImageTriggerInvokeResponseOutput)
}

// The type of the auto trigger for base image dependency updates.
func (o BaseImageTriggerInvokeResponsePtrOutput) BaseImageTriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BaseImageTriggerType
	}).(pulumi.StringPtrOutput)
}

// The name of the trigger.
func (o BaseImageTriggerInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The current status of trigger.
func (o BaseImageTriggerInvokeResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The endpoint URL for receiving update triggers.
func (o BaseImageTriggerInvokeResponsePtrOutput) UpdateTriggerEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTriggerEndpoint
	}).(pulumi.StringPtrOutput)
}

// Type of Payload body for Base image update triggers.
func (o BaseImageTriggerInvokeResponsePtrOutput) UpdateTriggerPayloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTriggerPayloadType
	}).(pulumi.StringPtrOutput)
}

// The trigger based on base image dependency.
type BaseImageTriggerResponse struct {
	// The type of the auto trigger for base image dependency updates.
	BaseImageTriggerType string `pulumi:"baseImageTriggerType"`
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
	// The endpoint URL for receiving update triggers.
	UpdateTriggerEndpoint *string `pulumi:"updateTriggerEndpoint"`
	// Type of Payload body for Base image update triggers.
	UpdateTriggerPayloadType *string `pulumi:"updateTriggerPayloadType"`
}

// BaseImageTriggerResponseInput is an input type that accepts BaseImageTriggerResponseArgs and BaseImageTriggerResponseOutput values.
// You can construct a concrete instance of `BaseImageTriggerResponseInput` via:
//
//          BaseImageTriggerResponseArgs{...}
type BaseImageTriggerResponseInput interface {
	pulumi.Input

	ToBaseImageTriggerResponseOutput() BaseImageTriggerResponseOutput
	ToBaseImageTriggerResponseOutputWithContext(context.Context) BaseImageTriggerResponseOutput
}

// The trigger based on base image dependency.
type BaseImageTriggerResponseArgs struct {
	// The type of the auto trigger for base image dependency updates.
	BaseImageTriggerType pulumi.StringInput `pulumi:"baseImageTriggerType"`
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The endpoint URL for receiving update triggers.
	UpdateTriggerEndpoint pulumi.StringPtrInput `pulumi:"updateTriggerEndpoint"`
	// Type of Payload body for Base image update triggers.
	UpdateTriggerPayloadType pulumi.StringPtrInput `pulumi:"updateTriggerPayloadType"`
}

func (BaseImageTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageTriggerResponse)(nil)).Elem()
}

func (i BaseImageTriggerResponseArgs) ToBaseImageTriggerResponseOutput() BaseImageTriggerResponseOutput {
	return i.ToBaseImageTriggerResponseOutputWithContext(context.Background())
}

func (i BaseImageTriggerResponseArgs) ToBaseImageTriggerResponseOutputWithContext(ctx context.Context) BaseImageTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerResponseOutput)
}

func (i BaseImageTriggerResponseArgs) ToBaseImageTriggerResponsePtrOutput() BaseImageTriggerResponsePtrOutput {
	return i.ToBaseImageTriggerResponsePtrOutputWithContext(context.Background())
}

func (i BaseImageTriggerResponseArgs) ToBaseImageTriggerResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerResponseOutput).ToBaseImageTriggerResponsePtrOutputWithContext(ctx)
}

// BaseImageTriggerResponsePtrInput is an input type that accepts BaseImageTriggerResponseArgs, BaseImageTriggerResponsePtr and BaseImageTriggerResponsePtrOutput values.
// You can construct a concrete instance of `BaseImageTriggerResponsePtrInput` via:
//
//          BaseImageTriggerResponseArgs{...}
//
//  or:
//
//          nil
type BaseImageTriggerResponsePtrInput interface {
	pulumi.Input

	ToBaseImageTriggerResponsePtrOutput() BaseImageTriggerResponsePtrOutput
	ToBaseImageTriggerResponsePtrOutputWithContext(context.Context) BaseImageTriggerResponsePtrOutput
}

type baseImageTriggerResponsePtrType BaseImageTriggerResponseArgs

func BaseImageTriggerResponsePtr(v *BaseImageTriggerResponseArgs) BaseImageTriggerResponsePtrInput {
	return (*baseImageTriggerResponsePtrType)(v)
}

func (*baseImageTriggerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseImageTriggerResponse)(nil)).Elem()
}

func (i *baseImageTriggerResponsePtrType) ToBaseImageTriggerResponsePtrOutput() BaseImageTriggerResponsePtrOutput {
	return i.ToBaseImageTriggerResponsePtrOutputWithContext(context.Background())
}

func (i *baseImageTriggerResponsePtrType) ToBaseImageTriggerResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerResponsePtrOutput)
}

// The trigger based on base image dependency.
type BaseImageTriggerResponseOutput struct{ *pulumi.OutputState }

func (BaseImageTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageTriggerResponse)(nil)).Elem()
}

func (o BaseImageTriggerResponseOutput) ToBaseImageTriggerResponseOutput() BaseImageTriggerResponseOutput {
	return o
}

func (o BaseImageTriggerResponseOutput) ToBaseImageTriggerResponseOutputWithContext(ctx context.Context) BaseImageTriggerResponseOutput {
	return o
}

func (o BaseImageTriggerResponseOutput) ToBaseImageTriggerResponsePtrOutput() BaseImageTriggerResponsePtrOutput {
	return o.ToBaseImageTriggerResponsePtrOutputWithContext(context.Background())
}

func (o BaseImageTriggerResponseOutput) ToBaseImageTriggerResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerResponsePtrOutput {
	return o.ApplyT(func(v BaseImageTriggerResponse) *BaseImageTriggerResponse {
		return &v
	}).(BaseImageTriggerResponsePtrOutput)
}

// The type of the auto trigger for base image dependency updates.
func (o BaseImageTriggerResponseOutput) BaseImageTriggerType() pulumi.StringOutput {
	return o.ApplyT(func(v BaseImageTriggerResponse) string { return v.BaseImageTriggerType }).(pulumi.StringOutput)
}

// The name of the trigger.
func (o BaseImageTriggerResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BaseImageTriggerResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The current status of trigger.
func (o BaseImageTriggerResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageTriggerResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The endpoint URL for receiving update triggers.
func (o BaseImageTriggerResponseOutput) UpdateTriggerEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageTriggerResponse) *string { return v.UpdateTriggerEndpoint }).(pulumi.StringPtrOutput)
}

// Type of Payload body for Base image update triggers.
func (o BaseImageTriggerResponseOutput) UpdateTriggerPayloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageTriggerResponse) *string { return v.UpdateTriggerPayloadType }).(pulumi.StringPtrOutput)
}

type BaseImageTriggerResponsePtrOutput struct{ *pulumi.OutputState }

func (BaseImageTriggerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseImageTriggerResponse)(nil)).Elem()
}

func (o BaseImageTriggerResponsePtrOutput) ToBaseImageTriggerResponsePtrOutput() BaseImageTriggerResponsePtrOutput {
	return o
}

func (o BaseImageTriggerResponsePtrOutput) ToBaseImageTriggerResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerResponsePtrOutput {
	return o
}

func (o BaseImageTriggerResponsePtrOutput) Elem() BaseImageTriggerResponseOutput {
	return o.ApplyT(func(v *BaseImageTriggerResponse) BaseImageTriggerResponse { return *v }).(BaseImageTriggerResponseOutput)
}

// The type of the auto trigger for base image dependency updates.
func (o BaseImageTriggerResponsePtrOutput) BaseImageTriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BaseImageTriggerType
	}).(pulumi.StringPtrOutput)
}

// The name of the trigger.
func (o BaseImageTriggerResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The current status of trigger.
func (o BaseImageTriggerResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The endpoint URL for receiving update triggers.
func (o BaseImageTriggerResponsePtrOutput) UpdateTriggerEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTriggerEndpoint
	}).(pulumi.StringPtrOutput)
}

// Type of Payload body for Base image update triggers.
func (o BaseImageTriggerResponsePtrOutput) UpdateTriggerPayloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTriggerPayloadType
	}).(pulumi.StringPtrOutput)
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type Credentials struct {
	// Describes the credential parameters for accessing other custom registries. The key
	// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
	// the value of the item will be the registry credentials for accessing the registry.
	CustomRegistries map[string]CustomRegistryCredentials `pulumi:"customRegistries"`
	// Describes the credential parameters for accessing the source registry.
	SourceRegistry *SourceRegistryCredentials `pulumi:"sourceRegistry"`
}

// CredentialsInput is an input type that accepts CredentialsArgs and CredentialsOutput values.
// You can construct a concrete instance of `CredentialsInput` via:
//
//          CredentialsArgs{...}
type CredentialsInput interface {
	pulumi.Input

	ToCredentialsOutput() CredentialsOutput
	ToCredentialsOutputWithContext(context.Context) CredentialsOutput
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsArgs struct {
	// Describes the credential parameters for accessing other custom registries. The key
	// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
	// the value of the item will be the registry credentials for accessing the registry.
	CustomRegistries CustomRegistryCredentialsMapInput `pulumi:"customRegistries"`
	// Describes the credential parameters for accessing the source registry.
	SourceRegistry SourceRegistryCredentialsPtrInput `pulumi:"sourceRegistry"`
}

func (CredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Credentials)(nil)).Elem()
}

func (i CredentialsArgs) ToCredentialsOutput() CredentialsOutput {
	return i.ToCredentialsOutputWithContext(context.Background())
}

func (i CredentialsArgs) ToCredentialsOutputWithContext(ctx context.Context) CredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsOutput)
}

func (i CredentialsArgs) ToCredentialsPtrOutput() CredentialsPtrOutput {
	return i.ToCredentialsPtrOutputWithContext(context.Background())
}

func (i CredentialsArgs) ToCredentialsPtrOutputWithContext(ctx context.Context) CredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsOutput).ToCredentialsPtrOutputWithContext(ctx)
}

// CredentialsPtrInput is an input type that accepts CredentialsArgs, CredentialsPtr and CredentialsPtrOutput values.
// You can construct a concrete instance of `CredentialsPtrInput` via:
//
//          CredentialsArgs{...}
//
//  or:
//
//          nil
type CredentialsPtrInput interface {
	pulumi.Input

	ToCredentialsPtrOutput() CredentialsPtrOutput
	ToCredentialsPtrOutputWithContext(context.Context) CredentialsPtrOutput
}

type credentialsPtrType CredentialsArgs

func CredentialsPtr(v *CredentialsArgs) CredentialsPtrInput {
	return (*credentialsPtrType)(v)
}

func (*credentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Credentials)(nil)).Elem()
}

func (i *credentialsPtrType) ToCredentialsPtrOutput() CredentialsPtrOutput {
	return i.ToCredentialsPtrOutputWithContext(context.Background())
}

func (i *credentialsPtrType) ToCredentialsPtrOutputWithContext(ctx context.Context) CredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsPtrOutput)
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsOutput struct{ *pulumi.OutputState }

func (CredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Credentials)(nil)).Elem()
}

func (o CredentialsOutput) ToCredentialsOutput() CredentialsOutput {
	return o
}

func (o CredentialsOutput) ToCredentialsOutputWithContext(ctx context.Context) CredentialsOutput {
	return o
}

func (o CredentialsOutput) ToCredentialsPtrOutput() CredentialsPtrOutput {
	return o.ToCredentialsPtrOutputWithContext(context.Background())
}

func (o CredentialsOutput) ToCredentialsPtrOutputWithContext(ctx context.Context) CredentialsPtrOutput {
	return o.ApplyT(func(v Credentials) *Credentials {
		return &v
	}).(CredentialsPtrOutput)
}

// Describes the credential parameters for accessing other custom registries. The key
// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
// the value of the item will be the registry credentials for accessing the registry.
func (o CredentialsOutput) CustomRegistries() CustomRegistryCredentialsMapOutput {
	return o.ApplyT(func(v Credentials) map[string]CustomRegistryCredentials { return v.CustomRegistries }).(CustomRegistryCredentialsMapOutput)
}

// Describes the credential parameters for accessing the source registry.
func (o CredentialsOutput) SourceRegistry() SourceRegistryCredentialsPtrOutput {
	return o.ApplyT(func(v Credentials) *SourceRegistryCredentials { return v.SourceRegistry }).(SourceRegistryCredentialsPtrOutput)
}

type CredentialsPtrOutput struct{ *pulumi.OutputState }

func (CredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Credentials)(nil)).Elem()
}

func (o CredentialsPtrOutput) ToCredentialsPtrOutput() CredentialsPtrOutput {
	return o
}

func (o CredentialsPtrOutput) ToCredentialsPtrOutputWithContext(ctx context.Context) CredentialsPtrOutput {
	return o
}

func (o CredentialsPtrOutput) Elem() CredentialsOutput {
	return o.ApplyT(func(v *Credentials) Credentials { return *v }).(CredentialsOutput)
}

// Describes the credential parameters for accessing other custom registries. The key
// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
// the value of the item will be the registry credentials for accessing the registry.
func (o CredentialsPtrOutput) CustomRegistries() CustomRegistryCredentialsMapOutput {
	return o.ApplyT(func(v *Credentials) map[string]CustomRegistryCredentials {
		if v == nil {
			return nil
		}
		return v.CustomRegistries
	}).(CustomRegistryCredentialsMapOutput)
}

// Describes the credential parameters for accessing the source registry.
func (o CredentialsPtrOutput) SourceRegistry() SourceRegistryCredentialsPtrOutput {
	return o.ApplyT(func(v *Credentials) *SourceRegistryCredentials {
		if v == nil {
			return nil
		}
		return v.SourceRegistry
	}).(SourceRegistryCredentialsPtrOutput)
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsInvokeResponse struct {
	// Describes the credential parameters for accessing other custom registries. The key
	// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
	// the value of the item will be the registry credentials for accessing the registry.
	CustomRegistries map[string]CustomRegistryCredentialsInvokeResponse `pulumi:"customRegistries"`
	// Describes the credential parameters for accessing the source registry.
	SourceRegistry *SourceRegistryCredentialsInvokeResponse `pulumi:"sourceRegistry"`
}

// CredentialsInvokeResponseInput is an input type that accepts CredentialsInvokeResponseArgs and CredentialsInvokeResponseOutput values.
// You can construct a concrete instance of `CredentialsInvokeResponseInput` via:
//
//          CredentialsInvokeResponseArgs{...}
type CredentialsInvokeResponseInput interface {
	pulumi.Input

	ToCredentialsInvokeResponseOutput() CredentialsInvokeResponseOutput
	ToCredentialsInvokeResponseOutputWithContext(context.Context) CredentialsInvokeResponseOutput
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsInvokeResponseArgs struct {
	// Describes the credential parameters for accessing other custom registries. The key
	// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
	// the value of the item will be the registry credentials for accessing the registry.
	CustomRegistries CustomRegistryCredentialsInvokeResponseMapInput `pulumi:"customRegistries"`
	// Describes the credential parameters for accessing the source registry.
	SourceRegistry SourceRegistryCredentialsInvokeResponsePtrInput `pulumi:"sourceRegistry"`
}

func (CredentialsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialsInvokeResponse)(nil)).Elem()
}

func (i CredentialsInvokeResponseArgs) ToCredentialsInvokeResponseOutput() CredentialsInvokeResponseOutput {
	return i.ToCredentialsInvokeResponseOutputWithContext(context.Background())
}

func (i CredentialsInvokeResponseArgs) ToCredentialsInvokeResponseOutputWithContext(ctx context.Context) CredentialsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsInvokeResponseOutput)
}

func (i CredentialsInvokeResponseArgs) ToCredentialsInvokeResponsePtrOutput() CredentialsInvokeResponsePtrOutput {
	return i.ToCredentialsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i CredentialsInvokeResponseArgs) ToCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) CredentialsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsInvokeResponseOutput).ToCredentialsInvokeResponsePtrOutputWithContext(ctx)
}

// CredentialsInvokeResponsePtrInput is an input type that accepts CredentialsInvokeResponseArgs, CredentialsInvokeResponsePtr and CredentialsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `CredentialsInvokeResponsePtrInput` via:
//
//          CredentialsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type CredentialsInvokeResponsePtrInput interface {
	pulumi.Input

	ToCredentialsInvokeResponsePtrOutput() CredentialsInvokeResponsePtrOutput
	ToCredentialsInvokeResponsePtrOutputWithContext(context.Context) CredentialsInvokeResponsePtrOutput
}

type credentialsInvokeResponsePtrType CredentialsInvokeResponseArgs

func CredentialsInvokeResponsePtr(v *CredentialsInvokeResponseArgs) CredentialsInvokeResponsePtrInput {
	return (*credentialsInvokeResponsePtrType)(v)
}

func (*credentialsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CredentialsInvokeResponse)(nil)).Elem()
}

func (i *credentialsInvokeResponsePtrType) ToCredentialsInvokeResponsePtrOutput() CredentialsInvokeResponsePtrOutput {
	return i.ToCredentialsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *credentialsInvokeResponsePtrType) ToCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) CredentialsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsInvokeResponsePtrOutput)
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsInvokeResponseOutput struct{ *pulumi.OutputState }

func (CredentialsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialsInvokeResponse)(nil)).Elem()
}

func (o CredentialsInvokeResponseOutput) ToCredentialsInvokeResponseOutput() CredentialsInvokeResponseOutput {
	return o
}

func (o CredentialsInvokeResponseOutput) ToCredentialsInvokeResponseOutputWithContext(ctx context.Context) CredentialsInvokeResponseOutput {
	return o
}

func (o CredentialsInvokeResponseOutput) ToCredentialsInvokeResponsePtrOutput() CredentialsInvokeResponsePtrOutput {
	return o.ToCredentialsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o CredentialsInvokeResponseOutput) ToCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) CredentialsInvokeResponsePtrOutput {
	return o.ApplyT(func(v CredentialsInvokeResponse) *CredentialsInvokeResponse {
		return &v
	}).(CredentialsInvokeResponsePtrOutput)
}

// Describes the credential parameters for accessing other custom registries. The key
// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
// the value of the item will be the registry credentials for accessing the registry.
func (o CredentialsInvokeResponseOutput) CustomRegistries() CustomRegistryCredentialsInvokeResponseMapOutput {
	return o.ApplyT(func(v CredentialsInvokeResponse) map[string]CustomRegistryCredentialsInvokeResponse {
		return v.CustomRegistries
	}).(CustomRegistryCredentialsInvokeResponseMapOutput)
}

// Describes the credential parameters for accessing the source registry.
func (o CredentialsInvokeResponseOutput) SourceRegistry() SourceRegistryCredentialsInvokeResponsePtrOutput {
	return o.ApplyT(func(v CredentialsInvokeResponse) *SourceRegistryCredentialsInvokeResponse { return v.SourceRegistry }).(SourceRegistryCredentialsInvokeResponsePtrOutput)
}

type CredentialsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (CredentialsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CredentialsInvokeResponse)(nil)).Elem()
}

func (o CredentialsInvokeResponsePtrOutput) ToCredentialsInvokeResponsePtrOutput() CredentialsInvokeResponsePtrOutput {
	return o
}

func (o CredentialsInvokeResponsePtrOutput) ToCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) CredentialsInvokeResponsePtrOutput {
	return o
}

func (o CredentialsInvokeResponsePtrOutput) Elem() CredentialsInvokeResponseOutput {
	return o.ApplyT(func(v *CredentialsInvokeResponse) CredentialsInvokeResponse { return *v }).(CredentialsInvokeResponseOutput)
}

// Describes the credential parameters for accessing other custom registries. The key
// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
// the value of the item will be the registry credentials for accessing the registry.
func (o CredentialsInvokeResponsePtrOutput) CustomRegistries() CustomRegistryCredentialsInvokeResponseMapOutput {
	return o.ApplyT(func(v *CredentialsInvokeResponse) map[string]CustomRegistryCredentialsInvokeResponse {
		if v == nil {
			return nil
		}
		return v.CustomRegistries
	}).(CustomRegistryCredentialsInvokeResponseMapOutput)
}

// Describes the credential parameters for accessing the source registry.
func (o CredentialsInvokeResponsePtrOutput) SourceRegistry() SourceRegistryCredentialsInvokeResponsePtrOutput {
	return o.ApplyT(func(v *CredentialsInvokeResponse) *SourceRegistryCredentialsInvokeResponse {
		if v == nil {
			return nil
		}
		return v.SourceRegistry
	}).(SourceRegistryCredentialsInvokeResponsePtrOutput)
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsResponse struct {
	// Describes the credential parameters for accessing other custom registries. The key
	// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
	// the value of the item will be the registry credentials for accessing the registry.
	CustomRegistries map[string]CustomRegistryCredentialsResponse `pulumi:"customRegistries"`
	// Describes the credential parameters for accessing the source registry.
	SourceRegistry *SourceRegistryCredentialsResponse `pulumi:"sourceRegistry"`
}

// CredentialsResponseInput is an input type that accepts CredentialsResponseArgs and CredentialsResponseOutput values.
// You can construct a concrete instance of `CredentialsResponseInput` via:
//
//          CredentialsResponseArgs{...}
type CredentialsResponseInput interface {
	pulumi.Input

	ToCredentialsResponseOutput() CredentialsResponseOutput
	ToCredentialsResponseOutputWithContext(context.Context) CredentialsResponseOutput
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsResponseArgs struct {
	// Describes the credential parameters for accessing other custom registries. The key
	// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
	// the value of the item will be the registry credentials for accessing the registry.
	CustomRegistries CustomRegistryCredentialsResponseMapInput `pulumi:"customRegistries"`
	// Describes the credential parameters for accessing the source registry.
	SourceRegistry SourceRegistryCredentialsResponsePtrInput `pulumi:"sourceRegistry"`
}

func (CredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialsResponse)(nil)).Elem()
}

func (i CredentialsResponseArgs) ToCredentialsResponseOutput() CredentialsResponseOutput {
	return i.ToCredentialsResponseOutputWithContext(context.Background())
}

func (i CredentialsResponseArgs) ToCredentialsResponseOutputWithContext(ctx context.Context) CredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsResponseOutput)
}

func (i CredentialsResponseArgs) ToCredentialsResponsePtrOutput() CredentialsResponsePtrOutput {
	return i.ToCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i CredentialsResponseArgs) ToCredentialsResponsePtrOutputWithContext(ctx context.Context) CredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsResponseOutput).ToCredentialsResponsePtrOutputWithContext(ctx)
}

// CredentialsResponsePtrInput is an input type that accepts CredentialsResponseArgs, CredentialsResponsePtr and CredentialsResponsePtrOutput values.
// You can construct a concrete instance of `CredentialsResponsePtrInput` via:
//
//          CredentialsResponseArgs{...}
//
//  or:
//
//          nil
type CredentialsResponsePtrInput interface {
	pulumi.Input

	ToCredentialsResponsePtrOutput() CredentialsResponsePtrOutput
	ToCredentialsResponsePtrOutputWithContext(context.Context) CredentialsResponsePtrOutput
}

type credentialsResponsePtrType CredentialsResponseArgs

func CredentialsResponsePtr(v *CredentialsResponseArgs) CredentialsResponsePtrInput {
	return (*credentialsResponsePtrType)(v)
}

func (*credentialsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CredentialsResponse)(nil)).Elem()
}

func (i *credentialsResponsePtrType) ToCredentialsResponsePtrOutput() CredentialsResponsePtrOutput {
	return i.ToCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i *credentialsResponsePtrType) ToCredentialsResponsePtrOutputWithContext(ctx context.Context) CredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsResponsePtrOutput)
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsResponseOutput struct{ *pulumi.OutputState }

func (CredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialsResponse)(nil)).Elem()
}

func (o CredentialsResponseOutput) ToCredentialsResponseOutput() CredentialsResponseOutput {
	return o
}

func (o CredentialsResponseOutput) ToCredentialsResponseOutputWithContext(ctx context.Context) CredentialsResponseOutput {
	return o
}

func (o CredentialsResponseOutput) ToCredentialsResponsePtrOutput() CredentialsResponsePtrOutput {
	return o.ToCredentialsResponsePtrOutputWithContext(context.Background())
}

func (o CredentialsResponseOutput) ToCredentialsResponsePtrOutputWithContext(ctx context.Context) CredentialsResponsePtrOutput {
	return o.ApplyT(func(v CredentialsResponse) *CredentialsResponse {
		return &v
	}).(CredentialsResponsePtrOutput)
}

// Describes the credential parameters for accessing other custom registries. The key
// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
// the value of the item will be the registry credentials for accessing the registry.
func (o CredentialsResponseOutput) CustomRegistries() CustomRegistryCredentialsResponseMapOutput {
	return o.ApplyT(func(v CredentialsResponse) map[string]CustomRegistryCredentialsResponse { return v.CustomRegistries }).(CustomRegistryCredentialsResponseMapOutput)
}

// Describes the credential parameters for accessing the source registry.
func (o CredentialsResponseOutput) SourceRegistry() SourceRegistryCredentialsResponsePtrOutput {
	return o.ApplyT(func(v CredentialsResponse) *SourceRegistryCredentialsResponse { return v.SourceRegistry }).(SourceRegistryCredentialsResponsePtrOutput)
}

type CredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (CredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CredentialsResponse)(nil)).Elem()
}

func (o CredentialsResponsePtrOutput) ToCredentialsResponsePtrOutput() CredentialsResponsePtrOutput {
	return o
}

func (o CredentialsResponsePtrOutput) ToCredentialsResponsePtrOutputWithContext(ctx context.Context) CredentialsResponsePtrOutput {
	return o
}

func (o CredentialsResponsePtrOutput) Elem() CredentialsResponseOutput {
	return o.ApplyT(func(v *CredentialsResponse) CredentialsResponse { return *v }).(CredentialsResponseOutput)
}

// Describes the credential parameters for accessing other custom registries. The key
// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
// the value of the item will be the registry credentials for accessing the registry.
func (o CredentialsResponsePtrOutput) CustomRegistries() CustomRegistryCredentialsResponseMapOutput {
	return o.ApplyT(func(v *CredentialsResponse) map[string]CustomRegistryCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.CustomRegistries
	}).(CustomRegistryCredentialsResponseMapOutput)
}

// Describes the credential parameters for accessing the source registry.
func (o CredentialsResponsePtrOutput) SourceRegistry() SourceRegistryCredentialsResponsePtrOutput {
	return o.ApplyT(func(v *CredentialsResponse) *SourceRegistryCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.SourceRegistry
	}).(SourceRegistryCredentialsResponsePtrOutput)
}

// Describes the credentials that will be used to access a custom registry during a run.
type CustomRegistryCredentials struct {
	// Indicates the managed identity assigned to the custom credential. If a user-assigned identity
	// this value is the Client ID. If a system-assigned identity, the value will be `system`. In
	// the case of a system-assigned identity, the Client ID will be determined by the runner. This
	// identity may be used to authenticate to key vault to retrieve credentials or it may be the only
	// source of authentication used for accessing the registry.
	Identity *string `pulumi:"identity"`
	// The password for logging into the custom registry. The password is a secret
	// object that allows multiple ways of providing the value for it.
	Password *SecretObject `pulumi:"password"`
	// The username for logging into the custom registry.
	UserName *SecretObject `pulumi:"userName"`
}

// CustomRegistryCredentialsInput is an input type that accepts CustomRegistryCredentialsArgs and CustomRegistryCredentialsOutput values.
// You can construct a concrete instance of `CustomRegistryCredentialsInput` via:
//
//          CustomRegistryCredentialsArgs{...}
type CustomRegistryCredentialsInput interface {
	pulumi.Input

	ToCustomRegistryCredentialsOutput() CustomRegistryCredentialsOutput
	ToCustomRegistryCredentialsOutputWithContext(context.Context) CustomRegistryCredentialsOutput
}

// Describes the credentials that will be used to access a custom registry during a run.
type CustomRegistryCredentialsArgs struct {
	// Indicates the managed identity assigned to the custom credential. If a user-assigned identity
	// this value is the Client ID. If a system-assigned identity, the value will be `system`. In
	// the case of a system-assigned identity, the Client ID will be determined by the runner. This
	// identity may be used to authenticate to key vault to retrieve credentials or it may be the only
	// source of authentication used for accessing the registry.
	Identity pulumi.StringPtrInput `pulumi:"identity"`
	// The password for logging into the custom registry. The password is a secret
	// object that allows multiple ways of providing the value for it.
	Password SecretObjectPtrInput `pulumi:"password"`
	// The username for logging into the custom registry.
	UserName SecretObjectPtrInput `pulumi:"userName"`
}

func (CustomRegistryCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRegistryCredentials)(nil)).Elem()
}

func (i CustomRegistryCredentialsArgs) ToCustomRegistryCredentialsOutput() CustomRegistryCredentialsOutput {
	return i.ToCustomRegistryCredentialsOutputWithContext(context.Background())
}

func (i CustomRegistryCredentialsArgs) ToCustomRegistryCredentialsOutputWithContext(ctx context.Context) CustomRegistryCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRegistryCredentialsOutput)
}

// CustomRegistryCredentialsMapInput is an input type that accepts CustomRegistryCredentialsMap and CustomRegistryCredentialsMapOutput values.
// You can construct a concrete instance of `CustomRegistryCredentialsMapInput` via:
//
//          CustomRegistryCredentialsMap{ "key": CustomRegistryCredentialsArgs{...} }
type CustomRegistryCredentialsMapInput interface {
	pulumi.Input

	ToCustomRegistryCredentialsMapOutput() CustomRegistryCredentialsMapOutput
	ToCustomRegistryCredentialsMapOutputWithContext(context.Context) CustomRegistryCredentialsMapOutput
}

type CustomRegistryCredentialsMap map[string]CustomRegistryCredentialsInput

func (CustomRegistryCredentialsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CustomRegistryCredentials)(nil)).Elem()
}

func (i CustomRegistryCredentialsMap) ToCustomRegistryCredentialsMapOutput() CustomRegistryCredentialsMapOutput {
	return i.ToCustomRegistryCredentialsMapOutputWithContext(context.Background())
}

func (i CustomRegistryCredentialsMap) ToCustomRegistryCredentialsMapOutputWithContext(ctx context.Context) CustomRegistryCredentialsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRegistryCredentialsMapOutput)
}

// Describes the credentials that will be used to access a custom registry during a run.
type CustomRegistryCredentialsOutput struct{ *pulumi.OutputState }

func (CustomRegistryCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRegistryCredentials)(nil)).Elem()
}

func (o CustomRegistryCredentialsOutput) ToCustomRegistryCredentialsOutput() CustomRegistryCredentialsOutput {
	return o
}

func (o CustomRegistryCredentialsOutput) ToCustomRegistryCredentialsOutputWithContext(ctx context.Context) CustomRegistryCredentialsOutput {
	return o
}

// Indicates the managed identity assigned to the custom credential. If a user-assigned identity
// this value is the Client ID. If a system-assigned identity, the value will be `system`. In
// the case of a system-assigned identity, the Client ID will be determined by the runner. This
// identity may be used to authenticate to key vault to retrieve credentials or it may be the only
// source of authentication used for accessing the registry.
func (o CustomRegistryCredentialsOutput) Identity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRegistryCredentials) *string { return v.Identity }).(pulumi.StringPtrOutput)
}

// The password for logging into the custom registry. The password is a secret
// object that allows multiple ways of providing the value for it.
func (o CustomRegistryCredentialsOutput) Password() SecretObjectPtrOutput {
	return o.ApplyT(func(v CustomRegistryCredentials) *SecretObject { return v.Password }).(SecretObjectPtrOutput)
}

// The username for logging into the custom registry.
func (o CustomRegistryCredentialsOutput) UserName() SecretObjectPtrOutput {
	return o.ApplyT(func(v CustomRegistryCredentials) *SecretObject { return v.UserName }).(SecretObjectPtrOutput)
}

type CustomRegistryCredentialsMapOutput struct{ *pulumi.OutputState }

func (CustomRegistryCredentialsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CustomRegistryCredentials)(nil)).Elem()
}

func (o CustomRegistryCredentialsMapOutput) ToCustomRegistryCredentialsMapOutput() CustomRegistryCredentialsMapOutput {
	return o
}

func (o CustomRegistryCredentialsMapOutput) ToCustomRegistryCredentialsMapOutputWithContext(ctx context.Context) CustomRegistryCredentialsMapOutput {
	return o
}

func (o CustomRegistryCredentialsMapOutput) MapIndex(k pulumi.StringInput) CustomRegistryCredentialsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CustomRegistryCredentials {
		return vs[0].(map[string]CustomRegistryCredentials)[vs[1].(string)]
	}).(CustomRegistryCredentialsOutput)
}

// Describes the credentials that will be used to access a custom registry during a run.
type CustomRegistryCredentialsInvokeResponse struct {
	// Indicates the managed identity assigned to the custom credential. If a user-assigned identity
	// this value is the Client ID. If a system-assigned identity, the value will be `system`. In
	// the case of a system-assigned identity, the Client ID will be determined by the runner. This
	// identity may be used to authenticate to key vault to retrieve credentials or it may be the only
	// source of authentication used for accessing the registry.
	Identity *string `pulumi:"identity"`
	// The password for logging into the custom registry. The password is a secret
	// object that allows multiple ways of providing the value for it.
	Password *SecretObjectInvokeResponse `pulumi:"password"`
	// The username for logging into the custom registry.
	UserName *SecretObjectInvokeResponse `pulumi:"userName"`
}

// CustomRegistryCredentialsInvokeResponseInput is an input type that accepts CustomRegistryCredentialsInvokeResponseArgs and CustomRegistryCredentialsInvokeResponseOutput values.
// You can construct a concrete instance of `CustomRegistryCredentialsInvokeResponseInput` via:
//
//          CustomRegistryCredentialsInvokeResponseArgs{...}
type CustomRegistryCredentialsInvokeResponseInput interface {
	pulumi.Input

	ToCustomRegistryCredentialsInvokeResponseOutput() CustomRegistryCredentialsInvokeResponseOutput
	ToCustomRegistryCredentialsInvokeResponseOutputWithContext(context.Context) CustomRegistryCredentialsInvokeResponseOutput
}

// Describes the credentials that will be used to access a custom registry during a run.
type CustomRegistryCredentialsInvokeResponseArgs struct {
	// Indicates the managed identity assigned to the custom credential. If a user-assigned identity
	// this value is the Client ID. If a system-assigned identity, the value will be `system`. In
	// the case of a system-assigned identity, the Client ID will be determined by the runner. This
	// identity may be used to authenticate to key vault to retrieve credentials or it may be the only
	// source of authentication used for accessing the registry.
	Identity pulumi.StringPtrInput `pulumi:"identity"`
	// The password for logging into the custom registry. The password is a secret
	// object that allows multiple ways of providing the value for it.
	Password SecretObjectInvokeResponsePtrInput `pulumi:"password"`
	// The username for logging into the custom registry.
	UserName SecretObjectInvokeResponsePtrInput `pulumi:"userName"`
}

func (CustomRegistryCredentialsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRegistryCredentialsInvokeResponse)(nil)).Elem()
}

func (i CustomRegistryCredentialsInvokeResponseArgs) ToCustomRegistryCredentialsInvokeResponseOutput() CustomRegistryCredentialsInvokeResponseOutput {
	return i.ToCustomRegistryCredentialsInvokeResponseOutputWithContext(context.Background())
}

func (i CustomRegistryCredentialsInvokeResponseArgs) ToCustomRegistryCredentialsInvokeResponseOutputWithContext(ctx context.Context) CustomRegistryCredentialsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRegistryCredentialsInvokeResponseOutput)
}

// CustomRegistryCredentialsInvokeResponseMapInput is an input type that accepts CustomRegistryCredentialsInvokeResponseMap and CustomRegistryCredentialsInvokeResponseMapOutput values.
// You can construct a concrete instance of `CustomRegistryCredentialsInvokeResponseMapInput` via:
//
//          CustomRegistryCredentialsInvokeResponseMap{ "key": CustomRegistryCredentialsInvokeResponseArgs{...} }
type CustomRegistryCredentialsInvokeResponseMapInput interface {
	pulumi.Input

	ToCustomRegistryCredentialsInvokeResponseMapOutput() CustomRegistryCredentialsInvokeResponseMapOutput
	ToCustomRegistryCredentialsInvokeResponseMapOutputWithContext(context.Context) CustomRegistryCredentialsInvokeResponseMapOutput
}

type CustomRegistryCredentialsInvokeResponseMap map[string]CustomRegistryCredentialsInvokeResponseInput

func (CustomRegistryCredentialsInvokeResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CustomRegistryCredentialsInvokeResponse)(nil)).Elem()
}

func (i CustomRegistryCredentialsInvokeResponseMap) ToCustomRegistryCredentialsInvokeResponseMapOutput() CustomRegistryCredentialsInvokeResponseMapOutput {
	return i.ToCustomRegistryCredentialsInvokeResponseMapOutputWithContext(context.Background())
}

func (i CustomRegistryCredentialsInvokeResponseMap) ToCustomRegistryCredentialsInvokeResponseMapOutputWithContext(ctx context.Context) CustomRegistryCredentialsInvokeResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRegistryCredentialsInvokeResponseMapOutput)
}

// Describes the credentials that will be used to access a custom registry during a run.
type CustomRegistryCredentialsInvokeResponseOutput struct{ *pulumi.OutputState }

func (CustomRegistryCredentialsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRegistryCredentialsInvokeResponse)(nil)).Elem()
}

func (o CustomRegistryCredentialsInvokeResponseOutput) ToCustomRegistryCredentialsInvokeResponseOutput() CustomRegistryCredentialsInvokeResponseOutput {
	return o
}

func (o CustomRegistryCredentialsInvokeResponseOutput) ToCustomRegistryCredentialsInvokeResponseOutputWithContext(ctx context.Context) CustomRegistryCredentialsInvokeResponseOutput {
	return o
}

// Indicates the managed identity assigned to the custom credential. If a user-assigned identity
// this value is the Client ID. If a system-assigned identity, the value will be `system`. In
// the case of a system-assigned identity, the Client ID will be determined by the runner. This
// identity may be used to authenticate to key vault to retrieve credentials or it may be the only
// source of authentication used for accessing the registry.
func (o CustomRegistryCredentialsInvokeResponseOutput) Identity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRegistryCredentialsInvokeResponse) *string { return v.Identity }).(pulumi.StringPtrOutput)
}

// The password for logging into the custom registry. The password is a secret
// object that allows multiple ways of providing the value for it.
func (o CustomRegistryCredentialsInvokeResponseOutput) Password() SecretObjectInvokeResponsePtrOutput {
	return o.ApplyT(func(v CustomRegistryCredentialsInvokeResponse) *SecretObjectInvokeResponse { return v.Password }).(SecretObjectInvokeResponsePtrOutput)
}

// The username for logging into the custom registry.
func (o CustomRegistryCredentialsInvokeResponseOutput) UserName() SecretObjectInvokeResponsePtrOutput {
	return o.ApplyT(func(v CustomRegistryCredentialsInvokeResponse) *SecretObjectInvokeResponse { return v.UserName }).(SecretObjectInvokeResponsePtrOutput)
}

type CustomRegistryCredentialsInvokeResponseMapOutput struct{ *pulumi.OutputState }

func (CustomRegistryCredentialsInvokeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CustomRegistryCredentialsInvokeResponse)(nil)).Elem()
}

func (o CustomRegistryCredentialsInvokeResponseMapOutput) ToCustomRegistryCredentialsInvokeResponseMapOutput() CustomRegistryCredentialsInvokeResponseMapOutput {
	return o
}

func (o CustomRegistryCredentialsInvokeResponseMapOutput) ToCustomRegistryCredentialsInvokeResponseMapOutputWithContext(ctx context.Context) CustomRegistryCredentialsInvokeResponseMapOutput {
	return o
}

func (o CustomRegistryCredentialsInvokeResponseMapOutput) MapIndex(k pulumi.StringInput) CustomRegistryCredentialsInvokeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CustomRegistryCredentialsInvokeResponse {
		return vs[0].(map[string]CustomRegistryCredentialsInvokeResponse)[vs[1].(string)]
	}).(CustomRegistryCredentialsInvokeResponseOutput)
}

// Describes the credentials that will be used to access a custom registry during a run.
type CustomRegistryCredentialsResponse struct {
	// Indicates the managed identity assigned to the custom credential. If a user-assigned identity
	// this value is the Client ID. If a system-assigned identity, the value will be `system`. In
	// the case of a system-assigned identity, the Client ID will be determined by the runner. This
	// identity may be used to authenticate to key vault to retrieve credentials or it may be the only
	// source of authentication used for accessing the registry.
	Identity *string `pulumi:"identity"`
	// The password for logging into the custom registry. The password is a secret
	// object that allows multiple ways of providing the value for it.
	Password *SecretObjectResponse `pulumi:"password"`
	// The username for logging into the custom registry.
	UserName *SecretObjectResponse `pulumi:"userName"`
}

// CustomRegistryCredentialsResponseInput is an input type that accepts CustomRegistryCredentialsResponseArgs and CustomRegistryCredentialsResponseOutput values.
// You can construct a concrete instance of `CustomRegistryCredentialsResponseInput` via:
//
//          CustomRegistryCredentialsResponseArgs{...}
type CustomRegistryCredentialsResponseInput interface {
	pulumi.Input

	ToCustomRegistryCredentialsResponseOutput() CustomRegistryCredentialsResponseOutput
	ToCustomRegistryCredentialsResponseOutputWithContext(context.Context) CustomRegistryCredentialsResponseOutput
}

// Describes the credentials that will be used to access a custom registry during a run.
type CustomRegistryCredentialsResponseArgs struct {
	// Indicates the managed identity assigned to the custom credential. If a user-assigned identity
	// this value is the Client ID. If a system-assigned identity, the value will be `system`. In
	// the case of a system-assigned identity, the Client ID will be determined by the runner. This
	// identity may be used to authenticate to key vault to retrieve credentials or it may be the only
	// source of authentication used for accessing the registry.
	Identity pulumi.StringPtrInput `pulumi:"identity"`
	// The password for logging into the custom registry. The password is a secret
	// object that allows multiple ways of providing the value for it.
	Password SecretObjectResponsePtrInput `pulumi:"password"`
	// The username for logging into the custom registry.
	UserName SecretObjectResponsePtrInput `pulumi:"userName"`
}

func (CustomRegistryCredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRegistryCredentialsResponse)(nil)).Elem()
}

func (i CustomRegistryCredentialsResponseArgs) ToCustomRegistryCredentialsResponseOutput() CustomRegistryCredentialsResponseOutput {
	return i.ToCustomRegistryCredentialsResponseOutputWithContext(context.Background())
}

func (i CustomRegistryCredentialsResponseArgs) ToCustomRegistryCredentialsResponseOutputWithContext(ctx context.Context) CustomRegistryCredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRegistryCredentialsResponseOutput)
}

// CustomRegistryCredentialsResponseMapInput is an input type that accepts CustomRegistryCredentialsResponseMap and CustomRegistryCredentialsResponseMapOutput values.
// You can construct a concrete instance of `CustomRegistryCredentialsResponseMapInput` via:
//
//          CustomRegistryCredentialsResponseMap{ "key": CustomRegistryCredentialsResponseArgs{...} }
type CustomRegistryCredentialsResponseMapInput interface {
	pulumi.Input

	ToCustomRegistryCredentialsResponseMapOutput() CustomRegistryCredentialsResponseMapOutput
	ToCustomRegistryCredentialsResponseMapOutputWithContext(context.Context) CustomRegistryCredentialsResponseMapOutput
}

type CustomRegistryCredentialsResponseMap map[string]CustomRegistryCredentialsResponseInput

func (CustomRegistryCredentialsResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CustomRegistryCredentialsResponse)(nil)).Elem()
}

func (i CustomRegistryCredentialsResponseMap) ToCustomRegistryCredentialsResponseMapOutput() CustomRegistryCredentialsResponseMapOutput {
	return i.ToCustomRegistryCredentialsResponseMapOutputWithContext(context.Background())
}

func (i CustomRegistryCredentialsResponseMap) ToCustomRegistryCredentialsResponseMapOutputWithContext(ctx context.Context) CustomRegistryCredentialsResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRegistryCredentialsResponseMapOutput)
}

// Describes the credentials that will be used to access a custom registry during a run.
type CustomRegistryCredentialsResponseOutput struct{ *pulumi.OutputState }

func (CustomRegistryCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRegistryCredentialsResponse)(nil)).Elem()
}

func (o CustomRegistryCredentialsResponseOutput) ToCustomRegistryCredentialsResponseOutput() CustomRegistryCredentialsResponseOutput {
	return o
}

func (o CustomRegistryCredentialsResponseOutput) ToCustomRegistryCredentialsResponseOutputWithContext(ctx context.Context) CustomRegistryCredentialsResponseOutput {
	return o
}

// Indicates the managed identity assigned to the custom credential. If a user-assigned identity
// this value is the Client ID. If a system-assigned identity, the value will be `system`. In
// the case of a system-assigned identity, the Client ID will be determined by the runner. This
// identity may be used to authenticate to key vault to retrieve credentials or it may be the only
// source of authentication used for accessing the registry.
func (o CustomRegistryCredentialsResponseOutput) Identity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRegistryCredentialsResponse) *string { return v.Identity }).(pulumi.StringPtrOutput)
}

// The password for logging into the custom registry. The password is a secret
// object that allows multiple ways of providing the value for it.
func (o CustomRegistryCredentialsResponseOutput) Password() SecretObjectResponsePtrOutput {
	return o.ApplyT(func(v CustomRegistryCredentialsResponse) *SecretObjectResponse { return v.Password }).(SecretObjectResponsePtrOutput)
}

// The username for logging into the custom registry.
func (o CustomRegistryCredentialsResponseOutput) UserName() SecretObjectResponsePtrOutput {
	return o.ApplyT(func(v CustomRegistryCredentialsResponse) *SecretObjectResponse { return v.UserName }).(SecretObjectResponsePtrOutput)
}

type CustomRegistryCredentialsResponseMapOutput struct{ *pulumi.OutputState }

func (CustomRegistryCredentialsResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CustomRegistryCredentialsResponse)(nil)).Elem()
}

func (o CustomRegistryCredentialsResponseMapOutput) ToCustomRegistryCredentialsResponseMapOutput() CustomRegistryCredentialsResponseMapOutput {
	return o
}

func (o CustomRegistryCredentialsResponseMapOutput) ToCustomRegistryCredentialsResponseMapOutputWithContext(ctx context.Context) CustomRegistryCredentialsResponseMapOutput {
	return o
}

func (o CustomRegistryCredentialsResponseMapOutput) MapIndex(k pulumi.StringInput) CustomRegistryCredentialsResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CustomRegistryCredentialsResponse {
		return vs[0].(map[string]CustomRegistryCredentialsResponse)[vs[1].(string)]
	}).(CustomRegistryCredentialsResponseOutput)
}

// The parameters for a docker quick build.
type DockerBuildRequest struct {
	// The machine configuration of the run agent.
	AgentConfiguration *AgentProperties `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName *string `pulumi:"agentPoolName"`
	// The collection of override arguments to be used when executing the run.
	Arguments []Argument `pulumi:"arguments"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials *Credentials `pulumi:"credentials"`
	// The Docker file path relative to the source location.
	DockerFilePath string `pulumi:"dockerFilePath"`
	// The fully qualified image names including the repository and tag.
	ImageNames []string `pulumi:"imageNames"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// The value of this property indicates whether the image built should be pushed to the registry or not.
	IsPushEnabled *bool `pulumi:"isPushEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate *string `pulumi:"logTemplate"`
	// The value of this property indicates whether the image cache is enabled or not.
	NoCache *bool `pulumi:"noCache"`
	// The platform properties against which the run has to happen.
	Platform PlatformProperties `pulumi:"platform"`
	// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
	// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
	SourceLocation *string `pulumi:"sourceLocation"`
	// The name of the target build stage for the docker build.
	Target *string `pulumi:"target"`
	// Run timeout in seconds.
	Timeout *int `pulumi:"timeout"`
	// The type of the run request.
	// Expected value is 'DockerBuildRequest'.
	Type string `pulumi:"type"`
}

// DockerBuildRequestInput is an input type that accepts DockerBuildRequestArgs and DockerBuildRequestOutput values.
// You can construct a concrete instance of `DockerBuildRequestInput` via:
//
//          DockerBuildRequestArgs{...}
type DockerBuildRequestInput interface {
	pulumi.Input

	ToDockerBuildRequestOutput() DockerBuildRequestOutput
	ToDockerBuildRequestOutputWithContext(context.Context) DockerBuildRequestOutput
}

// The parameters for a docker quick build.
type DockerBuildRequestArgs struct {
	// The machine configuration of the run agent.
	AgentConfiguration AgentPropertiesPtrInput `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName pulumi.StringPtrInput `pulumi:"agentPoolName"`
	// The collection of override arguments to be used when executing the run.
	Arguments ArgumentArrayInput `pulumi:"arguments"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials CredentialsPtrInput `pulumi:"credentials"`
	// The Docker file path relative to the source location.
	DockerFilePath pulumi.StringInput `pulumi:"dockerFilePath"`
	// The fully qualified image names including the repository and tag.
	ImageNames pulumi.StringArrayInput `pulumi:"imageNames"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// The value of this property indicates whether the image built should be pushed to the registry or not.
	IsPushEnabled pulumi.BoolPtrInput `pulumi:"isPushEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate pulumi.StringPtrInput `pulumi:"logTemplate"`
	// The value of this property indicates whether the image cache is enabled or not.
	NoCache pulumi.BoolPtrInput `pulumi:"noCache"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesInput `pulumi:"platform"`
	// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
	// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
	SourceLocation pulumi.StringPtrInput `pulumi:"sourceLocation"`
	// The name of the target build stage for the docker build.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Run timeout in seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The type of the run request.
	// Expected value is 'DockerBuildRequest'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DockerBuildRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildRequest)(nil)).Elem()
}

func (i DockerBuildRequestArgs) ToDockerBuildRequestOutput() DockerBuildRequestOutput {
	return i.ToDockerBuildRequestOutputWithContext(context.Background())
}

func (i DockerBuildRequestArgs) ToDockerBuildRequestOutputWithContext(ctx context.Context) DockerBuildRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerBuildRequestOutput)
}

// The parameters for a docker quick build.
type DockerBuildRequestOutput struct{ *pulumi.OutputState }

func (DockerBuildRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildRequest)(nil)).Elem()
}

func (o DockerBuildRequestOutput) ToDockerBuildRequestOutput() DockerBuildRequestOutput {
	return o
}

func (o DockerBuildRequestOutput) ToDockerBuildRequestOutputWithContext(ctx context.Context) DockerBuildRequestOutput {
	return o
}

// The machine configuration of the run agent.
func (o DockerBuildRequestOutput) AgentConfiguration() AgentPropertiesPtrOutput {
	return o.ApplyT(func(v DockerBuildRequest) *AgentProperties { return v.AgentConfiguration }).(AgentPropertiesPtrOutput)
}

// The dedicated agent pool for the run.
func (o DockerBuildRequestOutput) AgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildRequest) *string { return v.AgentPoolName }).(pulumi.StringPtrOutput)
}

// The collection of override arguments to be used when executing the run.
func (o DockerBuildRequestOutput) Arguments() ArgumentArrayOutput {
	return o.ApplyT(func(v DockerBuildRequest) []Argument { return v.Arguments }).(ArgumentArrayOutput)
}

// The properties that describes a set of credentials that will be used when this run is invoked.
func (o DockerBuildRequestOutput) Credentials() CredentialsPtrOutput {
	return o.ApplyT(func(v DockerBuildRequest) *Credentials { return v.Credentials }).(CredentialsPtrOutput)
}

// The Docker file path relative to the source location.
func (o DockerBuildRequestOutput) DockerFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildRequest) string { return v.DockerFilePath }).(pulumi.StringOutput)
}

// The fully qualified image names including the repository and tag.
func (o DockerBuildRequestOutput) ImageNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DockerBuildRequest) []string { return v.ImageNames }).(pulumi.StringArrayOutput)
}

// The value that indicates whether archiving is enabled for the run or not.
func (o DockerBuildRequestOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildRequest) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// The value of this property indicates whether the image built should be pushed to the registry or not.
func (o DockerBuildRequestOutput) IsPushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildRequest) *bool { return v.IsPushEnabled }).(pulumi.BoolPtrOutput)
}

// The template that describes the repository and tag information for run log artifact.
func (o DockerBuildRequestOutput) LogTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildRequest) *string { return v.LogTemplate }).(pulumi.StringPtrOutput)
}

// The value of this property indicates whether the image cache is enabled or not.
func (o DockerBuildRequestOutput) NoCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildRequest) *bool { return v.NoCache }).(pulumi.BoolPtrOutput)
}

// The platform properties against which the run has to happen.
func (o DockerBuildRequestOutput) Platform() PlatformPropertiesOutput {
	return o.ApplyT(func(v DockerBuildRequest) PlatformProperties { return v.Platform }).(PlatformPropertiesOutput)
}

// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
func (o DockerBuildRequestOutput) SourceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildRequest) *string { return v.SourceLocation }).(pulumi.StringPtrOutput)
}

// The name of the target build stage for the docker build.
func (o DockerBuildRequestOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildRequest) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Run timeout in seconds.
func (o DockerBuildRequestOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DockerBuildRequest) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The type of the run request.
// Expected value is 'DockerBuildRequest'.
func (o DockerBuildRequestOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildRequest) string { return v.Type }).(pulumi.StringOutput)
}

// The parameters for a docker quick build.
type DockerBuildRequestInvokeResponse struct {
	// The machine configuration of the run agent.
	AgentConfiguration *AgentPropertiesInvokeResponse `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName *string `pulumi:"agentPoolName"`
	// The collection of override arguments to be used when executing the run.
	Arguments []ArgumentInvokeResponse `pulumi:"arguments"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials *CredentialsInvokeResponse `pulumi:"credentials"`
	// The Docker file path relative to the source location.
	DockerFilePath string `pulumi:"dockerFilePath"`
	// The fully qualified image names including the repository and tag.
	ImageNames []string `pulumi:"imageNames"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// The value of this property indicates whether the image built should be pushed to the registry or not.
	IsPushEnabled *bool `pulumi:"isPushEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate *string `pulumi:"logTemplate"`
	// The value of this property indicates whether the image cache is enabled or not.
	NoCache *bool `pulumi:"noCache"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesInvokeResponse `pulumi:"platform"`
	// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
	// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
	SourceLocation *string `pulumi:"sourceLocation"`
	// The name of the target build stage for the docker build.
	Target *string `pulumi:"target"`
	// Run timeout in seconds.
	Timeout *int `pulumi:"timeout"`
	// The type of the run request.
	// Expected value is 'DockerBuildRequest'.
	Type string `pulumi:"type"`
}

// DockerBuildRequestInvokeResponseInput is an input type that accepts DockerBuildRequestInvokeResponseArgs and DockerBuildRequestInvokeResponseOutput values.
// You can construct a concrete instance of `DockerBuildRequestInvokeResponseInput` via:
//
//          DockerBuildRequestInvokeResponseArgs{...}
type DockerBuildRequestInvokeResponseInput interface {
	pulumi.Input

	ToDockerBuildRequestInvokeResponseOutput() DockerBuildRequestInvokeResponseOutput
	ToDockerBuildRequestInvokeResponseOutputWithContext(context.Context) DockerBuildRequestInvokeResponseOutput
}

// The parameters for a docker quick build.
type DockerBuildRequestInvokeResponseArgs struct {
	// The machine configuration of the run agent.
	AgentConfiguration AgentPropertiesInvokeResponsePtrInput `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName pulumi.StringPtrInput `pulumi:"agentPoolName"`
	// The collection of override arguments to be used when executing the run.
	Arguments ArgumentInvokeResponseArrayInput `pulumi:"arguments"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials CredentialsInvokeResponsePtrInput `pulumi:"credentials"`
	// The Docker file path relative to the source location.
	DockerFilePath pulumi.StringInput `pulumi:"dockerFilePath"`
	// The fully qualified image names including the repository and tag.
	ImageNames pulumi.StringArrayInput `pulumi:"imageNames"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// The value of this property indicates whether the image built should be pushed to the registry or not.
	IsPushEnabled pulumi.BoolPtrInput `pulumi:"isPushEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate pulumi.StringPtrInput `pulumi:"logTemplate"`
	// The value of this property indicates whether the image cache is enabled or not.
	NoCache pulumi.BoolPtrInput `pulumi:"noCache"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesInvokeResponseInput `pulumi:"platform"`
	// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
	// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
	SourceLocation pulumi.StringPtrInput `pulumi:"sourceLocation"`
	// The name of the target build stage for the docker build.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Run timeout in seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The type of the run request.
	// Expected value is 'DockerBuildRequest'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DockerBuildRequestInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildRequestInvokeResponse)(nil)).Elem()
}

func (i DockerBuildRequestInvokeResponseArgs) ToDockerBuildRequestInvokeResponseOutput() DockerBuildRequestInvokeResponseOutput {
	return i.ToDockerBuildRequestInvokeResponseOutputWithContext(context.Background())
}

func (i DockerBuildRequestInvokeResponseArgs) ToDockerBuildRequestInvokeResponseOutputWithContext(ctx context.Context) DockerBuildRequestInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerBuildRequestInvokeResponseOutput)
}

// The parameters for a docker quick build.
type DockerBuildRequestInvokeResponseOutput struct{ *pulumi.OutputState }

func (DockerBuildRequestInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildRequestInvokeResponse)(nil)).Elem()
}

func (o DockerBuildRequestInvokeResponseOutput) ToDockerBuildRequestInvokeResponseOutput() DockerBuildRequestInvokeResponseOutput {
	return o
}

func (o DockerBuildRequestInvokeResponseOutput) ToDockerBuildRequestInvokeResponseOutputWithContext(ctx context.Context) DockerBuildRequestInvokeResponseOutput {
	return o
}

// The machine configuration of the run agent.
func (o DockerBuildRequestInvokeResponseOutput) AgentConfiguration() AgentPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v DockerBuildRequestInvokeResponse) *AgentPropertiesInvokeResponse { return v.AgentConfiguration }).(AgentPropertiesInvokeResponsePtrOutput)
}

// The dedicated agent pool for the run.
func (o DockerBuildRequestInvokeResponseOutput) AgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildRequestInvokeResponse) *string { return v.AgentPoolName }).(pulumi.StringPtrOutput)
}

// The collection of override arguments to be used when executing the run.
func (o DockerBuildRequestInvokeResponseOutput) Arguments() ArgumentInvokeResponseArrayOutput {
	return o.ApplyT(func(v DockerBuildRequestInvokeResponse) []ArgumentInvokeResponse { return v.Arguments }).(ArgumentInvokeResponseArrayOutput)
}

// The properties that describes a set of credentials that will be used when this run is invoked.
func (o DockerBuildRequestInvokeResponseOutput) Credentials() CredentialsInvokeResponsePtrOutput {
	return o.ApplyT(func(v DockerBuildRequestInvokeResponse) *CredentialsInvokeResponse { return v.Credentials }).(CredentialsInvokeResponsePtrOutput)
}

// The Docker file path relative to the source location.
func (o DockerBuildRequestInvokeResponseOutput) DockerFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildRequestInvokeResponse) string { return v.DockerFilePath }).(pulumi.StringOutput)
}

// The fully qualified image names including the repository and tag.
func (o DockerBuildRequestInvokeResponseOutput) ImageNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DockerBuildRequestInvokeResponse) []string { return v.ImageNames }).(pulumi.StringArrayOutput)
}

// The value that indicates whether archiving is enabled for the run or not.
func (o DockerBuildRequestInvokeResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildRequestInvokeResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// The value of this property indicates whether the image built should be pushed to the registry or not.
func (o DockerBuildRequestInvokeResponseOutput) IsPushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildRequestInvokeResponse) *bool { return v.IsPushEnabled }).(pulumi.BoolPtrOutput)
}

// The template that describes the repository and tag information for run log artifact.
func (o DockerBuildRequestInvokeResponseOutput) LogTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildRequestInvokeResponse) *string { return v.LogTemplate }).(pulumi.StringPtrOutput)
}

// The value of this property indicates whether the image cache is enabled or not.
func (o DockerBuildRequestInvokeResponseOutput) NoCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildRequestInvokeResponse) *bool { return v.NoCache }).(pulumi.BoolPtrOutput)
}

// The platform properties against which the run has to happen.
func (o DockerBuildRequestInvokeResponseOutput) Platform() PlatformPropertiesInvokeResponseOutput {
	return o.ApplyT(func(v DockerBuildRequestInvokeResponse) PlatformPropertiesInvokeResponse { return v.Platform }).(PlatformPropertiesInvokeResponseOutput)
}

// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
func (o DockerBuildRequestInvokeResponseOutput) SourceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildRequestInvokeResponse) *string { return v.SourceLocation }).(pulumi.StringPtrOutput)
}

// The name of the target build stage for the docker build.
func (o DockerBuildRequestInvokeResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildRequestInvokeResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Run timeout in seconds.
func (o DockerBuildRequestInvokeResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DockerBuildRequestInvokeResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The type of the run request.
// Expected value is 'DockerBuildRequest'.
func (o DockerBuildRequestInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildRequestInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The parameters for a docker quick build.
type DockerBuildRequestResponse struct {
	// The machine configuration of the run agent.
	AgentConfiguration *AgentPropertiesResponse `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName *string `pulumi:"agentPoolName"`
	// The collection of override arguments to be used when executing the run.
	Arguments []ArgumentResponse `pulumi:"arguments"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials *CredentialsResponse `pulumi:"credentials"`
	// The Docker file path relative to the source location.
	DockerFilePath string `pulumi:"dockerFilePath"`
	// The fully qualified image names including the repository and tag.
	ImageNames []string `pulumi:"imageNames"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// The value of this property indicates whether the image built should be pushed to the registry or not.
	IsPushEnabled *bool `pulumi:"isPushEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate *string `pulumi:"logTemplate"`
	// The value of this property indicates whether the image cache is enabled or not.
	NoCache *bool `pulumi:"noCache"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesResponse `pulumi:"platform"`
	// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
	// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
	SourceLocation *string `pulumi:"sourceLocation"`
	// The name of the target build stage for the docker build.
	Target *string `pulumi:"target"`
	// Run timeout in seconds.
	Timeout *int `pulumi:"timeout"`
	// The type of the run request.
	// Expected value is 'DockerBuildRequest'.
	Type string `pulumi:"type"`
}

// DockerBuildRequestResponseInput is an input type that accepts DockerBuildRequestResponseArgs and DockerBuildRequestResponseOutput values.
// You can construct a concrete instance of `DockerBuildRequestResponseInput` via:
//
//          DockerBuildRequestResponseArgs{...}
type DockerBuildRequestResponseInput interface {
	pulumi.Input

	ToDockerBuildRequestResponseOutput() DockerBuildRequestResponseOutput
	ToDockerBuildRequestResponseOutputWithContext(context.Context) DockerBuildRequestResponseOutput
}

// The parameters for a docker quick build.
type DockerBuildRequestResponseArgs struct {
	// The machine configuration of the run agent.
	AgentConfiguration AgentPropertiesResponsePtrInput `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName pulumi.StringPtrInput `pulumi:"agentPoolName"`
	// The collection of override arguments to be used when executing the run.
	Arguments ArgumentResponseArrayInput `pulumi:"arguments"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials CredentialsResponsePtrInput `pulumi:"credentials"`
	// The Docker file path relative to the source location.
	DockerFilePath pulumi.StringInput `pulumi:"dockerFilePath"`
	// The fully qualified image names including the repository and tag.
	ImageNames pulumi.StringArrayInput `pulumi:"imageNames"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// The value of this property indicates whether the image built should be pushed to the registry or not.
	IsPushEnabled pulumi.BoolPtrInput `pulumi:"isPushEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate pulumi.StringPtrInput `pulumi:"logTemplate"`
	// The value of this property indicates whether the image cache is enabled or not.
	NoCache pulumi.BoolPtrInput `pulumi:"noCache"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesResponseInput `pulumi:"platform"`
	// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
	// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
	SourceLocation pulumi.StringPtrInput `pulumi:"sourceLocation"`
	// The name of the target build stage for the docker build.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Run timeout in seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The type of the run request.
	// Expected value is 'DockerBuildRequest'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DockerBuildRequestResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildRequestResponse)(nil)).Elem()
}

func (i DockerBuildRequestResponseArgs) ToDockerBuildRequestResponseOutput() DockerBuildRequestResponseOutput {
	return i.ToDockerBuildRequestResponseOutputWithContext(context.Background())
}

func (i DockerBuildRequestResponseArgs) ToDockerBuildRequestResponseOutputWithContext(ctx context.Context) DockerBuildRequestResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerBuildRequestResponseOutput)
}

// The parameters for a docker quick build.
type DockerBuildRequestResponseOutput struct{ *pulumi.OutputState }

func (DockerBuildRequestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildRequestResponse)(nil)).Elem()
}

func (o DockerBuildRequestResponseOutput) ToDockerBuildRequestResponseOutput() DockerBuildRequestResponseOutput {
	return o
}

func (o DockerBuildRequestResponseOutput) ToDockerBuildRequestResponseOutputWithContext(ctx context.Context) DockerBuildRequestResponseOutput {
	return o
}

// The machine configuration of the run agent.
func (o DockerBuildRequestResponseOutput) AgentConfiguration() AgentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DockerBuildRequestResponse) *AgentPropertiesResponse { return v.AgentConfiguration }).(AgentPropertiesResponsePtrOutput)
}

// The dedicated agent pool for the run.
func (o DockerBuildRequestResponseOutput) AgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildRequestResponse) *string { return v.AgentPoolName }).(pulumi.StringPtrOutput)
}

// The collection of override arguments to be used when executing the run.
func (o DockerBuildRequestResponseOutput) Arguments() ArgumentResponseArrayOutput {
	return o.ApplyT(func(v DockerBuildRequestResponse) []ArgumentResponse { return v.Arguments }).(ArgumentResponseArrayOutput)
}

// The properties that describes a set of credentials that will be used when this run is invoked.
func (o DockerBuildRequestResponseOutput) Credentials() CredentialsResponsePtrOutput {
	return o.ApplyT(func(v DockerBuildRequestResponse) *CredentialsResponse { return v.Credentials }).(CredentialsResponsePtrOutput)
}

// The Docker file path relative to the source location.
func (o DockerBuildRequestResponseOutput) DockerFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildRequestResponse) string { return v.DockerFilePath }).(pulumi.StringOutput)
}

// The fully qualified image names including the repository and tag.
func (o DockerBuildRequestResponseOutput) ImageNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DockerBuildRequestResponse) []string { return v.ImageNames }).(pulumi.StringArrayOutput)
}

// The value that indicates whether archiving is enabled for the run or not.
func (o DockerBuildRequestResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildRequestResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// The value of this property indicates whether the image built should be pushed to the registry or not.
func (o DockerBuildRequestResponseOutput) IsPushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildRequestResponse) *bool { return v.IsPushEnabled }).(pulumi.BoolPtrOutput)
}

// The template that describes the repository and tag information for run log artifact.
func (o DockerBuildRequestResponseOutput) LogTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildRequestResponse) *string { return v.LogTemplate }).(pulumi.StringPtrOutput)
}

// The value of this property indicates whether the image cache is enabled or not.
func (o DockerBuildRequestResponseOutput) NoCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildRequestResponse) *bool { return v.NoCache }).(pulumi.BoolPtrOutput)
}

// The platform properties against which the run has to happen.
func (o DockerBuildRequestResponseOutput) Platform() PlatformPropertiesResponseOutput {
	return o.ApplyT(func(v DockerBuildRequestResponse) PlatformPropertiesResponse { return v.Platform }).(PlatformPropertiesResponseOutput)
}

// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
func (o DockerBuildRequestResponseOutput) SourceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildRequestResponse) *string { return v.SourceLocation }).(pulumi.StringPtrOutput)
}

// The name of the target build stage for the docker build.
func (o DockerBuildRequestResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildRequestResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Run timeout in seconds.
func (o DockerBuildRequestResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DockerBuildRequestResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The type of the run request.
// Expected value is 'DockerBuildRequest'.
func (o DockerBuildRequestResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildRequestResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The Docker build step.
type DockerBuildStep struct {
	// The collection of override arguments to be used when executing this build step.
	Arguments []Argument `pulumi:"arguments"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath *string `pulumi:"contextPath"`
	// The Docker file path relative to the source context.
	DockerFilePath string `pulumi:"dockerFilePath"`
	// The fully qualified image names including the repository and tag.
	ImageNames []string `pulumi:"imageNames"`
	// The value of this property indicates whether the image built should be pushed to the registry or not.
	IsPushEnabled *bool `pulumi:"isPushEnabled"`
	// The value of this property indicates whether the image cache is enabled or not.
	NoCache *bool `pulumi:"noCache"`
	// The name of the target build stage for the docker build.
	Target *string `pulumi:"target"`
	// The type of the step.
	// Expected value is 'Docker'.
	Type string `pulumi:"type"`
}

// DockerBuildStepInput is an input type that accepts DockerBuildStepArgs and DockerBuildStepOutput values.
// You can construct a concrete instance of `DockerBuildStepInput` via:
//
//          DockerBuildStepArgs{...}
type DockerBuildStepInput interface {
	pulumi.Input

	ToDockerBuildStepOutput() DockerBuildStepOutput
	ToDockerBuildStepOutputWithContext(context.Context) DockerBuildStepOutput
}

// The Docker build step.
type DockerBuildStepArgs struct {
	// The collection of override arguments to be used when executing this build step.
	Arguments ArgumentArrayInput `pulumi:"arguments"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// The Docker file path relative to the source context.
	DockerFilePath pulumi.StringInput `pulumi:"dockerFilePath"`
	// The fully qualified image names including the repository and tag.
	ImageNames pulumi.StringArrayInput `pulumi:"imageNames"`
	// The value of this property indicates whether the image built should be pushed to the registry or not.
	IsPushEnabled pulumi.BoolPtrInput `pulumi:"isPushEnabled"`
	// The value of this property indicates whether the image cache is enabled or not.
	NoCache pulumi.BoolPtrInput `pulumi:"noCache"`
	// The name of the target build stage for the docker build.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The type of the step.
	// Expected value is 'Docker'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DockerBuildStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildStep)(nil)).Elem()
}

func (i DockerBuildStepArgs) ToDockerBuildStepOutput() DockerBuildStepOutput {
	return i.ToDockerBuildStepOutputWithContext(context.Background())
}

func (i DockerBuildStepArgs) ToDockerBuildStepOutputWithContext(ctx context.Context) DockerBuildStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerBuildStepOutput)
}

// The Docker build step.
type DockerBuildStepOutput struct{ *pulumi.OutputState }

func (DockerBuildStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildStep)(nil)).Elem()
}

func (o DockerBuildStepOutput) ToDockerBuildStepOutput() DockerBuildStepOutput {
	return o
}

func (o DockerBuildStepOutput) ToDockerBuildStepOutputWithContext(ctx context.Context) DockerBuildStepOutput {
	return o
}

// The collection of override arguments to be used when executing this build step.
func (o DockerBuildStepOutput) Arguments() ArgumentArrayOutput {
	return o.ApplyT(func(v DockerBuildStep) []Argument { return v.Arguments }).(ArgumentArrayOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o DockerBuildStepOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildStep) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o DockerBuildStepOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildStep) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// The Docker file path relative to the source context.
func (o DockerBuildStepOutput) DockerFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildStep) string { return v.DockerFilePath }).(pulumi.StringOutput)
}

// The fully qualified image names including the repository and tag.
func (o DockerBuildStepOutput) ImageNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DockerBuildStep) []string { return v.ImageNames }).(pulumi.StringArrayOutput)
}

// The value of this property indicates whether the image built should be pushed to the registry or not.
func (o DockerBuildStepOutput) IsPushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildStep) *bool { return v.IsPushEnabled }).(pulumi.BoolPtrOutput)
}

// The value of this property indicates whether the image cache is enabled or not.
func (o DockerBuildStepOutput) NoCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildStep) *bool { return v.NoCache }).(pulumi.BoolPtrOutput)
}

// The name of the target build stage for the docker build.
func (o DockerBuildStepOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildStep) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The type of the step.
// Expected value is 'Docker'.
func (o DockerBuildStepOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildStep) string { return v.Type }).(pulumi.StringOutput)
}

// The Docker build step.
type DockerBuildStepInvokeResponse struct {
	// The collection of override arguments to be used when executing this build step.
	Arguments []ArgumentInvokeResponse `pulumi:"arguments"`
	// List of base image dependencies for a step.
	BaseImageDependencies []BaseImageDependencyInvokeResponse `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath *string `pulumi:"contextPath"`
	// The Docker file path relative to the source context.
	DockerFilePath string `pulumi:"dockerFilePath"`
	// The fully qualified image names including the repository and tag.
	ImageNames []string `pulumi:"imageNames"`
	// The value of this property indicates whether the image built should be pushed to the registry or not.
	IsPushEnabled *bool `pulumi:"isPushEnabled"`
	// The value of this property indicates whether the image cache is enabled or not.
	NoCache *bool `pulumi:"noCache"`
	// The name of the target build stage for the docker build.
	Target *string `pulumi:"target"`
	// The type of the step.
	// Expected value is 'Docker'.
	Type string `pulumi:"type"`
}

// DockerBuildStepInvokeResponseInput is an input type that accepts DockerBuildStepInvokeResponseArgs and DockerBuildStepInvokeResponseOutput values.
// You can construct a concrete instance of `DockerBuildStepInvokeResponseInput` via:
//
//          DockerBuildStepInvokeResponseArgs{...}
type DockerBuildStepInvokeResponseInput interface {
	pulumi.Input

	ToDockerBuildStepInvokeResponseOutput() DockerBuildStepInvokeResponseOutput
	ToDockerBuildStepInvokeResponseOutputWithContext(context.Context) DockerBuildStepInvokeResponseOutput
}

// The Docker build step.
type DockerBuildStepInvokeResponseArgs struct {
	// The collection of override arguments to be used when executing this build step.
	Arguments ArgumentInvokeResponseArrayInput `pulumi:"arguments"`
	// List of base image dependencies for a step.
	BaseImageDependencies BaseImageDependencyInvokeResponseArrayInput `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// The Docker file path relative to the source context.
	DockerFilePath pulumi.StringInput `pulumi:"dockerFilePath"`
	// The fully qualified image names including the repository and tag.
	ImageNames pulumi.StringArrayInput `pulumi:"imageNames"`
	// The value of this property indicates whether the image built should be pushed to the registry or not.
	IsPushEnabled pulumi.BoolPtrInput `pulumi:"isPushEnabled"`
	// The value of this property indicates whether the image cache is enabled or not.
	NoCache pulumi.BoolPtrInput `pulumi:"noCache"`
	// The name of the target build stage for the docker build.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The type of the step.
	// Expected value is 'Docker'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DockerBuildStepInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildStepInvokeResponse)(nil)).Elem()
}

func (i DockerBuildStepInvokeResponseArgs) ToDockerBuildStepInvokeResponseOutput() DockerBuildStepInvokeResponseOutput {
	return i.ToDockerBuildStepInvokeResponseOutputWithContext(context.Background())
}

func (i DockerBuildStepInvokeResponseArgs) ToDockerBuildStepInvokeResponseOutputWithContext(ctx context.Context) DockerBuildStepInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerBuildStepInvokeResponseOutput)
}

// The Docker build step.
type DockerBuildStepInvokeResponseOutput struct{ *pulumi.OutputState }

func (DockerBuildStepInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildStepInvokeResponse)(nil)).Elem()
}

func (o DockerBuildStepInvokeResponseOutput) ToDockerBuildStepInvokeResponseOutput() DockerBuildStepInvokeResponseOutput {
	return o
}

func (o DockerBuildStepInvokeResponseOutput) ToDockerBuildStepInvokeResponseOutputWithContext(ctx context.Context) DockerBuildStepInvokeResponseOutput {
	return o
}

// The collection of override arguments to be used when executing this build step.
func (o DockerBuildStepInvokeResponseOutput) Arguments() ArgumentInvokeResponseArrayOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) []ArgumentInvokeResponse { return v.Arguments }).(ArgumentInvokeResponseArrayOutput)
}

// List of base image dependencies for a step.
func (o DockerBuildStepInvokeResponseOutput) BaseImageDependencies() BaseImageDependencyInvokeResponseArrayOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) []BaseImageDependencyInvokeResponse {
		return v.BaseImageDependencies
	}).(BaseImageDependencyInvokeResponseArrayOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o DockerBuildStepInvokeResponseOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o DockerBuildStepInvokeResponseOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// The Docker file path relative to the source context.
func (o DockerBuildStepInvokeResponseOutput) DockerFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) string { return v.DockerFilePath }).(pulumi.StringOutput)
}

// The fully qualified image names including the repository and tag.
func (o DockerBuildStepInvokeResponseOutput) ImageNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) []string { return v.ImageNames }).(pulumi.StringArrayOutput)
}

// The value of this property indicates whether the image built should be pushed to the registry or not.
func (o DockerBuildStepInvokeResponseOutput) IsPushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) *bool { return v.IsPushEnabled }).(pulumi.BoolPtrOutput)
}

// The value of this property indicates whether the image cache is enabled or not.
func (o DockerBuildStepInvokeResponseOutput) NoCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) *bool { return v.NoCache }).(pulumi.BoolPtrOutput)
}

// The name of the target build stage for the docker build.
func (o DockerBuildStepInvokeResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The type of the step.
// Expected value is 'Docker'.
func (o DockerBuildStepInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildStepInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The Docker build step.
type DockerBuildStepResponse struct {
	// The collection of override arguments to be used when executing this build step.
	Arguments []ArgumentResponse `pulumi:"arguments"`
	// List of base image dependencies for a step.
	BaseImageDependencies []BaseImageDependencyResponse `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath *string `pulumi:"contextPath"`
	// The Docker file path relative to the source context.
	DockerFilePath string `pulumi:"dockerFilePath"`
	// The fully qualified image names including the repository and tag.
	ImageNames []string `pulumi:"imageNames"`
	// The value of this property indicates whether the image built should be pushed to the registry or not.
	IsPushEnabled *bool `pulumi:"isPushEnabled"`
	// The value of this property indicates whether the image cache is enabled or not.
	NoCache *bool `pulumi:"noCache"`
	// The name of the target build stage for the docker build.
	Target *string `pulumi:"target"`
	// The type of the step.
	// Expected value is 'Docker'.
	Type string `pulumi:"type"`
}

// DockerBuildStepResponseInput is an input type that accepts DockerBuildStepResponseArgs and DockerBuildStepResponseOutput values.
// You can construct a concrete instance of `DockerBuildStepResponseInput` via:
//
//          DockerBuildStepResponseArgs{...}
type DockerBuildStepResponseInput interface {
	pulumi.Input

	ToDockerBuildStepResponseOutput() DockerBuildStepResponseOutput
	ToDockerBuildStepResponseOutputWithContext(context.Context) DockerBuildStepResponseOutput
}

// The Docker build step.
type DockerBuildStepResponseArgs struct {
	// The collection of override arguments to be used when executing this build step.
	Arguments ArgumentResponseArrayInput `pulumi:"arguments"`
	// List of base image dependencies for a step.
	BaseImageDependencies BaseImageDependencyResponseArrayInput `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// The Docker file path relative to the source context.
	DockerFilePath pulumi.StringInput `pulumi:"dockerFilePath"`
	// The fully qualified image names including the repository and tag.
	ImageNames pulumi.StringArrayInput `pulumi:"imageNames"`
	// The value of this property indicates whether the image built should be pushed to the registry or not.
	IsPushEnabled pulumi.BoolPtrInput `pulumi:"isPushEnabled"`
	// The value of this property indicates whether the image cache is enabled or not.
	NoCache pulumi.BoolPtrInput `pulumi:"noCache"`
	// The name of the target build stage for the docker build.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The type of the step.
	// Expected value is 'Docker'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DockerBuildStepResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildStepResponse)(nil)).Elem()
}

func (i DockerBuildStepResponseArgs) ToDockerBuildStepResponseOutput() DockerBuildStepResponseOutput {
	return i.ToDockerBuildStepResponseOutputWithContext(context.Background())
}

func (i DockerBuildStepResponseArgs) ToDockerBuildStepResponseOutputWithContext(ctx context.Context) DockerBuildStepResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerBuildStepResponseOutput)
}

// The Docker build step.
type DockerBuildStepResponseOutput struct{ *pulumi.OutputState }

func (DockerBuildStepResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildStepResponse)(nil)).Elem()
}

func (o DockerBuildStepResponseOutput) ToDockerBuildStepResponseOutput() DockerBuildStepResponseOutput {
	return o
}

func (o DockerBuildStepResponseOutput) ToDockerBuildStepResponseOutputWithContext(ctx context.Context) DockerBuildStepResponseOutput {
	return o
}

// The collection of override arguments to be used when executing this build step.
func (o DockerBuildStepResponseOutput) Arguments() ArgumentResponseArrayOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) []ArgumentResponse { return v.Arguments }).(ArgumentResponseArrayOutput)
}

// List of base image dependencies for a step.
func (o DockerBuildStepResponseOutput) BaseImageDependencies() BaseImageDependencyResponseArrayOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) []BaseImageDependencyResponse { return v.BaseImageDependencies }).(BaseImageDependencyResponseArrayOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o DockerBuildStepResponseOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o DockerBuildStepResponseOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// The Docker file path relative to the source context.
func (o DockerBuildStepResponseOutput) DockerFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) string { return v.DockerFilePath }).(pulumi.StringOutput)
}

// The fully qualified image names including the repository and tag.
func (o DockerBuildStepResponseOutput) ImageNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) []string { return v.ImageNames }).(pulumi.StringArrayOutput)
}

// The value of this property indicates whether the image built should be pushed to the registry or not.
func (o DockerBuildStepResponseOutput) IsPushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) *bool { return v.IsPushEnabled }).(pulumi.BoolPtrOutput)
}

// The value of this property indicates whether the image cache is enabled or not.
func (o DockerBuildStepResponseOutput) NoCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) *bool { return v.NoCache }).(pulumi.BoolPtrOutput)
}

// The name of the target build stage for the docker build.
func (o DockerBuildStepResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The type of the step.
// Expected value is 'Docker'.
func (o DockerBuildStepResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildStepResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The parameters for a quick task run request.
type EncodedTaskRunRequest struct {
	// The machine configuration of the run agent.
	AgentConfiguration *AgentProperties `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName *string `pulumi:"agentPoolName"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials *Credentials `pulumi:"credentials"`
	// Base64 encoded value of the template/definition file content.
	EncodedTaskContent string `pulumi:"encodedTaskContent"`
	// Base64 encoded value of the parameters/values file content.
	EncodedValuesContent *string `pulumi:"encodedValuesContent"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate *string `pulumi:"logTemplate"`
	// The platform properties against which the run has to happen.
	Platform PlatformProperties `pulumi:"platform"`
	// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
	// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
	SourceLocation *string `pulumi:"sourceLocation"`
	// Run timeout in seconds.
	Timeout *int `pulumi:"timeout"`
	// The type of the run request.
	// Expected value is 'EncodedTaskRunRequest'.
	Type string `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values []SetValue `pulumi:"values"`
}

// EncodedTaskRunRequestInput is an input type that accepts EncodedTaskRunRequestArgs and EncodedTaskRunRequestOutput values.
// You can construct a concrete instance of `EncodedTaskRunRequestInput` via:
//
//          EncodedTaskRunRequestArgs{...}
type EncodedTaskRunRequestInput interface {
	pulumi.Input

	ToEncodedTaskRunRequestOutput() EncodedTaskRunRequestOutput
	ToEncodedTaskRunRequestOutputWithContext(context.Context) EncodedTaskRunRequestOutput
}

// The parameters for a quick task run request.
type EncodedTaskRunRequestArgs struct {
	// The machine configuration of the run agent.
	AgentConfiguration AgentPropertiesPtrInput `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName pulumi.StringPtrInput `pulumi:"agentPoolName"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials CredentialsPtrInput `pulumi:"credentials"`
	// Base64 encoded value of the template/definition file content.
	EncodedTaskContent pulumi.StringInput `pulumi:"encodedTaskContent"`
	// Base64 encoded value of the parameters/values file content.
	EncodedValuesContent pulumi.StringPtrInput `pulumi:"encodedValuesContent"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate pulumi.StringPtrInput `pulumi:"logTemplate"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesInput `pulumi:"platform"`
	// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
	// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
	SourceLocation pulumi.StringPtrInput `pulumi:"sourceLocation"`
	// Run timeout in seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The type of the run request.
	// Expected value is 'EncodedTaskRunRequest'.
	Type pulumi.StringInput `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values SetValueArrayInput `pulumi:"values"`
}

func (EncodedTaskRunRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncodedTaskRunRequest)(nil)).Elem()
}

func (i EncodedTaskRunRequestArgs) ToEncodedTaskRunRequestOutput() EncodedTaskRunRequestOutput {
	return i.ToEncodedTaskRunRequestOutputWithContext(context.Background())
}

func (i EncodedTaskRunRequestArgs) ToEncodedTaskRunRequestOutputWithContext(ctx context.Context) EncodedTaskRunRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncodedTaskRunRequestOutput)
}

// The parameters for a quick task run request.
type EncodedTaskRunRequestOutput struct{ *pulumi.OutputState }

func (EncodedTaskRunRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncodedTaskRunRequest)(nil)).Elem()
}

func (o EncodedTaskRunRequestOutput) ToEncodedTaskRunRequestOutput() EncodedTaskRunRequestOutput {
	return o
}

func (o EncodedTaskRunRequestOutput) ToEncodedTaskRunRequestOutputWithContext(ctx context.Context) EncodedTaskRunRequestOutput {
	return o
}

// The machine configuration of the run agent.
func (o EncodedTaskRunRequestOutput) AgentConfiguration() AgentPropertiesPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequest) *AgentProperties { return v.AgentConfiguration }).(AgentPropertiesPtrOutput)
}

// The dedicated agent pool for the run.
func (o EncodedTaskRunRequestOutput) AgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequest) *string { return v.AgentPoolName }).(pulumi.StringPtrOutput)
}

// The properties that describes a set of credentials that will be used when this run is invoked.
func (o EncodedTaskRunRequestOutput) Credentials() CredentialsPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequest) *Credentials { return v.Credentials }).(CredentialsPtrOutput)
}

// Base64 encoded value of the template/definition file content.
func (o EncodedTaskRunRequestOutput) EncodedTaskContent() pulumi.StringOutput {
	return o.ApplyT(func(v EncodedTaskRunRequest) string { return v.EncodedTaskContent }).(pulumi.StringOutput)
}

// Base64 encoded value of the parameters/values file content.
func (o EncodedTaskRunRequestOutput) EncodedValuesContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequest) *string { return v.EncodedValuesContent }).(pulumi.StringPtrOutput)
}

// The value that indicates whether archiving is enabled for the run or not.
func (o EncodedTaskRunRequestOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequest) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// The template that describes the repository and tag information for run log artifact.
func (o EncodedTaskRunRequestOutput) LogTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequest) *string { return v.LogTemplate }).(pulumi.StringPtrOutput)
}

// The platform properties against which the run has to happen.
func (o EncodedTaskRunRequestOutput) Platform() PlatformPropertiesOutput {
	return o.ApplyT(func(v EncodedTaskRunRequest) PlatformProperties { return v.Platform }).(PlatformPropertiesOutput)
}

// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
func (o EncodedTaskRunRequestOutput) SourceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequest) *string { return v.SourceLocation }).(pulumi.StringPtrOutput)
}

// Run timeout in seconds.
func (o EncodedTaskRunRequestOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequest) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The type of the run request.
// Expected value is 'EncodedTaskRunRequest'.
func (o EncodedTaskRunRequestOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EncodedTaskRunRequest) string { return v.Type }).(pulumi.StringOutput)
}

// The collection of overridable values that can be passed when running a task.
func (o EncodedTaskRunRequestOutput) Values() SetValueArrayOutput {
	return o.ApplyT(func(v EncodedTaskRunRequest) []SetValue { return v.Values }).(SetValueArrayOutput)
}

// The parameters for a quick task run request.
type EncodedTaskRunRequestInvokeResponse struct {
	// The machine configuration of the run agent.
	AgentConfiguration *AgentPropertiesInvokeResponse `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName *string `pulumi:"agentPoolName"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials *CredentialsInvokeResponse `pulumi:"credentials"`
	// Base64 encoded value of the template/definition file content.
	EncodedTaskContent string `pulumi:"encodedTaskContent"`
	// Base64 encoded value of the parameters/values file content.
	EncodedValuesContent *string `pulumi:"encodedValuesContent"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate *string `pulumi:"logTemplate"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesInvokeResponse `pulumi:"platform"`
	// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
	// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
	SourceLocation *string `pulumi:"sourceLocation"`
	// Run timeout in seconds.
	Timeout *int `pulumi:"timeout"`
	// The type of the run request.
	// Expected value is 'EncodedTaskRunRequest'.
	Type string `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values []SetValueInvokeResponse `pulumi:"values"`
}

// EncodedTaskRunRequestInvokeResponseInput is an input type that accepts EncodedTaskRunRequestInvokeResponseArgs and EncodedTaskRunRequestInvokeResponseOutput values.
// You can construct a concrete instance of `EncodedTaskRunRequestInvokeResponseInput` via:
//
//          EncodedTaskRunRequestInvokeResponseArgs{...}
type EncodedTaskRunRequestInvokeResponseInput interface {
	pulumi.Input

	ToEncodedTaskRunRequestInvokeResponseOutput() EncodedTaskRunRequestInvokeResponseOutput
	ToEncodedTaskRunRequestInvokeResponseOutputWithContext(context.Context) EncodedTaskRunRequestInvokeResponseOutput
}

// The parameters for a quick task run request.
type EncodedTaskRunRequestInvokeResponseArgs struct {
	// The machine configuration of the run agent.
	AgentConfiguration AgentPropertiesInvokeResponsePtrInput `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName pulumi.StringPtrInput `pulumi:"agentPoolName"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials CredentialsInvokeResponsePtrInput `pulumi:"credentials"`
	// Base64 encoded value of the template/definition file content.
	EncodedTaskContent pulumi.StringInput `pulumi:"encodedTaskContent"`
	// Base64 encoded value of the parameters/values file content.
	EncodedValuesContent pulumi.StringPtrInput `pulumi:"encodedValuesContent"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate pulumi.StringPtrInput `pulumi:"logTemplate"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesInvokeResponseInput `pulumi:"platform"`
	// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
	// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
	SourceLocation pulumi.StringPtrInput `pulumi:"sourceLocation"`
	// Run timeout in seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The type of the run request.
	// Expected value is 'EncodedTaskRunRequest'.
	Type pulumi.StringInput `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values SetValueInvokeResponseArrayInput `pulumi:"values"`
}

func (EncodedTaskRunRequestInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncodedTaskRunRequestInvokeResponse)(nil)).Elem()
}

func (i EncodedTaskRunRequestInvokeResponseArgs) ToEncodedTaskRunRequestInvokeResponseOutput() EncodedTaskRunRequestInvokeResponseOutput {
	return i.ToEncodedTaskRunRequestInvokeResponseOutputWithContext(context.Background())
}

func (i EncodedTaskRunRequestInvokeResponseArgs) ToEncodedTaskRunRequestInvokeResponseOutputWithContext(ctx context.Context) EncodedTaskRunRequestInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncodedTaskRunRequestInvokeResponseOutput)
}

// The parameters for a quick task run request.
type EncodedTaskRunRequestInvokeResponseOutput struct{ *pulumi.OutputState }

func (EncodedTaskRunRequestInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncodedTaskRunRequestInvokeResponse)(nil)).Elem()
}

func (o EncodedTaskRunRequestInvokeResponseOutput) ToEncodedTaskRunRequestInvokeResponseOutput() EncodedTaskRunRequestInvokeResponseOutput {
	return o
}

func (o EncodedTaskRunRequestInvokeResponseOutput) ToEncodedTaskRunRequestInvokeResponseOutputWithContext(ctx context.Context) EncodedTaskRunRequestInvokeResponseOutput {
	return o
}

// The machine configuration of the run agent.
func (o EncodedTaskRunRequestInvokeResponseOutput) AgentConfiguration() AgentPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestInvokeResponse) *AgentPropertiesInvokeResponse {
		return v.AgentConfiguration
	}).(AgentPropertiesInvokeResponsePtrOutput)
}

// The dedicated agent pool for the run.
func (o EncodedTaskRunRequestInvokeResponseOutput) AgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestInvokeResponse) *string { return v.AgentPoolName }).(pulumi.StringPtrOutput)
}

// The properties that describes a set of credentials that will be used when this run is invoked.
func (o EncodedTaskRunRequestInvokeResponseOutput) Credentials() CredentialsInvokeResponsePtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestInvokeResponse) *CredentialsInvokeResponse { return v.Credentials }).(CredentialsInvokeResponsePtrOutput)
}

// Base64 encoded value of the template/definition file content.
func (o EncodedTaskRunRequestInvokeResponseOutput) EncodedTaskContent() pulumi.StringOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestInvokeResponse) string { return v.EncodedTaskContent }).(pulumi.StringOutput)
}

// Base64 encoded value of the parameters/values file content.
func (o EncodedTaskRunRequestInvokeResponseOutput) EncodedValuesContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestInvokeResponse) *string { return v.EncodedValuesContent }).(pulumi.StringPtrOutput)
}

// The value that indicates whether archiving is enabled for the run or not.
func (o EncodedTaskRunRequestInvokeResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestInvokeResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// The template that describes the repository and tag information for run log artifact.
func (o EncodedTaskRunRequestInvokeResponseOutput) LogTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestInvokeResponse) *string { return v.LogTemplate }).(pulumi.StringPtrOutput)
}

// The platform properties against which the run has to happen.
func (o EncodedTaskRunRequestInvokeResponseOutput) Platform() PlatformPropertiesInvokeResponseOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestInvokeResponse) PlatformPropertiesInvokeResponse { return v.Platform }).(PlatformPropertiesInvokeResponseOutput)
}

// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
func (o EncodedTaskRunRequestInvokeResponseOutput) SourceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestInvokeResponse) *string { return v.SourceLocation }).(pulumi.StringPtrOutput)
}

// Run timeout in seconds.
func (o EncodedTaskRunRequestInvokeResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestInvokeResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The type of the run request.
// Expected value is 'EncodedTaskRunRequest'.
func (o EncodedTaskRunRequestInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The collection of overridable values that can be passed when running a task.
func (o EncodedTaskRunRequestInvokeResponseOutput) Values() SetValueInvokeResponseArrayOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestInvokeResponse) []SetValueInvokeResponse { return v.Values }).(SetValueInvokeResponseArrayOutput)
}

// The parameters for a quick task run request.
type EncodedTaskRunRequestResponse struct {
	// The machine configuration of the run agent.
	AgentConfiguration *AgentPropertiesResponse `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName *string `pulumi:"agentPoolName"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials *CredentialsResponse `pulumi:"credentials"`
	// Base64 encoded value of the template/definition file content.
	EncodedTaskContent string `pulumi:"encodedTaskContent"`
	// Base64 encoded value of the parameters/values file content.
	EncodedValuesContent *string `pulumi:"encodedValuesContent"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate *string `pulumi:"logTemplate"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesResponse `pulumi:"platform"`
	// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
	// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
	SourceLocation *string `pulumi:"sourceLocation"`
	// Run timeout in seconds.
	Timeout *int `pulumi:"timeout"`
	// The type of the run request.
	// Expected value is 'EncodedTaskRunRequest'.
	Type string `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values []SetValueResponse `pulumi:"values"`
}

// EncodedTaskRunRequestResponseInput is an input type that accepts EncodedTaskRunRequestResponseArgs and EncodedTaskRunRequestResponseOutput values.
// You can construct a concrete instance of `EncodedTaskRunRequestResponseInput` via:
//
//          EncodedTaskRunRequestResponseArgs{...}
type EncodedTaskRunRequestResponseInput interface {
	pulumi.Input

	ToEncodedTaskRunRequestResponseOutput() EncodedTaskRunRequestResponseOutput
	ToEncodedTaskRunRequestResponseOutputWithContext(context.Context) EncodedTaskRunRequestResponseOutput
}

// The parameters for a quick task run request.
type EncodedTaskRunRequestResponseArgs struct {
	// The machine configuration of the run agent.
	AgentConfiguration AgentPropertiesResponsePtrInput `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName pulumi.StringPtrInput `pulumi:"agentPoolName"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials CredentialsResponsePtrInput `pulumi:"credentials"`
	// Base64 encoded value of the template/definition file content.
	EncodedTaskContent pulumi.StringInput `pulumi:"encodedTaskContent"`
	// Base64 encoded value of the parameters/values file content.
	EncodedValuesContent pulumi.StringPtrInput `pulumi:"encodedValuesContent"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate pulumi.StringPtrInput `pulumi:"logTemplate"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesResponseInput `pulumi:"platform"`
	// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
	// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
	SourceLocation pulumi.StringPtrInput `pulumi:"sourceLocation"`
	// Run timeout in seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The type of the run request.
	// Expected value is 'EncodedTaskRunRequest'.
	Type pulumi.StringInput `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values SetValueResponseArrayInput `pulumi:"values"`
}

func (EncodedTaskRunRequestResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncodedTaskRunRequestResponse)(nil)).Elem()
}

func (i EncodedTaskRunRequestResponseArgs) ToEncodedTaskRunRequestResponseOutput() EncodedTaskRunRequestResponseOutput {
	return i.ToEncodedTaskRunRequestResponseOutputWithContext(context.Background())
}

func (i EncodedTaskRunRequestResponseArgs) ToEncodedTaskRunRequestResponseOutputWithContext(ctx context.Context) EncodedTaskRunRequestResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncodedTaskRunRequestResponseOutput)
}

// The parameters for a quick task run request.
type EncodedTaskRunRequestResponseOutput struct{ *pulumi.OutputState }

func (EncodedTaskRunRequestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncodedTaskRunRequestResponse)(nil)).Elem()
}

func (o EncodedTaskRunRequestResponseOutput) ToEncodedTaskRunRequestResponseOutput() EncodedTaskRunRequestResponseOutput {
	return o
}

func (o EncodedTaskRunRequestResponseOutput) ToEncodedTaskRunRequestResponseOutputWithContext(ctx context.Context) EncodedTaskRunRequestResponseOutput {
	return o
}

// The machine configuration of the run agent.
func (o EncodedTaskRunRequestResponseOutput) AgentConfiguration() AgentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestResponse) *AgentPropertiesResponse { return v.AgentConfiguration }).(AgentPropertiesResponsePtrOutput)
}

// The dedicated agent pool for the run.
func (o EncodedTaskRunRequestResponseOutput) AgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestResponse) *string { return v.AgentPoolName }).(pulumi.StringPtrOutput)
}

// The properties that describes a set of credentials that will be used when this run is invoked.
func (o EncodedTaskRunRequestResponseOutput) Credentials() CredentialsResponsePtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestResponse) *CredentialsResponse { return v.Credentials }).(CredentialsResponsePtrOutput)
}

// Base64 encoded value of the template/definition file content.
func (o EncodedTaskRunRequestResponseOutput) EncodedTaskContent() pulumi.StringOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestResponse) string { return v.EncodedTaskContent }).(pulumi.StringOutput)
}

// Base64 encoded value of the parameters/values file content.
func (o EncodedTaskRunRequestResponseOutput) EncodedValuesContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestResponse) *string { return v.EncodedValuesContent }).(pulumi.StringPtrOutput)
}

// The value that indicates whether archiving is enabled for the run or not.
func (o EncodedTaskRunRequestResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// The template that describes the repository and tag information for run log artifact.
func (o EncodedTaskRunRequestResponseOutput) LogTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestResponse) *string { return v.LogTemplate }).(pulumi.StringPtrOutput)
}

// The platform properties against which the run has to happen.
func (o EncodedTaskRunRequestResponseOutput) Platform() PlatformPropertiesResponseOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestResponse) PlatformPropertiesResponse { return v.Platform }).(PlatformPropertiesResponseOutput)
}

// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
func (o EncodedTaskRunRequestResponseOutput) SourceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestResponse) *string { return v.SourceLocation }).(pulumi.StringPtrOutput)
}

// Run timeout in seconds.
func (o EncodedTaskRunRequestResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The type of the run request.
// Expected value is 'EncodedTaskRunRequest'.
func (o EncodedTaskRunRequestResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The collection of overridable values that can be passed when running a task.
func (o EncodedTaskRunRequestResponseOutput) Values() SetValueResponseArrayOutput {
	return o.ApplyT(func(v EncodedTaskRunRequestResponse) []SetValueResponse { return v.Values }).(SetValueResponseArrayOutput)
}

// The properties of a encoded task step.
type EncodedTaskStep struct {
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath *string `pulumi:"contextPath"`
	// Base64 encoded value of the template/definition file content.
	EncodedTaskContent string `pulumi:"encodedTaskContent"`
	// Base64 encoded value of the parameters/values file content.
	EncodedValuesContent *string `pulumi:"encodedValuesContent"`
	// The type of the step.
	// Expected value is 'EncodedTask'.
	Type string `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values []SetValue `pulumi:"values"`
}

// EncodedTaskStepInput is an input type that accepts EncodedTaskStepArgs and EncodedTaskStepOutput values.
// You can construct a concrete instance of `EncodedTaskStepInput` via:
//
//          EncodedTaskStepArgs{...}
type EncodedTaskStepInput interface {
	pulumi.Input

	ToEncodedTaskStepOutput() EncodedTaskStepOutput
	ToEncodedTaskStepOutputWithContext(context.Context) EncodedTaskStepOutput
}

// The properties of a encoded task step.
type EncodedTaskStepArgs struct {
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// Base64 encoded value of the template/definition file content.
	EncodedTaskContent pulumi.StringInput `pulumi:"encodedTaskContent"`
	// Base64 encoded value of the parameters/values file content.
	EncodedValuesContent pulumi.StringPtrInput `pulumi:"encodedValuesContent"`
	// The type of the step.
	// Expected value is 'EncodedTask'.
	Type pulumi.StringInput `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values SetValueArrayInput `pulumi:"values"`
}

func (EncodedTaskStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncodedTaskStep)(nil)).Elem()
}

func (i EncodedTaskStepArgs) ToEncodedTaskStepOutput() EncodedTaskStepOutput {
	return i.ToEncodedTaskStepOutputWithContext(context.Background())
}

func (i EncodedTaskStepArgs) ToEncodedTaskStepOutputWithContext(ctx context.Context) EncodedTaskStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncodedTaskStepOutput)
}

// The properties of a encoded task step.
type EncodedTaskStepOutput struct{ *pulumi.OutputState }

func (EncodedTaskStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncodedTaskStep)(nil)).Elem()
}

func (o EncodedTaskStepOutput) ToEncodedTaskStepOutput() EncodedTaskStepOutput {
	return o
}

func (o EncodedTaskStepOutput) ToEncodedTaskStepOutputWithContext(ctx context.Context) EncodedTaskStepOutput {
	return o
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o EncodedTaskStepOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskStep) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o EncodedTaskStepOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskStep) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// Base64 encoded value of the template/definition file content.
func (o EncodedTaskStepOutput) EncodedTaskContent() pulumi.StringOutput {
	return o.ApplyT(func(v EncodedTaskStep) string { return v.EncodedTaskContent }).(pulumi.StringOutput)
}

// Base64 encoded value of the parameters/values file content.
func (o EncodedTaskStepOutput) EncodedValuesContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskStep) *string { return v.EncodedValuesContent }).(pulumi.StringPtrOutput)
}

// The type of the step.
// Expected value is 'EncodedTask'.
func (o EncodedTaskStepOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EncodedTaskStep) string { return v.Type }).(pulumi.StringOutput)
}

// The collection of overridable values that can be passed when running a task.
func (o EncodedTaskStepOutput) Values() SetValueArrayOutput {
	return o.ApplyT(func(v EncodedTaskStep) []SetValue { return v.Values }).(SetValueArrayOutput)
}

// The properties of a encoded task step.
type EncodedTaskStepInvokeResponse struct {
	// List of base image dependencies for a step.
	BaseImageDependencies []BaseImageDependencyInvokeResponse `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath *string `pulumi:"contextPath"`
	// Base64 encoded value of the template/definition file content.
	EncodedTaskContent string `pulumi:"encodedTaskContent"`
	// Base64 encoded value of the parameters/values file content.
	EncodedValuesContent *string `pulumi:"encodedValuesContent"`
	// The type of the step.
	// Expected value is 'EncodedTask'.
	Type string `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values []SetValueInvokeResponse `pulumi:"values"`
}

// EncodedTaskStepInvokeResponseInput is an input type that accepts EncodedTaskStepInvokeResponseArgs and EncodedTaskStepInvokeResponseOutput values.
// You can construct a concrete instance of `EncodedTaskStepInvokeResponseInput` via:
//
//          EncodedTaskStepInvokeResponseArgs{...}
type EncodedTaskStepInvokeResponseInput interface {
	pulumi.Input

	ToEncodedTaskStepInvokeResponseOutput() EncodedTaskStepInvokeResponseOutput
	ToEncodedTaskStepInvokeResponseOutputWithContext(context.Context) EncodedTaskStepInvokeResponseOutput
}

// The properties of a encoded task step.
type EncodedTaskStepInvokeResponseArgs struct {
	// List of base image dependencies for a step.
	BaseImageDependencies BaseImageDependencyInvokeResponseArrayInput `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// Base64 encoded value of the template/definition file content.
	EncodedTaskContent pulumi.StringInput `pulumi:"encodedTaskContent"`
	// Base64 encoded value of the parameters/values file content.
	EncodedValuesContent pulumi.StringPtrInput `pulumi:"encodedValuesContent"`
	// The type of the step.
	// Expected value is 'EncodedTask'.
	Type pulumi.StringInput `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values SetValueInvokeResponseArrayInput `pulumi:"values"`
}

func (EncodedTaskStepInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncodedTaskStepInvokeResponse)(nil)).Elem()
}

func (i EncodedTaskStepInvokeResponseArgs) ToEncodedTaskStepInvokeResponseOutput() EncodedTaskStepInvokeResponseOutput {
	return i.ToEncodedTaskStepInvokeResponseOutputWithContext(context.Background())
}

func (i EncodedTaskStepInvokeResponseArgs) ToEncodedTaskStepInvokeResponseOutputWithContext(ctx context.Context) EncodedTaskStepInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncodedTaskStepInvokeResponseOutput)
}

// The properties of a encoded task step.
type EncodedTaskStepInvokeResponseOutput struct{ *pulumi.OutputState }

func (EncodedTaskStepInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncodedTaskStepInvokeResponse)(nil)).Elem()
}

func (o EncodedTaskStepInvokeResponseOutput) ToEncodedTaskStepInvokeResponseOutput() EncodedTaskStepInvokeResponseOutput {
	return o
}

func (o EncodedTaskStepInvokeResponseOutput) ToEncodedTaskStepInvokeResponseOutputWithContext(ctx context.Context) EncodedTaskStepInvokeResponseOutput {
	return o
}

// List of base image dependencies for a step.
func (o EncodedTaskStepInvokeResponseOutput) BaseImageDependencies() BaseImageDependencyInvokeResponseArrayOutput {
	return o.ApplyT(func(v EncodedTaskStepInvokeResponse) []BaseImageDependencyInvokeResponse {
		return v.BaseImageDependencies
	}).(BaseImageDependencyInvokeResponseArrayOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o EncodedTaskStepInvokeResponseOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskStepInvokeResponse) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o EncodedTaskStepInvokeResponseOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskStepInvokeResponse) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// Base64 encoded value of the template/definition file content.
func (o EncodedTaskStepInvokeResponseOutput) EncodedTaskContent() pulumi.StringOutput {
	return o.ApplyT(func(v EncodedTaskStepInvokeResponse) string { return v.EncodedTaskContent }).(pulumi.StringOutput)
}

// Base64 encoded value of the parameters/values file content.
func (o EncodedTaskStepInvokeResponseOutput) EncodedValuesContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskStepInvokeResponse) *string { return v.EncodedValuesContent }).(pulumi.StringPtrOutput)
}

// The type of the step.
// Expected value is 'EncodedTask'.
func (o EncodedTaskStepInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EncodedTaskStepInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The collection of overridable values that can be passed when running a task.
func (o EncodedTaskStepInvokeResponseOutput) Values() SetValueInvokeResponseArrayOutput {
	return o.ApplyT(func(v EncodedTaskStepInvokeResponse) []SetValueInvokeResponse { return v.Values }).(SetValueInvokeResponseArrayOutput)
}

// The properties of a encoded task step.
type EncodedTaskStepResponse struct {
	// List of base image dependencies for a step.
	BaseImageDependencies []BaseImageDependencyResponse `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath *string `pulumi:"contextPath"`
	// Base64 encoded value of the template/definition file content.
	EncodedTaskContent string `pulumi:"encodedTaskContent"`
	// Base64 encoded value of the parameters/values file content.
	EncodedValuesContent *string `pulumi:"encodedValuesContent"`
	// The type of the step.
	// Expected value is 'EncodedTask'.
	Type string `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values []SetValueResponse `pulumi:"values"`
}

// EncodedTaskStepResponseInput is an input type that accepts EncodedTaskStepResponseArgs and EncodedTaskStepResponseOutput values.
// You can construct a concrete instance of `EncodedTaskStepResponseInput` via:
//
//          EncodedTaskStepResponseArgs{...}
type EncodedTaskStepResponseInput interface {
	pulumi.Input

	ToEncodedTaskStepResponseOutput() EncodedTaskStepResponseOutput
	ToEncodedTaskStepResponseOutputWithContext(context.Context) EncodedTaskStepResponseOutput
}

// The properties of a encoded task step.
type EncodedTaskStepResponseArgs struct {
	// List of base image dependencies for a step.
	BaseImageDependencies BaseImageDependencyResponseArrayInput `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// Base64 encoded value of the template/definition file content.
	EncodedTaskContent pulumi.StringInput `pulumi:"encodedTaskContent"`
	// Base64 encoded value of the parameters/values file content.
	EncodedValuesContent pulumi.StringPtrInput `pulumi:"encodedValuesContent"`
	// The type of the step.
	// Expected value is 'EncodedTask'.
	Type pulumi.StringInput `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values SetValueResponseArrayInput `pulumi:"values"`
}

func (EncodedTaskStepResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncodedTaskStepResponse)(nil)).Elem()
}

func (i EncodedTaskStepResponseArgs) ToEncodedTaskStepResponseOutput() EncodedTaskStepResponseOutput {
	return i.ToEncodedTaskStepResponseOutputWithContext(context.Background())
}

func (i EncodedTaskStepResponseArgs) ToEncodedTaskStepResponseOutputWithContext(ctx context.Context) EncodedTaskStepResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncodedTaskStepResponseOutput)
}

// The properties of a encoded task step.
type EncodedTaskStepResponseOutput struct{ *pulumi.OutputState }

func (EncodedTaskStepResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncodedTaskStepResponse)(nil)).Elem()
}

func (o EncodedTaskStepResponseOutput) ToEncodedTaskStepResponseOutput() EncodedTaskStepResponseOutput {
	return o
}

func (o EncodedTaskStepResponseOutput) ToEncodedTaskStepResponseOutputWithContext(ctx context.Context) EncodedTaskStepResponseOutput {
	return o
}

// List of base image dependencies for a step.
func (o EncodedTaskStepResponseOutput) BaseImageDependencies() BaseImageDependencyResponseArrayOutput {
	return o.ApplyT(func(v EncodedTaskStepResponse) []BaseImageDependencyResponse { return v.BaseImageDependencies }).(BaseImageDependencyResponseArrayOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o EncodedTaskStepResponseOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskStepResponse) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o EncodedTaskStepResponseOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskStepResponse) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// Base64 encoded value of the template/definition file content.
func (o EncodedTaskStepResponseOutput) EncodedTaskContent() pulumi.StringOutput {
	return o.ApplyT(func(v EncodedTaskStepResponse) string { return v.EncodedTaskContent }).(pulumi.StringOutput)
}

// Base64 encoded value of the parameters/values file content.
func (o EncodedTaskStepResponseOutput) EncodedValuesContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncodedTaskStepResponse) *string { return v.EncodedValuesContent }).(pulumi.StringPtrOutput)
}

// The type of the step.
// Expected value is 'EncodedTask'.
func (o EncodedTaskStepResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EncodedTaskStepResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The collection of overridable values that can be passed when running a task.
func (o EncodedTaskStepResponseOutput) Values() SetValueResponseArrayOutput {
	return o.ApplyT(func(v EncodedTaskStepResponse) []SetValueResponse { return v.Values }).(SetValueResponseArrayOutput)
}

// The request parameters for a scheduling run against a task file.
type FileTaskRunRequest struct {
	// The machine configuration of the run agent.
	AgentConfiguration *AgentProperties `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName *string `pulumi:"agentPoolName"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials *Credentials `pulumi:"credentials"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate *string `pulumi:"logTemplate"`
	// The platform properties against which the run has to happen.
	Platform PlatformProperties `pulumi:"platform"`
	// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
	// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
	SourceLocation *string `pulumi:"sourceLocation"`
	// The template/definition file path relative to the source.
	TaskFilePath string `pulumi:"taskFilePath"`
	// Run timeout in seconds.
	Timeout *int `pulumi:"timeout"`
	// The type of the run request.
	// Expected value is 'FileTaskRunRequest'.
	Type string `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values []SetValue `pulumi:"values"`
	// The values/parameters file path relative to the source.
	ValuesFilePath *string `pulumi:"valuesFilePath"`
}

// FileTaskRunRequestInput is an input type that accepts FileTaskRunRequestArgs and FileTaskRunRequestOutput values.
// You can construct a concrete instance of `FileTaskRunRequestInput` via:
//
//          FileTaskRunRequestArgs{...}
type FileTaskRunRequestInput interface {
	pulumi.Input

	ToFileTaskRunRequestOutput() FileTaskRunRequestOutput
	ToFileTaskRunRequestOutputWithContext(context.Context) FileTaskRunRequestOutput
}

// The request parameters for a scheduling run against a task file.
type FileTaskRunRequestArgs struct {
	// The machine configuration of the run agent.
	AgentConfiguration AgentPropertiesPtrInput `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName pulumi.StringPtrInput `pulumi:"agentPoolName"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials CredentialsPtrInput `pulumi:"credentials"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate pulumi.StringPtrInput `pulumi:"logTemplate"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesInput `pulumi:"platform"`
	// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
	// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
	SourceLocation pulumi.StringPtrInput `pulumi:"sourceLocation"`
	// The template/definition file path relative to the source.
	TaskFilePath pulumi.StringInput `pulumi:"taskFilePath"`
	// Run timeout in seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The type of the run request.
	// Expected value is 'FileTaskRunRequest'.
	Type pulumi.StringInput `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values SetValueArrayInput `pulumi:"values"`
	// The values/parameters file path relative to the source.
	ValuesFilePath pulumi.StringPtrInput `pulumi:"valuesFilePath"`
}

func (FileTaskRunRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileTaskRunRequest)(nil)).Elem()
}

func (i FileTaskRunRequestArgs) ToFileTaskRunRequestOutput() FileTaskRunRequestOutput {
	return i.ToFileTaskRunRequestOutputWithContext(context.Background())
}

func (i FileTaskRunRequestArgs) ToFileTaskRunRequestOutputWithContext(ctx context.Context) FileTaskRunRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileTaskRunRequestOutput)
}

// The request parameters for a scheduling run against a task file.
type FileTaskRunRequestOutput struct{ *pulumi.OutputState }

func (FileTaskRunRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileTaskRunRequest)(nil)).Elem()
}

func (o FileTaskRunRequestOutput) ToFileTaskRunRequestOutput() FileTaskRunRequestOutput {
	return o
}

func (o FileTaskRunRequestOutput) ToFileTaskRunRequestOutputWithContext(ctx context.Context) FileTaskRunRequestOutput {
	return o
}

// The machine configuration of the run agent.
func (o FileTaskRunRequestOutput) AgentConfiguration() AgentPropertiesPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequest) *AgentProperties { return v.AgentConfiguration }).(AgentPropertiesPtrOutput)
}

// The dedicated agent pool for the run.
func (o FileTaskRunRequestOutput) AgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequest) *string { return v.AgentPoolName }).(pulumi.StringPtrOutput)
}

// The properties that describes a set of credentials that will be used when this run is invoked.
func (o FileTaskRunRequestOutput) Credentials() CredentialsPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequest) *Credentials { return v.Credentials }).(CredentialsPtrOutput)
}

// The value that indicates whether archiving is enabled for the run or not.
func (o FileTaskRunRequestOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequest) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// The template that describes the repository and tag information for run log artifact.
func (o FileTaskRunRequestOutput) LogTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequest) *string { return v.LogTemplate }).(pulumi.StringPtrOutput)
}

// The platform properties against which the run has to happen.
func (o FileTaskRunRequestOutput) Platform() PlatformPropertiesOutput {
	return o.ApplyT(func(v FileTaskRunRequest) PlatformProperties { return v.Platform }).(PlatformPropertiesOutput)
}

// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
func (o FileTaskRunRequestOutput) SourceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequest) *string { return v.SourceLocation }).(pulumi.StringPtrOutput)
}

// The template/definition file path relative to the source.
func (o FileTaskRunRequestOutput) TaskFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v FileTaskRunRequest) string { return v.TaskFilePath }).(pulumi.StringOutput)
}

// Run timeout in seconds.
func (o FileTaskRunRequestOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequest) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The type of the run request.
// Expected value is 'FileTaskRunRequest'.
func (o FileTaskRunRequestOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FileTaskRunRequest) string { return v.Type }).(pulumi.StringOutput)
}

// The collection of overridable values that can be passed when running a task.
func (o FileTaskRunRequestOutput) Values() SetValueArrayOutput {
	return o.ApplyT(func(v FileTaskRunRequest) []SetValue { return v.Values }).(SetValueArrayOutput)
}

// The values/parameters file path relative to the source.
func (o FileTaskRunRequestOutput) ValuesFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequest) *string { return v.ValuesFilePath }).(pulumi.StringPtrOutput)
}

// The request parameters for a scheduling run against a task file.
type FileTaskRunRequestInvokeResponse struct {
	// The machine configuration of the run agent.
	AgentConfiguration *AgentPropertiesInvokeResponse `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName *string `pulumi:"agentPoolName"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials *CredentialsInvokeResponse `pulumi:"credentials"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate *string `pulumi:"logTemplate"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesInvokeResponse `pulumi:"platform"`
	// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
	// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
	SourceLocation *string `pulumi:"sourceLocation"`
	// The template/definition file path relative to the source.
	TaskFilePath string `pulumi:"taskFilePath"`
	// Run timeout in seconds.
	Timeout *int `pulumi:"timeout"`
	// The type of the run request.
	// Expected value is 'FileTaskRunRequest'.
	Type string `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values []SetValueInvokeResponse `pulumi:"values"`
	// The values/parameters file path relative to the source.
	ValuesFilePath *string `pulumi:"valuesFilePath"`
}

// FileTaskRunRequestInvokeResponseInput is an input type that accepts FileTaskRunRequestInvokeResponseArgs and FileTaskRunRequestInvokeResponseOutput values.
// You can construct a concrete instance of `FileTaskRunRequestInvokeResponseInput` via:
//
//          FileTaskRunRequestInvokeResponseArgs{...}
type FileTaskRunRequestInvokeResponseInput interface {
	pulumi.Input

	ToFileTaskRunRequestInvokeResponseOutput() FileTaskRunRequestInvokeResponseOutput
	ToFileTaskRunRequestInvokeResponseOutputWithContext(context.Context) FileTaskRunRequestInvokeResponseOutput
}

// The request parameters for a scheduling run against a task file.
type FileTaskRunRequestInvokeResponseArgs struct {
	// The machine configuration of the run agent.
	AgentConfiguration AgentPropertiesInvokeResponsePtrInput `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName pulumi.StringPtrInput `pulumi:"agentPoolName"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials CredentialsInvokeResponsePtrInput `pulumi:"credentials"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate pulumi.StringPtrInput `pulumi:"logTemplate"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesInvokeResponseInput `pulumi:"platform"`
	// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
	// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
	SourceLocation pulumi.StringPtrInput `pulumi:"sourceLocation"`
	// The template/definition file path relative to the source.
	TaskFilePath pulumi.StringInput `pulumi:"taskFilePath"`
	// Run timeout in seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The type of the run request.
	// Expected value is 'FileTaskRunRequest'.
	Type pulumi.StringInput `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values SetValueInvokeResponseArrayInput `pulumi:"values"`
	// The values/parameters file path relative to the source.
	ValuesFilePath pulumi.StringPtrInput `pulumi:"valuesFilePath"`
}

func (FileTaskRunRequestInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileTaskRunRequestInvokeResponse)(nil)).Elem()
}

func (i FileTaskRunRequestInvokeResponseArgs) ToFileTaskRunRequestInvokeResponseOutput() FileTaskRunRequestInvokeResponseOutput {
	return i.ToFileTaskRunRequestInvokeResponseOutputWithContext(context.Background())
}

func (i FileTaskRunRequestInvokeResponseArgs) ToFileTaskRunRequestInvokeResponseOutputWithContext(ctx context.Context) FileTaskRunRequestInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileTaskRunRequestInvokeResponseOutput)
}

// The request parameters for a scheduling run against a task file.
type FileTaskRunRequestInvokeResponseOutput struct{ *pulumi.OutputState }

func (FileTaskRunRequestInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileTaskRunRequestInvokeResponse)(nil)).Elem()
}

func (o FileTaskRunRequestInvokeResponseOutput) ToFileTaskRunRequestInvokeResponseOutput() FileTaskRunRequestInvokeResponseOutput {
	return o
}

func (o FileTaskRunRequestInvokeResponseOutput) ToFileTaskRunRequestInvokeResponseOutputWithContext(ctx context.Context) FileTaskRunRequestInvokeResponseOutput {
	return o
}

// The machine configuration of the run agent.
func (o FileTaskRunRequestInvokeResponseOutput) AgentConfiguration() AgentPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v FileTaskRunRequestInvokeResponse) *AgentPropertiesInvokeResponse { return v.AgentConfiguration }).(AgentPropertiesInvokeResponsePtrOutput)
}

// The dedicated agent pool for the run.
func (o FileTaskRunRequestInvokeResponseOutput) AgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequestInvokeResponse) *string { return v.AgentPoolName }).(pulumi.StringPtrOutput)
}

// The properties that describes a set of credentials that will be used when this run is invoked.
func (o FileTaskRunRequestInvokeResponseOutput) Credentials() CredentialsInvokeResponsePtrOutput {
	return o.ApplyT(func(v FileTaskRunRequestInvokeResponse) *CredentialsInvokeResponse { return v.Credentials }).(CredentialsInvokeResponsePtrOutput)
}

// The value that indicates whether archiving is enabled for the run or not.
func (o FileTaskRunRequestInvokeResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequestInvokeResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// The template that describes the repository and tag information for run log artifact.
func (o FileTaskRunRequestInvokeResponseOutput) LogTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequestInvokeResponse) *string { return v.LogTemplate }).(pulumi.StringPtrOutput)
}

// The platform properties against which the run has to happen.
func (o FileTaskRunRequestInvokeResponseOutput) Platform() PlatformPropertiesInvokeResponseOutput {
	return o.ApplyT(func(v FileTaskRunRequestInvokeResponse) PlatformPropertiesInvokeResponse { return v.Platform }).(PlatformPropertiesInvokeResponseOutput)
}

// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
func (o FileTaskRunRequestInvokeResponseOutput) SourceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequestInvokeResponse) *string { return v.SourceLocation }).(pulumi.StringPtrOutput)
}

// The template/definition file path relative to the source.
func (o FileTaskRunRequestInvokeResponseOutput) TaskFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v FileTaskRunRequestInvokeResponse) string { return v.TaskFilePath }).(pulumi.StringOutput)
}

// Run timeout in seconds.
func (o FileTaskRunRequestInvokeResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequestInvokeResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The type of the run request.
// Expected value is 'FileTaskRunRequest'.
func (o FileTaskRunRequestInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FileTaskRunRequestInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The collection of overridable values that can be passed when running a task.
func (o FileTaskRunRequestInvokeResponseOutput) Values() SetValueInvokeResponseArrayOutput {
	return o.ApplyT(func(v FileTaskRunRequestInvokeResponse) []SetValueInvokeResponse { return v.Values }).(SetValueInvokeResponseArrayOutput)
}

// The values/parameters file path relative to the source.
func (o FileTaskRunRequestInvokeResponseOutput) ValuesFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequestInvokeResponse) *string { return v.ValuesFilePath }).(pulumi.StringPtrOutput)
}

// The request parameters for a scheduling run against a task file.
type FileTaskRunRequestResponse struct {
	// The machine configuration of the run agent.
	AgentConfiguration *AgentPropertiesResponse `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName *string `pulumi:"agentPoolName"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials *CredentialsResponse `pulumi:"credentials"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate *string `pulumi:"logTemplate"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesResponse `pulumi:"platform"`
	// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
	// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
	SourceLocation *string `pulumi:"sourceLocation"`
	// The template/definition file path relative to the source.
	TaskFilePath string `pulumi:"taskFilePath"`
	// Run timeout in seconds.
	Timeout *int `pulumi:"timeout"`
	// The type of the run request.
	// Expected value is 'FileTaskRunRequest'.
	Type string `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values []SetValueResponse `pulumi:"values"`
	// The values/parameters file path relative to the source.
	ValuesFilePath *string `pulumi:"valuesFilePath"`
}

// FileTaskRunRequestResponseInput is an input type that accepts FileTaskRunRequestResponseArgs and FileTaskRunRequestResponseOutput values.
// You can construct a concrete instance of `FileTaskRunRequestResponseInput` via:
//
//          FileTaskRunRequestResponseArgs{...}
type FileTaskRunRequestResponseInput interface {
	pulumi.Input

	ToFileTaskRunRequestResponseOutput() FileTaskRunRequestResponseOutput
	ToFileTaskRunRequestResponseOutputWithContext(context.Context) FileTaskRunRequestResponseOutput
}

// The request parameters for a scheduling run against a task file.
type FileTaskRunRequestResponseArgs struct {
	// The machine configuration of the run agent.
	AgentConfiguration AgentPropertiesResponsePtrInput `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName pulumi.StringPtrInput `pulumi:"agentPoolName"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials CredentialsResponsePtrInput `pulumi:"credentials"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate pulumi.StringPtrInput `pulumi:"logTemplate"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesResponseInput `pulumi:"platform"`
	// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
	// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
	SourceLocation pulumi.StringPtrInput `pulumi:"sourceLocation"`
	// The template/definition file path relative to the source.
	TaskFilePath pulumi.StringInput `pulumi:"taskFilePath"`
	// Run timeout in seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The type of the run request.
	// Expected value is 'FileTaskRunRequest'.
	Type pulumi.StringInput `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values SetValueResponseArrayInput `pulumi:"values"`
	// The values/parameters file path relative to the source.
	ValuesFilePath pulumi.StringPtrInput `pulumi:"valuesFilePath"`
}

func (FileTaskRunRequestResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileTaskRunRequestResponse)(nil)).Elem()
}

func (i FileTaskRunRequestResponseArgs) ToFileTaskRunRequestResponseOutput() FileTaskRunRequestResponseOutput {
	return i.ToFileTaskRunRequestResponseOutputWithContext(context.Background())
}

func (i FileTaskRunRequestResponseArgs) ToFileTaskRunRequestResponseOutputWithContext(ctx context.Context) FileTaskRunRequestResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileTaskRunRequestResponseOutput)
}

// The request parameters for a scheduling run against a task file.
type FileTaskRunRequestResponseOutput struct{ *pulumi.OutputState }

func (FileTaskRunRequestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileTaskRunRequestResponse)(nil)).Elem()
}

func (o FileTaskRunRequestResponseOutput) ToFileTaskRunRequestResponseOutput() FileTaskRunRequestResponseOutput {
	return o
}

func (o FileTaskRunRequestResponseOutput) ToFileTaskRunRequestResponseOutputWithContext(ctx context.Context) FileTaskRunRequestResponseOutput {
	return o
}

// The machine configuration of the run agent.
func (o FileTaskRunRequestResponseOutput) AgentConfiguration() AgentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v FileTaskRunRequestResponse) *AgentPropertiesResponse { return v.AgentConfiguration }).(AgentPropertiesResponsePtrOutput)
}

// The dedicated agent pool for the run.
func (o FileTaskRunRequestResponseOutput) AgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequestResponse) *string { return v.AgentPoolName }).(pulumi.StringPtrOutput)
}

// The properties that describes a set of credentials that will be used when this run is invoked.
func (o FileTaskRunRequestResponseOutput) Credentials() CredentialsResponsePtrOutput {
	return o.ApplyT(func(v FileTaskRunRequestResponse) *CredentialsResponse { return v.Credentials }).(CredentialsResponsePtrOutput)
}

// The value that indicates whether archiving is enabled for the run or not.
func (o FileTaskRunRequestResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequestResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// The template that describes the repository and tag information for run log artifact.
func (o FileTaskRunRequestResponseOutput) LogTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequestResponse) *string { return v.LogTemplate }).(pulumi.StringPtrOutput)
}

// The platform properties against which the run has to happen.
func (o FileTaskRunRequestResponseOutput) Platform() PlatformPropertiesResponseOutput {
	return o.ApplyT(func(v FileTaskRunRequestResponse) PlatformPropertiesResponse { return v.Platform }).(PlatformPropertiesResponseOutput)
}

// The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.
// If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.
func (o FileTaskRunRequestResponseOutput) SourceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequestResponse) *string { return v.SourceLocation }).(pulumi.StringPtrOutput)
}

// The template/definition file path relative to the source.
func (o FileTaskRunRequestResponseOutput) TaskFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v FileTaskRunRequestResponse) string { return v.TaskFilePath }).(pulumi.StringOutput)
}

// Run timeout in seconds.
func (o FileTaskRunRequestResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequestResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The type of the run request.
// Expected value is 'FileTaskRunRequest'.
func (o FileTaskRunRequestResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FileTaskRunRequestResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The collection of overridable values that can be passed when running a task.
func (o FileTaskRunRequestResponseOutput) Values() SetValueResponseArrayOutput {
	return o.ApplyT(func(v FileTaskRunRequestResponse) []SetValueResponse { return v.Values }).(SetValueResponseArrayOutput)
}

// The values/parameters file path relative to the source.
func (o FileTaskRunRequestResponseOutput) ValuesFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskRunRequestResponse) *string { return v.ValuesFilePath }).(pulumi.StringPtrOutput)
}

// The properties of a task step.
type FileTaskStep struct {
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath *string `pulumi:"contextPath"`
	// The task template/definition file path relative to the source context.
	TaskFilePath string `pulumi:"taskFilePath"`
	// The type of the step.
	// Expected value is 'FileTask'.
	Type string `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values []SetValue `pulumi:"values"`
	// The task values/parameters file path relative to the source context.
	ValuesFilePath *string `pulumi:"valuesFilePath"`
}

// FileTaskStepInput is an input type that accepts FileTaskStepArgs and FileTaskStepOutput values.
// You can construct a concrete instance of `FileTaskStepInput` via:
//
//          FileTaskStepArgs{...}
type FileTaskStepInput interface {
	pulumi.Input

	ToFileTaskStepOutput() FileTaskStepOutput
	ToFileTaskStepOutputWithContext(context.Context) FileTaskStepOutput
}

// The properties of a task step.
type FileTaskStepArgs struct {
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// The task template/definition file path relative to the source context.
	TaskFilePath pulumi.StringInput `pulumi:"taskFilePath"`
	// The type of the step.
	// Expected value is 'FileTask'.
	Type pulumi.StringInput `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values SetValueArrayInput `pulumi:"values"`
	// The task values/parameters file path relative to the source context.
	ValuesFilePath pulumi.StringPtrInput `pulumi:"valuesFilePath"`
}

func (FileTaskStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileTaskStep)(nil)).Elem()
}

func (i FileTaskStepArgs) ToFileTaskStepOutput() FileTaskStepOutput {
	return i.ToFileTaskStepOutputWithContext(context.Background())
}

func (i FileTaskStepArgs) ToFileTaskStepOutputWithContext(ctx context.Context) FileTaskStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileTaskStepOutput)
}

// The properties of a task step.
type FileTaskStepOutput struct{ *pulumi.OutputState }

func (FileTaskStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileTaskStep)(nil)).Elem()
}

func (o FileTaskStepOutput) ToFileTaskStepOutput() FileTaskStepOutput {
	return o
}

func (o FileTaskStepOutput) ToFileTaskStepOutputWithContext(ctx context.Context) FileTaskStepOutput {
	return o
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o FileTaskStepOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskStep) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o FileTaskStepOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskStep) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// The task template/definition file path relative to the source context.
func (o FileTaskStepOutput) TaskFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v FileTaskStep) string { return v.TaskFilePath }).(pulumi.StringOutput)
}

// The type of the step.
// Expected value is 'FileTask'.
func (o FileTaskStepOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FileTaskStep) string { return v.Type }).(pulumi.StringOutput)
}

// The collection of overridable values that can be passed when running a task.
func (o FileTaskStepOutput) Values() SetValueArrayOutput {
	return o.ApplyT(func(v FileTaskStep) []SetValue { return v.Values }).(SetValueArrayOutput)
}

// The task values/parameters file path relative to the source context.
func (o FileTaskStepOutput) ValuesFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskStep) *string { return v.ValuesFilePath }).(pulumi.StringPtrOutput)
}

// The properties of a task step.
type FileTaskStepInvokeResponse struct {
	// List of base image dependencies for a step.
	BaseImageDependencies []BaseImageDependencyInvokeResponse `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath *string `pulumi:"contextPath"`
	// The task template/definition file path relative to the source context.
	TaskFilePath string `pulumi:"taskFilePath"`
	// The type of the step.
	// Expected value is 'FileTask'.
	Type string `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values []SetValueInvokeResponse `pulumi:"values"`
	// The task values/parameters file path relative to the source context.
	ValuesFilePath *string `pulumi:"valuesFilePath"`
}

// FileTaskStepInvokeResponseInput is an input type that accepts FileTaskStepInvokeResponseArgs and FileTaskStepInvokeResponseOutput values.
// You can construct a concrete instance of `FileTaskStepInvokeResponseInput` via:
//
//          FileTaskStepInvokeResponseArgs{...}
type FileTaskStepInvokeResponseInput interface {
	pulumi.Input

	ToFileTaskStepInvokeResponseOutput() FileTaskStepInvokeResponseOutput
	ToFileTaskStepInvokeResponseOutputWithContext(context.Context) FileTaskStepInvokeResponseOutput
}

// The properties of a task step.
type FileTaskStepInvokeResponseArgs struct {
	// List of base image dependencies for a step.
	BaseImageDependencies BaseImageDependencyInvokeResponseArrayInput `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// The task template/definition file path relative to the source context.
	TaskFilePath pulumi.StringInput `pulumi:"taskFilePath"`
	// The type of the step.
	// Expected value is 'FileTask'.
	Type pulumi.StringInput `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values SetValueInvokeResponseArrayInput `pulumi:"values"`
	// The task values/parameters file path relative to the source context.
	ValuesFilePath pulumi.StringPtrInput `pulumi:"valuesFilePath"`
}

func (FileTaskStepInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileTaskStepInvokeResponse)(nil)).Elem()
}

func (i FileTaskStepInvokeResponseArgs) ToFileTaskStepInvokeResponseOutput() FileTaskStepInvokeResponseOutput {
	return i.ToFileTaskStepInvokeResponseOutputWithContext(context.Background())
}

func (i FileTaskStepInvokeResponseArgs) ToFileTaskStepInvokeResponseOutputWithContext(ctx context.Context) FileTaskStepInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileTaskStepInvokeResponseOutput)
}

// The properties of a task step.
type FileTaskStepInvokeResponseOutput struct{ *pulumi.OutputState }

func (FileTaskStepInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileTaskStepInvokeResponse)(nil)).Elem()
}

func (o FileTaskStepInvokeResponseOutput) ToFileTaskStepInvokeResponseOutput() FileTaskStepInvokeResponseOutput {
	return o
}

func (o FileTaskStepInvokeResponseOutput) ToFileTaskStepInvokeResponseOutputWithContext(ctx context.Context) FileTaskStepInvokeResponseOutput {
	return o
}

// List of base image dependencies for a step.
func (o FileTaskStepInvokeResponseOutput) BaseImageDependencies() BaseImageDependencyInvokeResponseArrayOutput {
	return o.ApplyT(func(v FileTaskStepInvokeResponse) []BaseImageDependencyInvokeResponse { return v.BaseImageDependencies }).(BaseImageDependencyInvokeResponseArrayOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o FileTaskStepInvokeResponseOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskStepInvokeResponse) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o FileTaskStepInvokeResponseOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskStepInvokeResponse) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// The task template/definition file path relative to the source context.
func (o FileTaskStepInvokeResponseOutput) TaskFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v FileTaskStepInvokeResponse) string { return v.TaskFilePath }).(pulumi.StringOutput)
}

// The type of the step.
// Expected value is 'FileTask'.
func (o FileTaskStepInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FileTaskStepInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The collection of overridable values that can be passed when running a task.
func (o FileTaskStepInvokeResponseOutput) Values() SetValueInvokeResponseArrayOutput {
	return o.ApplyT(func(v FileTaskStepInvokeResponse) []SetValueInvokeResponse { return v.Values }).(SetValueInvokeResponseArrayOutput)
}

// The task values/parameters file path relative to the source context.
func (o FileTaskStepInvokeResponseOutput) ValuesFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskStepInvokeResponse) *string { return v.ValuesFilePath }).(pulumi.StringPtrOutput)
}

// The properties of a task step.
type FileTaskStepResponse struct {
	// List of base image dependencies for a step.
	BaseImageDependencies []BaseImageDependencyResponse `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath *string `pulumi:"contextPath"`
	// The task template/definition file path relative to the source context.
	TaskFilePath string `pulumi:"taskFilePath"`
	// The type of the step.
	// Expected value is 'FileTask'.
	Type string `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values []SetValueResponse `pulumi:"values"`
	// The task values/parameters file path relative to the source context.
	ValuesFilePath *string `pulumi:"valuesFilePath"`
}

// FileTaskStepResponseInput is an input type that accepts FileTaskStepResponseArgs and FileTaskStepResponseOutput values.
// You can construct a concrete instance of `FileTaskStepResponseInput` via:
//
//          FileTaskStepResponseArgs{...}
type FileTaskStepResponseInput interface {
	pulumi.Input

	ToFileTaskStepResponseOutput() FileTaskStepResponseOutput
	ToFileTaskStepResponseOutputWithContext(context.Context) FileTaskStepResponseOutput
}

// The properties of a task step.
type FileTaskStepResponseArgs struct {
	// List of base image dependencies for a step.
	BaseImageDependencies BaseImageDependencyResponseArrayInput `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// The task template/definition file path relative to the source context.
	TaskFilePath pulumi.StringInput `pulumi:"taskFilePath"`
	// The type of the step.
	// Expected value is 'FileTask'.
	Type pulumi.StringInput `pulumi:"type"`
	// The collection of overridable values that can be passed when running a task.
	Values SetValueResponseArrayInput `pulumi:"values"`
	// The task values/parameters file path relative to the source context.
	ValuesFilePath pulumi.StringPtrInput `pulumi:"valuesFilePath"`
}

func (FileTaskStepResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileTaskStepResponse)(nil)).Elem()
}

func (i FileTaskStepResponseArgs) ToFileTaskStepResponseOutput() FileTaskStepResponseOutput {
	return i.ToFileTaskStepResponseOutputWithContext(context.Background())
}

func (i FileTaskStepResponseArgs) ToFileTaskStepResponseOutputWithContext(ctx context.Context) FileTaskStepResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileTaskStepResponseOutput)
}

// The properties of a task step.
type FileTaskStepResponseOutput struct{ *pulumi.OutputState }

func (FileTaskStepResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileTaskStepResponse)(nil)).Elem()
}

func (o FileTaskStepResponseOutput) ToFileTaskStepResponseOutput() FileTaskStepResponseOutput {
	return o
}

func (o FileTaskStepResponseOutput) ToFileTaskStepResponseOutputWithContext(ctx context.Context) FileTaskStepResponseOutput {
	return o
}

// List of base image dependencies for a step.
func (o FileTaskStepResponseOutput) BaseImageDependencies() BaseImageDependencyResponseArrayOutput {
	return o.ApplyT(func(v FileTaskStepResponse) []BaseImageDependencyResponse { return v.BaseImageDependencies }).(BaseImageDependencyResponseArrayOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o FileTaskStepResponseOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskStepResponse) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o FileTaskStepResponseOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskStepResponse) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// The task template/definition file path relative to the source context.
func (o FileTaskStepResponseOutput) TaskFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v FileTaskStepResponse) string { return v.TaskFilePath }).(pulumi.StringOutput)
}

// The type of the step.
// Expected value is 'FileTask'.
func (o FileTaskStepResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FileTaskStepResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The collection of overridable values that can be passed when running a task.
func (o FileTaskStepResponseOutput) Values() SetValueResponseArrayOutput {
	return o.ApplyT(func(v FileTaskStepResponse) []SetValueResponse { return v.Values }).(SetValueResponseArrayOutput)
}

// The task values/parameters file path relative to the source context.
func (o FileTaskStepResponseOutput) ValuesFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileTaskStepResponse) *string { return v.ValuesFilePath }).(pulumi.StringPtrOutput)
}

// Managed identity for the resource.
type IdentityProperties struct {
	// The principal ID of resource identity.
	PrincipalId *string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId *string `pulumi:"tenantId"`
	// The identity type.
	Type *string `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]UserIdentityProperties `pulumi:"userAssignedIdentities"`
}

// IdentityPropertiesInput is an input type that accepts IdentityPropertiesArgs and IdentityPropertiesOutput values.
// You can construct a concrete instance of `IdentityPropertiesInput` via:
//
//          IdentityPropertiesArgs{...}
type IdentityPropertiesInput interface {
	pulumi.Input

	ToIdentityPropertiesOutput() IdentityPropertiesOutput
	ToIdentityPropertiesOutputWithContext(context.Context) IdentityPropertiesOutput
}

// Managed identity for the resource.
type IdentityPropertiesArgs struct {
	// The principal ID of resource identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The identity type.
	Type ResourceIdentityType `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities UserIdentityPropertiesMapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProperties)(nil)).Elem()
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesOutput() IdentityPropertiesOutput {
	return i.ToIdentityPropertiesOutputWithContext(context.Background())
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesOutputWithContext(ctx context.Context) IdentityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesOutput)
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return i.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesOutput).ToIdentityPropertiesPtrOutputWithContext(ctx)
}

// IdentityPropertiesPtrInput is an input type that accepts IdentityPropertiesArgs, IdentityPropertiesPtr and IdentityPropertiesPtrOutput values.
// You can construct a concrete instance of `IdentityPropertiesPtrInput` via:
//
//          IdentityPropertiesArgs{...}
//
//  or:
//
//          nil
type IdentityPropertiesPtrInput interface {
	pulumi.Input

	ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput
	ToIdentityPropertiesPtrOutputWithContext(context.Context) IdentityPropertiesPtrOutput
}

type identityPropertiesPtrType IdentityPropertiesArgs

func IdentityPropertiesPtr(v *IdentityPropertiesArgs) IdentityPropertiesPtrInput {
	return (*identityPropertiesPtrType)(v)
}

func (*identityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProperties)(nil)).Elem()
}

func (i *identityPropertiesPtrType) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return i.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i *identityPropertiesPtrType) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesPtrOutput)
}

// Managed identity for the resource.
type IdentityPropertiesOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProperties)(nil)).Elem()
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesOutput() IdentityPropertiesOutput {
	return o
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesOutputWithContext(ctx context.Context) IdentityPropertiesOutput {
	return o
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return o.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *IdentityProperties {
		return &v
	}).(IdentityPropertiesPtrOutput)
}

// The principal ID of resource identity.
func (o IdentityPropertiesOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityPropertiesOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityPropertiesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity
// dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityPropertiesOutput) UserAssignedIdentities() UserIdentityPropertiesMapOutput {
	return o.ApplyT(func(v IdentityProperties) map[string]UserIdentityProperties { return v.UserAssignedIdentities }).(UserIdentityPropertiesMapOutput)
}

type IdentityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProperties)(nil)).Elem()
}

func (o IdentityPropertiesPtrOutput) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return o
}

func (o IdentityPropertiesPtrOutput) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return o
}

func (o IdentityPropertiesPtrOutput) Elem() IdentityPropertiesOutput {
	return o.ApplyT(func(v *IdentityProperties) IdentityProperties { return *v }).(IdentityPropertiesOutput)
}

// The principal ID of resource identity.
func (o IdentityPropertiesPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityPropertiesPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityPropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity
// dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityPropertiesPtrOutput) UserAssignedIdentities() UserIdentityPropertiesMapOutput {
	return o.ApplyT(func(v *IdentityProperties) map[string]UserIdentityProperties {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserIdentityPropertiesMapOutput)
}

// Managed identity for the resource.
type IdentityPropertiesInvokeResponse struct {
	// The principal ID of resource identity.
	PrincipalId *string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId *string `pulumi:"tenantId"`
	// The identity type.
	Type *string `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]UserIdentityPropertiesInvokeResponse `pulumi:"userAssignedIdentities"`
}

// IdentityPropertiesInvokeResponseInput is an input type that accepts IdentityPropertiesInvokeResponseArgs and IdentityPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `IdentityPropertiesInvokeResponseInput` via:
//
//          IdentityPropertiesInvokeResponseArgs{...}
type IdentityPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToIdentityPropertiesInvokeResponseOutput() IdentityPropertiesInvokeResponseOutput
	ToIdentityPropertiesInvokeResponseOutputWithContext(context.Context) IdentityPropertiesInvokeResponseOutput
}

// Managed identity for the resource.
type IdentityPropertiesInvokeResponseArgs struct {
	// The principal ID of resource identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities UserIdentityPropertiesInvokeResponseMapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesInvokeResponse)(nil)).Elem()
}

func (i IdentityPropertiesInvokeResponseArgs) ToIdentityPropertiesInvokeResponseOutput() IdentityPropertiesInvokeResponseOutput {
	return i.ToIdentityPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i IdentityPropertiesInvokeResponseArgs) ToIdentityPropertiesInvokeResponseOutputWithContext(ctx context.Context) IdentityPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesInvokeResponseOutput)
}

// Managed identity for the resource.
type IdentityPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesInvokeResponse)(nil)).Elem()
}

func (o IdentityPropertiesInvokeResponseOutput) ToIdentityPropertiesInvokeResponseOutput() IdentityPropertiesInvokeResponseOutput {
	return o
}

func (o IdentityPropertiesInvokeResponseOutput) ToIdentityPropertiesInvokeResponseOutputWithContext(ctx context.Context) IdentityPropertiesInvokeResponseOutput {
	return o
}

// The principal ID of resource identity.
func (o IdentityPropertiesInvokeResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesInvokeResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityPropertiesInvokeResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesInvokeResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityPropertiesInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity
// dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityPropertiesInvokeResponseOutput) UserAssignedIdentities() UserIdentityPropertiesInvokeResponseMapOutput {
	return o.ApplyT(func(v IdentityPropertiesInvokeResponse) map[string]UserIdentityPropertiesInvokeResponse {
		return v.UserAssignedIdentities
	}).(UserIdentityPropertiesInvokeResponseMapOutput)
}

// Managed identity for the resource.
type IdentityPropertiesResponse struct {
	// The principal ID of resource identity.
	PrincipalId *string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId *string `pulumi:"tenantId"`
	// The identity type.
	Type *string `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]UserIdentityPropertiesResponse `pulumi:"userAssignedIdentities"`
}

// IdentityPropertiesResponseInput is an input type that accepts IdentityPropertiesResponseArgs and IdentityPropertiesResponseOutput values.
// You can construct a concrete instance of `IdentityPropertiesResponseInput` via:
//
//          IdentityPropertiesResponseArgs{...}
type IdentityPropertiesResponseInput interface {
	pulumi.Input

	ToIdentityPropertiesResponseOutput() IdentityPropertiesResponseOutput
	ToIdentityPropertiesResponseOutputWithContext(context.Context) IdentityPropertiesResponseOutput
}

// Managed identity for the resource.
type IdentityPropertiesResponseArgs struct {
	// The principal ID of resource identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities UserIdentityPropertiesResponseMapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesResponse)(nil)).Elem()
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponseOutput() IdentityPropertiesResponseOutput {
	return i.ToIdentityPropertiesResponseOutputWithContext(context.Background())
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponseOutputWithContext(ctx context.Context) IdentityPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesResponseOutput)
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return i.ToIdentityPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesResponseOutput).ToIdentityPropertiesResponsePtrOutputWithContext(ctx)
}

// IdentityPropertiesResponsePtrInput is an input type that accepts IdentityPropertiesResponseArgs, IdentityPropertiesResponsePtr and IdentityPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `IdentityPropertiesResponsePtrInput` via:
//
//          IdentityPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type IdentityPropertiesResponsePtrInput interface {
	pulumi.Input

	ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput
	ToIdentityPropertiesResponsePtrOutputWithContext(context.Context) IdentityPropertiesResponsePtrOutput
}

type identityPropertiesResponsePtrType IdentityPropertiesResponseArgs

func IdentityPropertiesResponsePtr(v *IdentityPropertiesResponseArgs) IdentityPropertiesResponsePtrInput {
	return (*identityPropertiesResponsePtrType)(v)
}

func (*identityPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPropertiesResponse)(nil)).Elem()
}

func (i *identityPropertiesResponsePtrType) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return i.ToIdentityPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *identityPropertiesResponsePtrType) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesResponsePtrOutput)
}

// Managed identity for the resource.
type IdentityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesResponse)(nil)).Elem()
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponseOutput() IdentityPropertiesResponseOutput {
	return o
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponseOutputWithContext(ctx context.Context) IdentityPropertiesResponseOutput {
	return o
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return o.ToIdentityPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *IdentityPropertiesResponse {
		return &v
	}).(IdentityPropertiesResponsePtrOutput)
}

// The principal ID of resource identity.
func (o IdentityPropertiesResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityPropertiesResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityPropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity
// dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityPropertiesResponseOutput) UserAssignedIdentities() UserIdentityPropertiesResponseMapOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) map[string]UserIdentityPropertiesResponse {
		return v.UserAssignedIdentities
	}).(UserIdentityPropertiesResponseMapOutput)
}

type IdentityPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPropertiesResponse)(nil)).Elem()
}

func (o IdentityPropertiesResponsePtrOutput) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return o
}

func (o IdentityPropertiesResponsePtrOutput) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return o
}

func (o IdentityPropertiesResponsePtrOutput) Elem() IdentityPropertiesResponseOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) IdentityPropertiesResponse { return *v }).(IdentityPropertiesResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityPropertiesResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityPropertiesResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity
// dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityPropertiesResponsePtrOutput) UserAssignedIdentities() UserIdentityPropertiesResponseMapOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) map[string]UserIdentityPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserIdentityPropertiesResponseMapOutput)
}

// Properties for a registry image.
type ImageDescriptorInvokeResponse struct {
	// The sha256-based digest of the image manifest.
	Digest *string `pulumi:"digest"`
	// The registry login server.
	Registry *string `pulumi:"registry"`
	// The repository name.
	Repository *string `pulumi:"repository"`
	// The tag name.
	Tag *string `pulumi:"tag"`
}

// ImageDescriptorInvokeResponseInput is an input type that accepts ImageDescriptorInvokeResponseArgs and ImageDescriptorInvokeResponseOutput values.
// You can construct a concrete instance of `ImageDescriptorInvokeResponseInput` via:
//
//          ImageDescriptorInvokeResponseArgs{...}
type ImageDescriptorInvokeResponseInput interface {
	pulumi.Input

	ToImageDescriptorInvokeResponseOutput() ImageDescriptorInvokeResponseOutput
	ToImageDescriptorInvokeResponseOutputWithContext(context.Context) ImageDescriptorInvokeResponseOutput
}

// Properties for a registry image.
type ImageDescriptorInvokeResponseArgs struct {
	// The sha256-based digest of the image manifest.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// The registry login server.
	Registry pulumi.StringPtrInput `pulumi:"registry"`
	// The repository name.
	Repository pulumi.StringPtrInput `pulumi:"repository"`
	// The tag name.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (ImageDescriptorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageDescriptorInvokeResponse)(nil)).Elem()
}

func (i ImageDescriptorInvokeResponseArgs) ToImageDescriptorInvokeResponseOutput() ImageDescriptorInvokeResponseOutput {
	return i.ToImageDescriptorInvokeResponseOutputWithContext(context.Background())
}

func (i ImageDescriptorInvokeResponseArgs) ToImageDescriptorInvokeResponseOutputWithContext(ctx context.Context) ImageDescriptorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageDescriptorInvokeResponseOutput)
}

// ImageDescriptorInvokeResponseArrayInput is an input type that accepts ImageDescriptorInvokeResponseArray and ImageDescriptorInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ImageDescriptorInvokeResponseArrayInput` via:
//
//          ImageDescriptorInvokeResponseArray{ ImageDescriptorInvokeResponseArgs{...} }
type ImageDescriptorInvokeResponseArrayInput interface {
	pulumi.Input

	ToImageDescriptorInvokeResponseArrayOutput() ImageDescriptorInvokeResponseArrayOutput
	ToImageDescriptorInvokeResponseArrayOutputWithContext(context.Context) ImageDescriptorInvokeResponseArrayOutput
}

type ImageDescriptorInvokeResponseArray []ImageDescriptorInvokeResponseInput

func (ImageDescriptorInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageDescriptorInvokeResponse)(nil)).Elem()
}

func (i ImageDescriptorInvokeResponseArray) ToImageDescriptorInvokeResponseArrayOutput() ImageDescriptorInvokeResponseArrayOutput {
	return i.ToImageDescriptorInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ImageDescriptorInvokeResponseArray) ToImageDescriptorInvokeResponseArrayOutputWithContext(ctx context.Context) ImageDescriptorInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageDescriptorInvokeResponseArrayOutput)
}

// Properties for a registry image.
type ImageDescriptorInvokeResponseOutput struct{ *pulumi.OutputState }

func (ImageDescriptorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageDescriptorInvokeResponse)(nil)).Elem()
}

func (o ImageDescriptorInvokeResponseOutput) ToImageDescriptorInvokeResponseOutput() ImageDescriptorInvokeResponseOutput {
	return o
}

func (o ImageDescriptorInvokeResponseOutput) ToImageDescriptorInvokeResponseOutputWithContext(ctx context.Context) ImageDescriptorInvokeResponseOutput {
	return o
}

// The sha256-based digest of the image manifest.
func (o ImageDescriptorInvokeResponseOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageDescriptorInvokeResponse) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// The registry login server.
func (o ImageDescriptorInvokeResponseOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageDescriptorInvokeResponse) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

// The repository name.
func (o ImageDescriptorInvokeResponseOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageDescriptorInvokeResponse) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

// The tag name.
func (o ImageDescriptorInvokeResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageDescriptorInvokeResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type ImageDescriptorInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ImageDescriptorInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageDescriptorInvokeResponse)(nil)).Elem()
}

func (o ImageDescriptorInvokeResponseArrayOutput) ToImageDescriptorInvokeResponseArrayOutput() ImageDescriptorInvokeResponseArrayOutput {
	return o
}

func (o ImageDescriptorInvokeResponseArrayOutput) ToImageDescriptorInvokeResponseArrayOutputWithContext(ctx context.Context) ImageDescriptorInvokeResponseArrayOutput {
	return o
}

func (o ImageDescriptorInvokeResponseArrayOutput) Index(i pulumi.IntInput) ImageDescriptorInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageDescriptorInvokeResponse {
		return vs[0].([]ImageDescriptorInvokeResponse)[vs[1].(int)]
	}).(ImageDescriptorInvokeResponseOutput)
}

// Properties for a registry image.
type ImageDescriptorResponse struct {
	// The sha256-based digest of the image manifest.
	Digest *string `pulumi:"digest"`
	// The registry login server.
	Registry *string `pulumi:"registry"`
	// The repository name.
	Repository *string `pulumi:"repository"`
	// The tag name.
	Tag *string `pulumi:"tag"`
}

// ImageDescriptorResponseInput is an input type that accepts ImageDescriptorResponseArgs and ImageDescriptorResponseOutput values.
// You can construct a concrete instance of `ImageDescriptorResponseInput` via:
//
//          ImageDescriptorResponseArgs{...}
type ImageDescriptorResponseInput interface {
	pulumi.Input

	ToImageDescriptorResponseOutput() ImageDescriptorResponseOutput
	ToImageDescriptorResponseOutputWithContext(context.Context) ImageDescriptorResponseOutput
}

// Properties for a registry image.
type ImageDescriptorResponseArgs struct {
	// The sha256-based digest of the image manifest.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// The registry login server.
	Registry pulumi.StringPtrInput `pulumi:"registry"`
	// The repository name.
	Repository pulumi.StringPtrInput `pulumi:"repository"`
	// The tag name.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (ImageDescriptorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageDescriptorResponse)(nil)).Elem()
}

func (i ImageDescriptorResponseArgs) ToImageDescriptorResponseOutput() ImageDescriptorResponseOutput {
	return i.ToImageDescriptorResponseOutputWithContext(context.Background())
}

func (i ImageDescriptorResponseArgs) ToImageDescriptorResponseOutputWithContext(ctx context.Context) ImageDescriptorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageDescriptorResponseOutput)
}

func (i ImageDescriptorResponseArgs) ToImageDescriptorResponsePtrOutput() ImageDescriptorResponsePtrOutput {
	return i.ToImageDescriptorResponsePtrOutputWithContext(context.Background())
}

func (i ImageDescriptorResponseArgs) ToImageDescriptorResponsePtrOutputWithContext(ctx context.Context) ImageDescriptorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageDescriptorResponseOutput).ToImageDescriptorResponsePtrOutputWithContext(ctx)
}

// ImageDescriptorResponsePtrInput is an input type that accepts ImageDescriptorResponseArgs, ImageDescriptorResponsePtr and ImageDescriptorResponsePtrOutput values.
// You can construct a concrete instance of `ImageDescriptorResponsePtrInput` via:
//
//          ImageDescriptorResponseArgs{...}
//
//  or:
//
//          nil
type ImageDescriptorResponsePtrInput interface {
	pulumi.Input

	ToImageDescriptorResponsePtrOutput() ImageDescriptorResponsePtrOutput
	ToImageDescriptorResponsePtrOutputWithContext(context.Context) ImageDescriptorResponsePtrOutput
}

type imageDescriptorResponsePtrType ImageDescriptorResponseArgs

func ImageDescriptorResponsePtr(v *ImageDescriptorResponseArgs) ImageDescriptorResponsePtrInput {
	return (*imageDescriptorResponsePtrType)(v)
}

func (*imageDescriptorResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageDescriptorResponse)(nil)).Elem()
}

func (i *imageDescriptorResponsePtrType) ToImageDescriptorResponsePtrOutput() ImageDescriptorResponsePtrOutput {
	return i.ToImageDescriptorResponsePtrOutputWithContext(context.Background())
}

func (i *imageDescriptorResponsePtrType) ToImageDescriptorResponsePtrOutputWithContext(ctx context.Context) ImageDescriptorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageDescriptorResponsePtrOutput)
}

// ImageDescriptorResponseArrayInput is an input type that accepts ImageDescriptorResponseArray and ImageDescriptorResponseArrayOutput values.
// You can construct a concrete instance of `ImageDescriptorResponseArrayInput` via:
//
//          ImageDescriptorResponseArray{ ImageDescriptorResponseArgs{...} }
type ImageDescriptorResponseArrayInput interface {
	pulumi.Input

	ToImageDescriptorResponseArrayOutput() ImageDescriptorResponseArrayOutput
	ToImageDescriptorResponseArrayOutputWithContext(context.Context) ImageDescriptorResponseArrayOutput
}

type ImageDescriptorResponseArray []ImageDescriptorResponseInput

func (ImageDescriptorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageDescriptorResponse)(nil)).Elem()
}

func (i ImageDescriptorResponseArray) ToImageDescriptorResponseArrayOutput() ImageDescriptorResponseArrayOutput {
	return i.ToImageDescriptorResponseArrayOutputWithContext(context.Background())
}

func (i ImageDescriptorResponseArray) ToImageDescriptorResponseArrayOutputWithContext(ctx context.Context) ImageDescriptorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageDescriptorResponseArrayOutput)
}

// Properties for a registry image.
type ImageDescriptorResponseOutput struct{ *pulumi.OutputState }

func (ImageDescriptorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageDescriptorResponse)(nil)).Elem()
}

func (o ImageDescriptorResponseOutput) ToImageDescriptorResponseOutput() ImageDescriptorResponseOutput {
	return o
}

func (o ImageDescriptorResponseOutput) ToImageDescriptorResponseOutputWithContext(ctx context.Context) ImageDescriptorResponseOutput {
	return o
}

func (o ImageDescriptorResponseOutput) ToImageDescriptorResponsePtrOutput() ImageDescriptorResponsePtrOutput {
	return o.ToImageDescriptorResponsePtrOutputWithContext(context.Background())
}

func (o ImageDescriptorResponseOutput) ToImageDescriptorResponsePtrOutputWithContext(ctx context.Context) ImageDescriptorResponsePtrOutput {
	return o.ApplyT(func(v ImageDescriptorResponse) *ImageDescriptorResponse {
		return &v
	}).(ImageDescriptorResponsePtrOutput)
}

// The sha256-based digest of the image manifest.
func (o ImageDescriptorResponseOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageDescriptorResponse) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// The registry login server.
func (o ImageDescriptorResponseOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageDescriptorResponse) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

// The repository name.
func (o ImageDescriptorResponseOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageDescriptorResponse) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

// The tag name.
func (o ImageDescriptorResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageDescriptorResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type ImageDescriptorResponsePtrOutput struct{ *pulumi.OutputState }

func (ImageDescriptorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageDescriptorResponse)(nil)).Elem()
}

func (o ImageDescriptorResponsePtrOutput) ToImageDescriptorResponsePtrOutput() ImageDescriptorResponsePtrOutput {
	return o
}

func (o ImageDescriptorResponsePtrOutput) ToImageDescriptorResponsePtrOutputWithContext(ctx context.Context) ImageDescriptorResponsePtrOutput {
	return o
}

func (o ImageDescriptorResponsePtrOutput) Elem() ImageDescriptorResponseOutput {
	return o.ApplyT(func(v *ImageDescriptorResponse) ImageDescriptorResponse { return *v }).(ImageDescriptorResponseOutput)
}

// The sha256-based digest of the image manifest.
func (o ImageDescriptorResponsePtrOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageDescriptorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Digest
	}).(pulumi.StringPtrOutput)
}

// The registry login server.
func (o ImageDescriptorResponsePtrOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageDescriptorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Registry
	}).(pulumi.StringPtrOutput)
}

// The repository name.
func (o ImageDescriptorResponsePtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageDescriptorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Repository
	}).(pulumi.StringPtrOutput)
}

// The tag name.
func (o ImageDescriptorResponsePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageDescriptorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

type ImageDescriptorResponseArrayOutput struct{ *pulumi.OutputState }

func (ImageDescriptorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageDescriptorResponse)(nil)).Elem()
}

func (o ImageDescriptorResponseArrayOutput) ToImageDescriptorResponseArrayOutput() ImageDescriptorResponseArrayOutput {
	return o
}

func (o ImageDescriptorResponseArrayOutput) ToImageDescriptorResponseArrayOutputWithContext(ctx context.Context) ImageDescriptorResponseArrayOutput {
	return o
}

func (o ImageDescriptorResponseArrayOutput) Index(i pulumi.IntInput) ImageDescriptorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageDescriptorResponse {
		return vs[0].([]ImageDescriptorResponse)[vs[1].(int)]
	}).(ImageDescriptorResponseOutput)
}

// The image update trigger that caused a build.
type ImageUpdateTriggerInvokeResponse struct {
	// The unique ID of the trigger.
	Id *string `pulumi:"id"`
	// The list of image updates that caused the build.
	Images []ImageDescriptorInvokeResponse `pulumi:"images"`
	// The timestamp when the image update happened.
	Timestamp *string `pulumi:"timestamp"`
}

// ImageUpdateTriggerInvokeResponseInput is an input type that accepts ImageUpdateTriggerInvokeResponseArgs and ImageUpdateTriggerInvokeResponseOutput values.
// You can construct a concrete instance of `ImageUpdateTriggerInvokeResponseInput` via:
//
//          ImageUpdateTriggerInvokeResponseArgs{...}
type ImageUpdateTriggerInvokeResponseInput interface {
	pulumi.Input

	ToImageUpdateTriggerInvokeResponseOutput() ImageUpdateTriggerInvokeResponseOutput
	ToImageUpdateTriggerInvokeResponseOutputWithContext(context.Context) ImageUpdateTriggerInvokeResponseOutput
}

// The image update trigger that caused a build.
type ImageUpdateTriggerInvokeResponseArgs struct {
	// The unique ID of the trigger.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The list of image updates that caused the build.
	Images ImageDescriptorInvokeResponseArrayInput `pulumi:"images"`
	// The timestamp when the image update happened.
	Timestamp pulumi.StringPtrInput `pulumi:"timestamp"`
}

func (ImageUpdateTriggerInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageUpdateTriggerInvokeResponse)(nil)).Elem()
}

func (i ImageUpdateTriggerInvokeResponseArgs) ToImageUpdateTriggerInvokeResponseOutput() ImageUpdateTriggerInvokeResponseOutput {
	return i.ToImageUpdateTriggerInvokeResponseOutputWithContext(context.Background())
}

func (i ImageUpdateTriggerInvokeResponseArgs) ToImageUpdateTriggerInvokeResponseOutputWithContext(ctx context.Context) ImageUpdateTriggerInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageUpdateTriggerInvokeResponseOutput)
}

func (i ImageUpdateTriggerInvokeResponseArgs) ToImageUpdateTriggerInvokeResponsePtrOutput() ImageUpdateTriggerInvokeResponsePtrOutput {
	return i.ToImageUpdateTriggerInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ImageUpdateTriggerInvokeResponseArgs) ToImageUpdateTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) ImageUpdateTriggerInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageUpdateTriggerInvokeResponseOutput).ToImageUpdateTriggerInvokeResponsePtrOutputWithContext(ctx)
}

// ImageUpdateTriggerInvokeResponsePtrInput is an input type that accepts ImageUpdateTriggerInvokeResponseArgs, ImageUpdateTriggerInvokeResponsePtr and ImageUpdateTriggerInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ImageUpdateTriggerInvokeResponsePtrInput` via:
//
//          ImageUpdateTriggerInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ImageUpdateTriggerInvokeResponsePtrInput interface {
	pulumi.Input

	ToImageUpdateTriggerInvokeResponsePtrOutput() ImageUpdateTriggerInvokeResponsePtrOutput
	ToImageUpdateTriggerInvokeResponsePtrOutputWithContext(context.Context) ImageUpdateTriggerInvokeResponsePtrOutput
}

type imageUpdateTriggerInvokeResponsePtrType ImageUpdateTriggerInvokeResponseArgs

func ImageUpdateTriggerInvokeResponsePtr(v *ImageUpdateTriggerInvokeResponseArgs) ImageUpdateTriggerInvokeResponsePtrInput {
	return (*imageUpdateTriggerInvokeResponsePtrType)(v)
}

func (*imageUpdateTriggerInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageUpdateTriggerInvokeResponse)(nil)).Elem()
}

func (i *imageUpdateTriggerInvokeResponsePtrType) ToImageUpdateTriggerInvokeResponsePtrOutput() ImageUpdateTriggerInvokeResponsePtrOutput {
	return i.ToImageUpdateTriggerInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *imageUpdateTriggerInvokeResponsePtrType) ToImageUpdateTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) ImageUpdateTriggerInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageUpdateTriggerInvokeResponsePtrOutput)
}

// The image update trigger that caused a build.
type ImageUpdateTriggerInvokeResponseOutput struct{ *pulumi.OutputState }

func (ImageUpdateTriggerInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageUpdateTriggerInvokeResponse)(nil)).Elem()
}

func (o ImageUpdateTriggerInvokeResponseOutput) ToImageUpdateTriggerInvokeResponseOutput() ImageUpdateTriggerInvokeResponseOutput {
	return o
}

func (o ImageUpdateTriggerInvokeResponseOutput) ToImageUpdateTriggerInvokeResponseOutputWithContext(ctx context.Context) ImageUpdateTriggerInvokeResponseOutput {
	return o
}

func (o ImageUpdateTriggerInvokeResponseOutput) ToImageUpdateTriggerInvokeResponsePtrOutput() ImageUpdateTriggerInvokeResponsePtrOutput {
	return o.ToImageUpdateTriggerInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ImageUpdateTriggerInvokeResponseOutput) ToImageUpdateTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) ImageUpdateTriggerInvokeResponsePtrOutput {
	return o.ApplyT(func(v ImageUpdateTriggerInvokeResponse) *ImageUpdateTriggerInvokeResponse {
		return &v
	}).(ImageUpdateTriggerInvokeResponsePtrOutput)
}

// The unique ID of the trigger.
func (o ImageUpdateTriggerInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageUpdateTriggerInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of image updates that caused the build.
func (o ImageUpdateTriggerInvokeResponseOutput) Images() ImageDescriptorInvokeResponseArrayOutput {
	return o.ApplyT(func(v ImageUpdateTriggerInvokeResponse) []ImageDescriptorInvokeResponse { return v.Images }).(ImageDescriptorInvokeResponseArrayOutput)
}

// The timestamp when the image update happened.
func (o ImageUpdateTriggerInvokeResponseOutput) Timestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageUpdateTriggerInvokeResponse) *string { return v.Timestamp }).(pulumi.StringPtrOutput)
}

type ImageUpdateTriggerInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ImageUpdateTriggerInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageUpdateTriggerInvokeResponse)(nil)).Elem()
}

func (o ImageUpdateTriggerInvokeResponsePtrOutput) ToImageUpdateTriggerInvokeResponsePtrOutput() ImageUpdateTriggerInvokeResponsePtrOutput {
	return o
}

func (o ImageUpdateTriggerInvokeResponsePtrOutput) ToImageUpdateTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) ImageUpdateTriggerInvokeResponsePtrOutput {
	return o
}

func (o ImageUpdateTriggerInvokeResponsePtrOutput) Elem() ImageUpdateTriggerInvokeResponseOutput {
	return o.ApplyT(func(v *ImageUpdateTriggerInvokeResponse) ImageUpdateTriggerInvokeResponse { return *v }).(ImageUpdateTriggerInvokeResponseOutput)
}

// The unique ID of the trigger.
func (o ImageUpdateTriggerInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageUpdateTriggerInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The list of image updates that caused the build.
func (o ImageUpdateTriggerInvokeResponsePtrOutput) Images() ImageDescriptorInvokeResponseArrayOutput {
	return o.ApplyT(func(v *ImageUpdateTriggerInvokeResponse) []ImageDescriptorInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Images
	}).(ImageDescriptorInvokeResponseArrayOutput)
}

// The timestamp when the image update happened.
func (o ImageUpdateTriggerInvokeResponsePtrOutput) Timestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageUpdateTriggerInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Timestamp
	}).(pulumi.StringPtrOutput)
}

// The image update trigger that caused a build.
type ImageUpdateTriggerResponse struct {
	// The unique ID of the trigger.
	Id *string `pulumi:"id"`
	// The list of image updates that caused the build.
	Images []ImageDescriptorResponse `pulumi:"images"`
	// The timestamp when the image update happened.
	Timestamp *string `pulumi:"timestamp"`
}

// ImageUpdateTriggerResponseInput is an input type that accepts ImageUpdateTriggerResponseArgs and ImageUpdateTriggerResponseOutput values.
// You can construct a concrete instance of `ImageUpdateTriggerResponseInput` via:
//
//          ImageUpdateTriggerResponseArgs{...}
type ImageUpdateTriggerResponseInput interface {
	pulumi.Input

	ToImageUpdateTriggerResponseOutput() ImageUpdateTriggerResponseOutput
	ToImageUpdateTriggerResponseOutputWithContext(context.Context) ImageUpdateTriggerResponseOutput
}

// The image update trigger that caused a build.
type ImageUpdateTriggerResponseArgs struct {
	// The unique ID of the trigger.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The list of image updates that caused the build.
	Images ImageDescriptorResponseArrayInput `pulumi:"images"`
	// The timestamp when the image update happened.
	Timestamp pulumi.StringPtrInput `pulumi:"timestamp"`
}

func (ImageUpdateTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageUpdateTriggerResponse)(nil)).Elem()
}

func (i ImageUpdateTriggerResponseArgs) ToImageUpdateTriggerResponseOutput() ImageUpdateTriggerResponseOutput {
	return i.ToImageUpdateTriggerResponseOutputWithContext(context.Background())
}

func (i ImageUpdateTriggerResponseArgs) ToImageUpdateTriggerResponseOutputWithContext(ctx context.Context) ImageUpdateTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageUpdateTriggerResponseOutput)
}

func (i ImageUpdateTriggerResponseArgs) ToImageUpdateTriggerResponsePtrOutput() ImageUpdateTriggerResponsePtrOutput {
	return i.ToImageUpdateTriggerResponsePtrOutputWithContext(context.Background())
}

func (i ImageUpdateTriggerResponseArgs) ToImageUpdateTriggerResponsePtrOutputWithContext(ctx context.Context) ImageUpdateTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageUpdateTriggerResponseOutput).ToImageUpdateTriggerResponsePtrOutputWithContext(ctx)
}

// ImageUpdateTriggerResponsePtrInput is an input type that accepts ImageUpdateTriggerResponseArgs, ImageUpdateTriggerResponsePtr and ImageUpdateTriggerResponsePtrOutput values.
// You can construct a concrete instance of `ImageUpdateTriggerResponsePtrInput` via:
//
//          ImageUpdateTriggerResponseArgs{...}
//
//  or:
//
//          nil
type ImageUpdateTriggerResponsePtrInput interface {
	pulumi.Input

	ToImageUpdateTriggerResponsePtrOutput() ImageUpdateTriggerResponsePtrOutput
	ToImageUpdateTriggerResponsePtrOutputWithContext(context.Context) ImageUpdateTriggerResponsePtrOutput
}

type imageUpdateTriggerResponsePtrType ImageUpdateTriggerResponseArgs

func ImageUpdateTriggerResponsePtr(v *ImageUpdateTriggerResponseArgs) ImageUpdateTriggerResponsePtrInput {
	return (*imageUpdateTriggerResponsePtrType)(v)
}

func (*imageUpdateTriggerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageUpdateTriggerResponse)(nil)).Elem()
}

func (i *imageUpdateTriggerResponsePtrType) ToImageUpdateTriggerResponsePtrOutput() ImageUpdateTriggerResponsePtrOutput {
	return i.ToImageUpdateTriggerResponsePtrOutputWithContext(context.Background())
}

func (i *imageUpdateTriggerResponsePtrType) ToImageUpdateTriggerResponsePtrOutputWithContext(ctx context.Context) ImageUpdateTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageUpdateTriggerResponsePtrOutput)
}

// The image update trigger that caused a build.
type ImageUpdateTriggerResponseOutput struct{ *pulumi.OutputState }

func (ImageUpdateTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageUpdateTriggerResponse)(nil)).Elem()
}

func (o ImageUpdateTriggerResponseOutput) ToImageUpdateTriggerResponseOutput() ImageUpdateTriggerResponseOutput {
	return o
}

func (o ImageUpdateTriggerResponseOutput) ToImageUpdateTriggerResponseOutputWithContext(ctx context.Context) ImageUpdateTriggerResponseOutput {
	return o
}

func (o ImageUpdateTriggerResponseOutput) ToImageUpdateTriggerResponsePtrOutput() ImageUpdateTriggerResponsePtrOutput {
	return o.ToImageUpdateTriggerResponsePtrOutputWithContext(context.Background())
}

func (o ImageUpdateTriggerResponseOutput) ToImageUpdateTriggerResponsePtrOutputWithContext(ctx context.Context) ImageUpdateTriggerResponsePtrOutput {
	return o.ApplyT(func(v ImageUpdateTriggerResponse) *ImageUpdateTriggerResponse {
		return &v
	}).(ImageUpdateTriggerResponsePtrOutput)
}

// The unique ID of the trigger.
func (o ImageUpdateTriggerResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageUpdateTriggerResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of image updates that caused the build.
func (o ImageUpdateTriggerResponseOutput) Images() ImageDescriptorResponseArrayOutput {
	return o.ApplyT(func(v ImageUpdateTriggerResponse) []ImageDescriptorResponse { return v.Images }).(ImageDescriptorResponseArrayOutput)
}

// The timestamp when the image update happened.
func (o ImageUpdateTriggerResponseOutput) Timestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageUpdateTriggerResponse) *string { return v.Timestamp }).(pulumi.StringPtrOutput)
}

type ImageUpdateTriggerResponsePtrOutput struct{ *pulumi.OutputState }

func (ImageUpdateTriggerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageUpdateTriggerResponse)(nil)).Elem()
}

func (o ImageUpdateTriggerResponsePtrOutput) ToImageUpdateTriggerResponsePtrOutput() ImageUpdateTriggerResponsePtrOutput {
	return o
}

func (o ImageUpdateTriggerResponsePtrOutput) ToImageUpdateTriggerResponsePtrOutputWithContext(ctx context.Context) ImageUpdateTriggerResponsePtrOutput {
	return o
}

func (o ImageUpdateTriggerResponsePtrOutput) Elem() ImageUpdateTriggerResponseOutput {
	return o.ApplyT(func(v *ImageUpdateTriggerResponse) ImageUpdateTriggerResponse { return *v }).(ImageUpdateTriggerResponseOutput)
}

// The unique ID of the trigger.
func (o ImageUpdateTriggerResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageUpdateTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The list of image updates that caused the build.
func (o ImageUpdateTriggerResponsePtrOutput) Images() ImageDescriptorResponseArrayOutput {
	return o.ApplyT(func(v *ImageUpdateTriggerResponse) []ImageDescriptorResponse {
		if v == nil {
			return nil
		}
		return v.Images
	}).(ImageDescriptorResponseArrayOutput)
}

// The timestamp when the image update happened.
func (o ImageUpdateTriggerResponsePtrOutput) Timestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageUpdateTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.Timestamp
	}).(pulumi.StringPtrOutput)
}

type OverrideTaskStepProperties struct {
	// Gets or sets the collection of override arguments to be used when
	// executing a build step.
	Arguments []Argument `pulumi:"arguments"`
	// The source context against which run has to be queued.
	ContextPath *string `pulumi:"contextPath"`
	// The file against which run has to be queued.
	File *string `pulumi:"file"`
	// The name of the target build stage for the docker build.
	Target *string `pulumi:"target"`
	// Base64 encoded update trigger token that will be attached with the base image trigger webhook.
	UpdateTriggerToken *string `pulumi:"updateTriggerToken"`
	// The collection of overridable values that can be passed when running a Task.
	Values []SetValue `pulumi:"values"`
}

// OverrideTaskStepPropertiesInput is an input type that accepts OverrideTaskStepPropertiesArgs and OverrideTaskStepPropertiesOutput values.
// You can construct a concrete instance of `OverrideTaskStepPropertiesInput` via:
//
//          OverrideTaskStepPropertiesArgs{...}
type OverrideTaskStepPropertiesInput interface {
	pulumi.Input

	ToOverrideTaskStepPropertiesOutput() OverrideTaskStepPropertiesOutput
	ToOverrideTaskStepPropertiesOutputWithContext(context.Context) OverrideTaskStepPropertiesOutput
}

type OverrideTaskStepPropertiesArgs struct {
	// Gets or sets the collection of override arguments to be used when
	// executing a build step.
	Arguments ArgumentArrayInput `pulumi:"arguments"`
	// The source context against which run has to be queued.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// The file against which run has to be queued.
	File pulumi.StringPtrInput `pulumi:"file"`
	// The name of the target build stage for the docker build.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Base64 encoded update trigger token that will be attached with the base image trigger webhook.
	UpdateTriggerToken pulumi.StringPtrInput `pulumi:"updateTriggerToken"`
	// The collection of overridable values that can be passed when running a Task.
	Values SetValueArrayInput `pulumi:"values"`
}

func (OverrideTaskStepPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OverrideTaskStepProperties)(nil)).Elem()
}

func (i OverrideTaskStepPropertiesArgs) ToOverrideTaskStepPropertiesOutput() OverrideTaskStepPropertiesOutput {
	return i.ToOverrideTaskStepPropertiesOutputWithContext(context.Background())
}

func (i OverrideTaskStepPropertiesArgs) ToOverrideTaskStepPropertiesOutputWithContext(ctx context.Context) OverrideTaskStepPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OverrideTaskStepPropertiesOutput)
}

func (i OverrideTaskStepPropertiesArgs) ToOverrideTaskStepPropertiesPtrOutput() OverrideTaskStepPropertiesPtrOutput {
	return i.ToOverrideTaskStepPropertiesPtrOutputWithContext(context.Background())
}

func (i OverrideTaskStepPropertiesArgs) ToOverrideTaskStepPropertiesPtrOutputWithContext(ctx context.Context) OverrideTaskStepPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OverrideTaskStepPropertiesOutput).ToOverrideTaskStepPropertiesPtrOutputWithContext(ctx)
}

// OverrideTaskStepPropertiesPtrInput is an input type that accepts OverrideTaskStepPropertiesArgs, OverrideTaskStepPropertiesPtr and OverrideTaskStepPropertiesPtrOutput values.
// You can construct a concrete instance of `OverrideTaskStepPropertiesPtrInput` via:
//
//          OverrideTaskStepPropertiesArgs{...}
//
//  or:
//
//          nil
type OverrideTaskStepPropertiesPtrInput interface {
	pulumi.Input

	ToOverrideTaskStepPropertiesPtrOutput() OverrideTaskStepPropertiesPtrOutput
	ToOverrideTaskStepPropertiesPtrOutputWithContext(context.Context) OverrideTaskStepPropertiesPtrOutput
}

type overrideTaskStepPropertiesPtrType OverrideTaskStepPropertiesArgs

func OverrideTaskStepPropertiesPtr(v *OverrideTaskStepPropertiesArgs) OverrideTaskStepPropertiesPtrInput {
	return (*overrideTaskStepPropertiesPtrType)(v)
}

func (*overrideTaskStepPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OverrideTaskStepProperties)(nil)).Elem()
}

func (i *overrideTaskStepPropertiesPtrType) ToOverrideTaskStepPropertiesPtrOutput() OverrideTaskStepPropertiesPtrOutput {
	return i.ToOverrideTaskStepPropertiesPtrOutputWithContext(context.Background())
}

func (i *overrideTaskStepPropertiesPtrType) ToOverrideTaskStepPropertiesPtrOutputWithContext(ctx context.Context) OverrideTaskStepPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OverrideTaskStepPropertiesPtrOutput)
}

type OverrideTaskStepPropertiesOutput struct{ *pulumi.OutputState }

func (OverrideTaskStepPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OverrideTaskStepProperties)(nil)).Elem()
}

func (o OverrideTaskStepPropertiesOutput) ToOverrideTaskStepPropertiesOutput() OverrideTaskStepPropertiesOutput {
	return o
}

func (o OverrideTaskStepPropertiesOutput) ToOverrideTaskStepPropertiesOutputWithContext(ctx context.Context) OverrideTaskStepPropertiesOutput {
	return o
}

func (o OverrideTaskStepPropertiesOutput) ToOverrideTaskStepPropertiesPtrOutput() OverrideTaskStepPropertiesPtrOutput {
	return o.ToOverrideTaskStepPropertiesPtrOutputWithContext(context.Background())
}

func (o OverrideTaskStepPropertiesOutput) ToOverrideTaskStepPropertiesPtrOutputWithContext(ctx context.Context) OverrideTaskStepPropertiesPtrOutput {
	return o.ApplyT(func(v OverrideTaskStepProperties) *OverrideTaskStepProperties {
		return &v
	}).(OverrideTaskStepPropertiesPtrOutput)
}

// Gets or sets the collection of override arguments to be used when
// executing a build step.
func (o OverrideTaskStepPropertiesOutput) Arguments() ArgumentArrayOutput {
	return o.ApplyT(func(v OverrideTaskStepProperties) []Argument { return v.Arguments }).(ArgumentArrayOutput)
}

// The source context against which run has to be queued.
func (o OverrideTaskStepPropertiesOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverrideTaskStepProperties) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// The file against which run has to be queued.
func (o OverrideTaskStepPropertiesOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverrideTaskStepProperties) *string { return v.File }).(pulumi.StringPtrOutput)
}

// The name of the target build stage for the docker build.
func (o OverrideTaskStepPropertiesOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverrideTaskStepProperties) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Base64 encoded update trigger token that will be attached with the base image trigger webhook.
func (o OverrideTaskStepPropertiesOutput) UpdateTriggerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverrideTaskStepProperties) *string { return v.UpdateTriggerToken }).(pulumi.StringPtrOutput)
}

// The collection of overridable values that can be passed when running a Task.
func (o OverrideTaskStepPropertiesOutput) Values() SetValueArrayOutput {
	return o.ApplyT(func(v OverrideTaskStepProperties) []SetValue { return v.Values }).(SetValueArrayOutput)
}

type OverrideTaskStepPropertiesPtrOutput struct{ *pulumi.OutputState }

func (OverrideTaskStepPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OverrideTaskStepProperties)(nil)).Elem()
}

func (o OverrideTaskStepPropertiesPtrOutput) ToOverrideTaskStepPropertiesPtrOutput() OverrideTaskStepPropertiesPtrOutput {
	return o
}

func (o OverrideTaskStepPropertiesPtrOutput) ToOverrideTaskStepPropertiesPtrOutputWithContext(ctx context.Context) OverrideTaskStepPropertiesPtrOutput {
	return o
}

func (o OverrideTaskStepPropertiesPtrOutput) Elem() OverrideTaskStepPropertiesOutput {
	return o.ApplyT(func(v *OverrideTaskStepProperties) OverrideTaskStepProperties { return *v }).(OverrideTaskStepPropertiesOutput)
}

// Gets or sets the collection of override arguments to be used when
// executing a build step.
func (o OverrideTaskStepPropertiesPtrOutput) Arguments() ArgumentArrayOutput {
	return o.ApplyT(func(v *OverrideTaskStepProperties) []Argument {
		if v == nil {
			return nil
		}
		return v.Arguments
	}).(ArgumentArrayOutput)
}

// The source context against which run has to be queued.
func (o OverrideTaskStepPropertiesPtrOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverrideTaskStepProperties) *string {
		if v == nil {
			return nil
		}
		return v.ContextPath
	}).(pulumi.StringPtrOutput)
}

// The file against which run has to be queued.
func (o OverrideTaskStepPropertiesPtrOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverrideTaskStepProperties) *string {
		if v == nil {
			return nil
		}
		return v.File
	}).(pulumi.StringPtrOutput)
}

// The name of the target build stage for the docker build.
func (o OverrideTaskStepPropertiesPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverrideTaskStepProperties) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// Base64 encoded update trigger token that will be attached with the base image trigger webhook.
func (o OverrideTaskStepPropertiesPtrOutput) UpdateTriggerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverrideTaskStepProperties) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTriggerToken
	}).(pulumi.StringPtrOutput)
}

// The collection of overridable values that can be passed when running a Task.
func (o OverrideTaskStepPropertiesPtrOutput) Values() SetValueArrayOutput {
	return o.ApplyT(func(v *OverrideTaskStepProperties) []SetValue {
		if v == nil {
			return nil
		}
		return v.Values
	}).(SetValueArrayOutput)
}

type OverrideTaskStepPropertiesInvokeResponse struct {
	// Gets or sets the collection of override arguments to be used when
	// executing a build step.
	Arguments []ArgumentInvokeResponse `pulumi:"arguments"`
	// The source context against which run has to be queued.
	ContextPath *string `pulumi:"contextPath"`
	// The file against which run has to be queued.
	File *string `pulumi:"file"`
	// The name of the target build stage for the docker build.
	Target *string `pulumi:"target"`
	// Base64 encoded update trigger token that will be attached with the base image trigger webhook.
	UpdateTriggerToken *string `pulumi:"updateTriggerToken"`
	// The collection of overridable values that can be passed when running a Task.
	Values []SetValueInvokeResponse `pulumi:"values"`
}

// OverrideTaskStepPropertiesInvokeResponseInput is an input type that accepts OverrideTaskStepPropertiesInvokeResponseArgs and OverrideTaskStepPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `OverrideTaskStepPropertiesInvokeResponseInput` via:
//
//          OverrideTaskStepPropertiesInvokeResponseArgs{...}
type OverrideTaskStepPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToOverrideTaskStepPropertiesInvokeResponseOutput() OverrideTaskStepPropertiesInvokeResponseOutput
	ToOverrideTaskStepPropertiesInvokeResponseOutputWithContext(context.Context) OverrideTaskStepPropertiesInvokeResponseOutput
}

type OverrideTaskStepPropertiesInvokeResponseArgs struct {
	// Gets or sets the collection of override arguments to be used when
	// executing a build step.
	Arguments ArgumentInvokeResponseArrayInput `pulumi:"arguments"`
	// The source context against which run has to be queued.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// The file against which run has to be queued.
	File pulumi.StringPtrInput `pulumi:"file"`
	// The name of the target build stage for the docker build.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Base64 encoded update trigger token that will be attached with the base image trigger webhook.
	UpdateTriggerToken pulumi.StringPtrInput `pulumi:"updateTriggerToken"`
	// The collection of overridable values that can be passed when running a Task.
	Values SetValueInvokeResponseArrayInput `pulumi:"values"`
}

func (OverrideTaskStepPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OverrideTaskStepPropertiesInvokeResponse)(nil)).Elem()
}

func (i OverrideTaskStepPropertiesInvokeResponseArgs) ToOverrideTaskStepPropertiesInvokeResponseOutput() OverrideTaskStepPropertiesInvokeResponseOutput {
	return i.ToOverrideTaskStepPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i OverrideTaskStepPropertiesInvokeResponseArgs) ToOverrideTaskStepPropertiesInvokeResponseOutputWithContext(ctx context.Context) OverrideTaskStepPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OverrideTaskStepPropertiesInvokeResponseOutput)
}

func (i OverrideTaskStepPropertiesInvokeResponseArgs) ToOverrideTaskStepPropertiesInvokeResponsePtrOutput() OverrideTaskStepPropertiesInvokeResponsePtrOutput {
	return i.ToOverrideTaskStepPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i OverrideTaskStepPropertiesInvokeResponseArgs) ToOverrideTaskStepPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) OverrideTaskStepPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OverrideTaskStepPropertiesInvokeResponseOutput).ToOverrideTaskStepPropertiesInvokeResponsePtrOutputWithContext(ctx)
}

// OverrideTaskStepPropertiesInvokeResponsePtrInput is an input type that accepts OverrideTaskStepPropertiesInvokeResponseArgs, OverrideTaskStepPropertiesInvokeResponsePtr and OverrideTaskStepPropertiesInvokeResponsePtrOutput values.
// You can construct a concrete instance of `OverrideTaskStepPropertiesInvokeResponsePtrInput` via:
//
//          OverrideTaskStepPropertiesInvokeResponseArgs{...}
//
//  or:
//
//          nil
type OverrideTaskStepPropertiesInvokeResponsePtrInput interface {
	pulumi.Input

	ToOverrideTaskStepPropertiesInvokeResponsePtrOutput() OverrideTaskStepPropertiesInvokeResponsePtrOutput
	ToOverrideTaskStepPropertiesInvokeResponsePtrOutputWithContext(context.Context) OverrideTaskStepPropertiesInvokeResponsePtrOutput
}

type overrideTaskStepPropertiesInvokeResponsePtrType OverrideTaskStepPropertiesInvokeResponseArgs

func OverrideTaskStepPropertiesInvokeResponsePtr(v *OverrideTaskStepPropertiesInvokeResponseArgs) OverrideTaskStepPropertiesInvokeResponsePtrInput {
	return (*overrideTaskStepPropertiesInvokeResponsePtrType)(v)
}

func (*overrideTaskStepPropertiesInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OverrideTaskStepPropertiesInvokeResponse)(nil)).Elem()
}

func (i *overrideTaskStepPropertiesInvokeResponsePtrType) ToOverrideTaskStepPropertiesInvokeResponsePtrOutput() OverrideTaskStepPropertiesInvokeResponsePtrOutput {
	return i.ToOverrideTaskStepPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *overrideTaskStepPropertiesInvokeResponsePtrType) ToOverrideTaskStepPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) OverrideTaskStepPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OverrideTaskStepPropertiesInvokeResponsePtrOutput)
}

type OverrideTaskStepPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (OverrideTaskStepPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OverrideTaskStepPropertiesInvokeResponse)(nil)).Elem()
}

func (o OverrideTaskStepPropertiesInvokeResponseOutput) ToOverrideTaskStepPropertiesInvokeResponseOutput() OverrideTaskStepPropertiesInvokeResponseOutput {
	return o
}

func (o OverrideTaskStepPropertiesInvokeResponseOutput) ToOverrideTaskStepPropertiesInvokeResponseOutputWithContext(ctx context.Context) OverrideTaskStepPropertiesInvokeResponseOutput {
	return o
}

func (o OverrideTaskStepPropertiesInvokeResponseOutput) ToOverrideTaskStepPropertiesInvokeResponsePtrOutput() OverrideTaskStepPropertiesInvokeResponsePtrOutput {
	return o.ToOverrideTaskStepPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (o OverrideTaskStepPropertiesInvokeResponseOutput) ToOverrideTaskStepPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) OverrideTaskStepPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v OverrideTaskStepPropertiesInvokeResponse) *OverrideTaskStepPropertiesInvokeResponse {
		return &v
	}).(OverrideTaskStepPropertiesInvokeResponsePtrOutput)
}

// Gets or sets the collection of override arguments to be used when
// executing a build step.
func (o OverrideTaskStepPropertiesInvokeResponseOutput) Arguments() ArgumentInvokeResponseArrayOutput {
	return o.ApplyT(func(v OverrideTaskStepPropertiesInvokeResponse) []ArgumentInvokeResponse { return v.Arguments }).(ArgumentInvokeResponseArrayOutput)
}

// The source context against which run has to be queued.
func (o OverrideTaskStepPropertiesInvokeResponseOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverrideTaskStepPropertiesInvokeResponse) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// The file against which run has to be queued.
func (o OverrideTaskStepPropertiesInvokeResponseOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverrideTaskStepPropertiesInvokeResponse) *string { return v.File }).(pulumi.StringPtrOutput)
}

// The name of the target build stage for the docker build.
func (o OverrideTaskStepPropertiesInvokeResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverrideTaskStepPropertiesInvokeResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Base64 encoded update trigger token that will be attached with the base image trigger webhook.
func (o OverrideTaskStepPropertiesInvokeResponseOutput) UpdateTriggerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverrideTaskStepPropertiesInvokeResponse) *string { return v.UpdateTriggerToken }).(pulumi.StringPtrOutput)
}

// The collection of overridable values that can be passed when running a Task.
func (o OverrideTaskStepPropertiesInvokeResponseOutput) Values() SetValueInvokeResponseArrayOutput {
	return o.ApplyT(func(v OverrideTaskStepPropertiesInvokeResponse) []SetValueInvokeResponse { return v.Values }).(SetValueInvokeResponseArrayOutput)
}

type OverrideTaskStepPropertiesInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (OverrideTaskStepPropertiesInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OverrideTaskStepPropertiesInvokeResponse)(nil)).Elem()
}

func (o OverrideTaskStepPropertiesInvokeResponsePtrOutput) ToOverrideTaskStepPropertiesInvokeResponsePtrOutput() OverrideTaskStepPropertiesInvokeResponsePtrOutput {
	return o
}

func (o OverrideTaskStepPropertiesInvokeResponsePtrOutput) ToOverrideTaskStepPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) OverrideTaskStepPropertiesInvokeResponsePtrOutput {
	return o
}

func (o OverrideTaskStepPropertiesInvokeResponsePtrOutput) Elem() OverrideTaskStepPropertiesInvokeResponseOutput {
	return o.ApplyT(func(v *OverrideTaskStepPropertiesInvokeResponse) OverrideTaskStepPropertiesInvokeResponse { return *v }).(OverrideTaskStepPropertiesInvokeResponseOutput)
}

// Gets or sets the collection of override arguments to be used when
// executing a build step.
func (o OverrideTaskStepPropertiesInvokeResponsePtrOutput) Arguments() ArgumentInvokeResponseArrayOutput {
	return o.ApplyT(func(v *OverrideTaskStepPropertiesInvokeResponse) []ArgumentInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Arguments
	}).(ArgumentInvokeResponseArrayOutput)
}

// The source context against which run has to be queued.
func (o OverrideTaskStepPropertiesInvokeResponsePtrOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverrideTaskStepPropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContextPath
	}).(pulumi.StringPtrOutput)
}

// The file against which run has to be queued.
func (o OverrideTaskStepPropertiesInvokeResponsePtrOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverrideTaskStepPropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.File
	}).(pulumi.StringPtrOutput)
}

// The name of the target build stage for the docker build.
func (o OverrideTaskStepPropertiesInvokeResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverrideTaskStepPropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// Base64 encoded update trigger token that will be attached with the base image trigger webhook.
func (o OverrideTaskStepPropertiesInvokeResponsePtrOutput) UpdateTriggerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverrideTaskStepPropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTriggerToken
	}).(pulumi.StringPtrOutput)
}

// The collection of overridable values that can be passed when running a Task.
func (o OverrideTaskStepPropertiesInvokeResponsePtrOutput) Values() SetValueInvokeResponseArrayOutput {
	return o.ApplyT(func(v *OverrideTaskStepPropertiesInvokeResponse) []SetValueInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Values
	}).(SetValueInvokeResponseArrayOutput)
}

type OverrideTaskStepPropertiesResponse struct {
	// Gets or sets the collection of override arguments to be used when
	// executing a build step.
	Arguments []ArgumentResponse `pulumi:"arguments"`
	// The source context against which run has to be queued.
	ContextPath *string `pulumi:"contextPath"`
	// The file against which run has to be queued.
	File *string `pulumi:"file"`
	// The name of the target build stage for the docker build.
	Target *string `pulumi:"target"`
	// Base64 encoded update trigger token that will be attached with the base image trigger webhook.
	UpdateTriggerToken *string `pulumi:"updateTriggerToken"`
	// The collection of overridable values that can be passed when running a Task.
	Values []SetValueResponse `pulumi:"values"`
}

// OverrideTaskStepPropertiesResponseInput is an input type that accepts OverrideTaskStepPropertiesResponseArgs and OverrideTaskStepPropertiesResponseOutput values.
// You can construct a concrete instance of `OverrideTaskStepPropertiesResponseInput` via:
//
//          OverrideTaskStepPropertiesResponseArgs{...}
type OverrideTaskStepPropertiesResponseInput interface {
	pulumi.Input

	ToOverrideTaskStepPropertiesResponseOutput() OverrideTaskStepPropertiesResponseOutput
	ToOverrideTaskStepPropertiesResponseOutputWithContext(context.Context) OverrideTaskStepPropertiesResponseOutput
}

type OverrideTaskStepPropertiesResponseArgs struct {
	// Gets or sets the collection of override arguments to be used when
	// executing a build step.
	Arguments ArgumentResponseArrayInput `pulumi:"arguments"`
	// The source context against which run has to be queued.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// The file against which run has to be queued.
	File pulumi.StringPtrInput `pulumi:"file"`
	// The name of the target build stage for the docker build.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Base64 encoded update trigger token that will be attached with the base image trigger webhook.
	UpdateTriggerToken pulumi.StringPtrInput `pulumi:"updateTriggerToken"`
	// The collection of overridable values that can be passed when running a Task.
	Values SetValueResponseArrayInput `pulumi:"values"`
}

func (OverrideTaskStepPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OverrideTaskStepPropertiesResponse)(nil)).Elem()
}

func (i OverrideTaskStepPropertiesResponseArgs) ToOverrideTaskStepPropertiesResponseOutput() OverrideTaskStepPropertiesResponseOutput {
	return i.ToOverrideTaskStepPropertiesResponseOutputWithContext(context.Background())
}

func (i OverrideTaskStepPropertiesResponseArgs) ToOverrideTaskStepPropertiesResponseOutputWithContext(ctx context.Context) OverrideTaskStepPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OverrideTaskStepPropertiesResponseOutput)
}

func (i OverrideTaskStepPropertiesResponseArgs) ToOverrideTaskStepPropertiesResponsePtrOutput() OverrideTaskStepPropertiesResponsePtrOutput {
	return i.ToOverrideTaskStepPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i OverrideTaskStepPropertiesResponseArgs) ToOverrideTaskStepPropertiesResponsePtrOutputWithContext(ctx context.Context) OverrideTaskStepPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OverrideTaskStepPropertiesResponseOutput).ToOverrideTaskStepPropertiesResponsePtrOutputWithContext(ctx)
}

// OverrideTaskStepPropertiesResponsePtrInput is an input type that accepts OverrideTaskStepPropertiesResponseArgs, OverrideTaskStepPropertiesResponsePtr and OverrideTaskStepPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `OverrideTaskStepPropertiesResponsePtrInput` via:
//
//          OverrideTaskStepPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type OverrideTaskStepPropertiesResponsePtrInput interface {
	pulumi.Input

	ToOverrideTaskStepPropertiesResponsePtrOutput() OverrideTaskStepPropertiesResponsePtrOutput
	ToOverrideTaskStepPropertiesResponsePtrOutputWithContext(context.Context) OverrideTaskStepPropertiesResponsePtrOutput
}

type overrideTaskStepPropertiesResponsePtrType OverrideTaskStepPropertiesResponseArgs

func OverrideTaskStepPropertiesResponsePtr(v *OverrideTaskStepPropertiesResponseArgs) OverrideTaskStepPropertiesResponsePtrInput {
	return (*overrideTaskStepPropertiesResponsePtrType)(v)
}

func (*overrideTaskStepPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OverrideTaskStepPropertiesResponse)(nil)).Elem()
}

func (i *overrideTaskStepPropertiesResponsePtrType) ToOverrideTaskStepPropertiesResponsePtrOutput() OverrideTaskStepPropertiesResponsePtrOutput {
	return i.ToOverrideTaskStepPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *overrideTaskStepPropertiesResponsePtrType) ToOverrideTaskStepPropertiesResponsePtrOutputWithContext(ctx context.Context) OverrideTaskStepPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OverrideTaskStepPropertiesResponsePtrOutput)
}

type OverrideTaskStepPropertiesResponseOutput struct{ *pulumi.OutputState }

func (OverrideTaskStepPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OverrideTaskStepPropertiesResponse)(nil)).Elem()
}

func (o OverrideTaskStepPropertiesResponseOutput) ToOverrideTaskStepPropertiesResponseOutput() OverrideTaskStepPropertiesResponseOutput {
	return o
}

func (o OverrideTaskStepPropertiesResponseOutput) ToOverrideTaskStepPropertiesResponseOutputWithContext(ctx context.Context) OverrideTaskStepPropertiesResponseOutput {
	return o
}

func (o OverrideTaskStepPropertiesResponseOutput) ToOverrideTaskStepPropertiesResponsePtrOutput() OverrideTaskStepPropertiesResponsePtrOutput {
	return o.ToOverrideTaskStepPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o OverrideTaskStepPropertiesResponseOutput) ToOverrideTaskStepPropertiesResponsePtrOutputWithContext(ctx context.Context) OverrideTaskStepPropertiesResponsePtrOutput {
	return o.ApplyT(func(v OverrideTaskStepPropertiesResponse) *OverrideTaskStepPropertiesResponse {
		return &v
	}).(OverrideTaskStepPropertiesResponsePtrOutput)
}

// Gets or sets the collection of override arguments to be used when
// executing a build step.
func (o OverrideTaskStepPropertiesResponseOutput) Arguments() ArgumentResponseArrayOutput {
	return o.ApplyT(func(v OverrideTaskStepPropertiesResponse) []ArgumentResponse { return v.Arguments }).(ArgumentResponseArrayOutput)
}

// The source context against which run has to be queued.
func (o OverrideTaskStepPropertiesResponseOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverrideTaskStepPropertiesResponse) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// The file against which run has to be queued.
func (o OverrideTaskStepPropertiesResponseOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverrideTaskStepPropertiesResponse) *string { return v.File }).(pulumi.StringPtrOutput)
}

// The name of the target build stage for the docker build.
func (o OverrideTaskStepPropertiesResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverrideTaskStepPropertiesResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Base64 encoded update trigger token that will be attached with the base image trigger webhook.
func (o OverrideTaskStepPropertiesResponseOutput) UpdateTriggerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverrideTaskStepPropertiesResponse) *string { return v.UpdateTriggerToken }).(pulumi.StringPtrOutput)
}

// The collection of overridable values that can be passed when running a Task.
func (o OverrideTaskStepPropertiesResponseOutput) Values() SetValueResponseArrayOutput {
	return o.ApplyT(func(v OverrideTaskStepPropertiesResponse) []SetValueResponse { return v.Values }).(SetValueResponseArrayOutput)
}

type OverrideTaskStepPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (OverrideTaskStepPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OverrideTaskStepPropertiesResponse)(nil)).Elem()
}

func (o OverrideTaskStepPropertiesResponsePtrOutput) ToOverrideTaskStepPropertiesResponsePtrOutput() OverrideTaskStepPropertiesResponsePtrOutput {
	return o
}

func (o OverrideTaskStepPropertiesResponsePtrOutput) ToOverrideTaskStepPropertiesResponsePtrOutputWithContext(ctx context.Context) OverrideTaskStepPropertiesResponsePtrOutput {
	return o
}

func (o OverrideTaskStepPropertiesResponsePtrOutput) Elem() OverrideTaskStepPropertiesResponseOutput {
	return o.ApplyT(func(v *OverrideTaskStepPropertiesResponse) OverrideTaskStepPropertiesResponse { return *v }).(OverrideTaskStepPropertiesResponseOutput)
}

// Gets or sets the collection of override arguments to be used when
// executing a build step.
func (o OverrideTaskStepPropertiesResponsePtrOutput) Arguments() ArgumentResponseArrayOutput {
	return o.ApplyT(func(v *OverrideTaskStepPropertiesResponse) []ArgumentResponse {
		if v == nil {
			return nil
		}
		return v.Arguments
	}).(ArgumentResponseArrayOutput)
}

// The source context against which run has to be queued.
func (o OverrideTaskStepPropertiesResponsePtrOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverrideTaskStepPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContextPath
	}).(pulumi.StringPtrOutput)
}

// The file against which run has to be queued.
func (o OverrideTaskStepPropertiesResponsePtrOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverrideTaskStepPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.File
	}).(pulumi.StringPtrOutput)
}

// The name of the target build stage for the docker build.
func (o OverrideTaskStepPropertiesResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverrideTaskStepPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// Base64 encoded update trigger token that will be attached with the base image trigger webhook.
func (o OverrideTaskStepPropertiesResponsePtrOutput) UpdateTriggerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverrideTaskStepPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTriggerToken
	}).(pulumi.StringPtrOutput)
}

// The collection of overridable values that can be passed when running a Task.
func (o OverrideTaskStepPropertiesResponsePtrOutput) Values() SetValueResponseArrayOutput {
	return o.ApplyT(func(v *OverrideTaskStepPropertiesResponse) []SetValueResponse {
		if v == nil {
			return nil
		}
		return v.Values
	}).(SetValueResponseArrayOutput)
}

// The platform properties against which the run has to happen.
type PlatformProperties struct {
	// The OS architecture.
	Architecture *string `pulumi:"architecture"`
	// The operating system type required for the run.
	Os string `pulumi:"os"`
	// Variant of the CPU.
	Variant *string `pulumi:"variant"`
}

// PlatformPropertiesInput is an input type that accepts PlatformPropertiesArgs and PlatformPropertiesOutput values.
// You can construct a concrete instance of `PlatformPropertiesInput` via:
//
//          PlatformPropertiesArgs{...}
type PlatformPropertiesInput interface {
	pulumi.Input

	ToPlatformPropertiesOutput() PlatformPropertiesOutput
	ToPlatformPropertiesOutputWithContext(context.Context) PlatformPropertiesOutput
}

// The platform properties against which the run has to happen.
type PlatformPropertiesArgs struct {
	// The OS architecture.
	Architecture pulumi.StringPtrInput `pulumi:"architecture"`
	// The operating system type required for the run.
	Os pulumi.StringInput `pulumi:"os"`
	// Variant of the CPU.
	Variant pulumi.StringPtrInput `pulumi:"variant"`
}

func (PlatformPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformProperties)(nil)).Elem()
}

func (i PlatformPropertiesArgs) ToPlatformPropertiesOutput() PlatformPropertiesOutput {
	return i.ToPlatformPropertiesOutputWithContext(context.Background())
}

func (i PlatformPropertiesArgs) ToPlatformPropertiesOutputWithContext(ctx context.Context) PlatformPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesOutput)
}

func (i PlatformPropertiesArgs) ToPlatformPropertiesPtrOutput() PlatformPropertiesPtrOutput {
	return i.ToPlatformPropertiesPtrOutputWithContext(context.Background())
}

func (i PlatformPropertiesArgs) ToPlatformPropertiesPtrOutputWithContext(ctx context.Context) PlatformPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesOutput).ToPlatformPropertiesPtrOutputWithContext(ctx)
}

// PlatformPropertiesPtrInput is an input type that accepts PlatformPropertiesArgs, PlatformPropertiesPtr and PlatformPropertiesPtrOutput values.
// You can construct a concrete instance of `PlatformPropertiesPtrInput` via:
//
//          PlatformPropertiesArgs{...}
//
//  or:
//
//          nil
type PlatformPropertiesPtrInput interface {
	pulumi.Input

	ToPlatformPropertiesPtrOutput() PlatformPropertiesPtrOutput
	ToPlatformPropertiesPtrOutputWithContext(context.Context) PlatformPropertiesPtrOutput
}

type platformPropertiesPtrType PlatformPropertiesArgs

func PlatformPropertiesPtr(v *PlatformPropertiesArgs) PlatformPropertiesPtrInput {
	return (*platformPropertiesPtrType)(v)
}

func (*platformPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformProperties)(nil)).Elem()
}

func (i *platformPropertiesPtrType) ToPlatformPropertiesPtrOutput() PlatformPropertiesPtrOutput {
	return i.ToPlatformPropertiesPtrOutputWithContext(context.Background())
}

func (i *platformPropertiesPtrType) ToPlatformPropertiesPtrOutputWithContext(ctx context.Context) PlatformPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesPtrOutput)
}

// The platform properties against which the run has to happen.
type PlatformPropertiesOutput struct{ *pulumi.OutputState }

func (PlatformPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformProperties)(nil)).Elem()
}

func (o PlatformPropertiesOutput) ToPlatformPropertiesOutput() PlatformPropertiesOutput {
	return o
}

func (o PlatformPropertiesOutput) ToPlatformPropertiesOutputWithContext(ctx context.Context) PlatformPropertiesOutput {
	return o
}

func (o PlatformPropertiesOutput) ToPlatformPropertiesPtrOutput() PlatformPropertiesPtrOutput {
	return o.ToPlatformPropertiesPtrOutputWithContext(context.Background())
}

func (o PlatformPropertiesOutput) ToPlatformPropertiesPtrOutputWithContext(ctx context.Context) PlatformPropertiesPtrOutput {
	return o.ApplyT(func(v PlatformProperties) *PlatformProperties {
		return &v
	}).(PlatformPropertiesPtrOutput)
}

// The OS architecture.
func (o PlatformPropertiesOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformProperties) *string { return v.Architecture }).(pulumi.StringPtrOutput)
}

// The operating system type required for the run.
func (o PlatformPropertiesOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v PlatformProperties) string { return v.Os }).(pulumi.StringOutput)
}

// Variant of the CPU.
func (o PlatformPropertiesOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformProperties) *string { return v.Variant }).(pulumi.StringPtrOutput)
}

type PlatformPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PlatformPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformProperties)(nil)).Elem()
}

func (o PlatformPropertiesPtrOutput) ToPlatformPropertiesPtrOutput() PlatformPropertiesPtrOutput {
	return o
}

func (o PlatformPropertiesPtrOutput) ToPlatformPropertiesPtrOutputWithContext(ctx context.Context) PlatformPropertiesPtrOutput {
	return o
}

func (o PlatformPropertiesPtrOutput) Elem() PlatformPropertiesOutput {
	return o.ApplyT(func(v *PlatformProperties) PlatformProperties { return *v }).(PlatformPropertiesOutput)
}

// The OS architecture.
func (o PlatformPropertiesPtrOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformProperties) *string {
		if v == nil {
			return nil
		}
		return v.Architecture
	}).(pulumi.StringPtrOutput)
}

// The operating system type required for the run.
func (o PlatformPropertiesPtrOutput) Os() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Os
	}).(pulumi.StringPtrOutput)
}

// Variant of the CPU.
func (o PlatformPropertiesPtrOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformProperties) *string {
		if v == nil {
			return nil
		}
		return v.Variant
	}).(pulumi.StringPtrOutput)
}

// The platform properties against which the run has to happen.
type PlatformPropertiesInvokeResponse struct {
	// The OS architecture.
	Architecture *string `pulumi:"architecture"`
	// The operating system type required for the run.
	Os string `pulumi:"os"`
	// Variant of the CPU.
	Variant *string `pulumi:"variant"`
}

// PlatformPropertiesInvokeResponseInput is an input type that accepts PlatformPropertiesInvokeResponseArgs and PlatformPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `PlatformPropertiesInvokeResponseInput` via:
//
//          PlatformPropertiesInvokeResponseArgs{...}
type PlatformPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToPlatformPropertiesInvokeResponseOutput() PlatformPropertiesInvokeResponseOutput
	ToPlatformPropertiesInvokeResponseOutputWithContext(context.Context) PlatformPropertiesInvokeResponseOutput
}

// The platform properties against which the run has to happen.
type PlatformPropertiesInvokeResponseArgs struct {
	// The OS architecture.
	Architecture pulumi.StringPtrInput `pulumi:"architecture"`
	// The operating system type required for the run.
	Os pulumi.StringInput `pulumi:"os"`
	// Variant of the CPU.
	Variant pulumi.StringPtrInput `pulumi:"variant"`
}

func (PlatformPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformPropertiesInvokeResponse)(nil)).Elem()
}

func (i PlatformPropertiesInvokeResponseArgs) ToPlatformPropertiesInvokeResponseOutput() PlatformPropertiesInvokeResponseOutput {
	return i.ToPlatformPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i PlatformPropertiesInvokeResponseArgs) ToPlatformPropertiesInvokeResponseOutputWithContext(ctx context.Context) PlatformPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesInvokeResponseOutput)
}

func (i PlatformPropertiesInvokeResponseArgs) ToPlatformPropertiesInvokeResponsePtrOutput() PlatformPropertiesInvokeResponsePtrOutput {
	return i.ToPlatformPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i PlatformPropertiesInvokeResponseArgs) ToPlatformPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) PlatformPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesInvokeResponseOutput).ToPlatformPropertiesInvokeResponsePtrOutputWithContext(ctx)
}

// PlatformPropertiesInvokeResponsePtrInput is an input type that accepts PlatformPropertiesInvokeResponseArgs, PlatformPropertiesInvokeResponsePtr and PlatformPropertiesInvokeResponsePtrOutput values.
// You can construct a concrete instance of `PlatformPropertiesInvokeResponsePtrInput` via:
//
//          PlatformPropertiesInvokeResponseArgs{...}
//
//  or:
//
//          nil
type PlatformPropertiesInvokeResponsePtrInput interface {
	pulumi.Input

	ToPlatformPropertiesInvokeResponsePtrOutput() PlatformPropertiesInvokeResponsePtrOutput
	ToPlatformPropertiesInvokeResponsePtrOutputWithContext(context.Context) PlatformPropertiesInvokeResponsePtrOutput
}

type platformPropertiesInvokeResponsePtrType PlatformPropertiesInvokeResponseArgs

func PlatformPropertiesInvokeResponsePtr(v *PlatformPropertiesInvokeResponseArgs) PlatformPropertiesInvokeResponsePtrInput {
	return (*platformPropertiesInvokeResponsePtrType)(v)
}

func (*platformPropertiesInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformPropertiesInvokeResponse)(nil)).Elem()
}

func (i *platformPropertiesInvokeResponsePtrType) ToPlatformPropertiesInvokeResponsePtrOutput() PlatformPropertiesInvokeResponsePtrOutput {
	return i.ToPlatformPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *platformPropertiesInvokeResponsePtrType) ToPlatformPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) PlatformPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesInvokeResponsePtrOutput)
}

// The platform properties against which the run has to happen.
type PlatformPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (PlatformPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformPropertiesInvokeResponse)(nil)).Elem()
}

func (o PlatformPropertiesInvokeResponseOutput) ToPlatformPropertiesInvokeResponseOutput() PlatformPropertiesInvokeResponseOutput {
	return o
}

func (o PlatformPropertiesInvokeResponseOutput) ToPlatformPropertiesInvokeResponseOutputWithContext(ctx context.Context) PlatformPropertiesInvokeResponseOutput {
	return o
}

func (o PlatformPropertiesInvokeResponseOutput) ToPlatformPropertiesInvokeResponsePtrOutput() PlatformPropertiesInvokeResponsePtrOutput {
	return o.ToPlatformPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (o PlatformPropertiesInvokeResponseOutput) ToPlatformPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) PlatformPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v PlatformPropertiesInvokeResponse) *PlatformPropertiesInvokeResponse {
		return &v
	}).(PlatformPropertiesInvokeResponsePtrOutput)
}

// The OS architecture.
func (o PlatformPropertiesInvokeResponseOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformPropertiesInvokeResponse) *string { return v.Architecture }).(pulumi.StringPtrOutput)
}

// The operating system type required for the run.
func (o PlatformPropertiesInvokeResponseOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v PlatformPropertiesInvokeResponse) string { return v.Os }).(pulumi.StringOutput)
}

// Variant of the CPU.
func (o PlatformPropertiesInvokeResponseOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformPropertiesInvokeResponse) *string { return v.Variant }).(pulumi.StringPtrOutput)
}

type PlatformPropertiesInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (PlatformPropertiesInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformPropertiesInvokeResponse)(nil)).Elem()
}

func (o PlatformPropertiesInvokeResponsePtrOutput) ToPlatformPropertiesInvokeResponsePtrOutput() PlatformPropertiesInvokeResponsePtrOutput {
	return o
}

func (o PlatformPropertiesInvokeResponsePtrOutput) ToPlatformPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) PlatformPropertiesInvokeResponsePtrOutput {
	return o
}

func (o PlatformPropertiesInvokeResponsePtrOutput) Elem() PlatformPropertiesInvokeResponseOutput {
	return o.ApplyT(func(v *PlatformPropertiesInvokeResponse) PlatformPropertiesInvokeResponse { return *v }).(PlatformPropertiesInvokeResponseOutput)
}

// The OS architecture.
func (o PlatformPropertiesInvokeResponsePtrOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformPropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Architecture
	}).(pulumi.StringPtrOutput)
}

// The operating system type required for the run.
func (o PlatformPropertiesInvokeResponsePtrOutput) Os() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformPropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Os
	}).(pulumi.StringPtrOutput)
}

// Variant of the CPU.
func (o PlatformPropertiesInvokeResponsePtrOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformPropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Variant
	}).(pulumi.StringPtrOutput)
}

// The platform properties against which the run has to happen.
type PlatformPropertiesResponse struct {
	// The OS architecture.
	Architecture *string `pulumi:"architecture"`
	// The operating system type required for the run.
	Os string `pulumi:"os"`
	// Variant of the CPU.
	Variant *string `pulumi:"variant"`
}

// PlatformPropertiesResponseInput is an input type that accepts PlatformPropertiesResponseArgs and PlatformPropertiesResponseOutput values.
// You can construct a concrete instance of `PlatformPropertiesResponseInput` via:
//
//          PlatformPropertiesResponseArgs{...}
type PlatformPropertiesResponseInput interface {
	pulumi.Input

	ToPlatformPropertiesResponseOutput() PlatformPropertiesResponseOutput
	ToPlatformPropertiesResponseOutputWithContext(context.Context) PlatformPropertiesResponseOutput
}

// The platform properties against which the run has to happen.
type PlatformPropertiesResponseArgs struct {
	// The OS architecture.
	Architecture pulumi.StringPtrInput `pulumi:"architecture"`
	// The operating system type required for the run.
	Os pulumi.StringInput `pulumi:"os"`
	// Variant of the CPU.
	Variant pulumi.StringPtrInput `pulumi:"variant"`
}

func (PlatformPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformPropertiesResponse)(nil)).Elem()
}

func (i PlatformPropertiesResponseArgs) ToPlatformPropertiesResponseOutput() PlatformPropertiesResponseOutput {
	return i.ToPlatformPropertiesResponseOutputWithContext(context.Background())
}

func (i PlatformPropertiesResponseArgs) ToPlatformPropertiesResponseOutputWithContext(ctx context.Context) PlatformPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesResponseOutput)
}

func (i PlatformPropertiesResponseArgs) ToPlatformPropertiesResponsePtrOutput() PlatformPropertiesResponsePtrOutput {
	return i.ToPlatformPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i PlatformPropertiesResponseArgs) ToPlatformPropertiesResponsePtrOutputWithContext(ctx context.Context) PlatformPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesResponseOutput).ToPlatformPropertiesResponsePtrOutputWithContext(ctx)
}

// PlatformPropertiesResponsePtrInput is an input type that accepts PlatformPropertiesResponseArgs, PlatformPropertiesResponsePtr and PlatformPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `PlatformPropertiesResponsePtrInput` via:
//
//          PlatformPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type PlatformPropertiesResponsePtrInput interface {
	pulumi.Input

	ToPlatformPropertiesResponsePtrOutput() PlatformPropertiesResponsePtrOutput
	ToPlatformPropertiesResponsePtrOutputWithContext(context.Context) PlatformPropertiesResponsePtrOutput
}

type platformPropertiesResponsePtrType PlatformPropertiesResponseArgs

func PlatformPropertiesResponsePtr(v *PlatformPropertiesResponseArgs) PlatformPropertiesResponsePtrInput {
	return (*platformPropertiesResponsePtrType)(v)
}

func (*platformPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformPropertiesResponse)(nil)).Elem()
}

func (i *platformPropertiesResponsePtrType) ToPlatformPropertiesResponsePtrOutput() PlatformPropertiesResponsePtrOutput {
	return i.ToPlatformPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *platformPropertiesResponsePtrType) ToPlatformPropertiesResponsePtrOutputWithContext(ctx context.Context) PlatformPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesResponsePtrOutput)
}

// The platform properties against which the run has to happen.
type PlatformPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PlatformPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformPropertiesResponse)(nil)).Elem()
}

func (o PlatformPropertiesResponseOutput) ToPlatformPropertiesResponseOutput() PlatformPropertiesResponseOutput {
	return o
}

func (o PlatformPropertiesResponseOutput) ToPlatformPropertiesResponseOutputWithContext(ctx context.Context) PlatformPropertiesResponseOutput {
	return o
}

func (o PlatformPropertiesResponseOutput) ToPlatformPropertiesResponsePtrOutput() PlatformPropertiesResponsePtrOutput {
	return o.ToPlatformPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o PlatformPropertiesResponseOutput) ToPlatformPropertiesResponsePtrOutputWithContext(ctx context.Context) PlatformPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PlatformPropertiesResponse) *PlatformPropertiesResponse {
		return &v
	}).(PlatformPropertiesResponsePtrOutput)
}

// The OS architecture.
func (o PlatformPropertiesResponseOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformPropertiesResponse) *string { return v.Architecture }).(pulumi.StringPtrOutput)
}

// The operating system type required for the run.
func (o PlatformPropertiesResponseOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v PlatformPropertiesResponse) string { return v.Os }).(pulumi.StringOutput)
}

// Variant of the CPU.
func (o PlatformPropertiesResponseOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformPropertiesResponse) *string { return v.Variant }).(pulumi.StringPtrOutput)
}

type PlatformPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PlatformPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformPropertiesResponse)(nil)).Elem()
}

func (o PlatformPropertiesResponsePtrOutput) ToPlatformPropertiesResponsePtrOutput() PlatformPropertiesResponsePtrOutput {
	return o
}

func (o PlatformPropertiesResponsePtrOutput) ToPlatformPropertiesResponsePtrOutputWithContext(ctx context.Context) PlatformPropertiesResponsePtrOutput {
	return o
}

func (o PlatformPropertiesResponsePtrOutput) Elem() PlatformPropertiesResponseOutput {
	return o.ApplyT(func(v *PlatformPropertiesResponse) PlatformPropertiesResponse { return *v }).(PlatformPropertiesResponseOutput)
}

// The OS architecture.
func (o PlatformPropertiesResponsePtrOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Architecture
	}).(pulumi.StringPtrOutput)
}

// The operating system type required for the run.
func (o PlatformPropertiesResponsePtrOutput) Os() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Os
	}).(pulumi.StringPtrOutput)
}

// Variant of the CPU.
func (o PlatformPropertiesResponsePtrOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Variant
	}).(pulumi.StringPtrOutput)
}

// Run resource properties
type RunInvokeResponse struct {
	// The machine configuration of the run agent.
	AgentConfiguration *AgentPropertiesInvokeResponse `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName *string `pulumi:"agentPoolName"`
	// The time the run was scheduled.
	CreateTime *string `pulumi:"createTime"`
	// The list of custom registries that were logged in during this run.
	CustomRegistries []string `pulumi:"customRegistries"`
	// The time the run finished.
	FinishTime *string `pulumi:"finishTime"`
	// The resource ID.
	Id string `pulumi:"id"`
	// The image update trigger that caused the run. This is applicable if the task has base image trigger configured.
	ImageUpdateTrigger *ImageUpdateTriggerInvokeResponse `pulumi:"imageUpdateTrigger"`
	// The value that indicates whether archiving is enabled or not.
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// The last updated time for the run.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// The image description for the log artifact.
	LogArtifact ImageDescriptorInvokeResponse `pulumi:"logArtifact"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.
	OutputImages []ImageDescriptorInvokeResponse `pulumi:"outputImages"`
	// The platform properties against which the run will happen.
	Platform *PlatformPropertiesInvokeResponse `pulumi:"platform"`
	// The provisioning state of a run.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The error message received from backend systems after the run is scheduled.
	RunErrorMessage string `pulumi:"runErrorMessage"`
	// The unique identifier for the run.
	RunId *string `pulumi:"runId"`
	// The type of run.
	RunType *string `pulumi:"runType"`
	// The scope of the credentials that were used to login to the source registry during this run.
	SourceRegistryAuth *string `pulumi:"sourceRegistryAuth"`
	// The source trigger that caused the run.
	SourceTrigger *SourceTriggerDescriptorInvokeResponse `pulumi:"sourceTrigger"`
	// The time the run started.
	StartTime *string `pulumi:"startTime"`
	// The current status of the run.
	Status *string `pulumi:"status"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataInvokeResponse `pulumi:"systemData"`
	// The task against which run was scheduled.
	Task *string `pulumi:"task"`
	// The timer trigger that caused the run.
	TimerTrigger *TimerTriggerDescriptorInvokeResponse `pulumi:"timerTrigger"`
	// The type of the resource.
	Type string `pulumi:"type"`
	// The update trigger token passed for the Run.
	UpdateTriggerToken *string `pulumi:"updateTriggerToken"`
}

// RunInvokeResponseInput is an input type that accepts RunInvokeResponseArgs and RunInvokeResponseOutput values.
// You can construct a concrete instance of `RunInvokeResponseInput` via:
//
//          RunInvokeResponseArgs{...}
type RunInvokeResponseInput interface {
	pulumi.Input

	ToRunInvokeResponseOutput() RunInvokeResponseOutput
	ToRunInvokeResponseOutputWithContext(context.Context) RunInvokeResponseOutput
}

// Run resource properties
type RunInvokeResponseArgs struct {
	// The machine configuration of the run agent.
	AgentConfiguration AgentPropertiesInvokeResponsePtrInput `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName pulumi.StringPtrInput `pulumi:"agentPoolName"`
	// The time the run was scheduled.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// The list of custom registries that were logged in during this run.
	CustomRegistries pulumi.StringArrayInput `pulumi:"customRegistries"`
	// The time the run finished.
	FinishTime pulumi.StringPtrInput `pulumi:"finishTime"`
	// The resource ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The image update trigger that caused the run. This is applicable if the task has base image trigger configured.
	ImageUpdateTrigger ImageUpdateTriggerInvokeResponsePtrInput `pulumi:"imageUpdateTrigger"`
	// The value that indicates whether archiving is enabled or not.
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// The last updated time for the run.
	LastUpdatedTime pulumi.StringPtrInput `pulumi:"lastUpdatedTime"`
	// The image description for the log artifact.
	LogArtifact ImageDescriptorInvokeResponseInput `pulumi:"logArtifact"`
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.
	OutputImages ImageDescriptorInvokeResponseArrayInput `pulumi:"outputImages"`
	// The platform properties against which the run will happen.
	Platform PlatformPropertiesInvokeResponsePtrInput `pulumi:"platform"`
	// The provisioning state of a run.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The error message received from backend systems after the run is scheduled.
	RunErrorMessage pulumi.StringInput `pulumi:"runErrorMessage"`
	// The unique identifier for the run.
	RunId pulumi.StringPtrInput `pulumi:"runId"`
	// The type of run.
	RunType pulumi.StringPtrInput `pulumi:"runType"`
	// The scope of the credentials that were used to login to the source registry during this run.
	SourceRegistryAuth pulumi.StringPtrInput `pulumi:"sourceRegistryAuth"`
	// The source trigger that caused the run.
	SourceTrigger SourceTriggerDescriptorInvokeResponsePtrInput `pulumi:"sourceTrigger"`
	// The time the run started.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// The current status of the run.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataInvokeResponseInput `pulumi:"systemData"`
	// The task against which run was scheduled.
	Task pulumi.StringPtrInput `pulumi:"task"`
	// The timer trigger that caused the run.
	TimerTrigger TimerTriggerDescriptorInvokeResponsePtrInput `pulumi:"timerTrigger"`
	// The type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
	// The update trigger token passed for the Run.
	UpdateTriggerToken pulumi.StringPtrInput `pulumi:"updateTriggerToken"`
}

func (RunInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RunInvokeResponse)(nil)).Elem()
}

func (i RunInvokeResponseArgs) ToRunInvokeResponseOutput() RunInvokeResponseOutput {
	return i.ToRunInvokeResponseOutputWithContext(context.Background())
}

func (i RunInvokeResponseArgs) ToRunInvokeResponseOutputWithContext(ctx context.Context) RunInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunInvokeResponseOutput)
}

// Run resource properties
type RunInvokeResponseOutput struct{ *pulumi.OutputState }

func (RunInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RunInvokeResponse)(nil)).Elem()
}

func (o RunInvokeResponseOutput) ToRunInvokeResponseOutput() RunInvokeResponseOutput {
	return o
}

func (o RunInvokeResponseOutput) ToRunInvokeResponseOutputWithContext(ctx context.Context) RunInvokeResponseOutput {
	return o
}

// The machine configuration of the run agent.
func (o RunInvokeResponseOutput) AgentConfiguration() AgentPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v RunInvokeResponse) *AgentPropertiesInvokeResponse { return v.AgentConfiguration }).(AgentPropertiesInvokeResponsePtrOutput)
}

// The dedicated agent pool for the run.
func (o RunInvokeResponseOutput) AgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunInvokeResponse) *string { return v.AgentPoolName }).(pulumi.StringPtrOutput)
}

// The time the run was scheduled.
func (o RunInvokeResponseOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunInvokeResponse) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// The list of custom registries that were logged in during this run.
func (o RunInvokeResponseOutput) CustomRegistries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RunInvokeResponse) []string { return v.CustomRegistries }).(pulumi.StringArrayOutput)
}

// The time the run finished.
func (o RunInvokeResponseOutput) FinishTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunInvokeResponse) *string { return v.FinishTime }).(pulumi.StringPtrOutput)
}

// The resource ID.
func (o RunInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RunInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The image update trigger that caused the run. This is applicable if the task has base image trigger configured.
func (o RunInvokeResponseOutput) ImageUpdateTrigger() ImageUpdateTriggerInvokeResponsePtrOutput {
	return o.ApplyT(func(v RunInvokeResponse) *ImageUpdateTriggerInvokeResponse { return v.ImageUpdateTrigger }).(ImageUpdateTriggerInvokeResponsePtrOutput)
}

// The value that indicates whether archiving is enabled or not.
func (o RunInvokeResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RunInvokeResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// The last updated time for the run.
func (o RunInvokeResponseOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunInvokeResponse) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

// The image description for the log artifact.
func (o RunInvokeResponseOutput) LogArtifact() ImageDescriptorInvokeResponseOutput {
	return o.ApplyT(func(v RunInvokeResponse) ImageDescriptorInvokeResponse { return v.LogArtifact }).(ImageDescriptorInvokeResponseOutput)
}

// The name of the resource.
func (o RunInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RunInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.
func (o RunInvokeResponseOutput) OutputImages() ImageDescriptorInvokeResponseArrayOutput {
	return o.ApplyT(func(v RunInvokeResponse) []ImageDescriptorInvokeResponse { return v.OutputImages }).(ImageDescriptorInvokeResponseArrayOutput)
}

// The platform properties against which the run will happen.
func (o RunInvokeResponseOutput) Platform() PlatformPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v RunInvokeResponse) *PlatformPropertiesInvokeResponse { return v.Platform }).(PlatformPropertiesInvokeResponsePtrOutput)
}

// The provisioning state of a run.
func (o RunInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The error message received from backend systems after the run is scheduled.
func (o RunInvokeResponseOutput) RunErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v RunInvokeResponse) string { return v.RunErrorMessage }).(pulumi.StringOutput)
}

// The unique identifier for the run.
func (o RunInvokeResponseOutput) RunId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunInvokeResponse) *string { return v.RunId }).(pulumi.StringPtrOutput)
}

// The type of run.
func (o RunInvokeResponseOutput) RunType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunInvokeResponse) *string { return v.RunType }).(pulumi.StringPtrOutput)
}

// The scope of the credentials that were used to login to the source registry during this run.
func (o RunInvokeResponseOutput) SourceRegistryAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunInvokeResponse) *string { return v.SourceRegistryAuth }).(pulumi.StringPtrOutput)
}

// The source trigger that caused the run.
func (o RunInvokeResponseOutput) SourceTrigger() SourceTriggerDescriptorInvokeResponsePtrOutput {
	return o.ApplyT(func(v RunInvokeResponse) *SourceTriggerDescriptorInvokeResponse { return v.SourceTrigger }).(SourceTriggerDescriptorInvokeResponsePtrOutput)
}

// The time the run started.
func (o RunInvokeResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunInvokeResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The current status of the run.
func (o RunInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o RunInvokeResponseOutput) SystemData() SystemDataInvokeResponseOutput {
	return o.ApplyT(func(v RunInvokeResponse) SystemDataInvokeResponse { return v.SystemData }).(SystemDataInvokeResponseOutput)
}

// The task against which run was scheduled.
func (o RunInvokeResponseOutput) Task() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunInvokeResponse) *string { return v.Task }).(pulumi.StringPtrOutput)
}

// The timer trigger that caused the run.
func (o RunInvokeResponseOutput) TimerTrigger() TimerTriggerDescriptorInvokeResponsePtrOutput {
	return o.ApplyT(func(v RunInvokeResponse) *TimerTriggerDescriptorInvokeResponse { return v.TimerTrigger }).(TimerTriggerDescriptorInvokeResponsePtrOutput)
}

// The type of the resource.
func (o RunInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RunInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The update trigger token passed for the Run.
func (o RunInvokeResponseOutput) UpdateTriggerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunInvokeResponse) *string { return v.UpdateTriggerToken }).(pulumi.StringPtrOutput)
}

// Run resource properties
type RunResponse struct {
	// The machine configuration of the run agent.
	AgentConfiguration *AgentPropertiesResponse `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName *string `pulumi:"agentPoolName"`
	// The time the run was scheduled.
	CreateTime *string `pulumi:"createTime"`
	// The list of custom registries that were logged in during this run.
	CustomRegistries []string `pulumi:"customRegistries"`
	// The time the run finished.
	FinishTime *string `pulumi:"finishTime"`
	// The resource ID.
	Id string `pulumi:"id"`
	// The image update trigger that caused the run. This is applicable if the task has base image trigger configured.
	ImageUpdateTrigger *ImageUpdateTriggerResponse `pulumi:"imageUpdateTrigger"`
	// The value that indicates whether archiving is enabled or not.
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// The last updated time for the run.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// The image description for the log artifact.
	LogArtifact ImageDescriptorResponse `pulumi:"logArtifact"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.
	OutputImages []ImageDescriptorResponse `pulumi:"outputImages"`
	// The platform properties against which the run will happen.
	Platform *PlatformPropertiesResponse `pulumi:"platform"`
	// The provisioning state of a run.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The error message received from backend systems after the run is scheduled.
	RunErrorMessage string `pulumi:"runErrorMessage"`
	// The unique identifier for the run.
	RunId *string `pulumi:"runId"`
	// The type of run.
	RunType *string `pulumi:"runType"`
	// The scope of the credentials that were used to login to the source registry during this run.
	SourceRegistryAuth *string `pulumi:"sourceRegistryAuth"`
	// The source trigger that caused the run.
	SourceTrigger *SourceTriggerDescriptorResponse `pulumi:"sourceTrigger"`
	// The time the run started.
	StartTime *string `pulumi:"startTime"`
	// The current status of the run.
	Status *string `pulumi:"status"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The task against which run was scheduled.
	Task *string `pulumi:"task"`
	// The timer trigger that caused the run.
	TimerTrigger *TimerTriggerDescriptorResponse `pulumi:"timerTrigger"`
	// The type of the resource.
	Type string `pulumi:"type"`
	// The update trigger token passed for the Run.
	UpdateTriggerToken *string `pulumi:"updateTriggerToken"`
}

// RunResponseInput is an input type that accepts RunResponseArgs and RunResponseOutput values.
// You can construct a concrete instance of `RunResponseInput` via:
//
//          RunResponseArgs{...}
type RunResponseInput interface {
	pulumi.Input

	ToRunResponseOutput() RunResponseOutput
	ToRunResponseOutputWithContext(context.Context) RunResponseOutput
}

// Run resource properties
type RunResponseArgs struct {
	// The machine configuration of the run agent.
	AgentConfiguration AgentPropertiesResponsePtrInput `pulumi:"agentConfiguration"`
	// The dedicated agent pool for the run.
	AgentPoolName pulumi.StringPtrInput `pulumi:"agentPoolName"`
	// The time the run was scheduled.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// The list of custom registries that were logged in during this run.
	CustomRegistries pulumi.StringArrayInput `pulumi:"customRegistries"`
	// The time the run finished.
	FinishTime pulumi.StringPtrInput `pulumi:"finishTime"`
	// The resource ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The image update trigger that caused the run. This is applicable if the task has base image trigger configured.
	ImageUpdateTrigger ImageUpdateTriggerResponsePtrInput `pulumi:"imageUpdateTrigger"`
	// The value that indicates whether archiving is enabled or not.
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// The last updated time for the run.
	LastUpdatedTime pulumi.StringPtrInput `pulumi:"lastUpdatedTime"`
	// The image description for the log artifact.
	LogArtifact ImageDescriptorResponseInput `pulumi:"logArtifact"`
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.
	OutputImages ImageDescriptorResponseArrayInput `pulumi:"outputImages"`
	// The platform properties against which the run will happen.
	Platform PlatformPropertiesResponsePtrInput `pulumi:"platform"`
	// The provisioning state of a run.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The error message received from backend systems after the run is scheduled.
	RunErrorMessage pulumi.StringInput `pulumi:"runErrorMessage"`
	// The unique identifier for the run.
	RunId pulumi.StringPtrInput `pulumi:"runId"`
	// The type of run.
	RunType pulumi.StringPtrInput `pulumi:"runType"`
	// The scope of the credentials that were used to login to the source registry during this run.
	SourceRegistryAuth pulumi.StringPtrInput `pulumi:"sourceRegistryAuth"`
	// The source trigger that caused the run.
	SourceTrigger SourceTriggerDescriptorResponsePtrInput `pulumi:"sourceTrigger"`
	// The time the run started.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// The current status of the run.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseInput `pulumi:"systemData"`
	// The task against which run was scheduled.
	Task pulumi.StringPtrInput `pulumi:"task"`
	// The timer trigger that caused the run.
	TimerTrigger TimerTriggerDescriptorResponsePtrInput `pulumi:"timerTrigger"`
	// The type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
	// The update trigger token passed for the Run.
	UpdateTriggerToken pulumi.StringPtrInput `pulumi:"updateTriggerToken"`
}

func (RunResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RunResponse)(nil)).Elem()
}

func (i RunResponseArgs) ToRunResponseOutput() RunResponseOutput {
	return i.ToRunResponseOutputWithContext(context.Background())
}

func (i RunResponseArgs) ToRunResponseOutputWithContext(ctx context.Context) RunResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunResponseOutput)
}

func (i RunResponseArgs) ToRunResponsePtrOutput() RunResponsePtrOutput {
	return i.ToRunResponsePtrOutputWithContext(context.Background())
}

func (i RunResponseArgs) ToRunResponsePtrOutputWithContext(ctx context.Context) RunResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunResponseOutput).ToRunResponsePtrOutputWithContext(ctx)
}

// RunResponsePtrInput is an input type that accepts RunResponseArgs, RunResponsePtr and RunResponsePtrOutput values.
// You can construct a concrete instance of `RunResponsePtrInput` via:
//
//          RunResponseArgs{...}
//
//  or:
//
//          nil
type RunResponsePtrInput interface {
	pulumi.Input

	ToRunResponsePtrOutput() RunResponsePtrOutput
	ToRunResponsePtrOutputWithContext(context.Context) RunResponsePtrOutput
}

type runResponsePtrType RunResponseArgs

func RunResponsePtr(v *RunResponseArgs) RunResponsePtrInput {
	return (*runResponsePtrType)(v)
}

func (*runResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RunResponse)(nil)).Elem()
}

func (i *runResponsePtrType) ToRunResponsePtrOutput() RunResponsePtrOutput {
	return i.ToRunResponsePtrOutputWithContext(context.Background())
}

func (i *runResponsePtrType) ToRunResponsePtrOutputWithContext(ctx context.Context) RunResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunResponsePtrOutput)
}

// Run resource properties
type RunResponseOutput struct{ *pulumi.OutputState }

func (RunResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RunResponse)(nil)).Elem()
}

func (o RunResponseOutput) ToRunResponseOutput() RunResponseOutput {
	return o
}

func (o RunResponseOutput) ToRunResponseOutputWithContext(ctx context.Context) RunResponseOutput {
	return o
}

func (o RunResponseOutput) ToRunResponsePtrOutput() RunResponsePtrOutput {
	return o.ToRunResponsePtrOutputWithContext(context.Background())
}

func (o RunResponseOutput) ToRunResponsePtrOutputWithContext(ctx context.Context) RunResponsePtrOutput {
	return o.ApplyT(func(v RunResponse) *RunResponse {
		return &v
	}).(RunResponsePtrOutput)
}

// The machine configuration of the run agent.
func (o RunResponseOutput) AgentConfiguration() AgentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RunResponse) *AgentPropertiesResponse { return v.AgentConfiguration }).(AgentPropertiesResponsePtrOutput)
}

// The dedicated agent pool for the run.
func (o RunResponseOutput) AgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunResponse) *string { return v.AgentPoolName }).(pulumi.StringPtrOutput)
}

// The time the run was scheduled.
func (o RunResponseOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunResponse) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// The list of custom registries that were logged in during this run.
func (o RunResponseOutput) CustomRegistries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RunResponse) []string { return v.CustomRegistries }).(pulumi.StringArrayOutput)
}

// The time the run finished.
func (o RunResponseOutput) FinishTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunResponse) *string { return v.FinishTime }).(pulumi.StringPtrOutput)
}

// The resource ID.
func (o RunResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RunResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The image update trigger that caused the run. This is applicable if the task has base image trigger configured.
func (o RunResponseOutput) ImageUpdateTrigger() ImageUpdateTriggerResponsePtrOutput {
	return o.ApplyT(func(v RunResponse) *ImageUpdateTriggerResponse { return v.ImageUpdateTrigger }).(ImageUpdateTriggerResponsePtrOutput)
}

// The value that indicates whether archiving is enabled or not.
func (o RunResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RunResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// The last updated time for the run.
func (o RunResponseOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunResponse) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

// The image description for the log artifact.
func (o RunResponseOutput) LogArtifact() ImageDescriptorResponseOutput {
	return o.ApplyT(func(v RunResponse) ImageDescriptorResponse { return v.LogArtifact }).(ImageDescriptorResponseOutput)
}

// The name of the resource.
func (o RunResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RunResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.
func (o RunResponseOutput) OutputImages() ImageDescriptorResponseArrayOutput {
	return o.ApplyT(func(v RunResponse) []ImageDescriptorResponse { return v.OutputImages }).(ImageDescriptorResponseArrayOutput)
}

// The platform properties against which the run will happen.
func (o RunResponseOutput) Platform() PlatformPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RunResponse) *PlatformPropertiesResponse { return v.Platform }).(PlatformPropertiesResponsePtrOutput)
}

// The provisioning state of a run.
func (o RunResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The error message received from backend systems after the run is scheduled.
func (o RunResponseOutput) RunErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v RunResponse) string { return v.RunErrorMessage }).(pulumi.StringOutput)
}

// The unique identifier for the run.
func (o RunResponseOutput) RunId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunResponse) *string { return v.RunId }).(pulumi.StringPtrOutput)
}

// The type of run.
func (o RunResponseOutput) RunType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunResponse) *string { return v.RunType }).(pulumi.StringPtrOutput)
}

// The scope of the credentials that were used to login to the source registry during this run.
func (o RunResponseOutput) SourceRegistryAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunResponse) *string { return v.SourceRegistryAuth }).(pulumi.StringPtrOutput)
}

// The source trigger that caused the run.
func (o RunResponseOutput) SourceTrigger() SourceTriggerDescriptorResponsePtrOutput {
	return o.ApplyT(func(v RunResponse) *SourceTriggerDescriptorResponse { return v.SourceTrigger }).(SourceTriggerDescriptorResponsePtrOutput)
}

// The time the run started.
func (o RunResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The current status of the run.
func (o RunResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o RunResponseOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v RunResponse) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The task against which run was scheduled.
func (o RunResponseOutput) Task() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunResponse) *string { return v.Task }).(pulumi.StringPtrOutput)
}

// The timer trigger that caused the run.
func (o RunResponseOutput) TimerTrigger() TimerTriggerDescriptorResponsePtrOutput {
	return o.ApplyT(func(v RunResponse) *TimerTriggerDescriptorResponse { return v.TimerTrigger }).(TimerTriggerDescriptorResponsePtrOutput)
}

// The type of the resource.
func (o RunResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RunResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The update trigger token passed for the Run.
func (o RunResponseOutput) UpdateTriggerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunResponse) *string { return v.UpdateTriggerToken }).(pulumi.StringPtrOutput)
}

type RunResponsePtrOutput struct{ *pulumi.OutputState }

func (RunResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RunResponse)(nil)).Elem()
}

func (o RunResponsePtrOutput) ToRunResponsePtrOutput() RunResponsePtrOutput {
	return o
}

func (o RunResponsePtrOutput) ToRunResponsePtrOutputWithContext(ctx context.Context) RunResponsePtrOutput {
	return o
}

func (o RunResponsePtrOutput) Elem() RunResponseOutput {
	return o.ApplyT(func(v *RunResponse) RunResponse { return *v }).(RunResponseOutput)
}

// The machine configuration of the run agent.
func (o RunResponsePtrOutput) AgentConfiguration() AgentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *RunResponse) *AgentPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.AgentConfiguration
	}).(AgentPropertiesResponsePtrOutput)
}

// The dedicated agent pool for the run.
func (o RunResponsePtrOutput) AgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunResponse) *string {
		if v == nil {
			return nil
		}
		return v.AgentPoolName
	}).(pulumi.StringPtrOutput)
}

// The time the run was scheduled.
func (o RunResponsePtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// The list of custom registries that were logged in during this run.
func (o RunResponsePtrOutput) CustomRegistries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RunResponse) []string {
		if v == nil {
			return nil
		}
		return v.CustomRegistries
	}).(pulumi.StringArrayOutput)
}

// The time the run finished.
func (o RunResponsePtrOutput) FinishTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunResponse) *string {
		if v == nil {
			return nil
		}
		return v.FinishTime
	}).(pulumi.StringPtrOutput)
}

// The resource ID.
func (o RunResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The image update trigger that caused the run. This is applicable if the task has base image trigger configured.
func (o RunResponsePtrOutput) ImageUpdateTrigger() ImageUpdateTriggerResponsePtrOutput {
	return o.ApplyT(func(v *RunResponse) *ImageUpdateTriggerResponse {
		if v == nil {
			return nil
		}
		return v.ImageUpdateTrigger
	}).(ImageUpdateTriggerResponsePtrOutput)
}

// The value that indicates whether archiving is enabled or not.
func (o RunResponsePtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RunResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// The last updated time for the run.
func (o RunResponsePtrOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastUpdatedTime
	}).(pulumi.StringPtrOutput)
}

// The image description for the log artifact.
func (o RunResponsePtrOutput) LogArtifact() ImageDescriptorResponsePtrOutput {
	return o.ApplyT(func(v *RunResponse) *ImageDescriptorResponse {
		if v == nil {
			return nil
		}
		return &v.LogArtifact
	}).(ImageDescriptorResponsePtrOutput)
}

// The name of the resource.
func (o RunResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.
func (o RunResponsePtrOutput) OutputImages() ImageDescriptorResponseArrayOutput {
	return o.ApplyT(func(v *RunResponse) []ImageDescriptorResponse {
		if v == nil {
			return nil
		}
		return v.OutputImages
	}).(ImageDescriptorResponseArrayOutput)
}

// The platform properties against which the run will happen.
func (o RunResponsePtrOutput) Platform() PlatformPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *RunResponse) *PlatformPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Platform
	}).(PlatformPropertiesResponsePtrOutput)
}

// The provisioning state of a run.
func (o RunResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The error message received from backend systems after the run is scheduled.
func (o RunResponsePtrOutput) RunErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RunErrorMessage
	}).(pulumi.StringPtrOutput)
}

// The unique identifier for the run.
func (o RunResponsePtrOutput) RunId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunResponse) *string {
		if v == nil {
			return nil
		}
		return v.RunId
	}).(pulumi.StringPtrOutput)
}

// The type of run.
func (o RunResponsePtrOutput) RunType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunResponse) *string {
		if v == nil {
			return nil
		}
		return v.RunType
	}).(pulumi.StringPtrOutput)
}

// The scope of the credentials that were used to login to the source registry during this run.
func (o RunResponsePtrOutput) SourceRegistryAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceRegistryAuth
	}).(pulumi.StringPtrOutput)
}

// The source trigger that caused the run.
func (o RunResponsePtrOutput) SourceTrigger() SourceTriggerDescriptorResponsePtrOutput {
	return o.ApplyT(func(v *RunResponse) *SourceTriggerDescriptorResponse {
		if v == nil {
			return nil
		}
		return v.SourceTrigger
	}).(SourceTriggerDescriptorResponsePtrOutput)
}

// The time the run started.
func (o RunResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunResponse) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The current status of the run.
func (o RunResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o RunResponsePtrOutput) SystemData() SystemDataResponsePtrOutput {
	return o.ApplyT(func(v *RunResponse) *SystemDataResponse {
		if v == nil {
			return nil
		}
		return &v.SystemData
	}).(SystemDataResponsePtrOutput)
}

// The task against which run was scheduled.
func (o RunResponsePtrOutput) Task() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunResponse) *string {
		if v == nil {
			return nil
		}
		return v.Task
	}).(pulumi.StringPtrOutput)
}

// The timer trigger that caused the run.
func (o RunResponsePtrOutput) TimerTrigger() TimerTriggerDescriptorResponsePtrOutput {
	return o.ApplyT(func(v *RunResponse) *TimerTriggerDescriptorResponse {
		if v == nil {
			return nil
		}
		return v.TimerTrigger
	}).(TimerTriggerDescriptorResponsePtrOutput)
}

// The type of the resource.
func (o RunResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The update trigger token passed for the Run.
func (o RunResponsePtrOutput) UpdateTriggerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunResponse) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTriggerToken
	}).(pulumi.StringPtrOutput)
}

// Describes the properties of a secret object value.
type SecretObject struct {
	// The type of the secret object which determines how the value of the secret object has to be
	// interpreted.
	Type *string `pulumi:"type"`
	// The value of the secret. The format of this value will be determined
	// based on the type of the secret object. If the type is Opaque, the value will be
	// used as is without any modification.
	Value *string `pulumi:"value"`
}

// SecretObjectInput is an input type that accepts SecretObjectArgs and SecretObjectOutput values.
// You can construct a concrete instance of `SecretObjectInput` via:
//
//          SecretObjectArgs{...}
type SecretObjectInput interface {
	pulumi.Input

	ToSecretObjectOutput() SecretObjectOutput
	ToSecretObjectOutputWithContext(context.Context) SecretObjectOutput
}

// Describes the properties of a secret object value.
type SecretObjectArgs struct {
	// The type of the secret object which determines how the value of the secret object has to be
	// interpreted.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the secret. The format of this value will be determined
	// based on the type of the secret object. If the type is Opaque, the value will be
	// used as is without any modification.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecretObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretObject)(nil)).Elem()
}

func (i SecretObjectArgs) ToSecretObjectOutput() SecretObjectOutput {
	return i.ToSecretObjectOutputWithContext(context.Background())
}

func (i SecretObjectArgs) ToSecretObjectOutputWithContext(ctx context.Context) SecretObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretObjectOutput)
}

func (i SecretObjectArgs) ToSecretObjectPtrOutput() SecretObjectPtrOutput {
	return i.ToSecretObjectPtrOutputWithContext(context.Background())
}

func (i SecretObjectArgs) ToSecretObjectPtrOutputWithContext(ctx context.Context) SecretObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretObjectOutput).ToSecretObjectPtrOutputWithContext(ctx)
}

// SecretObjectPtrInput is an input type that accepts SecretObjectArgs, SecretObjectPtr and SecretObjectPtrOutput values.
// You can construct a concrete instance of `SecretObjectPtrInput` via:
//
//          SecretObjectArgs{...}
//
//  or:
//
//          nil
type SecretObjectPtrInput interface {
	pulumi.Input

	ToSecretObjectPtrOutput() SecretObjectPtrOutput
	ToSecretObjectPtrOutputWithContext(context.Context) SecretObjectPtrOutput
}

type secretObjectPtrType SecretObjectArgs

func SecretObjectPtr(v *SecretObjectArgs) SecretObjectPtrInput {
	return (*secretObjectPtrType)(v)
}

func (*secretObjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretObject)(nil)).Elem()
}

func (i *secretObjectPtrType) ToSecretObjectPtrOutput() SecretObjectPtrOutput {
	return i.ToSecretObjectPtrOutputWithContext(context.Background())
}

func (i *secretObjectPtrType) ToSecretObjectPtrOutputWithContext(ctx context.Context) SecretObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretObjectPtrOutput)
}

// Describes the properties of a secret object value.
type SecretObjectOutput struct{ *pulumi.OutputState }

func (SecretObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretObject)(nil)).Elem()
}

func (o SecretObjectOutput) ToSecretObjectOutput() SecretObjectOutput {
	return o
}

func (o SecretObjectOutput) ToSecretObjectOutputWithContext(ctx context.Context) SecretObjectOutput {
	return o
}

func (o SecretObjectOutput) ToSecretObjectPtrOutput() SecretObjectPtrOutput {
	return o.ToSecretObjectPtrOutputWithContext(context.Background())
}

func (o SecretObjectOutput) ToSecretObjectPtrOutputWithContext(ctx context.Context) SecretObjectPtrOutput {
	return o.ApplyT(func(v SecretObject) *SecretObject {
		return &v
	}).(SecretObjectPtrOutput)
}

// The type of the secret object which determines how the value of the secret object has to be
// interpreted.
func (o SecretObjectOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretObject) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the secret. The format of this value will be determined
// based on the type of the secret object. If the type is Opaque, the value will be
// used as is without any modification.
func (o SecretObjectOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretObject) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecretObjectPtrOutput struct{ *pulumi.OutputState }

func (SecretObjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretObject)(nil)).Elem()
}

func (o SecretObjectPtrOutput) ToSecretObjectPtrOutput() SecretObjectPtrOutput {
	return o
}

func (o SecretObjectPtrOutput) ToSecretObjectPtrOutputWithContext(ctx context.Context) SecretObjectPtrOutput {
	return o
}

func (o SecretObjectPtrOutput) Elem() SecretObjectOutput {
	return o.ApplyT(func(v *SecretObject) SecretObject { return *v }).(SecretObjectOutput)
}

// The type of the secret object which determines how the value of the secret object has to be
// interpreted.
func (o SecretObjectPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretObject) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The value of the secret. The format of this value will be determined
// based on the type of the secret object. If the type is Opaque, the value will be
// used as is without any modification.
func (o SecretObjectPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretObject) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Describes the properties of a secret object value.
type SecretObjectInvokeResponse struct {
	// The type of the secret object which determines how the value of the secret object has to be
	// interpreted.
	Type *string `pulumi:"type"`
	// The value of the secret. The format of this value will be determined
	// based on the type of the secret object. If the type is Opaque, the value will be
	// used as is without any modification.
	Value *string `pulumi:"value"`
}

// SecretObjectInvokeResponseInput is an input type that accepts SecretObjectInvokeResponseArgs and SecretObjectInvokeResponseOutput values.
// You can construct a concrete instance of `SecretObjectInvokeResponseInput` via:
//
//          SecretObjectInvokeResponseArgs{...}
type SecretObjectInvokeResponseInput interface {
	pulumi.Input

	ToSecretObjectInvokeResponseOutput() SecretObjectInvokeResponseOutput
	ToSecretObjectInvokeResponseOutputWithContext(context.Context) SecretObjectInvokeResponseOutput
}

// Describes the properties of a secret object value.
type SecretObjectInvokeResponseArgs struct {
	// The type of the secret object which determines how the value of the secret object has to be
	// interpreted.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the secret. The format of this value will be determined
	// based on the type of the secret object. If the type is Opaque, the value will be
	// used as is without any modification.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecretObjectInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretObjectInvokeResponse)(nil)).Elem()
}

func (i SecretObjectInvokeResponseArgs) ToSecretObjectInvokeResponseOutput() SecretObjectInvokeResponseOutput {
	return i.ToSecretObjectInvokeResponseOutputWithContext(context.Background())
}

func (i SecretObjectInvokeResponseArgs) ToSecretObjectInvokeResponseOutputWithContext(ctx context.Context) SecretObjectInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretObjectInvokeResponseOutput)
}

func (i SecretObjectInvokeResponseArgs) ToSecretObjectInvokeResponsePtrOutput() SecretObjectInvokeResponsePtrOutput {
	return i.ToSecretObjectInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SecretObjectInvokeResponseArgs) ToSecretObjectInvokeResponsePtrOutputWithContext(ctx context.Context) SecretObjectInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretObjectInvokeResponseOutput).ToSecretObjectInvokeResponsePtrOutputWithContext(ctx)
}

// SecretObjectInvokeResponsePtrInput is an input type that accepts SecretObjectInvokeResponseArgs, SecretObjectInvokeResponsePtr and SecretObjectInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SecretObjectInvokeResponsePtrInput` via:
//
//          SecretObjectInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SecretObjectInvokeResponsePtrInput interface {
	pulumi.Input

	ToSecretObjectInvokeResponsePtrOutput() SecretObjectInvokeResponsePtrOutput
	ToSecretObjectInvokeResponsePtrOutputWithContext(context.Context) SecretObjectInvokeResponsePtrOutput
}

type secretObjectInvokeResponsePtrType SecretObjectInvokeResponseArgs

func SecretObjectInvokeResponsePtr(v *SecretObjectInvokeResponseArgs) SecretObjectInvokeResponsePtrInput {
	return (*secretObjectInvokeResponsePtrType)(v)
}

func (*secretObjectInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretObjectInvokeResponse)(nil)).Elem()
}

func (i *secretObjectInvokeResponsePtrType) ToSecretObjectInvokeResponsePtrOutput() SecretObjectInvokeResponsePtrOutput {
	return i.ToSecretObjectInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *secretObjectInvokeResponsePtrType) ToSecretObjectInvokeResponsePtrOutputWithContext(ctx context.Context) SecretObjectInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretObjectInvokeResponsePtrOutput)
}

// Describes the properties of a secret object value.
type SecretObjectInvokeResponseOutput struct{ *pulumi.OutputState }

func (SecretObjectInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretObjectInvokeResponse)(nil)).Elem()
}

func (o SecretObjectInvokeResponseOutput) ToSecretObjectInvokeResponseOutput() SecretObjectInvokeResponseOutput {
	return o
}

func (o SecretObjectInvokeResponseOutput) ToSecretObjectInvokeResponseOutputWithContext(ctx context.Context) SecretObjectInvokeResponseOutput {
	return o
}

func (o SecretObjectInvokeResponseOutput) ToSecretObjectInvokeResponsePtrOutput() SecretObjectInvokeResponsePtrOutput {
	return o.ToSecretObjectInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SecretObjectInvokeResponseOutput) ToSecretObjectInvokeResponsePtrOutputWithContext(ctx context.Context) SecretObjectInvokeResponsePtrOutput {
	return o.ApplyT(func(v SecretObjectInvokeResponse) *SecretObjectInvokeResponse {
		return &v
	}).(SecretObjectInvokeResponsePtrOutput)
}

// The type of the secret object which determines how the value of the secret object has to be
// interpreted.
func (o SecretObjectInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretObjectInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the secret. The format of this value will be determined
// based on the type of the secret object. If the type is Opaque, the value will be
// used as is without any modification.
func (o SecretObjectInvokeResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretObjectInvokeResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecretObjectInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SecretObjectInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretObjectInvokeResponse)(nil)).Elem()
}

func (o SecretObjectInvokeResponsePtrOutput) ToSecretObjectInvokeResponsePtrOutput() SecretObjectInvokeResponsePtrOutput {
	return o
}

func (o SecretObjectInvokeResponsePtrOutput) ToSecretObjectInvokeResponsePtrOutputWithContext(ctx context.Context) SecretObjectInvokeResponsePtrOutput {
	return o
}

func (o SecretObjectInvokeResponsePtrOutput) Elem() SecretObjectInvokeResponseOutput {
	return o.ApplyT(func(v *SecretObjectInvokeResponse) SecretObjectInvokeResponse { return *v }).(SecretObjectInvokeResponseOutput)
}

// The type of the secret object which determines how the value of the secret object has to be
// interpreted.
func (o SecretObjectInvokeResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretObjectInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The value of the secret. The format of this value will be determined
// based on the type of the secret object. If the type is Opaque, the value will be
// used as is without any modification.
func (o SecretObjectInvokeResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretObjectInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// Describes the properties of a secret object value.
type SecretObjectResponse struct {
	// The type of the secret object which determines how the value of the secret object has to be
	// interpreted.
	Type *string `pulumi:"type"`
	// The value of the secret. The format of this value will be determined
	// based on the type of the secret object. If the type is Opaque, the value will be
	// used as is without any modification.
	Value *string `pulumi:"value"`
}

// SecretObjectResponseInput is an input type that accepts SecretObjectResponseArgs and SecretObjectResponseOutput values.
// You can construct a concrete instance of `SecretObjectResponseInput` via:
//
//          SecretObjectResponseArgs{...}
type SecretObjectResponseInput interface {
	pulumi.Input

	ToSecretObjectResponseOutput() SecretObjectResponseOutput
	ToSecretObjectResponseOutputWithContext(context.Context) SecretObjectResponseOutput
}

// Describes the properties of a secret object value.
type SecretObjectResponseArgs struct {
	// The type of the secret object which determines how the value of the secret object has to be
	// interpreted.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the secret. The format of this value will be determined
	// based on the type of the secret object. If the type is Opaque, the value will be
	// used as is without any modification.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecretObjectResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretObjectResponse)(nil)).Elem()
}

func (i SecretObjectResponseArgs) ToSecretObjectResponseOutput() SecretObjectResponseOutput {
	return i.ToSecretObjectResponseOutputWithContext(context.Background())
}

func (i SecretObjectResponseArgs) ToSecretObjectResponseOutputWithContext(ctx context.Context) SecretObjectResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretObjectResponseOutput)
}

func (i SecretObjectResponseArgs) ToSecretObjectResponsePtrOutput() SecretObjectResponsePtrOutput {
	return i.ToSecretObjectResponsePtrOutputWithContext(context.Background())
}

func (i SecretObjectResponseArgs) ToSecretObjectResponsePtrOutputWithContext(ctx context.Context) SecretObjectResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretObjectResponseOutput).ToSecretObjectResponsePtrOutputWithContext(ctx)
}

// SecretObjectResponsePtrInput is an input type that accepts SecretObjectResponseArgs, SecretObjectResponsePtr and SecretObjectResponsePtrOutput values.
// You can construct a concrete instance of `SecretObjectResponsePtrInput` via:
//
//          SecretObjectResponseArgs{...}
//
//  or:
//
//          nil
type SecretObjectResponsePtrInput interface {
	pulumi.Input

	ToSecretObjectResponsePtrOutput() SecretObjectResponsePtrOutput
	ToSecretObjectResponsePtrOutputWithContext(context.Context) SecretObjectResponsePtrOutput
}

type secretObjectResponsePtrType SecretObjectResponseArgs

func SecretObjectResponsePtr(v *SecretObjectResponseArgs) SecretObjectResponsePtrInput {
	return (*secretObjectResponsePtrType)(v)
}

func (*secretObjectResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretObjectResponse)(nil)).Elem()
}

func (i *secretObjectResponsePtrType) ToSecretObjectResponsePtrOutput() SecretObjectResponsePtrOutput {
	return i.ToSecretObjectResponsePtrOutputWithContext(context.Background())
}

func (i *secretObjectResponsePtrType) ToSecretObjectResponsePtrOutputWithContext(ctx context.Context) SecretObjectResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretObjectResponsePtrOutput)
}

// Describes the properties of a secret object value.
type SecretObjectResponseOutput struct{ *pulumi.OutputState }

func (SecretObjectResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretObjectResponse)(nil)).Elem()
}

func (o SecretObjectResponseOutput) ToSecretObjectResponseOutput() SecretObjectResponseOutput {
	return o
}

func (o SecretObjectResponseOutput) ToSecretObjectResponseOutputWithContext(ctx context.Context) SecretObjectResponseOutput {
	return o
}

func (o SecretObjectResponseOutput) ToSecretObjectResponsePtrOutput() SecretObjectResponsePtrOutput {
	return o.ToSecretObjectResponsePtrOutputWithContext(context.Background())
}

func (o SecretObjectResponseOutput) ToSecretObjectResponsePtrOutputWithContext(ctx context.Context) SecretObjectResponsePtrOutput {
	return o.ApplyT(func(v SecretObjectResponse) *SecretObjectResponse {
		return &v
	}).(SecretObjectResponsePtrOutput)
}

// The type of the secret object which determines how the value of the secret object has to be
// interpreted.
func (o SecretObjectResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretObjectResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the secret. The format of this value will be determined
// based on the type of the secret object. If the type is Opaque, the value will be
// used as is without any modification.
func (o SecretObjectResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretObjectResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecretObjectResponsePtrOutput struct{ *pulumi.OutputState }

func (SecretObjectResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretObjectResponse)(nil)).Elem()
}

func (o SecretObjectResponsePtrOutput) ToSecretObjectResponsePtrOutput() SecretObjectResponsePtrOutput {
	return o
}

func (o SecretObjectResponsePtrOutput) ToSecretObjectResponsePtrOutputWithContext(ctx context.Context) SecretObjectResponsePtrOutput {
	return o
}

func (o SecretObjectResponsePtrOutput) Elem() SecretObjectResponseOutput {
	return o.ApplyT(func(v *SecretObjectResponse) SecretObjectResponse { return *v }).(SecretObjectResponseOutput)
}

// The type of the secret object which determines how the value of the secret object has to be
// interpreted.
func (o SecretObjectResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretObjectResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The value of the secret. The format of this value will be determined
// based on the type of the secret object. If the type is Opaque, the value will be
// used as is without any modification.
func (o SecretObjectResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretObjectResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// The properties of a overridable value that can be passed to a task template.
type SetValue struct {
	// Flag to indicate whether the value represents a secret or not.
	IsSecret *bool `pulumi:"isSecret"`
	// The name of the overridable value.
	Name string `pulumi:"name"`
	// The overridable value.
	Value string `pulumi:"value"`
}

// SetValueInput is an input type that accepts SetValueArgs and SetValueOutput values.
// You can construct a concrete instance of `SetValueInput` via:
//
//          SetValueArgs{...}
type SetValueInput interface {
	pulumi.Input

	ToSetValueOutput() SetValueOutput
	ToSetValueOutputWithContext(context.Context) SetValueOutput
}

// The properties of a overridable value that can be passed to a task template.
type SetValueArgs struct {
	// Flag to indicate whether the value represents a secret or not.
	IsSecret pulumi.BoolPtrInput `pulumi:"isSecret"`
	// The name of the overridable value.
	Name pulumi.StringInput `pulumi:"name"`
	// The overridable value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SetValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SetValue)(nil)).Elem()
}

func (i SetValueArgs) ToSetValueOutput() SetValueOutput {
	return i.ToSetValueOutputWithContext(context.Background())
}

func (i SetValueArgs) ToSetValueOutputWithContext(ctx context.Context) SetValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetValueOutput)
}

// SetValueArrayInput is an input type that accepts SetValueArray and SetValueArrayOutput values.
// You can construct a concrete instance of `SetValueArrayInput` via:
//
//          SetValueArray{ SetValueArgs{...} }
type SetValueArrayInput interface {
	pulumi.Input

	ToSetValueArrayOutput() SetValueArrayOutput
	ToSetValueArrayOutputWithContext(context.Context) SetValueArrayOutput
}

type SetValueArray []SetValueInput

func (SetValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SetValue)(nil)).Elem()
}

func (i SetValueArray) ToSetValueArrayOutput() SetValueArrayOutput {
	return i.ToSetValueArrayOutputWithContext(context.Background())
}

func (i SetValueArray) ToSetValueArrayOutputWithContext(ctx context.Context) SetValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetValueArrayOutput)
}

// The properties of a overridable value that can be passed to a task template.
type SetValueOutput struct{ *pulumi.OutputState }

func (SetValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SetValue)(nil)).Elem()
}

func (o SetValueOutput) ToSetValueOutput() SetValueOutput {
	return o
}

func (o SetValueOutput) ToSetValueOutputWithContext(ctx context.Context) SetValueOutput {
	return o
}

// Flag to indicate whether the value represents a secret or not.
func (o SetValueOutput) IsSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SetValue) *bool { return v.IsSecret }).(pulumi.BoolPtrOutput)
}

// The name of the overridable value.
func (o SetValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SetValue) string { return v.Name }).(pulumi.StringOutput)
}

// The overridable value.
func (o SetValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SetValue) string { return v.Value }).(pulumi.StringOutput)
}

type SetValueArrayOutput struct{ *pulumi.OutputState }

func (SetValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SetValue)(nil)).Elem()
}

func (o SetValueArrayOutput) ToSetValueArrayOutput() SetValueArrayOutput {
	return o
}

func (o SetValueArrayOutput) ToSetValueArrayOutputWithContext(ctx context.Context) SetValueArrayOutput {
	return o
}

func (o SetValueArrayOutput) Index(i pulumi.IntInput) SetValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SetValue {
		return vs[0].([]SetValue)[vs[1].(int)]
	}).(SetValueOutput)
}

// The properties of a overridable value that can be passed to a task template.
type SetValueInvokeResponse struct {
	// Flag to indicate whether the value represents a secret or not.
	IsSecret *bool `pulumi:"isSecret"`
	// The name of the overridable value.
	Name string `pulumi:"name"`
	// The overridable value.
	Value string `pulumi:"value"`
}

// SetValueInvokeResponseInput is an input type that accepts SetValueInvokeResponseArgs and SetValueInvokeResponseOutput values.
// You can construct a concrete instance of `SetValueInvokeResponseInput` via:
//
//          SetValueInvokeResponseArgs{...}
type SetValueInvokeResponseInput interface {
	pulumi.Input

	ToSetValueInvokeResponseOutput() SetValueInvokeResponseOutput
	ToSetValueInvokeResponseOutputWithContext(context.Context) SetValueInvokeResponseOutput
}

// The properties of a overridable value that can be passed to a task template.
type SetValueInvokeResponseArgs struct {
	// Flag to indicate whether the value represents a secret or not.
	IsSecret pulumi.BoolPtrInput `pulumi:"isSecret"`
	// The name of the overridable value.
	Name pulumi.StringInput `pulumi:"name"`
	// The overridable value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SetValueInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SetValueInvokeResponse)(nil)).Elem()
}

func (i SetValueInvokeResponseArgs) ToSetValueInvokeResponseOutput() SetValueInvokeResponseOutput {
	return i.ToSetValueInvokeResponseOutputWithContext(context.Background())
}

func (i SetValueInvokeResponseArgs) ToSetValueInvokeResponseOutputWithContext(ctx context.Context) SetValueInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetValueInvokeResponseOutput)
}

// SetValueInvokeResponseArrayInput is an input type that accepts SetValueInvokeResponseArray and SetValueInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SetValueInvokeResponseArrayInput` via:
//
//          SetValueInvokeResponseArray{ SetValueInvokeResponseArgs{...} }
type SetValueInvokeResponseArrayInput interface {
	pulumi.Input

	ToSetValueInvokeResponseArrayOutput() SetValueInvokeResponseArrayOutput
	ToSetValueInvokeResponseArrayOutputWithContext(context.Context) SetValueInvokeResponseArrayOutput
}

type SetValueInvokeResponseArray []SetValueInvokeResponseInput

func (SetValueInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SetValueInvokeResponse)(nil)).Elem()
}

func (i SetValueInvokeResponseArray) ToSetValueInvokeResponseArrayOutput() SetValueInvokeResponseArrayOutput {
	return i.ToSetValueInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SetValueInvokeResponseArray) ToSetValueInvokeResponseArrayOutputWithContext(ctx context.Context) SetValueInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetValueInvokeResponseArrayOutput)
}

// The properties of a overridable value that can be passed to a task template.
type SetValueInvokeResponseOutput struct{ *pulumi.OutputState }

func (SetValueInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SetValueInvokeResponse)(nil)).Elem()
}

func (o SetValueInvokeResponseOutput) ToSetValueInvokeResponseOutput() SetValueInvokeResponseOutput {
	return o
}

func (o SetValueInvokeResponseOutput) ToSetValueInvokeResponseOutputWithContext(ctx context.Context) SetValueInvokeResponseOutput {
	return o
}

// Flag to indicate whether the value represents a secret or not.
func (o SetValueInvokeResponseOutput) IsSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SetValueInvokeResponse) *bool { return v.IsSecret }).(pulumi.BoolPtrOutput)
}

// The name of the overridable value.
func (o SetValueInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SetValueInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The overridable value.
func (o SetValueInvokeResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SetValueInvokeResponse) string { return v.Value }).(pulumi.StringOutput)
}

type SetValueInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SetValueInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SetValueInvokeResponse)(nil)).Elem()
}

func (o SetValueInvokeResponseArrayOutput) ToSetValueInvokeResponseArrayOutput() SetValueInvokeResponseArrayOutput {
	return o
}

func (o SetValueInvokeResponseArrayOutput) ToSetValueInvokeResponseArrayOutputWithContext(ctx context.Context) SetValueInvokeResponseArrayOutput {
	return o
}

func (o SetValueInvokeResponseArrayOutput) Index(i pulumi.IntInput) SetValueInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SetValueInvokeResponse {
		return vs[0].([]SetValueInvokeResponse)[vs[1].(int)]
	}).(SetValueInvokeResponseOutput)
}

// The properties of a overridable value that can be passed to a task template.
type SetValueResponse struct {
	// Flag to indicate whether the value represents a secret or not.
	IsSecret *bool `pulumi:"isSecret"`
	// The name of the overridable value.
	Name string `pulumi:"name"`
	// The overridable value.
	Value string `pulumi:"value"`
}

// SetValueResponseInput is an input type that accepts SetValueResponseArgs and SetValueResponseOutput values.
// You can construct a concrete instance of `SetValueResponseInput` via:
//
//          SetValueResponseArgs{...}
type SetValueResponseInput interface {
	pulumi.Input

	ToSetValueResponseOutput() SetValueResponseOutput
	ToSetValueResponseOutputWithContext(context.Context) SetValueResponseOutput
}

// The properties of a overridable value that can be passed to a task template.
type SetValueResponseArgs struct {
	// Flag to indicate whether the value represents a secret or not.
	IsSecret pulumi.BoolPtrInput `pulumi:"isSecret"`
	// The name of the overridable value.
	Name pulumi.StringInput `pulumi:"name"`
	// The overridable value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SetValueResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SetValueResponse)(nil)).Elem()
}

func (i SetValueResponseArgs) ToSetValueResponseOutput() SetValueResponseOutput {
	return i.ToSetValueResponseOutputWithContext(context.Background())
}

func (i SetValueResponseArgs) ToSetValueResponseOutputWithContext(ctx context.Context) SetValueResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetValueResponseOutput)
}

// SetValueResponseArrayInput is an input type that accepts SetValueResponseArray and SetValueResponseArrayOutput values.
// You can construct a concrete instance of `SetValueResponseArrayInput` via:
//
//          SetValueResponseArray{ SetValueResponseArgs{...} }
type SetValueResponseArrayInput interface {
	pulumi.Input

	ToSetValueResponseArrayOutput() SetValueResponseArrayOutput
	ToSetValueResponseArrayOutputWithContext(context.Context) SetValueResponseArrayOutput
}

type SetValueResponseArray []SetValueResponseInput

func (SetValueResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SetValueResponse)(nil)).Elem()
}

func (i SetValueResponseArray) ToSetValueResponseArrayOutput() SetValueResponseArrayOutput {
	return i.ToSetValueResponseArrayOutputWithContext(context.Background())
}

func (i SetValueResponseArray) ToSetValueResponseArrayOutputWithContext(ctx context.Context) SetValueResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetValueResponseArrayOutput)
}

// The properties of a overridable value that can be passed to a task template.
type SetValueResponseOutput struct{ *pulumi.OutputState }

func (SetValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SetValueResponse)(nil)).Elem()
}

func (o SetValueResponseOutput) ToSetValueResponseOutput() SetValueResponseOutput {
	return o
}

func (o SetValueResponseOutput) ToSetValueResponseOutputWithContext(ctx context.Context) SetValueResponseOutput {
	return o
}

// Flag to indicate whether the value represents a secret or not.
func (o SetValueResponseOutput) IsSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SetValueResponse) *bool { return v.IsSecret }).(pulumi.BoolPtrOutput)
}

// The name of the overridable value.
func (o SetValueResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SetValueResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The overridable value.
func (o SetValueResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SetValueResponse) string { return v.Value }).(pulumi.StringOutput)
}

type SetValueResponseArrayOutput struct{ *pulumi.OutputState }

func (SetValueResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SetValueResponse)(nil)).Elem()
}

func (o SetValueResponseArrayOutput) ToSetValueResponseArrayOutput() SetValueResponseArrayOutput {
	return o
}

func (o SetValueResponseArrayOutput) ToSetValueResponseArrayOutputWithContext(ctx context.Context) SetValueResponseArrayOutput {
	return o
}

func (o SetValueResponseArrayOutput) Index(i pulumi.IntInput) SetValueResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SetValueResponse {
		return vs[0].([]SetValueResponse)[vs[1].(int)]
	}).(SetValueResponseOutput)
}

// The properties of the source code repository.
type SourceProperties struct {
	// The branch name of the source code.
	Branch *string `pulumi:"branch"`
	// The full URL to the source code repository
	RepositoryUrl string `pulumi:"repositoryUrl"`
	// The authorization properties for accessing the source code repository and to set up
	// webhooks for notifications.
	SourceControlAuthProperties *AuthInfo `pulumi:"sourceControlAuthProperties"`
	// The type of source control service.
	SourceControlType string `pulumi:"sourceControlType"`
}

// SourcePropertiesInput is an input type that accepts SourcePropertiesArgs and SourcePropertiesOutput values.
// You can construct a concrete instance of `SourcePropertiesInput` via:
//
//          SourcePropertiesArgs{...}
type SourcePropertiesInput interface {
	pulumi.Input

	ToSourcePropertiesOutput() SourcePropertiesOutput
	ToSourcePropertiesOutputWithContext(context.Context) SourcePropertiesOutput
}

// The properties of the source code repository.
type SourcePropertiesArgs struct {
	// The branch name of the source code.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The full URL to the source code repository
	RepositoryUrl pulumi.StringInput `pulumi:"repositoryUrl"`
	// The authorization properties for accessing the source code repository and to set up
	// webhooks for notifications.
	SourceControlAuthProperties AuthInfoPtrInput `pulumi:"sourceControlAuthProperties"`
	// The type of source control service.
	SourceControlType pulumi.StringInput `pulumi:"sourceControlType"`
}

func (SourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceProperties)(nil)).Elem()
}

func (i SourcePropertiesArgs) ToSourcePropertiesOutput() SourcePropertiesOutput {
	return i.ToSourcePropertiesOutputWithContext(context.Background())
}

func (i SourcePropertiesArgs) ToSourcePropertiesOutputWithContext(ctx context.Context) SourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePropertiesOutput)
}

// The properties of the source code repository.
type SourcePropertiesOutput struct{ *pulumi.OutputState }

func (SourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceProperties)(nil)).Elem()
}

func (o SourcePropertiesOutput) ToSourcePropertiesOutput() SourcePropertiesOutput {
	return o
}

func (o SourcePropertiesOutput) ToSourcePropertiesOutputWithContext(ctx context.Context) SourcePropertiesOutput {
	return o
}

// The branch name of the source code.
func (o SourcePropertiesOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceProperties) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The full URL to the source code repository
func (o SourcePropertiesOutput) RepositoryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v SourceProperties) string { return v.RepositoryUrl }).(pulumi.StringOutput)
}

// The authorization properties for accessing the source code repository and to set up
// webhooks for notifications.
func (o SourcePropertiesOutput) SourceControlAuthProperties() AuthInfoPtrOutput {
	return o.ApplyT(func(v SourceProperties) *AuthInfo { return v.SourceControlAuthProperties }).(AuthInfoPtrOutput)
}

// The type of source control service.
func (o SourcePropertiesOutput) SourceControlType() pulumi.StringOutput {
	return o.ApplyT(func(v SourceProperties) string { return v.SourceControlType }).(pulumi.StringOutput)
}

// The properties of the source code repository.
type SourcePropertiesInvokeResponse struct {
	// The branch name of the source code.
	Branch *string `pulumi:"branch"`
	// The full URL to the source code repository
	RepositoryUrl string `pulumi:"repositoryUrl"`
	// The authorization properties for accessing the source code repository and to set up
	// webhooks for notifications.
	SourceControlAuthProperties *AuthInfoInvokeResponse `pulumi:"sourceControlAuthProperties"`
	// The type of source control service.
	SourceControlType string `pulumi:"sourceControlType"`
}

// SourcePropertiesInvokeResponseInput is an input type that accepts SourcePropertiesInvokeResponseArgs and SourcePropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `SourcePropertiesInvokeResponseInput` via:
//
//          SourcePropertiesInvokeResponseArgs{...}
type SourcePropertiesInvokeResponseInput interface {
	pulumi.Input

	ToSourcePropertiesInvokeResponseOutput() SourcePropertiesInvokeResponseOutput
	ToSourcePropertiesInvokeResponseOutputWithContext(context.Context) SourcePropertiesInvokeResponseOutput
}

// The properties of the source code repository.
type SourcePropertiesInvokeResponseArgs struct {
	// The branch name of the source code.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The full URL to the source code repository
	RepositoryUrl pulumi.StringInput `pulumi:"repositoryUrl"`
	// The authorization properties for accessing the source code repository and to set up
	// webhooks for notifications.
	SourceControlAuthProperties AuthInfoInvokeResponsePtrInput `pulumi:"sourceControlAuthProperties"`
	// The type of source control service.
	SourceControlType pulumi.StringInput `pulumi:"sourceControlType"`
}

func (SourcePropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourcePropertiesInvokeResponse)(nil)).Elem()
}

func (i SourcePropertiesInvokeResponseArgs) ToSourcePropertiesInvokeResponseOutput() SourcePropertiesInvokeResponseOutput {
	return i.ToSourcePropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i SourcePropertiesInvokeResponseArgs) ToSourcePropertiesInvokeResponseOutputWithContext(ctx context.Context) SourcePropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePropertiesInvokeResponseOutput)
}

// The properties of the source code repository.
type SourcePropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (SourcePropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourcePropertiesInvokeResponse)(nil)).Elem()
}

func (o SourcePropertiesInvokeResponseOutput) ToSourcePropertiesInvokeResponseOutput() SourcePropertiesInvokeResponseOutput {
	return o
}

func (o SourcePropertiesInvokeResponseOutput) ToSourcePropertiesInvokeResponseOutputWithContext(ctx context.Context) SourcePropertiesInvokeResponseOutput {
	return o
}

// The branch name of the source code.
func (o SourcePropertiesInvokeResponseOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourcePropertiesInvokeResponse) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The full URL to the source code repository
func (o SourcePropertiesInvokeResponseOutput) RepositoryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v SourcePropertiesInvokeResponse) string { return v.RepositoryUrl }).(pulumi.StringOutput)
}

// The authorization properties for accessing the source code repository and to set up
// webhooks for notifications.
func (o SourcePropertiesInvokeResponseOutput) SourceControlAuthProperties() AuthInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v SourcePropertiesInvokeResponse) *AuthInfoInvokeResponse { return v.SourceControlAuthProperties }).(AuthInfoInvokeResponsePtrOutput)
}

// The type of source control service.
func (o SourcePropertiesInvokeResponseOutput) SourceControlType() pulumi.StringOutput {
	return o.ApplyT(func(v SourcePropertiesInvokeResponse) string { return v.SourceControlType }).(pulumi.StringOutput)
}

// The properties of the source code repository.
type SourcePropertiesResponse struct {
	// The branch name of the source code.
	Branch *string `pulumi:"branch"`
	// The full URL to the source code repository
	RepositoryUrl string `pulumi:"repositoryUrl"`
	// The authorization properties for accessing the source code repository and to set up
	// webhooks for notifications.
	SourceControlAuthProperties *AuthInfoResponse `pulumi:"sourceControlAuthProperties"`
	// The type of source control service.
	SourceControlType string `pulumi:"sourceControlType"`
}

// SourcePropertiesResponseInput is an input type that accepts SourcePropertiesResponseArgs and SourcePropertiesResponseOutput values.
// You can construct a concrete instance of `SourcePropertiesResponseInput` via:
//
//          SourcePropertiesResponseArgs{...}
type SourcePropertiesResponseInput interface {
	pulumi.Input

	ToSourcePropertiesResponseOutput() SourcePropertiesResponseOutput
	ToSourcePropertiesResponseOutputWithContext(context.Context) SourcePropertiesResponseOutput
}

// The properties of the source code repository.
type SourcePropertiesResponseArgs struct {
	// The branch name of the source code.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The full URL to the source code repository
	RepositoryUrl pulumi.StringInput `pulumi:"repositoryUrl"`
	// The authorization properties for accessing the source code repository and to set up
	// webhooks for notifications.
	SourceControlAuthProperties AuthInfoResponsePtrInput `pulumi:"sourceControlAuthProperties"`
	// The type of source control service.
	SourceControlType pulumi.StringInput `pulumi:"sourceControlType"`
}

func (SourcePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourcePropertiesResponse)(nil)).Elem()
}

func (i SourcePropertiesResponseArgs) ToSourcePropertiesResponseOutput() SourcePropertiesResponseOutput {
	return i.ToSourcePropertiesResponseOutputWithContext(context.Background())
}

func (i SourcePropertiesResponseArgs) ToSourcePropertiesResponseOutputWithContext(ctx context.Context) SourcePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePropertiesResponseOutput)
}

// The properties of the source code repository.
type SourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourcePropertiesResponse)(nil)).Elem()
}

func (o SourcePropertiesResponseOutput) ToSourcePropertiesResponseOutput() SourcePropertiesResponseOutput {
	return o
}

func (o SourcePropertiesResponseOutput) ToSourcePropertiesResponseOutputWithContext(ctx context.Context) SourcePropertiesResponseOutput {
	return o
}

// The branch name of the source code.
func (o SourcePropertiesResponseOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourcePropertiesResponse) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The full URL to the source code repository
func (o SourcePropertiesResponseOutput) RepositoryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v SourcePropertiesResponse) string { return v.RepositoryUrl }).(pulumi.StringOutput)
}

// The authorization properties for accessing the source code repository and to set up
// webhooks for notifications.
func (o SourcePropertiesResponseOutput) SourceControlAuthProperties() AuthInfoResponsePtrOutput {
	return o.ApplyT(func(v SourcePropertiesResponse) *AuthInfoResponse { return v.SourceControlAuthProperties }).(AuthInfoResponsePtrOutput)
}

// The type of source control service.
func (o SourcePropertiesResponseOutput) SourceControlType() pulumi.StringOutput {
	return o.ApplyT(func(v SourcePropertiesResponse) string { return v.SourceControlType }).(pulumi.StringOutput)
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentials struct {
	// The authentication mode which determines the source registry login scope. The credentials for the source registry
	// will be generated using the given scope. These credentials will be used to login to
	// the source registry during the run.
	LoginMode *string `pulumi:"loginMode"`
}

// SourceRegistryCredentialsInput is an input type that accepts SourceRegistryCredentialsArgs and SourceRegistryCredentialsOutput values.
// You can construct a concrete instance of `SourceRegistryCredentialsInput` via:
//
//          SourceRegistryCredentialsArgs{...}
type SourceRegistryCredentialsInput interface {
	pulumi.Input

	ToSourceRegistryCredentialsOutput() SourceRegistryCredentialsOutput
	ToSourceRegistryCredentialsOutputWithContext(context.Context) SourceRegistryCredentialsOutput
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsArgs struct {
	// The authentication mode which determines the source registry login scope. The credentials for the source registry
	// will be generated using the given scope. These credentials will be used to login to
	// the source registry during the run.
	LoginMode pulumi.StringPtrInput `pulumi:"loginMode"`
}

func (SourceRegistryCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceRegistryCredentials)(nil)).Elem()
}

func (i SourceRegistryCredentialsArgs) ToSourceRegistryCredentialsOutput() SourceRegistryCredentialsOutput {
	return i.ToSourceRegistryCredentialsOutputWithContext(context.Background())
}

func (i SourceRegistryCredentialsArgs) ToSourceRegistryCredentialsOutputWithContext(ctx context.Context) SourceRegistryCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsOutput)
}

func (i SourceRegistryCredentialsArgs) ToSourceRegistryCredentialsPtrOutput() SourceRegistryCredentialsPtrOutput {
	return i.ToSourceRegistryCredentialsPtrOutputWithContext(context.Background())
}

func (i SourceRegistryCredentialsArgs) ToSourceRegistryCredentialsPtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsOutput).ToSourceRegistryCredentialsPtrOutputWithContext(ctx)
}

// SourceRegistryCredentialsPtrInput is an input type that accepts SourceRegistryCredentialsArgs, SourceRegistryCredentialsPtr and SourceRegistryCredentialsPtrOutput values.
// You can construct a concrete instance of `SourceRegistryCredentialsPtrInput` via:
//
//          SourceRegistryCredentialsArgs{...}
//
//  or:
//
//          nil
type SourceRegistryCredentialsPtrInput interface {
	pulumi.Input

	ToSourceRegistryCredentialsPtrOutput() SourceRegistryCredentialsPtrOutput
	ToSourceRegistryCredentialsPtrOutputWithContext(context.Context) SourceRegistryCredentialsPtrOutput
}

type sourceRegistryCredentialsPtrType SourceRegistryCredentialsArgs

func SourceRegistryCredentialsPtr(v *SourceRegistryCredentialsArgs) SourceRegistryCredentialsPtrInput {
	return (*sourceRegistryCredentialsPtrType)(v)
}

func (*sourceRegistryCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceRegistryCredentials)(nil)).Elem()
}

func (i *sourceRegistryCredentialsPtrType) ToSourceRegistryCredentialsPtrOutput() SourceRegistryCredentialsPtrOutput {
	return i.ToSourceRegistryCredentialsPtrOutputWithContext(context.Background())
}

func (i *sourceRegistryCredentialsPtrType) ToSourceRegistryCredentialsPtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsPtrOutput)
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsOutput struct{ *pulumi.OutputState }

func (SourceRegistryCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceRegistryCredentials)(nil)).Elem()
}

func (o SourceRegistryCredentialsOutput) ToSourceRegistryCredentialsOutput() SourceRegistryCredentialsOutput {
	return o
}

func (o SourceRegistryCredentialsOutput) ToSourceRegistryCredentialsOutputWithContext(ctx context.Context) SourceRegistryCredentialsOutput {
	return o
}

func (o SourceRegistryCredentialsOutput) ToSourceRegistryCredentialsPtrOutput() SourceRegistryCredentialsPtrOutput {
	return o.ToSourceRegistryCredentialsPtrOutputWithContext(context.Background())
}

func (o SourceRegistryCredentialsOutput) ToSourceRegistryCredentialsPtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsPtrOutput {
	return o.ApplyT(func(v SourceRegistryCredentials) *SourceRegistryCredentials {
		return &v
	}).(SourceRegistryCredentialsPtrOutput)
}

// The authentication mode which determines the source registry login scope. The credentials for the source registry
// will be generated using the given scope. These credentials will be used to login to
// the source registry during the run.
func (o SourceRegistryCredentialsOutput) LoginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceRegistryCredentials) *string { return v.LoginMode }).(pulumi.StringPtrOutput)
}

type SourceRegistryCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SourceRegistryCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceRegistryCredentials)(nil)).Elem()
}

func (o SourceRegistryCredentialsPtrOutput) ToSourceRegistryCredentialsPtrOutput() SourceRegistryCredentialsPtrOutput {
	return o
}

func (o SourceRegistryCredentialsPtrOutput) ToSourceRegistryCredentialsPtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsPtrOutput {
	return o
}

func (o SourceRegistryCredentialsPtrOutput) Elem() SourceRegistryCredentialsOutput {
	return o.ApplyT(func(v *SourceRegistryCredentials) SourceRegistryCredentials { return *v }).(SourceRegistryCredentialsOutput)
}

// The authentication mode which determines the source registry login scope. The credentials for the source registry
// will be generated using the given scope. These credentials will be used to login to
// the source registry during the run.
func (o SourceRegistryCredentialsPtrOutput) LoginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceRegistryCredentials) *string {
		if v == nil {
			return nil
		}
		return v.LoginMode
	}).(pulumi.StringPtrOutput)
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsInvokeResponse struct {
	// The authentication mode which determines the source registry login scope. The credentials for the source registry
	// will be generated using the given scope. These credentials will be used to login to
	// the source registry during the run.
	LoginMode *string `pulumi:"loginMode"`
}

// SourceRegistryCredentialsInvokeResponseInput is an input type that accepts SourceRegistryCredentialsInvokeResponseArgs and SourceRegistryCredentialsInvokeResponseOutput values.
// You can construct a concrete instance of `SourceRegistryCredentialsInvokeResponseInput` via:
//
//          SourceRegistryCredentialsInvokeResponseArgs{...}
type SourceRegistryCredentialsInvokeResponseInput interface {
	pulumi.Input

	ToSourceRegistryCredentialsInvokeResponseOutput() SourceRegistryCredentialsInvokeResponseOutput
	ToSourceRegistryCredentialsInvokeResponseOutputWithContext(context.Context) SourceRegistryCredentialsInvokeResponseOutput
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsInvokeResponseArgs struct {
	// The authentication mode which determines the source registry login scope. The credentials for the source registry
	// will be generated using the given scope. These credentials will be used to login to
	// the source registry during the run.
	LoginMode pulumi.StringPtrInput `pulumi:"loginMode"`
}

func (SourceRegistryCredentialsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceRegistryCredentialsInvokeResponse)(nil)).Elem()
}

func (i SourceRegistryCredentialsInvokeResponseArgs) ToSourceRegistryCredentialsInvokeResponseOutput() SourceRegistryCredentialsInvokeResponseOutput {
	return i.ToSourceRegistryCredentialsInvokeResponseOutputWithContext(context.Background())
}

func (i SourceRegistryCredentialsInvokeResponseArgs) ToSourceRegistryCredentialsInvokeResponseOutputWithContext(ctx context.Context) SourceRegistryCredentialsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsInvokeResponseOutput)
}

func (i SourceRegistryCredentialsInvokeResponseArgs) ToSourceRegistryCredentialsInvokeResponsePtrOutput() SourceRegistryCredentialsInvokeResponsePtrOutput {
	return i.ToSourceRegistryCredentialsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SourceRegistryCredentialsInvokeResponseArgs) ToSourceRegistryCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsInvokeResponseOutput).ToSourceRegistryCredentialsInvokeResponsePtrOutputWithContext(ctx)
}

// SourceRegistryCredentialsInvokeResponsePtrInput is an input type that accepts SourceRegistryCredentialsInvokeResponseArgs, SourceRegistryCredentialsInvokeResponsePtr and SourceRegistryCredentialsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SourceRegistryCredentialsInvokeResponsePtrInput` via:
//
//          SourceRegistryCredentialsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SourceRegistryCredentialsInvokeResponsePtrInput interface {
	pulumi.Input

	ToSourceRegistryCredentialsInvokeResponsePtrOutput() SourceRegistryCredentialsInvokeResponsePtrOutput
	ToSourceRegistryCredentialsInvokeResponsePtrOutputWithContext(context.Context) SourceRegistryCredentialsInvokeResponsePtrOutput
}

type sourceRegistryCredentialsInvokeResponsePtrType SourceRegistryCredentialsInvokeResponseArgs

func SourceRegistryCredentialsInvokeResponsePtr(v *SourceRegistryCredentialsInvokeResponseArgs) SourceRegistryCredentialsInvokeResponsePtrInput {
	return (*sourceRegistryCredentialsInvokeResponsePtrType)(v)
}

func (*sourceRegistryCredentialsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceRegistryCredentialsInvokeResponse)(nil)).Elem()
}

func (i *sourceRegistryCredentialsInvokeResponsePtrType) ToSourceRegistryCredentialsInvokeResponsePtrOutput() SourceRegistryCredentialsInvokeResponsePtrOutput {
	return i.ToSourceRegistryCredentialsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *sourceRegistryCredentialsInvokeResponsePtrType) ToSourceRegistryCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsInvokeResponsePtrOutput)
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsInvokeResponseOutput struct{ *pulumi.OutputState }

func (SourceRegistryCredentialsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceRegistryCredentialsInvokeResponse)(nil)).Elem()
}

func (o SourceRegistryCredentialsInvokeResponseOutput) ToSourceRegistryCredentialsInvokeResponseOutput() SourceRegistryCredentialsInvokeResponseOutput {
	return o
}

func (o SourceRegistryCredentialsInvokeResponseOutput) ToSourceRegistryCredentialsInvokeResponseOutputWithContext(ctx context.Context) SourceRegistryCredentialsInvokeResponseOutput {
	return o
}

func (o SourceRegistryCredentialsInvokeResponseOutput) ToSourceRegistryCredentialsInvokeResponsePtrOutput() SourceRegistryCredentialsInvokeResponsePtrOutput {
	return o.ToSourceRegistryCredentialsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SourceRegistryCredentialsInvokeResponseOutput) ToSourceRegistryCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsInvokeResponsePtrOutput {
	return o.ApplyT(func(v SourceRegistryCredentialsInvokeResponse) *SourceRegistryCredentialsInvokeResponse {
		return &v
	}).(SourceRegistryCredentialsInvokeResponsePtrOutput)
}

// The authentication mode which determines the source registry login scope. The credentials for the source registry
// will be generated using the given scope. These credentials will be used to login to
// the source registry during the run.
func (o SourceRegistryCredentialsInvokeResponseOutput) LoginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceRegistryCredentialsInvokeResponse) *string { return v.LoginMode }).(pulumi.StringPtrOutput)
}

type SourceRegistryCredentialsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SourceRegistryCredentialsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceRegistryCredentialsInvokeResponse)(nil)).Elem()
}

func (o SourceRegistryCredentialsInvokeResponsePtrOutput) ToSourceRegistryCredentialsInvokeResponsePtrOutput() SourceRegistryCredentialsInvokeResponsePtrOutput {
	return o
}

func (o SourceRegistryCredentialsInvokeResponsePtrOutput) ToSourceRegistryCredentialsInvokeResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsInvokeResponsePtrOutput {
	return o
}

func (o SourceRegistryCredentialsInvokeResponsePtrOutput) Elem() SourceRegistryCredentialsInvokeResponseOutput {
	return o.ApplyT(func(v *SourceRegistryCredentialsInvokeResponse) SourceRegistryCredentialsInvokeResponse { return *v }).(SourceRegistryCredentialsInvokeResponseOutput)
}

// The authentication mode which determines the source registry login scope. The credentials for the source registry
// will be generated using the given scope. These credentials will be used to login to
// the source registry during the run.
func (o SourceRegistryCredentialsInvokeResponsePtrOutput) LoginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceRegistryCredentialsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.LoginMode
	}).(pulumi.StringPtrOutput)
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsResponse struct {
	// The authentication mode which determines the source registry login scope. The credentials for the source registry
	// will be generated using the given scope. These credentials will be used to login to
	// the source registry during the run.
	LoginMode *string `pulumi:"loginMode"`
}

// SourceRegistryCredentialsResponseInput is an input type that accepts SourceRegistryCredentialsResponseArgs and SourceRegistryCredentialsResponseOutput values.
// You can construct a concrete instance of `SourceRegistryCredentialsResponseInput` via:
//
//          SourceRegistryCredentialsResponseArgs{...}
type SourceRegistryCredentialsResponseInput interface {
	pulumi.Input

	ToSourceRegistryCredentialsResponseOutput() SourceRegistryCredentialsResponseOutput
	ToSourceRegistryCredentialsResponseOutputWithContext(context.Context) SourceRegistryCredentialsResponseOutput
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsResponseArgs struct {
	// The authentication mode which determines the source registry login scope. The credentials for the source registry
	// will be generated using the given scope. These credentials will be used to login to
	// the source registry during the run.
	LoginMode pulumi.StringPtrInput `pulumi:"loginMode"`
}

func (SourceRegistryCredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceRegistryCredentialsResponse)(nil)).Elem()
}

func (i SourceRegistryCredentialsResponseArgs) ToSourceRegistryCredentialsResponseOutput() SourceRegistryCredentialsResponseOutput {
	return i.ToSourceRegistryCredentialsResponseOutputWithContext(context.Background())
}

func (i SourceRegistryCredentialsResponseArgs) ToSourceRegistryCredentialsResponseOutputWithContext(ctx context.Context) SourceRegistryCredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsResponseOutput)
}

func (i SourceRegistryCredentialsResponseArgs) ToSourceRegistryCredentialsResponsePtrOutput() SourceRegistryCredentialsResponsePtrOutput {
	return i.ToSourceRegistryCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i SourceRegistryCredentialsResponseArgs) ToSourceRegistryCredentialsResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsResponseOutput).ToSourceRegistryCredentialsResponsePtrOutputWithContext(ctx)
}

// SourceRegistryCredentialsResponsePtrInput is an input type that accepts SourceRegistryCredentialsResponseArgs, SourceRegistryCredentialsResponsePtr and SourceRegistryCredentialsResponsePtrOutput values.
// You can construct a concrete instance of `SourceRegistryCredentialsResponsePtrInput` via:
//
//          SourceRegistryCredentialsResponseArgs{...}
//
//  or:
//
//          nil
type SourceRegistryCredentialsResponsePtrInput interface {
	pulumi.Input

	ToSourceRegistryCredentialsResponsePtrOutput() SourceRegistryCredentialsResponsePtrOutput
	ToSourceRegistryCredentialsResponsePtrOutputWithContext(context.Context) SourceRegistryCredentialsResponsePtrOutput
}

type sourceRegistryCredentialsResponsePtrType SourceRegistryCredentialsResponseArgs

func SourceRegistryCredentialsResponsePtr(v *SourceRegistryCredentialsResponseArgs) SourceRegistryCredentialsResponsePtrInput {
	return (*sourceRegistryCredentialsResponsePtrType)(v)
}

func (*sourceRegistryCredentialsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceRegistryCredentialsResponse)(nil)).Elem()
}

func (i *sourceRegistryCredentialsResponsePtrType) ToSourceRegistryCredentialsResponsePtrOutput() SourceRegistryCredentialsResponsePtrOutput {
	return i.ToSourceRegistryCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i *sourceRegistryCredentialsResponsePtrType) ToSourceRegistryCredentialsResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsResponsePtrOutput)
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsResponseOutput struct{ *pulumi.OutputState }

func (SourceRegistryCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceRegistryCredentialsResponse)(nil)).Elem()
}

func (o SourceRegistryCredentialsResponseOutput) ToSourceRegistryCredentialsResponseOutput() SourceRegistryCredentialsResponseOutput {
	return o
}

func (o SourceRegistryCredentialsResponseOutput) ToSourceRegistryCredentialsResponseOutputWithContext(ctx context.Context) SourceRegistryCredentialsResponseOutput {
	return o
}

func (o SourceRegistryCredentialsResponseOutput) ToSourceRegistryCredentialsResponsePtrOutput() SourceRegistryCredentialsResponsePtrOutput {
	return o.ToSourceRegistryCredentialsResponsePtrOutputWithContext(context.Background())
}

func (o SourceRegistryCredentialsResponseOutput) ToSourceRegistryCredentialsResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsResponsePtrOutput {
	return o.ApplyT(func(v SourceRegistryCredentialsResponse) *SourceRegistryCredentialsResponse {
		return &v
	}).(SourceRegistryCredentialsResponsePtrOutput)
}

// The authentication mode which determines the source registry login scope. The credentials for the source registry
// will be generated using the given scope. These credentials will be used to login to
// the source registry during the run.
func (o SourceRegistryCredentialsResponseOutput) LoginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceRegistryCredentialsResponse) *string { return v.LoginMode }).(pulumi.StringPtrOutput)
}

type SourceRegistryCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (SourceRegistryCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceRegistryCredentialsResponse)(nil)).Elem()
}

func (o SourceRegistryCredentialsResponsePtrOutput) ToSourceRegistryCredentialsResponsePtrOutput() SourceRegistryCredentialsResponsePtrOutput {
	return o
}

func (o SourceRegistryCredentialsResponsePtrOutput) ToSourceRegistryCredentialsResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsResponsePtrOutput {
	return o
}

func (o SourceRegistryCredentialsResponsePtrOutput) Elem() SourceRegistryCredentialsResponseOutput {
	return o.ApplyT(func(v *SourceRegistryCredentialsResponse) SourceRegistryCredentialsResponse { return *v }).(SourceRegistryCredentialsResponseOutput)
}

// The authentication mode which determines the source registry login scope. The credentials for the source registry
// will be generated using the given scope. These credentials will be used to login to
// the source registry during the run.
func (o SourceRegistryCredentialsResponsePtrOutput) LoginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceRegistryCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LoginMode
	}).(pulumi.StringPtrOutput)
}

// The properties of a source based trigger.
type SourceTrigger struct {
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The properties that describes the source(code) for the task.
	SourceRepository SourceProperties `pulumi:"sourceRepository"`
	// The source event corresponding to the trigger.
	SourceTriggerEvents []string `pulumi:"sourceTriggerEvents"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// SourceTriggerInput is an input type that accepts SourceTriggerArgs and SourceTriggerOutput values.
// You can construct a concrete instance of `SourceTriggerInput` via:
//
//          SourceTriggerArgs{...}
type SourceTriggerInput interface {
	pulumi.Input

	ToSourceTriggerOutput() SourceTriggerOutput
	ToSourceTriggerOutputWithContext(context.Context) SourceTriggerOutput
}

// The properties of a source based trigger.
type SourceTriggerArgs struct {
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties that describes the source(code) for the task.
	SourceRepository SourcePropertiesInput `pulumi:"sourceRepository"`
	// The source event corresponding to the trigger.
	SourceTriggerEvents pulumi.StringArrayInput `pulumi:"sourceTriggerEvents"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SourceTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTrigger)(nil)).Elem()
}

func (i SourceTriggerArgs) ToSourceTriggerOutput() SourceTriggerOutput {
	return i.ToSourceTriggerOutputWithContext(context.Background())
}

func (i SourceTriggerArgs) ToSourceTriggerOutputWithContext(ctx context.Context) SourceTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerOutput)
}

// SourceTriggerArrayInput is an input type that accepts SourceTriggerArray and SourceTriggerArrayOutput values.
// You can construct a concrete instance of `SourceTriggerArrayInput` via:
//
//          SourceTriggerArray{ SourceTriggerArgs{...} }
type SourceTriggerArrayInput interface {
	pulumi.Input

	ToSourceTriggerArrayOutput() SourceTriggerArrayOutput
	ToSourceTriggerArrayOutputWithContext(context.Context) SourceTriggerArrayOutput
}

type SourceTriggerArray []SourceTriggerInput

func (SourceTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceTrigger)(nil)).Elem()
}

func (i SourceTriggerArray) ToSourceTriggerArrayOutput() SourceTriggerArrayOutput {
	return i.ToSourceTriggerArrayOutputWithContext(context.Background())
}

func (i SourceTriggerArray) ToSourceTriggerArrayOutputWithContext(ctx context.Context) SourceTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerArrayOutput)
}

// The properties of a source based trigger.
type SourceTriggerOutput struct{ *pulumi.OutputState }

func (SourceTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTrigger)(nil)).Elem()
}

func (o SourceTriggerOutput) ToSourceTriggerOutput() SourceTriggerOutput {
	return o
}

func (o SourceTriggerOutput) ToSourceTriggerOutputWithContext(ctx context.Context) SourceTriggerOutput {
	return o
}

// The name of the trigger.
func (o SourceTriggerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SourceTrigger) string { return v.Name }).(pulumi.StringOutput)
}

// The properties that describes the source(code) for the task.
func (o SourceTriggerOutput) SourceRepository() SourcePropertiesOutput {
	return o.ApplyT(func(v SourceTrigger) SourceProperties { return v.SourceRepository }).(SourcePropertiesOutput)
}

// The source event corresponding to the trigger.
func (o SourceTriggerOutput) SourceTriggerEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SourceTrigger) []string { return v.SourceTriggerEvents }).(pulumi.StringArrayOutput)
}

// The current status of trigger.
func (o SourceTriggerOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTrigger) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SourceTriggerArrayOutput struct{ *pulumi.OutputState }

func (SourceTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceTrigger)(nil)).Elem()
}

func (o SourceTriggerArrayOutput) ToSourceTriggerArrayOutput() SourceTriggerArrayOutput {
	return o
}

func (o SourceTriggerArrayOutput) ToSourceTriggerArrayOutputWithContext(ctx context.Context) SourceTriggerArrayOutput {
	return o
}

func (o SourceTriggerArrayOutput) Index(i pulumi.IntInput) SourceTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SourceTrigger {
		return vs[0].([]SourceTrigger)[vs[1].(int)]
	}).(SourceTriggerOutput)
}

// The source trigger that caused a run.
type SourceTriggerDescriptorInvokeResponse struct {
	// The branch name in the repository.
	BranchName *string `pulumi:"branchName"`
	// The unique ID that identifies a commit.
	CommitId *string `pulumi:"commitId"`
	// The event type of the trigger.
	EventType *string `pulumi:"eventType"`
	// The unique ID of the trigger.
	Id *string `pulumi:"id"`
	// The source control provider type.
	ProviderType *string `pulumi:"providerType"`
	// The unique ID that identifies pull request.
	PullRequestId *string `pulumi:"pullRequestId"`
	// The repository URL.
	RepositoryUrl *string `pulumi:"repositoryUrl"`
}

// SourceTriggerDescriptorInvokeResponseInput is an input type that accepts SourceTriggerDescriptorInvokeResponseArgs and SourceTriggerDescriptorInvokeResponseOutput values.
// You can construct a concrete instance of `SourceTriggerDescriptorInvokeResponseInput` via:
//
//          SourceTriggerDescriptorInvokeResponseArgs{...}
type SourceTriggerDescriptorInvokeResponseInput interface {
	pulumi.Input

	ToSourceTriggerDescriptorInvokeResponseOutput() SourceTriggerDescriptorInvokeResponseOutput
	ToSourceTriggerDescriptorInvokeResponseOutputWithContext(context.Context) SourceTriggerDescriptorInvokeResponseOutput
}

// The source trigger that caused a run.
type SourceTriggerDescriptorInvokeResponseArgs struct {
	// The branch name in the repository.
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	// The unique ID that identifies a commit.
	CommitId pulumi.StringPtrInput `pulumi:"commitId"`
	// The event type of the trigger.
	EventType pulumi.StringPtrInput `pulumi:"eventType"`
	// The unique ID of the trigger.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The source control provider type.
	ProviderType pulumi.StringPtrInput `pulumi:"providerType"`
	// The unique ID that identifies pull request.
	PullRequestId pulumi.StringPtrInput `pulumi:"pullRequestId"`
	// The repository URL.
	RepositoryUrl pulumi.StringPtrInput `pulumi:"repositoryUrl"`
}

func (SourceTriggerDescriptorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTriggerDescriptorInvokeResponse)(nil)).Elem()
}

func (i SourceTriggerDescriptorInvokeResponseArgs) ToSourceTriggerDescriptorInvokeResponseOutput() SourceTriggerDescriptorInvokeResponseOutput {
	return i.ToSourceTriggerDescriptorInvokeResponseOutputWithContext(context.Background())
}

func (i SourceTriggerDescriptorInvokeResponseArgs) ToSourceTriggerDescriptorInvokeResponseOutputWithContext(ctx context.Context) SourceTriggerDescriptorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerDescriptorInvokeResponseOutput)
}

func (i SourceTriggerDescriptorInvokeResponseArgs) ToSourceTriggerDescriptorInvokeResponsePtrOutput() SourceTriggerDescriptorInvokeResponsePtrOutput {
	return i.ToSourceTriggerDescriptorInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SourceTriggerDescriptorInvokeResponseArgs) ToSourceTriggerDescriptorInvokeResponsePtrOutputWithContext(ctx context.Context) SourceTriggerDescriptorInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerDescriptorInvokeResponseOutput).ToSourceTriggerDescriptorInvokeResponsePtrOutputWithContext(ctx)
}

// SourceTriggerDescriptorInvokeResponsePtrInput is an input type that accepts SourceTriggerDescriptorInvokeResponseArgs, SourceTriggerDescriptorInvokeResponsePtr and SourceTriggerDescriptorInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SourceTriggerDescriptorInvokeResponsePtrInput` via:
//
//          SourceTriggerDescriptorInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SourceTriggerDescriptorInvokeResponsePtrInput interface {
	pulumi.Input

	ToSourceTriggerDescriptorInvokeResponsePtrOutput() SourceTriggerDescriptorInvokeResponsePtrOutput
	ToSourceTriggerDescriptorInvokeResponsePtrOutputWithContext(context.Context) SourceTriggerDescriptorInvokeResponsePtrOutput
}

type sourceTriggerDescriptorInvokeResponsePtrType SourceTriggerDescriptorInvokeResponseArgs

func SourceTriggerDescriptorInvokeResponsePtr(v *SourceTriggerDescriptorInvokeResponseArgs) SourceTriggerDescriptorInvokeResponsePtrInput {
	return (*sourceTriggerDescriptorInvokeResponsePtrType)(v)
}

func (*sourceTriggerDescriptorInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceTriggerDescriptorInvokeResponse)(nil)).Elem()
}

func (i *sourceTriggerDescriptorInvokeResponsePtrType) ToSourceTriggerDescriptorInvokeResponsePtrOutput() SourceTriggerDescriptorInvokeResponsePtrOutput {
	return i.ToSourceTriggerDescriptorInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *sourceTriggerDescriptorInvokeResponsePtrType) ToSourceTriggerDescriptorInvokeResponsePtrOutputWithContext(ctx context.Context) SourceTriggerDescriptorInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerDescriptorInvokeResponsePtrOutput)
}

// The source trigger that caused a run.
type SourceTriggerDescriptorInvokeResponseOutput struct{ *pulumi.OutputState }

func (SourceTriggerDescriptorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTriggerDescriptorInvokeResponse)(nil)).Elem()
}

func (o SourceTriggerDescriptorInvokeResponseOutput) ToSourceTriggerDescriptorInvokeResponseOutput() SourceTriggerDescriptorInvokeResponseOutput {
	return o
}

func (o SourceTriggerDescriptorInvokeResponseOutput) ToSourceTriggerDescriptorInvokeResponseOutputWithContext(ctx context.Context) SourceTriggerDescriptorInvokeResponseOutput {
	return o
}

func (o SourceTriggerDescriptorInvokeResponseOutput) ToSourceTriggerDescriptorInvokeResponsePtrOutput() SourceTriggerDescriptorInvokeResponsePtrOutput {
	return o.ToSourceTriggerDescriptorInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SourceTriggerDescriptorInvokeResponseOutput) ToSourceTriggerDescriptorInvokeResponsePtrOutputWithContext(ctx context.Context) SourceTriggerDescriptorInvokeResponsePtrOutput {
	return o.ApplyT(func(v SourceTriggerDescriptorInvokeResponse) *SourceTriggerDescriptorInvokeResponse {
		return &v
	}).(SourceTriggerDescriptorInvokeResponsePtrOutput)
}

// The branch name in the repository.
func (o SourceTriggerDescriptorInvokeResponseOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerDescriptorInvokeResponse) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

// The unique ID that identifies a commit.
func (o SourceTriggerDescriptorInvokeResponseOutput) CommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerDescriptorInvokeResponse) *string { return v.CommitId }).(pulumi.StringPtrOutput)
}

// The event type of the trigger.
func (o SourceTriggerDescriptorInvokeResponseOutput) EventType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerDescriptorInvokeResponse) *string { return v.EventType }).(pulumi.StringPtrOutput)
}

// The unique ID of the trigger.
func (o SourceTriggerDescriptorInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerDescriptorInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The source control provider type.
func (o SourceTriggerDescriptorInvokeResponseOutput) ProviderType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerDescriptorInvokeResponse) *string { return v.ProviderType }).(pulumi.StringPtrOutput)
}

// The unique ID that identifies pull request.
func (o SourceTriggerDescriptorInvokeResponseOutput) PullRequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerDescriptorInvokeResponse) *string { return v.PullRequestId }).(pulumi.StringPtrOutput)
}

// The repository URL.
func (o SourceTriggerDescriptorInvokeResponseOutput) RepositoryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerDescriptorInvokeResponse) *string { return v.RepositoryUrl }).(pulumi.StringPtrOutput)
}

type SourceTriggerDescriptorInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SourceTriggerDescriptorInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceTriggerDescriptorInvokeResponse)(nil)).Elem()
}

func (o SourceTriggerDescriptorInvokeResponsePtrOutput) ToSourceTriggerDescriptorInvokeResponsePtrOutput() SourceTriggerDescriptorInvokeResponsePtrOutput {
	return o
}

func (o SourceTriggerDescriptorInvokeResponsePtrOutput) ToSourceTriggerDescriptorInvokeResponsePtrOutputWithContext(ctx context.Context) SourceTriggerDescriptorInvokeResponsePtrOutput {
	return o
}

func (o SourceTriggerDescriptorInvokeResponsePtrOutput) Elem() SourceTriggerDescriptorInvokeResponseOutput {
	return o.ApplyT(func(v *SourceTriggerDescriptorInvokeResponse) SourceTriggerDescriptorInvokeResponse { return *v }).(SourceTriggerDescriptorInvokeResponseOutput)
}

// The branch name in the repository.
func (o SourceTriggerDescriptorInvokeResponsePtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceTriggerDescriptorInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.BranchName
	}).(pulumi.StringPtrOutput)
}

// The unique ID that identifies a commit.
func (o SourceTriggerDescriptorInvokeResponsePtrOutput) CommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceTriggerDescriptorInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.CommitId
	}).(pulumi.StringPtrOutput)
}

// The event type of the trigger.
func (o SourceTriggerDescriptorInvokeResponsePtrOutput) EventType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceTriggerDescriptorInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.EventType
	}).(pulumi.StringPtrOutput)
}

// The unique ID of the trigger.
func (o SourceTriggerDescriptorInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceTriggerDescriptorInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The source control provider type.
func (o SourceTriggerDescriptorInvokeResponsePtrOutput) ProviderType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceTriggerDescriptorInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProviderType
	}).(pulumi.StringPtrOutput)
}

// The unique ID that identifies pull request.
func (o SourceTriggerDescriptorInvokeResponsePtrOutput) PullRequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceTriggerDescriptorInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.PullRequestId
	}).(pulumi.StringPtrOutput)
}

// The repository URL.
func (o SourceTriggerDescriptorInvokeResponsePtrOutput) RepositoryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceTriggerDescriptorInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.RepositoryUrl
	}).(pulumi.StringPtrOutput)
}

// The source trigger that caused a run.
type SourceTriggerDescriptorResponse struct {
	// The branch name in the repository.
	BranchName *string `pulumi:"branchName"`
	// The unique ID that identifies a commit.
	CommitId *string `pulumi:"commitId"`
	// The event type of the trigger.
	EventType *string `pulumi:"eventType"`
	// The unique ID of the trigger.
	Id *string `pulumi:"id"`
	// The source control provider type.
	ProviderType *string `pulumi:"providerType"`
	// The unique ID that identifies pull request.
	PullRequestId *string `pulumi:"pullRequestId"`
	// The repository URL.
	RepositoryUrl *string `pulumi:"repositoryUrl"`
}

// SourceTriggerDescriptorResponseInput is an input type that accepts SourceTriggerDescriptorResponseArgs and SourceTriggerDescriptorResponseOutput values.
// You can construct a concrete instance of `SourceTriggerDescriptorResponseInput` via:
//
//          SourceTriggerDescriptorResponseArgs{...}
type SourceTriggerDescriptorResponseInput interface {
	pulumi.Input

	ToSourceTriggerDescriptorResponseOutput() SourceTriggerDescriptorResponseOutput
	ToSourceTriggerDescriptorResponseOutputWithContext(context.Context) SourceTriggerDescriptorResponseOutput
}

// The source trigger that caused a run.
type SourceTriggerDescriptorResponseArgs struct {
	// The branch name in the repository.
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	// The unique ID that identifies a commit.
	CommitId pulumi.StringPtrInput `pulumi:"commitId"`
	// The event type of the trigger.
	EventType pulumi.StringPtrInput `pulumi:"eventType"`
	// The unique ID of the trigger.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The source control provider type.
	ProviderType pulumi.StringPtrInput `pulumi:"providerType"`
	// The unique ID that identifies pull request.
	PullRequestId pulumi.StringPtrInput `pulumi:"pullRequestId"`
	// The repository URL.
	RepositoryUrl pulumi.StringPtrInput `pulumi:"repositoryUrl"`
}

func (SourceTriggerDescriptorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTriggerDescriptorResponse)(nil)).Elem()
}

func (i SourceTriggerDescriptorResponseArgs) ToSourceTriggerDescriptorResponseOutput() SourceTriggerDescriptorResponseOutput {
	return i.ToSourceTriggerDescriptorResponseOutputWithContext(context.Background())
}

func (i SourceTriggerDescriptorResponseArgs) ToSourceTriggerDescriptorResponseOutputWithContext(ctx context.Context) SourceTriggerDescriptorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerDescriptorResponseOutput)
}

func (i SourceTriggerDescriptorResponseArgs) ToSourceTriggerDescriptorResponsePtrOutput() SourceTriggerDescriptorResponsePtrOutput {
	return i.ToSourceTriggerDescriptorResponsePtrOutputWithContext(context.Background())
}

func (i SourceTriggerDescriptorResponseArgs) ToSourceTriggerDescriptorResponsePtrOutputWithContext(ctx context.Context) SourceTriggerDescriptorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerDescriptorResponseOutput).ToSourceTriggerDescriptorResponsePtrOutputWithContext(ctx)
}

// SourceTriggerDescriptorResponsePtrInput is an input type that accepts SourceTriggerDescriptorResponseArgs, SourceTriggerDescriptorResponsePtr and SourceTriggerDescriptorResponsePtrOutput values.
// You can construct a concrete instance of `SourceTriggerDescriptorResponsePtrInput` via:
//
//          SourceTriggerDescriptorResponseArgs{...}
//
//  or:
//
//          nil
type SourceTriggerDescriptorResponsePtrInput interface {
	pulumi.Input

	ToSourceTriggerDescriptorResponsePtrOutput() SourceTriggerDescriptorResponsePtrOutput
	ToSourceTriggerDescriptorResponsePtrOutputWithContext(context.Context) SourceTriggerDescriptorResponsePtrOutput
}

type sourceTriggerDescriptorResponsePtrType SourceTriggerDescriptorResponseArgs

func SourceTriggerDescriptorResponsePtr(v *SourceTriggerDescriptorResponseArgs) SourceTriggerDescriptorResponsePtrInput {
	return (*sourceTriggerDescriptorResponsePtrType)(v)
}

func (*sourceTriggerDescriptorResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceTriggerDescriptorResponse)(nil)).Elem()
}

func (i *sourceTriggerDescriptorResponsePtrType) ToSourceTriggerDescriptorResponsePtrOutput() SourceTriggerDescriptorResponsePtrOutput {
	return i.ToSourceTriggerDescriptorResponsePtrOutputWithContext(context.Background())
}

func (i *sourceTriggerDescriptorResponsePtrType) ToSourceTriggerDescriptorResponsePtrOutputWithContext(ctx context.Context) SourceTriggerDescriptorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerDescriptorResponsePtrOutput)
}

// The source trigger that caused a run.
type SourceTriggerDescriptorResponseOutput struct{ *pulumi.OutputState }

func (SourceTriggerDescriptorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTriggerDescriptorResponse)(nil)).Elem()
}

func (o SourceTriggerDescriptorResponseOutput) ToSourceTriggerDescriptorResponseOutput() SourceTriggerDescriptorResponseOutput {
	return o
}

func (o SourceTriggerDescriptorResponseOutput) ToSourceTriggerDescriptorResponseOutputWithContext(ctx context.Context) SourceTriggerDescriptorResponseOutput {
	return o
}

func (o SourceTriggerDescriptorResponseOutput) ToSourceTriggerDescriptorResponsePtrOutput() SourceTriggerDescriptorResponsePtrOutput {
	return o.ToSourceTriggerDescriptorResponsePtrOutputWithContext(context.Background())
}

func (o SourceTriggerDescriptorResponseOutput) ToSourceTriggerDescriptorResponsePtrOutputWithContext(ctx context.Context) SourceTriggerDescriptorResponsePtrOutput {
	return o.ApplyT(func(v SourceTriggerDescriptorResponse) *SourceTriggerDescriptorResponse {
		return &v
	}).(SourceTriggerDescriptorResponsePtrOutput)
}

// The branch name in the repository.
func (o SourceTriggerDescriptorResponseOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerDescriptorResponse) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

// The unique ID that identifies a commit.
func (o SourceTriggerDescriptorResponseOutput) CommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerDescriptorResponse) *string { return v.CommitId }).(pulumi.StringPtrOutput)
}

// The event type of the trigger.
func (o SourceTriggerDescriptorResponseOutput) EventType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerDescriptorResponse) *string { return v.EventType }).(pulumi.StringPtrOutput)
}

// The unique ID of the trigger.
func (o SourceTriggerDescriptorResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerDescriptorResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The source control provider type.
func (o SourceTriggerDescriptorResponseOutput) ProviderType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerDescriptorResponse) *string { return v.ProviderType }).(pulumi.StringPtrOutput)
}

// The unique ID that identifies pull request.
func (o SourceTriggerDescriptorResponseOutput) PullRequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerDescriptorResponse) *string { return v.PullRequestId }).(pulumi.StringPtrOutput)
}

// The repository URL.
func (o SourceTriggerDescriptorResponseOutput) RepositoryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerDescriptorResponse) *string { return v.RepositoryUrl }).(pulumi.StringPtrOutput)
}

type SourceTriggerDescriptorResponsePtrOutput struct{ *pulumi.OutputState }

func (SourceTriggerDescriptorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceTriggerDescriptorResponse)(nil)).Elem()
}

func (o SourceTriggerDescriptorResponsePtrOutput) ToSourceTriggerDescriptorResponsePtrOutput() SourceTriggerDescriptorResponsePtrOutput {
	return o
}

func (o SourceTriggerDescriptorResponsePtrOutput) ToSourceTriggerDescriptorResponsePtrOutputWithContext(ctx context.Context) SourceTriggerDescriptorResponsePtrOutput {
	return o
}

func (o SourceTriggerDescriptorResponsePtrOutput) Elem() SourceTriggerDescriptorResponseOutput {
	return o.ApplyT(func(v *SourceTriggerDescriptorResponse) SourceTriggerDescriptorResponse { return *v }).(SourceTriggerDescriptorResponseOutput)
}

// The branch name in the repository.
func (o SourceTriggerDescriptorResponsePtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceTriggerDescriptorResponse) *string {
		if v == nil {
			return nil
		}
		return v.BranchName
	}).(pulumi.StringPtrOutput)
}

// The unique ID that identifies a commit.
func (o SourceTriggerDescriptorResponsePtrOutput) CommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceTriggerDescriptorResponse) *string {
		if v == nil {
			return nil
		}
		return v.CommitId
	}).(pulumi.StringPtrOutput)
}

// The event type of the trigger.
func (o SourceTriggerDescriptorResponsePtrOutput) EventType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceTriggerDescriptorResponse) *string {
		if v == nil {
			return nil
		}
		return v.EventType
	}).(pulumi.StringPtrOutput)
}

// The unique ID of the trigger.
func (o SourceTriggerDescriptorResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceTriggerDescriptorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The source control provider type.
func (o SourceTriggerDescriptorResponsePtrOutput) ProviderType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceTriggerDescriptorResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProviderType
	}).(pulumi.StringPtrOutput)
}

// The unique ID that identifies pull request.
func (o SourceTriggerDescriptorResponsePtrOutput) PullRequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceTriggerDescriptorResponse) *string {
		if v == nil {
			return nil
		}
		return v.PullRequestId
	}).(pulumi.StringPtrOutput)
}

// The repository URL.
func (o SourceTriggerDescriptorResponsePtrOutput) RepositoryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceTriggerDescriptorResponse) *string {
		if v == nil {
			return nil
		}
		return v.RepositoryUrl
	}).(pulumi.StringPtrOutput)
}

// The properties of a source based trigger.
type SourceTriggerInvokeResponse struct {
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The properties that describes the source(code) for the task.
	SourceRepository SourcePropertiesInvokeResponse `pulumi:"sourceRepository"`
	// The source event corresponding to the trigger.
	SourceTriggerEvents []string `pulumi:"sourceTriggerEvents"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// SourceTriggerInvokeResponseInput is an input type that accepts SourceTriggerInvokeResponseArgs and SourceTriggerInvokeResponseOutput values.
// You can construct a concrete instance of `SourceTriggerInvokeResponseInput` via:
//
//          SourceTriggerInvokeResponseArgs{...}
type SourceTriggerInvokeResponseInput interface {
	pulumi.Input

	ToSourceTriggerInvokeResponseOutput() SourceTriggerInvokeResponseOutput
	ToSourceTriggerInvokeResponseOutputWithContext(context.Context) SourceTriggerInvokeResponseOutput
}

// The properties of a source based trigger.
type SourceTriggerInvokeResponseArgs struct {
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties that describes the source(code) for the task.
	SourceRepository SourcePropertiesInvokeResponseInput `pulumi:"sourceRepository"`
	// The source event corresponding to the trigger.
	SourceTriggerEvents pulumi.StringArrayInput `pulumi:"sourceTriggerEvents"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SourceTriggerInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTriggerInvokeResponse)(nil)).Elem()
}

func (i SourceTriggerInvokeResponseArgs) ToSourceTriggerInvokeResponseOutput() SourceTriggerInvokeResponseOutput {
	return i.ToSourceTriggerInvokeResponseOutputWithContext(context.Background())
}

func (i SourceTriggerInvokeResponseArgs) ToSourceTriggerInvokeResponseOutputWithContext(ctx context.Context) SourceTriggerInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerInvokeResponseOutput)
}

// SourceTriggerInvokeResponseArrayInput is an input type that accepts SourceTriggerInvokeResponseArray and SourceTriggerInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SourceTriggerInvokeResponseArrayInput` via:
//
//          SourceTriggerInvokeResponseArray{ SourceTriggerInvokeResponseArgs{...} }
type SourceTriggerInvokeResponseArrayInput interface {
	pulumi.Input

	ToSourceTriggerInvokeResponseArrayOutput() SourceTriggerInvokeResponseArrayOutput
	ToSourceTriggerInvokeResponseArrayOutputWithContext(context.Context) SourceTriggerInvokeResponseArrayOutput
}

type SourceTriggerInvokeResponseArray []SourceTriggerInvokeResponseInput

func (SourceTriggerInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceTriggerInvokeResponse)(nil)).Elem()
}

func (i SourceTriggerInvokeResponseArray) ToSourceTriggerInvokeResponseArrayOutput() SourceTriggerInvokeResponseArrayOutput {
	return i.ToSourceTriggerInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SourceTriggerInvokeResponseArray) ToSourceTriggerInvokeResponseArrayOutputWithContext(ctx context.Context) SourceTriggerInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerInvokeResponseArrayOutput)
}

// The properties of a source based trigger.
type SourceTriggerInvokeResponseOutput struct{ *pulumi.OutputState }

func (SourceTriggerInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTriggerInvokeResponse)(nil)).Elem()
}

func (o SourceTriggerInvokeResponseOutput) ToSourceTriggerInvokeResponseOutput() SourceTriggerInvokeResponseOutput {
	return o
}

func (o SourceTriggerInvokeResponseOutput) ToSourceTriggerInvokeResponseOutputWithContext(ctx context.Context) SourceTriggerInvokeResponseOutput {
	return o
}

// The name of the trigger.
func (o SourceTriggerInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SourceTriggerInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The properties that describes the source(code) for the task.
func (o SourceTriggerInvokeResponseOutput) SourceRepository() SourcePropertiesInvokeResponseOutput {
	return o.ApplyT(func(v SourceTriggerInvokeResponse) SourcePropertiesInvokeResponse { return v.SourceRepository }).(SourcePropertiesInvokeResponseOutput)
}

// The source event corresponding to the trigger.
func (o SourceTriggerInvokeResponseOutput) SourceTriggerEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SourceTriggerInvokeResponse) []string { return v.SourceTriggerEvents }).(pulumi.StringArrayOutput)
}

// The current status of trigger.
func (o SourceTriggerInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SourceTriggerInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SourceTriggerInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceTriggerInvokeResponse)(nil)).Elem()
}

func (o SourceTriggerInvokeResponseArrayOutput) ToSourceTriggerInvokeResponseArrayOutput() SourceTriggerInvokeResponseArrayOutput {
	return o
}

func (o SourceTriggerInvokeResponseArrayOutput) ToSourceTriggerInvokeResponseArrayOutputWithContext(ctx context.Context) SourceTriggerInvokeResponseArrayOutput {
	return o
}

func (o SourceTriggerInvokeResponseArrayOutput) Index(i pulumi.IntInput) SourceTriggerInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SourceTriggerInvokeResponse {
		return vs[0].([]SourceTriggerInvokeResponse)[vs[1].(int)]
	}).(SourceTriggerInvokeResponseOutput)
}

// The properties of a source based trigger.
type SourceTriggerResponse struct {
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The properties that describes the source(code) for the task.
	SourceRepository SourcePropertiesResponse `pulumi:"sourceRepository"`
	// The source event corresponding to the trigger.
	SourceTriggerEvents []string `pulumi:"sourceTriggerEvents"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// SourceTriggerResponseInput is an input type that accepts SourceTriggerResponseArgs and SourceTriggerResponseOutput values.
// You can construct a concrete instance of `SourceTriggerResponseInput` via:
//
//          SourceTriggerResponseArgs{...}
type SourceTriggerResponseInput interface {
	pulumi.Input

	ToSourceTriggerResponseOutput() SourceTriggerResponseOutput
	ToSourceTriggerResponseOutputWithContext(context.Context) SourceTriggerResponseOutput
}

// The properties of a source based trigger.
type SourceTriggerResponseArgs struct {
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties that describes the source(code) for the task.
	SourceRepository SourcePropertiesResponseInput `pulumi:"sourceRepository"`
	// The source event corresponding to the trigger.
	SourceTriggerEvents pulumi.StringArrayInput `pulumi:"sourceTriggerEvents"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SourceTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTriggerResponse)(nil)).Elem()
}

func (i SourceTriggerResponseArgs) ToSourceTriggerResponseOutput() SourceTriggerResponseOutput {
	return i.ToSourceTriggerResponseOutputWithContext(context.Background())
}

func (i SourceTriggerResponseArgs) ToSourceTriggerResponseOutputWithContext(ctx context.Context) SourceTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerResponseOutput)
}

// SourceTriggerResponseArrayInput is an input type that accepts SourceTriggerResponseArray and SourceTriggerResponseArrayOutput values.
// You can construct a concrete instance of `SourceTriggerResponseArrayInput` via:
//
//          SourceTriggerResponseArray{ SourceTriggerResponseArgs{...} }
type SourceTriggerResponseArrayInput interface {
	pulumi.Input

	ToSourceTriggerResponseArrayOutput() SourceTriggerResponseArrayOutput
	ToSourceTriggerResponseArrayOutputWithContext(context.Context) SourceTriggerResponseArrayOutput
}

type SourceTriggerResponseArray []SourceTriggerResponseInput

func (SourceTriggerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceTriggerResponse)(nil)).Elem()
}

func (i SourceTriggerResponseArray) ToSourceTriggerResponseArrayOutput() SourceTriggerResponseArrayOutput {
	return i.ToSourceTriggerResponseArrayOutputWithContext(context.Background())
}

func (i SourceTriggerResponseArray) ToSourceTriggerResponseArrayOutputWithContext(ctx context.Context) SourceTriggerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerResponseArrayOutput)
}

// The properties of a source based trigger.
type SourceTriggerResponseOutput struct{ *pulumi.OutputState }

func (SourceTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTriggerResponse)(nil)).Elem()
}

func (o SourceTriggerResponseOutput) ToSourceTriggerResponseOutput() SourceTriggerResponseOutput {
	return o
}

func (o SourceTriggerResponseOutput) ToSourceTriggerResponseOutputWithContext(ctx context.Context) SourceTriggerResponseOutput {
	return o
}

// The name of the trigger.
func (o SourceTriggerResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SourceTriggerResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The properties that describes the source(code) for the task.
func (o SourceTriggerResponseOutput) SourceRepository() SourcePropertiesResponseOutput {
	return o.ApplyT(func(v SourceTriggerResponse) SourcePropertiesResponse { return v.SourceRepository }).(SourcePropertiesResponseOutput)
}

// The source event corresponding to the trigger.
func (o SourceTriggerResponseOutput) SourceTriggerEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SourceTriggerResponse) []string { return v.SourceTriggerEvents }).(pulumi.StringArrayOutput)
}

// The current status of trigger.
func (o SourceTriggerResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SourceTriggerResponseArrayOutput struct{ *pulumi.OutputState }

func (SourceTriggerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceTriggerResponse)(nil)).Elem()
}

func (o SourceTriggerResponseArrayOutput) ToSourceTriggerResponseArrayOutput() SourceTriggerResponseArrayOutput {
	return o
}

func (o SourceTriggerResponseArrayOutput) ToSourceTriggerResponseArrayOutputWithContext(ctx context.Context) SourceTriggerResponseArrayOutput {
	return o
}

func (o SourceTriggerResponseArrayOutput) Index(i pulumi.IntInput) SourceTriggerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SourceTriggerResponse {
		return vs[0].([]SourceTriggerResponse)[vs[1].(int)]
	}).(SourceTriggerResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataInvokeResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource modification (UTC).
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// SystemDataInvokeResponseInput is an input type that accepts SystemDataInvokeResponseArgs and SystemDataInvokeResponseOutput values.
// You can construct a concrete instance of `SystemDataInvokeResponseInput` via:
//
//          SystemDataInvokeResponseArgs{...}
type SystemDataInvokeResponseInput interface {
	pulumi.Input

	ToSystemDataInvokeResponseOutput() SystemDataInvokeResponseOutput
	ToSystemDataInvokeResponseOutputWithContext(context.Context) SystemDataInvokeResponseOutput
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataInvokeResponseArgs struct {
	// The timestamp of resource creation (UTC).
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy pulumi.StringPtrInput `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType pulumi.StringPtrInput `pulumi:"createdByType"`
	// The timestamp of resource modification (UTC).
	LastModifiedAt pulumi.StringPtrInput `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy pulumi.StringPtrInput `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType pulumi.StringPtrInput `pulumi:"lastModifiedByType"`
}

func (SystemDataInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataInvokeResponse)(nil)).Elem()
}

func (i SystemDataInvokeResponseArgs) ToSystemDataInvokeResponseOutput() SystemDataInvokeResponseOutput {
	return i.ToSystemDataInvokeResponseOutputWithContext(context.Background())
}

func (i SystemDataInvokeResponseArgs) ToSystemDataInvokeResponseOutputWithContext(ctx context.Context) SystemDataInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataInvokeResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataInvokeResponseOutput struct{ *pulumi.OutputState }

func (SystemDataInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataInvokeResponse)(nil)).Elem()
}

func (o SystemDataInvokeResponseOutput) ToSystemDataInvokeResponseOutput() SystemDataInvokeResponseOutput {
	return o
}

func (o SystemDataInvokeResponseOutput) ToSystemDataInvokeResponseOutputWithContext(ctx context.Context) SystemDataInvokeResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataInvokeResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataInvokeResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataInvokeResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataInvokeResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataInvokeResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataInvokeResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource modification (UTC).
func (o SystemDataInvokeResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataInvokeResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataInvokeResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataInvokeResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataInvokeResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataInvokeResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource modification (UTC).
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// SystemDataResponseInput is an input type that accepts SystemDataResponseArgs and SystemDataResponseOutput values.
// You can construct a concrete instance of `SystemDataResponseInput` via:
//
//          SystemDataResponseArgs{...}
type SystemDataResponseInput interface {
	pulumi.Input

	ToSystemDataResponseOutput() SystemDataResponseOutput
	ToSystemDataResponseOutputWithContext(context.Context) SystemDataResponseOutput
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseArgs struct {
	// The timestamp of resource creation (UTC).
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy pulumi.StringPtrInput `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType pulumi.StringPtrInput `pulumi:"createdByType"`
	// The timestamp of resource modification (UTC).
	LastModifiedAt pulumi.StringPtrInput `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy pulumi.StringPtrInput `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType pulumi.StringPtrInput `pulumi:"lastModifiedByType"`
}

func (SystemDataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (i SystemDataResponseArgs) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return i.ToSystemDataResponseOutputWithContext(context.Background())
}

func (i SystemDataResponseArgs) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponseOutput)
}

func (i SystemDataResponseArgs) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return i.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (i SystemDataResponseArgs) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponseOutput).ToSystemDataResponsePtrOutputWithContext(ctx)
}

// SystemDataResponsePtrInput is an input type that accepts SystemDataResponseArgs, SystemDataResponsePtr and SystemDataResponsePtrOutput values.
// You can construct a concrete instance of `SystemDataResponsePtrInput` via:
//
//          SystemDataResponseArgs{...}
//
//  or:
//
//          nil
type SystemDataResponsePtrInput interface {
	pulumi.Input

	ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput
	ToSystemDataResponsePtrOutputWithContext(context.Context) SystemDataResponsePtrOutput
}

type systemDataResponsePtrType SystemDataResponseArgs

func SystemDataResponsePtr(v *SystemDataResponseArgs) SystemDataResponsePtrInput {
	return (*systemDataResponsePtrType)(v)
}

func (*systemDataResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (i *systemDataResponsePtrType) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return i.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (i *systemDataResponsePtrType) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponsePtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (o SystemDataResponseOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *SystemDataResponse {
		return &v
	}).(SystemDataResponsePtrOutput)
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource modification (UTC).
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

type SystemDataResponsePtrOutput struct{ *pulumi.OutputState }

func (SystemDataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) Elem() SystemDataResponseOutput {
	return o.ApplyT(func(v *SystemDataResponse) SystemDataResponse { return *v }).(SystemDataResponseOutput)
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponsePtrOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedBy
	}).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponsePtrOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedByType
	}).(pulumi.StringPtrOutput)
}

// The timestamp of resource modification (UTC).
func (o SystemDataResponsePtrOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedAt
	}).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponsePtrOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedBy
	}).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponsePtrOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedByType
	}).(pulumi.StringPtrOutput)
}

// The parameters for a task run request.
type TaskRunRequest struct {
	// The dedicated agent pool for the run.
	AgentPoolName *string `pulumi:"agentPoolName"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate *string `pulumi:"logTemplate"`
	// Set of overridable parameters that can be passed when running a Task.
	OverrideTaskStepProperties *OverrideTaskStepProperties `pulumi:"overrideTaskStepProperties"`
	// The resource ID of task against which run has to be queued.
	TaskId string `pulumi:"taskId"`
	// The type of the run request.
	// Expected value is 'TaskRunRequest'.
	Type string `pulumi:"type"`
}

// TaskRunRequestInput is an input type that accepts TaskRunRequestArgs and TaskRunRequestOutput values.
// You can construct a concrete instance of `TaskRunRequestInput` via:
//
//          TaskRunRequestArgs{...}
type TaskRunRequestInput interface {
	pulumi.Input

	ToTaskRunRequestOutput() TaskRunRequestOutput
	ToTaskRunRequestOutputWithContext(context.Context) TaskRunRequestOutput
}

// The parameters for a task run request.
type TaskRunRequestArgs struct {
	// The dedicated agent pool for the run.
	AgentPoolName pulumi.StringPtrInput `pulumi:"agentPoolName"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate pulumi.StringPtrInput `pulumi:"logTemplate"`
	// Set of overridable parameters that can be passed when running a Task.
	OverrideTaskStepProperties OverrideTaskStepPropertiesPtrInput `pulumi:"overrideTaskStepProperties"`
	// The resource ID of task against which run has to be queued.
	TaskId pulumi.StringInput `pulumi:"taskId"`
	// The type of the run request.
	// Expected value is 'TaskRunRequest'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TaskRunRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskRunRequest)(nil)).Elem()
}

func (i TaskRunRequestArgs) ToTaskRunRequestOutput() TaskRunRequestOutput {
	return i.ToTaskRunRequestOutputWithContext(context.Background())
}

func (i TaskRunRequestArgs) ToTaskRunRequestOutputWithContext(ctx context.Context) TaskRunRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskRunRequestOutput)
}

// The parameters for a task run request.
type TaskRunRequestOutput struct{ *pulumi.OutputState }

func (TaskRunRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskRunRequest)(nil)).Elem()
}

func (o TaskRunRequestOutput) ToTaskRunRequestOutput() TaskRunRequestOutput {
	return o
}

func (o TaskRunRequestOutput) ToTaskRunRequestOutputWithContext(ctx context.Context) TaskRunRequestOutput {
	return o
}

// The dedicated agent pool for the run.
func (o TaskRunRequestOutput) AgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskRunRequest) *string { return v.AgentPoolName }).(pulumi.StringPtrOutput)
}

// The value that indicates whether archiving is enabled for the run or not.
func (o TaskRunRequestOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TaskRunRequest) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// The template that describes the repository and tag information for run log artifact.
func (o TaskRunRequestOutput) LogTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskRunRequest) *string { return v.LogTemplate }).(pulumi.StringPtrOutput)
}

// Set of overridable parameters that can be passed when running a Task.
func (o TaskRunRequestOutput) OverrideTaskStepProperties() OverrideTaskStepPropertiesPtrOutput {
	return o.ApplyT(func(v TaskRunRequest) *OverrideTaskStepProperties { return v.OverrideTaskStepProperties }).(OverrideTaskStepPropertiesPtrOutput)
}

// The resource ID of task against which run has to be queued.
func (o TaskRunRequestOutput) TaskId() pulumi.StringOutput {
	return o.ApplyT(func(v TaskRunRequest) string { return v.TaskId }).(pulumi.StringOutput)
}

// The type of the run request.
// Expected value is 'TaskRunRequest'.
func (o TaskRunRequestOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TaskRunRequest) string { return v.Type }).(pulumi.StringOutput)
}

// The parameters for a task run request.
type TaskRunRequestInvokeResponse struct {
	// The dedicated agent pool for the run.
	AgentPoolName *string `pulumi:"agentPoolName"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate *string `pulumi:"logTemplate"`
	// Set of overridable parameters that can be passed when running a Task.
	OverrideTaskStepProperties *OverrideTaskStepPropertiesInvokeResponse `pulumi:"overrideTaskStepProperties"`
	// The resource ID of task against which run has to be queued.
	TaskId string `pulumi:"taskId"`
	// The type of the run request.
	// Expected value is 'TaskRunRequest'.
	Type string `pulumi:"type"`
}

// TaskRunRequestInvokeResponseInput is an input type that accepts TaskRunRequestInvokeResponseArgs and TaskRunRequestInvokeResponseOutput values.
// You can construct a concrete instance of `TaskRunRequestInvokeResponseInput` via:
//
//          TaskRunRequestInvokeResponseArgs{...}
type TaskRunRequestInvokeResponseInput interface {
	pulumi.Input

	ToTaskRunRequestInvokeResponseOutput() TaskRunRequestInvokeResponseOutput
	ToTaskRunRequestInvokeResponseOutputWithContext(context.Context) TaskRunRequestInvokeResponseOutput
}

// The parameters for a task run request.
type TaskRunRequestInvokeResponseArgs struct {
	// The dedicated agent pool for the run.
	AgentPoolName pulumi.StringPtrInput `pulumi:"agentPoolName"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate pulumi.StringPtrInput `pulumi:"logTemplate"`
	// Set of overridable parameters that can be passed when running a Task.
	OverrideTaskStepProperties OverrideTaskStepPropertiesInvokeResponsePtrInput `pulumi:"overrideTaskStepProperties"`
	// The resource ID of task against which run has to be queued.
	TaskId pulumi.StringInput `pulumi:"taskId"`
	// The type of the run request.
	// Expected value is 'TaskRunRequest'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TaskRunRequestInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskRunRequestInvokeResponse)(nil)).Elem()
}

func (i TaskRunRequestInvokeResponseArgs) ToTaskRunRequestInvokeResponseOutput() TaskRunRequestInvokeResponseOutput {
	return i.ToTaskRunRequestInvokeResponseOutputWithContext(context.Background())
}

func (i TaskRunRequestInvokeResponseArgs) ToTaskRunRequestInvokeResponseOutputWithContext(ctx context.Context) TaskRunRequestInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskRunRequestInvokeResponseOutput)
}

// The parameters for a task run request.
type TaskRunRequestInvokeResponseOutput struct{ *pulumi.OutputState }

func (TaskRunRequestInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskRunRequestInvokeResponse)(nil)).Elem()
}

func (o TaskRunRequestInvokeResponseOutput) ToTaskRunRequestInvokeResponseOutput() TaskRunRequestInvokeResponseOutput {
	return o
}

func (o TaskRunRequestInvokeResponseOutput) ToTaskRunRequestInvokeResponseOutputWithContext(ctx context.Context) TaskRunRequestInvokeResponseOutput {
	return o
}

// The dedicated agent pool for the run.
func (o TaskRunRequestInvokeResponseOutput) AgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskRunRequestInvokeResponse) *string { return v.AgentPoolName }).(pulumi.StringPtrOutput)
}

// The value that indicates whether archiving is enabled for the run or not.
func (o TaskRunRequestInvokeResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TaskRunRequestInvokeResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// The template that describes the repository and tag information for run log artifact.
func (o TaskRunRequestInvokeResponseOutput) LogTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskRunRequestInvokeResponse) *string { return v.LogTemplate }).(pulumi.StringPtrOutput)
}

// Set of overridable parameters that can be passed when running a Task.
func (o TaskRunRequestInvokeResponseOutput) OverrideTaskStepProperties() OverrideTaskStepPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v TaskRunRequestInvokeResponse) *OverrideTaskStepPropertiesInvokeResponse {
		return v.OverrideTaskStepProperties
	}).(OverrideTaskStepPropertiesInvokeResponsePtrOutput)
}

// The resource ID of task against which run has to be queued.
func (o TaskRunRequestInvokeResponseOutput) TaskId() pulumi.StringOutput {
	return o.ApplyT(func(v TaskRunRequestInvokeResponse) string { return v.TaskId }).(pulumi.StringOutput)
}

// The type of the run request.
// Expected value is 'TaskRunRequest'.
func (o TaskRunRequestInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TaskRunRequestInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The parameters for a task run request.
type TaskRunRequestResponse struct {
	// The dedicated agent pool for the run.
	AgentPoolName *string `pulumi:"agentPoolName"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate *string `pulumi:"logTemplate"`
	// Set of overridable parameters that can be passed when running a Task.
	OverrideTaskStepProperties *OverrideTaskStepPropertiesResponse `pulumi:"overrideTaskStepProperties"`
	// The resource ID of task against which run has to be queued.
	TaskId string `pulumi:"taskId"`
	// The type of the run request.
	// Expected value is 'TaskRunRequest'.
	Type string `pulumi:"type"`
}

// TaskRunRequestResponseInput is an input type that accepts TaskRunRequestResponseArgs and TaskRunRequestResponseOutput values.
// You can construct a concrete instance of `TaskRunRequestResponseInput` via:
//
//          TaskRunRequestResponseArgs{...}
type TaskRunRequestResponseInput interface {
	pulumi.Input

	ToTaskRunRequestResponseOutput() TaskRunRequestResponseOutput
	ToTaskRunRequestResponseOutputWithContext(context.Context) TaskRunRequestResponseOutput
}

// The parameters for a task run request.
type TaskRunRequestResponseArgs struct {
	// The dedicated agent pool for the run.
	AgentPoolName pulumi.StringPtrInput `pulumi:"agentPoolName"`
	// The value that indicates whether archiving is enabled for the run or not.
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// The template that describes the repository and tag information for run log artifact.
	LogTemplate pulumi.StringPtrInput `pulumi:"logTemplate"`
	// Set of overridable parameters that can be passed when running a Task.
	OverrideTaskStepProperties OverrideTaskStepPropertiesResponsePtrInput `pulumi:"overrideTaskStepProperties"`
	// The resource ID of task against which run has to be queued.
	TaskId pulumi.StringInput `pulumi:"taskId"`
	// The type of the run request.
	// Expected value is 'TaskRunRequest'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TaskRunRequestResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskRunRequestResponse)(nil)).Elem()
}

func (i TaskRunRequestResponseArgs) ToTaskRunRequestResponseOutput() TaskRunRequestResponseOutput {
	return i.ToTaskRunRequestResponseOutputWithContext(context.Background())
}

func (i TaskRunRequestResponseArgs) ToTaskRunRequestResponseOutputWithContext(ctx context.Context) TaskRunRequestResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskRunRequestResponseOutput)
}

// The parameters for a task run request.
type TaskRunRequestResponseOutput struct{ *pulumi.OutputState }

func (TaskRunRequestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskRunRequestResponse)(nil)).Elem()
}

func (o TaskRunRequestResponseOutput) ToTaskRunRequestResponseOutput() TaskRunRequestResponseOutput {
	return o
}

func (o TaskRunRequestResponseOutput) ToTaskRunRequestResponseOutputWithContext(ctx context.Context) TaskRunRequestResponseOutput {
	return o
}

// The dedicated agent pool for the run.
func (o TaskRunRequestResponseOutput) AgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskRunRequestResponse) *string { return v.AgentPoolName }).(pulumi.StringPtrOutput)
}

// The value that indicates whether archiving is enabled for the run or not.
func (o TaskRunRequestResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TaskRunRequestResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// The template that describes the repository and tag information for run log artifact.
func (o TaskRunRequestResponseOutput) LogTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskRunRequestResponse) *string { return v.LogTemplate }).(pulumi.StringPtrOutput)
}

// Set of overridable parameters that can be passed when running a Task.
func (o TaskRunRequestResponseOutput) OverrideTaskStepProperties() OverrideTaskStepPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TaskRunRequestResponse) *OverrideTaskStepPropertiesResponse {
		return v.OverrideTaskStepProperties
	}).(OverrideTaskStepPropertiesResponsePtrOutput)
}

// The resource ID of task against which run has to be queued.
func (o TaskRunRequestResponseOutput) TaskId() pulumi.StringOutput {
	return o.ApplyT(func(v TaskRunRequestResponse) string { return v.TaskId }).(pulumi.StringOutput)
}

// The type of the run request.
// Expected value is 'TaskRunRequest'.
func (o TaskRunRequestResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TaskRunRequestResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of a timer trigger.
type TimerTrigger struct {
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The CRON expression for the task schedule
	Schedule string `pulumi:"schedule"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// TimerTriggerInput is an input type that accepts TimerTriggerArgs and TimerTriggerOutput values.
// You can construct a concrete instance of `TimerTriggerInput` via:
//
//          TimerTriggerArgs{...}
type TimerTriggerInput interface {
	pulumi.Input

	ToTimerTriggerOutput() TimerTriggerOutput
	ToTimerTriggerOutputWithContext(context.Context) TimerTriggerOutput
}

// The properties of a timer trigger.
type TimerTriggerArgs struct {
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The CRON expression for the task schedule
	Schedule pulumi.StringInput `pulumi:"schedule"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (TimerTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTrigger)(nil)).Elem()
}

func (i TimerTriggerArgs) ToTimerTriggerOutput() TimerTriggerOutput {
	return i.ToTimerTriggerOutputWithContext(context.Background())
}

func (i TimerTriggerArgs) ToTimerTriggerOutputWithContext(ctx context.Context) TimerTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerOutput)
}

// TimerTriggerArrayInput is an input type that accepts TimerTriggerArray and TimerTriggerArrayOutput values.
// You can construct a concrete instance of `TimerTriggerArrayInput` via:
//
//          TimerTriggerArray{ TimerTriggerArgs{...} }
type TimerTriggerArrayInput interface {
	pulumi.Input

	ToTimerTriggerArrayOutput() TimerTriggerArrayOutput
	ToTimerTriggerArrayOutputWithContext(context.Context) TimerTriggerArrayOutput
}

type TimerTriggerArray []TimerTriggerInput

func (TimerTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimerTrigger)(nil)).Elem()
}

func (i TimerTriggerArray) ToTimerTriggerArrayOutput() TimerTriggerArrayOutput {
	return i.ToTimerTriggerArrayOutputWithContext(context.Background())
}

func (i TimerTriggerArray) ToTimerTriggerArrayOutputWithContext(ctx context.Context) TimerTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerArrayOutput)
}

// The properties of a timer trigger.
type TimerTriggerOutput struct{ *pulumi.OutputState }

func (TimerTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTrigger)(nil)).Elem()
}

func (o TimerTriggerOutput) ToTimerTriggerOutput() TimerTriggerOutput {
	return o
}

func (o TimerTriggerOutput) ToTimerTriggerOutputWithContext(ctx context.Context) TimerTriggerOutput {
	return o
}

// The name of the trigger.
func (o TimerTriggerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TimerTrigger) string { return v.Name }).(pulumi.StringOutput)
}

// The CRON expression for the task schedule
func (o TimerTriggerOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v TimerTrigger) string { return v.Schedule }).(pulumi.StringOutput)
}

// The current status of trigger.
func (o TimerTriggerOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimerTrigger) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type TimerTriggerArrayOutput struct{ *pulumi.OutputState }

func (TimerTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimerTrigger)(nil)).Elem()
}

func (o TimerTriggerArrayOutput) ToTimerTriggerArrayOutput() TimerTriggerArrayOutput {
	return o
}

func (o TimerTriggerArrayOutput) ToTimerTriggerArrayOutputWithContext(ctx context.Context) TimerTriggerArrayOutput {
	return o
}

func (o TimerTriggerArrayOutput) Index(i pulumi.IntInput) TimerTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimerTrigger {
		return vs[0].([]TimerTrigger)[vs[1].(int)]
	}).(TimerTriggerOutput)
}

type TimerTriggerDescriptorInvokeResponse struct {
	// The occurrence that triggered the run.
	ScheduleOccurrence *string `pulumi:"scheduleOccurrence"`
	// The timer trigger name that caused the run.
	TimerTriggerName *string `pulumi:"timerTriggerName"`
}

// TimerTriggerDescriptorInvokeResponseInput is an input type that accepts TimerTriggerDescriptorInvokeResponseArgs and TimerTriggerDescriptorInvokeResponseOutput values.
// You can construct a concrete instance of `TimerTriggerDescriptorInvokeResponseInput` via:
//
//          TimerTriggerDescriptorInvokeResponseArgs{...}
type TimerTriggerDescriptorInvokeResponseInput interface {
	pulumi.Input

	ToTimerTriggerDescriptorInvokeResponseOutput() TimerTriggerDescriptorInvokeResponseOutput
	ToTimerTriggerDescriptorInvokeResponseOutputWithContext(context.Context) TimerTriggerDescriptorInvokeResponseOutput
}

type TimerTriggerDescriptorInvokeResponseArgs struct {
	// The occurrence that triggered the run.
	ScheduleOccurrence pulumi.StringPtrInput `pulumi:"scheduleOccurrence"`
	// The timer trigger name that caused the run.
	TimerTriggerName pulumi.StringPtrInput `pulumi:"timerTriggerName"`
}

func (TimerTriggerDescriptorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTriggerDescriptorInvokeResponse)(nil)).Elem()
}

func (i TimerTriggerDescriptorInvokeResponseArgs) ToTimerTriggerDescriptorInvokeResponseOutput() TimerTriggerDescriptorInvokeResponseOutput {
	return i.ToTimerTriggerDescriptorInvokeResponseOutputWithContext(context.Background())
}

func (i TimerTriggerDescriptorInvokeResponseArgs) ToTimerTriggerDescriptorInvokeResponseOutputWithContext(ctx context.Context) TimerTriggerDescriptorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerDescriptorInvokeResponseOutput)
}

func (i TimerTriggerDescriptorInvokeResponseArgs) ToTimerTriggerDescriptorInvokeResponsePtrOutput() TimerTriggerDescriptorInvokeResponsePtrOutput {
	return i.ToTimerTriggerDescriptorInvokeResponsePtrOutputWithContext(context.Background())
}

func (i TimerTriggerDescriptorInvokeResponseArgs) ToTimerTriggerDescriptorInvokeResponsePtrOutputWithContext(ctx context.Context) TimerTriggerDescriptorInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerDescriptorInvokeResponseOutput).ToTimerTriggerDescriptorInvokeResponsePtrOutputWithContext(ctx)
}

// TimerTriggerDescriptorInvokeResponsePtrInput is an input type that accepts TimerTriggerDescriptorInvokeResponseArgs, TimerTriggerDescriptorInvokeResponsePtr and TimerTriggerDescriptorInvokeResponsePtrOutput values.
// You can construct a concrete instance of `TimerTriggerDescriptorInvokeResponsePtrInput` via:
//
//          TimerTriggerDescriptorInvokeResponseArgs{...}
//
//  or:
//
//          nil
type TimerTriggerDescriptorInvokeResponsePtrInput interface {
	pulumi.Input

	ToTimerTriggerDescriptorInvokeResponsePtrOutput() TimerTriggerDescriptorInvokeResponsePtrOutput
	ToTimerTriggerDescriptorInvokeResponsePtrOutputWithContext(context.Context) TimerTriggerDescriptorInvokeResponsePtrOutput
}

type timerTriggerDescriptorInvokeResponsePtrType TimerTriggerDescriptorInvokeResponseArgs

func TimerTriggerDescriptorInvokeResponsePtr(v *TimerTriggerDescriptorInvokeResponseArgs) TimerTriggerDescriptorInvokeResponsePtrInput {
	return (*timerTriggerDescriptorInvokeResponsePtrType)(v)
}

func (*timerTriggerDescriptorInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TimerTriggerDescriptorInvokeResponse)(nil)).Elem()
}

func (i *timerTriggerDescriptorInvokeResponsePtrType) ToTimerTriggerDescriptorInvokeResponsePtrOutput() TimerTriggerDescriptorInvokeResponsePtrOutput {
	return i.ToTimerTriggerDescriptorInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *timerTriggerDescriptorInvokeResponsePtrType) ToTimerTriggerDescriptorInvokeResponsePtrOutputWithContext(ctx context.Context) TimerTriggerDescriptorInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerDescriptorInvokeResponsePtrOutput)
}

type TimerTriggerDescriptorInvokeResponseOutput struct{ *pulumi.OutputState }

func (TimerTriggerDescriptorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTriggerDescriptorInvokeResponse)(nil)).Elem()
}

func (o TimerTriggerDescriptorInvokeResponseOutput) ToTimerTriggerDescriptorInvokeResponseOutput() TimerTriggerDescriptorInvokeResponseOutput {
	return o
}

func (o TimerTriggerDescriptorInvokeResponseOutput) ToTimerTriggerDescriptorInvokeResponseOutputWithContext(ctx context.Context) TimerTriggerDescriptorInvokeResponseOutput {
	return o
}

func (o TimerTriggerDescriptorInvokeResponseOutput) ToTimerTriggerDescriptorInvokeResponsePtrOutput() TimerTriggerDescriptorInvokeResponsePtrOutput {
	return o.ToTimerTriggerDescriptorInvokeResponsePtrOutputWithContext(context.Background())
}

func (o TimerTriggerDescriptorInvokeResponseOutput) ToTimerTriggerDescriptorInvokeResponsePtrOutputWithContext(ctx context.Context) TimerTriggerDescriptorInvokeResponsePtrOutput {
	return o.ApplyT(func(v TimerTriggerDescriptorInvokeResponse) *TimerTriggerDescriptorInvokeResponse {
		return &v
	}).(TimerTriggerDescriptorInvokeResponsePtrOutput)
}

// The occurrence that triggered the run.
func (o TimerTriggerDescriptorInvokeResponseOutput) ScheduleOccurrence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimerTriggerDescriptorInvokeResponse) *string { return v.ScheduleOccurrence }).(pulumi.StringPtrOutput)
}

// The timer trigger name that caused the run.
func (o TimerTriggerDescriptorInvokeResponseOutput) TimerTriggerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimerTriggerDescriptorInvokeResponse) *string { return v.TimerTriggerName }).(pulumi.StringPtrOutput)
}

type TimerTriggerDescriptorInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (TimerTriggerDescriptorInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimerTriggerDescriptorInvokeResponse)(nil)).Elem()
}

func (o TimerTriggerDescriptorInvokeResponsePtrOutput) ToTimerTriggerDescriptorInvokeResponsePtrOutput() TimerTriggerDescriptorInvokeResponsePtrOutput {
	return o
}

func (o TimerTriggerDescriptorInvokeResponsePtrOutput) ToTimerTriggerDescriptorInvokeResponsePtrOutputWithContext(ctx context.Context) TimerTriggerDescriptorInvokeResponsePtrOutput {
	return o
}

func (o TimerTriggerDescriptorInvokeResponsePtrOutput) Elem() TimerTriggerDescriptorInvokeResponseOutput {
	return o.ApplyT(func(v *TimerTriggerDescriptorInvokeResponse) TimerTriggerDescriptorInvokeResponse { return *v }).(TimerTriggerDescriptorInvokeResponseOutput)
}

// The occurrence that triggered the run.
func (o TimerTriggerDescriptorInvokeResponsePtrOutput) ScheduleOccurrence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TimerTriggerDescriptorInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleOccurrence
	}).(pulumi.StringPtrOutput)
}

// The timer trigger name that caused the run.
func (o TimerTriggerDescriptorInvokeResponsePtrOutput) TimerTriggerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TimerTriggerDescriptorInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimerTriggerName
	}).(pulumi.StringPtrOutput)
}

type TimerTriggerDescriptorResponse struct {
	// The occurrence that triggered the run.
	ScheduleOccurrence *string `pulumi:"scheduleOccurrence"`
	// The timer trigger name that caused the run.
	TimerTriggerName *string `pulumi:"timerTriggerName"`
}

// TimerTriggerDescriptorResponseInput is an input type that accepts TimerTriggerDescriptorResponseArgs and TimerTriggerDescriptorResponseOutput values.
// You can construct a concrete instance of `TimerTriggerDescriptorResponseInput` via:
//
//          TimerTriggerDescriptorResponseArgs{...}
type TimerTriggerDescriptorResponseInput interface {
	pulumi.Input

	ToTimerTriggerDescriptorResponseOutput() TimerTriggerDescriptorResponseOutput
	ToTimerTriggerDescriptorResponseOutputWithContext(context.Context) TimerTriggerDescriptorResponseOutput
}

type TimerTriggerDescriptorResponseArgs struct {
	// The occurrence that triggered the run.
	ScheduleOccurrence pulumi.StringPtrInput `pulumi:"scheduleOccurrence"`
	// The timer trigger name that caused the run.
	TimerTriggerName pulumi.StringPtrInput `pulumi:"timerTriggerName"`
}

func (TimerTriggerDescriptorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTriggerDescriptorResponse)(nil)).Elem()
}

func (i TimerTriggerDescriptorResponseArgs) ToTimerTriggerDescriptorResponseOutput() TimerTriggerDescriptorResponseOutput {
	return i.ToTimerTriggerDescriptorResponseOutputWithContext(context.Background())
}

func (i TimerTriggerDescriptorResponseArgs) ToTimerTriggerDescriptorResponseOutputWithContext(ctx context.Context) TimerTriggerDescriptorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerDescriptorResponseOutput)
}

func (i TimerTriggerDescriptorResponseArgs) ToTimerTriggerDescriptorResponsePtrOutput() TimerTriggerDescriptorResponsePtrOutput {
	return i.ToTimerTriggerDescriptorResponsePtrOutputWithContext(context.Background())
}

func (i TimerTriggerDescriptorResponseArgs) ToTimerTriggerDescriptorResponsePtrOutputWithContext(ctx context.Context) TimerTriggerDescriptorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerDescriptorResponseOutput).ToTimerTriggerDescriptorResponsePtrOutputWithContext(ctx)
}

// TimerTriggerDescriptorResponsePtrInput is an input type that accepts TimerTriggerDescriptorResponseArgs, TimerTriggerDescriptorResponsePtr and TimerTriggerDescriptorResponsePtrOutput values.
// You can construct a concrete instance of `TimerTriggerDescriptorResponsePtrInput` via:
//
//          TimerTriggerDescriptorResponseArgs{...}
//
//  or:
//
//          nil
type TimerTriggerDescriptorResponsePtrInput interface {
	pulumi.Input

	ToTimerTriggerDescriptorResponsePtrOutput() TimerTriggerDescriptorResponsePtrOutput
	ToTimerTriggerDescriptorResponsePtrOutputWithContext(context.Context) TimerTriggerDescriptorResponsePtrOutput
}

type timerTriggerDescriptorResponsePtrType TimerTriggerDescriptorResponseArgs

func TimerTriggerDescriptorResponsePtr(v *TimerTriggerDescriptorResponseArgs) TimerTriggerDescriptorResponsePtrInput {
	return (*timerTriggerDescriptorResponsePtrType)(v)
}

func (*timerTriggerDescriptorResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TimerTriggerDescriptorResponse)(nil)).Elem()
}

func (i *timerTriggerDescriptorResponsePtrType) ToTimerTriggerDescriptorResponsePtrOutput() TimerTriggerDescriptorResponsePtrOutput {
	return i.ToTimerTriggerDescriptorResponsePtrOutputWithContext(context.Background())
}

func (i *timerTriggerDescriptorResponsePtrType) ToTimerTriggerDescriptorResponsePtrOutputWithContext(ctx context.Context) TimerTriggerDescriptorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerDescriptorResponsePtrOutput)
}

type TimerTriggerDescriptorResponseOutput struct{ *pulumi.OutputState }

func (TimerTriggerDescriptorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTriggerDescriptorResponse)(nil)).Elem()
}

func (o TimerTriggerDescriptorResponseOutput) ToTimerTriggerDescriptorResponseOutput() TimerTriggerDescriptorResponseOutput {
	return o
}

func (o TimerTriggerDescriptorResponseOutput) ToTimerTriggerDescriptorResponseOutputWithContext(ctx context.Context) TimerTriggerDescriptorResponseOutput {
	return o
}

func (o TimerTriggerDescriptorResponseOutput) ToTimerTriggerDescriptorResponsePtrOutput() TimerTriggerDescriptorResponsePtrOutput {
	return o.ToTimerTriggerDescriptorResponsePtrOutputWithContext(context.Background())
}

func (o TimerTriggerDescriptorResponseOutput) ToTimerTriggerDescriptorResponsePtrOutputWithContext(ctx context.Context) TimerTriggerDescriptorResponsePtrOutput {
	return o.ApplyT(func(v TimerTriggerDescriptorResponse) *TimerTriggerDescriptorResponse {
		return &v
	}).(TimerTriggerDescriptorResponsePtrOutput)
}

// The occurrence that triggered the run.
func (o TimerTriggerDescriptorResponseOutput) ScheduleOccurrence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimerTriggerDescriptorResponse) *string { return v.ScheduleOccurrence }).(pulumi.StringPtrOutput)
}

// The timer trigger name that caused the run.
func (o TimerTriggerDescriptorResponseOutput) TimerTriggerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimerTriggerDescriptorResponse) *string { return v.TimerTriggerName }).(pulumi.StringPtrOutput)
}

type TimerTriggerDescriptorResponsePtrOutput struct{ *pulumi.OutputState }

func (TimerTriggerDescriptorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimerTriggerDescriptorResponse)(nil)).Elem()
}

func (o TimerTriggerDescriptorResponsePtrOutput) ToTimerTriggerDescriptorResponsePtrOutput() TimerTriggerDescriptorResponsePtrOutput {
	return o
}

func (o TimerTriggerDescriptorResponsePtrOutput) ToTimerTriggerDescriptorResponsePtrOutputWithContext(ctx context.Context) TimerTriggerDescriptorResponsePtrOutput {
	return o
}

func (o TimerTriggerDescriptorResponsePtrOutput) Elem() TimerTriggerDescriptorResponseOutput {
	return o.ApplyT(func(v *TimerTriggerDescriptorResponse) TimerTriggerDescriptorResponse { return *v }).(TimerTriggerDescriptorResponseOutput)
}

// The occurrence that triggered the run.
func (o TimerTriggerDescriptorResponsePtrOutput) ScheduleOccurrence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TimerTriggerDescriptorResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleOccurrence
	}).(pulumi.StringPtrOutput)
}

// The timer trigger name that caused the run.
func (o TimerTriggerDescriptorResponsePtrOutput) TimerTriggerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TimerTriggerDescriptorResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimerTriggerName
	}).(pulumi.StringPtrOutput)
}

// The properties of a timer trigger.
type TimerTriggerInvokeResponse struct {
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The CRON expression for the task schedule
	Schedule string `pulumi:"schedule"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// TimerTriggerInvokeResponseInput is an input type that accepts TimerTriggerInvokeResponseArgs and TimerTriggerInvokeResponseOutput values.
// You can construct a concrete instance of `TimerTriggerInvokeResponseInput` via:
//
//          TimerTriggerInvokeResponseArgs{...}
type TimerTriggerInvokeResponseInput interface {
	pulumi.Input

	ToTimerTriggerInvokeResponseOutput() TimerTriggerInvokeResponseOutput
	ToTimerTriggerInvokeResponseOutputWithContext(context.Context) TimerTriggerInvokeResponseOutput
}

// The properties of a timer trigger.
type TimerTriggerInvokeResponseArgs struct {
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The CRON expression for the task schedule
	Schedule pulumi.StringInput `pulumi:"schedule"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (TimerTriggerInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTriggerInvokeResponse)(nil)).Elem()
}

func (i TimerTriggerInvokeResponseArgs) ToTimerTriggerInvokeResponseOutput() TimerTriggerInvokeResponseOutput {
	return i.ToTimerTriggerInvokeResponseOutputWithContext(context.Background())
}

func (i TimerTriggerInvokeResponseArgs) ToTimerTriggerInvokeResponseOutputWithContext(ctx context.Context) TimerTriggerInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerInvokeResponseOutput)
}

// TimerTriggerInvokeResponseArrayInput is an input type that accepts TimerTriggerInvokeResponseArray and TimerTriggerInvokeResponseArrayOutput values.
// You can construct a concrete instance of `TimerTriggerInvokeResponseArrayInput` via:
//
//          TimerTriggerInvokeResponseArray{ TimerTriggerInvokeResponseArgs{...} }
type TimerTriggerInvokeResponseArrayInput interface {
	pulumi.Input

	ToTimerTriggerInvokeResponseArrayOutput() TimerTriggerInvokeResponseArrayOutput
	ToTimerTriggerInvokeResponseArrayOutputWithContext(context.Context) TimerTriggerInvokeResponseArrayOutput
}

type TimerTriggerInvokeResponseArray []TimerTriggerInvokeResponseInput

func (TimerTriggerInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimerTriggerInvokeResponse)(nil)).Elem()
}

func (i TimerTriggerInvokeResponseArray) ToTimerTriggerInvokeResponseArrayOutput() TimerTriggerInvokeResponseArrayOutput {
	return i.ToTimerTriggerInvokeResponseArrayOutputWithContext(context.Background())
}

func (i TimerTriggerInvokeResponseArray) ToTimerTriggerInvokeResponseArrayOutputWithContext(ctx context.Context) TimerTriggerInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerInvokeResponseArrayOutput)
}

// The properties of a timer trigger.
type TimerTriggerInvokeResponseOutput struct{ *pulumi.OutputState }

func (TimerTriggerInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTriggerInvokeResponse)(nil)).Elem()
}

func (o TimerTriggerInvokeResponseOutput) ToTimerTriggerInvokeResponseOutput() TimerTriggerInvokeResponseOutput {
	return o
}

func (o TimerTriggerInvokeResponseOutput) ToTimerTriggerInvokeResponseOutputWithContext(ctx context.Context) TimerTriggerInvokeResponseOutput {
	return o
}

// The name of the trigger.
func (o TimerTriggerInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TimerTriggerInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The CRON expression for the task schedule
func (o TimerTriggerInvokeResponseOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v TimerTriggerInvokeResponse) string { return v.Schedule }).(pulumi.StringOutput)
}

// The current status of trigger.
func (o TimerTriggerInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimerTriggerInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type TimerTriggerInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (TimerTriggerInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimerTriggerInvokeResponse)(nil)).Elem()
}

func (o TimerTriggerInvokeResponseArrayOutput) ToTimerTriggerInvokeResponseArrayOutput() TimerTriggerInvokeResponseArrayOutput {
	return o
}

func (o TimerTriggerInvokeResponseArrayOutput) ToTimerTriggerInvokeResponseArrayOutputWithContext(ctx context.Context) TimerTriggerInvokeResponseArrayOutput {
	return o
}

func (o TimerTriggerInvokeResponseArrayOutput) Index(i pulumi.IntInput) TimerTriggerInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimerTriggerInvokeResponse {
		return vs[0].([]TimerTriggerInvokeResponse)[vs[1].(int)]
	}).(TimerTriggerInvokeResponseOutput)
}

// The properties of a timer trigger.
type TimerTriggerResponse struct {
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The CRON expression for the task schedule
	Schedule string `pulumi:"schedule"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// TimerTriggerResponseInput is an input type that accepts TimerTriggerResponseArgs and TimerTriggerResponseOutput values.
// You can construct a concrete instance of `TimerTriggerResponseInput` via:
//
//          TimerTriggerResponseArgs{...}
type TimerTriggerResponseInput interface {
	pulumi.Input

	ToTimerTriggerResponseOutput() TimerTriggerResponseOutput
	ToTimerTriggerResponseOutputWithContext(context.Context) TimerTriggerResponseOutput
}

// The properties of a timer trigger.
type TimerTriggerResponseArgs struct {
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The CRON expression for the task schedule
	Schedule pulumi.StringInput `pulumi:"schedule"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (TimerTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTriggerResponse)(nil)).Elem()
}

func (i TimerTriggerResponseArgs) ToTimerTriggerResponseOutput() TimerTriggerResponseOutput {
	return i.ToTimerTriggerResponseOutputWithContext(context.Background())
}

func (i TimerTriggerResponseArgs) ToTimerTriggerResponseOutputWithContext(ctx context.Context) TimerTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerResponseOutput)
}

// TimerTriggerResponseArrayInput is an input type that accepts TimerTriggerResponseArray and TimerTriggerResponseArrayOutput values.
// You can construct a concrete instance of `TimerTriggerResponseArrayInput` via:
//
//          TimerTriggerResponseArray{ TimerTriggerResponseArgs{...} }
type TimerTriggerResponseArrayInput interface {
	pulumi.Input

	ToTimerTriggerResponseArrayOutput() TimerTriggerResponseArrayOutput
	ToTimerTriggerResponseArrayOutputWithContext(context.Context) TimerTriggerResponseArrayOutput
}

type TimerTriggerResponseArray []TimerTriggerResponseInput

func (TimerTriggerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimerTriggerResponse)(nil)).Elem()
}

func (i TimerTriggerResponseArray) ToTimerTriggerResponseArrayOutput() TimerTriggerResponseArrayOutput {
	return i.ToTimerTriggerResponseArrayOutputWithContext(context.Background())
}

func (i TimerTriggerResponseArray) ToTimerTriggerResponseArrayOutputWithContext(ctx context.Context) TimerTriggerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerResponseArrayOutput)
}

// The properties of a timer trigger.
type TimerTriggerResponseOutput struct{ *pulumi.OutputState }

func (TimerTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTriggerResponse)(nil)).Elem()
}

func (o TimerTriggerResponseOutput) ToTimerTriggerResponseOutput() TimerTriggerResponseOutput {
	return o
}

func (o TimerTriggerResponseOutput) ToTimerTriggerResponseOutputWithContext(ctx context.Context) TimerTriggerResponseOutput {
	return o
}

// The name of the trigger.
func (o TimerTriggerResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TimerTriggerResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The CRON expression for the task schedule
func (o TimerTriggerResponseOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v TimerTriggerResponse) string { return v.Schedule }).(pulumi.StringOutput)
}

// The current status of trigger.
func (o TimerTriggerResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimerTriggerResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type TimerTriggerResponseArrayOutput struct{ *pulumi.OutputState }

func (TimerTriggerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimerTriggerResponse)(nil)).Elem()
}

func (o TimerTriggerResponseArrayOutput) ToTimerTriggerResponseArrayOutput() TimerTriggerResponseArrayOutput {
	return o
}

func (o TimerTriggerResponseArrayOutput) ToTimerTriggerResponseArrayOutputWithContext(ctx context.Context) TimerTriggerResponseArrayOutput {
	return o
}

func (o TimerTriggerResponseArrayOutput) Index(i pulumi.IntInput) TimerTriggerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimerTriggerResponse {
		return vs[0].([]TimerTriggerResponse)[vs[1].(int)]
	}).(TimerTriggerResponseOutput)
}

// The properties of a trigger.
type TriggerProperties struct {
	// The trigger based on base image dependencies.
	BaseImageTrigger *BaseImageTrigger `pulumi:"baseImageTrigger"`
	// The collection of triggers based on source code repository.
	SourceTriggers []SourceTrigger `pulumi:"sourceTriggers"`
	// The collection of timer triggers.
	TimerTriggers []TimerTrigger `pulumi:"timerTriggers"`
}

// TriggerPropertiesInput is an input type that accepts TriggerPropertiesArgs and TriggerPropertiesOutput values.
// You can construct a concrete instance of `TriggerPropertiesInput` via:
//
//          TriggerPropertiesArgs{...}
type TriggerPropertiesInput interface {
	pulumi.Input

	ToTriggerPropertiesOutput() TriggerPropertiesOutput
	ToTriggerPropertiesOutputWithContext(context.Context) TriggerPropertiesOutput
}

// The properties of a trigger.
type TriggerPropertiesArgs struct {
	// The trigger based on base image dependencies.
	BaseImageTrigger BaseImageTriggerPtrInput `pulumi:"baseImageTrigger"`
	// The collection of triggers based on source code repository.
	SourceTriggers SourceTriggerArrayInput `pulumi:"sourceTriggers"`
	// The collection of timer triggers.
	TimerTriggers TimerTriggerArrayInput `pulumi:"timerTriggers"`
}

func (TriggerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerProperties)(nil)).Elem()
}

func (i TriggerPropertiesArgs) ToTriggerPropertiesOutput() TriggerPropertiesOutput {
	return i.ToTriggerPropertiesOutputWithContext(context.Background())
}

func (i TriggerPropertiesArgs) ToTriggerPropertiesOutputWithContext(ctx context.Context) TriggerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesOutput)
}

func (i TriggerPropertiesArgs) ToTriggerPropertiesPtrOutput() TriggerPropertiesPtrOutput {
	return i.ToTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (i TriggerPropertiesArgs) ToTriggerPropertiesPtrOutputWithContext(ctx context.Context) TriggerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesOutput).ToTriggerPropertiesPtrOutputWithContext(ctx)
}

// TriggerPropertiesPtrInput is an input type that accepts TriggerPropertiesArgs, TriggerPropertiesPtr and TriggerPropertiesPtrOutput values.
// You can construct a concrete instance of `TriggerPropertiesPtrInput` via:
//
//          TriggerPropertiesArgs{...}
//
//  or:
//
//          nil
type TriggerPropertiesPtrInput interface {
	pulumi.Input

	ToTriggerPropertiesPtrOutput() TriggerPropertiesPtrOutput
	ToTriggerPropertiesPtrOutputWithContext(context.Context) TriggerPropertiesPtrOutput
}

type triggerPropertiesPtrType TriggerPropertiesArgs

func TriggerPropertiesPtr(v *TriggerPropertiesArgs) TriggerPropertiesPtrInput {
	return (*triggerPropertiesPtrType)(v)
}

func (*triggerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerProperties)(nil)).Elem()
}

func (i *triggerPropertiesPtrType) ToTriggerPropertiesPtrOutput() TriggerPropertiesPtrOutput {
	return i.ToTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (i *triggerPropertiesPtrType) ToTriggerPropertiesPtrOutputWithContext(ctx context.Context) TriggerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesPtrOutput)
}

// The properties of a trigger.
type TriggerPropertiesOutput struct{ *pulumi.OutputState }

func (TriggerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerProperties)(nil)).Elem()
}

func (o TriggerPropertiesOutput) ToTriggerPropertiesOutput() TriggerPropertiesOutput {
	return o
}

func (o TriggerPropertiesOutput) ToTriggerPropertiesOutputWithContext(ctx context.Context) TriggerPropertiesOutput {
	return o
}

func (o TriggerPropertiesOutput) ToTriggerPropertiesPtrOutput() TriggerPropertiesPtrOutput {
	return o.ToTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (o TriggerPropertiesOutput) ToTriggerPropertiesPtrOutputWithContext(ctx context.Context) TriggerPropertiesPtrOutput {
	return o.ApplyT(func(v TriggerProperties) *TriggerProperties {
		return &v
	}).(TriggerPropertiesPtrOutput)
}

// The trigger based on base image dependencies.
func (o TriggerPropertiesOutput) BaseImageTrigger() BaseImageTriggerPtrOutput {
	return o.ApplyT(func(v TriggerProperties) *BaseImageTrigger { return v.BaseImageTrigger }).(BaseImageTriggerPtrOutput)
}

// The collection of triggers based on source code repository.
func (o TriggerPropertiesOutput) SourceTriggers() SourceTriggerArrayOutput {
	return o.ApplyT(func(v TriggerProperties) []SourceTrigger { return v.SourceTriggers }).(SourceTriggerArrayOutput)
}

// The collection of timer triggers.
func (o TriggerPropertiesOutput) TimerTriggers() TimerTriggerArrayOutput {
	return o.ApplyT(func(v TriggerProperties) []TimerTrigger { return v.TimerTriggers }).(TimerTriggerArrayOutput)
}

type TriggerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TriggerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerProperties)(nil)).Elem()
}

func (o TriggerPropertiesPtrOutput) ToTriggerPropertiesPtrOutput() TriggerPropertiesPtrOutput {
	return o
}

func (o TriggerPropertiesPtrOutput) ToTriggerPropertiesPtrOutputWithContext(ctx context.Context) TriggerPropertiesPtrOutput {
	return o
}

func (o TriggerPropertiesPtrOutput) Elem() TriggerPropertiesOutput {
	return o.ApplyT(func(v *TriggerProperties) TriggerProperties { return *v }).(TriggerPropertiesOutput)
}

// The trigger based on base image dependencies.
func (o TriggerPropertiesPtrOutput) BaseImageTrigger() BaseImageTriggerPtrOutput {
	return o.ApplyT(func(v *TriggerProperties) *BaseImageTrigger {
		if v == nil {
			return nil
		}
		return v.BaseImageTrigger
	}).(BaseImageTriggerPtrOutput)
}

// The collection of triggers based on source code repository.
func (o TriggerPropertiesPtrOutput) SourceTriggers() SourceTriggerArrayOutput {
	return o.ApplyT(func(v *TriggerProperties) []SourceTrigger {
		if v == nil {
			return nil
		}
		return v.SourceTriggers
	}).(SourceTriggerArrayOutput)
}

// The collection of timer triggers.
func (o TriggerPropertiesPtrOutput) TimerTriggers() TimerTriggerArrayOutput {
	return o.ApplyT(func(v *TriggerProperties) []TimerTrigger {
		if v == nil {
			return nil
		}
		return v.TimerTriggers
	}).(TimerTriggerArrayOutput)
}

// The properties of a trigger.
type TriggerPropertiesInvokeResponse struct {
	// The trigger based on base image dependencies.
	BaseImageTrigger *BaseImageTriggerInvokeResponse `pulumi:"baseImageTrigger"`
	// The collection of triggers based on source code repository.
	SourceTriggers []SourceTriggerInvokeResponse `pulumi:"sourceTriggers"`
	// The collection of timer triggers.
	TimerTriggers []TimerTriggerInvokeResponse `pulumi:"timerTriggers"`
}

// TriggerPropertiesInvokeResponseInput is an input type that accepts TriggerPropertiesInvokeResponseArgs and TriggerPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `TriggerPropertiesInvokeResponseInput` via:
//
//          TriggerPropertiesInvokeResponseArgs{...}
type TriggerPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToTriggerPropertiesInvokeResponseOutput() TriggerPropertiesInvokeResponseOutput
	ToTriggerPropertiesInvokeResponseOutputWithContext(context.Context) TriggerPropertiesInvokeResponseOutput
}

// The properties of a trigger.
type TriggerPropertiesInvokeResponseArgs struct {
	// The trigger based on base image dependencies.
	BaseImageTrigger BaseImageTriggerInvokeResponsePtrInput `pulumi:"baseImageTrigger"`
	// The collection of triggers based on source code repository.
	SourceTriggers SourceTriggerInvokeResponseArrayInput `pulumi:"sourceTriggers"`
	// The collection of timer triggers.
	TimerTriggers TimerTriggerInvokeResponseArrayInput `pulumi:"timerTriggers"`
}

func (TriggerPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPropertiesInvokeResponse)(nil)).Elem()
}

func (i TriggerPropertiesInvokeResponseArgs) ToTriggerPropertiesInvokeResponseOutput() TriggerPropertiesInvokeResponseOutput {
	return i.ToTriggerPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i TriggerPropertiesInvokeResponseArgs) ToTriggerPropertiesInvokeResponseOutputWithContext(ctx context.Context) TriggerPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesInvokeResponseOutput)
}

// The properties of a trigger.
type TriggerPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (TriggerPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPropertiesInvokeResponse)(nil)).Elem()
}

func (o TriggerPropertiesInvokeResponseOutput) ToTriggerPropertiesInvokeResponseOutput() TriggerPropertiesInvokeResponseOutput {
	return o
}

func (o TriggerPropertiesInvokeResponseOutput) ToTriggerPropertiesInvokeResponseOutputWithContext(ctx context.Context) TriggerPropertiesInvokeResponseOutput {
	return o
}

// The trigger based on base image dependencies.
func (o TriggerPropertiesInvokeResponseOutput) BaseImageTrigger() BaseImageTriggerInvokeResponsePtrOutput {
	return o.ApplyT(func(v TriggerPropertiesInvokeResponse) *BaseImageTriggerInvokeResponse { return v.BaseImageTrigger }).(BaseImageTriggerInvokeResponsePtrOutput)
}

// The collection of triggers based on source code repository.
func (o TriggerPropertiesInvokeResponseOutput) SourceTriggers() SourceTriggerInvokeResponseArrayOutput {
	return o.ApplyT(func(v TriggerPropertiesInvokeResponse) []SourceTriggerInvokeResponse { return v.SourceTriggers }).(SourceTriggerInvokeResponseArrayOutput)
}

// The collection of timer triggers.
func (o TriggerPropertiesInvokeResponseOutput) TimerTriggers() TimerTriggerInvokeResponseArrayOutput {
	return o.ApplyT(func(v TriggerPropertiesInvokeResponse) []TimerTriggerInvokeResponse { return v.TimerTriggers }).(TimerTriggerInvokeResponseArrayOutput)
}

// The properties of a trigger.
type TriggerPropertiesResponse struct {
	// The trigger based on base image dependencies.
	BaseImageTrigger *BaseImageTriggerResponse `pulumi:"baseImageTrigger"`
	// The collection of triggers based on source code repository.
	SourceTriggers []SourceTriggerResponse `pulumi:"sourceTriggers"`
	// The collection of timer triggers.
	TimerTriggers []TimerTriggerResponse `pulumi:"timerTriggers"`
}

// TriggerPropertiesResponseInput is an input type that accepts TriggerPropertiesResponseArgs and TriggerPropertiesResponseOutput values.
// You can construct a concrete instance of `TriggerPropertiesResponseInput` via:
//
//          TriggerPropertiesResponseArgs{...}
type TriggerPropertiesResponseInput interface {
	pulumi.Input

	ToTriggerPropertiesResponseOutput() TriggerPropertiesResponseOutput
	ToTriggerPropertiesResponseOutputWithContext(context.Context) TriggerPropertiesResponseOutput
}

// The properties of a trigger.
type TriggerPropertiesResponseArgs struct {
	// The trigger based on base image dependencies.
	BaseImageTrigger BaseImageTriggerResponsePtrInput `pulumi:"baseImageTrigger"`
	// The collection of triggers based on source code repository.
	SourceTriggers SourceTriggerResponseArrayInput `pulumi:"sourceTriggers"`
	// The collection of timer triggers.
	TimerTriggers TimerTriggerResponseArrayInput `pulumi:"timerTriggers"`
}

func (TriggerPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPropertiesResponse)(nil)).Elem()
}

func (i TriggerPropertiesResponseArgs) ToTriggerPropertiesResponseOutput() TriggerPropertiesResponseOutput {
	return i.ToTriggerPropertiesResponseOutputWithContext(context.Background())
}

func (i TriggerPropertiesResponseArgs) ToTriggerPropertiesResponseOutputWithContext(ctx context.Context) TriggerPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesResponseOutput)
}

func (i TriggerPropertiesResponseArgs) ToTriggerPropertiesResponsePtrOutput() TriggerPropertiesResponsePtrOutput {
	return i.ToTriggerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i TriggerPropertiesResponseArgs) ToTriggerPropertiesResponsePtrOutputWithContext(ctx context.Context) TriggerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesResponseOutput).ToTriggerPropertiesResponsePtrOutputWithContext(ctx)
}

// TriggerPropertiesResponsePtrInput is an input type that accepts TriggerPropertiesResponseArgs, TriggerPropertiesResponsePtr and TriggerPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `TriggerPropertiesResponsePtrInput` via:
//
//          TriggerPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type TriggerPropertiesResponsePtrInput interface {
	pulumi.Input

	ToTriggerPropertiesResponsePtrOutput() TriggerPropertiesResponsePtrOutput
	ToTriggerPropertiesResponsePtrOutputWithContext(context.Context) TriggerPropertiesResponsePtrOutput
}

type triggerPropertiesResponsePtrType TriggerPropertiesResponseArgs

func TriggerPropertiesResponsePtr(v *TriggerPropertiesResponseArgs) TriggerPropertiesResponsePtrInput {
	return (*triggerPropertiesResponsePtrType)(v)
}

func (*triggerPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerPropertiesResponse)(nil)).Elem()
}

func (i *triggerPropertiesResponsePtrType) ToTriggerPropertiesResponsePtrOutput() TriggerPropertiesResponsePtrOutput {
	return i.ToTriggerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *triggerPropertiesResponsePtrType) ToTriggerPropertiesResponsePtrOutputWithContext(ctx context.Context) TriggerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesResponsePtrOutput)
}

// The properties of a trigger.
type TriggerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TriggerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPropertiesResponse)(nil)).Elem()
}

func (o TriggerPropertiesResponseOutput) ToTriggerPropertiesResponseOutput() TriggerPropertiesResponseOutput {
	return o
}

func (o TriggerPropertiesResponseOutput) ToTriggerPropertiesResponseOutputWithContext(ctx context.Context) TriggerPropertiesResponseOutput {
	return o
}

func (o TriggerPropertiesResponseOutput) ToTriggerPropertiesResponsePtrOutput() TriggerPropertiesResponsePtrOutput {
	return o.ToTriggerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o TriggerPropertiesResponseOutput) ToTriggerPropertiesResponsePtrOutputWithContext(ctx context.Context) TriggerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TriggerPropertiesResponse) *TriggerPropertiesResponse {
		return &v
	}).(TriggerPropertiesResponsePtrOutput)
}

// The trigger based on base image dependencies.
func (o TriggerPropertiesResponseOutput) BaseImageTrigger() BaseImageTriggerResponsePtrOutput {
	return o.ApplyT(func(v TriggerPropertiesResponse) *BaseImageTriggerResponse { return v.BaseImageTrigger }).(BaseImageTriggerResponsePtrOutput)
}

// The collection of triggers based on source code repository.
func (o TriggerPropertiesResponseOutput) SourceTriggers() SourceTriggerResponseArrayOutput {
	return o.ApplyT(func(v TriggerPropertiesResponse) []SourceTriggerResponse { return v.SourceTriggers }).(SourceTriggerResponseArrayOutput)
}

// The collection of timer triggers.
func (o TriggerPropertiesResponseOutput) TimerTriggers() TimerTriggerResponseArrayOutput {
	return o.ApplyT(func(v TriggerPropertiesResponse) []TimerTriggerResponse { return v.TimerTriggers }).(TimerTriggerResponseArrayOutput)
}

type TriggerPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TriggerPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerPropertiesResponse)(nil)).Elem()
}

func (o TriggerPropertiesResponsePtrOutput) ToTriggerPropertiesResponsePtrOutput() TriggerPropertiesResponsePtrOutput {
	return o
}

func (o TriggerPropertiesResponsePtrOutput) ToTriggerPropertiesResponsePtrOutputWithContext(ctx context.Context) TriggerPropertiesResponsePtrOutput {
	return o
}

func (o TriggerPropertiesResponsePtrOutput) Elem() TriggerPropertiesResponseOutput {
	return o.ApplyT(func(v *TriggerPropertiesResponse) TriggerPropertiesResponse { return *v }).(TriggerPropertiesResponseOutput)
}

// The trigger based on base image dependencies.
func (o TriggerPropertiesResponsePtrOutput) BaseImageTrigger() BaseImageTriggerResponsePtrOutput {
	return o.ApplyT(func(v *TriggerPropertiesResponse) *BaseImageTriggerResponse {
		if v == nil {
			return nil
		}
		return v.BaseImageTrigger
	}).(BaseImageTriggerResponsePtrOutput)
}

// The collection of triggers based on source code repository.
func (o TriggerPropertiesResponsePtrOutput) SourceTriggers() SourceTriggerResponseArrayOutput {
	return o.ApplyT(func(v *TriggerPropertiesResponse) []SourceTriggerResponse {
		if v == nil {
			return nil
		}
		return v.SourceTriggers
	}).(SourceTriggerResponseArrayOutput)
}

// The collection of timer triggers.
func (o TriggerPropertiesResponsePtrOutput) TimerTriggers() TimerTriggerResponseArrayOutput {
	return o.ApplyT(func(v *TriggerPropertiesResponse) []TimerTriggerResponse {
		if v == nil {
			return nil
		}
		return v.TimerTriggers
	}).(TimerTriggerResponseArrayOutput)
}

type UserIdentityProperties struct {
	// The client id of user assigned identity.
	ClientId *string `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId *string `pulumi:"principalId"`
}

// UserIdentityPropertiesInput is an input type that accepts UserIdentityPropertiesArgs and UserIdentityPropertiesOutput values.
// You can construct a concrete instance of `UserIdentityPropertiesInput` via:
//
//          UserIdentityPropertiesArgs{...}
type UserIdentityPropertiesInput interface {
	pulumi.Input

	ToUserIdentityPropertiesOutput() UserIdentityPropertiesOutput
	ToUserIdentityPropertiesOutputWithContext(context.Context) UserIdentityPropertiesOutput
}

type UserIdentityPropertiesArgs struct {
	// The client id of user assigned identity.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
}

func (UserIdentityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityProperties)(nil)).Elem()
}

func (i UserIdentityPropertiesArgs) ToUserIdentityPropertiesOutput() UserIdentityPropertiesOutput {
	return i.ToUserIdentityPropertiesOutputWithContext(context.Background())
}

func (i UserIdentityPropertiesArgs) ToUserIdentityPropertiesOutputWithContext(ctx context.Context) UserIdentityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityPropertiesOutput)
}

// UserIdentityPropertiesMapInput is an input type that accepts UserIdentityPropertiesMap and UserIdentityPropertiesMapOutput values.
// You can construct a concrete instance of `UserIdentityPropertiesMapInput` via:
//
//          UserIdentityPropertiesMap{ "key": UserIdentityPropertiesArgs{...} }
type UserIdentityPropertiesMapInput interface {
	pulumi.Input

	ToUserIdentityPropertiesMapOutput() UserIdentityPropertiesMapOutput
	ToUserIdentityPropertiesMapOutputWithContext(context.Context) UserIdentityPropertiesMapOutput
}

type UserIdentityPropertiesMap map[string]UserIdentityPropertiesInput

func (UserIdentityPropertiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityProperties)(nil)).Elem()
}

func (i UserIdentityPropertiesMap) ToUserIdentityPropertiesMapOutput() UserIdentityPropertiesMapOutput {
	return i.ToUserIdentityPropertiesMapOutputWithContext(context.Background())
}

func (i UserIdentityPropertiesMap) ToUserIdentityPropertiesMapOutputWithContext(ctx context.Context) UserIdentityPropertiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityPropertiesMapOutput)
}

type UserIdentityPropertiesOutput struct{ *pulumi.OutputState }

func (UserIdentityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityProperties)(nil)).Elem()
}

func (o UserIdentityPropertiesOutput) ToUserIdentityPropertiesOutput() UserIdentityPropertiesOutput {
	return o
}

func (o UserIdentityPropertiesOutput) ToUserIdentityPropertiesOutputWithContext(ctx context.Context) UserIdentityPropertiesOutput {
	return o
}

// The client id of user assigned identity.
func (o UserIdentityPropertiesOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityProperties) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The principal id of user assigned identity.
func (o UserIdentityPropertiesOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityProperties) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

type UserIdentityPropertiesMapOutput struct{ *pulumi.OutputState }

func (UserIdentityPropertiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityProperties)(nil)).Elem()
}

func (o UserIdentityPropertiesMapOutput) ToUserIdentityPropertiesMapOutput() UserIdentityPropertiesMapOutput {
	return o
}

func (o UserIdentityPropertiesMapOutput) ToUserIdentityPropertiesMapOutputWithContext(ctx context.Context) UserIdentityPropertiesMapOutput {
	return o
}

func (o UserIdentityPropertiesMapOutput) MapIndex(k pulumi.StringInput) UserIdentityPropertiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserIdentityProperties {
		return vs[0].(map[string]UserIdentityProperties)[vs[1].(string)]
	}).(UserIdentityPropertiesOutput)
}

type UserIdentityPropertiesInvokeResponse struct {
	// The client id of user assigned identity.
	ClientId *string `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId *string `pulumi:"principalId"`
}

// UserIdentityPropertiesInvokeResponseInput is an input type that accepts UserIdentityPropertiesInvokeResponseArgs and UserIdentityPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `UserIdentityPropertiesInvokeResponseInput` via:
//
//          UserIdentityPropertiesInvokeResponseArgs{...}
type UserIdentityPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToUserIdentityPropertiesInvokeResponseOutput() UserIdentityPropertiesInvokeResponseOutput
	ToUserIdentityPropertiesInvokeResponseOutputWithContext(context.Context) UserIdentityPropertiesInvokeResponseOutput
}

type UserIdentityPropertiesInvokeResponseArgs struct {
	// The client id of user assigned identity.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
}

func (UserIdentityPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityPropertiesInvokeResponse)(nil)).Elem()
}

func (i UserIdentityPropertiesInvokeResponseArgs) ToUserIdentityPropertiesInvokeResponseOutput() UserIdentityPropertiesInvokeResponseOutput {
	return i.ToUserIdentityPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i UserIdentityPropertiesInvokeResponseArgs) ToUserIdentityPropertiesInvokeResponseOutputWithContext(ctx context.Context) UserIdentityPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityPropertiesInvokeResponseOutput)
}

// UserIdentityPropertiesInvokeResponseMapInput is an input type that accepts UserIdentityPropertiesInvokeResponseMap and UserIdentityPropertiesInvokeResponseMapOutput values.
// You can construct a concrete instance of `UserIdentityPropertiesInvokeResponseMapInput` via:
//
//          UserIdentityPropertiesInvokeResponseMap{ "key": UserIdentityPropertiesInvokeResponseArgs{...} }
type UserIdentityPropertiesInvokeResponseMapInput interface {
	pulumi.Input

	ToUserIdentityPropertiesInvokeResponseMapOutput() UserIdentityPropertiesInvokeResponseMapOutput
	ToUserIdentityPropertiesInvokeResponseMapOutputWithContext(context.Context) UserIdentityPropertiesInvokeResponseMapOutput
}

type UserIdentityPropertiesInvokeResponseMap map[string]UserIdentityPropertiesInvokeResponseInput

func (UserIdentityPropertiesInvokeResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityPropertiesInvokeResponse)(nil)).Elem()
}

func (i UserIdentityPropertiesInvokeResponseMap) ToUserIdentityPropertiesInvokeResponseMapOutput() UserIdentityPropertiesInvokeResponseMapOutput {
	return i.ToUserIdentityPropertiesInvokeResponseMapOutputWithContext(context.Background())
}

func (i UserIdentityPropertiesInvokeResponseMap) ToUserIdentityPropertiesInvokeResponseMapOutputWithContext(ctx context.Context) UserIdentityPropertiesInvokeResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityPropertiesInvokeResponseMapOutput)
}

type UserIdentityPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (UserIdentityPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityPropertiesInvokeResponse)(nil)).Elem()
}

func (o UserIdentityPropertiesInvokeResponseOutput) ToUserIdentityPropertiesInvokeResponseOutput() UserIdentityPropertiesInvokeResponseOutput {
	return o
}

func (o UserIdentityPropertiesInvokeResponseOutput) ToUserIdentityPropertiesInvokeResponseOutputWithContext(ctx context.Context) UserIdentityPropertiesInvokeResponseOutput {
	return o
}

// The client id of user assigned identity.
func (o UserIdentityPropertiesInvokeResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityPropertiesInvokeResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The principal id of user assigned identity.
func (o UserIdentityPropertiesInvokeResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityPropertiesInvokeResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

type UserIdentityPropertiesInvokeResponseMapOutput struct{ *pulumi.OutputState }

func (UserIdentityPropertiesInvokeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityPropertiesInvokeResponse)(nil)).Elem()
}

func (o UserIdentityPropertiesInvokeResponseMapOutput) ToUserIdentityPropertiesInvokeResponseMapOutput() UserIdentityPropertiesInvokeResponseMapOutput {
	return o
}

func (o UserIdentityPropertiesInvokeResponseMapOutput) ToUserIdentityPropertiesInvokeResponseMapOutputWithContext(ctx context.Context) UserIdentityPropertiesInvokeResponseMapOutput {
	return o
}

func (o UserIdentityPropertiesInvokeResponseMapOutput) MapIndex(k pulumi.StringInput) UserIdentityPropertiesInvokeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserIdentityPropertiesInvokeResponse {
		return vs[0].(map[string]UserIdentityPropertiesInvokeResponse)[vs[1].(string)]
	}).(UserIdentityPropertiesInvokeResponseOutput)
}

type UserIdentityPropertiesResponse struct {
	// The client id of user assigned identity.
	ClientId *string `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId *string `pulumi:"principalId"`
}

// UserIdentityPropertiesResponseInput is an input type that accepts UserIdentityPropertiesResponseArgs and UserIdentityPropertiesResponseOutput values.
// You can construct a concrete instance of `UserIdentityPropertiesResponseInput` via:
//
//          UserIdentityPropertiesResponseArgs{...}
type UserIdentityPropertiesResponseInput interface {
	pulumi.Input

	ToUserIdentityPropertiesResponseOutput() UserIdentityPropertiesResponseOutput
	ToUserIdentityPropertiesResponseOutputWithContext(context.Context) UserIdentityPropertiesResponseOutput
}

type UserIdentityPropertiesResponseArgs struct {
	// The client id of user assigned identity.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
}

func (UserIdentityPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityPropertiesResponse)(nil)).Elem()
}

func (i UserIdentityPropertiesResponseArgs) ToUserIdentityPropertiesResponseOutput() UserIdentityPropertiesResponseOutput {
	return i.ToUserIdentityPropertiesResponseOutputWithContext(context.Background())
}

func (i UserIdentityPropertiesResponseArgs) ToUserIdentityPropertiesResponseOutputWithContext(ctx context.Context) UserIdentityPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityPropertiesResponseOutput)
}

// UserIdentityPropertiesResponseMapInput is an input type that accepts UserIdentityPropertiesResponseMap and UserIdentityPropertiesResponseMapOutput values.
// You can construct a concrete instance of `UserIdentityPropertiesResponseMapInput` via:
//
//          UserIdentityPropertiesResponseMap{ "key": UserIdentityPropertiesResponseArgs{...} }
type UserIdentityPropertiesResponseMapInput interface {
	pulumi.Input

	ToUserIdentityPropertiesResponseMapOutput() UserIdentityPropertiesResponseMapOutput
	ToUserIdentityPropertiesResponseMapOutputWithContext(context.Context) UserIdentityPropertiesResponseMapOutput
}

type UserIdentityPropertiesResponseMap map[string]UserIdentityPropertiesResponseInput

func (UserIdentityPropertiesResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityPropertiesResponse)(nil)).Elem()
}

func (i UserIdentityPropertiesResponseMap) ToUserIdentityPropertiesResponseMapOutput() UserIdentityPropertiesResponseMapOutput {
	return i.ToUserIdentityPropertiesResponseMapOutputWithContext(context.Background())
}

func (i UserIdentityPropertiesResponseMap) ToUserIdentityPropertiesResponseMapOutputWithContext(ctx context.Context) UserIdentityPropertiesResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityPropertiesResponseMapOutput)
}

type UserIdentityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (UserIdentityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityPropertiesResponse)(nil)).Elem()
}

func (o UserIdentityPropertiesResponseOutput) ToUserIdentityPropertiesResponseOutput() UserIdentityPropertiesResponseOutput {
	return o
}

func (o UserIdentityPropertiesResponseOutput) ToUserIdentityPropertiesResponseOutputWithContext(ctx context.Context) UserIdentityPropertiesResponseOutput {
	return o
}

// The client id of user assigned identity.
func (o UserIdentityPropertiesResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityPropertiesResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The principal id of user assigned identity.
func (o UserIdentityPropertiesResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityPropertiesResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

type UserIdentityPropertiesResponseMapOutput struct{ *pulumi.OutputState }

func (UserIdentityPropertiesResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityPropertiesResponse)(nil)).Elem()
}

func (o UserIdentityPropertiesResponseMapOutput) ToUserIdentityPropertiesResponseMapOutput() UserIdentityPropertiesResponseMapOutput {
	return o
}

func (o UserIdentityPropertiesResponseMapOutput) ToUserIdentityPropertiesResponseMapOutputWithContext(ctx context.Context) UserIdentityPropertiesResponseMapOutput {
	return o
}

func (o UserIdentityPropertiesResponseMapOutput) MapIndex(k pulumi.StringInput) UserIdentityPropertiesResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserIdentityPropertiesResponse {
		return vs[0].(map[string]UserIdentityPropertiesResponse)[vs[1].(string)]
	}).(UserIdentityPropertiesResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AgentPropertiesOutput{})
	pulumi.RegisterOutputType(AgentPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AgentPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(AgentPropertiesInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(AgentPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AgentPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ArgumentOutput{})
	pulumi.RegisterOutputType(ArgumentArrayOutput{})
	pulumi.RegisterOutputType(ArgumentInvokeResponseOutput{})
	pulumi.RegisterOutputType(ArgumentInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ArgumentResponseOutput{})
	pulumi.RegisterOutputType(ArgumentResponseArrayOutput{})
	pulumi.RegisterOutputType(AuthInfoOutput{})
	pulumi.RegisterOutputType(AuthInfoPtrOutput{})
	pulumi.RegisterOutputType(AuthInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(AuthInfoInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(AuthInfoResponseOutput{})
	pulumi.RegisterOutputType(AuthInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(BaseImageDependencyInvokeResponseOutput{})
	pulumi.RegisterOutputType(BaseImageDependencyInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(BaseImageDependencyResponseOutput{})
	pulumi.RegisterOutputType(BaseImageDependencyResponseArrayOutput{})
	pulumi.RegisterOutputType(BaseImageTriggerOutput{})
	pulumi.RegisterOutputType(BaseImageTriggerPtrOutput{})
	pulumi.RegisterOutputType(BaseImageTriggerInvokeResponseOutput{})
	pulumi.RegisterOutputType(BaseImageTriggerInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(BaseImageTriggerResponseOutput{})
	pulumi.RegisterOutputType(BaseImageTriggerResponsePtrOutput{})
	pulumi.RegisterOutputType(CredentialsOutput{})
	pulumi.RegisterOutputType(CredentialsPtrOutput{})
	pulumi.RegisterOutputType(CredentialsInvokeResponseOutput{})
	pulumi.RegisterOutputType(CredentialsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(CredentialsResponseOutput{})
	pulumi.RegisterOutputType(CredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomRegistryCredentialsOutput{})
	pulumi.RegisterOutputType(CustomRegistryCredentialsMapOutput{})
	pulumi.RegisterOutputType(CustomRegistryCredentialsInvokeResponseOutput{})
	pulumi.RegisterOutputType(CustomRegistryCredentialsInvokeResponseMapOutput{})
	pulumi.RegisterOutputType(CustomRegistryCredentialsResponseOutput{})
	pulumi.RegisterOutputType(CustomRegistryCredentialsResponseMapOutput{})
	pulumi.RegisterOutputType(DockerBuildRequestOutput{})
	pulumi.RegisterOutputType(DockerBuildRequestInvokeResponseOutput{})
	pulumi.RegisterOutputType(DockerBuildRequestResponseOutput{})
	pulumi.RegisterOutputType(DockerBuildStepOutput{})
	pulumi.RegisterOutputType(DockerBuildStepInvokeResponseOutput{})
	pulumi.RegisterOutputType(DockerBuildStepResponseOutput{})
	pulumi.RegisterOutputType(EncodedTaskRunRequestOutput{})
	pulumi.RegisterOutputType(EncodedTaskRunRequestInvokeResponseOutput{})
	pulumi.RegisterOutputType(EncodedTaskRunRequestResponseOutput{})
	pulumi.RegisterOutputType(EncodedTaskStepOutput{})
	pulumi.RegisterOutputType(EncodedTaskStepInvokeResponseOutput{})
	pulumi.RegisterOutputType(EncodedTaskStepResponseOutput{})
	pulumi.RegisterOutputType(FileTaskRunRequestOutput{})
	pulumi.RegisterOutputType(FileTaskRunRequestInvokeResponseOutput{})
	pulumi.RegisterOutputType(FileTaskRunRequestResponseOutput{})
	pulumi.RegisterOutputType(FileTaskStepOutput{})
	pulumi.RegisterOutputType(FileTaskStepInvokeResponseOutput{})
	pulumi.RegisterOutputType(FileTaskStepResponseOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ImageDescriptorInvokeResponseOutput{})
	pulumi.RegisterOutputType(ImageDescriptorInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ImageDescriptorResponseOutput{})
	pulumi.RegisterOutputType(ImageDescriptorResponsePtrOutput{})
	pulumi.RegisterOutputType(ImageDescriptorResponseArrayOutput{})
	pulumi.RegisterOutputType(ImageUpdateTriggerInvokeResponseOutput{})
	pulumi.RegisterOutputType(ImageUpdateTriggerInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ImageUpdateTriggerResponseOutput{})
	pulumi.RegisterOutputType(ImageUpdateTriggerResponsePtrOutput{})
	pulumi.RegisterOutputType(OverrideTaskStepPropertiesOutput{})
	pulumi.RegisterOutputType(OverrideTaskStepPropertiesPtrOutput{})
	pulumi.RegisterOutputType(OverrideTaskStepPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(OverrideTaskStepPropertiesInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(OverrideTaskStepPropertiesResponseOutput{})
	pulumi.RegisterOutputType(OverrideTaskStepPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PlatformPropertiesOutput{})
	pulumi.RegisterOutputType(PlatformPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PlatformPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(PlatformPropertiesInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(PlatformPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PlatformPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(RunInvokeResponseOutput{})
	pulumi.RegisterOutputType(RunResponseOutput{})
	pulumi.RegisterOutputType(RunResponsePtrOutput{})
	pulumi.RegisterOutputType(SecretObjectOutput{})
	pulumi.RegisterOutputType(SecretObjectPtrOutput{})
	pulumi.RegisterOutputType(SecretObjectInvokeResponseOutput{})
	pulumi.RegisterOutputType(SecretObjectInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SecretObjectResponseOutput{})
	pulumi.RegisterOutputType(SecretObjectResponsePtrOutput{})
	pulumi.RegisterOutputType(SetValueOutput{})
	pulumi.RegisterOutputType(SetValueArrayOutput{})
	pulumi.RegisterOutputType(SetValueInvokeResponseOutput{})
	pulumi.RegisterOutputType(SetValueInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SetValueResponseOutput{})
	pulumi.RegisterOutputType(SetValueResponseArrayOutput{})
	pulumi.RegisterOutputType(SourcePropertiesOutput{})
	pulumi.RegisterOutputType(SourcePropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(SourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SourceRegistryCredentialsOutput{})
	pulumi.RegisterOutputType(SourceRegistryCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SourceRegistryCredentialsInvokeResponseOutput{})
	pulumi.RegisterOutputType(SourceRegistryCredentialsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SourceRegistryCredentialsResponseOutput{})
	pulumi.RegisterOutputType(SourceRegistryCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(SourceTriggerOutput{})
	pulumi.RegisterOutputType(SourceTriggerArrayOutput{})
	pulumi.RegisterOutputType(SourceTriggerDescriptorInvokeResponseOutput{})
	pulumi.RegisterOutputType(SourceTriggerDescriptorInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SourceTriggerDescriptorResponseOutput{})
	pulumi.RegisterOutputType(SourceTriggerDescriptorResponsePtrOutput{})
	pulumi.RegisterOutputType(SourceTriggerInvokeResponseOutput{})
	pulumi.RegisterOutputType(SourceTriggerInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SourceTriggerResponseOutput{})
	pulumi.RegisterOutputType(SourceTriggerResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataInvokeResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponsePtrOutput{})
	pulumi.RegisterOutputType(TaskRunRequestOutput{})
	pulumi.RegisterOutputType(TaskRunRequestInvokeResponseOutput{})
	pulumi.RegisterOutputType(TaskRunRequestResponseOutput{})
	pulumi.RegisterOutputType(TimerTriggerOutput{})
	pulumi.RegisterOutputType(TimerTriggerArrayOutput{})
	pulumi.RegisterOutputType(TimerTriggerDescriptorInvokeResponseOutput{})
	pulumi.RegisterOutputType(TimerTriggerDescriptorInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(TimerTriggerDescriptorResponseOutput{})
	pulumi.RegisterOutputType(TimerTriggerDescriptorResponsePtrOutput{})
	pulumi.RegisterOutputType(TimerTriggerInvokeResponseOutput{})
	pulumi.RegisterOutputType(TimerTriggerInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(TimerTriggerResponseOutput{})
	pulumi.RegisterOutputType(TimerTriggerResponseArrayOutput{})
	pulumi.RegisterOutputType(TriggerPropertiesOutput{})
	pulumi.RegisterOutputType(TriggerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TriggerPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(TriggerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TriggerPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(UserIdentityPropertiesOutput{})
	pulumi.RegisterOutputType(UserIdentityPropertiesMapOutput{})
	pulumi.RegisterOutputType(UserIdentityPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(UserIdentityPropertiesInvokeResponseMapOutput{})
	pulumi.RegisterOutputType(UserIdentityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(UserIdentityPropertiesResponseMapOutput{})
}
