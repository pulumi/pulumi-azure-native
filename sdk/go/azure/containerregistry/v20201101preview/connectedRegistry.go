// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20201101preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An object that represents a connected registry for a container registry.
type ConnectedRegistry struct {
	pulumi.CustomResourceState

	// The activation properties of the connected registry.
	Activation ActivationPropertiesResponseOutput `pulumi:"activation"`
	// The list of the ACR token resource IDs used to authenticate clients to the connected registry.
	ClientTokenIds pulumi.StringArrayOutput `pulumi:"clientTokenIds"`
	// The current connection state of the connected registry.
	ConnectionState pulumi.StringOutput `pulumi:"connectionState"`
	// The last activity time of the connected registry.
	LastActivityTime pulumi.StringOutput `pulumi:"lastActivityTime"`
	// The logging properties of the connected registry.
	Logging LoggingPropertiesResponsePtrOutput `pulumi:"logging"`
	// The login server properties of the connected registry.
	LoginServer LoginServerPropertiesResponsePtrOutput `pulumi:"loginServer"`
	// The mode of the connected registry resource that indicates the permissions of the registry.
	Mode pulumi.StringOutput `pulumi:"mode"`
	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The parent of the connected registry.
	Parent ParentPropertiesResponseOutput `pulumi:"parent"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The list of current statuses of the connected registry.
	StatusDetails StatusDetailPropertiesResponseArrayOutput `pulumi:"statusDetails"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
	// The current version of ACR runtime on the connected registry.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewConnectedRegistry registers a new resource with the given unique name, arguments, and options.
func NewConnectedRegistry(ctx *pulumi.Context,
	name string, args *ConnectedRegistryArgs, opts ...pulumi.ResourceOption) (*ConnectedRegistry, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectedRegistryName == nil {
		return nil, errors.New("invalid value for required argument 'ConnectedRegistryName'")
	}
	if args.Mode == nil {
		return nil, errors.New("invalid value for required argument 'Mode'")
	}
	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	if args.RegistryName == nil {
		return nil, errors.New("invalid value for required argument 'RegistryName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:containerregistry:ConnectedRegistry"),
		},
	})
	opts = append(opts, aliases)
	var resource ConnectedRegistry
	err := ctx.RegisterResource("azure-nextgen:containerregistry/v20201101preview:ConnectedRegistry", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectedRegistry gets an existing ConnectedRegistry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectedRegistry(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectedRegistryState, opts ...pulumi.ResourceOption) (*ConnectedRegistry, error) {
	var resource ConnectedRegistry
	err := ctx.ReadResource("azure-nextgen:containerregistry/v20201101preview:ConnectedRegistry", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectedRegistry resources.
type connectedRegistryState struct {
	// The activation properties of the connected registry.
	Activation *ActivationPropertiesResponse `pulumi:"activation"`
	// The list of the ACR token resource IDs used to authenticate clients to the connected registry.
	ClientTokenIds []string `pulumi:"clientTokenIds"`
	// The current connection state of the connected registry.
	ConnectionState *string `pulumi:"connectionState"`
	// The last activity time of the connected registry.
	LastActivityTime *string `pulumi:"lastActivityTime"`
	// The logging properties of the connected registry.
	Logging *LoggingPropertiesResponse `pulumi:"logging"`
	// The login server properties of the connected registry.
	LoginServer *LoginServerPropertiesResponse `pulumi:"loginServer"`
	// The mode of the connected registry resource that indicates the permissions of the registry.
	Mode *string `pulumi:"mode"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// The parent of the connected registry.
	Parent *ParentPropertiesResponse `pulumi:"parent"`
	// Provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The list of current statuses of the connected registry.
	StatusDetails []StatusDetailPropertiesResponse `pulumi:"statusDetails"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemDataResponse `pulumi:"systemData"`
	// The type of the resource.
	Type *string `pulumi:"type"`
	// The current version of ACR runtime on the connected registry.
	Version *string `pulumi:"version"`
}

type ConnectedRegistryState struct {
	// The activation properties of the connected registry.
	Activation ActivationPropertiesResponsePtrInput
	// The list of the ACR token resource IDs used to authenticate clients to the connected registry.
	ClientTokenIds pulumi.StringArrayInput
	// The current connection state of the connected registry.
	ConnectionState pulumi.StringPtrInput
	// The last activity time of the connected registry.
	LastActivityTime pulumi.StringPtrInput
	// The logging properties of the connected registry.
	Logging LoggingPropertiesResponsePtrInput
	// The login server properties of the connected registry.
	LoginServer LoginServerPropertiesResponsePtrInput
	// The mode of the connected registry resource that indicates the permissions of the registry.
	Mode pulumi.StringPtrInput
	// The name of the resource.
	Name pulumi.StringPtrInput
	// The parent of the connected registry.
	Parent ParentPropertiesResponsePtrInput
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput
	// The list of current statuses of the connected registry.
	StatusDetails StatusDetailPropertiesResponseArrayInput
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponsePtrInput
	// The type of the resource.
	Type pulumi.StringPtrInput
	// The current version of ACR runtime on the connected registry.
	Version pulumi.StringPtrInput
}

func (ConnectedRegistryState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectedRegistryState)(nil)).Elem()
}

type connectedRegistryArgs struct {
	// The list of the ACR token resource IDs used to authenticate clients to the connected registry.
	ClientTokenIds []string `pulumi:"clientTokenIds"`
	// The name of the connected registry.
	ConnectedRegistryName string `pulumi:"connectedRegistryName"`
	// The logging properties of the connected registry.
	Logging *LoggingProperties `pulumi:"logging"`
	// The mode of the connected registry resource that indicates the permissions of the registry.
	Mode string `pulumi:"mode"`
	// The parent of the connected registry.
	Parent ParentProperties `pulumi:"parent"`
	// The name of the container registry.
	RegistryName string `pulumi:"registryName"`
	// The name of the resource group to which the container registry belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a ConnectedRegistry resource.
type ConnectedRegistryArgs struct {
	// The list of the ACR token resource IDs used to authenticate clients to the connected registry.
	ClientTokenIds pulumi.StringArrayInput
	// The name of the connected registry.
	ConnectedRegistryName pulumi.StringInput
	// The logging properties of the connected registry.
	Logging LoggingPropertiesPtrInput
	// The mode of the connected registry resource that indicates the permissions of the registry.
	Mode pulumi.StringInput
	// The parent of the connected registry.
	Parent ParentPropertiesInput
	// The name of the container registry.
	RegistryName pulumi.StringInput
	// The name of the resource group to which the container registry belongs.
	ResourceGroupName pulumi.StringInput
}

func (ConnectedRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectedRegistryArgs)(nil)).Elem()
}

type ConnectedRegistryInput interface {
	pulumi.Input

	ToConnectedRegistryOutput() ConnectedRegistryOutput
	ToConnectedRegistryOutputWithContext(ctx context.Context) ConnectedRegistryOutput
}

func (*ConnectedRegistry) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedRegistry)(nil))
}

func (i *ConnectedRegistry) ToConnectedRegistryOutput() ConnectedRegistryOutput {
	return i.ToConnectedRegistryOutputWithContext(context.Background())
}

func (i *ConnectedRegistry) ToConnectedRegistryOutputWithContext(ctx context.Context) ConnectedRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedRegistryOutput)
}

type ConnectedRegistryOutput struct {
	*pulumi.OutputState
}

func (ConnectedRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedRegistry)(nil))
}

func (o ConnectedRegistryOutput) ToConnectedRegistryOutput() ConnectedRegistryOutput {
	return o
}

func (o ConnectedRegistryOutput) ToConnectedRegistryOutputWithContext(ctx context.Context) ConnectedRegistryOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ConnectedRegistryOutput{})
}
