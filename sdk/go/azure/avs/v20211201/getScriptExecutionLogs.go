// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20211201

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An instance of a script executed by a user - custom or AVS
func GetScriptExecutionLogs(ctx *pulumi.Context, args *GetScriptExecutionLogsArgs, opts ...pulumi.InvokeOption) (*GetScriptExecutionLogsResult, error) {
	var rv GetScriptExecutionLogsResult
	err := ctx.Invoke("azure-native:avs/v20211201:getScriptExecutionLogs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetScriptExecutionLogsArgs struct {
	// Name of the private cloud
	PrivateCloudName string `pulumi:"privateCloudName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the user-invoked script execution resource
	ScriptExecutionName string `pulumi:"scriptExecutionName"`
}

// An instance of a script executed by a user - custom or AVS
type GetScriptExecutionLogsResult struct {
	// Standard error output stream from the powershell execution
	Errors []string `pulumi:"errors"`
	// Error message if the script was able to run, but if the script itself had errors or powershell threw an exception
	FailureReason *string `pulumi:"failureReason"`
	// Time the script execution was finished
	FinishedAt string `pulumi:"finishedAt"`
	// Parameters that will be hidden/not visible to ARM, such as passwords and credentials
	HiddenParameters []interface{} `pulumi:"hiddenParameters"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Standard information out stream from the powershell execution
	Information []string `pulumi:"information"`
	// Resource name.
	Name string `pulumi:"name"`
	// User-defined dictionary.
	NamedOutputs map[string]interface{} `pulumi:"namedOutputs"`
	// Standard output stream from the powershell execution
	Output []string `pulumi:"output"`
	// Parameters the script will accept
	Parameters []interface{} `pulumi:"parameters"`
	// The state of the script execution resource
	ProvisioningState string `pulumi:"provisioningState"`
	// Time to live for the resource. If not provided, will be available for 60 days
	Retention *string `pulumi:"retention"`
	// A reference to the script cmdlet resource if user is running a AVS script
	ScriptCmdletId *string `pulumi:"scriptCmdletId"`
	// Time the script execution was started
	StartedAt string `pulumi:"startedAt"`
	// Time the script execution was submitted
	SubmittedAt string `pulumi:"submittedAt"`
	// Time limit for execution
	Timeout string `pulumi:"timeout"`
	// Resource type.
	Type string `pulumi:"type"`
	// Standard warning out stream from the powershell execution
	Warnings []string `pulumi:"warnings"`
}
