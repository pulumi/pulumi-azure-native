// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211201

// The type of private cloud addon
type AddonType string

const (
	AddonTypeSRM = AddonType("SRM")
	AddonTypeVR  = AddonType("VR")
	AddonTypeHCX = AddonType("HCX")
)

// placement policy affinity type
type AffinityType string

const (
	AffinityTypeAffinity     = AffinityType("Affinity")
	AffinityTypeAntiAffinity = AffinityType("AntiAffinity")
)

// The availability strategy for the private cloud
type AvailabilityStrategy string

const (
	AvailabilityStrategySingleZone = AvailabilityStrategy("SingleZone")
	AvailabilityStrategyDualZone   = AvailabilityStrategy("DualZone")
)

// Type of DHCP: SERVER or RELAY.
type DhcpTypeEnum string

const (
	DhcpTypeEnumSERVER = DhcpTypeEnum("SERVER")
	DhcpTypeEnumRELAY  = DhcpTypeEnum("RELAY")
)

// DNS Service log level.
type DnsServiceLogLevelEnum string

const (
	DnsServiceLogLevelEnumDEBUG   = DnsServiceLogLevelEnum("DEBUG")
	DnsServiceLogLevelEnumINFO    = DnsServiceLogLevelEnum("INFO")
	DnsServiceLogLevelEnumWARNING = DnsServiceLogLevelEnum("WARNING")
	DnsServiceLogLevelEnumERROR   = DnsServiceLogLevelEnum("ERROR")
	DnsServiceLogLevelEnumFATAL   = DnsServiceLogLevelEnum("FATAL")
)

// Status of customer managed encryption key
type EncryptionState string

const (
	EncryptionStateEnabled  = EncryptionState("Enabled")
	EncryptionStateDisabled = EncryptionState("Disabled")
)

// Connectivity to internet is enabled or disabled
type InternetEnum string

const (
	InternetEnumEnabled  = InternetEnum("Enabled")
	InternetEnumDisabled = InternetEnum("Disabled")
)

// Mode that describes whether the LUN has to be mounted as a datastore or attached as a LUN
type MountOptionEnum string

const (
	MountOptionEnumMOUNT  = MountOptionEnum("MOUNT")
	MountOptionEnumATTACH = MountOptionEnum("ATTACH")
)

// Whether the placement policy is enabled or disabled
type PlacementPolicyStateEnum string

const (
	PlacementPolicyStateEnumEnabled  = PlacementPolicyStateEnum("Enabled")
	PlacementPolicyStateEnumDisabled = PlacementPolicyStateEnum("Disabled")
)

// placement policy type
type PlacementPolicyType string

const (
	PlacementPolicyTypeVmVm   = PlacementPolicyType("VmVm")
	PlacementPolicyTypeVmHost = PlacementPolicyType("VmHost")
)

// Direction of port mirroring profile.
type PortMirroringDirectionEnum string

const (
	PortMirroringDirectionEnumINGRESS       = PortMirroringDirectionEnum("INGRESS")
	PortMirroringDirectionEnumEGRESS        = PortMirroringDirectionEnum("EGRESS")
	PortMirroringDirectionEnumBIDIRECTIONAL = PortMirroringDirectionEnum("BIDIRECTIONAL")
)

// The type of identity used for the private cloud. The type 'SystemAssigned' refers to an implicitly created identity. The type 'None' will remove any identities from the Private Cloud.
type ResourceIdentityType string

const (
	ResourceIdentityTypeSystemAssigned = ResourceIdentityType("SystemAssigned")
	ResourceIdentityTypeNone           = ResourceIdentityType("None")
)

// The type of execution parameter
type ScriptExecutionParameterType string

const (
	ScriptExecutionParameterTypeValue       = ScriptExecutionParameterType("Value")
	ScriptExecutionParameterTypeSecureValue = ScriptExecutionParameterType("SecureValue")
	ScriptExecutionParameterTypeCredential  = ScriptExecutionParameterType("Credential")
)

// Protect LDAP communication using SSL certificate (LDAPS)
type SslEnum string

const (
	SslEnumEnabled  = SslEnum("Enabled")
	SslEnumDisabled = SslEnum("Disabled")
)

func init() {
}
