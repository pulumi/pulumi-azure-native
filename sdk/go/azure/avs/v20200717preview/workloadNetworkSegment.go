// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200717preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// NSX Segment
type WorkloadNetworkSegment struct {
	pulumi.CustomResourceState

	// Gateway which to connect segment to.
	ConnectedGateway pulumi.StringPtrOutput `pulumi:"connectedGateway"`
	// Display name of the segment.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Port Vif which segment is associated with.
	PortVif WorkloadNetworkSegmentPortVifResponseArrayOutput `pulumi:"portVif"`
	// The provisioning state
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// NSX revision number.
	Revision pulumi.Float64PtrOutput `pulumi:"revision"`
	// Segment status.
	Status pulumi.StringOutput `pulumi:"status"`
	// Subnet which to connect segment to.
	Subnet WorkloadNetworkSegmentSubnetResponsePtrOutput `pulumi:"subnet"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewWorkloadNetworkSegment registers a new resource with the given unique name, arguments, and options.
func NewWorkloadNetworkSegment(ctx *pulumi.Context,
	name string, args *WorkloadNetworkSegmentArgs, opts ...pulumi.ResourceOption) (*WorkloadNetworkSegment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PrivateCloudName == nil {
		return nil, errors.New("invalid value for required argument 'PrivateCloudName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:avs:WorkloadNetworkSegment"),
		},
		{
			Type: pulumi.String("azure-nextgen:avs/v20210101preview:WorkloadNetworkSegment"),
		},
	})
	opts = append(opts, aliases)
	var resource WorkloadNetworkSegment
	err := ctx.RegisterResource("azure-nextgen:avs/v20200717preview:WorkloadNetworkSegment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkloadNetworkSegment gets an existing WorkloadNetworkSegment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkloadNetworkSegment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkloadNetworkSegmentState, opts ...pulumi.ResourceOption) (*WorkloadNetworkSegment, error) {
	var resource WorkloadNetworkSegment
	err := ctx.ReadResource("azure-nextgen:avs/v20200717preview:WorkloadNetworkSegment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkloadNetworkSegment resources.
type workloadNetworkSegmentState struct {
	// Gateway which to connect segment to.
	ConnectedGateway *string `pulumi:"connectedGateway"`
	// Display name of the segment.
	DisplayName *string `pulumi:"displayName"`
	// Resource name.
	Name *string `pulumi:"name"`
	// Port Vif which segment is associated with.
	PortVif []WorkloadNetworkSegmentPortVifResponse `pulumi:"portVif"`
	// The provisioning state
	ProvisioningState *string `pulumi:"provisioningState"`
	// NSX revision number.
	Revision *float64 `pulumi:"revision"`
	// Segment status.
	Status *string `pulumi:"status"`
	// Subnet which to connect segment to.
	Subnet *WorkloadNetworkSegmentSubnetResponse `pulumi:"subnet"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type WorkloadNetworkSegmentState struct {
	// Gateway which to connect segment to.
	ConnectedGateway pulumi.StringPtrInput
	// Display name of the segment.
	DisplayName pulumi.StringPtrInput
	// Resource name.
	Name pulumi.StringPtrInput
	// Port Vif which segment is associated with.
	PortVif WorkloadNetworkSegmentPortVifResponseArrayInput
	// The provisioning state
	ProvisioningState pulumi.StringPtrInput
	// NSX revision number.
	Revision pulumi.Float64PtrInput
	// Segment status.
	Status pulumi.StringPtrInput
	// Subnet which to connect segment to.
	Subnet WorkloadNetworkSegmentSubnetResponsePtrInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (WorkloadNetworkSegmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadNetworkSegmentState)(nil)).Elem()
}

type workloadNetworkSegmentArgs struct {
	// Gateway which to connect segment to.
	ConnectedGateway *string `pulumi:"connectedGateway"`
	// Display name of the segment.
	DisplayName *string `pulumi:"displayName"`
	// Name of the private cloud
	PrivateCloudName string `pulumi:"privateCloudName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// NSX revision number.
	Revision *float64 `pulumi:"revision"`
	// NSX Segment identifier. Generally the same as the Segment's display name
	SegmentId *string `pulumi:"segmentId"`
	// Subnet which to connect segment to.
	Subnet *WorkloadNetworkSegmentSubnet `pulumi:"subnet"`
}

// The set of arguments for constructing a WorkloadNetworkSegment resource.
type WorkloadNetworkSegmentArgs struct {
	// Gateway which to connect segment to.
	ConnectedGateway pulumi.StringPtrInput
	// Display name of the segment.
	DisplayName pulumi.StringPtrInput
	// Name of the private cloud
	PrivateCloudName pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// NSX revision number.
	Revision pulumi.Float64PtrInput
	// NSX Segment identifier. Generally the same as the Segment's display name
	SegmentId pulumi.StringPtrInput
	// Subnet which to connect segment to.
	Subnet WorkloadNetworkSegmentSubnetPtrInput
}

func (WorkloadNetworkSegmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadNetworkSegmentArgs)(nil)).Elem()
}

type WorkloadNetworkSegmentInput interface {
	pulumi.Input

	ToWorkloadNetworkSegmentOutput() WorkloadNetworkSegmentOutput
	ToWorkloadNetworkSegmentOutputWithContext(ctx context.Context) WorkloadNetworkSegmentOutput
}

func (*WorkloadNetworkSegment) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegment)(nil))
}

func (i *WorkloadNetworkSegment) ToWorkloadNetworkSegmentOutput() WorkloadNetworkSegmentOutput {
	return i.ToWorkloadNetworkSegmentOutputWithContext(context.Background())
}

func (i *WorkloadNetworkSegment) ToWorkloadNetworkSegmentOutputWithContext(ctx context.Context) WorkloadNetworkSegmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkSegmentOutput)
}

type WorkloadNetworkSegmentOutput struct {
	*pulumi.OutputState
}

func (WorkloadNetworkSegmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegment)(nil))
}

func (o WorkloadNetworkSegmentOutput) ToWorkloadNetworkSegmentOutput() WorkloadNetworkSegmentOutput {
	return o
}

func (o WorkloadNetworkSegmentOutput) ToWorkloadNetworkSegmentOutputWithContext(ctx context.Context) WorkloadNetworkSegmentOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(WorkloadNetworkSegmentOutput{})
}
