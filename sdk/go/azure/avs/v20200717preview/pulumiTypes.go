// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200717preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An ExpressRoute Circuit
type CircuitInvokeResponse struct {
	// Identifier of the ExpressRoute Circuit (Microsoft Colo only)
	ExpressRouteID string `pulumi:"expressRouteID"`
	// ExpressRoute Circuit private peering identifier
	ExpressRoutePrivatePeeringID string `pulumi:"expressRoutePrivatePeeringID"`
	// CIDR of primary subnet
	PrimarySubnet string `pulumi:"primarySubnet"`
	// CIDR of secondary subnet
	SecondarySubnet string `pulumi:"secondarySubnet"`
}

// CircuitInvokeResponseInput is an input type that accepts CircuitInvokeResponseArgs and CircuitInvokeResponseOutput values.
// You can construct a concrete instance of `CircuitInvokeResponseInput` via:
//
//          CircuitInvokeResponseArgs{...}
type CircuitInvokeResponseInput interface {
	pulumi.Input

	ToCircuitInvokeResponseOutput() CircuitInvokeResponseOutput
	ToCircuitInvokeResponseOutputWithContext(context.Context) CircuitInvokeResponseOutput
}

// An ExpressRoute Circuit
type CircuitInvokeResponseArgs struct {
	// Identifier of the ExpressRoute Circuit (Microsoft Colo only)
	ExpressRouteID pulumi.StringInput `pulumi:"expressRouteID"`
	// ExpressRoute Circuit private peering identifier
	ExpressRoutePrivatePeeringID pulumi.StringInput `pulumi:"expressRoutePrivatePeeringID"`
	// CIDR of primary subnet
	PrimarySubnet pulumi.StringInput `pulumi:"primarySubnet"`
	// CIDR of secondary subnet
	SecondarySubnet pulumi.StringInput `pulumi:"secondarySubnet"`
}

func (CircuitInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CircuitInvokeResponse)(nil)).Elem()
}

func (i CircuitInvokeResponseArgs) ToCircuitInvokeResponseOutput() CircuitInvokeResponseOutput {
	return i.ToCircuitInvokeResponseOutputWithContext(context.Background())
}

func (i CircuitInvokeResponseArgs) ToCircuitInvokeResponseOutputWithContext(ctx context.Context) CircuitInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CircuitInvokeResponseOutput)
}

// An ExpressRoute Circuit
type CircuitInvokeResponseOutput struct{ *pulumi.OutputState }

func (CircuitInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CircuitInvokeResponse)(nil)).Elem()
}

func (o CircuitInvokeResponseOutput) ToCircuitInvokeResponseOutput() CircuitInvokeResponseOutput {
	return o
}

func (o CircuitInvokeResponseOutput) ToCircuitInvokeResponseOutputWithContext(ctx context.Context) CircuitInvokeResponseOutput {
	return o
}

// Identifier of the ExpressRoute Circuit (Microsoft Colo only)
func (o CircuitInvokeResponseOutput) ExpressRouteID() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitInvokeResponse) string { return v.ExpressRouteID }).(pulumi.StringOutput)
}

// ExpressRoute Circuit private peering identifier
func (o CircuitInvokeResponseOutput) ExpressRoutePrivatePeeringID() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitInvokeResponse) string { return v.ExpressRoutePrivatePeeringID }).(pulumi.StringOutput)
}

// CIDR of primary subnet
func (o CircuitInvokeResponseOutput) PrimarySubnet() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitInvokeResponse) string { return v.PrimarySubnet }).(pulumi.StringOutput)
}

// CIDR of secondary subnet
func (o CircuitInvokeResponseOutput) SecondarySubnet() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitInvokeResponse) string { return v.SecondarySubnet }).(pulumi.StringOutput)
}

// An ExpressRoute Circuit
type CircuitResponse struct {
	// Identifier of the ExpressRoute Circuit (Microsoft Colo only)
	ExpressRouteID string `pulumi:"expressRouteID"`
	// ExpressRoute Circuit private peering identifier
	ExpressRoutePrivatePeeringID string `pulumi:"expressRoutePrivatePeeringID"`
	// CIDR of primary subnet
	PrimarySubnet string `pulumi:"primarySubnet"`
	// CIDR of secondary subnet
	SecondarySubnet string `pulumi:"secondarySubnet"`
}

// CircuitResponseInput is an input type that accepts CircuitResponseArgs and CircuitResponseOutput values.
// You can construct a concrete instance of `CircuitResponseInput` via:
//
//          CircuitResponseArgs{...}
type CircuitResponseInput interface {
	pulumi.Input

	ToCircuitResponseOutput() CircuitResponseOutput
	ToCircuitResponseOutputWithContext(context.Context) CircuitResponseOutput
}

// An ExpressRoute Circuit
type CircuitResponseArgs struct {
	// Identifier of the ExpressRoute Circuit (Microsoft Colo only)
	ExpressRouteID pulumi.StringInput `pulumi:"expressRouteID"`
	// ExpressRoute Circuit private peering identifier
	ExpressRoutePrivatePeeringID pulumi.StringInput `pulumi:"expressRoutePrivatePeeringID"`
	// CIDR of primary subnet
	PrimarySubnet pulumi.StringInput `pulumi:"primarySubnet"`
	// CIDR of secondary subnet
	SecondarySubnet pulumi.StringInput `pulumi:"secondarySubnet"`
}

func (CircuitResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CircuitResponse)(nil)).Elem()
}

func (i CircuitResponseArgs) ToCircuitResponseOutput() CircuitResponseOutput {
	return i.ToCircuitResponseOutputWithContext(context.Background())
}

func (i CircuitResponseArgs) ToCircuitResponseOutputWithContext(ctx context.Context) CircuitResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CircuitResponseOutput)
}

func (i CircuitResponseArgs) ToCircuitResponsePtrOutput() CircuitResponsePtrOutput {
	return i.ToCircuitResponsePtrOutputWithContext(context.Background())
}

func (i CircuitResponseArgs) ToCircuitResponsePtrOutputWithContext(ctx context.Context) CircuitResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CircuitResponseOutput).ToCircuitResponsePtrOutputWithContext(ctx)
}

// CircuitResponsePtrInput is an input type that accepts CircuitResponseArgs, CircuitResponsePtr and CircuitResponsePtrOutput values.
// You can construct a concrete instance of `CircuitResponsePtrInput` via:
//
//          CircuitResponseArgs{...}
//
//  or:
//
//          nil
type CircuitResponsePtrInput interface {
	pulumi.Input

	ToCircuitResponsePtrOutput() CircuitResponsePtrOutput
	ToCircuitResponsePtrOutputWithContext(context.Context) CircuitResponsePtrOutput
}

type circuitResponsePtrType CircuitResponseArgs

func CircuitResponsePtr(v *CircuitResponseArgs) CircuitResponsePtrInput {
	return (*circuitResponsePtrType)(v)
}

func (*circuitResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CircuitResponse)(nil)).Elem()
}

func (i *circuitResponsePtrType) ToCircuitResponsePtrOutput() CircuitResponsePtrOutput {
	return i.ToCircuitResponsePtrOutputWithContext(context.Background())
}

func (i *circuitResponsePtrType) ToCircuitResponsePtrOutputWithContext(ctx context.Context) CircuitResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CircuitResponsePtrOutput)
}

// An ExpressRoute Circuit
type CircuitResponseOutput struct{ *pulumi.OutputState }

func (CircuitResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CircuitResponse)(nil)).Elem()
}

func (o CircuitResponseOutput) ToCircuitResponseOutput() CircuitResponseOutput {
	return o
}

func (o CircuitResponseOutput) ToCircuitResponseOutputWithContext(ctx context.Context) CircuitResponseOutput {
	return o
}

func (o CircuitResponseOutput) ToCircuitResponsePtrOutput() CircuitResponsePtrOutput {
	return o.ToCircuitResponsePtrOutputWithContext(context.Background())
}

func (o CircuitResponseOutput) ToCircuitResponsePtrOutputWithContext(ctx context.Context) CircuitResponsePtrOutput {
	return o.ApplyT(func(v CircuitResponse) *CircuitResponse {
		return &v
	}).(CircuitResponsePtrOutput)
}

// Identifier of the ExpressRoute Circuit (Microsoft Colo only)
func (o CircuitResponseOutput) ExpressRouteID() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitResponse) string { return v.ExpressRouteID }).(pulumi.StringOutput)
}

// ExpressRoute Circuit private peering identifier
func (o CircuitResponseOutput) ExpressRoutePrivatePeeringID() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitResponse) string { return v.ExpressRoutePrivatePeeringID }).(pulumi.StringOutput)
}

// CIDR of primary subnet
func (o CircuitResponseOutput) PrimarySubnet() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitResponse) string { return v.PrimarySubnet }).(pulumi.StringOutput)
}

// CIDR of secondary subnet
func (o CircuitResponseOutput) SecondarySubnet() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitResponse) string { return v.SecondarySubnet }).(pulumi.StringOutput)
}

type CircuitResponsePtrOutput struct{ *pulumi.OutputState }

func (CircuitResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CircuitResponse)(nil)).Elem()
}

func (o CircuitResponsePtrOutput) ToCircuitResponsePtrOutput() CircuitResponsePtrOutput {
	return o
}

func (o CircuitResponsePtrOutput) ToCircuitResponsePtrOutputWithContext(ctx context.Context) CircuitResponsePtrOutput {
	return o
}

func (o CircuitResponsePtrOutput) Elem() CircuitResponseOutput {
	return o.ApplyT(func(v *CircuitResponse) CircuitResponse { return *v }).(CircuitResponseOutput)
}

// Identifier of the ExpressRoute Circuit (Microsoft Colo only)
func (o CircuitResponsePtrOutput) ExpressRouteID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CircuitResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ExpressRouteID
	}).(pulumi.StringPtrOutput)
}

// ExpressRoute Circuit private peering identifier
func (o CircuitResponsePtrOutput) ExpressRoutePrivatePeeringID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CircuitResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ExpressRoutePrivatePeeringID
	}).(pulumi.StringPtrOutput)
}

// CIDR of primary subnet
func (o CircuitResponsePtrOutput) PrimarySubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CircuitResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrimarySubnet
	}).(pulumi.StringPtrOutput)
}

// CIDR of secondary subnet
func (o CircuitResponsePtrOutput) SecondarySubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CircuitResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecondarySubnet
	}).(pulumi.StringPtrOutput)
}

// Endpoint addresses
type EndpointsInvokeResponse struct {
	// Endpoint for the HCX Cloud Manager
	HcxCloudManager string `pulumi:"hcxCloudManager"`
	// Endpoint for the NSX-T Data Center manager
	NsxtManager string `pulumi:"nsxtManager"`
	// Endpoint for Virtual Center Server Appliance
	Vcsa string `pulumi:"vcsa"`
}

// EndpointsInvokeResponseInput is an input type that accepts EndpointsInvokeResponseArgs and EndpointsInvokeResponseOutput values.
// You can construct a concrete instance of `EndpointsInvokeResponseInput` via:
//
//          EndpointsInvokeResponseArgs{...}
type EndpointsInvokeResponseInput interface {
	pulumi.Input

	ToEndpointsInvokeResponseOutput() EndpointsInvokeResponseOutput
	ToEndpointsInvokeResponseOutputWithContext(context.Context) EndpointsInvokeResponseOutput
}

// Endpoint addresses
type EndpointsInvokeResponseArgs struct {
	// Endpoint for the HCX Cloud Manager
	HcxCloudManager pulumi.StringInput `pulumi:"hcxCloudManager"`
	// Endpoint for the NSX-T Data Center manager
	NsxtManager pulumi.StringInput `pulumi:"nsxtManager"`
	// Endpoint for Virtual Center Server Appliance
	Vcsa pulumi.StringInput `pulumi:"vcsa"`
}

func (EndpointsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointsInvokeResponse)(nil)).Elem()
}

func (i EndpointsInvokeResponseArgs) ToEndpointsInvokeResponseOutput() EndpointsInvokeResponseOutput {
	return i.ToEndpointsInvokeResponseOutputWithContext(context.Background())
}

func (i EndpointsInvokeResponseArgs) ToEndpointsInvokeResponseOutputWithContext(ctx context.Context) EndpointsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsInvokeResponseOutput)
}

// Endpoint addresses
type EndpointsInvokeResponseOutput struct{ *pulumi.OutputState }

func (EndpointsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointsInvokeResponse)(nil)).Elem()
}

func (o EndpointsInvokeResponseOutput) ToEndpointsInvokeResponseOutput() EndpointsInvokeResponseOutput {
	return o
}

func (o EndpointsInvokeResponseOutput) ToEndpointsInvokeResponseOutputWithContext(ctx context.Context) EndpointsInvokeResponseOutput {
	return o
}

// Endpoint for the HCX Cloud Manager
func (o EndpointsInvokeResponseOutput) HcxCloudManager() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsInvokeResponse) string { return v.HcxCloudManager }).(pulumi.StringOutput)
}

// Endpoint for the NSX-T Data Center manager
func (o EndpointsInvokeResponseOutput) NsxtManager() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsInvokeResponse) string { return v.NsxtManager }).(pulumi.StringOutput)
}

// Endpoint for Virtual Center Server Appliance
func (o EndpointsInvokeResponseOutput) Vcsa() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsInvokeResponse) string { return v.Vcsa }).(pulumi.StringOutput)
}

// Endpoint addresses
type EndpointsResponse struct {
	// Endpoint for the HCX Cloud Manager
	HcxCloudManager string `pulumi:"hcxCloudManager"`
	// Endpoint for the NSX-T Data Center manager
	NsxtManager string `pulumi:"nsxtManager"`
	// Endpoint for Virtual Center Server Appliance
	Vcsa string `pulumi:"vcsa"`
}

// EndpointsResponseInput is an input type that accepts EndpointsResponseArgs and EndpointsResponseOutput values.
// You can construct a concrete instance of `EndpointsResponseInput` via:
//
//          EndpointsResponseArgs{...}
type EndpointsResponseInput interface {
	pulumi.Input

	ToEndpointsResponseOutput() EndpointsResponseOutput
	ToEndpointsResponseOutputWithContext(context.Context) EndpointsResponseOutput
}

// Endpoint addresses
type EndpointsResponseArgs struct {
	// Endpoint for the HCX Cloud Manager
	HcxCloudManager pulumi.StringInput `pulumi:"hcxCloudManager"`
	// Endpoint for the NSX-T Data Center manager
	NsxtManager pulumi.StringInput `pulumi:"nsxtManager"`
	// Endpoint for Virtual Center Server Appliance
	Vcsa pulumi.StringInput `pulumi:"vcsa"`
}

func (EndpointsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointsResponse)(nil)).Elem()
}

func (i EndpointsResponseArgs) ToEndpointsResponseOutput() EndpointsResponseOutput {
	return i.ToEndpointsResponseOutputWithContext(context.Background())
}

func (i EndpointsResponseArgs) ToEndpointsResponseOutputWithContext(ctx context.Context) EndpointsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsResponseOutput)
}

func (i EndpointsResponseArgs) ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput {
	return i.ToEndpointsResponsePtrOutputWithContext(context.Background())
}

func (i EndpointsResponseArgs) ToEndpointsResponsePtrOutputWithContext(ctx context.Context) EndpointsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsResponseOutput).ToEndpointsResponsePtrOutputWithContext(ctx)
}

// EndpointsResponsePtrInput is an input type that accepts EndpointsResponseArgs, EndpointsResponsePtr and EndpointsResponsePtrOutput values.
// You can construct a concrete instance of `EndpointsResponsePtrInput` via:
//
//          EndpointsResponseArgs{...}
//
//  or:
//
//          nil
type EndpointsResponsePtrInput interface {
	pulumi.Input

	ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput
	ToEndpointsResponsePtrOutputWithContext(context.Context) EndpointsResponsePtrOutput
}

type endpointsResponsePtrType EndpointsResponseArgs

func EndpointsResponsePtr(v *EndpointsResponseArgs) EndpointsResponsePtrInput {
	return (*endpointsResponsePtrType)(v)
}

func (*endpointsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointsResponse)(nil)).Elem()
}

func (i *endpointsResponsePtrType) ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput {
	return i.ToEndpointsResponsePtrOutputWithContext(context.Background())
}

func (i *endpointsResponsePtrType) ToEndpointsResponsePtrOutputWithContext(ctx context.Context) EndpointsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsResponsePtrOutput)
}

// Endpoint addresses
type EndpointsResponseOutput struct{ *pulumi.OutputState }

func (EndpointsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointsResponse)(nil)).Elem()
}

func (o EndpointsResponseOutput) ToEndpointsResponseOutput() EndpointsResponseOutput {
	return o
}

func (o EndpointsResponseOutput) ToEndpointsResponseOutputWithContext(ctx context.Context) EndpointsResponseOutput {
	return o
}

func (o EndpointsResponseOutput) ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput {
	return o.ToEndpointsResponsePtrOutputWithContext(context.Background())
}

func (o EndpointsResponseOutput) ToEndpointsResponsePtrOutputWithContext(ctx context.Context) EndpointsResponsePtrOutput {
	return o.ApplyT(func(v EndpointsResponse) *EndpointsResponse {
		return &v
	}).(EndpointsResponsePtrOutput)
}

// Endpoint for the HCX Cloud Manager
func (o EndpointsResponseOutput) HcxCloudManager() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.HcxCloudManager }).(pulumi.StringOutput)
}

// Endpoint for the NSX-T Data Center manager
func (o EndpointsResponseOutput) NsxtManager() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.NsxtManager }).(pulumi.StringOutput)
}

// Endpoint for Virtual Center Server Appliance
func (o EndpointsResponseOutput) Vcsa() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Vcsa }).(pulumi.StringOutput)
}

type EndpointsResponsePtrOutput struct{ *pulumi.OutputState }

func (EndpointsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointsResponse)(nil)).Elem()
}

func (o EndpointsResponsePtrOutput) ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput {
	return o
}

func (o EndpointsResponsePtrOutput) ToEndpointsResponsePtrOutputWithContext(ctx context.Context) EndpointsResponsePtrOutput {
	return o
}

func (o EndpointsResponsePtrOutput) Elem() EndpointsResponseOutput {
	return o.ApplyT(func(v *EndpointsResponse) EndpointsResponse { return *v }).(EndpointsResponseOutput)
}

// Endpoint for the HCX Cloud Manager
func (o EndpointsResponsePtrOutput) HcxCloudManager() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HcxCloudManager
	}).(pulumi.StringPtrOutput)
}

// Endpoint for the NSX-T Data Center manager
func (o EndpointsResponsePtrOutput) NsxtManager() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.NsxtManager
	}).(pulumi.StringPtrOutput)
}

// Endpoint for Virtual Center Server Appliance
func (o EndpointsResponsePtrOutput) Vcsa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Vcsa
	}).(pulumi.StringPtrOutput)
}

// vCenter Single Sign On Identity Source
type IdentitySource struct {
	// The domain's NetBIOS name
	Alias *string `pulumi:"alias"`
	// The base distinguished name for groups
	BaseGroupDN *string `pulumi:"baseGroupDN"`
	// The base distinguished name for users
	BaseUserDN *string `pulumi:"baseUserDN"`
	// The domain's dns name
	Domain *string `pulumi:"domain"`
	// The name of the identity source
	Name *string `pulumi:"name"`
	// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
	Password *string `pulumi:"password"`
	// Primary server URL
	PrimaryServer *string `pulumi:"primaryServer"`
	// Secondary server URL
	SecondaryServer *string `pulumi:"secondaryServer"`
	// Protect LDAP communication using SSL certificate (LDAPS)
	Ssl *string `pulumi:"ssl"`
	// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
	Username *string `pulumi:"username"`
}

// IdentitySourceInput is an input type that accepts IdentitySourceArgs and IdentitySourceOutput values.
// You can construct a concrete instance of `IdentitySourceInput` via:
//
//          IdentitySourceArgs{...}
type IdentitySourceInput interface {
	pulumi.Input

	ToIdentitySourceOutput() IdentitySourceOutput
	ToIdentitySourceOutputWithContext(context.Context) IdentitySourceOutput
}

// vCenter Single Sign On Identity Source
type IdentitySourceArgs struct {
	// The domain's NetBIOS name
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// The base distinguished name for groups
	BaseGroupDN pulumi.StringPtrInput `pulumi:"baseGroupDN"`
	// The base distinguished name for users
	BaseUserDN pulumi.StringPtrInput `pulumi:"baseUserDN"`
	// The domain's dns name
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The name of the identity source
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Primary server URL
	PrimaryServer pulumi.StringPtrInput `pulumi:"primaryServer"`
	// Secondary server URL
	SecondaryServer pulumi.StringPtrInput `pulumi:"secondaryServer"`
	// Protect LDAP communication using SSL certificate (LDAPS)
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (IdentitySourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySource)(nil)).Elem()
}

func (i IdentitySourceArgs) ToIdentitySourceOutput() IdentitySourceOutput {
	return i.ToIdentitySourceOutputWithContext(context.Background())
}

func (i IdentitySourceArgs) ToIdentitySourceOutputWithContext(ctx context.Context) IdentitySourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceOutput)
}

// IdentitySourceArrayInput is an input type that accepts IdentitySourceArray and IdentitySourceArrayOutput values.
// You can construct a concrete instance of `IdentitySourceArrayInput` via:
//
//          IdentitySourceArray{ IdentitySourceArgs{...} }
type IdentitySourceArrayInput interface {
	pulumi.Input

	ToIdentitySourceArrayOutput() IdentitySourceArrayOutput
	ToIdentitySourceArrayOutputWithContext(context.Context) IdentitySourceArrayOutput
}

type IdentitySourceArray []IdentitySourceInput

func (IdentitySourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitySource)(nil)).Elem()
}

func (i IdentitySourceArray) ToIdentitySourceArrayOutput() IdentitySourceArrayOutput {
	return i.ToIdentitySourceArrayOutputWithContext(context.Background())
}

func (i IdentitySourceArray) ToIdentitySourceArrayOutputWithContext(ctx context.Context) IdentitySourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceArrayOutput)
}

// vCenter Single Sign On Identity Source
type IdentitySourceOutput struct{ *pulumi.OutputState }

func (IdentitySourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySource)(nil)).Elem()
}

func (o IdentitySourceOutput) ToIdentitySourceOutput() IdentitySourceOutput {
	return o
}

func (o IdentitySourceOutput) ToIdentitySourceOutputWithContext(ctx context.Context) IdentitySourceOutput {
	return o
}

// The domain's NetBIOS name
func (o IdentitySourceOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// The base distinguished name for groups
func (o IdentitySourceOutput) BaseGroupDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.BaseGroupDN }).(pulumi.StringPtrOutput)
}

// The base distinguished name for users
func (o IdentitySourceOutput) BaseUserDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.BaseUserDN }).(pulumi.StringPtrOutput)
}

// The domain's dns name
func (o IdentitySourceOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The name of the identity source
func (o IdentitySourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
func (o IdentitySourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Primary server URL
func (o IdentitySourceOutput) PrimaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.PrimaryServer }).(pulumi.StringPtrOutput)
}

// Secondary server URL
func (o IdentitySourceOutput) SecondaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.SecondaryServer }).(pulumi.StringPtrOutput)
}

// Protect LDAP communication using SSL certificate (LDAPS)
func (o IdentitySourceOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
func (o IdentitySourceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type IdentitySourceArrayOutput struct{ *pulumi.OutputState }

func (IdentitySourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitySource)(nil)).Elem()
}

func (o IdentitySourceArrayOutput) ToIdentitySourceArrayOutput() IdentitySourceArrayOutput {
	return o
}

func (o IdentitySourceArrayOutput) ToIdentitySourceArrayOutputWithContext(ctx context.Context) IdentitySourceArrayOutput {
	return o
}

func (o IdentitySourceArrayOutput) Index(i pulumi.IntInput) IdentitySourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentitySource {
		return vs[0].([]IdentitySource)[vs[1].(int)]
	}).(IdentitySourceOutput)
}

// vCenter Single Sign On Identity Source
type IdentitySourceInvokeResponse struct {
	// The domain's NetBIOS name
	Alias *string `pulumi:"alias"`
	// The base distinguished name for groups
	BaseGroupDN *string `pulumi:"baseGroupDN"`
	// The base distinguished name for users
	BaseUserDN *string `pulumi:"baseUserDN"`
	// The domain's dns name
	Domain *string `pulumi:"domain"`
	// The name of the identity source
	Name *string `pulumi:"name"`
	// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
	Password *string `pulumi:"password"`
	// Primary server URL
	PrimaryServer *string `pulumi:"primaryServer"`
	// Secondary server URL
	SecondaryServer *string `pulumi:"secondaryServer"`
	// Protect LDAP communication using SSL certificate (LDAPS)
	Ssl *string `pulumi:"ssl"`
	// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
	Username *string `pulumi:"username"`
}

// IdentitySourceInvokeResponseInput is an input type that accepts IdentitySourceInvokeResponseArgs and IdentitySourceInvokeResponseOutput values.
// You can construct a concrete instance of `IdentitySourceInvokeResponseInput` via:
//
//          IdentitySourceInvokeResponseArgs{...}
type IdentitySourceInvokeResponseInput interface {
	pulumi.Input

	ToIdentitySourceInvokeResponseOutput() IdentitySourceInvokeResponseOutput
	ToIdentitySourceInvokeResponseOutputWithContext(context.Context) IdentitySourceInvokeResponseOutput
}

// vCenter Single Sign On Identity Source
type IdentitySourceInvokeResponseArgs struct {
	// The domain's NetBIOS name
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// The base distinguished name for groups
	BaseGroupDN pulumi.StringPtrInput `pulumi:"baseGroupDN"`
	// The base distinguished name for users
	BaseUserDN pulumi.StringPtrInput `pulumi:"baseUserDN"`
	// The domain's dns name
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The name of the identity source
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Primary server URL
	PrimaryServer pulumi.StringPtrInput `pulumi:"primaryServer"`
	// Secondary server URL
	SecondaryServer pulumi.StringPtrInput `pulumi:"secondaryServer"`
	// Protect LDAP communication using SSL certificate (LDAPS)
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (IdentitySourceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceInvokeResponse)(nil)).Elem()
}

func (i IdentitySourceInvokeResponseArgs) ToIdentitySourceInvokeResponseOutput() IdentitySourceInvokeResponseOutput {
	return i.ToIdentitySourceInvokeResponseOutputWithContext(context.Background())
}

func (i IdentitySourceInvokeResponseArgs) ToIdentitySourceInvokeResponseOutputWithContext(ctx context.Context) IdentitySourceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceInvokeResponseOutput)
}

// IdentitySourceInvokeResponseArrayInput is an input type that accepts IdentitySourceInvokeResponseArray and IdentitySourceInvokeResponseArrayOutput values.
// You can construct a concrete instance of `IdentitySourceInvokeResponseArrayInput` via:
//
//          IdentitySourceInvokeResponseArray{ IdentitySourceInvokeResponseArgs{...} }
type IdentitySourceInvokeResponseArrayInput interface {
	pulumi.Input

	ToIdentitySourceInvokeResponseArrayOutput() IdentitySourceInvokeResponseArrayOutput
	ToIdentitySourceInvokeResponseArrayOutputWithContext(context.Context) IdentitySourceInvokeResponseArrayOutput
}

type IdentitySourceInvokeResponseArray []IdentitySourceInvokeResponseInput

func (IdentitySourceInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitySourceInvokeResponse)(nil)).Elem()
}

func (i IdentitySourceInvokeResponseArray) ToIdentitySourceInvokeResponseArrayOutput() IdentitySourceInvokeResponseArrayOutput {
	return i.ToIdentitySourceInvokeResponseArrayOutputWithContext(context.Background())
}

func (i IdentitySourceInvokeResponseArray) ToIdentitySourceInvokeResponseArrayOutputWithContext(ctx context.Context) IdentitySourceInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceInvokeResponseArrayOutput)
}

// vCenter Single Sign On Identity Source
type IdentitySourceInvokeResponseOutput struct{ *pulumi.OutputState }

func (IdentitySourceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceInvokeResponse)(nil)).Elem()
}

func (o IdentitySourceInvokeResponseOutput) ToIdentitySourceInvokeResponseOutput() IdentitySourceInvokeResponseOutput {
	return o
}

func (o IdentitySourceInvokeResponseOutput) ToIdentitySourceInvokeResponseOutputWithContext(ctx context.Context) IdentitySourceInvokeResponseOutput {
	return o
}

// The domain's NetBIOS name
func (o IdentitySourceInvokeResponseOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceInvokeResponse) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// The base distinguished name for groups
func (o IdentitySourceInvokeResponseOutput) BaseGroupDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceInvokeResponse) *string { return v.BaseGroupDN }).(pulumi.StringPtrOutput)
}

// The base distinguished name for users
func (o IdentitySourceInvokeResponseOutput) BaseUserDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceInvokeResponse) *string { return v.BaseUserDN }).(pulumi.StringPtrOutput)
}

// The domain's dns name
func (o IdentitySourceInvokeResponseOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceInvokeResponse) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The name of the identity source
func (o IdentitySourceInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
func (o IdentitySourceInvokeResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceInvokeResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Primary server URL
func (o IdentitySourceInvokeResponseOutput) PrimaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceInvokeResponse) *string { return v.PrimaryServer }).(pulumi.StringPtrOutput)
}

// Secondary server URL
func (o IdentitySourceInvokeResponseOutput) SecondaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceInvokeResponse) *string { return v.SecondaryServer }).(pulumi.StringPtrOutput)
}

// Protect LDAP communication using SSL certificate (LDAPS)
func (o IdentitySourceInvokeResponseOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceInvokeResponse) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
func (o IdentitySourceInvokeResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceInvokeResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type IdentitySourceInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (IdentitySourceInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitySourceInvokeResponse)(nil)).Elem()
}

func (o IdentitySourceInvokeResponseArrayOutput) ToIdentitySourceInvokeResponseArrayOutput() IdentitySourceInvokeResponseArrayOutput {
	return o
}

func (o IdentitySourceInvokeResponseArrayOutput) ToIdentitySourceInvokeResponseArrayOutputWithContext(ctx context.Context) IdentitySourceInvokeResponseArrayOutput {
	return o
}

func (o IdentitySourceInvokeResponseArrayOutput) Index(i pulumi.IntInput) IdentitySourceInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentitySourceInvokeResponse {
		return vs[0].([]IdentitySourceInvokeResponse)[vs[1].(int)]
	}).(IdentitySourceInvokeResponseOutput)
}

// vCenter Single Sign On Identity Source
type IdentitySourceResponse struct {
	// The domain's NetBIOS name
	Alias *string `pulumi:"alias"`
	// The base distinguished name for groups
	BaseGroupDN *string `pulumi:"baseGroupDN"`
	// The base distinguished name for users
	BaseUserDN *string `pulumi:"baseUserDN"`
	// The domain's dns name
	Domain *string `pulumi:"domain"`
	// The name of the identity source
	Name *string `pulumi:"name"`
	// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
	Password *string `pulumi:"password"`
	// Primary server URL
	PrimaryServer *string `pulumi:"primaryServer"`
	// Secondary server URL
	SecondaryServer *string `pulumi:"secondaryServer"`
	// Protect LDAP communication using SSL certificate (LDAPS)
	Ssl *string `pulumi:"ssl"`
	// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
	Username *string `pulumi:"username"`
}

// IdentitySourceResponseInput is an input type that accepts IdentitySourceResponseArgs and IdentitySourceResponseOutput values.
// You can construct a concrete instance of `IdentitySourceResponseInput` via:
//
//          IdentitySourceResponseArgs{...}
type IdentitySourceResponseInput interface {
	pulumi.Input

	ToIdentitySourceResponseOutput() IdentitySourceResponseOutput
	ToIdentitySourceResponseOutputWithContext(context.Context) IdentitySourceResponseOutput
}

// vCenter Single Sign On Identity Source
type IdentitySourceResponseArgs struct {
	// The domain's NetBIOS name
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// The base distinguished name for groups
	BaseGroupDN pulumi.StringPtrInput `pulumi:"baseGroupDN"`
	// The base distinguished name for users
	BaseUserDN pulumi.StringPtrInput `pulumi:"baseUserDN"`
	// The domain's dns name
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The name of the identity source
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Primary server URL
	PrimaryServer pulumi.StringPtrInput `pulumi:"primaryServer"`
	// Secondary server URL
	SecondaryServer pulumi.StringPtrInput `pulumi:"secondaryServer"`
	// Protect LDAP communication using SSL certificate (LDAPS)
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (IdentitySourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceResponse)(nil)).Elem()
}

func (i IdentitySourceResponseArgs) ToIdentitySourceResponseOutput() IdentitySourceResponseOutput {
	return i.ToIdentitySourceResponseOutputWithContext(context.Background())
}

func (i IdentitySourceResponseArgs) ToIdentitySourceResponseOutputWithContext(ctx context.Context) IdentitySourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceResponseOutput)
}

// IdentitySourceResponseArrayInput is an input type that accepts IdentitySourceResponseArray and IdentitySourceResponseArrayOutput values.
// You can construct a concrete instance of `IdentitySourceResponseArrayInput` via:
//
//          IdentitySourceResponseArray{ IdentitySourceResponseArgs{...} }
type IdentitySourceResponseArrayInput interface {
	pulumi.Input

	ToIdentitySourceResponseArrayOutput() IdentitySourceResponseArrayOutput
	ToIdentitySourceResponseArrayOutputWithContext(context.Context) IdentitySourceResponseArrayOutput
}

type IdentitySourceResponseArray []IdentitySourceResponseInput

func (IdentitySourceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitySourceResponse)(nil)).Elem()
}

func (i IdentitySourceResponseArray) ToIdentitySourceResponseArrayOutput() IdentitySourceResponseArrayOutput {
	return i.ToIdentitySourceResponseArrayOutputWithContext(context.Background())
}

func (i IdentitySourceResponseArray) ToIdentitySourceResponseArrayOutputWithContext(ctx context.Context) IdentitySourceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceResponseArrayOutput)
}

// vCenter Single Sign On Identity Source
type IdentitySourceResponseOutput struct{ *pulumi.OutputState }

func (IdentitySourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceResponse)(nil)).Elem()
}

func (o IdentitySourceResponseOutput) ToIdentitySourceResponseOutput() IdentitySourceResponseOutput {
	return o
}

func (o IdentitySourceResponseOutput) ToIdentitySourceResponseOutputWithContext(ctx context.Context) IdentitySourceResponseOutput {
	return o
}

// The domain's NetBIOS name
func (o IdentitySourceResponseOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// The base distinguished name for groups
func (o IdentitySourceResponseOutput) BaseGroupDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.BaseGroupDN }).(pulumi.StringPtrOutput)
}

// The base distinguished name for users
func (o IdentitySourceResponseOutput) BaseUserDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.BaseUserDN }).(pulumi.StringPtrOutput)
}

// The domain's dns name
func (o IdentitySourceResponseOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The name of the identity source
func (o IdentitySourceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
func (o IdentitySourceResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Primary server URL
func (o IdentitySourceResponseOutput) PrimaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.PrimaryServer }).(pulumi.StringPtrOutput)
}

// Secondary server URL
func (o IdentitySourceResponseOutput) SecondaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.SecondaryServer }).(pulumi.StringPtrOutput)
}

// Protect LDAP communication using SSL certificate (LDAPS)
func (o IdentitySourceResponseOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
func (o IdentitySourceResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type IdentitySourceResponseArrayOutput struct{ *pulumi.OutputState }

func (IdentitySourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitySourceResponse)(nil)).Elem()
}

func (o IdentitySourceResponseArrayOutput) ToIdentitySourceResponseArrayOutput() IdentitySourceResponseArrayOutput {
	return o
}

func (o IdentitySourceResponseArrayOutput) ToIdentitySourceResponseArrayOutputWithContext(ctx context.Context) IdentitySourceResponseArrayOutput {
	return o
}

func (o IdentitySourceResponseArrayOutput) Index(i pulumi.IntInput) IdentitySourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentitySourceResponse {
		return vs[0].([]IdentitySourceResponse)[vs[1].(int)]
	}).(IdentitySourceResponseOutput)
}

// The properties of a management cluster
type ManagementCluster struct {
	// The cluster size
	ClusterSize int `pulumi:"clusterSize"`
}

// ManagementClusterInput is an input type that accepts ManagementClusterArgs and ManagementClusterOutput values.
// You can construct a concrete instance of `ManagementClusterInput` via:
//
//          ManagementClusterArgs{...}
type ManagementClusterInput interface {
	pulumi.Input

	ToManagementClusterOutput() ManagementClusterOutput
	ToManagementClusterOutputWithContext(context.Context) ManagementClusterOutput
}

// The properties of a management cluster
type ManagementClusterArgs struct {
	// The cluster size
	ClusterSize pulumi.IntInput `pulumi:"clusterSize"`
}

func (ManagementClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementCluster)(nil)).Elem()
}

func (i ManagementClusterArgs) ToManagementClusterOutput() ManagementClusterOutput {
	return i.ToManagementClusterOutputWithContext(context.Background())
}

func (i ManagementClusterArgs) ToManagementClusterOutputWithContext(ctx context.Context) ManagementClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementClusterOutput)
}

func (i ManagementClusterArgs) ToManagementClusterPtrOutput() ManagementClusterPtrOutput {
	return i.ToManagementClusterPtrOutputWithContext(context.Background())
}

func (i ManagementClusterArgs) ToManagementClusterPtrOutputWithContext(ctx context.Context) ManagementClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementClusterOutput).ToManagementClusterPtrOutputWithContext(ctx)
}

// ManagementClusterPtrInput is an input type that accepts ManagementClusterArgs, ManagementClusterPtr and ManagementClusterPtrOutput values.
// You can construct a concrete instance of `ManagementClusterPtrInput` via:
//
//          ManagementClusterArgs{...}
//
//  or:
//
//          nil
type ManagementClusterPtrInput interface {
	pulumi.Input

	ToManagementClusterPtrOutput() ManagementClusterPtrOutput
	ToManagementClusterPtrOutputWithContext(context.Context) ManagementClusterPtrOutput
}

type managementClusterPtrType ManagementClusterArgs

func ManagementClusterPtr(v *ManagementClusterArgs) ManagementClusterPtrInput {
	return (*managementClusterPtrType)(v)
}

func (*managementClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementCluster)(nil)).Elem()
}

func (i *managementClusterPtrType) ToManagementClusterPtrOutput() ManagementClusterPtrOutput {
	return i.ToManagementClusterPtrOutputWithContext(context.Background())
}

func (i *managementClusterPtrType) ToManagementClusterPtrOutputWithContext(ctx context.Context) ManagementClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementClusterPtrOutput)
}

// The properties of a management cluster
type ManagementClusterOutput struct{ *pulumi.OutputState }

func (ManagementClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementCluster)(nil)).Elem()
}

func (o ManagementClusterOutput) ToManagementClusterOutput() ManagementClusterOutput {
	return o
}

func (o ManagementClusterOutput) ToManagementClusterOutputWithContext(ctx context.Context) ManagementClusterOutput {
	return o
}

func (o ManagementClusterOutput) ToManagementClusterPtrOutput() ManagementClusterPtrOutput {
	return o.ToManagementClusterPtrOutputWithContext(context.Background())
}

func (o ManagementClusterOutput) ToManagementClusterPtrOutputWithContext(ctx context.Context) ManagementClusterPtrOutput {
	return o.ApplyT(func(v ManagementCluster) *ManagementCluster {
		return &v
	}).(ManagementClusterPtrOutput)
}

// The cluster size
func (o ManagementClusterOutput) ClusterSize() pulumi.IntOutput {
	return o.ApplyT(func(v ManagementCluster) int { return v.ClusterSize }).(pulumi.IntOutput)
}

type ManagementClusterPtrOutput struct{ *pulumi.OutputState }

func (ManagementClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementCluster)(nil)).Elem()
}

func (o ManagementClusterPtrOutput) ToManagementClusterPtrOutput() ManagementClusterPtrOutput {
	return o
}

func (o ManagementClusterPtrOutput) ToManagementClusterPtrOutputWithContext(ctx context.Context) ManagementClusterPtrOutput {
	return o
}

func (o ManagementClusterPtrOutput) Elem() ManagementClusterOutput {
	return o.ApplyT(func(v *ManagementCluster) ManagementCluster { return *v }).(ManagementClusterOutput)
}

// The cluster size
func (o ManagementClusterPtrOutput) ClusterSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagementCluster) *int {
		if v == nil {
			return nil
		}
		return &v.ClusterSize
	}).(pulumi.IntPtrOutput)
}

// The properties of a management cluster
type ManagementClusterInvokeResponse struct {
	// The identity
	ClusterId int `pulumi:"clusterId"`
	// The cluster size
	ClusterSize int `pulumi:"clusterSize"`
	// The hosts
	Hosts []string `pulumi:"hosts"`
	// The state of the cluster provisioning
	ProvisioningState string `pulumi:"provisioningState"`
}

// ManagementClusterInvokeResponseInput is an input type that accepts ManagementClusterInvokeResponseArgs and ManagementClusterInvokeResponseOutput values.
// You can construct a concrete instance of `ManagementClusterInvokeResponseInput` via:
//
//          ManagementClusterInvokeResponseArgs{...}
type ManagementClusterInvokeResponseInput interface {
	pulumi.Input

	ToManagementClusterInvokeResponseOutput() ManagementClusterInvokeResponseOutput
	ToManagementClusterInvokeResponseOutputWithContext(context.Context) ManagementClusterInvokeResponseOutput
}

// The properties of a management cluster
type ManagementClusterInvokeResponseArgs struct {
	// The identity
	ClusterId pulumi.IntInput `pulumi:"clusterId"`
	// The cluster size
	ClusterSize pulumi.IntInput `pulumi:"clusterSize"`
	// The hosts
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// The state of the cluster provisioning
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (ManagementClusterInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementClusterInvokeResponse)(nil)).Elem()
}

func (i ManagementClusterInvokeResponseArgs) ToManagementClusterInvokeResponseOutput() ManagementClusterInvokeResponseOutput {
	return i.ToManagementClusterInvokeResponseOutputWithContext(context.Background())
}

func (i ManagementClusterInvokeResponseArgs) ToManagementClusterInvokeResponseOutputWithContext(ctx context.Context) ManagementClusterInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementClusterInvokeResponseOutput)
}

// The properties of a management cluster
type ManagementClusterInvokeResponseOutput struct{ *pulumi.OutputState }

func (ManagementClusterInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementClusterInvokeResponse)(nil)).Elem()
}

func (o ManagementClusterInvokeResponseOutput) ToManagementClusterInvokeResponseOutput() ManagementClusterInvokeResponseOutput {
	return o
}

func (o ManagementClusterInvokeResponseOutput) ToManagementClusterInvokeResponseOutputWithContext(ctx context.Context) ManagementClusterInvokeResponseOutput {
	return o
}

// The identity
func (o ManagementClusterInvokeResponseOutput) ClusterId() pulumi.IntOutput {
	return o.ApplyT(func(v ManagementClusterInvokeResponse) int { return v.ClusterId }).(pulumi.IntOutput)
}

// The cluster size
func (o ManagementClusterInvokeResponseOutput) ClusterSize() pulumi.IntOutput {
	return o.ApplyT(func(v ManagementClusterInvokeResponse) int { return v.ClusterSize }).(pulumi.IntOutput)
}

// The hosts
func (o ManagementClusterInvokeResponseOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementClusterInvokeResponse) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// The state of the cluster provisioning
func (o ManagementClusterInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementClusterInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The properties of a management cluster
type ManagementClusterResponse struct {
	// The identity
	ClusterId int `pulumi:"clusterId"`
	// The cluster size
	ClusterSize int `pulumi:"clusterSize"`
	// The hosts
	Hosts []string `pulumi:"hosts"`
	// The state of the cluster provisioning
	ProvisioningState string `pulumi:"provisioningState"`
}

// ManagementClusterResponseInput is an input type that accepts ManagementClusterResponseArgs and ManagementClusterResponseOutput values.
// You can construct a concrete instance of `ManagementClusterResponseInput` via:
//
//          ManagementClusterResponseArgs{...}
type ManagementClusterResponseInput interface {
	pulumi.Input

	ToManagementClusterResponseOutput() ManagementClusterResponseOutput
	ToManagementClusterResponseOutputWithContext(context.Context) ManagementClusterResponseOutput
}

// The properties of a management cluster
type ManagementClusterResponseArgs struct {
	// The identity
	ClusterId pulumi.IntInput `pulumi:"clusterId"`
	// The cluster size
	ClusterSize pulumi.IntInput `pulumi:"clusterSize"`
	// The hosts
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// The state of the cluster provisioning
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (ManagementClusterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementClusterResponse)(nil)).Elem()
}

func (i ManagementClusterResponseArgs) ToManagementClusterResponseOutput() ManagementClusterResponseOutput {
	return i.ToManagementClusterResponseOutputWithContext(context.Background())
}

func (i ManagementClusterResponseArgs) ToManagementClusterResponseOutputWithContext(ctx context.Context) ManagementClusterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementClusterResponseOutput)
}

func (i ManagementClusterResponseArgs) ToManagementClusterResponsePtrOutput() ManagementClusterResponsePtrOutput {
	return i.ToManagementClusterResponsePtrOutputWithContext(context.Background())
}

func (i ManagementClusterResponseArgs) ToManagementClusterResponsePtrOutputWithContext(ctx context.Context) ManagementClusterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementClusterResponseOutput).ToManagementClusterResponsePtrOutputWithContext(ctx)
}

// ManagementClusterResponsePtrInput is an input type that accepts ManagementClusterResponseArgs, ManagementClusterResponsePtr and ManagementClusterResponsePtrOutput values.
// You can construct a concrete instance of `ManagementClusterResponsePtrInput` via:
//
//          ManagementClusterResponseArgs{...}
//
//  or:
//
//          nil
type ManagementClusterResponsePtrInput interface {
	pulumi.Input

	ToManagementClusterResponsePtrOutput() ManagementClusterResponsePtrOutput
	ToManagementClusterResponsePtrOutputWithContext(context.Context) ManagementClusterResponsePtrOutput
}

type managementClusterResponsePtrType ManagementClusterResponseArgs

func ManagementClusterResponsePtr(v *ManagementClusterResponseArgs) ManagementClusterResponsePtrInput {
	return (*managementClusterResponsePtrType)(v)
}

func (*managementClusterResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementClusterResponse)(nil)).Elem()
}

func (i *managementClusterResponsePtrType) ToManagementClusterResponsePtrOutput() ManagementClusterResponsePtrOutput {
	return i.ToManagementClusterResponsePtrOutputWithContext(context.Background())
}

func (i *managementClusterResponsePtrType) ToManagementClusterResponsePtrOutputWithContext(ctx context.Context) ManagementClusterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementClusterResponsePtrOutput)
}

// The properties of a management cluster
type ManagementClusterResponseOutput struct{ *pulumi.OutputState }

func (ManagementClusterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementClusterResponse)(nil)).Elem()
}

func (o ManagementClusterResponseOutput) ToManagementClusterResponseOutput() ManagementClusterResponseOutput {
	return o
}

func (o ManagementClusterResponseOutput) ToManagementClusterResponseOutputWithContext(ctx context.Context) ManagementClusterResponseOutput {
	return o
}

func (o ManagementClusterResponseOutput) ToManagementClusterResponsePtrOutput() ManagementClusterResponsePtrOutput {
	return o.ToManagementClusterResponsePtrOutputWithContext(context.Background())
}

func (o ManagementClusterResponseOutput) ToManagementClusterResponsePtrOutputWithContext(ctx context.Context) ManagementClusterResponsePtrOutput {
	return o.ApplyT(func(v ManagementClusterResponse) *ManagementClusterResponse {
		return &v
	}).(ManagementClusterResponsePtrOutput)
}

// The identity
func (o ManagementClusterResponseOutput) ClusterId() pulumi.IntOutput {
	return o.ApplyT(func(v ManagementClusterResponse) int { return v.ClusterId }).(pulumi.IntOutput)
}

// The cluster size
func (o ManagementClusterResponseOutput) ClusterSize() pulumi.IntOutput {
	return o.ApplyT(func(v ManagementClusterResponse) int { return v.ClusterSize }).(pulumi.IntOutput)
}

// The hosts
func (o ManagementClusterResponseOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementClusterResponse) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// The state of the cluster provisioning
func (o ManagementClusterResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementClusterResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type ManagementClusterResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagementClusterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementClusterResponse)(nil)).Elem()
}

func (o ManagementClusterResponsePtrOutput) ToManagementClusterResponsePtrOutput() ManagementClusterResponsePtrOutput {
	return o
}

func (o ManagementClusterResponsePtrOutput) ToManagementClusterResponsePtrOutputWithContext(ctx context.Context) ManagementClusterResponsePtrOutput {
	return o
}

func (o ManagementClusterResponsePtrOutput) Elem() ManagementClusterResponseOutput {
	return o.ApplyT(func(v *ManagementClusterResponse) ManagementClusterResponse { return *v }).(ManagementClusterResponseOutput)
}

// The identity
func (o ManagementClusterResponsePtrOutput) ClusterId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagementClusterResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ClusterId
	}).(pulumi.IntPtrOutput)
}

// The cluster size
func (o ManagementClusterResponsePtrOutput) ClusterSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagementClusterResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ClusterSize
	}).(pulumi.IntPtrOutput)
}

// The hosts
func (o ManagementClusterResponsePtrOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagementClusterResponse) []string {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(pulumi.StringArrayOutput)
}

// The state of the cluster provisioning
func (o ManagementClusterResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementClusterResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource model definition representing SKU
type Sku struct {
	// The name of the SKU.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The resource model definition representing SKU
type SkuArgs struct {
	// The name of the SKU.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The resource model definition representing SKU
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The name of the SKU.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// The name of the SKU.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The resource model definition representing SKU
type SkuInvokeResponse struct {
	// The name of the SKU.
	Name string `pulumi:"name"`
}

// SkuInvokeResponseInput is an input type that accepts SkuInvokeResponseArgs and SkuInvokeResponseOutput values.
// You can construct a concrete instance of `SkuInvokeResponseInput` via:
//
//          SkuInvokeResponseArgs{...}
type SkuInvokeResponseInput interface {
	pulumi.Input

	ToSkuInvokeResponseOutput() SkuInvokeResponseOutput
	ToSkuInvokeResponseOutputWithContext(context.Context) SkuInvokeResponseOutput
}

// The resource model definition representing SKU
type SkuInvokeResponseArgs struct {
	// The name of the SKU.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuInvokeResponse)(nil)).Elem()
}

func (i SkuInvokeResponseArgs) ToSkuInvokeResponseOutput() SkuInvokeResponseOutput {
	return i.ToSkuInvokeResponseOutputWithContext(context.Background())
}

func (i SkuInvokeResponseArgs) ToSkuInvokeResponseOutputWithContext(ctx context.Context) SkuInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuInvokeResponseOutput)
}

// The resource model definition representing SKU
type SkuInvokeResponseOutput struct{ *pulumi.OutputState }

func (SkuInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuInvokeResponse)(nil)).Elem()
}

func (o SkuInvokeResponseOutput) ToSkuInvokeResponseOutput() SkuInvokeResponseOutput {
	return o
}

func (o SkuInvokeResponseOutput) ToSkuInvokeResponseOutputWithContext(ctx context.Context) SkuInvokeResponseOutput {
	return o
}

// The name of the SKU.
func (o SkuInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The resource model definition representing SKU
type SkuResponse struct {
	// The name of the SKU.
	Name string `pulumi:"name"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// The resource model definition representing SKU
type SkuResponseArgs struct {
	// The name of the SKU.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// The resource model definition representing SKU
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The name of the SKU.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The name of the SKU.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Ports and any VIF attached to segment.
type WorkloadNetworkSegmentPortVifInvokeResponse struct {
	// Name of port or VIF attached to segment.
	PortName *string `pulumi:"portName"`
}

// WorkloadNetworkSegmentPortVifInvokeResponseInput is an input type that accepts WorkloadNetworkSegmentPortVifInvokeResponseArgs and WorkloadNetworkSegmentPortVifInvokeResponseOutput values.
// You can construct a concrete instance of `WorkloadNetworkSegmentPortVifInvokeResponseInput` via:
//
//          WorkloadNetworkSegmentPortVifInvokeResponseArgs{...}
type WorkloadNetworkSegmentPortVifInvokeResponseInput interface {
	pulumi.Input

	ToWorkloadNetworkSegmentPortVifInvokeResponseOutput() WorkloadNetworkSegmentPortVifInvokeResponseOutput
	ToWorkloadNetworkSegmentPortVifInvokeResponseOutputWithContext(context.Context) WorkloadNetworkSegmentPortVifInvokeResponseOutput
}

// Ports and any VIF attached to segment.
type WorkloadNetworkSegmentPortVifInvokeResponseArgs struct {
	// Name of port or VIF attached to segment.
	PortName pulumi.StringPtrInput `pulumi:"portName"`
}

func (WorkloadNetworkSegmentPortVifInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegmentPortVifInvokeResponse)(nil)).Elem()
}

func (i WorkloadNetworkSegmentPortVifInvokeResponseArgs) ToWorkloadNetworkSegmentPortVifInvokeResponseOutput() WorkloadNetworkSegmentPortVifInvokeResponseOutput {
	return i.ToWorkloadNetworkSegmentPortVifInvokeResponseOutputWithContext(context.Background())
}

func (i WorkloadNetworkSegmentPortVifInvokeResponseArgs) ToWorkloadNetworkSegmentPortVifInvokeResponseOutputWithContext(ctx context.Context) WorkloadNetworkSegmentPortVifInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkSegmentPortVifInvokeResponseOutput)
}

// WorkloadNetworkSegmentPortVifInvokeResponseArrayInput is an input type that accepts WorkloadNetworkSegmentPortVifInvokeResponseArray and WorkloadNetworkSegmentPortVifInvokeResponseArrayOutput values.
// You can construct a concrete instance of `WorkloadNetworkSegmentPortVifInvokeResponseArrayInput` via:
//
//          WorkloadNetworkSegmentPortVifInvokeResponseArray{ WorkloadNetworkSegmentPortVifInvokeResponseArgs{...} }
type WorkloadNetworkSegmentPortVifInvokeResponseArrayInput interface {
	pulumi.Input

	ToWorkloadNetworkSegmentPortVifInvokeResponseArrayOutput() WorkloadNetworkSegmentPortVifInvokeResponseArrayOutput
	ToWorkloadNetworkSegmentPortVifInvokeResponseArrayOutputWithContext(context.Context) WorkloadNetworkSegmentPortVifInvokeResponseArrayOutput
}

type WorkloadNetworkSegmentPortVifInvokeResponseArray []WorkloadNetworkSegmentPortVifInvokeResponseInput

func (WorkloadNetworkSegmentPortVifInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadNetworkSegmentPortVifInvokeResponse)(nil)).Elem()
}

func (i WorkloadNetworkSegmentPortVifInvokeResponseArray) ToWorkloadNetworkSegmentPortVifInvokeResponseArrayOutput() WorkloadNetworkSegmentPortVifInvokeResponseArrayOutput {
	return i.ToWorkloadNetworkSegmentPortVifInvokeResponseArrayOutputWithContext(context.Background())
}

func (i WorkloadNetworkSegmentPortVifInvokeResponseArray) ToWorkloadNetworkSegmentPortVifInvokeResponseArrayOutputWithContext(ctx context.Context) WorkloadNetworkSegmentPortVifInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkSegmentPortVifInvokeResponseArrayOutput)
}

// Ports and any VIF attached to segment.
type WorkloadNetworkSegmentPortVifInvokeResponseOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentPortVifInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegmentPortVifInvokeResponse)(nil)).Elem()
}

func (o WorkloadNetworkSegmentPortVifInvokeResponseOutput) ToWorkloadNetworkSegmentPortVifInvokeResponseOutput() WorkloadNetworkSegmentPortVifInvokeResponseOutput {
	return o
}

func (o WorkloadNetworkSegmentPortVifInvokeResponseOutput) ToWorkloadNetworkSegmentPortVifInvokeResponseOutputWithContext(ctx context.Context) WorkloadNetworkSegmentPortVifInvokeResponseOutput {
	return o
}

// Name of port or VIF attached to segment.
func (o WorkloadNetworkSegmentPortVifInvokeResponseOutput) PortName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentPortVifInvokeResponse) *string { return v.PortName }).(pulumi.StringPtrOutput)
}

type WorkloadNetworkSegmentPortVifInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentPortVifInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadNetworkSegmentPortVifInvokeResponse)(nil)).Elem()
}

func (o WorkloadNetworkSegmentPortVifInvokeResponseArrayOutput) ToWorkloadNetworkSegmentPortVifInvokeResponseArrayOutput() WorkloadNetworkSegmentPortVifInvokeResponseArrayOutput {
	return o
}

func (o WorkloadNetworkSegmentPortVifInvokeResponseArrayOutput) ToWorkloadNetworkSegmentPortVifInvokeResponseArrayOutputWithContext(ctx context.Context) WorkloadNetworkSegmentPortVifInvokeResponseArrayOutput {
	return o
}

func (o WorkloadNetworkSegmentPortVifInvokeResponseArrayOutput) Index(i pulumi.IntInput) WorkloadNetworkSegmentPortVifInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadNetworkSegmentPortVifInvokeResponse {
		return vs[0].([]WorkloadNetworkSegmentPortVifInvokeResponse)[vs[1].(int)]
	}).(WorkloadNetworkSegmentPortVifInvokeResponseOutput)
}

// Ports and any VIF attached to segment.
type WorkloadNetworkSegmentPortVifResponse struct {
	// Name of port or VIF attached to segment.
	PortName *string `pulumi:"portName"`
}

// WorkloadNetworkSegmentPortVifResponseInput is an input type that accepts WorkloadNetworkSegmentPortVifResponseArgs and WorkloadNetworkSegmentPortVifResponseOutput values.
// You can construct a concrete instance of `WorkloadNetworkSegmentPortVifResponseInput` via:
//
//          WorkloadNetworkSegmentPortVifResponseArgs{...}
type WorkloadNetworkSegmentPortVifResponseInput interface {
	pulumi.Input

	ToWorkloadNetworkSegmentPortVifResponseOutput() WorkloadNetworkSegmentPortVifResponseOutput
	ToWorkloadNetworkSegmentPortVifResponseOutputWithContext(context.Context) WorkloadNetworkSegmentPortVifResponseOutput
}

// Ports and any VIF attached to segment.
type WorkloadNetworkSegmentPortVifResponseArgs struct {
	// Name of port or VIF attached to segment.
	PortName pulumi.StringPtrInput `pulumi:"portName"`
}

func (WorkloadNetworkSegmentPortVifResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegmentPortVifResponse)(nil)).Elem()
}

func (i WorkloadNetworkSegmentPortVifResponseArgs) ToWorkloadNetworkSegmentPortVifResponseOutput() WorkloadNetworkSegmentPortVifResponseOutput {
	return i.ToWorkloadNetworkSegmentPortVifResponseOutputWithContext(context.Background())
}

func (i WorkloadNetworkSegmentPortVifResponseArgs) ToWorkloadNetworkSegmentPortVifResponseOutputWithContext(ctx context.Context) WorkloadNetworkSegmentPortVifResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkSegmentPortVifResponseOutput)
}

// WorkloadNetworkSegmentPortVifResponseArrayInput is an input type that accepts WorkloadNetworkSegmentPortVifResponseArray and WorkloadNetworkSegmentPortVifResponseArrayOutput values.
// You can construct a concrete instance of `WorkloadNetworkSegmentPortVifResponseArrayInput` via:
//
//          WorkloadNetworkSegmentPortVifResponseArray{ WorkloadNetworkSegmentPortVifResponseArgs{...} }
type WorkloadNetworkSegmentPortVifResponseArrayInput interface {
	pulumi.Input

	ToWorkloadNetworkSegmentPortVifResponseArrayOutput() WorkloadNetworkSegmentPortVifResponseArrayOutput
	ToWorkloadNetworkSegmentPortVifResponseArrayOutputWithContext(context.Context) WorkloadNetworkSegmentPortVifResponseArrayOutput
}

type WorkloadNetworkSegmentPortVifResponseArray []WorkloadNetworkSegmentPortVifResponseInput

func (WorkloadNetworkSegmentPortVifResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadNetworkSegmentPortVifResponse)(nil)).Elem()
}

func (i WorkloadNetworkSegmentPortVifResponseArray) ToWorkloadNetworkSegmentPortVifResponseArrayOutput() WorkloadNetworkSegmentPortVifResponseArrayOutput {
	return i.ToWorkloadNetworkSegmentPortVifResponseArrayOutputWithContext(context.Background())
}

func (i WorkloadNetworkSegmentPortVifResponseArray) ToWorkloadNetworkSegmentPortVifResponseArrayOutputWithContext(ctx context.Context) WorkloadNetworkSegmentPortVifResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkSegmentPortVifResponseArrayOutput)
}

// Ports and any VIF attached to segment.
type WorkloadNetworkSegmentPortVifResponseOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentPortVifResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegmentPortVifResponse)(nil)).Elem()
}

func (o WorkloadNetworkSegmentPortVifResponseOutput) ToWorkloadNetworkSegmentPortVifResponseOutput() WorkloadNetworkSegmentPortVifResponseOutput {
	return o
}

func (o WorkloadNetworkSegmentPortVifResponseOutput) ToWorkloadNetworkSegmentPortVifResponseOutputWithContext(ctx context.Context) WorkloadNetworkSegmentPortVifResponseOutput {
	return o
}

// Name of port or VIF attached to segment.
func (o WorkloadNetworkSegmentPortVifResponseOutput) PortName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentPortVifResponse) *string { return v.PortName }).(pulumi.StringPtrOutput)
}

type WorkloadNetworkSegmentPortVifResponseArrayOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentPortVifResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadNetworkSegmentPortVifResponse)(nil)).Elem()
}

func (o WorkloadNetworkSegmentPortVifResponseArrayOutput) ToWorkloadNetworkSegmentPortVifResponseArrayOutput() WorkloadNetworkSegmentPortVifResponseArrayOutput {
	return o
}

func (o WorkloadNetworkSegmentPortVifResponseArrayOutput) ToWorkloadNetworkSegmentPortVifResponseArrayOutputWithContext(ctx context.Context) WorkloadNetworkSegmentPortVifResponseArrayOutput {
	return o
}

func (o WorkloadNetworkSegmentPortVifResponseArrayOutput) Index(i pulumi.IntInput) WorkloadNetworkSegmentPortVifResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadNetworkSegmentPortVifResponse {
		return vs[0].([]WorkloadNetworkSegmentPortVifResponse)[vs[1].(int)]
	}).(WorkloadNetworkSegmentPortVifResponseOutput)
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnet struct {
	// DHCP Range assigned for subnet.
	DhcpRanges []string `pulumi:"dhcpRanges"`
	// Gateway address.
	GatewayAddress *string `pulumi:"gatewayAddress"`
}

// WorkloadNetworkSegmentSubnetInput is an input type that accepts WorkloadNetworkSegmentSubnetArgs and WorkloadNetworkSegmentSubnetOutput values.
// You can construct a concrete instance of `WorkloadNetworkSegmentSubnetInput` via:
//
//          WorkloadNetworkSegmentSubnetArgs{...}
type WorkloadNetworkSegmentSubnetInput interface {
	pulumi.Input

	ToWorkloadNetworkSegmentSubnetOutput() WorkloadNetworkSegmentSubnetOutput
	ToWorkloadNetworkSegmentSubnetOutputWithContext(context.Context) WorkloadNetworkSegmentSubnetOutput
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnetArgs struct {
	// DHCP Range assigned for subnet.
	DhcpRanges pulumi.StringArrayInput `pulumi:"dhcpRanges"`
	// Gateway address.
	GatewayAddress pulumi.StringPtrInput `pulumi:"gatewayAddress"`
}

func (WorkloadNetworkSegmentSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegmentSubnet)(nil)).Elem()
}

func (i WorkloadNetworkSegmentSubnetArgs) ToWorkloadNetworkSegmentSubnetOutput() WorkloadNetworkSegmentSubnetOutput {
	return i.ToWorkloadNetworkSegmentSubnetOutputWithContext(context.Background())
}

func (i WorkloadNetworkSegmentSubnetArgs) ToWorkloadNetworkSegmentSubnetOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkSegmentSubnetOutput)
}

func (i WorkloadNetworkSegmentSubnetArgs) ToWorkloadNetworkSegmentSubnetPtrOutput() WorkloadNetworkSegmentSubnetPtrOutput {
	return i.ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(context.Background())
}

func (i WorkloadNetworkSegmentSubnetArgs) ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkSegmentSubnetOutput).ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(ctx)
}

// WorkloadNetworkSegmentSubnetPtrInput is an input type that accepts WorkloadNetworkSegmentSubnetArgs, WorkloadNetworkSegmentSubnetPtr and WorkloadNetworkSegmentSubnetPtrOutput values.
// You can construct a concrete instance of `WorkloadNetworkSegmentSubnetPtrInput` via:
//
//          WorkloadNetworkSegmentSubnetArgs{...}
//
//  or:
//
//          nil
type WorkloadNetworkSegmentSubnetPtrInput interface {
	pulumi.Input

	ToWorkloadNetworkSegmentSubnetPtrOutput() WorkloadNetworkSegmentSubnetPtrOutput
	ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(context.Context) WorkloadNetworkSegmentSubnetPtrOutput
}

type workloadNetworkSegmentSubnetPtrType WorkloadNetworkSegmentSubnetArgs

func WorkloadNetworkSegmentSubnetPtr(v *WorkloadNetworkSegmentSubnetArgs) WorkloadNetworkSegmentSubnetPtrInput {
	return (*workloadNetworkSegmentSubnetPtrType)(v)
}

func (*workloadNetworkSegmentSubnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadNetworkSegmentSubnet)(nil)).Elem()
}

func (i *workloadNetworkSegmentSubnetPtrType) ToWorkloadNetworkSegmentSubnetPtrOutput() WorkloadNetworkSegmentSubnetPtrOutput {
	return i.ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(context.Background())
}

func (i *workloadNetworkSegmentSubnetPtrType) ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkSegmentSubnetPtrOutput)
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnetOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegmentSubnet)(nil)).Elem()
}

func (o WorkloadNetworkSegmentSubnetOutput) ToWorkloadNetworkSegmentSubnetOutput() WorkloadNetworkSegmentSubnetOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetOutput) ToWorkloadNetworkSegmentSubnetOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetOutput) ToWorkloadNetworkSegmentSubnetPtrOutput() WorkloadNetworkSegmentSubnetPtrOutput {
	return o.ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(context.Background())
}

func (o WorkloadNetworkSegmentSubnetOutput) ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetPtrOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentSubnet) *WorkloadNetworkSegmentSubnet {
		return &v
	}).(WorkloadNetworkSegmentSubnetPtrOutput)
}

// DHCP Range assigned for subnet.
func (o WorkloadNetworkSegmentSubnetOutput) DhcpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentSubnet) []string { return v.DhcpRanges }).(pulumi.StringArrayOutput)
}

// Gateway address.
func (o WorkloadNetworkSegmentSubnetOutput) GatewayAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentSubnet) *string { return v.GatewayAddress }).(pulumi.StringPtrOutput)
}

type WorkloadNetworkSegmentSubnetPtrOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentSubnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadNetworkSegmentSubnet)(nil)).Elem()
}

func (o WorkloadNetworkSegmentSubnetPtrOutput) ToWorkloadNetworkSegmentSubnetPtrOutput() WorkloadNetworkSegmentSubnetPtrOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetPtrOutput) ToWorkloadNetworkSegmentSubnetPtrOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetPtrOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetPtrOutput) Elem() WorkloadNetworkSegmentSubnetOutput {
	return o.ApplyT(func(v *WorkloadNetworkSegmentSubnet) WorkloadNetworkSegmentSubnet { return *v }).(WorkloadNetworkSegmentSubnetOutput)
}

// DHCP Range assigned for subnet.
func (o WorkloadNetworkSegmentSubnetPtrOutput) DhcpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadNetworkSegmentSubnet) []string {
		if v == nil {
			return nil
		}
		return v.DhcpRanges
	}).(pulumi.StringArrayOutput)
}

// Gateway address.
func (o WorkloadNetworkSegmentSubnetPtrOutput) GatewayAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadNetworkSegmentSubnet) *string {
		if v == nil {
			return nil
		}
		return v.GatewayAddress
	}).(pulumi.StringPtrOutput)
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnetInvokeResponse struct {
	// DHCP Range assigned for subnet.
	DhcpRanges []string `pulumi:"dhcpRanges"`
	// Gateway address.
	GatewayAddress *string `pulumi:"gatewayAddress"`
}

// WorkloadNetworkSegmentSubnetInvokeResponseInput is an input type that accepts WorkloadNetworkSegmentSubnetInvokeResponseArgs and WorkloadNetworkSegmentSubnetInvokeResponseOutput values.
// You can construct a concrete instance of `WorkloadNetworkSegmentSubnetInvokeResponseInput` via:
//
//          WorkloadNetworkSegmentSubnetInvokeResponseArgs{...}
type WorkloadNetworkSegmentSubnetInvokeResponseInput interface {
	pulumi.Input

	ToWorkloadNetworkSegmentSubnetInvokeResponseOutput() WorkloadNetworkSegmentSubnetInvokeResponseOutput
	ToWorkloadNetworkSegmentSubnetInvokeResponseOutputWithContext(context.Context) WorkloadNetworkSegmentSubnetInvokeResponseOutput
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnetInvokeResponseArgs struct {
	// DHCP Range assigned for subnet.
	DhcpRanges pulumi.StringArrayInput `pulumi:"dhcpRanges"`
	// Gateway address.
	GatewayAddress pulumi.StringPtrInput `pulumi:"gatewayAddress"`
}

func (WorkloadNetworkSegmentSubnetInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegmentSubnetInvokeResponse)(nil)).Elem()
}

func (i WorkloadNetworkSegmentSubnetInvokeResponseArgs) ToWorkloadNetworkSegmentSubnetInvokeResponseOutput() WorkloadNetworkSegmentSubnetInvokeResponseOutput {
	return i.ToWorkloadNetworkSegmentSubnetInvokeResponseOutputWithContext(context.Background())
}

func (i WorkloadNetworkSegmentSubnetInvokeResponseArgs) ToWorkloadNetworkSegmentSubnetInvokeResponseOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkSegmentSubnetInvokeResponseOutput)
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnetInvokeResponseOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentSubnetInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegmentSubnetInvokeResponse)(nil)).Elem()
}

func (o WorkloadNetworkSegmentSubnetInvokeResponseOutput) ToWorkloadNetworkSegmentSubnetInvokeResponseOutput() WorkloadNetworkSegmentSubnetInvokeResponseOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetInvokeResponseOutput) ToWorkloadNetworkSegmentSubnetInvokeResponseOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetInvokeResponseOutput {
	return o
}

// DHCP Range assigned for subnet.
func (o WorkloadNetworkSegmentSubnetInvokeResponseOutput) DhcpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentSubnetInvokeResponse) []string { return v.DhcpRanges }).(pulumi.StringArrayOutput)
}

// Gateway address.
func (o WorkloadNetworkSegmentSubnetInvokeResponseOutput) GatewayAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentSubnetInvokeResponse) *string { return v.GatewayAddress }).(pulumi.StringPtrOutput)
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnetResponse struct {
	// DHCP Range assigned for subnet.
	DhcpRanges []string `pulumi:"dhcpRanges"`
	// Gateway address.
	GatewayAddress *string `pulumi:"gatewayAddress"`
}

// WorkloadNetworkSegmentSubnetResponseInput is an input type that accepts WorkloadNetworkSegmentSubnetResponseArgs and WorkloadNetworkSegmentSubnetResponseOutput values.
// You can construct a concrete instance of `WorkloadNetworkSegmentSubnetResponseInput` via:
//
//          WorkloadNetworkSegmentSubnetResponseArgs{...}
type WorkloadNetworkSegmentSubnetResponseInput interface {
	pulumi.Input

	ToWorkloadNetworkSegmentSubnetResponseOutput() WorkloadNetworkSegmentSubnetResponseOutput
	ToWorkloadNetworkSegmentSubnetResponseOutputWithContext(context.Context) WorkloadNetworkSegmentSubnetResponseOutput
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnetResponseArgs struct {
	// DHCP Range assigned for subnet.
	DhcpRanges pulumi.StringArrayInput `pulumi:"dhcpRanges"`
	// Gateway address.
	GatewayAddress pulumi.StringPtrInput `pulumi:"gatewayAddress"`
}

func (WorkloadNetworkSegmentSubnetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegmentSubnetResponse)(nil)).Elem()
}

func (i WorkloadNetworkSegmentSubnetResponseArgs) ToWorkloadNetworkSegmentSubnetResponseOutput() WorkloadNetworkSegmentSubnetResponseOutput {
	return i.ToWorkloadNetworkSegmentSubnetResponseOutputWithContext(context.Background())
}

func (i WorkloadNetworkSegmentSubnetResponseArgs) ToWorkloadNetworkSegmentSubnetResponseOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkSegmentSubnetResponseOutput)
}

func (i WorkloadNetworkSegmentSubnetResponseArgs) ToWorkloadNetworkSegmentSubnetResponsePtrOutput() WorkloadNetworkSegmentSubnetResponsePtrOutput {
	return i.ToWorkloadNetworkSegmentSubnetResponsePtrOutputWithContext(context.Background())
}

func (i WorkloadNetworkSegmentSubnetResponseArgs) ToWorkloadNetworkSegmentSubnetResponsePtrOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkSegmentSubnetResponseOutput).ToWorkloadNetworkSegmentSubnetResponsePtrOutputWithContext(ctx)
}

// WorkloadNetworkSegmentSubnetResponsePtrInput is an input type that accepts WorkloadNetworkSegmentSubnetResponseArgs, WorkloadNetworkSegmentSubnetResponsePtr and WorkloadNetworkSegmentSubnetResponsePtrOutput values.
// You can construct a concrete instance of `WorkloadNetworkSegmentSubnetResponsePtrInput` via:
//
//          WorkloadNetworkSegmentSubnetResponseArgs{...}
//
//  or:
//
//          nil
type WorkloadNetworkSegmentSubnetResponsePtrInput interface {
	pulumi.Input

	ToWorkloadNetworkSegmentSubnetResponsePtrOutput() WorkloadNetworkSegmentSubnetResponsePtrOutput
	ToWorkloadNetworkSegmentSubnetResponsePtrOutputWithContext(context.Context) WorkloadNetworkSegmentSubnetResponsePtrOutput
}

type workloadNetworkSegmentSubnetResponsePtrType WorkloadNetworkSegmentSubnetResponseArgs

func WorkloadNetworkSegmentSubnetResponsePtr(v *WorkloadNetworkSegmentSubnetResponseArgs) WorkloadNetworkSegmentSubnetResponsePtrInput {
	return (*workloadNetworkSegmentSubnetResponsePtrType)(v)
}

func (*workloadNetworkSegmentSubnetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadNetworkSegmentSubnetResponse)(nil)).Elem()
}

func (i *workloadNetworkSegmentSubnetResponsePtrType) ToWorkloadNetworkSegmentSubnetResponsePtrOutput() WorkloadNetworkSegmentSubnetResponsePtrOutput {
	return i.ToWorkloadNetworkSegmentSubnetResponsePtrOutputWithContext(context.Background())
}

func (i *workloadNetworkSegmentSubnetResponsePtrType) ToWorkloadNetworkSegmentSubnetResponsePtrOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadNetworkSegmentSubnetResponsePtrOutput)
}

// Subnet configuration for segment
type WorkloadNetworkSegmentSubnetResponseOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentSubnetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadNetworkSegmentSubnetResponse)(nil)).Elem()
}

func (o WorkloadNetworkSegmentSubnetResponseOutput) ToWorkloadNetworkSegmentSubnetResponseOutput() WorkloadNetworkSegmentSubnetResponseOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetResponseOutput) ToWorkloadNetworkSegmentSubnetResponseOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetResponseOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetResponseOutput) ToWorkloadNetworkSegmentSubnetResponsePtrOutput() WorkloadNetworkSegmentSubnetResponsePtrOutput {
	return o.ToWorkloadNetworkSegmentSubnetResponsePtrOutputWithContext(context.Background())
}

func (o WorkloadNetworkSegmentSubnetResponseOutput) ToWorkloadNetworkSegmentSubnetResponsePtrOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetResponsePtrOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentSubnetResponse) *WorkloadNetworkSegmentSubnetResponse {
		return &v
	}).(WorkloadNetworkSegmentSubnetResponsePtrOutput)
}

// DHCP Range assigned for subnet.
func (o WorkloadNetworkSegmentSubnetResponseOutput) DhcpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentSubnetResponse) []string { return v.DhcpRanges }).(pulumi.StringArrayOutput)
}

// Gateway address.
func (o WorkloadNetworkSegmentSubnetResponseOutput) GatewayAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadNetworkSegmentSubnetResponse) *string { return v.GatewayAddress }).(pulumi.StringPtrOutput)
}

type WorkloadNetworkSegmentSubnetResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkloadNetworkSegmentSubnetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadNetworkSegmentSubnetResponse)(nil)).Elem()
}

func (o WorkloadNetworkSegmentSubnetResponsePtrOutput) ToWorkloadNetworkSegmentSubnetResponsePtrOutput() WorkloadNetworkSegmentSubnetResponsePtrOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetResponsePtrOutput) ToWorkloadNetworkSegmentSubnetResponsePtrOutputWithContext(ctx context.Context) WorkloadNetworkSegmentSubnetResponsePtrOutput {
	return o
}

func (o WorkloadNetworkSegmentSubnetResponsePtrOutput) Elem() WorkloadNetworkSegmentSubnetResponseOutput {
	return o.ApplyT(func(v *WorkloadNetworkSegmentSubnetResponse) WorkloadNetworkSegmentSubnetResponse { return *v }).(WorkloadNetworkSegmentSubnetResponseOutput)
}

// DHCP Range assigned for subnet.
func (o WorkloadNetworkSegmentSubnetResponsePtrOutput) DhcpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadNetworkSegmentSubnetResponse) []string {
		if v == nil {
			return nil
		}
		return v.DhcpRanges
	}).(pulumi.StringArrayOutput)
}

// Gateway address.
func (o WorkloadNetworkSegmentSubnetResponsePtrOutput) GatewayAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadNetworkSegmentSubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.GatewayAddress
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CircuitInvokeResponseOutput{})
	pulumi.RegisterOutputType(CircuitResponseOutput{})
	pulumi.RegisterOutputType(CircuitResponsePtrOutput{})
	pulumi.RegisterOutputType(EndpointsInvokeResponseOutput{})
	pulumi.RegisterOutputType(EndpointsResponseOutput{})
	pulumi.RegisterOutputType(EndpointsResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentitySourceOutput{})
	pulumi.RegisterOutputType(IdentitySourceArrayOutput{})
	pulumi.RegisterOutputType(IdentitySourceInvokeResponseOutput{})
	pulumi.RegisterOutputType(IdentitySourceInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentitySourceResponseOutput{})
	pulumi.RegisterOutputType(IdentitySourceResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagementClusterOutput{})
	pulumi.RegisterOutputType(ManagementClusterPtrOutput{})
	pulumi.RegisterOutputType(ManagementClusterInvokeResponseOutput{})
	pulumi.RegisterOutputType(ManagementClusterResponseOutput{})
	pulumi.RegisterOutputType(ManagementClusterResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuInvokeResponseOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentPortVifInvokeResponseOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentPortVifInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentPortVifResponseOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentPortVifResponseArrayOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentSubnetOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentSubnetPtrOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentSubnetInvokeResponseOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentSubnetResponseOutput{})
	pulumi.RegisterOutputType(WorkloadNetworkSegmentSubnetResponsePtrOutput{})
}
