// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200717preview

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A global reach connection resource
func LookupGlobalReachConnection(ctx *pulumi.Context, args *LookupGlobalReachConnectionArgs, opts ...pulumi.InvokeOption) (*LookupGlobalReachConnectionResult, error) {
	var rv LookupGlobalReachConnectionResult
	err := ctx.Invoke("azure-nextgen:avs/v20200717preview:getGlobalReachConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupGlobalReachConnectionArgs struct {
	// Name of the global reach connection in the private cloud
	GlobalReachConnectionName string `pulumi:"globalReachConnectionName"`
	// Name of the private cloud
	PrivateCloudName string `pulumi:"privateCloudName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A global reach connection resource
type LookupGlobalReachConnectionResult struct {
	// The network used for global reach carved out from the original network block provided for the private cloud
	AddressPrefix string `pulumi:"addressPrefix"`
	// Authorization key from the peer express route used for the global reach connection
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// The connection status of the global reach connection
	CircuitConnectionStatus string `pulumi:"circuitConnectionStatus"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// Identifier of the ExpressRoute Circuit to peer with in the global reach connection
	PeerExpressRouteCircuit *string `pulumi:"peerExpressRouteCircuit"`
	// The state of the  ExpressRoute Circuit Authorization provisioning
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}
