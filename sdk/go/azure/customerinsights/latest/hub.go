// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Hub resource.
type Hub struct {
	pulumi.CustomResourceState

	// API endpoint URL of the hub.
	ApiEndpoint pulumi.StringOutput `pulumi:"apiEndpoint"`
	// Billing settings of the hub.
	HubBillingInfo HubBillingInfoFormatResponsePtrOutput `pulumi:"hubBillingInfo"`
	// Resource location.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Provisioning state of the hub.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0.
	TenantFeatures pulumi.IntPtrOutput `pulumi:"tenantFeatures"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
	// Web endpoint URL of the hub.
	WebEndpoint pulumi.StringOutput `pulumi:"webEndpoint"`
}

// NewHub registers a new resource with the given unique name, arguments, and options.
func NewHub(ctx *pulumi.Context,
	name string, args *HubArgs, opts ...pulumi.ResourceOption) (*Hub, error) {
	if args == nil || args.HubName == nil {
		return nil, errors.New("missing required argument 'HubName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &HubArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:customerinsights/v20170101:Hub"),
		},
		{
			Type: pulumi.String("azure-nextgen:customerinsights/v20170426:Hub"),
		},
	})
	opts = append(opts, aliases)
	var resource Hub
	err := ctx.RegisterResource("azure-nextgen:customerinsights/latest:Hub", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHub gets an existing Hub resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHub(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HubState, opts ...pulumi.ResourceOption) (*Hub, error) {
	var resource Hub
	err := ctx.ReadResource("azure-nextgen:customerinsights/latest:Hub", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Hub resources.
type hubState struct {
	// API endpoint URL of the hub.
	ApiEndpoint *string `pulumi:"apiEndpoint"`
	// Billing settings of the hub.
	HubBillingInfo *HubBillingInfoFormatResponse `pulumi:"hubBillingInfo"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name *string `pulumi:"name"`
	// Provisioning state of the hub.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0.
	TenantFeatures *int `pulumi:"tenantFeatures"`
	// Resource type.
	Type *string `pulumi:"type"`
	// Web endpoint URL of the hub.
	WebEndpoint *string `pulumi:"webEndpoint"`
}

type HubState struct {
	// API endpoint URL of the hub.
	ApiEndpoint pulumi.StringPtrInput
	// Billing settings of the hub.
	HubBillingInfo HubBillingInfoFormatResponsePtrInput
	// Resource location.
	Location pulumi.StringPtrInput
	// Resource name.
	Name pulumi.StringPtrInput
	// Provisioning state of the hub.
	ProvisioningState pulumi.StringPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0.
	TenantFeatures pulumi.IntPtrInput
	// Resource type.
	Type pulumi.StringPtrInput
	// Web endpoint URL of the hub.
	WebEndpoint pulumi.StringPtrInput
}

func (HubState) ElementType() reflect.Type {
	return reflect.TypeOf((*hubState)(nil)).Elem()
}

type hubArgs struct {
	// Billing settings of the hub.
	HubBillingInfo *HubBillingInfoFormat `pulumi:"hubBillingInfo"`
	// The name of the Hub.
	HubName string `pulumi:"hubName"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0.
	TenantFeatures *int `pulumi:"tenantFeatures"`
}

// The set of arguments for constructing a Hub resource.
type HubArgs struct {
	// Billing settings of the hub.
	HubBillingInfo HubBillingInfoFormatPtrInput
	// The name of the Hub.
	HubName pulumi.StringInput
	// Resource location.
	Location pulumi.StringPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0.
	TenantFeatures pulumi.IntPtrInput
}

func (HubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hubArgs)(nil)).Elem()
}
