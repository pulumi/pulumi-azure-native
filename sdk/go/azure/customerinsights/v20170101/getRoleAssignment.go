// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20170101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Role Assignment resource format.
//
// Deprecated: Version 2017-01-01 will be removed in v2 of the provider.
func LookupRoleAssignment(ctx *pulumi.Context, args *LookupRoleAssignmentArgs, opts ...pulumi.InvokeOption) (*LookupRoleAssignmentResult, error) {
	var rv LookupRoleAssignmentResult
	err := ctx.Invoke("azure-native:customerinsights/v20170101:getRoleAssignment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRoleAssignmentArgs struct {
	// The name of the role assignment.
	AssignmentName string `pulumi:"assignmentName"`
	// The name of the hub.
	HubName string `pulumi:"hubName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The Role Assignment resource format.
type LookupRoleAssignmentResult struct {
	// The name of the metadata object.
	AssignmentName string `pulumi:"assignmentName"`
	// Widget types set for the assignment.
	ConflationPolicies *ResourceSetDescriptionResponse `pulumi:"conflationPolicies"`
	// Connectors set for the assignment.
	Connectors *ResourceSetDescriptionResponse `pulumi:"connectors"`
	// Localized description for the metadata.
	Description map[string]string `pulumi:"description"`
	// Localized display names for the metadata.
	DisplayName map[string]string `pulumi:"displayName"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Interactions set for the assignment.
	Interactions *ResourceSetDescriptionResponse `pulumi:"interactions"`
	// Kpis set for the assignment.
	Kpis *ResourceSetDescriptionResponse `pulumi:"kpis"`
	// Links set for the assignment.
	Links *ResourceSetDescriptionResponse `pulumi:"links"`
	// Resource name.
	Name string `pulumi:"name"`
	// The principals being assigned to.
	Principals []AssignmentPrincipalResponse `pulumi:"principals"`
	// Profiles set for the assignment.
	Profiles *ResourceSetDescriptionResponse `pulumi:"profiles"`
	// Provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// The Role assignments set for the relationship links.
	RelationshipLinks *ResourceSetDescriptionResponse `pulumi:"relationshipLinks"`
	// The Role assignments set for the relationships.
	Relationships *ResourceSetDescriptionResponse `pulumi:"relationships"`
	// Type of roles.
	Role string `pulumi:"role"`
	// The Role assignments set for the assignment.
	RoleAssignments *ResourceSetDescriptionResponse `pulumi:"roleAssignments"`
	// Sas Policies set for the assignment.
	SasPolicies *ResourceSetDescriptionResponse `pulumi:"sasPolicies"`
	// The Role assignments set for the assignment.
	Segments *ResourceSetDescriptionResponse `pulumi:"segments"`
	// The hub name.
	TenantId string `pulumi:"tenantId"`
	// Resource type.
	Type string `pulumi:"type"`
	// Views set for the assignment.
	Views *ResourceSetDescriptionResponse `pulumi:"views"`
	// Widget types set for the assignment.
	WidgetTypes *ResourceSetDescriptionResponse `pulumi:"widgetTypes"`
}

func LookupRoleAssignmentOutput(ctx *pulumi.Context, args LookupRoleAssignmentOutputArgs, opts ...pulumi.InvokeOption) LookupRoleAssignmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRoleAssignmentResult, error) {
			args := v.(LookupRoleAssignmentArgs)
			r, err := LookupRoleAssignment(ctx, &args, opts...)
			var s LookupRoleAssignmentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRoleAssignmentResultOutput)
}

type LookupRoleAssignmentOutputArgs struct {
	// The name of the role assignment.
	AssignmentName pulumi.StringInput `pulumi:"assignmentName"`
	// The name of the hub.
	HubName pulumi.StringInput `pulumi:"hubName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupRoleAssignmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoleAssignmentArgs)(nil)).Elem()
}

// The Role Assignment resource format.
type LookupRoleAssignmentResultOutput struct{ *pulumi.OutputState }

func (LookupRoleAssignmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoleAssignmentResult)(nil)).Elem()
}

func (o LookupRoleAssignmentResultOutput) ToLookupRoleAssignmentResultOutput() LookupRoleAssignmentResultOutput {
	return o
}

func (o LookupRoleAssignmentResultOutput) ToLookupRoleAssignmentResultOutputWithContext(ctx context.Context) LookupRoleAssignmentResultOutput {
	return o
}

// The name of the metadata object.
func (o LookupRoleAssignmentResultOutput) AssignmentName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) string { return v.AssignmentName }).(pulumi.StringOutput)
}

// Widget types set for the assignment.
func (o LookupRoleAssignmentResultOutput) ConflationPolicies() ResourceSetDescriptionResponsePtrOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) *ResourceSetDescriptionResponse { return v.ConflationPolicies }).(ResourceSetDescriptionResponsePtrOutput)
}

// Connectors set for the assignment.
func (o LookupRoleAssignmentResultOutput) Connectors() ResourceSetDescriptionResponsePtrOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) *ResourceSetDescriptionResponse { return v.Connectors }).(ResourceSetDescriptionResponsePtrOutput)
}

// Localized description for the metadata.
func (o LookupRoleAssignmentResultOutput) Description() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) map[string]string { return v.Description }).(pulumi.StringMapOutput)
}

// Localized display names for the metadata.
func (o LookupRoleAssignmentResultOutput) DisplayName() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) map[string]string { return v.DisplayName }).(pulumi.StringMapOutput)
}

// Resource ID.
func (o LookupRoleAssignmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) string { return v.Id }).(pulumi.StringOutput)
}

// Interactions set for the assignment.
func (o LookupRoleAssignmentResultOutput) Interactions() ResourceSetDescriptionResponsePtrOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) *ResourceSetDescriptionResponse { return v.Interactions }).(ResourceSetDescriptionResponsePtrOutput)
}

// Kpis set for the assignment.
func (o LookupRoleAssignmentResultOutput) Kpis() ResourceSetDescriptionResponsePtrOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) *ResourceSetDescriptionResponse { return v.Kpis }).(ResourceSetDescriptionResponsePtrOutput)
}

// Links set for the assignment.
func (o LookupRoleAssignmentResultOutput) Links() ResourceSetDescriptionResponsePtrOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) *ResourceSetDescriptionResponse { return v.Links }).(ResourceSetDescriptionResponsePtrOutput)
}

// Resource name.
func (o LookupRoleAssignmentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) string { return v.Name }).(pulumi.StringOutput)
}

// The principals being assigned to.
func (o LookupRoleAssignmentResultOutput) Principals() AssignmentPrincipalResponseArrayOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) []AssignmentPrincipalResponse { return v.Principals }).(AssignmentPrincipalResponseArrayOutput)
}

// Profiles set for the assignment.
func (o LookupRoleAssignmentResultOutput) Profiles() ResourceSetDescriptionResponsePtrOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) *ResourceSetDescriptionResponse { return v.Profiles }).(ResourceSetDescriptionResponsePtrOutput)
}

// Provisioning state.
func (o LookupRoleAssignmentResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The Role assignments set for the relationship links.
func (o LookupRoleAssignmentResultOutput) RelationshipLinks() ResourceSetDescriptionResponsePtrOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) *ResourceSetDescriptionResponse { return v.RelationshipLinks }).(ResourceSetDescriptionResponsePtrOutput)
}

// The Role assignments set for the relationships.
func (o LookupRoleAssignmentResultOutput) Relationships() ResourceSetDescriptionResponsePtrOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) *ResourceSetDescriptionResponse { return v.Relationships }).(ResourceSetDescriptionResponsePtrOutput)
}

// Type of roles.
func (o LookupRoleAssignmentResultOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) string { return v.Role }).(pulumi.StringOutput)
}

// The Role assignments set for the assignment.
func (o LookupRoleAssignmentResultOutput) RoleAssignments() ResourceSetDescriptionResponsePtrOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) *ResourceSetDescriptionResponse { return v.RoleAssignments }).(ResourceSetDescriptionResponsePtrOutput)
}

// Sas Policies set for the assignment.
func (o LookupRoleAssignmentResultOutput) SasPolicies() ResourceSetDescriptionResponsePtrOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) *ResourceSetDescriptionResponse { return v.SasPolicies }).(ResourceSetDescriptionResponsePtrOutput)
}

// The Role assignments set for the assignment.
func (o LookupRoleAssignmentResultOutput) Segments() ResourceSetDescriptionResponsePtrOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) *ResourceSetDescriptionResponse { return v.Segments }).(ResourceSetDescriptionResponsePtrOutput)
}

// The hub name.
func (o LookupRoleAssignmentResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) string { return v.TenantId }).(pulumi.StringOutput)
}

// Resource type.
func (o LookupRoleAssignmentResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) string { return v.Type }).(pulumi.StringOutput)
}

// Views set for the assignment.
func (o LookupRoleAssignmentResultOutput) Views() ResourceSetDescriptionResponsePtrOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) *ResourceSetDescriptionResponse { return v.Views }).(ResourceSetDescriptionResponsePtrOutput)
}

// Widget types set for the assignment.
func (o LookupRoleAssignmentResultOutput) WidgetTypes() ResourceSetDescriptionResponsePtrOutput {
	return o.ApplyT(func(v LookupRoleAssignmentResult) *ResourceSetDescriptionResponse { return v.WidgetTypes }).(ResourceSetDescriptionResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRoleAssignmentResultOutput{})
}
