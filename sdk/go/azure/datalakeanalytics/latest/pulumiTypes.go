// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The parameters used to add a new Data Lake Store account while creating a new Data Lake Analytics account.
type AddDataLakeStoreWithAccountParameters struct {
	// The unique name of the Data Lake Store account to add.
	Name string `pulumi:"name"`
	// The optional suffix for the Data Lake Store account.
	Suffix *string `pulumi:"suffix"`
}

// AddDataLakeStoreWithAccountParametersInput is an input type that accepts AddDataLakeStoreWithAccountParametersArgs and AddDataLakeStoreWithAccountParametersOutput values.
// You can construct a concrete instance of `AddDataLakeStoreWithAccountParametersInput` via:
//
//          AddDataLakeStoreWithAccountParametersArgs{...}
type AddDataLakeStoreWithAccountParametersInput interface {
	pulumi.Input

	ToAddDataLakeStoreWithAccountParametersOutput() AddDataLakeStoreWithAccountParametersOutput
	ToAddDataLakeStoreWithAccountParametersOutputWithContext(context.Context) AddDataLakeStoreWithAccountParametersOutput
}

// The parameters used to add a new Data Lake Store account while creating a new Data Lake Analytics account.
type AddDataLakeStoreWithAccountParametersArgs struct {
	// The unique name of the Data Lake Store account to add.
	Name pulumi.StringInput `pulumi:"name"`
	// The optional suffix for the Data Lake Store account.
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
}

func (AddDataLakeStoreWithAccountParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddDataLakeStoreWithAccountParameters)(nil)).Elem()
}

func (i AddDataLakeStoreWithAccountParametersArgs) ToAddDataLakeStoreWithAccountParametersOutput() AddDataLakeStoreWithAccountParametersOutput {
	return i.ToAddDataLakeStoreWithAccountParametersOutputWithContext(context.Background())
}

func (i AddDataLakeStoreWithAccountParametersArgs) ToAddDataLakeStoreWithAccountParametersOutputWithContext(ctx context.Context) AddDataLakeStoreWithAccountParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddDataLakeStoreWithAccountParametersOutput)
}

// AddDataLakeStoreWithAccountParametersArrayInput is an input type that accepts AddDataLakeStoreWithAccountParametersArray and AddDataLakeStoreWithAccountParametersArrayOutput values.
// You can construct a concrete instance of `AddDataLakeStoreWithAccountParametersArrayInput` via:
//
//          AddDataLakeStoreWithAccountParametersArray{ AddDataLakeStoreWithAccountParametersArgs{...} }
type AddDataLakeStoreWithAccountParametersArrayInput interface {
	pulumi.Input

	ToAddDataLakeStoreWithAccountParametersArrayOutput() AddDataLakeStoreWithAccountParametersArrayOutput
	ToAddDataLakeStoreWithAccountParametersArrayOutputWithContext(context.Context) AddDataLakeStoreWithAccountParametersArrayOutput
}

type AddDataLakeStoreWithAccountParametersArray []AddDataLakeStoreWithAccountParametersInput

func (AddDataLakeStoreWithAccountParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddDataLakeStoreWithAccountParameters)(nil)).Elem()
}

func (i AddDataLakeStoreWithAccountParametersArray) ToAddDataLakeStoreWithAccountParametersArrayOutput() AddDataLakeStoreWithAccountParametersArrayOutput {
	return i.ToAddDataLakeStoreWithAccountParametersArrayOutputWithContext(context.Background())
}

func (i AddDataLakeStoreWithAccountParametersArray) ToAddDataLakeStoreWithAccountParametersArrayOutputWithContext(ctx context.Context) AddDataLakeStoreWithAccountParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddDataLakeStoreWithAccountParametersArrayOutput)
}

// The parameters used to add a new Data Lake Store account while creating a new Data Lake Analytics account.
type AddDataLakeStoreWithAccountParametersOutput struct{ *pulumi.OutputState }

func (AddDataLakeStoreWithAccountParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddDataLakeStoreWithAccountParameters)(nil)).Elem()
}

func (o AddDataLakeStoreWithAccountParametersOutput) ToAddDataLakeStoreWithAccountParametersOutput() AddDataLakeStoreWithAccountParametersOutput {
	return o
}

func (o AddDataLakeStoreWithAccountParametersOutput) ToAddDataLakeStoreWithAccountParametersOutputWithContext(ctx context.Context) AddDataLakeStoreWithAccountParametersOutput {
	return o
}

// The unique name of the Data Lake Store account to add.
func (o AddDataLakeStoreWithAccountParametersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AddDataLakeStoreWithAccountParameters) string { return v.Name }).(pulumi.StringOutput)
}

// The optional suffix for the Data Lake Store account.
func (o AddDataLakeStoreWithAccountParametersOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddDataLakeStoreWithAccountParameters) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type AddDataLakeStoreWithAccountParametersArrayOutput struct{ *pulumi.OutputState }

func (AddDataLakeStoreWithAccountParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddDataLakeStoreWithAccountParameters)(nil)).Elem()
}

func (o AddDataLakeStoreWithAccountParametersArrayOutput) ToAddDataLakeStoreWithAccountParametersArrayOutput() AddDataLakeStoreWithAccountParametersArrayOutput {
	return o
}

func (o AddDataLakeStoreWithAccountParametersArrayOutput) ToAddDataLakeStoreWithAccountParametersArrayOutputWithContext(ctx context.Context) AddDataLakeStoreWithAccountParametersArrayOutput {
	return o
}

func (o AddDataLakeStoreWithAccountParametersArrayOutput) Index(i pulumi.IntInput) AddDataLakeStoreWithAccountParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddDataLakeStoreWithAccountParameters {
		return vs[0].([]AddDataLakeStoreWithAccountParameters)[vs[1].(int)]
	}).(AddDataLakeStoreWithAccountParametersOutput)
}

// The parameters used to add a new Azure Storage account while creating a new Data Lake Analytics account.
type AddStorageAccountWithAccountParameters struct {
	// The access key associated with this Azure Storage account that will be used to connect to it.
	AccessKey string `pulumi:"accessKey"`
	// The unique name of the Azure Storage account to add.
	Name string `pulumi:"name"`
	// The optional suffix for the storage account.
	Suffix *string `pulumi:"suffix"`
}

// AddStorageAccountWithAccountParametersInput is an input type that accepts AddStorageAccountWithAccountParametersArgs and AddStorageAccountWithAccountParametersOutput values.
// You can construct a concrete instance of `AddStorageAccountWithAccountParametersInput` via:
//
//          AddStorageAccountWithAccountParametersArgs{...}
type AddStorageAccountWithAccountParametersInput interface {
	pulumi.Input

	ToAddStorageAccountWithAccountParametersOutput() AddStorageAccountWithAccountParametersOutput
	ToAddStorageAccountWithAccountParametersOutputWithContext(context.Context) AddStorageAccountWithAccountParametersOutput
}

// The parameters used to add a new Azure Storage account while creating a new Data Lake Analytics account.
type AddStorageAccountWithAccountParametersArgs struct {
	// The access key associated with this Azure Storage account that will be used to connect to it.
	AccessKey pulumi.StringInput `pulumi:"accessKey"`
	// The unique name of the Azure Storage account to add.
	Name pulumi.StringInput `pulumi:"name"`
	// The optional suffix for the storage account.
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
}

func (AddStorageAccountWithAccountParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddStorageAccountWithAccountParameters)(nil)).Elem()
}

func (i AddStorageAccountWithAccountParametersArgs) ToAddStorageAccountWithAccountParametersOutput() AddStorageAccountWithAccountParametersOutput {
	return i.ToAddStorageAccountWithAccountParametersOutputWithContext(context.Background())
}

func (i AddStorageAccountWithAccountParametersArgs) ToAddStorageAccountWithAccountParametersOutputWithContext(ctx context.Context) AddStorageAccountWithAccountParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddStorageAccountWithAccountParametersOutput)
}

// AddStorageAccountWithAccountParametersArrayInput is an input type that accepts AddStorageAccountWithAccountParametersArray and AddStorageAccountWithAccountParametersArrayOutput values.
// You can construct a concrete instance of `AddStorageAccountWithAccountParametersArrayInput` via:
//
//          AddStorageAccountWithAccountParametersArray{ AddStorageAccountWithAccountParametersArgs{...} }
type AddStorageAccountWithAccountParametersArrayInput interface {
	pulumi.Input

	ToAddStorageAccountWithAccountParametersArrayOutput() AddStorageAccountWithAccountParametersArrayOutput
	ToAddStorageAccountWithAccountParametersArrayOutputWithContext(context.Context) AddStorageAccountWithAccountParametersArrayOutput
}

type AddStorageAccountWithAccountParametersArray []AddStorageAccountWithAccountParametersInput

func (AddStorageAccountWithAccountParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddStorageAccountWithAccountParameters)(nil)).Elem()
}

func (i AddStorageAccountWithAccountParametersArray) ToAddStorageAccountWithAccountParametersArrayOutput() AddStorageAccountWithAccountParametersArrayOutput {
	return i.ToAddStorageAccountWithAccountParametersArrayOutputWithContext(context.Background())
}

func (i AddStorageAccountWithAccountParametersArray) ToAddStorageAccountWithAccountParametersArrayOutputWithContext(ctx context.Context) AddStorageAccountWithAccountParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddStorageAccountWithAccountParametersArrayOutput)
}

// The parameters used to add a new Azure Storage account while creating a new Data Lake Analytics account.
type AddStorageAccountWithAccountParametersOutput struct{ *pulumi.OutputState }

func (AddStorageAccountWithAccountParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddStorageAccountWithAccountParameters)(nil)).Elem()
}

func (o AddStorageAccountWithAccountParametersOutput) ToAddStorageAccountWithAccountParametersOutput() AddStorageAccountWithAccountParametersOutput {
	return o
}

func (o AddStorageAccountWithAccountParametersOutput) ToAddStorageAccountWithAccountParametersOutputWithContext(ctx context.Context) AddStorageAccountWithAccountParametersOutput {
	return o
}

// The access key associated with this Azure Storage account that will be used to connect to it.
func (o AddStorageAccountWithAccountParametersOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v AddStorageAccountWithAccountParameters) string { return v.AccessKey }).(pulumi.StringOutput)
}

// The unique name of the Azure Storage account to add.
func (o AddStorageAccountWithAccountParametersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AddStorageAccountWithAccountParameters) string { return v.Name }).(pulumi.StringOutput)
}

// The optional suffix for the storage account.
func (o AddStorageAccountWithAccountParametersOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddStorageAccountWithAccountParameters) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type AddStorageAccountWithAccountParametersArrayOutput struct{ *pulumi.OutputState }

func (AddStorageAccountWithAccountParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddStorageAccountWithAccountParameters)(nil)).Elem()
}

func (o AddStorageAccountWithAccountParametersArrayOutput) ToAddStorageAccountWithAccountParametersArrayOutput() AddStorageAccountWithAccountParametersArrayOutput {
	return o
}

func (o AddStorageAccountWithAccountParametersArrayOutput) ToAddStorageAccountWithAccountParametersArrayOutputWithContext(ctx context.Context) AddStorageAccountWithAccountParametersArrayOutput {
	return o
}

func (o AddStorageAccountWithAccountParametersArrayOutput) Index(i pulumi.IntInput) AddStorageAccountWithAccountParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddStorageAccountWithAccountParameters {
		return vs[0].([]AddStorageAccountWithAccountParameters)[vs[1].(int)]
	}).(AddStorageAccountWithAccountParametersOutput)
}

// Data Lake Analytics compute policy information.
type ComputePolicyResponse struct {
	// The resource identifier.
	Id string `pulumi:"id"`
	// The maximum degree of parallelism per job this user can use to submit jobs.
	MaxDegreeOfParallelismPerJob int `pulumi:"maxDegreeOfParallelismPerJob"`
	// The minimum priority per job this user can use to submit jobs.
	MinPriorityPerJob int `pulumi:"minPriorityPerJob"`
	// The resource name.
	Name string `pulumi:"name"`
	// The AAD object identifier for the entity to create a policy for.
	ObjectId string `pulumi:"objectId"`
	// The type of AAD object the object identifier refers to.
	ObjectType string `pulumi:"objectType"`
	// The resource type.
	Type string `pulumi:"type"`
}

// ComputePolicyResponseInput is an input type that accepts ComputePolicyResponseArgs and ComputePolicyResponseOutput values.
// You can construct a concrete instance of `ComputePolicyResponseInput` via:
//
//          ComputePolicyResponseArgs{...}
type ComputePolicyResponseInput interface {
	pulumi.Input

	ToComputePolicyResponseOutput() ComputePolicyResponseOutput
	ToComputePolicyResponseOutputWithContext(context.Context) ComputePolicyResponseOutput
}

// Data Lake Analytics compute policy information.
type ComputePolicyResponseArgs struct {
	// The resource identifier.
	Id pulumi.StringInput `pulumi:"id"`
	// The maximum degree of parallelism per job this user can use to submit jobs.
	MaxDegreeOfParallelismPerJob pulumi.IntInput `pulumi:"maxDegreeOfParallelismPerJob"`
	// The minimum priority per job this user can use to submit jobs.
	MinPriorityPerJob pulumi.IntInput `pulumi:"minPriorityPerJob"`
	// The resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The AAD object identifier for the entity to create a policy for.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// The type of AAD object the object identifier refers to.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// The resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ComputePolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputePolicyResponse)(nil)).Elem()
}

func (i ComputePolicyResponseArgs) ToComputePolicyResponseOutput() ComputePolicyResponseOutput {
	return i.ToComputePolicyResponseOutputWithContext(context.Background())
}

func (i ComputePolicyResponseArgs) ToComputePolicyResponseOutputWithContext(ctx context.Context) ComputePolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputePolicyResponseOutput)
}

// ComputePolicyResponseArrayInput is an input type that accepts ComputePolicyResponseArray and ComputePolicyResponseArrayOutput values.
// You can construct a concrete instance of `ComputePolicyResponseArrayInput` via:
//
//          ComputePolicyResponseArray{ ComputePolicyResponseArgs{...} }
type ComputePolicyResponseArrayInput interface {
	pulumi.Input

	ToComputePolicyResponseArrayOutput() ComputePolicyResponseArrayOutput
	ToComputePolicyResponseArrayOutputWithContext(context.Context) ComputePolicyResponseArrayOutput
}

type ComputePolicyResponseArray []ComputePolicyResponseInput

func (ComputePolicyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputePolicyResponse)(nil)).Elem()
}

func (i ComputePolicyResponseArray) ToComputePolicyResponseArrayOutput() ComputePolicyResponseArrayOutput {
	return i.ToComputePolicyResponseArrayOutputWithContext(context.Background())
}

func (i ComputePolicyResponseArray) ToComputePolicyResponseArrayOutputWithContext(ctx context.Context) ComputePolicyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputePolicyResponseArrayOutput)
}

// Data Lake Analytics compute policy information.
type ComputePolicyResponseOutput struct{ *pulumi.OutputState }

func (ComputePolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputePolicyResponse)(nil)).Elem()
}

func (o ComputePolicyResponseOutput) ToComputePolicyResponseOutput() ComputePolicyResponseOutput {
	return o
}

func (o ComputePolicyResponseOutput) ToComputePolicyResponseOutputWithContext(ctx context.Context) ComputePolicyResponseOutput {
	return o
}

// The resource identifier.
func (o ComputePolicyResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ComputePolicyResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The maximum degree of parallelism per job this user can use to submit jobs.
func (o ComputePolicyResponseOutput) MaxDegreeOfParallelismPerJob() pulumi.IntOutput {
	return o.ApplyT(func(v ComputePolicyResponse) int { return v.MaxDegreeOfParallelismPerJob }).(pulumi.IntOutput)
}

// The minimum priority per job this user can use to submit jobs.
func (o ComputePolicyResponseOutput) MinPriorityPerJob() pulumi.IntOutput {
	return o.ApplyT(func(v ComputePolicyResponse) int { return v.MinPriorityPerJob }).(pulumi.IntOutput)
}

// The resource name.
func (o ComputePolicyResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ComputePolicyResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The AAD object identifier for the entity to create a policy for.
func (o ComputePolicyResponseOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v ComputePolicyResponse) string { return v.ObjectId }).(pulumi.StringOutput)
}

// The type of AAD object the object identifier refers to.
func (o ComputePolicyResponseOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v ComputePolicyResponse) string { return v.ObjectType }).(pulumi.StringOutput)
}

// The resource type.
func (o ComputePolicyResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ComputePolicyResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ComputePolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (ComputePolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputePolicyResponse)(nil)).Elem()
}

func (o ComputePolicyResponseArrayOutput) ToComputePolicyResponseArrayOutput() ComputePolicyResponseArrayOutput {
	return o
}

func (o ComputePolicyResponseArrayOutput) ToComputePolicyResponseArrayOutputWithContext(ctx context.Context) ComputePolicyResponseArrayOutput {
	return o
}

func (o ComputePolicyResponseArrayOutput) Index(i pulumi.IntInput) ComputePolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputePolicyResponse {
		return vs[0].([]ComputePolicyResponse)[vs[1].(int)]
	}).(ComputePolicyResponseOutput)
}

// The parameters used to create a new compute policy while creating a new Data Lake Analytics account.
type CreateComputePolicyWithAccountParameters struct {
	// The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed.
	MaxDegreeOfParallelismPerJob *int `pulumi:"maxDegreeOfParallelismPerJob"`
	// The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed.
	MinPriorityPerJob *int `pulumi:"minPriorityPerJob"`
	// The unique name of the compute policy to create.
	Name string `pulumi:"name"`
	// The AAD object identifier for the entity to create a policy for.
	ObjectId string `pulumi:"objectId"`
	// The type of AAD object the object identifier refers to.
	ObjectType string `pulumi:"objectType"`
}

// CreateComputePolicyWithAccountParametersInput is an input type that accepts CreateComputePolicyWithAccountParametersArgs and CreateComputePolicyWithAccountParametersOutput values.
// You can construct a concrete instance of `CreateComputePolicyWithAccountParametersInput` via:
//
//          CreateComputePolicyWithAccountParametersArgs{...}
type CreateComputePolicyWithAccountParametersInput interface {
	pulumi.Input

	ToCreateComputePolicyWithAccountParametersOutput() CreateComputePolicyWithAccountParametersOutput
	ToCreateComputePolicyWithAccountParametersOutputWithContext(context.Context) CreateComputePolicyWithAccountParametersOutput
}

// The parameters used to create a new compute policy while creating a new Data Lake Analytics account.
type CreateComputePolicyWithAccountParametersArgs struct {
	// The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed.
	MaxDegreeOfParallelismPerJob pulumi.IntPtrInput `pulumi:"maxDegreeOfParallelismPerJob"`
	// The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed.
	MinPriorityPerJob pulumi.IntPtrInput `pulumi:"minPriorityPerJob"`
	// The unique name of the compute policy to create.
	Name pulumi.StringInput `pulumi:"name"`
	// The AAD object identifier for the entity to create a policy for.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// The type of AAD object the object identifier refers to.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (CreateComputePolicyWithAccountParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateComputePolicyWithAccountParameters)(nil)).Elem()
}

func (i CreateComputePolicyWithAccountParametersArgs) ToCreateComputePolicyWithAccountParametersOutput() CreateComputePolicyWithAccountParametersOutput {
	return i.ToCreateComputePolicyWithAccountParametersOutputWithContext(context.Background())
}

func (i CreateComputePolicyWithAccountParametersArgs) ToCreateComputePolicyWithAccountParametersOutputWithContext(ctx context.Context) CreateComputePolicyWithAccountParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateComputePolicyWithAccountParametersOutput)
}

// CreateComputePolicyWithAccountParametersArrayInput is an input type that accepts CreateComputePolicyWithAccountParametersArray and CreateComputePolicyWithAccountParametersArrayOutput values.
// You can construct a concrete instance of `CreateComputePolicyWithAccountParametersArrayInput` via:
//
//          CreateComputePolicyWithAccountParametersArray{ CreateComputePolicyWithAccountParametersArgs{...} }
type CreateComputePolicyWithAccountParametersArrayInput interface {
	pulumi.Input

	ToCreateComputePolicyWithAccountParametersArrayOutput() CreateComputePolicyWithAccountParametersArrayOutput
	ToCreateComputePolicyWithAccountParametersArrayOutputWithContext(context.Context) CreateComputePolicyWithAccountParametersArrayOutput
}

type CreateComputePolicyWithAccountParametersArray []CreateComputePolicyWithAccountParametersInput

func (CreateComputePolicyWithAccountParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CreateComputePolicyWithAccountParameters)(nil)).Elem()
}

func (i CreateComputePolicyWithAccountParametersArray) ToCreateComputePolicyWithAccountParametersArrayOutput() CreateComputePolicyWithAccountParametersArrayOutput {
	return i.ToCreateComputePolicyWithAccountParametersArrayOutputWithContext(context.Background())
}

func (i CreateComputePolicyWithAccountParametersArray) ToCreateComputePolicyWithAccountParametersArrayOutputWithContext(ctx context.Context) CreateComputePolicyWithAccountParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateComputePolicyWithAccountParametersArrayOutput)
}

// The parameters used to create a new compute policy while creating a new Data Lake Analytics account.
type CreateComputePolicyWithAccountParametersOutput struct{ *pulumi.OutputState }

func (CreateComputePolicyWithAccountParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateComputePolicyWithAccountParameters)(nil)).Elem()
}

func (o CreateComputePolicyWithAccountParametersOutput) ToCreateComputePolicyWithAccountParametersOutput() CreateComputePolicyWithAccountParametersOutput {
	return o
}

func (o CreateComputePolicyWithAccountParametersOutput) ToCreateComputePolicyWithAccountParametersOutputWithContext(ctx context.Context) CreateComputePolicyWithAccountParametersOutput {
	return o
}

// The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed.
func (o CreateComputePolicyWithAccountParametersOutput) MaxDegreeOfParallelismPerJob() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CreateComputePolicyWithAccountParameters) *int { return v.MaxDegreeOfParallelismPerJob }).(pulumi.IntPtrOutput)
}

// The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed.
func (o CreateComputePolicyWithAccountParametersOutput) MinPriorityPerJob() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CreateComputePolicyWithAccountParameters) *int { return v.MinPriorityPerJob }).(pulumi.IntPtrOutput)
}

// The unique name of the compute policy to create.
func (o CreateComputePolicyWithAccountParametersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CreateComputePolicyWithAccountParameters) string { return v.Name }).(pulumi.StringOutput)
}

// The AAD object identifier for the entity to create a policy for.
func (o CreateComputePolicyWithAccountParametersOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v CreateComputePolicyWithAccountParameters) string { return v.ObjectId }).(pulumi.StringOutput)
}

// The type of AAD object the object identifier refers to.
func (o CreateComputePolicyWithAccountParametersOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v CreateComputePolicyWithAccountParameters) string { return v.ObjectType }).(pulumi.StringOutput)
}

type CreateComputePolicyWithAccountParametersArrayOutput struct{ *pulumi.OutputState }

func (CreateComputePolicyWithAccountParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CreateComputePolicyWithAccountParameters)(nil)).Elem()
}

func (o CreateComputePolicyWithAccountParametersArrayOutput) ToCreateComputePolicyWithAccountParametersArrayOutput() CreateComputePolicyWithAccountParametersArrayOutput {
	return o
}

func (o CreateComputePolicyWithAccountParametersArrayOutput) ToCreateComputePolicyWithAccountParametersArrayOutputWithContext(ctx context.Context) CreateComputePolicyWithAccountParametersArrayOutput {
	return o
}

func (o CreateComputePolicyWithAccountParametersArrayOutput) Index(i pulumi.IntInput) CreateComputePolicyWithAccountParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CreateComputePolicyWithAccountParameters {
		return vs[0].([]CreateComputePolicyWithAccountParameters)[vs[1].(int)]
	}).(CreateComputePolicyWithAccountParametersOutput)
}

// The parameters used to create a new firewall rule while creating a new Data Lake Analytics account.
type CreateFirewallRuleWithAccountParameters struct {
	// The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
	EndIpAddress string `pulumi:"endIpAddress"`
	// The unique name of the firewall rule to create.
	Name string `pulumi:"name"`
	// The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
	StartIpAddress string `pulumi:"startIpAddress"`
}

// CreateFirewallRuleWithAccountParametersInput is an input type that accepts CreateFirewallRuleWithAccountParametersArgs and CreateFirewallRuleWithAccountParametersOutput values.
// You can construct a concrete instance of `CreateFirewallRuleWithAccountParametersInput` via:
//
//          CreateFirewallRuleWithAccountParametersArgs{...}
type CreateFirewallRuleWithAccountParametersInput interface {
	pulumi.Input

	ToCreateFirewallRuleWithAccountParametersOutput() CreateFirewallRuleWithAccountParametersOutput
	ToCreateFirewallRuleWithAccountParametersOutputWithContext(context.Context) CreateFirewallRuleWithAccountParametersOutput
}

// The parameters used to create a new firewall rule while creating a new Data Lake Analytics account.
type CreateFirewallRuleWithAccountParametersArgs struct {
	// The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
	EndIpAddress pulumi.StringInput `pulumi:"endIpAddress"`
	// The unique name of the firewall rule to create.
	Name pulumi.StringInput `pulumi:"name"`
	// The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
	StartIpAddress pulumi.StringInput `pulumi:"startIpAddress"`
}

func (CreateFirewallRuleWithAccountParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateFirewallRuleWithAccountParameters)(nil)).Elem()
}

func (i CreateFirewallRuleWithAccountParametersArgs) ToCreateFirewallRuleWithAccountParametersOutput() CreateFirewallRuleWithAccountParametersOutput {
	return i.ToCreateFirewallRuleWithAccountParametersOutputWithContext(context.Background())
}

func (i CreateFirewallRuleWithAccountParametersArgs) ToCreateFirewallRuleWithAccountParametersOutputWithContext(ctx context.Context) CreateFirewallRuleWithAccountParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateFirewallRuleWithAccountParametersOutput)
}

// CreateFirewallRuleWithAccountParametersArrayInput is an input type that accepts CreateFirewallRuleWithAccountParametersArray and CreateFirewallRuleWithAccountParametersArrayOutput values.
// You can construct a concrete instance of `CreateFirewallRuleWithAccountParametersArrayInput` via:
//
//          CreateFirewallRuleWithAccountParametersArray{ CreateFirewallRuleWithAccountParametersArgs{...} }
type CreateFirewallRuleWithAccountParametersArrayInput interface {
	pulumi.Input

	ToCreateFirewallRuleWithAccountParametersArrayOutput() CreateFirewallRuleWithAccountParametersArrayOutput
	ToCreateFirewallRuleWithAccountParametersArrayOutputWithContext(context.Context) CreateFirewallRuleWithAccountParametersArrayOutput
}

type CreateFirewallRuleWithAccountParametersArray []CreateFirewallRuleWithAccountParametersInput

func (CreateFirewallRuleWithAccountParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CreateFirewallRuleWithAccountParameters)(nil)).Elem()
}

func (i CreateFirewallRuleWithAccountParametersArray) ToCreateFirewallRuleWithAccountParametersArrayOutput() CreateFirewallRuleWithAccountParametersArrayOutput {
	return i.ToCreateFirewallRuleWithAccountParametersArrayOutputWithContext(context.Background())
}

func (i CreateFirewallRuleWithAccountParametersArray) ToCreateFirewallRuleWithAccountParametersArrayOutputWithContext(ctx context.Context) CreateFirewallRuleWithAccountParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateFirewallRuleWithAccountParametersArrayOutput)
}

// The parameters used to create a new firewall rule while creating a new Data Lake Analytics account.
type CreateFirewallRuleWithAccountParametersOutput struct{ *pulumi.OutputState }

func (CreateFirewallRuleWithAccountParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateFirewallRuleWithAccountParameters)(nil)).Elem()
}

func (o CreateFirewallRuleWithAccountParametersOutput) ToCreateFirewallRuleWithAccountParametersOutput() CreateFirewallRuleWithAccountParametersOutput {
	return o
}

func (o CreateFirewallRuleWithAccountParametersOutput) ToCreateFirewallRuleWithAccountParametersOutputWithContext(ctx context.Context) CreateFirewallRuleWithAccountParametersOutput {
	return o
}

// The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
func (o CreateFirewallRuleWithAccountParametersOutput) EndIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v CreateFirewallRuleWithAccountParameters) string { return v.EndIpAddress }).(pulumi.StringOutput)
}

// The unique name of the firewall rule to create.
func (o CreateFirewallRuleWithAccountParametersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CreateFirewallRuleWithAccountParameters) string { return v.Name }).(pulumi.StringOutput)
}

// The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
func (o CreateFirewallRuleWithAccountParametersOutput) StartIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v CreateFirewallRuleWithAccountParameters) string { return v.StartIpAddress }).(pulumi.StringOutput)
}

type CreateFirewallRuleWithAccountParametersArrayOutput struct{ *pulumi.OutputState }

func (CreateFirewallRuleWithAccountParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CreateFirewallRuleWithAccountParameters)(nil)).Elem()
}

func (o CreateFirewallRuleWithAccountParametersArrayOutput) ToCreateFirewallRuleWithAccountParametersArrayOutput() CreateFirewallRuleWithAccountParametersArrayOutput {
	return o
}

func (o CreateFirewallRuleWithAccountParametersArrayOutput) ToCreateFirewallRuleWithAccountParametersArrayOutputWithContext(ctx context.Context) CreateFirewallRuleWithAccountParametersArrayOutput {
	return o
}

func (o CreateFirewallRuleWithAccountParametersArrayOutput) Index(i pulumi.IntInput) CreateFirewallRuleWithAccountParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CreateFirewallRuleWithAccountParameters {
		return vs[0].([]CreateFirewallRuleWithAccountParameters)[vs[1].(int)]
	}).(CreateFirewallRuleWithAccountParametersOutput)
}

// Data Lake Store account information.
type DataLakeStoreAccountInformationResponse struct {
	// The resource identifier.
	Id string `pulumi:"id"`
	// The resource name.
	Name string `pulumi:"name"`
	// The optional suffix for the Data Lake Store account.
	Suffix string `pulumi:"suffix"`
	// The resource type.
	Type string `pulumi:"type"`
}

// DataLakeStoreAccountInformationResponseInput is an input type that accepts DataLakeStoreAccountInformationResponseArgs and DataLakeStoreAccountInformationResponseOutput values.
// You can construct a concrete instance of `DataLakeStoreAccountInformationResponseInput` via:
//
//          DataLakeStoreAccountInformationResponseArgs{...}
type DataLakeStoreAccountInformationResponseInput interface {
	pulumi.Input

	ToDataLakeStoreAccountInformationResponseOutput() DataLakeStoreAccountInformationResponseOutput
	ToDataLakeStoreAccountInformationResponseOutputWithContext(context.Context) DataLakeStoreAccountInformationResponseOutput
}

// Data Lake Store account information.
type DataLakeStoreAccountInformationResponseArgs struct {
	// The resource identifier.
	Id pulumi.StringInput `pulumi:"id"`
	// The resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The optional suffix for the Data Lake Store account.
	Suffix pulumi.StringInput `pulumi:"suffix"`
	// The resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DataLakeStoreAccountInformationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStoreAccountInformationResponse)(nil)).Elem()
}

func (i DataLakeStoreAccountInformationResponseArgs) ToDataLakeStoreAccountInformationResponseOutput() DataLakeStoreAccountInformationResponseOutput {
	return i.ToDataLakeStoreAccountInformationResponseOutputWithContext(context.Background())
}

func (i DataLakeStoreAccountInformationResponseArgs) ToDataLakeStoreAccountInformationResponseOutputWithContext(ctx context.Context) DataLakeStoreAccountInformationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStoreAccountInformationResponseOutput)
}

// DataLakeStoreAccountInformationResponseArrayInput is an input type that accepts DataLakeStoreAccountInformationResponseArray and DataLakeStoreAccountInformationResponseArrayOutput values.
// You can construct a concrete instance of `DataLakeStoreAccountInformationResponseArrayInput` via:
//
//          DataLakeStoreAccountInformationResponseArray{ DataLakeStoreAccountInformationResponseArgs{...} }
type DataLakeStoreAccountInformationResponseArrayInput interface {
	pulumi.Input

	ToDataLakeStoreAccountInformationResponseArrayOutput() DataLakeStoreAccountInformationResponseArrayOutput
	ToDataLakeStoreAccountInformationResponseArrayOutputWithContext(context.Context) DataLakeStoreAccountInformationResponseArrayOutput
}

type DataLakeStoreAccountInformationResponseArray []DataLakeStoreAccountInformationResponseInput

func (DataLakeStoreAccountInformationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStoreAccountInformationResponse)(nil)).Elem()
}

func (i DataLakeStoreAccountInformationResponseArray) ToDataLakeStoreAccountInformationResponseArrayOutput() DataLakeStoreAccountInformationResponseArrayOutput {
	return i.ToDataLakeStoreAccountInformationResponseArrayOutputWithContext(context.Background())
}

func (i DataLakeStoreAccountInformationResponseArray) ToDataLakeStoreAccountInformationResponseArrayOutputWithContext(ctx context.Context) DataLakeStoreAccountInformationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStoreAccountInformationResponseArrayOutput)
}

// Data Lake Store account information.
type DataLakeStoreAccountInformationResponseOutput struct{ *pulumi.OutputState }

func (DataLakeStoreAccountInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStoreAccountInformationResponse)(nil)).Elem()
}

func (o DataLakeStoreAccountInformationResponseOutput) ToDataLakeStoreAccountInformationResponseOutput() DataLakeStoreAccountInformationResponseOutput {
	return o
}

func (o DataLakeStoreAccountInformationResponseOutput) ToDataLakeStoreAccountInformationResponseOutputWithContext(ctx context.Context) DataLakeStoreAccountInformationResponseOutput {
	return o
}

// The resource identifier.
func (o DataLakeStoreAccountInformationResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeStoreAccountInformationResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The resource name.
func (o DataLakeStoreAccountInformationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeStoreAccountInformationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The optional suffix for the Data Lake Store account.
func (o DataLakeStoreAccountInformationResponseOutput) Suffix() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeStoreAccountInformationResponse) string { return v.Suffix }).(pulumi.StringOutput)
}

// The resource type.
func (o DataLakeStoreAccountInformationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeStoreAccountInformationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type DataLakeStoreAccountInformationResponseArrayOutput struct{ *pulumi.OutputState }

func (DataLakeStoreAccountInformationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStoreAccountInformationResponse)(nil)).Elem()
}

func (o DataLakeStoreAccountInformationResponseArrayOutput) ToDataLakeStoreAccountInformationResponseArrayOutput() DataLakeStoreAccountInformationResponseArrayOutput {
	return o
}

func (o DataLakeStoreAccountInformationResponseArrayOutput) ToDataLakeStoreAccountInformationResponseArrayOutputWithContext(ctx context.Context) DataLakeStoreAccountInformationResponseArrayOutput {
	return o
}

func (o DataLakeStoreAccountInformationResponseArrayOutput) Index(i pulumi.IntInput) DataLakeStoreAccountInformationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeStoreAccountInformationResponse {
		return vs[0].([]DataLakeStoreAccountInformationResponse)[vs[1].(int)]
	}).(DataLakeStoreAccountInformationResponseOutput)
}

// Data Lake Analytics firewall rule information.
type FirewallRuleResponse struct {
	// The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
	EndIpAddress string `pulumi:"endIpAddress"`
	// The resource identifier.
	Id string `pulumi:"id"`
	// The resource name.
	Name string `pulumi:"name"`
	// The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
	StartIpAddress string `pulumi:"startIpAddress"`
	// The resource type.
	Type string `pulumi:"type"`
}

// FirewallRuleResponseInput is an input type that accepts FirewallRuleResponseArgs and FirewallRuleResponseOutput values.
// You can construct a concrete instance of `FirewallRuleResponseInput` via:
//
//          FirewallRuleResponseArgs{...}
type FirewallRuleResponseInput interface {
	pulumi.Input

	ToFirewallRuleResponseOutput() FirewallRuleResponseOutput
	ToFirewallRuleResponseOutputWithContext(context.Context) FirewallRuleResponseOutput
}

// Data Lake Analytics firewall rule information.
type FirewallRuleResponseArgs struct {
	// The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
	EndIpAddress pulumi.StringInput `pulumi:"endIpAddress"`
	// The resource identifier.
	Id pulumi.StringInput `pulumi:"id"`
	// The resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
	StartIpAddress pulumi.StringInput `pulumi:"startIpAddress"`
	// The resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirewallRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleResponse)(nil)).Elem()
}

func (i FirewallRuleResponseArgs) ToFirewallRuleResponseOutput() FirewallRuleResponseOutput {
	return i.ToFirewallRuleResponseOutputWithContext(context.Background())
}

func (i FirewallRuleResponseArgs) ToFirewallRuleResponseOutputWithContext(ctx context.Context) FirewallRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallRuleResponseOutput)
}

// FirewallRuleResponseArrayInput is an input type that accepts FirewallRuleResponseArray and FirewallRuleResponseArrayOutput values.
// You can construct a concrete instance of `FirewallRuleResponseArrayInput` via:
//
//          FirewallRuleResponseArray{ FirewallRuleResponseArgs{...} }
type FirewallRuleResponseArrayInput interface {
	pulumi.Input

	ToFirewallRuleResponseArrayOutput() FirewallRuleResponseArrayOutput
	ToFirewallRuleResponseArrayOutputWithContext(context.Context) FirewallRuleResponseArrayOutput
}

type FirewallRuleResponseArray []FirewallRuleResponseInput

func (FirewallRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallRuleResponse)(nil)).Elem()
}

func (i FirewallRuleResponseArray) ToFirewallRuleResponseArrayOutput() FirewallRuleResponseArrayOutput {
	return i.ToFirewallRuleResponseArrayOutputWithContext(context.Background())
}

func (i FirewallRuleResponseArray) ToFirewallRuleResponseArrayOutputWithContext(ctx context.Context) FirewallRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallRuleResponseArrayOutput)
}

// Data Lake Analytics firewall rule information.
type FirewallRuleResponseOutput struct{ *pulumi.OutputState }

func (FirewallRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleResponse)(nil)).Elem()
}

func (o FirewallRuleResponseOutput) ToFirewallRuleResponseOutput() FirewallRuleResponseOutput {
	return o
}

func (o FirewallRuleResponseOutput) ToFirewallRuleResponseOutputWithContext(ctx context.Context) FirewallRuleResponseOutput {
	return o
}

// The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
func (o FirewallRuleResponseOutput) EndIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallRuleResponse) string { return v.EndIpAddress }).(pulumi.StringOutput)
}

// The resource identifier.
func (o FirewallRuleResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallRuleResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The resource name.
func (o FirewallRuleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallRuleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
func (o FirewallRuleResponseOutput) StartIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallRuleResponse) string { return v.StartIpAddress }).(pulumi.StringOutput)
}

// The resource type.
func (o FirewallRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type FirewallRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (FirewallRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallRuleResponse)(nil)).Elem()
}

func (o FirewallRuleResponseArrayOutput) ToFirewallRuleResponseArrayOutput() FirewallRuleResponseArrayOutput {
	return o
}

func (o FirewallRuleResponseArrayOutput) ToFirewallRuleResponseArrayOutputWithContext(ctx context.Context) FirewallRuleResponseArrayOutput {
	return o
}

func (o FirewallRuleResponseArrayOutput) Index(i pulumi.IntInput) FirewallRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallRuleResponse {
		return vs[0].([]FirewallRuleResponse)[vs[1].(int)]
	}).(FirewallRuleResponseOutput)
}

// SAS token information.
type SasTokenInformationResponse struct {
	// The access token for the associated Azure Storage Container.
	AccessToken string `pulumi:"accessToken"`
}

// SasTokenInformationResponseInput is an input type that accepts SasTokenInformationResponseArgs and SasTokenInformationResponseOutput values.
// You can construct a concrete instance of `SasTokenInformationResponseInput` via:
//
//          SasTokenInformationResponseArgs{...}
type SasTokenInformationResponseInput interface {
	pulumi.Input

	ToSasTokenInformationResponseOutput() SasTokenInformationResponseOutput
	ToSasTokenInformationResponseOutputWithContext(context.Context) SasTokenInformationResponseOutput
}

// SAS token information.
type SasTokenInformationResponseArgs struct {
	// The access token for the associated Azure Storage Container.
	AccessToken pulumi.StringInput `pulumi:"accessToken"`
}

func (SasTokenInformationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SasTokenInformationResponse)(nil)).Elem()
}

func (i SasTokenInformationResponseArgs) ToSasTokenInformationResponseOutput() SasTokenInformationResponseOutput {
	return i.ToSasTokenInformationResponseOutputWithContext(context.Background())
}

func (i SasTokenInformationResponseArgs) ToSasTokenInformationResponseOutputWithContext(ctx context.Context) SasTokenInformationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasTokenInformationResponseOutput)
}

// SasTokenInformationResponseArrayInput is an input type that accepts SasTokenInformationResponseArray and SasTokenInformationResponseArrayOutput values.
// You can construct a concrete instance of `SasTokenInformationResponseArrayInput` via:
//
//          SasTokenInformationResponseArray{ SasTokenInformationResponseArgs{...} }
type SasTokenInformationResponseArrayInput interface {
	pulumi.Input

	ToSasTokenInformationResponseArrayOutput() SasTokenInformationResponseArrayOutput
	ToSasTokenInformationResponseArrayOutputWithContext(context.Context) SasTokenInformationResponseArrayOutput
}

type SasTokenInformationResponseArray []SasTokenInformationResponseInput

func (SasTokenInformationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SasTokenInformationResponse)(nil)).Elem()
}

func (i SasTokenInformationResponseArray) ToSasTokenInformationResponseArrayOutput() SasTokenInformationResponseArrayOutput {
	return i.ToSasTokenInformationResponseArrayOutputWithContext(context.Background())
}

func (i SasTokenInformationResponseArray) ToSasTokenInformationResponseArrayOutputWithContext(ctx context.Context) SasTokenInformationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasTokenInformationResponseArrayOutput)
}

// SAS token information.
type SasTokenInformationResponseOutput struct{ *pulumi.OutputState }

func (SasTokenInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SasTokenInformationResponse)(nil)).Elem()
}

func (o SasTokenInformationResponseOutput) ToSasTokenInformationResponseOutput() SasTokenInformationResponseOutput {
	return o
}

func (o SasTokenInformationResponseOutput) ToSasTokenInformationResponseOutputWithContext(ctx context.Context) SasTokenInformationResponseOutput {
	return o
}

// The access token for the associated Azure Storage Container.
func (o SasTokenInformationResponseOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v SasTokenInformationResponse) string { return v.AccessToken }).(pulumi.StringOutput)
}

type SasTokenInformationResponseArrayOutput struct{ *pulumi.OutputState }

func (SasTokenInformationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SasTokenInformationResponse)(nil)).Elem()
}

func (o SasTokenInformationResponseArrayOutput) ToSasTokenInformationResponseArrayOutput() SasTokenInformationResponseArrayOutput {
	return o
}

func (o SasTokenInformationResponseArrayOutput) ToSasTokenInformationResponseArrayOutputWithContext(ctx context.Context) SasTokenInformationResponseArrayOutput {
	return o
}

func (o SasTokenInformationResponseArrayOutput) Index(i pulumi.IntInput) SasTokenInformationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SasTokenInformationResponse {
		return vs[0].([]SasTokenInformationResponse)[vs[1].(int)]
	}).(SasTokenInformationResponseOutput)
}

// Azure Storage account information.
type StorageAccountInformationResponse struct {
	// The resource identifier.
	Id string `pulumi:"id"`
	// The resource name.
	Name string `pulumi:"name"`
	// The optional suffix for the storage account.
	Suffix string `pulumi:"suffix"`
	// The resource type.
	Type string `pulumi:"type"`
}

// StorageAccountInformationResponseInput is an input type that accepts StorageAccountInformationResponseArgs and StorageAccountInformationResponseOutput values.
// You can construct a concrete instance of `StorageAccountInformationResponseInput` via:
//
//          StorageAccountInformationResponseArgs{...}
type StorageAccountInformationResponseInput interface {
	pulumi.Input

	ToStorageAccountInformationResponseOutput() StorageAccountInformationResponseOutput
	ToStorageAccountInformationResponseOutputWithContext(context.Context) StorageAccountInformationResponseOutput
}

// Azure Storage account information.
type StorageAccountInformationResponseArgs struct {
	// The resource identifier.
	Id pulumi.StringInput `pulumi:"id"`
	// The resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The optional suffix for the storage account.
	Suffix pulumi.StringInput `pulumi:"suffix"`
	// The resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (StorageAccountInformationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountInformationResponse)(nil)).Elem()
}

func (i StorageAccountInformationResponseArgs) ToStorageAccountInformationResponseOutput() StorageAccountInformationResponseOutput {
	return i.ToStorageAccountInformationResponseOutputWithContext(context.Background())
}

func (i StorageAccountInformationResponseArgs) ToStorageAccountInformationResponseOutputWithContext(ctx context.Context) StorageAccountInformationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountInformationResponseOutput)
}

// StorageAccountInformationResponseArrayInput is an input type that accepts StorageAccountInformationResponseArray and StorageAccountInformationResponseArrayOutput values.
// You can construct a concrete instance of `StorageAccountInformationResponseArrayInput` via:
//
//          StorageAccountInformationResponseArray{ StorageAccountInformationResponseArgs{...} }
type StorageAccountInformationResponseArrayInput interface {
	pulumi.Input

	ToStorageAccountInformationResponseArrayOutput() StorageAccountInformationResponseArrayOutput
	ToStorageAccountInformationResponseArrayOutputWithContext(context.Context) StorageAccountInformationResponseArrayOutput
}

type StorageAccountInformationResponseArray []StorageAccountInformationResponseInput

func (StorageAccountInformationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountInformationResponse)(nil)).Elem()
}

func (i StorageAccountInformationResponseArray) ToStorageAccountInformationResponseArrayOutput() StorageAccountInformationResponseArrayOutput {
	return i.ToStorageAccountInformationResponseArrayOutputWithContext(context.Background())
}

func (i StorageAccountInformationResponseArray) ToStorageAccountInformationResponseArrayOutputWithContext(ctx context.Context) StorageAccountInformationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountInformationResponseArrayOutput)
}

// Azure Storage account information.
type StorageAccountInformationResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountInformationResponse)(nil)).Elem()
}

func (o StorageAccountInformationResponseOutput) ToStorageAccountInformationResponseOutput() StorageAccountInformationResponseOutput {
	return o
}

func (o StorageAccountInformationResponseOutput) ToStorageAccountInformationResponseOutputWithContext(ctx context.Context) StorageAccountInformationResponseOutput {
	return o
}

// The resource identifier.
func (o StorageAccountInformationResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountInformationResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The resource name.
func (o StorageAccountInformationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountInformationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The optional suffix for the storage account.
func (o StorageAccountInformationResponseOutput) Suffix() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountInformationResponse) string { return v.Suffix }).(pulumi.StringOutput)
}

// The resource type.
func (o StorageAccountInformationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountInformationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type StorageAccountInformationResponseArrayOutput struct{ *pulumi.OutputState }

func (StorageAccountInformationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountInformationResponse)(nil)).Elem()
}

func (o StorageAccountInformationResponseArrayOutput) ToStorageAccountInformationResponseArrayOutput() StorageAccountInformationResponseArrayOutput {
	return o
}

func (o StorageAccountInformationResponseArrayOutput) ToStorageAccountInformationResponseArrayOutputWithContext(ctx context.Context) StorageAccountInformationResponseArrayOutput {
	return o
}

func (o StorageAccountInformationResponseArrayOutput) Index(i pulumi.IntInput) StorageAccountInformationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageAccountInformationResponse {
		return vs[0].([]StorageAccountInformationResponse)[vs[1].(int)]
	}).(StorageAccountInformationResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AddDataLakeStoreWithAccountParametersOutput{})
	pulumi.RegisterOutputType(AddDataLakeStoreWithAccountParametersArrayOutput{})
	pulumi.RegisterOutputType(AddStorageAccountWithAccountParametersOutput{})
	pulumi.RegisterOutputType(AddStorageAccountWithAccountParametersArrayOutput{})
	pulumi.RegisterOutputType(ComputePolicyResponseOutput{})
	pulumi.RegisterOutputType(ComputePolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(CreateComputePolicyWithAccountParametersOutput{})
	pulumi.RegisterOutputType(CreateComputePolicyWithAccountParametersArrayOutput{})
	pulumi.RegisterOutputType(CreateFirewallRuleWithAccountParametersOutput{})
	pulumi.RegisterOutputType(CreateFirewallRuleWithAccountParametersArrayOutput{})
	pulumi.RegisterOutputType(DataLakeStoreAccountInformationResponseOutput{})
	pulumi.RegisterOutputType(DataLakeStoreAccountInformationResponseArrayOutput{})
	pulumi.RegisterOutputType(FirewallRuleResponseOutput{})
	pulumi.RegisterOutputType(FirewallRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(SasTokenInformationResponseOutput{})
	pulumi.RegisterOutputType(SasTokenInformationResponseArrayOutput{})
	pulumi.RegisterOutputType(StorageAccountInformationResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountInformationResponseArrayOutput{})
}
