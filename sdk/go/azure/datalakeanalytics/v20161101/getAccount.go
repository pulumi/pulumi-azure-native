// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20161101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Data Lake Analytics account object, containing all information associated with the named Data Lake Analytics account.
func LookupAccount(ctx *pulumi.Context, args *LookupAccountArgs, opts ...pulumi.InvokeOption) (*LookupAccountResult, error) {
	var rv LookupAccountResult
	err := ctx.Invoke("azure-native:datalakeanalytics/v20161101:getAccount", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupAccountArgs struct {
	// The name of the Data Lake Analytics account.
	AccountName string `pulumi:"accountName"`
	// The name of the Azure resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A Data Lake Analytics account object, containing all information associated with the named Data Lake Analytics account.
type LookupAccountResult struct {
	// The unique identifier associated with this Data Lake Analytics account.
	AccountId string `pulumi:"accountId"`
	// The list of compute policies associated with this account.
	ComputePolicies []ComputePolicyResponse `pulumi:"computePolicies"`
	// The account creation time.
	CreationTime string `pulumi:"creationTime"`
	// The commitment tier in use for the current month.
	CurrentTier string `pulumi:"currentTier"`
	// The list of Data Lake Store accounts associated with this account.
	DataLakeStoreAccounts []DataLakeStoreAccountInformationResponse `pulumi:"dataLakeStoreAccounts"`
	// The current state of the DebugDataAccessLevel for this account.
	DebugDataAccessLevel string `pulumi:"debugDataAccessLevel"`
	// The default Data Lake Store account associated with this account.
	DefaultDataLakeStoreAccount string `pulumi:"defaultDataLakeStoreAccount"`
	// The full CName endpoint for this account.
	Endpoint string `pulumi:"endpoint"`
	// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
	FirewallAllowAzureIps *string `pulumi:"firewallAllowAzureIps"`
	// The list of firewall rules associated with this account.
	FirewallRules []FirewallRuleResponse `pulumi:"firewallRules"`
	// The current state of the IP address firewall for this account.
	FirewallState *string `pulumi:"firewallState"`
	// The list of hiveMetastores associated with this account.
	HiveMetastores []HiveMetastoreResponse `pulumi:"hiveMetastores"`
	// The resource identifier.
	Id string `pulumi:"id"`
	// The account last modified time.
	LastModifiedTime string `pulumi:"lastModifiedTime"`
	// The resource location.
	Location string `pulumi:"location"`
	// The maximum supported active jobs under the account at the same time.
	MaxActiveJobCountPerUser int `pulumi:"maxActiveJobCountPerUser"`
	// The maximum supported degree of parallelism for this account.
	MaxDegreeOfParallelism *int `pulumi:"maxDegreeOfParallelism"`
	// The maximum supported degree of parallelism per job for this account.
	MaxDegreeOfParallelismPerJob *int `pulumi:"maxDegreeOfParallelismPerJob"`
	// The maximum supported jobs running under the account at the same time.
	MaxJobCount *int `pulumi:"maxJobCount"`
	// The maximum supported active jobs under the account at the same time.
	MaxJobRunningTimeInMin int `pulumi:"maxJobRunningTimeInMin"`
	// The maximum supported jobs queued under the account at the same time.
	MaxQueuedJobCountPerUser int `pulumi:"maxQueuedJobCountPerUser"`
	// The minimum supported priority per job for this account.
	MinPriorityPerJob int `pulumi:"minPriorityPerJob"`
	// The resource name.
	Name string `pulumi:"name"`
	// The commitment tier for the next month.
	NewTier *string `pulumi:"newTier"`
	// The provisioning status of the Data Lake Analytics account.
	ProvisioningState string `pulumi:"provisioningState"`
	// The list of Data Lake Store accounts associated with this account.
	PublicDataLakeStoreAccounts []DataLakeStoreAccountInformationResponse `pulumi:"publicDataLakeStoreAccounts"`
	// The number of days that job metadata is retained.
	QueryStoreRetention *int `pulumi:"queryStoreRetention"`
	// The state of the Data Lake Analytics account.
	State string `pulumi:"state"`
	// The list of Azure Blob Storage accounts associated with this account.
	StorageAccounts []StorageAccountInformationResponse `pulumi:"storageAccounts"`
	// The system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism the user can set for the account.
	SystemMaxDegreeOfParallelism int `pulumi:"systemMaxDegreeOfParallelism"`
	// The system defined maximum supported jobs running under the account at the same time, which restricts the maximum number of running jobs the user can set for the account.
	SystemMaxJobCount int `pulumi:"systemMaxJobCount"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The resource type.
	Type string `pulumi:"type"`
	// The list of virtualNetwork rules associated with this account.
	VirtualNetworkRules []VirtualNetworkRuleResponse `pulumi:"virtualNetworkRules"`
}

// Defaults sets the appropriate defaults for LookupAccountResult
func (val *LookupAccountResult) Defaults() *LookupAccountResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.MaxDegreeOfParallelism) {
		maxDegreeOfParallelism_ := 30
		tmp.MaxDegreeOfParallelism = &maxDegreeOfParallelism_
	}
	if isZero(tmp.MaxJobCount) {
		maxJobCount_ := 3
		tmp.MaxJobCount = &maxJobCount_
	}
	if isZero(tmp.QueryStoreRetention) {
		queryStoreRetention_ := 30
		tmp.QueryStoreRetention = &queryStoreRetention_
	}
	return &tmp
}

func LookupAccountOutput(ctx *pulumi.Context, args LookupAccountOutputArgs, opts ...pulumi.InvokeOption) LookupAccountResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAccountResult, error) {
			args := v.(LookupAccountArgs)
			r, err := LookupAccount(ctx, &args, opts...)
			var s LookupAccountResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAccountResultOutput)
}

type LookupAccountOutputArgs struct {
	// The name of the Data Lake Analytics account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the Azure resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAccountOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountArgs)(nil)).Elem()
}

// A Data Lake Analytics account object, containing all information associated with the named Data Lake Analytics account.
type LookupAccountResultOutput struct{ *pulumi.OutputState }

func (LookupAccountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountResult)(nil)).Elem()
}

func (o LookupAccountResultOutput) ToLookupAccountResultOutput() LookupAccountResultOutput {
	return o
}

func (o LookupAccountResultOutput) ToLookupAccountResultOutputWithContext(ctx context.Context) LookupAccountResultOutput {
	return o
}

// The unique identifier associated with this Data Lake Analytics account.
func (o LookupAccountResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The list of compute policies associated with this account.
func (o LookupAccountResultOutput) ComputePolicies() ComputePolicyResponseArrayOutput {
	return o.ApplyT(func(v LookupAccountResult) []ComputePolicyResponse { return v.ComputePolicies }).(ComputePolicyResponseArrayOutput)
}

// The account creation time.
func (o LookupAccountResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The commitment tier in use for the current month.
func (o LookupAccountResultOutput) CurrentTier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.CurrentTier }).(pulumi.StringOutput)
}

// The list of Data Lake Store accounts associated with this account.
func (o LookupAccountResultOutput) DataLakeStoreAccounts() DataLakeStoreAccountInformationResponseArrayOutput {
	return o.ApplyT(func(v LookupAccountResult) []DataLakeStoreAccountInformationResponse { return v.DataLakeStoreAccounts }).(DataLakeStoreAccountInformationResponseArrayOutput)
}

// The current state of the DebugDataAccessLevel for this account.
func (o LookupAccountResultOutput) DebugDataAccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.DebugDataAccessLevel }).(pulumi.StringOutput)
}

// The default Data Lake Store account associated with this account.
func (o LookupAccountResultOutput) DefaultDataLakeStoreAccount() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.DefaultDataLakeStoreAccount }).(pulumi.StringOutput)
}

// The full CName endpoint for this account.
func (o LookupAccountResultOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
func (o LookupAccountResultOutput) FirewallAllowAzureIps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccountResult) *string { return v.FirewallAllowAzureIps }).(pulumi.StringPtrOutput)
}

// The list of firewall rules associated with this account.
func (o LookupAccountResultOutput) FirewallRules() FirewallRuleResponseArrayOutput {
	return o.ApplyT(func(v LookupAccountResult) []FirewallRuleResponse { return v.FirewallRules }).(FirewallRuleResponseArrayOutput)
}

// The current state of the IP address firewall for this account.
func (o LookupAccountResultOutput) FirewallState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccountResult) *string { return v.FirewallState }).(pulumi.StringPtrOutput)
}

// The list of hiveMetastores associated with this account.
func (o LookupAccountResultOutput) HiveMetastores() HiveMetastoreResponseArrayOutput {
	return o.ApplyT(func(v LookupAccountResult) []HiveMetastoreResponse { return v.HiveMetastores }).(HiveMetastoreResponseArrayOutput)
}

// The resource identifier.
func (o LookupAccountResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.Id }).(pulumi.StringOutput)
}

// The account last modified time.
func (o LookupAccountResultOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.LastModifiedTime }).(pulumi.StringOutput)
}

// The resource location.
func (o LookupAccountResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.Location }).(pulumi.StringOutput)
}

// The maximum supported active jobs under the account at the same time.
func (o LookupAccountResultOutput) MaxActiveJobCountPerUser() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAccountResult) int { return v.MaxActiveJobCountPerUser }).(pulumi.IntOutput)
}

// The maximum supported degree of parallelism for this account.
func (o LookupAccountResultOutput) MaxDegreeOfParallelism() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupAccountResult) *int { return v.MaxDegreeOfParallelism }).(pulumi.IntPtrOutput)
}

// The maximum supported degree of parallelism per job for this account.
func (o LookupAccountResultOutput) MaxDegreeOfParallelismPerJob() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupAccountResult) *int { return v.MaxDegreeOfParallelismPerJob }).(pulumi.IntPtrOutput)
}

// The maximum supported jobs running under the account at the same time.
func (o LookupAccountResultOutput) MaxJobCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupAccountResult) *int { return v.MaxJobCount }).(pulumi.IntPtrOutput)
}

// The maximum supported active jobs under the account at the same time.
func (o LookupAccountResultOutput) MaxJobRunningTimeInMin() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAccountResult) int { return v.MaxJobRunningTimeInMin }).(pulumi.IntOutput)
}

// The maximum supported jobs queued under the account at the same time.
func (o LookupAccountResultOutput) MaxQueuedJobCountPerUser() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAccountResult) int { return v.MaxQueuedJobCountPerUser }).(pulumi.IntOutput)
}

// The minimum supported priority per job for this account.
func (o LookupAccountResultOutput) MinPriorityPerJob() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAccountResult) int { return v.MinPriorityPerJob }).(pulumi.IntOutput)
}

// The resource name.
func (o LookupAccountResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.Name }).(pulumi.StringOutput)
}

// The commitment tier for the next month.
func (o LookupAccountResultOutput) NewTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccountResult) *string { return v.NewTier }).(pulumi.StringPtrOutput)
}

// The provisioning status of the Data Lake Analytics account.
func (o LookupAccountResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The list of Data Lake Store accounts associated with this account.
func (o LookupAccountResultOutput) PublicDataLakeStoreAccounts() DataLakeStoreAccountInformationResponseArrayOutput {
	return o.ApplyT(func(v LookupAccountResult) []DataLakeStoreAccountInformationResponse {
		return v.PublicDataLakeStoreAccounts
	}).(DataLakeStoreAccountInformationResponseArrayOutput)
}

// The number of days that job metadata is retained.
func (o LookupAccountResultOutput) QueryStoreRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupAccountResult) *int { return v.QueryStoreRetention }).(pulumi.IntPtrOutput)
}

// The state of the Data Lake Analytics account.
func (o LookupAccountResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.State }).(pulumi.StringOutput)
}

// The list of Azure Blob Storage accounts associated with this account.
func (o LookupAccountResultOutput) StorageAccounts() StorageAccountInformationResponseArrayOutput {
	return o.ApplyT(func(v LookupAccountResult) []StorageAccountInformationResponse { return v.StorageAccounts }).(StorageAccountInformationResponseArrayOutput)
}

// The system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism the user can set for the account.
func (o LookupAccountResultOutput) SystemMaxDegreeOfParallelism() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAccountResult) int { return v.SystemMaxDegreeOfParallelism }).(pulumi.IntOutput)
}

// The system defined maximum supported jobs running under the account at the same time, which restricts the maximum number of running jobs the user can set for the account.
func (o LookupAccountResultOutput) SystemMaxJobCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAccountResult) int { return v.SystemMaxJobCount }).(pulumi.IntOutput)
}

// The resource tags.
func (o LookupAccountResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAccountResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The resource type.
func (o LookupAccountResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.Type }).(pulumi.StringOutput)
}

// The list of virtualNetwork rules associated with this account.
func (o LookupAccountResultOutput) VirtualNetworkRules() VirtualNetworkRuleResponseArrayOutput {
	return o.ApplyT(func(v LookupAccountResult) []VirtualNetworkRuleResponse { return v.VirtualNetworkRules }).(VirtualNetworkRuleResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccountResultOutput{})
}
