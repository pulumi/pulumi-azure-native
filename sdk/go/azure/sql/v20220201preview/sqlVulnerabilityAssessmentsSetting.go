// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220201preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A SQL Vulnerability Assessment.
type SqlVulnerabilityAssessmentsSetting struct {
	pulumi.CustomResourceState

	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the state of the SQL Vulnerability Assessment, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.
	State pulumi.StringPtrOutput `pulumi:"state"`
	// SystemData of SqlVulnerabilityAssessmentResource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSqlVulnerabilityAssessmentsSetting registers a new resource with the given unique name, arguments, and options.
func NewSqlVulnerabilityAssessmentsSetting(ctx *pulumi.Context,
	name string, args *SqlVulnerabilityAssessmentsSettingArgs, opts ...pulumi.ResourceOption) (*SqlVulnerabilityAssessmentsSetting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ServerName == nil {
		return nil, errors.New("invalid value for required argument 'ServerName'")
	}
	var resource SqlVulnerabilityAssessmentsSetting
	err := ctx.RegisterResource("azure-native:sql/v20220201preview:SqlVulnerabilityAssessmentsSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSqlVulnerabilityAssessmentsSetting gets an existing SqlVulnerabilityAssessmentsSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSqlVulnerabilityAssessmentsSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SqlVulnerabilityAssessmentsSettingState, opts ...pulumi.ResourceOption) (*SqlVulnerabilityAssessmentsSetting, error) {
	var resource SqlVulnerabilityAssessmentsSetting
	err := ctx.ReadResource("azure-native:sql/v20220201preview:SqlVulnerabilityAssessmentsSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SqlVulnerabilityAssessmentsSetting resources.
type sqlVulnerabilityAssessmentsSettingState struct {
}

type SqlVulnerabilityAssessmentsSettingState struct {
}

func (SqlVulnerabilityAssessmentsSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlVulnerabilityAssessmentsSettingState)(nil)).Elem()
}

type sqlVulnerabilityAssessmentsSettingArgs struct {
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName string `pulumi:"serverName"`
	// Specifies the state of the SQL Vulnerability Assessment, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.
	State *SqlVulnerabilityAssessmentState `pulumi:"state"`
	// The name of the SQL Vulnerability Assessment.
	VulnerabilityAssessmentName *string `pulumi:"vulnerabilityAssessmentName"`
}

// The set of arguments for constructing a SqlVulnerabilityAssessmentsSetting resource.
type SqlVulnerabilityAssessmentsSettingArgs struct {
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput
	// The name of the server.
	ServerName pulumi.StringInput
	// Specifies the state of the SQL Vulnerability Assessment, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.
	State SqlVulnerabilityAssessmentStatePtrInput
	// The name of the SQL Vulnerability Assessment.
	VulnerabilityAssessmentName pulumi.StringPtrInput
}

func (SqlVulnerabilityAssessmentsSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlVulnerabilityAssessmentsSettingArgs)(nil)).Elem()
}

type SqlVulnerabilityAssessmentsSettingInput interface {
	pulumi.Input

	ToSqlVulnerabilityAssessmentsSettingOutput() SqlVulnerabilityAssessmentsSettingOutput
	ToSqlVulnerabilityAssessmentsSettingOutputWithContext(ctx context.Context) SqlVulnerabilityAssessmentsSettingOutput
}

func (*SqlVulnerabilityAssessmentsSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlVulnerabilityAssessmentsSetting)(nil)).Elem()
}

func (i *SqlVulnerabilityAssessmentsSetting) ToSqlVulnerabilityAssessmentsSettingOutput() SqlVulnerabilityAssessmentsSettingOutput {
	return i.ToSqlVulnerabilityAssessmentsSettingOutputWithContext(context.Background())
}

func (i *SqlVulnerabilityAssessmentsSetting) ToSqlVulnerabilityAssessmentsSettingOutputWithContext(ctx context.Context) SqlVulnerabilityAssessmentsSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlVulnerabilityAssessmentsSettingOutput)
}

type SqlVulnerabilityAssessmentsSettingOutput struct{ *pulumi.OutputState }

func (SqlVulnerabilityAssessmentsSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlVulnerabilityAssessmentsSetting)(nil)).Elem()
}

func (o SqlVulnerabilityAssessmentsSettingOutput) ToSqlVulnerabilityAssessmentsSettingOutput() SqlVulnerabilityAssessmentsSettingOutput {
	return o
}

func (o SqlVulnerabilityAssessmentsSettingOutput) ToSqlVulnerabilityAssessmentsSettingOutputWithContext(ctx context.Context) SqlVulnerabilityAssessmentsSettingOutput {
	return o
}

// Resource name.
func (o SqlVulnerabilityAssessmentsSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlVulnerabilityAssessmentsSetting) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the state of the SQL Vulnerability Assessment, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.
func (o SqlVulnerabilityAssessmentsSettingOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlVulnerabilityAssessmentsSetting) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

// SystemData of SqlVulnerabilityAssessmentResource.
func (o SqlVulnerabilityAssessmentsSettingOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *SqlVulnerabilityAssessmentsSetting) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource type.
func (o SqlVulnerabilityAssessmentsSettingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlVulnerabilityAssessmentsSetting) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SqlVulnerabilityAssessmentsSettingOutput{})
}
