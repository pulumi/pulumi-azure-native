


package v20220201preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ManagedInstanceVulnerabilityAssessment struct {
	pulumi.CustomResourceState

	Name           pulumi.StringOutput                                              `pulumi:"name"`
	RecurringScans VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput `pulumi:"recurringScans"`
	Type           pulumi.StringOutput                                              `pulumi:"type"`
}


func NewManagedInstanceVulnerabilityAssessment(ctx *pulumi.Context,
	name string, args *ManagedInstanceVulnerabilityAssessmentArgs, opts ...pulumi.ResourceOption) (*ManagedInstanceVulnerabilityAssessment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagedInstanceName == nil {
		return nil, errors.New("invalid value for required argument 'ManagedInstanceName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.StorageContainerPath == nil {
		return nil, errors.New("invalid value for required argument 'StorageContainerPath'")
	}
	if args.RecurringScans != nil {
		args.RecurringScans = args.RecurringScans.ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutput().ApplyT(func(v *VulnerabilityAssessmentRecurringScansProperties) *VulnerabilityAssessmentRecurringScansProperties {
			return v.Defaults()
		}).(VulnerabilityAssessmentRecurringScansPropertiesPtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:sql:ManagedInstanceVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20180601preview:ManagedInstanceVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20200202preview:ManagedInstanceVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20200801preview:ManagedInstanceVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20201101preview:ManagedInstanceVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20210201preview:ManagedInstanceVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20210501preview:ManagedInstanceVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20210801preview:ManagedInstanceVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20211101:ManagedInstanceVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20211101preview:ManagedInstanceVulnerabilityAssessment"),
		},
	})
	opts = append(opts, aliases)
	var resource ManagedInstanceVulnerabilityAssessment
	err := ctx.RegisterResource("azure-native:sql/v20220201preview:ManagedInstanceVulnerabilityAssessment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}



func GetManagedInstanceVulnerabilityAssessment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedInstanceVulnerabilityAssessmentState, opts ...pulumi.ResourceOption) (*ManagedInstanceVulnerabilityAssessment, error) {
	var resource ManagedInstanceVulnerabilityAssessment
	err := ctx.ReadResource("azure-native:sql/v20220201preview:ManagedInstanceVulnerabilityAssessment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}


type managedInstanceVulnerabilityAssessmentState struct {
}

type ManagedInstanceVulnerabilityAssessmentState struct {
}

func (ManagedInstanceVulnerabilityAssessmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceVulnerabilityAssessmentState)(nil)).Elem()
}

type managedInstanceVulnerabilityAssessmentArgs struct {
	ManagedInstanceName         string                                           `pulumi:"managedInstanceName"`
	RecurringScans              *VulnerabilityAssessmentRecurringScansProperties `pulumi:"recurringScans"`
	ResourceGroupName           string                                           `pulumi:"resourceGroupName"`
	StorageAccountAccessKey     *string                                          `pulumi:"storageAccountAccessKey"`
	StorageContainerPath        string                                           `pulumi:"storageContainerPath"`
	StorageContainerSasKey      *string                                          `pulumi:"storageContainerSasKey"`
	VulnerabilityAssessmentName *string                                          `pulumi:"vulnerabilityAssessmentName"`
}


type ManagedInstanceVulnerabilityAssessmentArgs struct {
	ManagedInstanceName         pulumi.StringInput
	RecurringScans              VulnerabilityAssessmentRecurringScansPropertiesPtrInput
	ResourceGroupName           pulumi.StringInput
	StorageAccountAccessKey     pulumi.StringPtrInput
	StorageContainerPath        pulumi.StringInput
	StorageContainerSasKey      pulumi.StringPtrInput
	VulnerabilityAssessmentName pulumi.StringPtrInput
}

func (ManagedInstanceVulnerabilityAssessmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceVulnerabilityAssessmentArgs)(nil)).Elem()
}

type ManagedInstanceVulnerabilityAssessmentInput interface {
	pulumi.Input

	ToManagedInstanceVulnerabilityAssessmentOutput() ManagedInstanceVulnerabilityAssessmentOutput
	ToManagedInstanceVulnerabilityAssessmentOutputWithContext(ctx context.Context) ManagedInstanceVulnerabilityAssessmentOutput
}

func (*ManagedInstanceVulnerabilityAssessment) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceVulnerabilityAssessment)(nil)).Elem()
}

func (i *ManagedInstanceVulnerabilityAssessment) ToManagedInstanceVulnerabilityAssessmentOutput() ManagedInstanceVulnerabilityAssessmentOutput {
	return i.ToManagedInstanceVulnerabilityAssessmentOutputWithContext(context.Background())
}

func (i *ManagedInstanceVulnerabilityAssessment) ToManagedInstanceVulnerabilityAssessmentOutputWithContext(ctx context.Context) ManagedInstanceVulnerabilityAssessmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceVulnerabilityAssessmentOutput)
}

type ManagedInstanceVulnerabilityAssessmentOutput struct{ *pulumi.OutputState }

func (ManagedInstanceVulnerabilityAssessmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceVulnerabilityAssessment)(nil)).Elem()
}

func (o ManagedInstanceVulnerabilityAssessmentOutput) ToManagedInstanceVulnerabilityAssessmentOutput() ManagedInstanceVulnerabilityAssessmentOutput {
	return o
}

func (o ManagedInstanceVulnerabilityAssessmentOutput) ToManagedInstanceVulnerabilityAssessmentOutputWithContext(ctx context.Context) ManagedInstanceVulnerabilityAssessmentOutput {
	return o
}

func (o ManagedInstanceVulnerabilityAssessmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedInstanceVulnerabilityAssessment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ManagedInstanceVulnerabilityAssessmentOutput) RecurringScans() VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *ManagedInstanceVulnerabilityAssessment) VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
		return v.RecurringScans
	}).(VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput)
}

func (o ManagedInstanceVulnerabilityAssessmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedInstanceVulnerabilityAssessment) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ManagedInstanceVulnerabilityAssessmentOutput{})
}
