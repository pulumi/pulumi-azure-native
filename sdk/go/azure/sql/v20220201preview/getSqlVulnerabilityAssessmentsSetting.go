// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A SQL Vulnerability Assessment.
func LookupSqlVulnerabilityAssessmentsSetting(ctx *pulumi.Context, args *LookupSqlVulnerabilityAssessmentsSettingArgs, opts ...pulumi.InvokeOption) (*LookupSqlVulnerabilityAssessmentsSettingResult, error) {
	var rv LookupSqlVulnerabilityAssessmentsSettingResult
	err := ctx.Invoke("azure-native:sql/v20220201preview:getSqlVulnerabilityAssessmentsSetting", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSqlVulnerabilityAssessmentsSettingArgs struct {
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName string `pulumi:"serverName"`
	// The name of the SQL Vulnerability Assessment.
	VulnerabilityAssessmentName string `pulumi:"vulnerabilityAssessmentName"`
}

// A SQL Vulnerability Assessment.
type LookupSqlVulnerabilityAssessmentsSettingResult struct {
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// Specifies the state of the SQL Vulnerability Assessment, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.
	State *string `pulumi:"state"`
	// SystemData of SqlVulnerabilityAssessmentResource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupSqlVulnerabilityAssessmentsSettingOutput(ctx *pulumi.Context, args LookupSqlVulnerabilityAssessmentsSettingOutputArgs, opts ...pulumi.InvokeOption) LookupSqlVulnerabilityAssessmentsSettingResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSqlVulnerabilityAssessmentsSettingResult, error) {
			args := v.(LookupSqlVulnerabilityAssessmentsSettingArgs)
			r, err := LookupSqlVulnerabilityAssessmentsSetting(ctx, &args, opts...)
			var s LookupSqlVulnerabilityAssessmentsSettingResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSqlVulnerabilityAssessmentsSettingResultOutput)
}

type LookupSqlVulnerabilityAssessmentsSettingOutputArgs struct {
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName pulumi.StringInput `pulumi:"serverName"`
	// The name of the SQL Vulnerability Assessment.
	VulnerabilityAssessmentName pulumi.StringInput `pulumi:"vulnerabilityAssessmentName"`
}

func (LookupSqlVulnerabilityAssessmentsSettingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSqlVulnerabilityAssessmentsSettingArgs)(nil)).Elem()
}

// A SQL Vulnerability Assessment.
type LookupSqlVulnerabilityAssessmentsSettingResultOutput struct{ *pulumi.OutputState }

func (LookupSqlVulnerabilityAssessmentsSettingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSqlVulnerabilityAssessmentsSettingResult)(nil)).Elem()
}

func (o LookupSqlVulnerabilityAssessmentsSettingResultOutput) ToLookupSqlVulnerabilityAssessmentsSettingResultOutput() LookupSqlVulnerabilityAssessmentsSettingResultOutput {
	return o
}

func (o LookupSqlVulnerabilityAssessmentsSettingResultOutput) ToLookupSqlVulnerabilityAssessmentsSettingResultOutputWithContext(ctx context.Context) LookupSqlVulnerabilityAssessmentsSettingResultOutput {
	return o
}

// Resource ID.
func (o LookupSqlVulnerabilityAssessmentsSettingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlVulnerabilityAssessmentsSettingResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupSqlVulnerabilityAssessmentsSettingResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlVulnerabilityAssessmentsSettingResult) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the state of the SQL Vulnerability Assessment, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.
func (o LookupSqlVulnerabilityAssessmentsSettingResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSqlVulnerabilityAssessmentsSettingResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// SystemData of SqlVulnerabilityAssessmentResource.
func (o LookupSqlVulnerabilityAssessmentsSettingResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSqlVulnerabilityAssessmentsSettingResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource type.
func (o LookupSqlVulnerabilityAssessmentsSettingResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlVulnerabilityAssessmentsSettingResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSqlVulnerabilityAssessmentsSettingResultOutput{})
}
