


package v20220201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDatabaseSqlVulnerabilityAssessmentRuleBaseline(ctx *pulumi.Context, args *LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineArgs, opts ...pulumi.InvokeOption) (*LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult, error) {
	var rv LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult
	err := ctx.Invoke("azure-native:sql/v20220201preview:getDatabaseSqlVulnerabilityAssessmentRuleBaseline", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineArgs struct {
	BaselineName                string `pulumi:"baselineName"`
	DatabaseName                string `pulumi:"databaseName"`
	ResourceGroupName           string `pulumi:"resourceGroupName"`
	RuleId                      string `pulumi:"ruleId"`
	ServerName                  string `pulumi:"serverName"`
	VulnerabilityAssessmentName string `pulumi:"vulnerabilityAssessmentName"`
}


type LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult struct {
	Id         string             `pulumi:"id"`
	Name       string             `pulumi:"name"`
	Results    [][]string         `pulumi:"results"`
	SystemData SystemDataResponse `pulumi:"systemData"`
	Type       string             `pulumi:"type"`
}

func LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineOutput(ctx *pulumi.Context, args LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineOutputArgs, opts ...pulumi.InvokeOption) LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult, error) {
			args := v.(LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineArgs)
			r, err := LookupDatabaseSqlVulnerabilityAssessmentRuleBaseline(ctx, &args, opts...)
			var s LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput)
}

type LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineOutputArgs struct {
	BaselineName                pulumi.StringInput `pulumi:"baselineName"`
	DatabaseName                pulumi.StringInput `pulumi:"databaseName"`
	ResourceGroupName           pulumi.StringInput `pulumi:"resourceGroupName"`
	RuleId                      pulumi.StringInput `pulumi:"ruleId"`
	ServerName                  pulumi.StringInput `pulumi:"serverName"`
	VulnerabilityAssessmentName pulumi.StringInput `pulumi:"vulnerabilityAssessmentName"`
}

func (LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineArgs)(nil)).Elem()
}


type LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput struct{ *pulumi.OutputState }

func (LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult)(nil)).Elem()
}

func (o LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput) ToLookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput() LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput {
	return o
}

func (o LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput) ToLookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutputWithContext(ctx context.Context) LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput {
	return o
}

func (o LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput) Results() pulumi.StringArrayArrayOutput {
	return o.ApplyT(func(v LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult) [][]string { return v.Results }).(pulumi.StringArrayArrayOutput)
}

func (o LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult) SystemDataResponse {
		return v.SystemData
	}).(SystemDataResponseOutput)
}

func (o LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput{})
}
