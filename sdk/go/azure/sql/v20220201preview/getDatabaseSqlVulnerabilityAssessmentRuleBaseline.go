// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A database sql vulnerability assessment rule baseline.
func LookupDatabaseSqlVulnerabilityAssessmentRuleBaseline(ctx *pulumi.Context, args *LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineArgs, opts ...pulumi.InvokeOption) (*LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult, error) {
	var rv LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult
	err := ctx.Invoke("azure-native:sql/v20220201preview:getDatabaseSqlVulnerabilityAssessmentRuleBaseline", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineArgs struct {
	BaselineName string `pulumi:"baselineName"`
	// The name of the database.
	DatabaseName string `pulumi:"databaseName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The vulnerability assessment rule ID.
	RuleId string `pulumi:"ruleId"`
	// The name of the server.
	ServerName string `pulumi:"serverName"`
	// The name of the vulnerability assessment.
	VulnerabilityAssessmentName string `pulumi:"vulnerabilityAssessmentName"`
}

// A database sql vulnerability assessment rule baseline.
type LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult struct {
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// The rule baseline result
	Results [][]string `pulumi:"results"`
	// SystemData of DatabaseSqlVulnerabilityAssessmentRuleBaselineResource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineOutput(ctx *pulumi.Context, args LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineOutputArgs, opts ...pulumi.InvokeOption) LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult, error) {
			args := v.(LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineArgs)
			r, err := LookupDatabaseSqlVulnerabilityAssessmentRuleBaseline(ctx, &args, opts...)
			var s LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput)
}

type LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineOutputArgs struct {
	BaselineName pulumi.StringInput `pulumi:"baselineName"`
	// The name of the database.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The vulnerability assessment rule ID.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// The name of the server.
	ServerName pulumi.StringInput `pulumi:"serverName"`
	// The name of the vulnerability assessment.
	VulnerabilityAssessmentName pulumi.StringInput `pulumi:"vulnerabilityAssessmentName"`
}

func (LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineArgs)(nil)).Elem()
}

// A database sql vulnerability assessment rule baseline.
type LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput struct{ *pulumi.OutputState }

func (LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult)(nil)).Elem()
}

func (o LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput) ToLookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput() LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput {
	return o
}

func (o LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput) ToLookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutputWithContext(ctx context.Context) LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput {
	return o
}

// Resource ID.
func (o LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult) string { return v.Name }).(pulumi.StringOutput)
}

// The rule baseline result
func (o LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput) Results() pulumi.StringArrayArrayOutput {
	return o.ApplyT(func(v LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult) [][]string { return v.Results }).(pulumi.StringArrayArrayOutput)
}

// SystemData of DatabaseSqlVulnerabilityAssessmentRuleBaselineResource.
func (o LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult) SystemDataResponse {
		return v.SystemData
	}).(SystemDataResponseOutput)
}

// Resource type.
func (o LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatabaseSqlVulnerabilityAssessmentRuleBaselineResultOutput{})
}
