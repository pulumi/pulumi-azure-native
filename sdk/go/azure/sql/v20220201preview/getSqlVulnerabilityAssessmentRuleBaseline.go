// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A database sql vulnerability assessment rule baseline.
func LookupSqlVulnerabilityAssessmentRuleBaseline(ctx *pulumi.Context, args *LookupSqlVulnerabilityAssessmentRuleBaselineArgs, opts ...pulumi.InvokeOption) (*LookupSqlVulnerabilityAssessmentRuleBaselineResult, error) {
	var rv LookupSqlVulnerabilityAssessmentRuleBaselineResult
	err := ctx.Invoke("azure-native:sql/v20220201preview:getSqlVulnerabilityAssessmentRuleBaseline", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSqlVulnerabilityAssessmentRuleBaselineArgs struct {
	BaselineName string `pulumi:"baselineName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The vulnerability assessment rule ID.
	RuleId string `pulumi:"ruleId"`
	// The name of the server.
	ServerName string `pulumi:"serverName"`
	// The vulnerability assessment system database name.
	SystemDatabaseName string `pulumi:"systemDatabaseName"`
	// The name of the vulnerability assessment.
	VulnerabilityAssessmentName string `pulumi:"vulnerabilityAssessmentName"`
}

// A database sql vulnerability assessment rule baseline.
type LookupSqlVulnerabilityAssessmentRuleBaselineResult struct {
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// The rule baseline result
	Results [][]string `pulumi:"results"`
	// SystemData of DatabaseSqlVulnerabilityAssessmentRuleBaselineResource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupSqlVulnerabilityAssessmentRuleBaselineOutput(ctx *pulumi.Context, args LookupSqlVulnerabilityAssessmentRuleBaselineOutputArgs, opts ...pulumi.InvokeOption) LookupSqlVulnerabilityAssessmentRuleBaselineResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSqlVulnerabilityAssessmentRuleBaselineResult, error) {
			args := v.(LookupSqlVulnerabilityAssessmentRuleBaselineArgs)
			r, err := LookupSqlVulnerabilityAssessmentRuleBaseline(ctx, &args, opts...)
			var s LookupSqlVulnerabilityAssessmentRuleBaselineResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSqlVulnerabilityAssessmentRuleBaselineResultOutput)
}

type LookupSqlVulnerabilityAssessmentRuleBaselineOutputArgs struct {
	BaselineName pulumi.StringInput `pulumi:"baselineName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The vulnerability assessment rule ID.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// The name of the server.
	ServerName pulumi.StringInput `pulumi:"serverName"`
	// The vulnerability assessment system database name.
	SystemDatabaseName pulumi.StringInput `pulumi:"systemDatabaseName"`
	// The name of the vulnerability assessment.
	VulnerabilityAssessmentName pulumi.StringInput `pulumi:"vulnerabilityAssessmentName"`
}

func (LookupSqlVulnerabilityAssessmentRuleBaselineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSqlVulnerabilityAssessmentRuleBaselineArgs)(nil)).Elem()
}

// A database sql vulnerability assessment rule baseline.
type LookupSqlVulnerabilityAssessmentRuleBaselineResultOutput struct{ *pulumi.OutputState }

func (LookupSqlVulnerabilityAssessmentRuleBaselineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSqlVulnerabilityAssessmentRuleBaselineResult)(nil)).Elem()
}

func (o LookupSqlVulnerabilityAssessmentRuleBaselineResultOutput) ToLookupSqlVulnerabilityAssessmentRuleBaselineResultOutput() LookupSqlVulnerabilityAssessmentRuleBaselineResultOutput {
	return o
}

func (o LookupSqlVulnerabilityAssessmentRuleBaselineResultOutput) ToLookupSqlVulnerabilityAssessmentRuleBaselineResultOutputWithContext(ctx context.Context) LookupSqlVulnerabilityAssessmentRuleBaselineResultOutput {
	return o
}

// Resource ID.
func (o LookupSqlVulnerabilityAssessmentRuleBaselineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlVulnerabilityAssessmentRuleBaselineResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupSqlVulnerabilityAssessmentRuleBaselineResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlVulnerabilityAssessmentRuleBaselineResult) string { return v.Name }).(pulumi.StringOutput)
}

// The rule baseline result
func (o LookupSqlVulnerabilityAssessmentRuleBaselineResultOutput) Results() pulumi.StringArrayArrayOutput {
	return o.ApplyT(func(v LookupSqlVulnerabilityAssessmentRuleBaselineResult) [][]string { return v.Results }).(pulumi.StringArrayArrayOutput)
}

// SystemData of DatabaseSqlVulnerabilityAssessmentRuleBaselineResource.
func (o LookupSqlVulnerabilityAssessmentRuleBaselineResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSqlVulnerabilityAssessmentRuleBaselineResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource type.
func (o LookupSqlVulnerabilityAssessmentRuleBaselineResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlVulnerabilityAssessmentRuleBaselineResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSqlVulnerabilityAssessmentRuleBaselineResultOutput{})
}
