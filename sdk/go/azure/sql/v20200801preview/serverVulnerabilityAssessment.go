


package v20200801preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServerVulnerabilityAssessment struct {
	pulumi.CustomResourceState

	Name           pulumi.StringOutput                                              `pulumi:"name"`
	RecurringScans VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput `pulumi:"recurringScans"`
	Type           pulumi.StringOutput                                              `pulumi:"type"`
}


func NewServerVulnerabilityAssessment(ctx *pulumi.Context,
	name string, args *ServerVulnerabilityAssessmentArgs, opts ...pulumi.ResourceOption) (*ServerVulnerabilityAssessment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ServerName == nil {
		return nil, errors.New("invalid value for required argument 'ServerName'")
	}
	if args.StorageContainerPath == nil {
		return nil, errors.New("invalid value for required argument 'StorageContainerPath'")
	}
	if args.RecurringScans != nil {
		args.RecurringScans = args.RecurringScans.ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutput().ApplyT(func(v *VulnerabilityAssessmentRecurringScansProperties) *VulnerabilityAssessmentRecurringScansProperties {
			return v.Defaults()
		}).(VulnerabilityAssessmentRecurringScansPropertiesPtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:sql:ServerVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20180601preview:ServerVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20200202preview:ServerVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20201101preview:ServerVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20210201preview:ServerVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20210501preview:ServerVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20210801preview:ServerVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20211101:ServerVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20211101preview:ServerVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20220201preview:ServerVulnerabilityAssessment"),
		},
	})
	opts = append(opts, aliases)
	var resource ServerVulnerabilityAssessment
	err := ctx.RegisterResource("azure-native:sql/v20200801preview:ServerVulnerabilityAssessment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}



func GetServerVulnerabilityAssessment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerVulnerabilityAssessmentState, opts ...pulumi.ResourceOption) (*ServerVulnerabilityAssessment, error) {
	var resource ServerVulnerabilityAssessment
	err := ctx.ReadResource("azure-native:sql/v20200801preview:ServerVulnerabilityAssessment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}


type serverVulnerabilityAssessmentState struct {
}

type ServerVulnerabilityAssessmentState struct {
}

func (ServerVulnerabilityAssessmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverVulnerabilityAssessmentState)(nil)).Elem()
}

type serverVulnerabilityAssessmentArgs struct {
	RecurringScans              *VulnerabilityAssessmentRecurringScansProperties `pulumi:"recurringScans"`
	ResourceGroupName           string                                           `pulumi:"resourceGroupName"`
	ServerName                  string                                           `pulumi:"serverName"`
	StorageAccountAccessKey     *string                                          `pulumi:"storageAccountAccessKey"`
	StorageContainerPath        string                                           `pulumi:"storageContainerPath"`
	StorageContainerSasKey      *string                                          `pulumi:"storageContainerSasKey"`
	VulnerabilityAssessmentName *string                                          `pulumi:"vulnerabilityAssessmentName"`
}


type ServerVulnerabilityAssessmentArgs struct {
	RecurringScans              VulnerabilityAssessmentRecurringScansPropertiesPtrInput
	ResourceGroupName           pulumi.StringInput
	ServerName                  pulumi.StringInput
	StorageAccountAccessKey     pulumi.StringPtrInput
	StorageContainerPath        pulumi.StringInput
	StorageContainerSasKey      pulumi.StringPtrInput
	VulnerabilityAssessmentName pulumi.StringPtrInput
}

func (ServerVulnerabilityAssessmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverVulnerabilityAssessmentArgs)(nil)).Elem()
}

type ServerVulnerabilityAssessmentInput interface {
	pulumi.Input

	ToServerVulnerabilityAssessmentOutput() ServerVulnerabilityAssessmentOutput
	ToServerVulnerabilityAssessmentOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentOutput
}

func (*ServerVulnerabilityAssessment) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerVulnerabilityAssessment)(nil)).Elem()
}

func (i *ServerVulnerabilityAssessment) ToServerVulnerabilityAssessmentOutput() ServerVulnerabilityAssessmentOutput {
	return i.ToServerVulnerabilityAssessmentOutputWithContext(context.Background())
}

func (i *ServerVulnerabilityAssessment) ToServerVulnerabilityAssessmentOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerVulnerabilityAssessmentOutput)
}

type ServerVulnerabilityAssessmentOutput struct{ *pulumi.OutputState }

func (ServerVulnerabilityAssessmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerVulnerabilityAssessment)(nil)).Elem()
}

func (o ServerVulnerabilityAssessmentOutput) ToServerVulnerabilityAssessmentOutput() ServerVulnerabilityAssessmentOutput {
	return o
}

func (o ServerVulnerabilityAssessmentOutput) ToServerVulnerabilityAssessmentOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentOutput {
	return o
}

func (o ServerVulnerabilityAssessmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerVulnerabilityAssessment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ServerVulnerabilityAssessmentOutput) RecurringScans() VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *ServerVulnerabilityAssessment) VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
		return v.RecurringScans
	}).(VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput)
}

func (o ServerVulnerabilityAssessmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerVulnerabilityAssessment) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ServerVulnerabilityAssessmentOutput{})
}
