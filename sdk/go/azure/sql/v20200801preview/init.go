// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200801preview

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure-nextgen/sdk/go/azure"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure-nextgen:sql/v20200801preview:Database":
		r, err = NewDatabase(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:DatabaseSecurityAlertPolicy":
		r, err = NewDatabaseSecurityAlertPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:DatabaseVulnerabilityAssessment":
		r, err = NewDatabaseVulnerabilityAssessment(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:DatabaseVulnerabilityAssessmentRuleBaseline":
		r, err = NewDatabaseVulnerabilityAssessmentRuleBaseline(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:ElasticPool":
		r, err = NewElasticPool(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:FailoverGroup":
		r, err = NewFailoverGroup(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:FirewallRule":
		r, err = NewFirewallRule(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:InstanceFailoverGroup":
		r, err = NewInstanceFailoverGroup(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:InstancePool":
		r, err = NewInstancePool(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:Job":
		r, err = NewJob(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:JobAgent":
		r, err = NewJobAgent(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:JobCredential":
		r, err = NewJobCredential(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:JobStep":
		r, err = NewJobStep(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:JobTargetGroup":
		r, err = NewJobTargetGroup(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:ManagedDatabase":
		r, err = NewManagedDatabase(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:ManagedDatabaseSensitivityLabel":
		r, err = NewManagedDatabaseSensitivityLabel(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:ManagedDatabaseVulnerabilityAssessment":
		r, err = NewManagedDatabaseVulnerabilityAssessment(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:ManagedDatabaseVulnerabilityAssessmentRuleBaseline":
		r, err = NewManagedDatabaseVulnerabilityAssessmentRuleBaseline(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:ManagedInstance":
		r, err = NewManagedInstance(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:ManagedInstanceAdministrator":
		r, err = NewManagedInstanceAdministrator(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:ManagedInstanceAzureADOnlyAuthentication":
		r, err = NewManagedInstanceAzureADOnlyAuthentication(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:ManagedInstanceKey":
		r, err = NewManagedInstanceKey(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:ManagedInstancePrivateEndpointConnection":
		r, err = NewManagedInstancePrivateEndpointConnection(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:ManagedInstanceVulnerabilityAssessment":
		r, err = NewManagedInstanceVulnerabilityAssessment(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:PrivateEndpointConnection":
		r, err = NewPrivateEndpointConnection(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:SensitivityLabel":
		r, err = NewSensitivityLabel(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:Server":
		r, err = NewServer(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:ServerAzureADAdministrator":
		r, err = NewServerAzureADAdministrator(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:ServerAzureADOnlyAuthentication":
		r, err = NewServerAzureADOnlyAuthentication(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:ServerDnsAlias":
		r, err = NewServerDnsAlias(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:ServerKey":
		r, err = NewServerKey(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:ServerTrustGroup":
		r, err = NewServerTrustGroup(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:ServerVulnerabilityAssessment":
		r, err = NewServerVulnerabilityAssessment(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:SyncAgent":
		r, err = NewSyncAgent(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:SyncGroup":
		r, err = NewSyncGroup(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:SyncMember":
		r, err = NewSyncMember(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:TransparentDataEncryption":
		r, err = NewTransparentDataEncryption(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:VirtualNetworkRule":
		r, err = NewVirtualNetworkRule(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:WorkloadClassifier":
		r, err = NewWorkloadClassifier(ctx, name, nil, pulumi.URN_(urn))
	case "azure-nextgen:sql/v20200801preview:WorkloadGroup":
		r, err = NewWorkloadGroup(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := azure.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"azure-nextgen",
		"sql/v20200801preview",
		&module{version},
	)
}
