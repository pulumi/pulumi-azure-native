// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20150501preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An Azure SQL Database sync member.
func LookupSyncMember(ctx *pulumi.Context, args *LookupSyncMemberArgs, opts ...pulumi.InvokeOption) (*LookupSyncMemberResult, error) {
	var rv LookupSyncMemberResult
	err := ctx.Invoke("azure-native:sql/v20150501preview:getSyncMember", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSyncMemberArgs struct {
	// The name of the database on which the sync group is hosted.
	DatabaseName string `pulumi:"databaseName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName string `pulumi:"serverName"`
	// The name of the sync group on which the sync member is hosted.
	SyncGroupName string `pulumi:"syncGroupName"`
	// The name of the sync member.
	SyncMemberName string `pulumi:"syncMemberName"`
}

// An Azure SQL Database sync member.
type LookupSyncMemberResult struct {
	// Database name of the member database in the sync member.
	DatabaseName *string `pulumi:"databaseName"`
	// Database type of the sync member.
	DatabaseType *string `pulumi:"databaseType"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// Server name of the member database in the sync member
	ServerName *string `pulumi:"serverName"`
	// SQL Server database id of the sync member.
	SqlServerDatabaseId *string `pulumi:"sqlServerDatabaseId"`
	// ARM resource id of the sync agent in the sync member.
	SyncAgentId *string `pulumi:"syncAgentId"`
	// Sync direction of the sync member.
	SyncDirection *string `pulumi:"syncDirection"`
	// Sync state of the sync member.
	SyncState string `pulumi:"syncState"`
	// Resource type.
	Type string `pulumi:"type"`
	// User name of the member database in the sync member.
	UserName *string `pulumi:"userName"`
}

func LookupSyncMemberOutput(ctx *pulumi.Context, args LookupSyncMemberOutputArgs, opts ...pulumi.InvokeOption) LookupSyncMemberResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSyncMemberResult, error) {
			args := v.(LookupSyncMemberArgs)
			r, err := LookupSyncMember(ctx, &args, opts...)
			var s LookupSyncMemberResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSyncMemberResultOutput)
}

type LookupSyncMemberOutputArgs struct {
	// The name of the database on which the sync group is hosted.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName pulumi.StringInput `pulumi:"serverName"`
	// The name of the sync group on which the sync member is hosted.
	SyncGroupName pulumi.StringInput `pulumi:"syncGroupName"`
	// The name of the sync member.
	SyncMemberName pulumi.StringInput `pulumi:"syncMemberName"`
}

func (LookupSyncMemberOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSyncMemberArgs)(nil)).Elem()
}

// An Azure SQL Database sync member.
type LookupSyncMemberResultOutput struct{ *pulumi.OutputState }

func (LookupSyncMemberResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSyncMemberResult)(nil)).Elem()
}

func (o LookupSyncMemberResultOutput) ToLookupSyncMemberResultOutput() LookupSyncMemberResultOutput {
	return o
}

func (o LookupSyncMemberResultOutput) ToLookupSyncMemberResultOutputWithContext(ctx context.Context) LookupSyncMemberResultOutput {
	return o
}

// Database name of the member database in the sync member.
func (o LookupSyncMemberResultOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSyncMemberResult) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// Database type of the sync member.
func (o LookupSyncMemberResultOutput) DatabaseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSyncMemberResult) *string { return v.DatabaseType }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LookupSyncMemberResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSyncMemberResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupSyncMemberResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSyncMemberResult) string { return v.Name }).(pulumi.StringOutput)
}

// Server name of the member database in the sync member
func (o LookupSyncMemberResultOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSyncMemberResult) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// SQL Server database id of the sync member.
func (o LookupSyncMemberResultOutput) SqlServerDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSyncMemberResult) *string { return v.SqlServerDatabaseId }).(pulumi.StringPtrOutput)
}

// ARM resource id of the sync agent in the sync member.
func (o LookupSyncMemberResultOutput) SyncAgentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSyncMemberResult) *string { return v.SyncAgentId }).(pulumi.StringPtrOutput)
}

// Sync direction of the sync member.
func (o LookupSyncMemberResultOutput) SyncDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSyncMemberResult) *string { return v.SyncDirection }).(pulumi.StringPtrOutput)
}

// Sync state of the sync member.
func (o LookupSyncMemberResultOutput) SyncState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSyncMemberResult) string { return v.SyncState }).(pulumi.StringOutput)
}

// Resource type.
func (o LookupSyncMemberResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSyncMemberResult) string { return v.Type }).(pulumi.StringOutput)
}

// User name of the member database in the sync member.
func (o LookupSyncMemberResultOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSyncMemberResult) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSyncMemberResultOutput{})
}
