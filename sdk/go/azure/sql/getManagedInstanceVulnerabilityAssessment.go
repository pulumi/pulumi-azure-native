// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A managed instance vulnerability assessment.
// API Version: 2020-11-01-preview.
func LookupManagedInstanceVulnerabilityAssessment(ctx *pulumi.Context, args *LookupManagedInstanceVulnerabilityAssessmentArgs, opts ...pulumi.InvokeOption) (*LookupManagedInstanceVulnerabilityAssessmentResult, error) {
	var rv LookupManagedInstanceVulnerabilityAssessmentResult
	err := ctx.Invoke("azure-native:sql:getManagedInstanceVulnerabilityAssessment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupManagedInstanceVulnerabilityAssessmentArgs struct {
	// The name of the managed instance for which the vulnerability assessment is defined.
	ManagedInstanceName string `pulumi:"managedInstanceName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the vulnerability assessment.
	VulnerabilityAssessmentName string `pulumi:"vulnerabilityAssessmentName"`
}

// A managed instance vulnerability assessment.
type LookupManagedInstanceVulnerabilityAssessmentResult struct {
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// The recurring scans settings
	RecurringScans *VulnerabilityAssessmentRecurringScansPropertiesResponse `pulumi:"recurringScans"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupManagedInstanceVulnerabilityAssessmentResult
func (val *LookupManagedInstanceVulnerabilityAssessmentResult) Defaults() *LookupManagedInstanceVulnerabilityAssessmentResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.RecurringScans = tmp.RecurringScans.Defaults()

	return &tmp
}

func LookupManagedInstanceVulnerabilityAssessmentOutput(ctx *pulumi.Context, args LookupManagedInstanceVulnerabilityAssessmentOutputArgs, opts ...pulumi.InvokeOption) LookupManagedInstanceVulnerabilityAssessmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupManagedInstanceVulnerabilityAssessmentResult, error) {
			args := v.(LookupManagedInstanceVulnerabilityAssessmentArgs)
			r, err := LookupManagedInstanceVulnerabilityAssessment(ctx, &args, opts...)
			var s LookupManagedInstanceVulnerabilityAssessmentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupManagedInstanceVulnerabilityAssessmentResultOutput)
}

type LookupManagedInstanceVulnerabilityAssessmentOutputArgs struct {
	// The name of the managed instance for which the vulnerability assessment is defined.
	ManagedInstanceName pulumi.StringInput `pulumi:"managedInstanceName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the vulnerability assessment.
	VulnerabilityAssessmentName pulumi.StringInput `pulumi:"vulnerabilityAssessmentName"`
}

func (LookupManagedInstanceVulnerabilityAssessmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedInstanceVulnerabilityAssessmentArgs)(nil)).Elem()
}

// A managed instance vulnerability assessment.
type LookupManagedInstanceVulnerabilityAssessmentResultOutput struct{ *pulumi.OutputState }

func (LookupManagedInstanceVulnerabilityAssessmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedInstanceVulnerabilityAssessmentResult)(nil)).Elem()
}

func (o LookupManagedInstanceVulnerabilityAssessmentResultOutput) ToLookupManagedInstanceVulnerabilityAssessmentResultOutput() LookupManagedInstanceVulnerabilityAssessmentResultOutput {
	return o
}

func (o LookupManagedInstanceVulnerabilityAssessmentResultOutput) ToLookupManagedInstanceVulnerabilityAssessmentResultOutputWithContext(ctx context.Context) LookupManagedInstanceVulnerabilityAssessmentResultOutput {
	return o
}

// Resource ID.
func (o LookupManagedInstanceVulnerabilityAssessmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedInstanceVulnerabilityAssessmentResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupManagedInstanceVulnerabilityAssessmentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedInstanceVulnerabilityAssessmentResult) string { return v.Name }).(pulumi.StringOutput)
}

// The recurring scans settings
func (o LookupManagedInstanceVulnerabilityAssessmentResultOutput) RecurringScans() VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceVulnerabilityAssessmentResult) *VulnerabilityAssessmentRecurringScansPropertiesResponse {
		return v.RecurringScans
	}).(VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput)
}

// Resource type.
func (o LookupManagedInstanceVulnerabilityAssessmentResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedInstanceVulnerabilityAssessmentResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagedInstanceVulnerabilityAssessmentResultOutput{})
}
