// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200202preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Azure Active Directory only authentication.
type ManagedInstanceAzureADOnlyAuthentication struct {
	pulumi.CustomResourceState

	// Azure Active Directory only Authentication enabled.
	AzureADOnlyAuthentication pulumi.BoolOutput `pulumi:"azureADOnlyAuthentication"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewManagedInstanceAzureADOnlyAuthentication registers a new resource with the given unique name, arguments, and options.
func NewManagedInstanceAzureADOnlyAuthentication(ctx *pulumi.Context,
	name string, args *ManagedInstanceAzureADOnlyAuthenticationArgs, opts ...pulumi.ResourceOption) (*ManagedInstanceAzureADOnlyAuthentication, error) {
	if args == nil || args.AuthenticationName == nil {
		return nil, errors.New("missing required argument 'AuthenticationName'")
	}
	if args == nil || args.AzureADOnlyAuthentication == nil {
		return nil, errors.New("missing required argument 'AzureADOnlyAuthentication'")
	}
	if args == nil || args.ManagedInstanceName == nil {
		return nil, errors.New("missing required argument 'ManagedInstanceName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &ManagedInstanceAzureADOnlyAuthenticationArgs{}
	}
	var resource ManagedInstanceAzureADOnlyAuthentication
	err := ctx.RegisterResource("azure-nextgen:sql/v20200202preview:ManagedInstanceAzureADOnlyAuthentication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedInstanceAzureADOnlyAuthentication gets an existing ManagedInstanceAzureADOnlyAuthentication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedInstanceAzureADOnlyAuthentication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedInstanceAzureADOnlyAuthenticationState, opts ...pulumi.ResourceOption) (*ManagedInstanceAzureADOnlyAuthentication, error) {
	var resource ManagedInstanceAzureADOnlyAuthentication
	err := ctx.ReadResource("azure-nextgen:sql/v20200202preview:ManagedInstanceAzureADOnlyAuthentication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedInstanceAzureADOnlyAuthentication resources.
type managedInstanceAzureADOnlyAuthenticationState struct {
	// Azure Active Directory only Authentication enabled.
	AzureADOnlyAuthentication *bool `pulumi:"azureADOnlyAuthentication"`
	// Resource name.
	Name *string `pulumi:"name"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type ManagedInstanceAzureADOnlyAuthenticationState struct {
	// Azure Active Directory only Authentication enabled.
	AzureADOnlyAuthentication pulumi.BoolPtrInput
	// Resource name.
	Name pulumi.StringPtrInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (ManagedInstanceAzureADOnlyAuthenticationState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceAzureADOnlyAuthenticationState)(nil)).Elem()
}

type managedInstanceAzureADOnlyAuthenticationArgs struct {
	// The name of server azure active directory only authentication.
	AuthenticationName string `pulumi:"authenticationName"`
	// Azure Active Directory only Authentication enabled.
	AzureADOnlyAuthentication bool `pulumi:"azureADOnlyAuthentication"`
	// The name of the managed instance.
	ManagedInstanceName string `pulumi:"managedInstanceName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a ManagedInstanceAzureADOnlyAuthentication resource.
type ManagedInstanceAzureADOnlyAuthenticationArgs struct {
	// The name of server azure active directory only authentication.
	AuthenticationName pulumi.StringInput
	// Azure Active Directory only Authentication enabled.
	AzureADOnlyAuthentication pulumi.BoolInput
	// The name of the managed instance.
	ManagedInstanceName pulumi.StringInput
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput
}

func (ManagedInstanceAzureADOnlyAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceAzureADOnlyAuthenticationArgs)(nil)).Elem()
}
