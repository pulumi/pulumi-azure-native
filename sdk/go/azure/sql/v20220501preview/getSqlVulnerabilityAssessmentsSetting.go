


package v20220501preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSqlVulnerabilityAssessmentsSetting(ctx *pulumi.Context, args *LookupSqlVulnerabilityAssessmentsSettingArgs, opts ...pulumi.InvokeOption) (*LookupSqlVulnerabilityAssessmentsSettingResult, error) {
	var rv LookupSqlVulnerabilityAssessmentsSettingResult
	err := ctx.Invoke("azure-native:sql/v20220501preview:getSqlVulnerabilityAssessmentsSetting", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSqlVulnerabilityAssessmentsSettingArgs struct {
	ResourceGroupName           string `pulumi:"resourceGroupName"`
	ServerName                  string `pulumi:"serverName"`
	VulnerabilityAssessmentName string `pulumi:"vulnerabilityAssessmentName"`
}


type LookupSqlVulnerabilityAssessmentsSettingResult struct {
	Id         string             `pulumi:"id"`
	Name       string             `pulumi:"name"`
	State      *string            `pulumi:"state"`
	SystemData SystemDataResponse `pulumi:"systemData"`
	Type       string             `pulumi:"type"`
}

func LookupSqlVulnerabilityAssessmentsSettingOutput(ctx *pulumi.Context, args LookupSqlVulnerabilityAssessmentsSettingOutputArgs, opts ...pulumi.InvokeOption) LookupSqlVulnerabilityAssessmentsSettingResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSqlVulnerabilityAssessmentsSettingResult, error) {
			args := v.(LookupSqlVulnerabilityAssessmentsSettingArgs)
			r, err := LookupSqlVulnerabilityAssessmentsSetting(ctx, &args, opts...)
			var s LookupSqlVulnerabilityAssessmentsSettingResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSqlVulnerabilityAssessmentsSettingResultOutput)
}

type LookupSqlVulnerabilityAssessmentsSettingOutputArgs struct {
	ResourceGroupName           pulumi.StringInput `pulumi:"resourceGroupName"`
	ServerName                  pulumi.StringInput `pulumi:"serverName"`
	VulnerabilityAssessmentName pulumi.StringInput `pulumi:"vulnerabilityAssessmentName"`
}

func (LookupSqlVulnerabilityAssessmentsSettingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSqlVulnerabilityAssessmentsSettingArgs)(nil)).Elem()
}


type LookupSqlVulnerabilityAssessmentsSettingResultOutput struct{ *pulumi.OutputState }

func (LookupSqlVulnerabilityAssessmentsSettingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSqlVulnerabilityAssessmentsSettingResult)(nil)).Elem()
}

func (o LookupSqlVulnerabilityAssessmentsSettingResultOutput) ToLookupSqlVulnerabilityAssessmentsSettingResultOutput() LookupSqlVulnerabilityAssessmentsSettingResultOutput {
	return o
}

func (o LookupSqlVulnerabilityAssessmentsSettingResultOutput) ToLookupSqlVulnerabilityAssessmentsSettingResultOutputWithContext(ctx context.Context) LookupSqlVulnerabilityAssessmentsSettingResultOutput {
	return o
}

func (o LookupSqlVulnerabilityAssessmentsSettingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlVulnerabilityAssessmentsSettingResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSqlVulnerabilityAssessmentsSettingResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlVulnerabilityAssessmentsSettingResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSqlVulnerabilityAssessmentsSettingResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSqlVulnerabilityAssessmentsSettingResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o LookupSqlVulnerabilityAssessmentsSettingResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSqlVulnerabilityAssessmentsSettingResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

func (o LookupSqlVulnerabilityAssessmentsSettingResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlVulnerabilityAssessmentsSettingResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSqlVulnerabilityAssessmentsSettingResultOutput{})
}
