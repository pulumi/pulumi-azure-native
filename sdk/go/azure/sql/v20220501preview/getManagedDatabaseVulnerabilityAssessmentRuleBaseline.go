


package v20220501preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupManagedDatabaseVulnerabilityAssessmentRuleBaseline(ctx *pulumi.Context, args *LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs, opts ...pulumi.InvokeOption) (*LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResult, error) {
	var rv LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResult
	err := ctx.Invoke("azure-native:sql/v20220501preview:getManagedDatabaseVulnerabilityAssessmentRuleBaseline", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs struct {
	BaselineName                string `pulumi:"baselineName"`
	DatabaseName                string `pulumi:"databaseName"`
	ManagedInstanceName         string `pulumi:"managedInstanceName"`
	ResourceGroupName           string `pulumi:"resourceGroupName"`
	RuleId                      string `pulumi:"ruleId"`
	VulnerabilityAssessmentName string `pulumi:"vulnerabilityAssessmentName"`
}


type LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResult struct {
	BaselineResults []DatabaseVulnerabilityAssessmentRuleBaselineItemResponse `pulumi:"baselineResults"`
	Id              string                                                    `pulumi:"id"`
	Name            string                                                    `pulumi:"name"`
	Type            string                                                    `pulumi:"type"`
}

func LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput(ctx *pulumi.Context, args LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineOutputArgs, opts ...pulumi.InvokeOption) LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResult, error) {
			args := v.(LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs)
			r, err := LookupManagedDatabaseVulnerabilityAssessmentRuleBaseline(ctx, &args, opts...)
			var s LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResultOutput)
}

type LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineOutputArgs struct {
	BaselineName                pulumi.StringInput `pulumi:"baselineName"`
	DatabaseName                pulumi.StringInput `pulumi:"databaseName"`
	ManagedInstanceName         pulumi.StringInput `pulumi:"managedInstanceName"`
	ResourceGroupName           pulumi.StringInput `pulumi:"resourceGroupName"`
	RuleId                      pulumi.StringInput `pulumi:"ruleId"`
	VulnerabilityAssessmentName pulumi.StringInput `pulumi:"vulnerabilityAssessmentName"`
}

func (LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs)(nil)).Elem()
}


type LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResultOutput struct{ *pulumi.OutputState }

func (LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResult)(nil)).Elem()
}

func (o LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResultOutput) ToLookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResultOutput() LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResultOutput {
	return o
}

func (o LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResultOutput) ToLookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResultOutputWithContext(ctx context.Context) LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResultOutput {
	return o
}

func (o LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResultOutput) BaselineResults() DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput {
	return o.ApplyT(func(v LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResult) []DatabaseVulnerabilityAssessmentRuleBaselineItemResponse {
		return v.BaselineResults
	}).(DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput)
}

func (o LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagedDatabaseVulnerabilityAssessmentRuleBaselineResultOutput{})
}
