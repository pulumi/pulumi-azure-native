// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a disaster recovery configuration.
// API Version: 2014-04-01.
func LookupDisasterRecoveryConfiguration(ctx *pulumi.Context, args *LookupDisasterRecoveryConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupDisasterRecoveryConfigurationResult, error) {
	var rv LookupDisasterRecoveryConfigurationResult
	err := ctx.Invoke("azure-native:sql:getDisasterRecoveryConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDisasterRecoveryConfigurationArgs struct {
	// The name of the disaster recovery configuration.
	DisasterRecoveryConfigurationName string `pulumi:"disasterRecoveryConfigurationName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName string `pulumi:"serverName"`
}

// Represents a disaster recovery configuration.
type LookupDisasterRecoveryConfigurationResult struct {
	// Whether or not failover can be done automatically.
	AutoFailover string `pulumi:"autoFailover"`
	// How aggressive the automatic failover should be.
	FailoverPolicy string `pulumi:"failoverPolicy"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Location of the server that contains this disaster recovery configuration.
	Location string `pulumi:"location"`
	// Logical name of the server.
	LogicalServerName string `pulumi:"logicalServerName"`
	// Resource name.
	Name string `pulumi:"name"`
	// Logical name of the partner server.
	PartnerLogicalServerName string `pulumi:"partnerLogicalServerName"`
	// Id of the partner server.
	PartnerServerId string `pulumi:"partnerServerId"`
	// The role of the current server in the disaster recovery configuration.
	Role string `pulumi:"role"`
	// The status of the disaster recovery configuration.
	Status string `pulumi:"status"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupDisasterRecoveryConfigurationOutput(ctx *pulumi.Context, args LookupDisasterRecoveryConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupDisasterRecoveryConfigurationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDisasterRecoveryConfigurationResult, error) {
			args := v.(LookupDisasterRecoveryConfigurationArgs)
			r, err := LookupDisasterRecoveryConfiguration(ctx, &args, opts...)
			var s LookupDisasterRecoveryConfigurationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDisasterRecoveryConfigurationResultOutput)
}

type LookupDisasterRecoveryConfigurationOutputArgs struct {
	// The name of the disaster recovery configuration.
	DisasterRecoveryConfigurationName pulumi.StringInput `pulumi:"disasterRecoveryConfigurationName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName pulumi.StringInput `pulumi:"serverName"`
}

func (LookupDisasterRecoveryConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDisasterRecoveryConfigurationArgs)(nil)).Elem()
}

// Represents a disaster recovery configuration.
type LookupDisasterRecoveryConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupDisasterRecoveryConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDisasterRecoveryConfigurationResult)(nil)).Elem()
}

func (o LookupDisasterRecoveryConfigurationResultOutput) ToLookupDisasterRecoveryConfigurationResultOutput() LookupDisasterRecoveryConfigurationResultOutput {
	return o
}

func (o LookupDisasterRecoveryConfigurationResultOutput) ToLookupDisasterRecoveryConfigurationResultOutputWithContext(ctx context.Context) LookupDisasterRecoveryConfigurationResultOutput {
	return o
}

// Whether or not failover can be done automatically.
func (o LookupDisasterRecoveryConfigurationResultOutput) AutoFailover() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigurationResult) string { return v.AutoFailover }).(pulumi.StringOutput)
}

// How aggressive the automatic failover should be.
func (o LookupDisasterRecoveryConfigurationResultOutput) FailoverPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigurationResult) string { return v.FailoverPolicy }).(pulumi.StringOutput)
}

// Resource ID.
func (o LookupDisasterRecoveryConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Location of the server that contains this disaster recovery configuration.
func (o LookupDisasterRecoveryConfigurationResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigurationResult) string { return v.Location }).(pulumi.StringOutput)
}

// Logical name of the server.
func (o LookupDisasterRecoveryConfigurationResultOutput) LogicalServerName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigurationResult) string { return v.LogicalServerName }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupDisasterRecoveryConfigurationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigurationResult) string { return v.Name }).(pulumi.StringOutput)
}

// Logical name of the partner server.
func (o LookupDisasterRecoveryConfigurationResultOutput) PartnerLogicalServerName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigurationResult) string { return v.PartnerLogicalServerName }).(pulumi.StringOutput)
}

// Id of the partner server.
func (o LookupDisasterRecoveryConfigurationResultOutput) PartnerServerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigurationResult) string { return v.PartnerServerId }).(pulumi.StringOutput)
}

// The role of the current server in the disaster recovery configuration.
func (o LookupDisasterRecoveryConfigurationResultOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigurationResult) string { return v.Role }).(pulumi.StringOutput)
}

// The status of the disaster recovery configuration.
func (o LookupDisasterRecoveryConfigurationResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigurationResult) string { return v.Status }).(pulumi.StringOutput)
}

// Resource type.
func (o LookupDisasterRecoveryConfigurationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigurationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDisasterRecoveryConfigurationResultOutput{})
}
