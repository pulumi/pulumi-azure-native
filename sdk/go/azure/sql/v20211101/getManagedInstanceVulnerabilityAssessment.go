


package v20211101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupManagedInstanceVulnerabilityAssessment(ctx *pulumi.Context, args *LookupManagedInstanceVulnerabilityAssessmentArgs, opts ...pulumi.InvokeOption) (*LookupManagedInstanceVulnerabilityAssessmentResult, error) {
	var rv LookupManagedInstanceVulnerabilityAssessmentResult
	err := ctx.Invoke("azure-native:sql/v20211101:getManagedInstanceVulnerabilityAssessment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupManagedInstanceVulnerabilityAssessmentArgs struct {
	ManagedInstanceName         string `pulumi:"managedInstanceName"`
	ResourceGroupName           string `pulumi:"resourceGroupName"`
	VulnerabilityAssessmentName string `pulumi:"vulnerabilityAssessmentName"`
}


type LookupManagedInstanceVulnerabilityAssessmentResult struct {
	Id             string                                                   `pulumi:"id"`
	Name           string                                                   `pulumi:"name"`
	RecurringScans *VulnerabilityAssessmentRecurringScansPropertiesResponse `pulumi:"recurringScans"`
	Type           string                                                   `pulumi:"type"`
}


func (val *LookupManagedInstanceVulnerabilityAssessmentResult) Defaults() *LookupManagedInstanceVulnerabilityAssessmentResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.RecurringScans = tmp.RecurringScans.Defaults()

	return &tmp
}

func LookupManagedInstanceVulnerabilityAssessmentOutput(ctx *pulumi.Context, args LookupManagedInstanceVulnerabilityAssessmentOutputArgs, opts ...pulumi.InvokeOption) LookupManagedInstanceVulnerabilityAssessmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupManagedInstanceVulnerabilityAssessmentResult, error) {
			args := v.(LookupManagedInstanceVulnerabilityAssessmentArgs)
			r, err := LookupManagedInstanceVulnerabilityAssessment(ctx, &args, opts...)
			var s LookupManagedInstanceVulnerabilityAssessmentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupManagedInstanceVulnerabilityAssessmentResultOutput)
}

type LookupManagedInstanceVulnerabilityAssessmentOutputArgs struct {
	ManagedInstanceName         pulumi.StringInput `pulumi:"managedInstanceName"`
	ResourceGroupName           pulumi.StringInput `pulumi:"resourceGroupName"`
	VulnerabilityAssessmentName pulumi.StringInput `pulumi:"vulnerabilityAssessmentName"`
}

func (LookupManagedInstanceVulnerabilityAssessmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedInstanceVulnerabilityAssessmentArgs)(nil)).Elem()
}


type LookupManagedInstanceVulnerabilityAssessmentResultOutput struct{ *pulumi.OutputState }

func (LookupManagedInstanceVulnerabilityAssessmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedInstanceVulnerabilityAssessmentResult)(nil)).Elem()
}

func (o LookupManagedInstanceVulnerabilityAssessmentResultOutput) ToLookupManagedInstanceVulnerabilityAssessmentResultOutput() LookupManagedInstanceVulnerabilityAssessmentResultOutput {
	return o
}

func (o LookupManagedInstanceVulnerabilityAssessmentResultOutput) ToLookupManagedInstanceVulnerabilityAssessmentResultOutputWithContext(ctx context.Context) LookupManagedInstanceVulnerabilityAssessmentResultOutput {
	return o
}

func (o LookupManagedInstanceVulnerabilityAssessmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedInstanceVulnerabilityAssessmentResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupManagedInstanceVulnerabilityAssessmentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedInstanceVulnerabilityAssessmentResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupManagedInstanceVulnerabilityAssessmentResultOutput) RecurringScans() VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupManagedInstanceVulnerabilityAssessmentResult) *VulnerabilityAssessmentRecurringScansPropertiesResponse {
		return v.RecurringScans
	}).(VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput)
}

func (o LookupManagedInstanceVulnerabilityAssessmentResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedInstanceVulnerabilityAssessmentResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagedInstanceVulnerabilityAssessmentResultOutput{})
}
