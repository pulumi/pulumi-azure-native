// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20171001preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A database vulnerability assessment rule baseline.
type ManagedDatabaseVulnerabilityAssessmentRuleBaseline struct {
	pulumi.CustomResourceState

	// The rule baseline result
	BaselineResults DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput `pulumi:"baselineResults"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewManagedDatabaseVulnerabilityAssessmentRuleBaseline registers a new resource with the given unique name, arguments, and options.
func NewManagedDatabaseVulnerabilityAssessmentRuleBaseline(ctx *pulumi.Context,
	name string, args *ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs, opts ...pulumi.ResourceOption) (*ManagedDatabaseVulnerabilityAssessmentRuleBaseline, error) {
	if args == nil || args.BaselineName == nil {
		return nil, errors.New("missing required argument 'BaselineName'")
	}
	if args == nil || args.BaselineResults == nil {
		return nil, errors.New("missing required argument 'BaselineResults'")
	}
	if args == nil || args.DatabaseName == nil {
		return nil, errors.New("missing required argument 'DatabaseName'")
	}
	if args == nil || args.ManagedInstanceName == nil {
		return nil, errors.New("missing required argument 'ManagedInstanceName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.RuleId == nil {
		return nil, errors.New("missing required argument 'RuleId'")
	}
	if args == nil || args.VulnerabilityAssessmentName == nil {
		return nil, errors.New("missing required argument 'VulnerabilityAssessmentName'")
	}
	if args == nil {
		args = &ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs{}
	}
	var resource ManagedDatabaseVulnerabilityAssessmentRuleBaseline
	err := ctx.RegisterResource("azure-nextgen:sql/v20171001preview:ManagedDatabaseVulnerabilityAssessmentRuleBaseline", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedDatabaseVulnerabilityAssessmentRuleBaseline gets an existing ManagedDatabaseVulnerabilityAssessmentRuleBaseline resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedDatabaseVulnerabilityAssessmentRuleBaseline(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedDatabaseVulnerabilityAssessmentRuleBaselineState, opts ...pulumi.ResourceOption) (*ManagedDatabaseVulnerabilityAssessmentRuleBaseline, error) {
	var resource ManagedDatabaseVulnerabilityAssessmentRuleBaseline
	err := ctx.ReadResource("azure-nextgen:sql/v20171001preview:ManagedDatabaseVulnerabilityAssessmentRuleBaseline", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedDatabaseVulnerabilityAssessmentRuleBaseline resources.
type managedDatabaseVulnerabilityAssessmentRuleBaselineState struct {
	// The rule baseline result
	BaselineResults []DatabaseVulnerabilityAssessmentRuleBaselineItemResponse `pulumi:"baselineResults"`
	// Resource name.
	Name *string `pulumi:"name"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type ManagedDatabaseVulnerabilityAssessmentRuleBaselineState struct {
	// The rule baseline result
	BaselineResults DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayInput
	// Resource name.
	Name pulumi.StringPtrInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (ManagedDatabaseVulnerabilityAssessmentRuleBaselineState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedDatabaseVulnerabilityAssessmentRuleBaselineState)(nil)).Elem()
}

type managedDatabaseVulnerabilityAssessmentRuleBaselineArgs struct {
	// The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
	BaselineName string `pulumi:"baselineName"`
	// The rule baseline result
	BaselineResults []DatabaseVulnerabilityAssessmentRuleBaselineItem `pulumi:"baselineResults"`
	// The name of the database for which the vulnerability assessment rule baseline is defined.
	DatabaseName string `pulumi:"databaseName"`
	// The name of the managed instance.
	ManagedInstanceName string `pulumi:"managedInstanceName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The vulnerability assessment rule ID.
	RuleId string `pulumi:"ruleId"`
	// The name of the vulnerability assessment.
	VulnerabilityAssessmentName string `pulumi:"vulnerabilityAssessmentName"`
}

// The set of arguments for constructing a ManagedDatabaseVulnerabilityAssessmentRuleBaseline resource.
type ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs struct {
	// The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
	BaselineName pulumi.StringInput
	// The rule baseline result
	BaselineResults DatabaseVulnerabilityAssessmentRuleBaselineItemArrayInput
	// The name of the database for which the vulnerability assessment rule baseline is defined.
	DatabaseName pulumi.StringInput
	// The name of the managed instance.
	ManagedInstanceName pulumi.StringInput
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput
	// The vulnerability assessment rule ID.
	RuleId pulumi.StringInput
	// The name of the vulnerability assessment.
	VulnerabilityAssessmentName pulumi.StringInput
}

func (ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedDatabaseVulnerabilityAssessmentRuleBaselineArgs)(nil)).Elem()
}
