// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170301preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An Azure SQL managed instance administrator.
type ManagedInstanceAdministrator struct {
	pulumi.CustomResourceState

	// Type of the managed instance administrator.
	AdministratorType pulumi.StringOutput `pulumi:"administratorType"`
	// Login name of the managed instance administrator.
	Login pulumi.StringOutput `pulumi:"login"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// SID (object ID) of the managed instance administrator.
	Sid pulumi.StringOutput `pulumi:"sid"`
	// Tenant ID of the managed instance administrator.
	TenantId pulumi.StringPtrOutput `pulumi:"tenantId"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewManagedInstanceAdministrator registers a new resource with the given unique name, arguments, and options.
func NewManagedInstanceAdministrator(ctx *pulumi.Context,
	name string, args *ManagedInstanceAdministratorArgs, opts ...pulumi.ResourceOption) (*ManagedInstanceAdministrator, error) {
	if args == nil || args.AdministratorName == nil {
		return nil, errors.New("missing required argument 'AdministratorName'")
	}
	if args == nil || args.AdministratorType == nil {
		return nil, errors.New("missing required argument 'AdministratorType'")
	}
	if args == nil || args.Login == nil {
		return nil, errors.New("missing required argument 'Login'")
	}
	if args == nil || args.ManagedInstanceName == nil {
		return nil, errors.New("missing required argument 'ManagedInstanceName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.Sid == nil {
		return nil, errors.New("missing required argument 'Sid'")
	}
	if args == nil {
		args = &ManagedInstanceAdministratorArgs{}
	}
	var resource ManagedInstanceAdministrator
	err := ctx.RegisterResource("azure-nextgen:sql/v20170301preview:ManagedInstanceAdministrator", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedInstanceAdministrator gets an existing ManagedInstanceAdministrator resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedInstanceAdministrator(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedInstanceAdministratorState, opts ...pulumi.ResourceOption) (*ManagedInstanceAdministrator, error) {
	var resource ManagedInstanceAdministrator
	err := ctx.ReadResource("azure-nextgen:sql/v20170301preview:ManagedInstanceAdministrator", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedInstanceAdministrator resources.
type managedInstanceAdministratorState struct {
	// Type of the managed instance administrator.
	AdministratorType *string `pulumi:"administratorType"`
	// Login name of the managed instance administrator.
	Login *string `pulumi:"login"`
	// Resource name.
	Name *string `pulumi:"name"`
	// SID (object ID) of the managed instance administrator.
	Sid *string `pulumi:"sid"`
	// Tenant ID of the managed instance administrator.
	TenantId *string `pulumi:"tenantId"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type ManagedInstanceAdministratorState struct {
	// Type of the managed instance administrator.
	AdministratorType pulumi.StringPtrInput
	// Login name of the managed instance administrator.
	Login pulumi.StringPtrInput
	// Resource name.
	Name pulumi.StringPtrInput
	// SID (object ID) of the managed instance administrator.
	Sid pulumi.StringPtrInput
	// Tenant ID of the managed instance administrator.
	TenantId pulumi.StringPtrInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (ManagedInstanceAdministratorState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceAdministratorState)(nil)).Elem()
}

type managedInstanceAdministratorArgs struct {
	// The requested administrator name.
	AdministratorName string `pulumi:"administratorName"`
	// Type of the managed instance administrator.
	AdministratorType string `pulumi:"administratorType"`
	// Login name of the managed instance administrator.
	Login string `pulumi:"login"`
	// The name of the managed instance.
	ManagedInstanceName string `pulumi:"managedInstanceName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// SID (object ID) of the managed instance administrator.
	Sid string `pulumi:"sid"`
	// Tenant ID of the managed instance administrator.
	TenantId *string `pulumi:"tenantId"`
}

// The set of arguments for constructing a ManagedInstanceAdministrator resource.
type ManagedInstanceAdministratorArgs struct {
	// The requested administrator name.
	AdministratorName pulumi.StringInput
	// Type of the managed instance administrator.
	AdministratorType pulumi.StringInput
	// Login name of the managed instance administrator.
	Login pulumi.StringInput
	// The name of the managed instance.
	ManagedInstanceName pulumi.StringInput
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput
	// SID (object ID) of the managed instance administrator.
	Sid pulumi.StringInput
	// Tenant ID of the managed instance administrator.
	TenantId pulumi.StringPtrInput
}

func (ManagedInstanceAdministratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceAdministratorArgs)(nil)).Elem()
}
