// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170301preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result.
type DatabaseVulnerabilityAssessmentRuleBaselineItem struct {
	// The rule baseline result
	Result []string `pulumi:"result"`
}

// DatabaseVulnerabilityAssessmentRuleBaselineItemInput is an input type that accepts DatabaseVulnerabilityAssessmentRuleBaselineItemArgs and DatabaseVulnerabilityAssessmentRuleBaselineItemOutput values.
// You can construct a concrete instance of `DatabaseVulnerabilityAssessmentRuleBaselineItemInput` via:
//
//          DatabaseVulnerabilityAssessmentRuleBaselineItemArgs{...}
type DatabaseVulnerabilityAssessmentRuleBaselineItemInput interface {
	pulumi.Input

	ToDatabaseVulnerabilityAssessmentRuleBaselineItemOutput() DatabaseVulnerabilityAssessmentRuleBaselineItemOutput
	ToDatabaseVulnerabilityAssessmentRuleBaselineItemOutputWithContext(context.Context) DatabaseVulnerabilityAssessmentRuleBaselineItemOutput
}

// Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result.
type DatabaseVulnerabilityAssessmentRuleBaselineItemArgs struct {
	// The rule baseline result
	Result pulumi.StringArrayInput `pulumi:"result"`
}

func (DatabaseVulnerabilityAssessmentRuleBaselineItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseVulnerabilityAssessmentRuleBaselineItem)(nil)).Elem()
}

func (i DatabaseVulnerabilityAssessmentRuleBaselineItemArgs) ToDatabaseVulnerabilityAssessmentRuleBaselineItemOutput() DatabaseVulnerabilityAssessmentRuleBaselineItemOutput {
	return i.ToDatabaseVulnerabilityAssessmentRuleBaselineItemOutputWithContext(context.Background())
}

func (i DatabaseVulnerabilityAssessmentRuleBaselineItemArgs) ToDatabaseVulnerabilityAssessmentRuleBaselineItemOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseVulnerabilityAssessmentRuleBaselineItemOutput)
}

// DatabaseVulnerabilityAssessmentRuleBaselineItemArrayInput is an input type that accepts DatabaseVulnerabilityAssessmentRuleBaselineItemArray and DatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutput values.
// You can construct a concrete instance of `DatabaseVulnerabilityAssessmentRuleBaselineItemArrayInput` via:
//
//          DatabaseVulnerabilityAssessmentRuleBaselineItemArray{ DatabaseVulnerabilityAssessmentRuleBaselineItemArgs{...} }
type DatabaseVulnerabilityAssessmentRuleBaselineItemArrayInput interface {
	pulumi.Input

	ToDatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutput() DatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutput
	ToDatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutputWithContext(context.Context) DatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutput
}

type DatabaseVulnerabilityAssessmentRuleBaselineItemArray []DatabaseVulnerabilityAssessmentRuleBaselineItemInput

func (DatabaseVulnerabilityAssessmentRuleBaselineItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseVulnerabilityAssessmentRuleBaselineItem)(nil)).Elem()
}

func (i DatabaseVulnerabilityAssessmentRuleBaselineItemArray) ToDatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutput() DatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutput {
	return i.ToDatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutputWithContext(context.Background())
}

func (i DatabaseVulnerabilityAssessmentRuleBaselineItemArray) ToDatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutput)
}

// Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result.
type DatabaseVulnerabilityAssessmentRuleBaselineItemOutput struct{ *pulumi.OutputState }

func (DatabaseVulnerabilityAssessmentRuleBaselineItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseVulnerabilityAssessmentRuleBaselineItem)(nil)).Elem()
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineItemOutput) ToDatabaseVulnerabilityAssessmentRuleBaselineItemOutput() DatabaseVulnerabilityAssessmentRuleBaselineItemOutput {
	return o
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineItemOutput) ToDatabaseVulnerabilityAssessmentRuleBaselineItemOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineItemOutput {
	return o
}

// The rule baseline result
func (o DatabaseVulnerabilityAssessmentRuleBaselineItemOutput) Result() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseVulnerabilityAssessmentRuleBaselineItem) []string { return v.Result }).(pulumi.StringArrayOutput)
}

type DatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutput struct{ *pulumi.OutputState }

func (DatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseVulnerabilityAssessmentRuleBaselineItem)(nil)).Elem()
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutput) ToDatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutput() DatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutput {
	return o
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutput) ToDatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutput {
	return o
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutput) Index(i pulumi.IntInput) DatabaseVulnerabilityAssessmentRuleBaselineItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseVulnerabilityAssessmentRuleBaselineItem {
		return vs[0].([]DatabaseVulnerabilityAssessmentRuleBaselineItem)[vs[1].(int)]
	}).(DatabaseVulnerabilityAssessmentRuleBaselineItemOutput)
}

// Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result.
type DatabaseVulnerabilityAssessmentRuleBaselineItemResponse struct {
	// The rule baseline result
	Result []string `pulumi:"result"`
}

// DatabaseVulnerabilityAssessmentRuleBaselineItemResponseInput is an input type that accepts DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArgs and DatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput values.
// You can construct a concrete instance of `DatabaseVulnerabilityAssessmentRuleBaselineItemResponseInput` via:
//
//          DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArgs{...}
type DatabaseVulnerabilityAssessmentRuleBaselineItemResponseInput interface {
	pulumi.Input

	ToDatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput() DatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput
	ToDatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutputWithContext(context.Context) DatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput
}

// Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result.
type DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArgs struct {
	// The rule baseline result
	Result pulumi.StringArrayInput `pulumi:"result"`
}

func (DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseVulnerabilityAssessmentRuleBaselineItemResponse)(nil)).Elem()
}

func (i DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArgs) ToDatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput() DatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput {
	return i.ToDatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutputWithContext(context.Background())
}

func (i DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArgs) ToDatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput)
}

// DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayInput is an input type that accepts DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArray and DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput values.
// You can construct a concrete instance of `DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayInput` via:
//
//          DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArray{ DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArgs{...} }
type DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayInput interface {
	pulumi.Input

	ToDatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput() DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput
	ToDatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutputWithContext(context.Context) DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput
}

type DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArray []DatabaseVulnerabilityAssessmentRuleBaselineItemResponseInput

func (DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseVulnerabilityAssessmentRuleBaselineItemResponse)(nil)).Elem()
}

func (i DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArray) ToDatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput() DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput {
	return i.ToDatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutputWithContext(context.Background())
}

func (i DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArray) ToDatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput)
}

// Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result.
type DatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput struct{ *pulumi.OutputState }

func (DatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseVulnerabilityAssessmentRuleBaselineItemResponse)(nil)).Elem()
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput) ToDatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput() DatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput {
	return o
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput) ToDatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput {
	return o
}

// The rule baseline result
func (o DatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput) Result() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseVulnerabilityAssessmentRuleBaselineItemResponse) []string { return v.Result }).(pulumi.StringArrayOutput)
}

type DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseVulnerabilityAssessmentRuleBaselineItemResponse)(nil)).Elem()
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput) ToDatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput() DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput {
	return o
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput) ToDatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput {
	return o
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput) Index(i pulumi.IntInput) DatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseVulnerabilityAssessmentRuleBaselineItemResponse {
		return vs[0].([]DatabaseVulnerabilityAssessmentRuleBaselineItemResponse)[vs[1].(int)]
	}).(DatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput)
}

// Scheduling properties of a job.
type JobSchedule struct {
	// Whether or not the schedule is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Schedule end time.
	EndTime *string `pulumi:"endTime"`
	// Value of the schedule's recurring interval, if the schedule type is recurring. ISO8601 duration format.
	Interval *string `pulumi:"interval"`
	// Schedule start time.
	StartTime *string `pulumi:"startTime"`
	// Schedule interval type
	Type *string `pulumi:"type"`
}

// JobScheduleInput is an input type that accepts JobScheduleArgs and JobScheduleOutput values.
// You can construct a concrete instance of `JobScheduleInput` via:
//
//          JobScheduleArgs{...}
type JobScheduleInput interface {
	pulumi.Input

	ToJobScheduleOutput() JobScheduleOutput
	ToJobScheduleOutputWithContext(context.Context) JobScheduleOutput
}

// Scheduling properties of a job.
type JobScheduleArgs struct {
	// Whether or not the schedule is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Schedule end time.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Value of the schedule's recurring interval, if the schedule type is recurring. ISO8601 duration format.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Schedule start time.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// Schedule interval type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (JobScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSchedule)(nil)).Elem()
}

func (i JobScheduleArgs) ToJobScheduleOutput() JobScheduleOutput {
	return i.ToJobScheduleOutputWithContext(context.Background())
}

func (i JobScheduleArgs) ToJobScheduleOutputWithContext(ctx context.Context) JobScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleOutput)
}

func (i JobScheduleArgs) ToJobSchedulePtrOutput() JobSchedulePtrOutput {
	return i.ToJobSchedulePtrOutputWithContext(context.Background())
}

func (i JobScheduleArgs) ToJobSchedulePtrOutputWithContext(ctx context.Context) JobSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleOutput).ToJobSchedulePtrOutputWithContext(ctx)
}

// JobSchedulePtrInput is an input type that accepts JobScheduleArgs, JobSchedulePtr and JobSchedulePtrOutput values.
// You can construct a concrete instance of `JobSchedulePtrInput` via:
//
//          JobScheduleArgs{...}
//
//  or:
//
//          nil
type JobSchedulePtrInput interface {
	pulumi.Input

	ToJobSchedulePtrOutput() JobSchedulePtrOutput
	ToJobSchedulePtrOutputWithContext(context.Context) JobSchedulePtrOutput
}

type jobSchedulePtrType JobScheduleArgs

func JobSchedulePtr(v *JobScheduleArgs) JobSchedulePtrInput {
	return (*jobSchedulePtrType)(v)
}

func (*jobSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSchedule)(nil)).Elem()
}

func (i *jobSchedulePtrType) ToJobSchedulePtrOutput() JobSchedulePtrOutput {
	return i.ToJobSchedulePtrOutputWithContext(context.Background())
}

func (i *jobSchedulePtrType) ToJobSchedulePtrOutputWithContext(ctx context.Context) JobSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSchedulePtrOutput)
}

// Scheduling properties of a job.
type JobScheduleOutput struct{ *pulumi.OutputState }

func (JobScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSchedule)(nil)).Elem()
}

func (o JobScheduleOutput) ToJobScheduleOutput() JobScheduleOutput {
	return o
}

func (o JobScheduleOutput) ToJobScheduleOutputWithContext(ctx context.Context) JobScheduleOutput {
	return o
}

func (o JobScheduleOutput) ToJobSchedulePtrOutput() JobSchedulePtrOutput {
	return o.ToJobSchedulePtrOutputWithContext(context.Background())
}

func (o JobScheduleOutput) ToJobSchedulePtrOutputWithContext(ctx context.Context) JobSchedulePtrOutput {
	return o.ApplyT(func(v JobSchedule) *JobSchedule {
		return &v
	}).(JobSchedulePtrOutput)
}

// Whether or not the schedule is enabled.
func (o JobScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobSchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Schedule end time.
func (o JobScheduleOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSchedule) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Value of the schedule's recurring interval, if the schedule type is recurring. ISO8601 duration format.
func (o JobScheduleOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSchedule) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Schedule start time.
func (o JobScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Schedule interval type
func (o JobScheduleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSchedule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type JobSchedulePtrOutput struct{ *pulumi.OutputState }

func (JobSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSchedule)(nil)).Elem()
}

func (o JobSchedulePtrOutput) ToJobSchedulePtrOutput() JobSchedulePtrOutput {
	return o
}

func (o JobSchedulePtrOutput) ToJobSchedulePtrOutputWithContext(ctx context.Context) JobSchedulePtrOutput {
	return o
}

func (o JobSchedulePtrOutput) Elem() JobScheduleOutput {
	return o.ApplyT(func(v *JobSchedule) JobSchedule { return *v }).(JobScheduleOutput)
}

// Whether or not the schedule is enabled.
func (o JobSchedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JobSchedule) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Schedule end time.
func (o JobSchedulePtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSchedule) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// Value of the schedule's recurring interval, if the schedule type is recurring. ISO8601 duration format.
func (o JobSchedulePtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSchedule) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Schedule start time.
func (o JobSchedulePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSchedule) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Schedule interval type
func (o JobSchedulePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSchedule) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Scheduling properties of a job.
type JobScheduleResponse struct {
	// Whether or not the schedule is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Schedule end time.
	EndTime *string `pulumi:"endTime"`
	// Value of the schedule's recurring interval, if the schedule type is recurring. ISO8601 duration format.
	Interval *string `pulumi:"interval"`
	// Schedule start time.
	StartTime *string `pulumi:"startTime"`
	// Schedule interval type
	Type *string `pulumi:"type"`
}

// JobScheduleResponseInput is an input type that accepts JobScheduleResponseArgs and JobScheduleResponseOutput values.
// You can construct a concrete instance of `JobScheduleResponseInput` via:
//
//          JobScheduleResponseArgs{...}
type JobScheduleResponseInput interface {
	pulumi.Input

	ToJobScheduleResponseOutput() JobScheduleResponseOutput
	ToJobScheduleResponseOutputWithContext(context.Context) JobScheduleResponseOutput
}

// Scheduling properties of a job.
type JobScheduleResponseArgs struct {
	// Whether or not the schedule is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Schedule end time.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Value of the schedule's recurring interval, if the schedule type is recurring. ISO8601 duration format.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Schedule start time.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// Schedule interval type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (JobScheduleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobScheduleResponse)(nil)).Elem()
}

func (i JobScheduleResponseArgs) ToJobScheduleResponseOutput() JobScheduleResponseOutput {
	return i.ToJobScheduleResponseOutputWithContext(context.Background())
}

func (i JobScheduleResponseArgs) ToJobScheduleResponseOutputWithContext(ctx context.Context) JobScheduleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleResponseOutput)
}

func (i JobScheduleResponseArgs) ToJobScheduleResponsePtrOutput() JobScheduleResponsePtrOutput {
	return i.ToJobScheduleResponsePtrOutputWithContext(context.Background())
}

func (i JobScheduleResponseArgs) ToJobScheduleResponsePtrOutputWithContext(ctx context.Context) JobScheduleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleResponseOutput).ToJobScheduleResponsePtrOutputWithContext(ctx)
}

// JobScheduleResponsePtrInput is an input type that accepts JobScheduleResponseArgs, JobScheduleResponsePtr and JobScheduleResponsePtrOutput values.
// You can construct a concrete instance of `JobScheduleResponsePtrInput` via:
//
//          JobScheduleResponseArgs{...}
//
//  or:
//
//          nil
type JobScheduleResponsePtrInput interface {
	pulumi.Input

	ToJobScheduleResponsePtrOutput() JobScheduleResponsePtrOutput
	ToJobScheduleResponsePtrOutputWithContext(context.Context) JobScheduleResponsePtrOutput
}

type jobScheduleResponsePtrType JobScheduleResponseArgs

func JobScheduleResponsePtr(v *JobScheduleResponseArgs) JobScheduleResponsePtrInput {
	return (*jobScheduleResponsePtrType)(v)
}

func (*jobScheduleResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobScheduleResponse)(nil)).Elem()
}

func (i *jobScheduleResponsePtrType) ToJobScheduleResponsePtrOutput() JobScheduleResponsePtrOutput {
	return i.ToJobScheduleResponsePtrOutputWithContext(context.Background())
}

func (i *jobScheduleResponsePtrType) ToJobScheduleResponsePtrOutputWithContext(ctx context.Context) JobScheduleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleResponsePtrOutput)
}

// Scheduling properties of a job.
type JobScheduleResponseOutput struct{ *pulumi.OutputState }

func (JobScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobScheduleResponse)(nil)).Elem()
}

func (o JobScheduleResponseOutput) ToJobScheduleResponseOutput() JobScheduleResponseOutput {
	return o
}

func (o JobScheduleResponseOutput) ToJobScheduleResponseOutputWithContext(ctx context.Context) JobScheduleResponseOutput {
	return o
}

func (o JobScheduleResponseOutput) ToJobScheduleResponsePtrOutput() JobScheduleResponsePtrOutput {
	return o.ToJobScheduleResponsePtrOutputWithContext(context.Background())
}

func (o JobScheduleResponseOutput) ToJobScheduleResponsePtrOutputWithContext(ctx context.Context) JobScheduleResponsePtrOutput {
	return o.ApplyT(func(v JobScheduleResponse) *JobScheduleResponse {
		return &v
	}).(JobScheduleResponsePtrOutput)
}

// Whether or not the schedule is enabled.
func (o JobScheduleResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobScheduleResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Schedule end time.
func (o JobScheduleResponseOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobScheduleResponse) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Value of the schedule's recurring interval, if the schedule type is recurring. ISO8601 duration format.
func (o JobScheduleResponseOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobScheduleResponse) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Schedule start time.
func (o JobScheduleResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobScheduleResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Schedule interval type
func (o JobScheduleResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobScheduleResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type JobScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (JobScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobScheduleResponse)(nil)).Elem()
}

func (o JobScheduleResponsePtrOutput) ToJobScheduleResponsePtrOutput() JobScheduleResponsePtrOutput {
	return o
}

func (o JobScheduleResponsePtrOutput) ToJobScheduleResponsePtrOutputWithContext(ctx context.Context) JobScheduleResponsePtrOutput {
	return o
}

func (o JobScheduleResponsePtrOutput) Elem() JobScheduleResponseOutput {
	return o.ApplyT(func(v *JobScheduleResponse) JobScheduleResponse { return *v }).(JobScheduleResponseOutput)
}

// Whether or not the schedule is enabled.
func (o JobScheduleResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JobScheduleResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Schedule end time.
func (o JobScheduleResponsePtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// Value of the schedule's recurring interval, if the schedule type is recurring. ISO8601 duration format.
func (o JobScheduleResponsePtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

// Schedule start time.
func (o JobScheduleResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Schedule interval type
func (o JobScheduleResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The action to be executed by a job step.
type JobStepAction struct {
	// The source of the action to execute.
	Source *string `pulumi:"source"`
	// Type of action being executed by the job step.
	Type *string `pulumi:"type"`
	// The action value, for example the text of the T-SQL script to execute.
	Value string `pulumi:"value"`
}

// JobStepActionInput is an input type that accepts JobStepActionArgs and JobStepActionOutput values.
// You can construct a concrete instance of `JobStepActionInput` via:
//
//          JobStepActionArgs{...}
type JobStepActionInput interface {
	pulumi.Input

	ToJobStepActionOutput() JobStepActionOutput
	ToJobStepActionOutputWithContext(context.Context) JobStepActionOutput
}

// The action to be executed by a job step.
type JobStepActionArgs struct {
	// The source of the action to execute.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// Type of action being executed by the job step.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The action value, for example the text of the T-SQL script to execute.
	Value pulumi.StringInput `pulumi:"value"`
}

func (JobStepActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStepAction)(nil)).Elem()
}

func (i JobStepActionArgs) ToJobStepActionOutput() JobStepActionOutput {
	return i.ToJobStepActionOutputWithContext(context.Background())
}

func (i JobStepActionArgs) ToJobStepActionOutputWithContext(ctx context.Context) JobStepActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepActionOutput)
}

func (i JobStepActionArgs) ToJobStepActionPtrOutput() JobStepActionPtrOutput {
	return i.ToJobStepActionPtrOutputWithContext(context.Background())
}

func (i JobStepActionArgs) ToJobStepActionPtrOutputWithContext(ctx context.Context) JobStepActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepActionOutput).ToJobStepActionPtrOutputWithContext(ctx)
}

// JobStepActionPtrInput is an input type that accepts JobStepActionArgs, JobStepActionPtr and JobStepActionPtrOutput values.
// You can construct a concrete instance of `JobStepActionPtrInput` via:
//
//          JobStepActionArgs{...}
//
//  or:
//
//          nil
type JobStepActionPtrInput interface {
	pulumi.Input

	ToJobStepActionPtrOutput() JobStepActionPtrOutput
	ToJobStepActionPtrOutputWithContext(context.Context) JobStepActionPtrOutput
}

type jobStepActionPtrType JobStepActionArgs

func JobStepActionPtr(v *JobStepActionArgs) JobStepActionPtrInput {
	return (*jobStepActionPtrType)(v)
}

func (*jobStepActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStepAction)(nil)).Elem()
}

func (i *jobStepActionPtrType) ToJobStepActionPtrOutput() JobStepActionPtrOutput {
	return i.ToJobStepActionPtrOutputWithContext(context.Background())
}

func (i *jobStepActionPtrType) ToJobStepActionPtrOutputWithContext(ctx context.Context) JobStepActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepActionPtrOutput)
}

// The action to be executed by a job step.
type JobStepActionOutput struct{ *pulumi.OutputState }

func (JobStepActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStepAction)(nil)).Elem()
}

func (o JobStepActionOutput) ToJobStepActionOutput() JobStepActionOutput {
	return o
}

func (o JobStepActionOutput) ToJobStepActionOutputWithContext(ctx context.Context) JobStepActionOutput {
	return o
}

func (o JobStepActionOutput) ToJobStepActionPtrOutput() JobStepActionPtrOutput {
	return o.ToJobStepActionPtrOutputWithContext(context.Background())
}

func (o JobStepActionOutput) ToJobStepActionPtrOutputWithContext(ctx context.Context) JobStepActionPtrOutput {
	return o.ApplyT(func(v JobStepAction) *JobStepAction {
		return &v
	}).(JobStepActionPtrOutput)
}

// The source of the action to execute.
func (o JobStepActionOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStepAction) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// Type of action being executed by the job step.
func (o JobStepActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStepAction) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The action value, for example the text of the T-SQL script to execute.
func (o JobStepActionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v JobStepAction) string { return v.Value }).(pulumi.StringOutput)
}

type JobStepActionPtrOutput struct{ *pulumi.OutputState }

func (JobStepActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStepAction)(nil)).Elem()
}

func (o JobStepActionPtrOutput) ToJobStepActionPtrOutput() JobStepActionPtrOutput {
	return o
}

func (o JobStepActionPtrOutput) ToJobStepActionPtrOutputWithContext(ctx context.Context) JobStepActionPtrOutput {
	return o
}

func (o JobStepActionPtrOutput) Elem() JobStepActionOutput {
	return o.ApplyT(func(v *JobStepAction) JobStepAction { return *v }).(JobStepActionOutput)
}

// The source of the action to execute.
func (o JobStepActionPtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepAction) *string {
		if v == nil {
			return nil
		}
		return v.Source
	}).(pulumi.StringPtrOutput)
}

// Type of action being executed by the job step.
func (o JobStepActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepAction) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The action value, for example the text of the T-SQL script to execute.
func (o JobStepActionPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepAction) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// The action to be executed by a job step.
type JobStepActionResponse struct {
	// The source of the action to execute.
	Source *string `pulumi:"source"`
	// Type of action being executed by the job step.
	Type *string `pulumi:"type"`
	// The action value, for example the text of the T-SQL script to execute.
	Value string `pulumi:"value"`
}

// JobStepActionResponseInput is an input type that accepts JobStepActionResponseArgs and JobStepActionResponseOutput values.
// You can construct a concrete instance of `JobStepActionResponseInput` via:
//
//          JobStepActionResponseArgs{...}
type JobStepActionResponseInput interface {
	pulumi.Input

	ToJobStepActionResponseOutput() JobStepActionResponseOutput
	ToJobStepActionResponseOutputWithContext(context.Context) JobStepActionResponseOutput
}

// The action to be executed by a job step.
type JobStepActionResponseArgs struct {
	// The source of the action to execute.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// Type of action being executed by the job step.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The action value, for example the text of the T-SQL script to execute.
	Value pulumi.StringInput `pulumi:"value"`
}

func (JobStepActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStepActionResponse)(nil)).Elem()
}

func (i JobStepActionResponseArgs) ToJobStepActionResponseOutput() JobStepActionResponseOutput {
	return i.ToJobStepActionResponseOutputWithContext(context.Background())
}

func (i JobStepActionResponseArgs) ToJobStepActionResponseOutputWithContext(ctx context.Context) JobStepActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepActionResponseOutput)
}

func (i JobStepActionResponseArgs) ToJobStepActionResponsePtrOutput() JobStepActionResponsePtrOutput {
	return i.ToJobStepActionResponsePtrOutputWithContext(context.Background())
}

func (i JobStepActionResponseArgs) ToJobStepActionResponsePtrOutputWithContext(ctx context.Context) JobStepActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepActionResponseOutput).ToJobStepActionResponsePtrOutputWithContext(ctx)
}

// JobStepActionResponsePtrInput is an input type that accepts JobStepActionResponseArgs, JobStepActionResponsePtr and JobStepActionResponsePtrOutput values.
// You can construct a concrete instance of `JobStepActionResponsePtrInput` via:
//
//          JobStepActionResponseArgs{...}
//
//  or:
//
//          nil
type JobStepActionResponsePtrInput interface {
	pulumi.Input

	ToJobStepActionResponsePtrOutput() JobStepActionResponsePtrOutput
	ToJobStepActionResponsePtrOutputWithContext(context.Context) JobStepActionResponsePtrOutput
}

type jobStepActionResponsePtrType JobStepActionResponseArgs

func JobStepActionResponsePtr(v *JobStepActionResponseArgs) JobStepActionResponsePtrInput {
	return (*jobStepActionResponsePtrType)(v)
}

func (*jobStepActionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStepActionResponse)(nil)).Elem()
}

func (i *jobStepActionResponsePtrType) ToJobStepActionResponsePtrOutput() JobStepActionResponsePtrOutput {
	return i.ToJobStepActionResponsePtrOutputWithContext(context.Background())
}

func (i *jobStepActionResponsePtrType) ToJobStepActionResponsePtrOutputWithContext(ctx context.Context) JobStepActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepActionResponsePtrOutput)
}

// The action to be executed by a job step.
type JobStepActionResponseOutput struct{ *pulumi.OutputState }

func (JobStepActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStepActionResponse)(nil)).Elem()
}

func (o JobStepActionResponseOutput) ToJobStepActionResponseOutput() JobStepActionResponseOutput {
	return o
}

func (o JobStepActionResponseOutput) ToJobStepActionResponseOutputWithContext(ctx context.Context) JobStepActionResponseOutput {
	return o
}

func (o JobStepActionResponseOutput) ToJobStepActionResponsePtrOutput() JobStepActionResponsePtrOutput {
	return o.ToJobStepActionResponsePtrOutputWithContext(context.Background())
}

func (o JobStepActionResponseOutput) ToJobStepActionResponsePtrOutputWithContext(ctx context.Context) JobStepActionResponsePtrOutput {
	return o.ApplyT(func(v JobStepActionResponse) *JobStepActionResponse {
		return &v
	}).(JobStepActionResponsePtrOutput)
}

// The source of the action to execute.
func (o JobStepActionResponseOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStepActionResponse) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// Type of action being executed by the job step.
func (o JobStepActionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStepActionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The action value, for example the text of the T-SQL script to execute.
func (o JobStepActionResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v JobStepActionResponse) string { return v.Value }).(pulumi.StringOutput)
}

type JobStepActionResponsePtrOutput struct{ *pulumi.OutputState }

func (JobStepActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStepActionResponse)(nil)).Elem()
}

func (o JobStepActionResponsePtrOutput) ToJobStepActionResponsePtrOutput() JobStepActionResponsePtrOutput {
	return o
}

func (o JobStepActionResponsePtrOutput) ToJobStepActionResponsePtrOutputWithContext(ctx context.Context) JobStepActionResponsePtrOutput {
	return o
}

func (o JobStepActionResponsePtrOutput) Elem() JobStepActionResponseOutput {
	return o.ApplyT(func(v *JobStepActionResponse) JobStepActionResponse { return *v }).(JobStepActionResponseOutput)
}

// The source of the action to execute.
func (o JobStepActionResponsePtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Source
	}).(pulumi.StringPtrOutput)
}

// Type of action being executed by the job step.
func (o JobStepActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The action value, for example the text of the T-SQL script to execute.
func (o JobStepActionResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepActionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// The execution options of a job step.
type JobStepExecutionOptions struct {
	// Initial delay between retries for job step execution.
	InitialRetryIntervalSeconds *int `pulumi:"initialRetryIntervalSeconds"`
	// The maximum amount of time to wait between retries for job step execution.
	MaximumRetryIntervalSeconds *int `pulumi:"maximumRetryIntervalSeconds"`
	// Maximum number of times the job step will be reattempted if the first attempt fails.
	RetryAttempts *int `pulumi:"retryAttempts"`
	// The backoff multiplier for the time between retries.
	RetryIntervalBackoffMultiplier *float64 `pulumi:"retryIntervalBackoffMultiplier"`
	// Execution timeout for the job step.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// JobStepExecutionOptionsInput is an input type that accepts JobStepExecutionOptionsArgs and JobStepExecutionOptionsOutput values.
// You can construct a concrete instance of `JobStepExecutionOptionsInput` via:
//
//          JobStepExecutionOptionsArgs{...}
type JobStepExecutionOptionsInput interface {
	pulumi.Input

	ToJobStepExecutionOptionsOutput() JobStepExecutionOptionsOutput
	ToJobStepExecutionOptionsOutputWithContext(context.Context) JobStepExecutionOptionsOutput
}

// The execution options of a job step.
type JobStepExecutionOptionsArgs struct {
	// Initial delay between retries for job step execution.
	InitialRetryIntervalSeconds pulumi.IntPtrInput `pulumi:"initialRetryIntervalSeconds"`
	// The maximum amount of time to wait between retries for job step execution.
	MaximumRetryIntervalSeconds pulumi.IntPtrInput `pulumi:"maximumRetryIntervalSeconds"`
	// Maximum number of times the job step will be reattempted if the first attempt fails.
	RetryAttempts pulumi.IntPtrInput `pulumi:"retryAttempts"`
	// The backoff multiplier for the time between retries.
	RetryIntervalBackoffMultiplier pulumi.Float64PtrInput `pulumi:"retryIntervalBackoffMultiplier"`
	// Execution timeout for the job step.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (JobStepExecutionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStepExecutionOptions)(nil)).Elem()
}

func (i JobStepExecutionOptionsArgs) ToJobStepExecutionOptionsOutput() JobStepExecutionOptionsOutput {
	return i.ToJobStepExecutionOptionsOutputWithContext(context.Background())
}

func (i JobStepExecutionOptionsArgs) ToJobStepExecutionOptionsOutputWithContext(ctx context.Context) JobStepExecutionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepExecutionOptionsOutput)
}

func (i JobStepExecutionOptionsArgs) ToJobStepExecutionOptionsPtrOutput() JobStepExecutionOptionsPtrOutput {
	return i.ToJobStepExecutionOptionsPtrOutputWithContext(context.Background())
}

func (i JobStepExecutionOptionsArgs) ToJobStepExecutionOptionsPtrOutputWithContext(ctx context.Context) JobStepExecutionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepExecutionOptionsOutput).ToJobStepExecutionOptionsPtrOutputWithContext(ctx)
}

// JobStepExecutionOptionsPtrInput is an input type that accepts JobStepExecutionOptionsArgs, JobStepExecutionOptionsPtr and JobStepExecutionOptionsPtrOutput values.
// You can construct a concrete instance of `JobStepExecutionOptionsPtrInput` via:
//
//          JobStepExecutionOptionsArgs{...}
//
//  or:
//
//          nil
type JobStepExecutionOptionsPtrInput interface {
	pulumi.Input

	ToJobStepExecutionOptionsPtrOutput() JobStepExecutionOptionsPtrOutput
	ToJobStepExecutionOptionsPtrOutputWithContext(context.Context) JobStepExecutionOptionsPtrOutput
}

type jobStepExecutionOptionsPtrType JobStepExecutionOptionsArgs

func JobStepExecutionOptionsPtr(v *JobStepExecutionOptionsArgs) JobStepExecutionOptionsPtrInput {
	return (*jobStepExecutionOptionsPtrType)(v)
}

func (*jobStepExecutionOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStepExecutionOptions)(nil)).Elem()
}

func (i *jobStepExecutionOptionsPtrType) ToJobStepExecutionOptionsPtrOutput() JobStepExecutionOptionsPtrOutput {
	return i.ToJobStepExecutionOptionsPtrOutputWithContext(context.Background())
}

func (i *jobStepExecutionOptionsPtrType) ToJobStepExecutionOptionsPtrOutputWithContext(ctx context.Context) JobStepExecutionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepExecutionOptionsPtrOutput)
}

// The execution options of a job step.
type JobStepExecutionOptionsOutput struct{ *pulumi.OutputState }

func (JobStepExecutionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStepExecutionOptions)(nil)).Elem()
}

func (o JobStepExecutionOptionsOutput) ToJobStepExecutionOptionsOutput() JobStepExecutionOptionsOutput {
	return o
}

func (o JobStepExecutionOptionsOutput) ToJobStepExecutionOptionsOutputWithContext(ctx context.Context) JobStepExecutionOptionsOutput {
	return o
}

func (o JobStepExecutionOptionsOutput) ToJobStepExecutionOptionsPtrOutput() JobStepExecutionOptionsPtrOutput {
	return o.ToJobStepExecutionOptionsPtrOutputWithContext(context.Background())
}

func (o JobStepExecutionOptionsOutput) ToJobStepExecutionOptionsPtrOutputWithContext(ctx context.Context) JobStepExecutionOptionsPtrOutput {
	return o.ApplyT(func(v JobStepExecutionOptions) *JobStepExecutionOptions {
		return &v
	}).(JobStepExecutionOptionsPtrOutput)
}

// Initial delay between retries for job step execution.
func (o JobStepExecutionOptionsOutput) InitialRetryIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobStepExecutionOptions) *int { return v.InitialRetryIntervalSeconds }).(pulumi.IntPtrOutput)
}

// The maximum amount of time to wait between retries for job step execution.
func (o JobStepExecutionOptionsOutput) MaximumRetryIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobStepExecutionOptions) *int { return v.MaximumRetryIntervalSeconds }).(pulumi.IntPtrOutput)
}

// Maximum number of times the job step will be reattempted if the first attempt fails.
func (o JobStepExecutionOptionsOutput) RetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobStepExecutionOptions) *int { return v.RetryAttempts }).(pulumi.IntPtrOutput)
}

// The backoff multiplier for the time between retries.
func (o JobStepExecutionOptionsOutput) RetryIntervalBackoffMultiplier() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v JobStepExecutionOptions) *float64 { return v.RetryIntervalBackoffMultiplier }).(pulumi.Float64PtrOutput)
}

// Execution timeout for the job step.
func (o JobStepExecutionOptionsOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobStepExecutionOptions) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type JobStepExecutionOptionsPtrOutput struct{ *pulumi.OutputState }

func (JobStepExecutionOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStepExecutionOptions)(nil)).Elem()
}

func (o JobStepExecutionOptionsPtrOutput) ToJobStepExecutionOptionsPtrOutput() JobStepExecutionOptionsPtrOutput {
	return o
}

func (o JobStepExecutionOptionsPtrOutput) ToJobStepExecutionOptionsPtrOutputWithContext(ctx context.Context) JobStepExecutionOptionsPtrOutput {
	return o
}

func (o JobStepExecutionOptionsPtrOutput) Elem() JobStepExecutionOptionsOutput {
	return o.ApplyT(func(v *JobStepExecutionOptions) JobStepExecutionOptions { return *v }).(JobStepExecutionOptionsOutput)
}

// Initial delay between retries for job step execution.
func (o JobStepExecutionOptionsPtrOutput) InitialRetryIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobStepExecutionOptions) *int {
		if v == nil {
			return nil
		}
		return v.InitialRetryIntervalSeconds
	}).(pulumi.IntPtrOutput)
}

// The maximum amount of time to wait between retries for job step execution.
func (o JobStepExecutionOptionsPtrOutput) MaximumRetryIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobStepExecutionOptions) *int {
		if v == nil {
			return nil
		}
		return v.MaximumRetryIntervalSeconds
	}).(pulumi.IntPtrOutput)
}

// Maximum number of times the job step will be reattempted if the first attempt fails.
func (o JobStepExecutionOptionsPtrOutput) RetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobStepExecutionOptions) *int {
		if v == nil {
			return nil
		}
		return v.RetryAttempts
	}).(pulumi.IntPtrOutput)
}

// The backoff multiplier for the time between retries.
func (o JobStepExecutionOptionsPtrOutput) RetryIntervalBackoffMultiplier() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *JobStepExecutionOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.RetryIntervalBackoffMultiplier
	}).(pulumi.Float64PtrOutput)
}

// Execution timeout for the job step.
func (o JobStepExecutionOptionsPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobStepExecutionOptions) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// The execution options of a job step.
type JobStepExecutionOptionsResponse struct {
	// Initial delay between retries for job step execution.
	InitialRetryIntervalSeconds *int `pulumi:"initialRetryIntervalSeconds"`
	// The maximum amount of time to wait between retries for job step execution.
	MaximumRetryIntervalSeconds *int `pulumi:"maximumRetryIntervalSeconds"`
	// Maximum number of times the job step will be reattempted if the first attempt fails.
	RetryAttempts *int `pulumi:"retryAttempts"`
	// The backoff multiplier for the time between retries.
	RetryIntervalBackoffMultiplier *float64 `pulumi:"retryIntervalBackoffMultiplier"`
	// Execution timeout for the job step.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// JobStepExecutionOptionsResponseInput is an input type that accepts JobStepExecutionOptionsResponseArgs and JobStepExecutionOptionsResponseOutput values.
// You can construct a concrete instance of `JobStepExecutionOptionsResponseInput` via:
//
//          JobStepExecutionOptionsResponseArgs{...}
type JobStepExecutionOptionsResponseInput interface {
	pulumi.Input

	ToJobStepExecutionOptionsResponseOutput() JobStepExecutionOptionsResponseOutput
	ToJobStepExecutionOptionsResponseOutputWithContext(context.Context) JobStepExecutionOptionsResponseOutput
}

// The execution options of a job step.
type JobStepExecutionOptionsResponseArgs struct {
	// Initial delay between retries for job step execution.
	InitialRetryIntervalSeconds pulumi.IntPtrInput `pulumi:"initialRetryIntervalSeconds"`
	// The maximum amount of time to wait between retries for job step execution.
	MaximumRetryIntervalSeconds pulumi.IntPtrInput `pulumi:"maximumRetryIntervalSeconds"`
	// Maximum number of times the job step will be reattempted if the first attempt fails.
	RetryAttempts pulumi.IntPtrInput `pulumi:"retryAttempts"`
	// The backoff multiplier for the time between retries.
	RetryIntervalBackoffMultiplier pulumi.Float64PtrInput `pulumi:"retryIntervalBackoffMultiplier"`
	// Execution timeout for the job step.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (JobStepExecutionOptionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStepExecutionOptionsResponse)(nil)).Elem()
}

func (i JobStepExecutionOptionsResponseArgs) ToJobStepExecutionOptionsResponseOutput() JobStepExecutionOptionsResponseOutput {
	return i.ToJobStepExecutionOptionsResponseOutputWithContext(context.Background())
}

func (i JobStepExecutionOptionsResponseArgs) ToJobStepExecutionOptionsResponseOutputWithContext(ctx context.Context) JobStepExecutionOptionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepExecutionOptionsResponseOutput)
}

func (i JobStepExecutionOptionsResponseArgs) ToJobStepExecutionOptionsResponsePtrOutput() JobStepExecutionOptionsResponsePtrOutput {
	return i.ToJobStepExecutionOptionsResponsePtrOutputWithContext(context.Background())
}

func (i JobStepExecutionOptionsResponseArgs) ToJobStepExecutionOptionsResponsePtrOutputWithContext(ctx context.Context) JobStepExecutionOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepExecutionOptionsResponseOutput).ToJobStepExecutionOptionsResponsePtrOutputWithContext(ctx)
}

// JobStepExecutionOptionsResponsePtrInput is an input type that accepts JobStepExecutionOptionsResponseArgs, JobStepExecutionOptionsResponsePtr and JobStepExecutionOptionsResponsePtrOutput values.
// You can construct a concrete instance of `JobStepExecutionOptionsResponsePtrInput` via:
//
//          JobStepExecutionOptionsResponseArgs{...}
//
//  or:
//
//          nil
type JobStepExecutionOptionsResponsePtrInput interface {
	pulumi.Input

	ToJobStepExecutionOptionsResponsePtrOutput() JobStepExecutionOptionsResponsePtrOutput
	ToJobStepExecutionOptionsResponsePtrOutputWithContext(context.Context) JobStepExecutionOptionsResponsePtrOutput
}

type jobStepExecutionOptionsResponsePtrType JobStepExecutionOptionsResponseArgs

func JobStepExecutionOptionsResponsePtr(v *JobStepExecutionOptionsResponseArgs) JobStepExecutionOptionsResponsePtrInput {
	return (*jobStepExecutionOptionsResponsePtrType)(v)
}

func (*jobStepExecutionOptionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStepExecutionOptionsResponse)(nil)).Elem()
}

func (i *jobStepExecutionOptionsResponsePtrType) ToJobStepExecutionOptionsResponsePtrOutput() JobStepExecutionOptionsResponsePtrOutput {
	return i.ToJobStepExecutionOptionsResponsePtrOutputWithContext(context.Background())
}

func (i *jobStepExecutionOptionsResponsePtrType) ToJobStepExecutionOptionsResponsePtrOutputWithContext(ctx context.Context) JobStepExecutionOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepExecutionOptionsResponsePtrOutput)
}

// The execution options of a job step.
type JobStepExecutionOptionsResponseOutput struct{ *pulumi.OutputState }

func (JobStepExecutionOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStepExecutionOptionsResponse)(nil)).Elem()
}

func (o JobStepExecutionOptionsResponseOutput) ToJobStepExecutionOptionsResponseOutput() JobStepExecutionOptionsResponseOutput {
	return o
}

func (o JobStepExecutionOptionsResponseOutput) ToJobStepExecutionOptionsResponseOutputWithContext(ctx context.Context) JobStepExecutionOptionsResponseOutput {
	return o
}

func (o JobStepExecutionOptionsResponseOutput) ToJobStepExecutionOptionsResponsePtrOutput() JobStepExecutionOptionsResponsePtrOutput {
	return o.ToJobStepExecutionOptionsResponsePtrOutputWithContext(context.Background())
}

func (o JobStepExecutionOptionsResponseOutput) ToJobStepExecutionOptionsResponsePtrOutputWithContext(ctx context.Context) JobStepExecutionOptionsResponsePtrOutput {
	return o.ApplyT(func(v JobStepExecutionOptionsResponse) *JobStepExecutionOptionsResponse {
		return &v
	}).(JobStepExecutionOptionsResponsePtrOutput)
}

// Initial delay between retries for job step execution.
func (o JobStepExecutionOptionsResponseOutput) InitialRetryIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobStepExecutionOptionsResponse) *int { return v.InitialRetryIntervalSeconds }).(pulumi.IntPtrOutput)
}

// The maximum amount of time to wait between retries for job step execution.
func (o JobStepExecutionOptionsResponseOutput) MaximumRetryIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobStepExecutionOptionsResponse) *int { return v.MaximumRetryIntervalSeconds }).(pulumi.IntPtrOutput)
}

// Maximum number of times the job step will be reattempted if the first attempt fails.
func (o JobStepExecutionOptionsResponseOutput) RetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobStepExecutionOptionsResponse) *int { return v.RetryAttempts }).(pulumi.IntPtrOutput)
}

// The backoff multiplier for the time between retries.
func (o JobStepExecutionOptionsResponseOutput) RetryIntervalBackoffMultiplier() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v JobStepExecutionOptionsResponse) *float64 { return v.RetryIntervalBackoffMultiplier }).(pulumi.Float64PtrOutput)
}

// Execution timeout for the job step.
func (o JobStepExecutionOptionsResponseOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobStepExecutionOptionsResponse) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type JobStepExecutionOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (JobStepExecutionOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStepExecutionOptionsResponse)(nil)).Elem()
}

func (o JobStepExecutionOptionsResponsePtrOutput) ToJobStepExecutionOptionsResponsePtrOutput() JobStepExecutionOptionsResponsePtrOutput {
	return o
}

func (o JobStepExecutionOptionsResponsePtrOutput) ToJobStepExecutionOptionsResponsePtrOutputWithContext(ctx context.Context) JobStepExecutionOptionsResponsePtrOutput {
	return o
}

func (o JobStepExecutionOptionsResponsePtrOutput) Elem() JobStepExecutionOptionsResponseOutput {
	return o.ApplyT(func(v *JobStepExecutionOptionsResponse) JobStepExecutionOptionsResponse { return *v }).(JobStepExecutionOptionsResponseOutput)
}

// Initial delay between retries for job step execution.
func (o JobStepExecutionOptionsResponsePtrOutput) InitialRetryIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobStepExecutionOptionsResponse) *int {
		if v == nil {
			return nil
		}
		return v.InitialRetryIntervalSeconds
	}).(pulumi.IntPtrOutput)
}

// The maximum amount of time to wait between retries for job step execution.
func (o JobStepExecutionOptionsResponsePtrOutput) MaximumRetryIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobStepExecutionOptionsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaximumRetryIntervalSeconds
	}).(pulumi.IntPtrOutput)
}

// Maximum number of times the job step will be reattempted if the first attempt fails.
func (o JobStepExecutionOptionsResponsePtrOutput) RetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobStepExecutionOptionsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetryAttempts
	}).(pulumi.IntPtrOutput)
}

// The backoff multiplier for the time between retries.
func (o JobStepExecutionOptionsResponsePtrOutput) RetryIntervalBackoffMultiplier() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *JobStepExecutionOptionsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.RetryIntervalBackoffMultiplier
	}).(pulumi.Float64PtrOutput)
}

// Execution timeout for the job step.
func (o JobStepExecutionOptionsResponsePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobStepExecutionOptionsResponse) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// The output configuration of a job step.
type JobStepOutput struct {
	// The resource ID of the credential to use to connect to the output destination.
	Credential string `pulumi:"credential"`
	// The output destination database.
	DatabaseName string `pulumi:"databaseName"`
	// The output destination resource group.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The output destination schema.
	SchemaName *string `pulumi:"schemaName"`
	// The output destination server name.
	ServerName string `pulumi:"serverName"`
	// The output destination subscription id.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// The output destination table.
	TableName string `pulumi:"tableName"`
	// The output destination type.
	Type *string `pulumi:"type"`
}

// JobStepOutputInput is an input type that accepts JobStepOutputArgs and JobStepOutputOutput values.
// You can construct a concrete instance of `JobStepOutputInput` via:
//
//          JobStepOutputArgs{...}
type JobStepOutputInput interface {
	pulumi.Input

	ToJobStepOutputOutput() JobStepOutputOutput
	ToJobStepOutputOutputWithContext(context.Context) JobStepOutputOutput
}

// The output configuration of a job step.
type JobStepOutputArgs struct {
	// The resource ID of the credential to use to connect to the output destination.
	Credential pulumi.StringInput `pulumi:"credential"`
	// The output destination database.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// The output destination resource group.
	ResourceGroupName pulumi.StringPtrInput `pulumi:"resourceGroupName"`
	// The output destination schema.
	SchemaName pulumi.StringPtrInput `pulumi:"schemaName"`
	// The output destination server name.
	ServerName pulumi.StringInput `pulumi:"serverName"`
	// The output destination subscription id.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// The output destination table.
	TableName pulumi.StringInput `pulumi:"tableName"`
	// The output destination type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (JobStepOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStepOutput)(nil)).Elem()
}

func (i JobStepOutputArgs) ToJobStepOutputOutput() JobStepOutputOutput {
	return i.ToJobStepOutputOutputWithContext(context.Background())
}

func (i JobStepOutputArgs) ToJobStepOutputOutputWithContext(ctx context.Context) JobStepOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepOutputOutput)
}

func (i JobStepOutputArgs) ToJobStepOutputPtrOutput() JobStepOutputPtrOutput {
	return i.ToJobStepOutputPtrOutputWithContext(context.Background())
}

func (i JobStepOutputArgs) ToJobStepOutputPtrOutputWithContext(ctx context.Context) JobStepOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepOutputOutput).ToJobStepOutputPtrOutputWithContext(ctx)
}

// JobStepOutputPtrInput is an input type that accepts JobStepOutputArgs, JobStepOutputPtr and JobStepOutputPtrOutput values.
// You can construct a concrete instance of `JobStepOutputPtrInput` via:
//
//          JobStepOutputArgs{...}
//
//  or:
//
//          nil
type JobStepOutputPtrInput interface {
	pulumi.Input

	ToJobStepOutputPtrOutput() JobStepOutputPtrOutput
	ToJobStepOutputPtrOutputWithContext(context.Context) JobStepOutputPtrOutput
}

type jobStepOutputPtrType JobStepOutputArgs

func JobStepOutputPtr(v *JobStepOutputArgs) JobStepOutputPtrInput {
	return (*jobStepOutputPtrType)(v)
}

func (*jobStepOutputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStepOutput)(nil)).Elem()
}

func (i *jobStepOutputPtrType) ToJobStepOutputPtrOutput() JobStepOutputPtrOutput {
	return i.ToJobStepOutputPtrOutputWithContext(context.Background())
}

func (i *jobStepOutputPtrType) ToJobStepOutputPtrOutputWithContext(ctx context.Context) JobStepOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepOutputPtrOutput)
}

// The output configuration of a job step.
type JobStepOutputOutput struct{ *pulumi.OutputState }

func (JobStepOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStepOutput)(nil)).Elem()
}

func (o JobStepOutputOutput) ToJobStepOutputOutput() JobStepOutputOutput {
	return o
}

func (o JobStepOutputOutput) ToJobStepOutputOutputWithContext(ctx context.Context) JobStepOutputOutput {
	return o
}

func (o JobStepOutputOutput) ToJobStepOutputPtrOutput() JobStepOutputPtrOutput {
	return o.ToJobStepOutputPtrOutputWithContext(context.Background())
}

func (o JobStepOutputOutput) ToJobStepOutputPtrOutputWithContext(ctx context.Context) JobStepOutputPtrOutput {
	return o.ApplyT(func(v JobStepOutput) *JobStepOutput {
		return &v
	}).(JobStepOutputPtrOutput)
}

// The resource ID of the credential to use to connect to the output destination.
func (o JobStepOutputOutput) Credential() pulumi.StringOutput {
	return o.ApplyT(func(v JobStepOutput) string { return v.Credential }).(pulumi.StringOutput)
}

// The output destination database.
func (o JobStepOutputOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v JobStepOutput) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// The output destination resource group.
func (o JobStepOutputOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStepOutput) *string { return v.ResourceGroupName }).(pulumi.StringPtrOutput)
}

// The output destination schema.
func (o JobStepOutputOutput) SchemaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStepOutput) *string { return v.SchemaName }).(pulumi.StringPtrOutput)
}

// The output destination server name.
func (o JobStepOutputOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v JobStepOutput) string { return v.ServerName }).(pulumi.StringOutput)
}

// The output destination subscription id.
func (o JobStepOutputOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStepOutput) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// The output destination table.
func (o JobStepOutputOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v JobStepOutput) string { return v.TableName }).(pulumi.StringOutput)
}

// The output destination type.
func (o JobStepOutputOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStepOutput) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type JobStepOutputPtrOutput struct{ *pulumi.OutputState }

func (JobStepOutputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStepOutput)(nil)).Elem()
}

func (o JobStepOutputPtrOutput) ToJobStepOutputPtrOutput() JobStepOutputPtrOutput {
	return o
}

func (o JobStepOutputPtrOutput) ToJobStepOutputPtrOutputWithContext(ctx context.Context) JobStepOutputPtrOutput {
	return o
}

func (o JobStepOutputPtrOutput) Elem() JobStepOutputOutput {
	return o.ApplyT(func(v *JobStepOutput) JobStepOutput { return *v }).(JobStepOutputOutput)
}

// The resource ID of the credential to use to connect to the output destination.
func (o JobStepOutputPtrOutput) Credential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepOutput) *string {
		if v == nil {
			return nil
		}
		return &v.Credential
	}).(pulumi.StringPtrOutput)
}

// The output destination database.
func (o JobStepOutputPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepOutput) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// The output destination resource group.
func (o JobStepOutputPtrOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepOutput) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroupName
	}).(pulumi.StringPtrOutput)
}

// The output destination schema.
func (o JobStepOutputPtrOutput) SchemaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepOutput) *string {
		if v == nil {
			return nil
		}
		return v.SchemaName
	}).(pulumi.StringPtrOutput)
}

// The output destination server name.
func (o JobStepOutputPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepOutput) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

// The output destination subscription id.
func (o JobStepOutputPtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepOutput) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// The output destination table.
func (o JobStepOutputPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepOutput) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

// The output destination type.
func (o JobStepOutputPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepOutput) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The output configuration of a job step.
type JobStepOutputResponse struct {
	// The resource ID of the credential to use to connect to the output destination.
	Credential string `pulumi:"credential"`
	// The output destination database.
	DatabaseName string `pulumi:"databaseName"`
	// The output destination resource group.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The output destination schema.
	SchemaName *string `pulumi:"schemaName"`
	// The output destination server name.
	ServerName string `pulumi:"serverName"`
	// The output destination subscription id.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// The output destination table.
	TableName string `pulumi:"tableName"`
	// The output destination type.
	Type *string `pulumi:"type"`
}

// JobStepOutputResponseInput is an input type that accepts JobStepOutputResponseArgs and JobStepOutputResponseOutput values.
// You can construct a concrete instance of `JobStepOutputResponseInput` via:
//
//          JobStepOutputResponseArgs{...}
type JobStepOutputResponseInput interface {
	pulumi.Input

	ToJobStepOutputResponseOutput() JobStepOutputResponseOutput
	ToJobStepOutputResponseOutputWithContext(context.Context) JobStepOutputResponseOutput
}

// The output configuration of a job step.
type JobStepOutputResponseArgs struct {
	// The resource ID of the credential to use to connect to the output destination.
	Credential pulumi.StringInput `pulumi:"credential"`
	// The output destination database.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// The output destination resource group.
	ResourceGroupName pulumi.StringPtrInput `pulumi:"resourceGroupName"`
	// The output destination schema.
	SchemaName pulumi.StringPtrInput `pulumi:"schemaName"`
	// The output destination server name.
	ServerName pulumi.StringInput `pulumi:"serverName"`
	// The output destination subscription id.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// The output destination table.
	TableName pulumi.StringInput `pulumi:"tableName"`
	// The output destination type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (JobStepOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStepOutputResponse)(nil)).Elem()
}

func (i JobStepOutputResponseArgs) ToJobStepOutputResponseOutput() JobStepOutputResponseOutput {
	return i.ToJobStepOutputResponseOutputWithContext(context.Background())
}

func (i JobStepOutputResponseArgs) ToJobStepOutputResponseOutputWithContext(ctx context.Context) JobStepOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepOutputResponseOutput)
}

func (i JobStepOutputResponseArgs) ToJobStepOutputResponsePtrOutput() JobStepOutputResponsePtrOutput {
	return i.ToJobStepOutputResponsePtrOutputWithContext(context.Background())
}

func (i JobStepOutputResponseArgs) ToJobStepOutputResponsePtrOutputWithContext(ctx context.Context) JobStepOutputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepOutputResponseOutput).ToJobStepOutputResponsePtrOutputWithContext(ctx)
}

// JobStepOutputResponsePtrInput is an input type that accepts JobStepOutputResponseArgs, JobStepOutputResponsePtr and JobStepOutputResponsePtrOutput values.
// You can construct a concrete instance of `JobStepOutputResponsePtrInput` via:
//
//          JobStepOutputResponseArgs{...}
//
//  or:
//
//          nil
type JobStepOutputResponsePtrInput interface {
	pulumi.Input

	ToJobStepOutputResponsePtrOutput() JobStepOutputResponsePtrOutput
	ToJobStepOutputResponsePtrOutputWithContext(context.Context) JobStepOutputResponsePtrOutput
}

type jobStepOutputResponsePtrType JobStepOutputResponseArgs

func JobStepOutputResponsePtr(v *JobStepOutputResponseArgs) JobStepOutputResponsePtrInput {
	return (*jobStepOutputResponsePtrType)(v)
}

func (*jobStepOutputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStepOutputResponse)(nil)).Elem()
}

func (i *jobStepOutputResponsePtrType) ToJobStepOutputResponsePtrOutput() JobStepOutputResponsePtrOutput {
	return i.ToJobStepOutputResponsePtrOutputWithContext(context.Background())
}

func (i *jobStepOutputResponsePtrType) ToJobStepOutputResponsePtrOutputWithContext(ctx context.Context) JobStepOutputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepOutputResponsePtrOutput)
}

// The output configuration of a job step.
type JobStepOutputResponseOutput struct{ *pulumi.OutputState }

func (JobStepOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStepOutputResponse)(nil)).Elem()
}

func (o JobStepOutputResponseOutput) ToJobStepOutputResponseOutput() JobStepOutputResponseOutput {
	return o
}

func (o JobStepOutputResponseOutput) ToJobStepOutputResponseOutputWithContext(ctx context.Context) JobStepOutputResponseOutput {
	return o
}

func (o JobStepOutputResponseOutput) ToJobStepOutputResponsePtrOutput() JobStepOutputResponsePtrOutput {
	return o.ToJobStepOutputResponsePtrOutputWithContext(context.Background())
}

func (o JobStepOutputResponseOutput) ToJobStepOutputResponsePtrOutputWithContext(ctx context.Context) JobStepOutputResponsePtrOutput {
	return o.ApplyT(func(v JobStepOutputResponse) *JobStepOutputResponse {
		return &v
	}).(JobStepOutputResponsePtrOutput)
}

// The resource ID of the credential to use to connect to the output destination.
func (o JobStepOutputResponseOutput) Credential() pulumi.StringOutput {
	return o.ApplyT(func(v JobStepOutputResponse) string { return v.Credential }).(pulumi.StringOutput)
}

// The output destination database.
func (o JobStepOutputResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v JobStepOutputResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// The output destination resource group.
func (o JobStepOutputResponseOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStepOutputResponse) *string { return v.ResourceGroupName }).(pulumi.StringPtrOutput)
}

// The output destination schema.
func (o JobStepOutputResponseOutput) SchemaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStepOutputResponse) *string { return v.SchemaName }).(pulumi.StringPtrOutput)
}

// The output destination server name.
func (o JobStepOutputResponseOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v JobStepOutputResponse) string { return v.ServerName }).(pulumi.StringOutput)
}

// The output destination subscription id.
func (o JobStepOutputResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStepOutputResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// The output destination table.
func (o JobStepOutputResponseOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v JobStepOutputResponse) string { return v.TableName }).(pulumi.StringOutput)
}

// The output destination type.
func (o JobStepOutputResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStepOutputResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type JobStepOutputResponsePtrOutput struct{ *pulumi.OutputState }

func (JobStepOutputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStepOutputResponse)(nil)).Elem()
}

func (o JobStepOutputResponsePtrOutput) ToJobStepOutputResponsePtrOutput() JobStepOutputResponsePtrOutput {
	return o
}

func (o JobStepOutputResponsePtrOutput) ToJobStepOutputResponsePtrOutputWithContext(ctx context.Context) JobStepOutputResponsePtrOutput {
	return o
}

func (o JobStepOutputResponsePtrOutput) Elem() JobStepOutputResponseOutput {
	return o.ApplyT(func(v *JobStepOutputResponse) JobStepOutputResponse { return *v }).(JobStepOutputResponseOutput)
}

// The resource ID of the credential to use to connect to the output destination.
func (o JobStepOutputResponsePtrOutput) Credential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepOutputResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Credential
	}).(pulumi.StringPtrOutput)
}

// The output destination database.
func (o JobStepOutputResponsePtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepOutputResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// The output destination resource group.
func (o JobStepOutputResponsePtrOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepOutputResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroupName
	}).(pulumi.StringPtrOutput)
}

// The output destination schema.
func (o JobStepOutputResponsePtrOutput) SchemaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepOutputResponse) *string {
		if v == nil {
			return nil
		}
		return v.SchemaName
	}).(pulumi.StringPtrOutput)
}

// The output destination server name.
func (o JobStepOutputResponsePtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepOutputResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

// The output destination subscription id.
func (o JobStepOutputResponsePtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepOutputResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// The output destination table.
func (o JobStepOutputResponsePtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepOutputResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

// The output destination type.
func (o JobStepOutputResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStepOutputResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// A job target, for example a specific database or a container of databases that is evaluated during job execution.
type JobTarget struct {
	// The target database name.
	DatabaseName *string `pulumi:"databaseName"`
	// The target elastic pool name.
	ElasticPoolName *string `pulumi:"elasticPoolName"`
	// Whether the target is included or excluded from the group.
	MembershipType *string `pulumi:"membershipType"`
	// The resource ID of the credential that is used during job execution to connect to the target and determine the list of databases inside the target.
	RefreshCredential *string `pulumi:"refreshCredential"`
	// The target server name.
	ServerName *string `pulumi:"serverName"`
	// The target shard map.
	ShardMapName *string `pulumi:"shardMapName"`
	// The target type.
	Type string `pulumi:"type"`
}

// JobTargetInput is an input type that accepts JobTargetArgs and JobTargetOutput values.
// You can construct a concrete instance of `JobTargetInput` via:
//
//          JobTargetArgs{...}
type JobTargetInput interface {
	pulumi.Input

	ToJobTargetOutput() JobTargetOutput
	ToJobTargetOutputWithContext(context.Context) JobTargetOutput
}

// A job target, for example a specific database or a container of databases that is evaluated during job execution.
type JobTargetArgs struct {
	// The target database name.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// The target elastic pool name.
	ElasticPoolName pulumi.StringPtrInput `pulumi:"elasticPoolName"`
	// Whether the target is included or excluded from the group.
	MembershipType pulumi.StringPtrInput `pulumi:"membershipType"`
	// The resource ID of the credential that is used during job execution to connect to the target and determine the list of databases inside the target.
	RefreshCredential pulumi.StringPtrInput `pulumi:"refreshCredential"`
	// The target server name.
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
	// The target shard map.
	ShardMapName pulumi.StringPtrInput `pulumi:"shardMapName"`
	// The target type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (JobTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTarget)(nil)).Elem()
}

func (i JobTargetArgs) ToJobTargetOutput() JobTargetOutput {
	return i.ToJobTargetOutputWithContext(context.Background())
}

func (i JobTargetArgs) ToJobTargetOutputWithContext(ctx context.Context) JobTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTargetOutput)
}

// JobTargetArrayInput is an input type that accepts JobTargetArray and JobTargetArrayOutput values.
// You can construct a concrete instance of `JobTargetArrayInput` via:
//
//          JobTargetArray{ JobTargetArgs{...} }
type JobTargetArrayInput interface {
	pulumi.Input

	ToJobTargetArrayOutput() JobTargetArrayOutput
	ToJobTargetArrayOutputWithContext(context.Context) JobTargetArrayOutput
}

type JobTargetArray []JobTargetInput

func (JobTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobTarget)(nil)).Elem()
}

func (i JobTargetArray) ToJobTargetArrayOutput() JobTargetArrayOutput {
	return i.ToJobTargetArrayOutputWithContext(context.Background())
}

func (i JobTargetArray) ToJobTargetArrayOutputWithContext(ctx context.Context) JobTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTargetArrayOutput)
}

// A job target, for example a specific database or a container of databases that is evaluated during job execution.
type JobTargetOutput struct{ *pulumi.OutputState }

func (JobTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTarget)(nil)).Elem()
}

func (o JobTargetOutput) ToJobTargetOutput() JobTargetOutput {
	return o
}

func (o JobTargetOutput) ToJobTargetOutputWithContext(ctx context.Context) JobTargetOutput {
	return o
}

// The target database name.
func (o JobTargetOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobTarget) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// The target elastic pool name.
func (o JobTargetOutput) ElasticPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobTarget) *string { return v.ElasticPoolName }).(pulumi.StringPtrOutput)
}

// Whether the target is included or excluded from the group.
func (o JobTargetOutput) MembershipType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobTarget) *string { return v.MembershipType }).(pulumi.StringPtrOutput)
}

// The resource ID of the credential that is used during job execution to connect to the target and determine the list of databases inside the target.
func (o JobTargetOutput) RefreshCredential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobTarget) *string { return v.RefreshCredential }).(pulumi.StringPtrOutput)
}

// The target server name.
func (o JobTargetOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobTarget) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// The target shard map.
func (o JobTargetOutput) ShardMapName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobTarget) *string { return v.ShardMapName }).(pulumi.StringPtrOutput)
}

// The target type.
func (o JobTargetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JobTarget) string { return v.Type }).(pulumi.StringOutput)
}

type JobTargetArrayOutput struct{ *pulumi.OutputState }

func (JobTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobTarget)(nil)).Elem()
}

func (o JobTargetArrayOutput) ToJobTargetArrayOutput() JobTargetArrayOutput {
	return o
}

func (o JobTargetArrayOutput) ToJobTargetArrayOutputWithContext(ctx context.Context) JobTargetArrayOutput {
	return o
}

func (o JobTargetArrayOutput) Index(i pulumi.IntInput) JobTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobTarget {
		return vs[0].([]JobTarget)[vs[1].(int)]
	}).(JobTargetOutput)
}

// A job target, for example a specific database or a container of databases that is evaluated during job execution.
type JobTargetResponse struct {
	// The target database name.
	DatabaseName *string `pulumi:"databaseName"`
	// The target elastic pool name.
	ElasticPoolName *string `pulumi:"elasticPoolName"`
	// Whether the target is included or excluded from the group.
	MembershipType *string `pulumi:"membershipType"`
	// The resource ID of the credential that is used during job execution to connect to the target and determine the list of databases inside the target.
	RefreshCredential *string `pulumi:"refreshCredential"`
	// The target server name.
	ServerName *string `pulumi:"serverName"`
	// The target shard map.
	ShardMapName *string `pulumi:"shardMapName"`
	// The target type.
	Type string `pulumi:"type"`
}

// JobTargetResponseInput is an input type that accepts JobTargetResponseArgs and JobTargetResponseOutput values.
// You can construct a concrete instance of `JobTargetResponseInput` via:
//
//          JobTargetResponseArgs{...}
type JobTargetResponseInput interface {
	pulumi.Input

	ToJobTargetResponseOutput() JobTargetResponseOutput
	ToJobTargetResponseOutputWithContext(context.Context) JobTargetResponseOutput
}

// A job target, for example a specific database or a container of databases that is evaluated during job execution.
type JobTargetResponseArgs struct {
	// The target database name.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// The target elastic pool name.
	ElasticPoolName pulumi.StringPtrInput `pulumi:"elasticPoolName"`
	// Whether the target is included or excluded from the group.
	MembershipType pulumi.StringPtrInput `pulumi:"membershipType"`
	// The resource ID of the credential that is used during job execution to connect to the target and determine the list of databases inside the target.
	RefreshCredential pulumi.StringPtrInput `pulumi:"refreshCredential"`
	// The target server name.
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
	// The target shard map.
	ShardMapName pulumi.StringPtrInput `pulumi:"shardMapName"`
	// The target type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (JobTargetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTargetResponse)(nil)).Elem()
}

func (i JobTargetResponseArgs) ToJobTargetResponseOutput() JobTargetResponseOutput {
	return i.ToJobTargetResponseOutputWithContext(context.Background())
}

func (i JobTargetResponseArgs) ToJobTargetResponseOutputWithContext(ctx context.Context) JobTargetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTargetResponseOutput)
}

// JobTargetResponseArrayInput is an input type that accepts JobTargetResponseArray and JobTargetResponseArrayOutput values.
// You can construct a concrete instance of `JobTargetResponseArrayInput` via:
//
//          JobTargetResponseArray{ JobTargetResponseArgs{...} }
type JobTargetResponseArrayInput interface {
	pulumi.Input

	ToJobTargetResponseArrayOutput() JobTargetResponseArrayOutput
	ToJobTargetResponseArrayOutputWithContext(context.Context) JobTargetResponseArrayOutput
}

type JobTargetResponseArray []JobTargetResponseInput

func (JobTargetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobTargetResponse)(nil)).Elem()
}

func (i JobTargetResponseArray) ToJobTargetResponseArrayOutput() JobTargetResponseArrayOutput {
	return i.ToJobTargetResponseArrayOutputWithContext(context.Background())
}

func (i JobTargetResponseArray) ToJobTargetResponseArrayOutputWithContext(ctx context.Context) JobTargetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTargetResponseArrayOutput)
}

// A job target, for example a specific database or a container of databases that is evaluated during job execution.
type JobTargetResponseOutput struct{ *pulumi.OutputState }

func (JobTargetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTargetResponse)(nil)).Elem()
}

func (o JobTargetResponseOutput) ToJobTargetResponseOutput() JobTargetResponseOutput {
	return o
}

func (o JobTargetResponseOutput) ToJobTargetResponseOutputWithContext(ctx context.Context) JobTargetResponseOutput {
	return o
}

// The target database name.
func (o JobTargetResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobTargetResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// The target elastic pool name.
func (o JobTargetResponseOutput) ElasticPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobTargetResponse) *string { return v.ElasticPoolName }).(pulumi.StringPtrOutput)
}

// Whether the target is included or excluded from the group.
func (o JobTargetResponseOutput) MembershipType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobTargetResponse) *string { return v.MembershipType }).(pulumi.StringPtrOutput)
}

// The resource ID of the credential that is used during job execution to connect to the target and determine the list of databases inside the target.
func (o JobTargetResponseOutput) RefreshCredential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobTargetResponse) *string { return v.RefreshCredential }).(pulumi.StringPtrOutput)
}

// The target server name.
func (o JobTargetResponseOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobTargetResponse) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// The target shard map.
func (o JobTargetResponseOutput) ShardMapName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobTargetResponse) *string { return v.ShardMapName }).(pulumi.StringPtrOutput)
}

// The target type.
func (o JobTargetResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JobTargetResponse) string { return v.Type }).(pulumi.StringOutput)
}

type JobTargetResponseArrayOutput struct{ *pulumi.OutputState }

func (JobTargetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobTargetResponse)(nil)).Elem()
}

func (o JobTargetResponseArrayOutput) ToJobTargetResponseArrayOutput() JobTargetResponseArrayOutput {
	return o
}

func (o JobTargetResponseArrayOutput) ToJobTargetResponseArrayOutputWithContext(ctx context.Context) JobTargetResponseArrayOutput {
	return o
}

func (o JobTargetResponseArrayOutput) Index(i pulumi.IntInput) JobTargetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobTargetResponse {
		return vs[0].([]JobTargetResponse)[vs[1].(int)]
	}).(JobTargetResponseOutput)
}

// An ARM Resource SKU.
type Sku struct {
	// Capacity of the particular SKU.
	Capacity *int `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// The name of the SKU, typically, a letter + Number code, e.g. P3.
	Name string `pulumi:"name"`
	// Size of the particular SKU
	Size *string `pulumi:"size"`
	// The tier or edition of the particular SKU, e.g. Basic, Premium.
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// An ARM Resource SKU.
type SkuArgs struct {
	// Capacity of the particular SKU.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU, typically, a letter + Number code, e.g. P3.
	Name pulumi.StringInput `pulumi:"name"`
	// Size of the particular SKU
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The tier or edition of the particular SKU, e.g. Basic, Premium.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// An ARM Resource SKU.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// Capacity of the particular SKU.
func (o SkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Sku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU, typically, a letter + Number code, e.g. P3.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// Size of the particular SKU
func (o SkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The tier or edition of the particular SKU, e.g. Basic, Premium.
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// Capacity of the particular SKU.
func (o SkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Sku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU, typically, a letter + Number code, e.g. P3.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Size of the particular SKU
func (o SkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The tier or edition of the particular SKU, e.g. Basic, Premium.
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// An ARM Resource SKU.
type SkuResponse struct {
	// Capacity of the particular SKU.
	Capacity *int `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// The name of the SKU, typically, a letter + Number code, e.g. P3.
	Name string `pulumi:"name"`
	// Size of the particular SKU
	Size *string `pulumi:"size"`
	// The tier or edition of the particular SKU, e.g. Basic, Premium.
	Tier *string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// An ARM Resource SKU.
type SkuResponseArgs struct {
	// Capacity of the particular SKU.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU, typically, a letter + Number code, e.g. P3.
	Name pulumi.StringInput `pulumi:"name"`
	// Size of the particular SKU
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The tier or edition of the particular SKU, e.g. Basic, Premium.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// An ARM Resource SKU.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// Capacity of the particular SKU.
func (o SkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU, typically, a letter + Number code, e.g. P3.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Size of the particular SKU
func (o SkuResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The tier or edition of the particular SKU, e.g. Basic, Premium.
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// Capacity of the particular SKU.
func (o SkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU, typically, a letter + Number code, e.g. P3.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Size of the particular SKU
func (o SkuResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The tier or edition of the particular SKU, e.g. Basic, Premium.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Properties of a Vulnerability Assessment recurring scans.
type VulnerabilityAssessmentRecurringScansProperties struct {
	// Specifies that the schedule scan notification will be is sent to the subscription administrators.
	EmailSubscriptionAdmins *bool `pulumi:"emailSubscriptionAdmins"`
	// Specifies an array of e-mail addresses to which the scan notification is sent.
	Emails []string `pulumi:"emails"`
	// Recurring scans state.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// VulnerabilityAssessmentRecurringScansPropertiesInput is an input type that accepts VulnerabilityAssessmentRecurringScansPropertiesArgs and VulnerabilityAssessmentRecurringScansPropertiesOutput values.
// You can construct a concrete instance of `VulnerabilityAssessmentRecurringScansPropertiesInput` via:
//
//          VulnerabilityAssessmentRecurringScansPropertiesArgs{...}
type VulnerabilityAssessmentRecurringScansPropertiesInput interface {
	pulumi.Input

	ToVulnerabilityAssessmentRecurringScansPropertiesOutput() VulnerabilityAssessmentRecurringScansPropertiesOutput
	ToVulnerabilityAssessmentRecurringScansPropertiesOutputWithContext(context.Context) VulnerabilityAssessmentRecurringScansPropertiesOutput
}

// Properties of a Vulnerability Assessment recurring scans.
type VulnerabilityAssessmentRecurringScansPropertiesArgs struct {
	// Specifies that the schedule scan notification will be is sent to the subscription administrators.
	EmailSubscriptionAdmins pulumi.BoolPtrInput `pulumi:"emailSubscriptionAdmins"`
	// Specifies an array of e-mail addresses to which the scan notification is sent.
	Emails pulumi.StringArrayInput `pulumi:"emails"`
	// Recurring scans state.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
}

func (VulnerabilityAssessmentRecurringScansPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityAssessmentRecurringScansProperties)(nil)).Elem()
}

func (i VulnerabilityAssessmentRecurringScansPropertiesArgs) ToVulnerabilityAssessmentRecurringScansPropertiesOutput() VulnerabilityAssessmentRecurringScansPropertiesOutput {
	return i.ToVulnerabilityAssessmentRecurringScansPropertiesOutputWithContext(context.Background())
}

func (i VulnerabilityAssessmentRecurringScansPropertiesArgs) ToVulnerabilityAssessmentRecurringScansPropertiesOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityAssessmentRecurringScansPropertiesOutput)
}

func (i VulnerabilityAssessmentRecurringScansPropertiesArgs) ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutput() VulnerabilityAssessmentRecurringScansPropertiesPtrOutput {
	return i.ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutputWithContext(context.Background())
}

func (i VulnerabilityAssessmentRecurringScansPropertiesArgs) ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityAssessmentRecurringScansPropertiesOutput).ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutputWithContext(ctx)
}

// VulnerabilityAssessmentRecurringScansPropertiesPtrInput is an input type that accepts VulnerabilityAssessmentRecurringScansPropertiesArgs, VulnerabilityAssessmentRecurringScansPropertiesPtr and VulnerabilityAssessmentRecurringScansPropertiesPtrOutput values.
// You can construct a concrete instance of `VulnerabilityAssessmentRecurringScansPropertiesPtrInput` via:
//
//          VulnerabilityAssessmentRecurringScansPropertiesArgs{...}
//
//  or:
//
//          nil
type VulnerabilityAssessmentRecurringScansPropertiesPtrInput interface {
	pulumi.Input

	ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutput() VulnerabilityAssessmentRecurringScansPropertiesPtrOutput
	ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutputWithContext(context.Context) VulnerabilityAssessmentRecurringScansPropertiesPtrOutput
}

type vulnerabilityAssessmentRecurringScansPropertiesPtrType VulnerabilityAssessmentRecurringScansPropertiesArgs

func VulnerabilityAssessmentRecurringScansPropertiesPtr(v *VulnerabilityAssessmentRecurringScansPropertiesArgs) VulnerabilityAssessmentRecurringScansPropertiesPtrInput {
	return (*vulnerabilityAssessmentRecurringScansPropertiesPtrType)(v)
}

func (*vulnerabilityAssessmentRecurringScansPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityAssessmentRecurringScansProperties)(nil)).Elem()
}

func (i *vulnerabilityAssessmentRecurringScansPropertiesPtrType) ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutput() VulnerabilityAssessmentRecurringScansPropertiesPtrOutput {
	return i.ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutputWithContext(context.Background())
}

func (i *vulnerabilityAssessmentRecurringScansPropertiesPtrType) ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityAssessmentRecurringScansPropertiesPtrOutput)
}

// Properties of a Vulnerability Assessment recurring scans.
type VulnerabilityAssessmentRecurringScansPropertiesOutput struct{ *pulumi.OutputState }

func (VulnerabilityAssessmentRecurringScansPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityAssessmentRecurringScansProperties)(nil)).Elem()
}

func (o VulnerabilityAssessmentRecurringScansPropertiesOutput) ToVulnerabilityAssessmentRecurringScansPropertiesOutput() VulnerabilityAssessmentRecurringScansPropertiesOutput {
	return o
}

func (o VulnerabilityAssessmentRecurringScansPropertiesOutput) ToVulnerabilityAssessmentRecurringScansPropertiesOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesOutput {
	return o
}

func (o VulnerabilityAssessmentRecurringScansPropertiesOutput) ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutput() VulnerabilityAssessmentRecurringScansPropertiesPtrOutput {
	return o.ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutputWithContext(context.Background())
}

func (o VulnerabilityAssessmentRecurringScansPropertiesOutput) ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesPtrOutput {
	return o.ApplyT(func(v VulnerabilityAssessmentRecurringScansProperties) *VulnerabilityAssessmentRecurringScansProperties {
		return &v
	}).(VulnerabilityAssessmentRecurringScansPropertiesPtrOutput)
}

// Specifies that the schedule scan notification will be is sent to the subscription administrators.
func (o VulnerabilityAssessmentRecurringScansPropertiesOutput) EmailSubscriptionAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VulnerabilityAssessmentRecurringScansProperties) *bool { return v.EmailSubscriptionAdmins }).(pulumi.BoolPtrOutput)
}

// Specifies an array of e-mail addresses to which the scan notification is sent.
func (o VulnerabilityAssessmentRecurringScansPropertiesOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VulnerabilityAssessmentRecurringScansProperties) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

// Recurring scans state.
func (o VulnerabilityAssessmentRecurringScansPropertiesOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VulnerabilityAssessmentRecurringScansProperties) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type VulnerabilityAssessmentRecurringScansPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VulnerabilityAssessmentRecurringScansPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityAssessmentRecurringScansProperties)(nil)).Elem()
}

func (o VulnerabilityAssessmentRecurringScansPropertiesPtrOutput) ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutput() VulnerabilityAssessmentRecurringScansPropertiesPtrOutput {
	return o
}

func (o VulnerabilityAssessmentRecurringScansPropertiesPtrOutput) ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesPtrOutput {
	return o
}

func (o VulnerabilityAssessmentRecurringScansPropertiesPtrOutput) Elem() VulnerabilityAssessmentRecurringScansPropertiesOutput {
	return o.ApplyT(func(v *VulnerabilityAssessmentRecurringScansProperties) VulnerabilityAssessmentRecurringScansProperties {
		return *v
	}).(VulnerabilityAssessmentRecurringScansPropertiesOutput)
}

// Specifies that the schedule scan notification will be is sent to the subscription administrators.
func (o VulnerabilityAssessmentRecurringScansPropertiesPtrOutput) EmailSubscriptionAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VulnerabilityAssessmentRecurringScansProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EmailSubscriptionAdmins
	}).(pulumi.BoolPtrOutput)
}

// Specifies an array of e-mail addresses to which the scan notification is sent.
func (o VulnerabilityAssessmentRecurringScansPropertiesPtrOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VulnerabilityAssessmentRecurringScansProperties) []string {
		if v == nil {
			return nil
		}
		return v.Emails
	}).(pulumi.StringArrayOutput)
}

// Recurring scans state.
func (o VulnerabilityAssessmentRecurringScansPropertiesPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VulnerabilityAssessmentRecurringScansProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Properties of a Vulnerability Assessment recurring scans.
type VulnerabilityAssessmentRecurringScansPropertiesResponse struct {
	// Specifies that the schedule scan notification will be is sent to the subscription administrators.
	EmailSubscriptionAdmins *bool `pulumi:"emailSubscriptionAdmins"`
	// Specifies an array of e-mail addresses to which the scan notification is sent.
	Emails []string `pulumi:"emails"`
	// Recurring scans state.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// VulnerabilityAssessmentRecurringScansPropertiesResponseInput is an input type that accepts VulnerabilityAssessmentRecurringScansPropertiesResponseArgs and VulnerabilityAssessmentRecurringScansPropertiesResponseOutput values.
// You can construct a concrete instance of `VulnerabilityAssessmentRecurringScansPropertiesResponseInput` via:
//
//          VulnerabilityAssessmentRecurringScansPropertiesResponseArgs{...}
type VulnerabilityAssessmentRecurringScansPropertiesResponseInput interface {
	pulumi.Input

	ToVulnerabilityAssessmentRecurringScansPropertiesResponseOutput() VulnerabilityAssessmentRecurringScansPropertiesResponseOutput
	ToVulnerabilityAssessmentRecurringScansPropertiesResponseOutputWithContext(context.Context) VulnerabilityAssessmentRecurringScansPropertiesResponseOutput
}

// Properties of a Vulnerability Assessment recurring scans.
type VulnerabilityAssessmentRecurringScansPropertiesResponseArgs struct {
	// Specifies that the schedule scan notification will be is sent to the subscription administrators.
	EmailSubscriptionAdmins pulumi.BoolPtrInput `pulumi:"emailSubscriptionAdmins"`
	// Specifies an array of e-mail addresses to which the scan notification is sent.
	Emails pulumi.StringArrayInput `pulumi:"emails"`
	// Recurring scans state.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
}

func (VulnerabilityAssessmentRecurringScansPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityAssessmentRecurringScansPropertiesResponse)(nil)).Elem()
}

func (i VulnerabilityAssessmentRecurringScansPropertiesResponseArgs) ToVulnerabilityAssessmentRecurringScansPropertiesResponseOutput() VulnerabilityAssessmentRecurringScansPropertiesResponseOutput {
	return i.ToVulnerabilityAssessmentRecurringScansPropertiesResponseOutputWithContext(context.Background())
}

func (i VulnerabilityAssessmentRecurringScansPropertiesResponseArgs) ToVulnerabilityAssessmentRecurringScansPropertiesResponseOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityAssessmentRecurringScansPropertiesResponseOutput)
}

func (i VulnerabilityAssessmentRecurringScansPropertiesResponseArgs) ToVulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput() VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
	return i.ToVulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i VulnerabilityAssessmentRecurringScansPropertiesResponseArgs) ToVulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityAssessmentRecurringScansPropertiesResponseOutput).ToVulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutputWithContext(ctx)
}

// VulnerabilityAssessmentRecurringScansPropertiesResponsePtrInput is an input type that accepts VulnerabilityAssessmentRecurringScansPropertiesResponseArgs, VulnerabilityAssessmentRecurringScansPropertiesResponsePtr and VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `VulnerabilityAssessmentRecurringScansPropertiesResponsePtrInput` via:
//
//          VulnerabilityAssessmentRecurringScansPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type VulnerabilityAssessmentRecurringScansPropertiesResponsePtrInput interface {
	pulumi.Input

	ToVulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput() VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput
	ToVulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutputWithContext(context.Context) VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput
}

type vulnerabilityAssessmentRecurringScansPropertiesResponsePtrType VulnerabilityAssessmentRecurringScansPropertiesResponseArgs

func VulnerabilityAssessmentRecurringScansPropertiesResponsePtr(v *VulnerabilityAssessmentRecurringScansPropertiesResponseArgs) VulnerabilityAssessmentRecurringScansPropertiesResponsePtrInput {
	return (*vulnerabilityAssessmentRecurringScansPropertiesResponsePtrType)(v)
}

func (*vulnerabilityAssessmentRecurringScansPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityAssessmentRecurringScansPropertiesResponse)(nil)).Elem()
}

func (i *vulnerabilityAssessmentRecurringScansPropertiesResponsePtrType) ToVulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput() VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
	return i.ToVulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *vulnerabilityAssessmentRecurringScansPropertiesResponsePtrType) ToVulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput)
}

// Properties of a Vulnerability Assessment recurring scans.
type VulnerabilityAssessmentRecurringScansPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VulnerabilityAssessmentRecurringScansPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityAssessmentRecurringScansPropertiesResponse)(nil)).Elem()
}

func (o VulnerabilityAssessmentRecurringScansPropertiesResponseOutput) ToVulnerabilityAssessmentRecurringScansPropertiesResponseOutput() VulnerabilityAssessmentRecurringScansPropertiesResponseOutput {
	return o
}

func (o VulnerabilityAssessmentRecurringScansPropertiesResponseOutput) ToVulnerabilityAssessmentRecurringScansPropertiesResponseOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesResponseOutput {
	return o
}

func (o VulnerabilityAssessmentRecurringScansPropertiesResponseOutput) ToVulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput() VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
	return o.ToVulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o VulnerabilityAssessmentRecurringScansPropertiesResponseOutput) ToVulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VulnerabilityAssessmentRecurringScansPropertiesResponse) *VulnerabilityAssessmentRecurringScansPropertiesResponse {
		return &v
	}).(VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput)
}

// Specifies that the schedule scan notification will be is sent to the subscription administrators.
func (o VulnerabilityAssessmentRecurringScansPropertiesResponseOutput) EmailSubscriptionAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VulnerabilityAssessmentRecurringScansPropertiesResponse) *bool {
		return v.EmailSubscriptionAdmins
	}).(pulumi.BoolPtrOutput)
}

// Specifies an array of e-mail addresses to which the scan notification is sent.
func (o VulnerabilityAssessmentRecurringScansPropertiesResponseOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VulnerabilityAssessmentRecurringScansPropertiesResponse) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

// Recurring scans state.
func (o VulnerabilityAssessmentRecurringScansPropertiesResponseOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VulnerabilityAssessmentRecurringScansPropertiesResponse) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityAssessmentRecurringScansPropertiesResponse)(nil)).Elem()
}

func (o VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput) ToVulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput() VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
	return o
}

func (o VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput) ToVulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
	return o
}

func (o VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput) Elem() VulnerabilityAssessmentRecurringScansPropertiesResponseOutput {
	return o.ApplyT(func(v *VulnerabilityAssessmentRecurringScansPropertiesResponse) VulnerabilityAssessmentRecurringScansPropertiesResponse {
		return *v
	}).(VulnerabilityAssessmentRecurringScansPropertiesResponseOutput)
}

// Specifies that the schedule scan notification will be is sent to the subscription administrators.
func (o VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput) EmailSubscriptionAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VulnerabilityAssessmentRecurringScansPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EmailSubscriptionAdmins
	}).(pulumi.BoolPtrOutput)
}

// Specifies an array of e-mail addresses to which the scan notification is sent.
func (o VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VulnerabilityAssessmentRecurringScansPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Emails
	}).(pulumi.StringArrayOutput)
}

// Recurring scans state.
func (o VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VulnerabilityAssessmentRecurringScansPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseVulnerabilityAssessmentRuleBaselineItemOutput{})
	pulumi.RegisterOutputType(DatabaseVulnerabilityAssessmentRuleBaselineItemArrayOutput{})
	pulumi.RegisterOutputType(DatabaseVulnerabilityAssessmentRuleBaselineItemResponseOutput{})
	pulumi.RegisterOutputType(DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput{})
	pulumi.RegisterOutputType(JobScheduleOutput{})
	pulumi.RegisterOutputType(JobSchedulePtrOutput{})
	pulumi.RegisterOutputType(JobScheduleResponseOutput{})
	pulumi.RegisterOutputType(JobScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(JobStepActionOutput{})
	pulumi.RegisterOutputType(JobStepActionPtrOutput{})
	pulumi.RegisterOutputType(JobStepActionResponseOutput{})
	pulumi.RegisterOutputType(JobStepActionResponsePtrOutput{})
	pulumi.RegisterOutputType(JobStepExecutionOptionsOutput{})
	pulumi.RegisterOutputType(JobStepExecutionOptionsPtrOutput{})
	pulumi.RegisterOutputType(JobStepExecutionOptionsResponseOutput{})
	pulumi.RegisterOutputType(JobStepExecutionOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(JobStepOutputOutput{})
	pulumi.RegisterOutputType(JobStepOutputPtrOutput{})
	pulumi.RegisterOutputType(JobStepOutputResponseOutput{})
	pulumi.RegisterOutputType(JobStepOutputResponsePtrOutput{})
	pulumi.RegisterOutputType(JobTargetOutput{})
	pulumi.RegisterOutputType(JobTargetArrayOutput{})
	pulumi.RegisterOutputType(JobTargetResponseOutput{})
	pulumi.RegisterOutputType(JobTargetResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(VulnerabilityAssessmentRecurringScansPropertiesOutput{})
	pulumi.RegisterOutputType(VulnerabilityAssessmentRecurringScansPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VulnerabilityAssessmentRecurringScansPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput{})
}
