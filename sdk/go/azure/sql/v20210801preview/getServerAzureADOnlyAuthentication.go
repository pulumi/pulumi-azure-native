// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210801preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Azure Active Directory only authentication.
func LookupServerAzureADOnlyAuthentication(ctx *pulumi.Context, args *LookupServerAzureADOnlyAuthenticationArgs, opts ...pulumi.InvokeOption) (*LookupServerAzureADOnlyAuthenticationResult, error) {
	var rv LookupServerAzureADOnlyAuthenticationResult
	err := ctx.Invoke("azure-native:sql/v20210801preview:getServerAzureADOnlyAuthentication", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupServerAzureADOnlyAuthenticationArgs struct {
	// The name of server azure active directory only authentication.
	AuthenticationName string `pulumi:"authenticationName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName string `pulumi:"serverName"`
}

// Azure Active Directory only authentication.
type LookupServerAzureADOnlyAuthenticationResult struct {
	// Azure Active Directory only Authentication enabled.
	AzureADOnlyAuthentication bool `pulumi:"azureADOnlyAuthentication"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupServerAzureADOnlyAuthenticationOutput(ctx *pulumi.Context, args LookupServerAzureADOnlyAuthenticationOutputArgs, opts ...pulumi.InvokeOption) LookupServerAzureADOnlyAuthenticationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServerAzureADOnlyAuthenticationResult, error) {
			args := v.(LookupServerAzureADOnlyAuthenticationArgs)
			r, err := LookupServerAzureADOnlyAuthentication(ctx, &args, opts...)
			var s LookupServerAzureADOnlyAuthenticationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServerAzureADOnlyAuthenticationResultOutput)
}

type LookupServerAzureADOnlyAuthenticationOutputArgs struct {
	// The name of server azure active directory only authentication.
	AuthenticationName pulumi.StringInput `pulumi:"authenticationName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName pulumi.StringInput `pulumi:"serverName"`
}

func (LookupServerAzureADOnlyAuthenticationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerAzureADOnlyAuthenticationArgs)(nil)).Elem()
}

// Azure Active Directory only authentication.
type LookupServerAzureADOnlyAuthenticationResultOutput struct{ *pulumi.OutputState }

func (LookupServerAzureADOnlyAuthenticationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerAzureADOnlyAuthenticationResult)(nil)).Elem()
}

func (o LookupServerAzureADOnlyAuthenticationResultOutput) ToLookupServerAzureADOnlyAuthenticationResultOutput() LookupServerAzureADOnlyAuthenticationResultOutput {
	return o
}

func (o LookupServerAzureADOnlyAuthenticationResultOutput) ToLookupServerAzureADOnlyAuthenticationResultOutputWithContext(ctx context.Context) LookupServerAzureADOnlyAuthenticationResultOutput {
	return o
}

// Azure Active Directory only Authentication enabled.
func (o LookupServerAzureADOnlyAuthenticationResultOutput) AzureADOnlyAuthentication() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServerAzureADOnlyAuthenticationResult) bool { return v.AzureADOnlyAuthentication }).(pulumi.BoolOutput)
}

// Resource ID.
func (o LookupServerAzureADOnlyAuthenticationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerAzureADOnlyAuthenticationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupServerAzureADOnlyAuthenticationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerAzureADOnlyAuthenticationResult) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type.
func (o LookupServerAzureADOnlyAuthenticationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerAzureADOnlyAuthenticationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerAzureADOnlyAuthenticationResultOutput{})
}
