// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210801preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A database vulnerability assessment rule baseline.
func LookupDatabaseVulnerabilityAssessmentRuleBaseline(ctx *pulumi.Context, args *LookupDatabaseVulnerabilityAssessmentRuleBaselineArgs, opts ...pulumi.InvokeOption) (*LookupDatabaseVulnerabilityAssessmentRuleBaselineResult, error) {
	var rv LookupDatabaseVulnerabilityAssessmentRuleBaselineResult
	err := ctx.Invoke("azure-native:sql/v20210801preview:getDatabaseVulnerabilityAssessmentRuleBaseline", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDatabaseVulnerabilityAssessmentRuleBaselineArgs struct {
	// The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
	BaselineName string `pulumi:"baselineName"`
	// The name of the database for which the vulnerability assessment rule baseline is defined.
	DatabaseName string `pulumi:"databaseName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The vulnerability assessment rule ID.
	RuleId string `pulumi:"ruleId"`
	// The name of the server.
	ServerName string `pulumi:"serverName"`
	// The name of the vulnerability assessment.
	VulnerabilityAssessmentName string `pulumi:"vulnerabilityAssessmentName"`
}

// A database vulnerability assessment rule baseline.
type LookupDatabaseVulnerabilityAssessmentRuleBaselineResult struct {
	// The rule baseline result
	BaselineResults []DatabaseVulnerabilityAssessmentRuleBaselineItemResponse `pulumi:"baselineResults"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupDatabaseVulnerabilityAssessmentRuleBaselineOutput(ctx *pulumi.Context, args LookupDatabaseVulnerabilityAssessmentRuleBaselineOutputArgs, opts ...pulumi.InvokeOption) LookupDatabaseVulnerabilityAssessmentRuleBaselineResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatabaseVulnerabilityAssessmentRuleBaselineResult, error) {
			args := v.(LookupDatabaseVulnerabilityAssessmentRuleBaselineArgs)
			r, err := LookupDatabaseVulnerabilityAssessmentRuleBaseline(ctx, &args, opts...)
			var s LookupDatabaseVulnerabilityAssessmentRuleBaselineResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDatabaseVulnerabilityAssessmentRuleBaselineResultOutput)
}

type LookupDatabaseVulnerabilityAssessmentRuleBaselineOutputArgs struct {
	// The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
	BaselineName pulumi.StringInput `pulumi:"baselineName"`
	// The name of the database for which the vulnerability assessment rule baseline is defined.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The vulnerability assessment rule ID.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// The name of the server.
	ServerName pulumi.StringInput `pulumi:"serverName"`
	// The name of the vulnerability assessment.
	VulnerabilityAssessmentName pulumi.StringInput `pulumi:"vulnerabilityAssessmentName"`
}

func (LookupDatabaseVulnerabilityAssessmentRuleBaselineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseVulnerabilityAssessmentRuleBaselineArgs)(nil)).Elem()
}

// A database vulnerability assessment rule baseline.
type LookupDatabaseVulnerabilityAssessmentRuleBaselineResultOutput struct{ *pulumi.OutputState }

func (LookupDatabaseVulnerabilityAssessmentRuleBaselineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseVulnerabilityAssessmentRuleBaselineResult)(nil)).Elem()
}

func (o LookupDatabaseVulnerabilityAssessmentRuleBaselineResultOutput) ToLookupDatabaseVulnerabilityAssessmentRuleBaselineResultOutput() LookupDatabaseVulnerabilityAssessmentRuleBaselineResultOutput {
	return o
}

func (o LookupDatabaseVulnerabilityAssessmentRuleBaselineResultOutput) ToLookupDatabaseVulnerabilityAssessmentRuleBaselineResultOutputWithContext(ctx context.Context) LookupDatabaseVulnerabilityAssessmentRuleBaselineResultOutput {
	return o
}

// The rule baseline result
func (o LookupDatabaseVulnerabilityAssessmentRuleBaselineResultOutput) BaselineResults() DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput {
	return o.ApplyT(func(v LookupDatabaseVulnerabilityAssessmentRuleBaselineResult) []DatabaseVulnerabilityAssessmentRuleBaselineItemResponse {
		return v.BaselineResults
	}).(DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput)
}

// Resource ID.
func (o LookupDatabaseVulnerabilityAssessmentRuleBaselineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseVulnerabilityAssessmentRuleBaselineResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupDatabaseVulnerabilityAssessmentRuleBaselineResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseVulnerabilityAssessmentRuleBaselineResult) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type.
func (o LookupDatabaseVulnerabilityAssessmentRuleBaselineResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseVulnerabilityAssessmentRuleBaselineResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatabaseVulnerabilityAssessmentRuleBaselineResultOutput{})
}
