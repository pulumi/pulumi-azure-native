


package v20210801preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ManagedDatabaseVulnerabilityAssessmentRuleBaseline struct {
	pulumi.CustomResourceState

	BaselineResults DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput `pulumi:"baselineResults"`
	Name            pulumi.StringOutput                                                `pulumi:"name"`
	Type            pulumi.StringOutput                                                `pulumi:"type"`
}


func NewManagedDatabaseVulnerabilityAssessmentRuleBaseline(ctx *pulumi.Context,
	name string, args *ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs, opts ...pulumi.ResourceOption) (*ManagedDatabaseVulnerabilityAssessmentRuleBaseline, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BaselineResults == nil {
		return nil, errors.New("invalid value for required argument 'BaselineResults'")
	}
	if args.DatabaseName == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseName'")
	}
	if args.ManagedInstanceName == nil {
		return nil, errors.New("invalid value for required argument 'ManagedInstanceName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.RuleId == nil {
		return nil, errors.New("invalid value for required argument 'RuleId'")
	}
	if args.VulnerabilityAssessmentName == nil {
		return nil, errors.New("invalid value for required argument 'VulnerabilityAssessmentName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:sql:ManagedDatabaseVulnerabilityAssessmentRuleBaseline"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20171001preview:ManagedDatabaseVulnerabilityAssessmentRuleBaseline"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20200202preview:ManagedDatabaseVulnerabilityAssessmentRuleBaseline"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20200801preview:ManagedDatabaseVulnerabilityAssessmentRuleBaseline"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20201101preview:ManagedDatabaseVulnerabilityAssessmentRuleBaseline"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20210201preview:ManagedDatabaseVulnerabilityAssessmentRuleBaseline"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20210501preview:ManagedDatabaseVulnerabilityAssessmentRuleBaseline"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20211101:ManagedDatabaseVulnerabilityAssessmentRuleBaseline"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20211101preview:ManagedDatabaseVulnerabilityAssessmentRuleBaseline"),
		},
		{
			Type: pulumi.String("azure-native:sql/v20220201preview:ManagedDatabaseVulnerabilityAssessmentRuleBaseline"),
		},
	})
	opts = append(opts, aliases)
	var resource ManagedDatabaseVulnerabilityAssessmentRuleBaseline
	err := ctx.RegisterResource("azure-native:sql/v20210801preview:ManagedDatabaseVulnerabilityAssessmentRuleBaseline", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}



func GetManagedDatabaseVulnerabilityAssessmentRuleBaseline(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedDatabaseVulnerabilityAssessmentRuleBaselineState, opts ...pulumi.ResourceOption) (*ManagedDatabaseVulnerabilityAssessmentRuleBaseline, error) {
	var resource ManagedDatabaseVulnerabilityAssessmentRuleBaseline
	err := ctx.ReadResource("azure-native:sql/v20210801preview:ManagedDatabaseVulnerabilityAssessmentRuleBaseline", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}


type managedDatabaseVulnerabilityAssessmentRuleBaselineState struct {
}

type ManagedDatabaseVulnerabilityAssessmentRuleBaselineState struct {
}

func (ManagedDatabaseVulnerabilityAssessmentRuleBaselineState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedDatabaseVulnerabilityAssessmentRuleBaselineState)(nil)).Elem()
}

type managedDatabaseVulnerabilityAssessmentRuleBaselineArgs struct {
	BaselineName                *string                                           `pulumi:"baselineName"`
	BaselineResults             []DatabaseVulnerabilityAssessmentRuleBaselineItem `pulumi:"baselineResults"`
	DatabaseName                string                                            `pulumi:"databaseName"`
	ManagedInstanceName         string                                            `pulumi:"managedInstanceName"`
	ResourceGroupName           string                                            `pulumi:"resourceGroupName"`
	RuleId                      string                                            `pulumi:"ruleId"`
	VulnerabilityAssessmentName string                                            `pulumi:"vulnerabilityAssessmentName"`
}


type ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs struct {
	BaselineName                pulumi.StringPtrInput
	BaselineResults             DatabaseVulnerabilityAssessmentRuleBaselineItemArrayInput
	DatabaseName                pulumi.StringInput
	ManagedInstanceName         pulumi.StringInput
	ResourceGroupName           pulumi.StringInput
	RuleId                      pulumi.StringInput
	VulnerabilityAssessmentName pulumi.StringInput
}

func (ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedDatabaseVulnerabilityAssessmentRuleBaselineArgs)(nil)).Elem()
}

type ManagedDatabaseVulnerabilityAssessmentRuleBaselineInput interface {
	pulumi.Input

	ToManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput() ManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput
	ToManagedDatabaseVulnerabilityAssessmentRuleBaselineOutputWithContext(ctx context.Context) ManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput
}

func (*ManagedDatabaseVulnerabilityAssessmentRuleBaseline) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseVulnerabilityAssessmentRuleBaseline)(nil)).Elem()
}

func (i *ManagedDatabaseVulnerabilityAssessmentRuleBaseline) ToManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput() ManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput {
	return i.ToManagedDatabaseVulnerabilityAssessmentRuleBaselineOutputWithContext(context.Background())
}

func (i *ManagedDatabaseVulnerabilityAssessmentRuleBaseline) ToManagedDatabaseVulnerabilityAssessmentRuleBaselineOutputWithContext(ctx context.Context) ManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput)
}

type ManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseVulnerabilityAssessmentRuleBaseline)(nil)).Elem()
}

func (o ManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput) ToManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput() ManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput {
	return o
}

func (o ManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput) ToManagedDatabaseVulnerabilityAssessmentRuleBaselineOutputWithContext(ctx context.Context) ManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput {
	return o
}

func (o ManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput) BaselineResults() DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput {
	return o.ApplyT(func(v *ManagedDatabaseVulnerabilityAssessmentRuleBaseline) DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput {
		return v.BaselineResults
	}).(DatabaseVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput)
}

func (o ManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedDatabaseVulnerabilityAssessmentRuleBaseline) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedDatabaseVulnerabilityAssessmentRuleBaseline) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ManagedDatabaseVulnerabilityAssessmentRuleBaselineOutput{})
}
