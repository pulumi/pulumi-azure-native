// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211001preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Company information of the user to be passed to partners.
type CompanyInfo struct {
	// Business of the company
	Business *string `pulumi:"business"`
	// Country of the company location.
	Country *string `pulumi:"country"`
	// Domain of the company
	Domain *string `pulumi:"domain"`
	// Number of employees in the company
	EmployeesNumber *string `pulumi:"employeesNumber"`
	// State of the company location.
	State *string `pulumi:"state"`
}

// CompanyInfoInput is an input type that accepts CompanyInfoArgs and CompanyInfoOutput values.
// You can construct a concrete instance of `CompanyInfoInput` via:
//
//	CompanyInfoArgs{...}
type CompanyInfoInput interface {
	pulumi.Input

	ToCompanyInfoOutput() CompanyInfoOutput
	ToCompanyInfoOutputWithContext(context.Context) CompanyInfoOutput
}

// Company information of the user to be passed to partners.
type CompanyInfoArgs struct {
	// Business of the company
	Business pulumi.StringPtrInput `pulumi:"business"`
	// Country of the company location.
	Country pulumi.StringPtrInput `pulumi:"country"`
	// Domain of the company
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Number of employees in the company
	EmployeesNumber pulumi.StringPtrInput `pulumi:"employeesNumber"`
	// State of the company location.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (CompanyInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CompanyInfo)(nil)).Elem()
}

func (i CompanyInfoArgs) ToCompanyInfoOutput() CompanyInfoOutput {
	return i.ToCompanyInfoOutputWithContext(context.Background())
}

func (i CompanyInfoArgs) ToCompanyInfoOutputWithContext(ctx context.Context) CompanyInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompanyInfoOutput)
}

func (i CompanyInfoArgs) ToCompanyInfoPtrOutput() CompanyInfoPtrOutput {
	return i.ToCompanyInfoPtrOutputWithContext(context.Background())
}

func (i CompanyInfoArgs) ToCompanyInfoPtrOutputWithContext(ctx context.Context) CompanyInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompanyInfoOutput).ToCompanyInfoPtrOutputWithContext(ctx)
}

// CompanyInfoPtrInput is an input type that accepts CompanyInfoArgs, CompanyInfoPtr and CompanyInfoPtrOutput values.
// You can construct a concrete instance of `CompanyInfoPtrInput` via:
//
//	        CompanyInfoArgs{...}
//
//	or:
//
//	        nil
type CompanyInfoPtrInput interface {
	pulumi.Input

	ToCompanyInfoPtrOutput() CompanyInfoPtrOutput
	ToCompanyInfoPtrOutputWithContext(context.Context) CompanyInfoPtrOutput
}

type companyInfoPtrType CompanyInfoArgs

func CompanyInfoPtr(v *CompanyInfoArgs) CompanyInfoPtrInput {
	return (*companyInfoPtrType)(v)
}

func (*companyInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CompanyInfo)(nil)).Elem()
}

func (i *companyInfoPtrType) ToCompanyInfoPtrOutput() CompanyInfoPtrOutput {
	return i.ToCompanyInfoPtrOutputWithContext(context.Background())
}

func (i *companyInfoPtrType) ToCompanyInfoPtrOutputWithContext(ctx context.Context) CompanyInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompanyInfoPtrOutput)
}

// Company information of the user to be passed to partners.
type CompanyInfoOutput struct{ *pulumi.OutputState }

func (CompanyInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CompanyInfo)(nil)).Elem()
}

func (o CompanyInfoOutput) ToCompanyInfoOutput() CompanyInfoOutput {
	return o
}

func (o CompanyInfoOutput) ToCompanyInfoOutputWithContext(ctx context.Context) CompanyInfoOutput {
	return o
}

func (o CompanyInfoOutput) ToCompanyInfoPtrOutput() CompanyInfoPtrOutput {
	return o.ToCompanyInfoPtrOutputWithContext(context.Background())
}

func (o CompanyInfoOutput) ToCompanyInfoPtrOutputWithContext(ctx context.Context) CompanyInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CompanyInfo) *CompanyInfo {
		return &v
	}).(CompanyInfoPtrOutput)
}

// Business of the company
func (o CompanyInfoOutput) Business() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompanyInfo) *string { return v.Business }).(pulumi.StringPtrOutput)
}

// Country of the company location.
func (o CompanyInfoOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompanyInfo) *string { return v.Country }).(pulumi.StringPtrOutput)
}

// Domain of the company
func (o CompanyInfoOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompanyInfo) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Number of employees in the company
func (o CompanyInfoOutput) EmployeesNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompanyInfo) *string { return v.EmployeesNumber }).(pulumi.StringPtrOutput)
}

// State of the company location.
func (o CompanyInfoOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompanyInfo) *string { return v.State }).(pulumi.StringPtrOutput)
}

type CompanyInfoPtrOutput struct{ *pulumi.OutputState }

func (CompanyInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CompanyInfo)(nil)).Elem()
}

func (o CompanyInfoPtrOutput) ToCompanyInfoPtrOutput() CompanyInfoPtrOutput {
	return o
}

func (o CompanyInfoPtrOutput) ToCompanyInfoPtrOutputWithContext(ctx context.Context) CompanyInfoPtrOutput {
	return o
}

func (o CompanyInfoPtrOutput) Elem() CompanyInfoOutput {
	return o.ApplyT(func(v *CompanyInfo) CompanyInfo {
		if v != nil {
			return *v
		}
		var ret CompanyInfo
		return ret
	}).(CompanyInfoOutput)
}

// Business of the company
func (o CompanyInfoPtrOutput) Business() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CompanyInfo) *string {
		if v == nil {
			return nil
		}
		return v.Business
	}).(pulumi.StringPtrOutput)
}

// Country of the company location.
func (o CompanyInfoPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CompanyInfo) *string {
		if v == nil {
			return nil
		}
		return v.Country
	}).(pulumi.StringPtrOutput)
}

// Domain of the company
func (o CompanyInfoPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CompanyInfo) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// Number of employees in the company
func (o CompanyInfoPtrOutput) EmployeesNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CompanyInfo) *string {
		if v == nil {
			return nil
		}
		return v.EmployeesNumber
	}).(pulumi.StringPtrOutput)
}

// State of the company location.
func (o CompanyInfoPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CompanyInfo) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Details of the user's elastic deployment associated with the monitor resource.
type ElasticCloudDeploymentResponse struct {
	// Associated Azure subscription Id for the elastic deployment.
	AzureSubscriptionId string `pulumi:"azureSubscriptionId"`
	// Elastic deployment Id
	DeploymentId string `pulumi:"deploymentId"`
	// Region where Deployment at Elastic side took place.
	ElasticsearchRegion string `pulumi:"elasticsearchRegion"`
	// Elasticsearch ingestion endpoint of the Elastic deployment.
	ElasticsearchServiceUrl string `pulumi:"elasticsearchServiceUrl"`
	// Kibana endpoint of the Elastic deployment.
	KibanaServiceUrl string `pulumi:"kibanaServiceUrl"`
	// Kibana dashboard sso URL of the Elastic deployment.
	KibanaSsoUrl string `pulumi:"kibanaSsoUrl"`
	// Elastic deployment name
	Name string `pulumi:"name"`
}

// Details of the user's elastic deployment associated with the monitor resource.
type ElasticCloudDeploymentResponseOutput struct{ *pulumi.OutputState }

func (ElasticCloudDeploymentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticCloudDeploymentResponse)(nil)).Elem()
}

func (o ElasticCloudDeploymentResponseOutput) ToElasticCloudDeploymentResponseOutput() ElasticCloudDeploymentResponseOutput {
	return o
}

func (o ElasticCloudDeploymentResponseOutput) ToElasticCloudDeploymentResponseOutputWithContext(ctx context.Context) ElasticCloudDeploymentResponseOutput {
	return o
}

// Associated Azure subscription Id for the elastic deployment.
func (o ElasticCloudDeploymentResponseOutput) AzureSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticCloudDeploymentResponse) string { return v.AzureSubscriptionId }).(pulumi.StringOutput)
}

// Elastic deployment Id
func (o ElasticCloudDeploymentResponseOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticCloudDeploymentResponse) string { return v.DeploymentId }).(pulumi.StringOutput)
}

// Region where Deployment at Elastic side took place.
func (o ElasticCloudDeploymentResponseOutput) ElasticsearchRegion() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticCloudDeploymentResponse) string { return v.ElasticsearchRegion }).(pulumi.StringOutput)
}

// Elasticsearch ingestion endpoint of the Elastic deployment.
func (o ElasticCloudDeploymentResponseOutput) ElasticsearchServiceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticCloudDeploymentResponse) string { return v.ElasticsearchServiceUrl }).(pulumi.StringOutput)
}

// Kibana endpoint of the Elastic deployment.
func (o ElasticCloudDeploymentResponseOutput) KibanaServiceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticCloudDeploymentResponse) string { return v.KibanaServiceUrl }).(pulumi.StringOutput)
}

// Kibana dashboard sso URL of the Elastic deployment.
func (o ElasticCloudDeploymentResponseOutput) KibanaSsoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticCloudDeploymentResponse) string { return v.KibanaSsoUrl }).(pulumi.StringOutput)
}

// Elastic deployment name
func (o ElasticCloudDeploymentResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticCloudDeploymentResponse) string { return v.Name }).(pulumi.StringOutput)
}

type ElasticCloudDeploymentResponsePtrOutput struct{ *pulumi.OutputState }

func (ElasticCloudDeploymentResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticCloudDeploymentResponse)(nil)).Elem()
}

func (o ElasticCloudDeploymentResponsePtrOutput) ToElasticCloudDeploymentResponsePtrOutput() ElasticCloudDeploymentResponsePtrOutput {
	return o
}

func (o ElasticCloudDeploymentResponsePtrOutput) ToElasticCloudDeploymentResponsePtrOutputWithContext(ctx context.Context) ElasticCloudDeploymentResponsePtrOutput {
	return o
}

func (o ElasticCloudDeploymentResponsePtrOutput) Elem() ElasticCloudDeploymentResponseOutput {
	return o.ApplyT(func(v *ElasticCloudDeploymentResponse) ElasticCloudDeploymentResponse {
		if v != nil {
			return *v
		}
		var ret ElasticCloudDeploymentResponse
		return ret
	}).(ElasticCloudDeploymentResponseOutput)
}

// Associated Azure subscription Id for the elastic deployment.
func (o ElasticCloudDeploymentResponsePtrOutput) AzureSubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticCloudDeploymentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AzureSubscriptionId
	}).(pulumi.StringPtrOutput)
}

// Elastic deployment Id
func (o ElasticCloudDeploymentResponsePtrOutput) DeploymentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticCloudDeploymentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DeploymentId
	}).(pulumi.StringPtrOutput)
}

// Region where Deployment at Elastic side took place.
func (o ElasticCloudDeploymentResponsePtrOutput) ElasticsearchRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticCloudDeploymentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ElasticsearchRegion
	}).(pulumi.StringPtrOutput)
}

// Elasticsearch ingestion endpoint of the Elastic deployment.
func (o ElasticCloudDeploymentResponsePtrOutput) ElasticsearchServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticCloudDeploymentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ElasticsearchServiceUrl
	}).(pulumi.StringPtrOutput)
}

// Kibana endpoint of the Elastic deployment.
func (o ElasticCloudDeploymentResponsePtrOutput) KibanaServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticCloudDeploymentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KibanaServiceUrl
	}).(pulumi.StringPtrOutput)
}

// Kibana dashboard sso URL of the Elastic deployment.
func (o ElasticCloudDeploymentResponsePtrOutput) KibanaSsoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticCloudDeploymentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KibanaSsoUrl
	}).(pulumi.StringPtrOutput)
}

// Elastic deployment name
func (o ElasticCloudDeploymentResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticCloudDeploymentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Details of the user's elastic account.
type ElasticCloudUserResponse struct {
	// Elastic cloud default dashboard sso URL of the Elastic user account.
	ElasticCloudSsoDefaultUrl string `pulumi:"elasticCloudSsoDefaultUrl"`
	// Email of the Elastic User Account.
	EmailAddress string `pulumi:"emailAddress"`
	// User Id of the elastic account of the User.
	Id string `pulumi:"id"`
}

// Details of the user's elastic account.
type ElasticCloudUserResponseOutput struct{ *pulumi.OutputState }

func (ElasticCloudUserResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticCloudUserResponse)(nil)).Elem()
}

func (o ElasticCloudUserResponseOutput) ToElasticCloudUserResponseOutput() ElasticCloudUserResponseOutput {
	return o
}

func (o ElasticCloudUserResponseOutput) ToElasticCloudUserResponseOutputWithContext(ctx context.Context) ElasticCloudUserResponseOutput {
	return o
}

// Elastic cloud default dashboard sso URL of the Elastic user account.
func (o ElasticCloudUserResponseOutput) ElasticCloudSsoDefaultUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticCloudUserResponse) string { return v.ElasticCloudSsoDefaultUrl }).(pulumi.StringOutput)
}

// Email of the Elastic User Account.
func (o ElasticCloudUserResponseOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticCloudUserResponse) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// User Id of the elastic account of the User.
func (o ElasticCloudUserResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticCloudUserResponse) string { return v.Id }).(pulumi.StringOutput)
}

type ElasticCloudUserResponsePtrOutput struct{ *pulumi.OutputState }

func (ElasticCloudUserResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticCloudUserResponse)(nil)).Elem()
}

func (o ElasticCloudUserResponsePtrOutput) ToElasticCloudUserResponsePtrOutput() ElasticCloudUserResponsePtrOutput {
	return o
}

func (o ElasticCloudUserResponsePtrOutput) ToElasticCloudUserResponsePtrOutputWithContext(ctx context.Context) ElasticCloudUserResponsePtrOutput {
	return o
}

func (o ElasticCloudUserResponsePtrOutput) Elem() ElasticCloudUserResponseOutput {
	return o.ApplyT(func(v *ElasticCloudUserResponse) ElasticCloudUserResponse {
		if v != nil {
			return *v
		}
		var ret ElasticCloudUserResponse
		return ret
	}).(ElasticCloudUserResponseOutput)
}

// Elastic cloud default dashboard sso URL of the Elastic user account.
func (o ElasticCloudUserResponsePtrOutput) ElasticCloudSsoDefaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticCloudUserResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ElasticCloudSsoDefaultUrl
	}).(pulumi.StringPtrOutput)
}

// Email of the Elastic User Account.
func (o ElasticCloudUserResponsePtrOutput) EmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticCloudUserResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EmailAddress
	}).(pulumi.StringPtrOutput)
}

// User Id of the elastic account of the User.
func (o ElasticCloudUserResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticCloudUserResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Elastic Resource Properties.
type ElasticPropertiesResponse struct {
	// Details of the elastic cloud deployment.
	ElasticCloudDeployment *ElasticCloudDeploymentResponse `pulumi:"elasticCloudDeployment"`
	// Details of the user's elastic account.
	ElasticCloudUser *ElasticCloudUserResponse `pulumi:"elasticCloudUser"`
}

// Elastic Resource Properties.
type ElasticPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ElasticPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticPropertiesResponse)(nil)).Elem()
}

func (o ElasticPropertiesResponseOutput) ToElasticPropertiesResponseOutput() ElasticPropertiesResponseOutput {
	return o
}

func (o ElasticPropertiesResponseOutput) ToElasticPropertiesResponseOutputWithContext(ctx context.Context) ElasticPropertiesResponseOutput {
	return o
}

// Details of the elastic cloud deployment.
func (o ElasticPropertiesResponseOutput) ElasticCloudDeployment() ElasticCloudDeploymentResponsePtrOutput {
	return o.ApplyT(func(v ElasticPropertiesResponse) *ElasticCloudDeploymentResponse { return v.ElasticCloudDeployment }).(ElasticCloudDeploymentResponsePtrOutput)
}

// Details of the user's elastic account.
func (o ElasticPropertiesResponseOutput) ElasticCloudUser() ElasticCloudUserResponsePtrOutput {
	return o.ApplyT(func(v ElasticPropertiesResponse) *ElasticCloudUserResponse { return v.ElasticCloudUser }).(ElasticCloudUserResponsePtrOutput)
}

type ElasticPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ElasticPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticPropertiesResponse)(nil)).Elem()
}

func (o ElasticPropertiesResponsePtrOutput) ToElasticPropertiesResponsePtrOutput() ElasticPropertiesResponsePtrOutput {
	return o
}

func (o ElasticPropertiesResponsePtrOutput) ToElasticPropertiesResponsePtrOutputWithContext(ctx context.Context) ElasticPropertiesResponsePtrOutput {
	return o
}

func (o ElasticPropertiesResponsePtrOutput) Elem() ElasticPropertiesResponseOutput {
	return o.ApplyT(func(v *ElasticPropertiesResponse) ElasticPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ElasticPropertiesResponse
		return ret
	}).(ElasticPropertiesResponseOutput)
}

// Details of the elastic cloud deployment.
func (o ElasticPropertiesResponsePtrOutput) ElasticCloudDeployment() ElasticCloudDeploymentResponsePtrOutput {
	return o.ApplyT(func(v *ElasticPropertiesResponse) *ElasticCloudDeploymentResponse {
		if v == nil {
			return nil
		}
		return v.ElasticCloudDeployment
	}).(ElasticCloudDeploymentResponsePtrOutput)
}

// Details of the user's elastic account.
func (o ElasticPropertiesResponsePtrOutput) ElasticCloudUser() ElasticCloudUserResponsePtrOutput {
	return o.ApplyT(func(v *ElasticPropertiesResponse) *ElasticCloudUserResponse {
		if v == nil {
			return nil
		}
		return v.ElasticCloudUser
	}).(ElasticCloudUserResponsePtrOutput)
}

// The definition of a filtering tag. Filtering tags are used for capturing resources and include/exclude them from being monitored.
type FilteringTag struct {
	// Valid actions for a filtering tag.
	Action *string `pulumi:"action"`
	// The name (also known as the key) of the tag.
	Name *string `pulumi:"name"`
	// The value of the tag.
	Value *string `pulumi:"value"`
}

// FilteringTagInput is an input type that accepts FilteringTagArgs and FilteringTagOutput values.
// You can construct a concrete instance of `FilteringTagInput` via:
//
//	FilteringTagArgs{...}
type FilteringTagInput interface {
	pulumi.Input

	ToFilteringTagOutput() FilteringTagOutput
	ToFilteringTagOutputWithContext(context.Context) FilteringTagOutput
}

// The definition of a filtering tag. Filtering tags are used for capturing resources and include/exclude them from being monitored.
type FilteringTagArgs struct {
	// Valid actions for a filtering tag.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The name (also known as the key) of the tag.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the tag.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (FilteringTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilteringTag)(nil)).Elem()
}

func (i FilteringTagArgs) ToFilteringTagOutput() FilteringTagOutput {
	return i.ToFilteringTagOutputWithContext(context.Background())
}

func (i FilteringTagArgs) ToFilteringTagOutputWithContext(ctx context.Context) FilteringTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilteringTagOutput)
}

// FilteringTagArrayInput is an input type that accepts FilteringTagArray and FilteringTagArrayOutput values.
// You can construct a concrete instance of `FilteringTagArrayInput` via:
//
//	FilteringTagArray{ FilteringTagArgs{...} }
type FilteringTagArrayInput interface {
	pulumi.Input

	ToFilteringTagArrayOutput() FilteringTagArrayOutput
	ToFilteringTagArrayOutputWithContext(context.Context) FilteringTagArrayOutput
}

type FilteringTagArray []FilteringTagInput

func (FilteringTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilteringTag)(nil)).Elem()
}

func (i FilteringTagArray) ToFilteringTagArrayOutput() FilteringTagArrayOutput {
	return i.ToFilteringTagArrayOutputWithContext(context.Background())
}

func (i FilteringTagArray) ToFilteringTagArrayOutputWithContext(ctx context.Context) FilteringTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilteringTagArrayOutput)
}

// The definition of a filtering tag. Filtering tags are used for capturing resources and include/exclude them from being monitored.
type FilteringTagOutput struct{ *pulumi.OutputState }

func (FilteringTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilteringTag)(nil)).Elem()
}

func (o FilteringTagOutput) ToFilteringTagOutput() FilteringTagOutput {
	return o
}

func (o FilteringTagOutput) ToFilteringTagOutputWithContext(ctx context.Context) FilteringTagOutput {
	return o
}

// Valid actions for a filtering tag.
func (o FilteringTagOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilteringTag) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The name (also known as the key) of the tag.
func (o FilteringTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilteringTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the tag.
func (o FilteringTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilteringTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type FilteringTagArrayOutput struct{ *pulumi.OutputState }

func (FilteringTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilteringTag)(nil)).Elem()
}

func (o FilteringTagArrayOutput) ToFilteringTagArrayOutput() FilteringTagArrayOutput {
	return o
}

func (o FilteringTagArrayOutput) ToFilteringTagArrayOutputWithContext(ctx context.Context) FilteringTagArrayOutput {
	return o
}

func (o FilteringTagArrayOutput) Index(i pulumi.IntInput) FilteringTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilteringTag {
		return vs[0].([]FilteringTag)[vs[1].(int)]
	}).(FilteringTagOutput)
}

// The definition of a filtering tag. Filtering tags are used for capturing resources and include/exclude them from being monitored.
type FilteringTagResponse struct {
	// Valid actions for a filtering tag.
	Action *string `pulumi:"action"`
	// The name (also known as the key) of the tag.
	Name *string `pulumi:"name"`
	// The value of the tag.
	Value *string `pulumi:"value"`
}

// The definition of a filtering tag. Filtering tags are used for capturing resources and include/exclude them from being monitored.
type FilteringTagResponseOutput struct{ *pulumi.OutputState }

func (FilteringTagResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilteringTagResponse)(nil)).Elem()
}

func (o FilteringTagResponseOutput) ToFilteringTagResponseOutput() FilteringTagResponseOutput {
	return o
}

func (o FilteringTagResponseOutput) ToFilteringTagResponseOutputWithContext(ctx context.Context) FilteringTagResponseOutput {
	return o
}

// Valid actions for a filtering tag.
func (o FilteringTagResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilteringTagResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The name (also known as the key) of the tag.
func (o FilteringTagResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilteringTagResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the tag.
func (o FilteringTagResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilteringTagResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type FilteringTagResponseArrayOutput struct{ *pulumi.OutputState }

func (FilteringTagResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilteringTagResponse)(nil)).Elem()
}

func (o FilteringTagResponseArrayOutput) ToFilteringTagResponseArrayOutput() FilteringTagResponseArrayOutput {
	return o
}

func (o FilteringTagResponseArrayOutput) ToFilteringTagResponseArrayOutputWithContext(ctx context.Context) FilteringTagResponseArrayOutput {
	return o
}

func (o FilteringTagResponseArrayOutput) Index(i pulumi.IntInput) FilteringTagResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilteringTagResponse {
		return vs[0].([]FilteringTagResponse)[vs[1].(int)]
	}).(FilteringTagResponseOutput)
}

// Identity properties.
type IdentityProperties struct {
	// Managed identity type.
	Type *string `pulumi:"type"`
}

// IdentityPropertiesInput is an input type that accepts IdentityPropertiesArgs and IdentityPropertiesOutput values.
// You can construct a concrete instance of `IdentityPropertiesInput` via:
//
//	IdentityPropertiesArgs{...}
type IdentityPropertiesInput interface {
	pulumi.Input

	ToIdentityPropertiesOutput() IdentityPropertiesOutput
	ToIdentityPropertiesOutputWithContext(context.Context) IdentityPropertiesOutput
}

// Identity properties.
type IdentityPropertiesArgs struct {
	// Managed identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProperties)(nil)).Elem()
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesOutput() IdentityPropertiesOutput {
	return i.ToIdentityPropertiesOutputWithContext(context.Background())
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesOutputWithContext(ctx context.Context) IdentityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesOutput)
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return i.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesOutput).ToIdentityPropertiesPtrOutputWithContext(ctx)
}

// IdentityPropertiesPtrInput is an input type that accepts IdentityPropertiesArgs, IdentityPropertiesPtr and IdentityPropertiesPtrOutput values.
// You can construct a concrete instance of `IdentityPropertiesPtrInput` via:
//
//	        IdentityPropertiesArgs{...}
//
//	or:
//
//	        nil
type IdentityPropertiesPtrInput interface {
	pulumi.Input

	ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput
	ToIdentityPropertiesPtrOutputWithContext(context.Context) IdentityPropertiesPtrOutput
}

type identityPropertiesPtrType IdentityPropertiesArgs

func IdentityPropertiesPtr(v *IdentityPropertiesArgs) IdentityPropertiesPtrInput {
	return (*identityPropertiesPtrType)(v)
}

func (*identityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProperties)(nil)).Elem()
}

func (i *identityPropertiesPtrType) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return i.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i *identityPropertiesPtrType) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesPtrOutput)
}

// Identity properties.
type IdentityPropertiesOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProperties)(nil)).Elem()
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesOutput() IdentityPropertiesOutput {
	return o
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesOutputWithContext(ctx context.Context) IdentityPropertiesOutput {
	return o
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return o.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityProperties) *IdentityProperties {
		return &v
	}).(IdentityPropertiesPtrOutput)
}

// Managed identity type.
func (o IdentityPropertiesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProperties)(nil)).Elem()
}

func (o IdentityPropertiesPtrOutput) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return o
}

func (o IdentityPropertiesPtrOutput) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return o
}

func (o IdentityPropertiesPtrOutput) Elem() IdentityPropertiesOutput {
	return o.ApplyT(func(v *IdentityProperties) IdentityProperties {
		if v != nil {
			return *v
		}
		var ret IdentityProperties
		return ret
	}).(IdentityPropertiesOutput)
}

// Managed identity type.
func (o IdentityPropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity properties.
type IdentityPropertiesResponse struct {
	// The identity ID.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// Managed identity type.
	Type *string `pulumi:"type"`
}

// Identity properties.
type IdentityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesResponse)(nil)).Elem()
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponseOutput() IdentityPropertiesResponseOutput {
	return o
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponseOutputWithContext(ctx context.Context) IdentityPropertiesResponseOutput {
	return o
}

// The identity ID.
func (o IdentityPropertiesResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o IdentityPropertiesResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Managed identity type.
func (o IdentityPropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPropertiesResponse)(nil)).Elem()
}

func (o IdentityPropertiesResponsePtrOutput) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return o
}

func (o IdentityPropertiesResponsePtrOutput) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return o
}

func (o IdentityPropertiesResponsePtrOutput) Elem() IdentityPropertiesResponseOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) IdentityPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret IdentityPropertiesResponse
		return ret
	}).(IdentityPropertiesResponseOutput)
}

// The identity ID.
func (o IdentityPropertiesResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityPropertiesResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Managed identity type.
func (o IdentityPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Set of rules for sending logs for the Monitor resource.
type LogRules struct {
	// List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.
	FilteringTags []FilteringTag `pulumi:"filteringTags"`
	// Flag specifying if AAD logs should be sent for the Monitor resource.
	SendAadLogs *bool `pulumi:"sendAadLogs"`
	// Flag specifying if activity logs from Azure resources should be sent for the Monitor resource.
	SendActivityLogs *bool `pulumi:"sendActivityLogs"`
	// Flag specifying if subscription logs should be sent for the Monitor resource.
	SendSubscriptionLogs *bool `pulumi:"sendSubscriptionLogs"`
}

// LogRulesInput is an input type that accepts LogRulesArgs and LogRulesOutput values.
// You can construct a concrete instance of `LogRulesInput` via:
//
//	LogRulesArgs{...}
type LogRulesInput interface {
	pulumi.Input

	ToLogRulesOutput() LogRulesOutput
	ToLogRulesOutputWithContext(context.Context) LogRulesOutput
}

// Set of rules for sending logs for the Monitor resource.
type LogRulesArgs struct {
	// List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.
	FilteringTags FilteringTagArrayInput `pulumi:"filteringTags"`
	// Flag specifying if AAD logs should be sent for the Monitor resource.
	SendAadLogs pulumi.BoolPtrInput `pulumi:"sendAadLogs"`
	// Flag specifying if activity logs from Azure resources should be sent for the Monitor resource.
	SendActivityLogs pulumi.BoolPtrInput `pulumi:"sendActivityLogs"`
	// Flag specifying if subscription logs should be sent for the Monitor resource.
	SendSubscriptionLogs pulumi.BoolPtrInput `pulumi:"sendSubscriptionLogs"`
}

func (LogRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogRules)(nil)).Elem()
}

func (i LogRulesArgs) ToLogRulesOutput() LogRulesOutput {
	return i.ToLogRulesOutputWithContext(context.Background())
}

func (i LogRulesArgs) ToLogRulesOutputWithContext(ctx context.Context) LogRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogRulesOutput)
}

func (i LogRulesArgs) ToLogRulesPtrOutput() LogRulesPtrOutput {
	return i.ToLogRulesPtrOutputWithContext(context.Background())
}

func (i LogRulesArgs) ToLogRulesPtrOutputWithContext(ctx context.Context) LogRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogRulesOutput).ToLogRulesPtrOutputWithContext(ctx)
}

// LogRulesPtrInput is an input type that accepts LogRulesArgs, LogRulesPtr and LogRulesPtrOutput values.
// You can construct a concrete instance of `LogRulesPtrInput` via:
//
//	        LogRulesArgs{...}
//
//	or:
//
//	        nil
type LogRulesPtrInput interface {
	pulumi.Input

	ToLogRulesPtrOutput() LogRulesPtrOutput
	ToLogRulesPtrOutputWithContext(context.Context) LogRulesPtrOutput
}

type logRulesPtrType LogRulesArgs

func LogRulesPtr(v *LogRulesArgs) LogRulesPtrInput {
	return (*logRulesPtrType)(v)
}

func (*logRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogRules)(nil)).Elem()
}

func (i *logRulesPtrType) ToLogRulesPtrOutput() LogRulesPtrOutput {
	return i.ToLogRulesPtrOutputWithContext(context.Background())
}

func (i *logRulesPtrType) ToLogRulesPtrOutputWithContext(ctx context.Context) LogRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogRulesPtrOutput)
}

// Set of rules for sending logs for the Monitor resource.
type LogRulesOutput struct{ *pulumi.OutputState }

func (LogRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogRules)(nil)).Elem()
}

func (o LogRulesOutput) ToLogRulesOutput() LogRulesOutput {
	return o
}

func (o LogRulesOutput) ToLogRulesOutputWithContext(ctx context.Context) LogRulesOutput {
	return o
}

func (o LogRulesOutput) ToLogRulesPtrOutput() LogRulesPtrOutput {
	return o.ToLogRulesPtrOutputWithContext(context.Background())
}

func (o LogRulesOutput) ToLogRulesPtrOutputWithContext(ctx context.Context) LogRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogRules) *LogRules {
		return &v
	}).(LogRulesPtrOutput)
}

// List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.
func (o LogRulesOutput) FilteringTags() FilteringTagArrayOutput {
	return o.ApplyT(func(v LogRules) []FilteringTag { return v.FilteringTags }).(FilteringTagArrayOutput)
}

// Flag specifying if AAD logs should be sent for the Monitor resource.
func (o LogRulesOutput) SendAadLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogRules) *bool { return v.SendAadLogs }).(pulumi.BoolPtrOutput)
}

// Flag specifying if activity logs from Azure resources should be sent for the Monitor resource.
func (o LogRulesOutput) SendActivityLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogRules) *bool { return v.SendActivityLogs }).(pulumi.BoolPtrOutput)
}

// Flag specifying if subscription logs should be sent for the Monitor resource.
func (o LogRulesOutput) SendSubscriptionLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogRules) *bool { return v.SendSubscriptionLogs }).(pulumi.BoolPtrOutput)
}

type LogRulesPtrOutput struct{ *pulumi.OutputState }

func (LogRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogRules)(nil)).Elem()
}

func (o LogRulesPtrOutput) ToLogRulesPtrOutput() LogRulesPtrOutput {
	return o
}

func (o LogRulesPtrOutput) ToLogRulesPtrOutputWithContext(ctx context.Context) LogRulesPtrOutput {
	return o
}

func (o LogRulesPtrOutput) Elem() LogRulesOutput {
	return o.ApplyT(func(v *LogRules) LogRules {
		if v != nil {
			return *v
		}
		var ret LogRules
		return ret
	}).(LogRulesOutput)
}

// List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.
func (o LogRulesPtrOutput) FilteringTags() FilteringTagArrayOutput {
	return o.ApplyT(func(v *LogRules) []FilteringTag {
		if v == nil {
			return nil
		}
		return v.FilteringTags
	}).(FilteringTagArrayOutput)
}

// Flag specifying if AAD logs should be sent for the Monitor resource.
func (o LogRulesPtrOutput) SendAadLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogRules) *bool {
		if v == nil {
			return nil
		}
		return v.SendAadLogs
	}).(pulumi.BoolPtrOutput)
}

// Flag specifying if activity logs from Azure resources should be sent for the Monitor resource.
func (o LogRulesPtrOutput) SendActivityLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogRules) *bool {
		if v == nil {
			return nil
		}
		return v.SendActivityLogs
	}).(pulumi.BoolPtrOutput)
}

// Flag specifying if subscription logs should be sent for the Monitor resource.
func (o LogRulesPtrOutput) SendSubscriptionLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogRules) *bool {
		if v == nil {
			return nil
		}
		return v.SendSubscriptionLogs
	}).(pulumi.BoolPtrOutput)
}

// Set of rules for sending logs for the Monitor resource.
type LogRulesResponse struct {
	// List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.
	FilteringTags []FilteringTagResponse `pulumi:"filteringTags"`
	// Flag specifying if AAD logs should be sent for the Monitor resource.
	SendAadLogs *bool `pulumi:"sendAadLogs"`
	// Flag specifying if activity logs from Azure resources should be sent for the Monitor resource.
	SendActivityLogs *bool `pulumi:"sendActivityLogs"`
	// Flag specifying if subscription logs should be sent for the Monitor resource.
	SendSubscriptionLogs *bool `pulumi:"sendSubscriptionLogs"`
}

// Set of rules for sending logs for the Monitor resource.
type LogRulesResponseOutput struct{ *pulumi.OutputState }

func (LogRulesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogRulesResponse)(nil)).Elem()
}

func (o LogRulesResponseOutput) ToLogRulesResponseOutput() LogRulesResponseOutput {
	return o
}

func (o LogRulesResponseOutput) ToLogRulesResponseOutputWithContext(ctx context.Context) LogRulesResponseOutput {
	return o
}

// List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.
func (o LogRulesResponseOutput) FilteringTags() FilteringTagResponseArrayOutput {
	return o.ApplyT(func(v LogRulesResponse) []FilteringTagResponse { return v.FilteringTags }).(FilteringTagResponseArrayOutput)
}

// Flag specifying if AAD logs should be sent for the Monitor resource.
func (o LogRulesResponseOutput) SendAadLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogRulesResponse) *bool { return v.SendAadLogs }).(pulumi.BoolPtrOutput)
}

// Flag specifying if activity logs from Azure resources should be sent for the Monitor resource.
func (o LogRulesResponseOutput) SendActivityLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogRulesResponse) *bool { return v.SendActivityLogs }).(pulumi.BoolPtrOutput)
}

// Flag specifying if subscription logs should be sent for the Monitor resource.
func (o LogRulesResponseOutput) SendSubscriptionLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogRulesResponse) *bool { return v.SendSubscriptionLogs }).(pulumi.BoolPtrOutput)
}

type LogRulesResponsePtrOutput struct{ *pulumi.OutputState }

func (LogRulesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogRulesResponse)(nil)).Elem()
}

func (o LogRulesResponsePtrOutput) ToLogRulesResponsePtrOutput() LogRulesResponsePtrOutput {
	return o
}

func (o LogRulesResponsePtrOutput) ToLogRulesResponsePtrOutputWithContext(ctx context.Context) LogRulesResponsePtrOutput {
	return o
}

func (o LogRulesResponsePtrOutput) Elem() LogRulesResponseOutput {
	return o.ApplyT(func(v *LogRulesResponse) LogRulesResponse {
		if v != nil {
			return *v
		}
		var ret LogRulesResponse
		return ret
	}).(LogRulesResponseOutput)
}

// List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.
func (o LogRulesResponsePtrOutput) FilteringTags() FilteringTagResponseArrayOutput {
	return o.ApplyT(func(v *LogRulesResponse) []FilteringTagResponse {
		if v == nil {
			return nil
		}
		return v.FilteringTags
	}).(FilteringTagResponseArrayOutput)
}

// Flag specifying if AAD logs should be sent for the Monitor resource.
func (o LogRulesResponsePtrOutput) SendAadLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogRulesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SendAadLogs
	}).(pulumi.BoolPtrOutput)
}

// Flag specifying if activity logs from Azure resources should be sent for the Monitor resource.
func (o LogRulesResponsePtrOutput) SendActivityLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogRulesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SendActivityLogs
	}).(pulumi.BoolPtrOutput)
}

// Flag specifying if subscription logs should be sent for the Monitor resource.
func (o LogRulesResponsePtrOutput) SendSubscriptionLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogRulesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SendSubscriptionLogs
	}).(pulumi.BoolPtrOutput)
}

// Properties specific to the monitor resource.
type MonitorProperties struct {
	// Flag specifying if the resource monitoring is enabled or disabled.
	MonitoringStatus *string `pulumi:"monitoringStatus"`
	// Provisioning state of the monitor resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// User information.
	UserInfo *UserInfo `pulumi:"userInfo"`
	// Version of elastic of the monitor resource
	Version *string `pulumi:"version"`
}

// MonitorPropertiesInput is an input type that accepts MonitorPropertiesArgs and MonitorPropertiesOutput values.
// You can construct a concrete instance of `MonitorPropertiesInput` via:
//
//	MonitorPropertiesArgs{...}
type MonitorPropertiesInput interface {
	pulumi.Input

	ToMonitorPropertiesOutput() MonitorPropertiesOutput
	ToMonitorPropertiesOutputWithContext(context.Context) MonitorPropertiesOutput
}

// Properties specific to the monitor resource.
type MonitorPropertiesArgs struct {
	// Flag specifying if the resource monitoring is enabled or disabled.
	MonitoringStatus pulumi.StringPtrInput `pulumi:"monitoringStatus"`
	// Provisioning state of the monitor resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// User information.
	UserInfo UserInfoPtrInput `pulumi:"userInfo"`
	// Version of elastic of the monitor resource
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (MonitorPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorProperties)(nil)).Elem()
}

func (i MonitorPropertiesArgs) ToMonitorPropertiesOutput() MonitorPropertiesOutput {
	return i.ToMonitorPropertiesOutputWithContext(context.Background())
}

func (i MonitorPropertiesArgs) ToMonitorPropertiesOutputWithContext(ctx context.Context) MonitorPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorPropertiesOutput)
}

func (i MonitorPropertiesArgs) ToMonitorPropertiesPtrOutput() MonitorPropertiesPtrOutput {
	return i.ToMonitorPropertiesPtrOutputWithContext(context.Background())
}

func (i MonitorPropertiesArgs) ToMonitorPropertiesPtrOutputWithContext(ctx context.Context) MonitorPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorPropertiesOutput).ToMonitorPropertiesPtrOutputWithContext(ctx)
}

// MonitorPropertiesPtrInput is an input type that accepts MonitorPropertiesArgs, MonitorPropertiesPtr and MonitorPropertiesPtrOutput values.
// You can construct a concrete instance of `MonitorPropertiesPtrInput` via:
//
//	        MonitorPropertiesArgs{...}
//
//	or:
//
//	        nil
type MonitorPropertiesPtrInput interface {
	pulumi.Input

	ToMonitorPropertiesPtrOutput() MonitorPropertiesPtrOutput
	ToMonitorPropertiesPtrOutputWithContext(context.Context) MonitorPropertiesPtrOutput
}

type monitorPropertiesPtrType MonitorPropertiesArgs

func MonitorPropertiesPtr(v *MonitorPropertiesArgs) MonitorPropertiesPtrInput {
	return (*monitorPropertiesPtrType)(v)
}

func (*monitorPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorProperties)(nil)).Elem()
}

func (i *monitorPropertiesPtrType) ToMonitorPropertiesPtrOutput() MonitorPropertiesPtrOutput {
	return i.ToMonitorPropertiesPtrOutputWithContext(context.Background())
}

func (i *monitorPropertiesPtrType) ToMonitorPropertiesPtrOutputWithContext(ctx context.Context) MonitorPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorPropertiesPtrOutput)
}

// Properties specific to the monitor resource.
type MonitorPropertiesOutput struct{ *pulumi.OutputState }

func (MonitorPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorProperties)(nil)).Elem()
}

func (o MonitorPropertiesOutput) ToMonitorPropertiesOutput() MonitorPropertiesOutput {
	return o
}

func (o MonitorPropertiesOutput) ToMonitorPropertiesOutputWithContext(ctx context.Context) MonitorPropertiesOutput {
	return o
}

func (o MonitorPropertiesOutput) ToMonitorPropertiesPtrOutput() MonitorPropertiesPtrOutput {
	return o.ToMonitorPropertiesPtrOutputWithContext(context.Background())
}

func (o MonitorPropertiesOutput) ToMonitorPropertiesPtrOutputWithContext(ctx context.Context) MonitorPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorProperties) *MonitorProperties {
		return &v
	}).(MonitorPropertiesPtrOutput)
}

// Flag specifying if the resource monitoring is enabled or disabled.
func (o MonitorPropertiesOutput) MonitoringStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorProperties) *string { return v.MonitoringStatus }).(pulumi.StringPtrOutput)
}

// Provisioning state of the monitor resource.
func (o MonitorPropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// User information.
func (o MonitorPropertiesOutput) UserInfo() UserInfoPtrOutput {
	return o.ApplyT(func(v MonitorProperties) *UserInfo { return v.UserInfo }).(UserInfoPtrOutput)
}

// Version of elastic of the monitor resource
func (o MonitorPropertiesOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorProperties) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type MonitorPropertiesPtrOutput struct{ *pulumi.OutputState }

func (MonitorPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorProperties)(nil)).Elem()
}

func (o MonitorPropertiesPtrOutput) ToMonitorPropertiesPtrOutput() MonitorPropertiesPtrOutput {
	return o
}

func (o MonitorPropertiesPtrOutput) ToMonitorPropertiesPtrOutputWithContext(ctx context.Context) MonitorPropertiesPtrOutput {
	return o
}

func (o MonitorPropertiesPtrOutput) Elem() MonitorPropertiesOutput {
	return o.ApplyT(func(v *MonitorProperties) MonitorProperties {
		if v != nil {
			return *v
		}
		var ret MonitorProperties
		return ret
	}).(MonitorPropertiesOutput)
}

// Flag specifying if the resource monitoring is enabled or disabled.
func (o MonitorPropertiesPtrOutput) MonitoringStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorProperties) *string {
		if v == nil {
			return nil
		}
		return v.MonitoringStatus
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the monitor resource.
func (o MonitorPropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// User information.
func (o MonitorPropertiesPtrOutput) UserInfo() UserInfoPtrOutput {
	return o.ApplyT(func(v *MonitorProperties) *UserInfo {
		if v == nil {
			return nil
		}
		return v.UserInfo
	}).(UserInfoPtrOutput)
}

// Version of elastic of the monitor resource
func (o MonitorPropertiesPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorProperties) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Properties specific to the monitor resource.
type MonitorPropertiesResponse struct {
	// Elastic cloud properties.
	ElasticProperties     *ElasticPropertiesResponse `pulumi:"elasticProperties"`
	LiftrResourceCategory string                     `pulumi:"liftrResourceCategory"`
	// The priority of the resource.
	LiftrResourcePreference int `pulumi:"liftrResourcePreference"`
	// Flag specifying if the resource monitoring is enabled or disabled.
	MonitoringStatus *string `pulumi:"monitoringStatus"`
	// Provisioning state of the monitor resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Version of elastic of the monitor resource
	Version *string `pulumi:"version"`
}

// Properties specific to the monitor resource.
type MonitorPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MonitorPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorPropertiesResponse)(nil)).Elem()
}

func (o MonitorPropertiesResponseOutput) ToMonitorPropertiesResponseOutput() MonitorPropertiesResponseOutput {
	return o
}

func (o MonitorPropertiesResponseOutput) ToMonitorPropertiesResponseOutputWithContext(ctx context.Context) MonitorPropertiesResponseOutput {
	return o
}

// Elastic cloud properties.
func (o MonitorPropertiesResponseOutput) ElasticProperties() ElasticPropertiesResponsePtrOutput {
	return o.ApplyT(func(v MonitorPropertiesResponse) *ElasticPropertiesResponse { return v.ElasticProperties }).(ElasticPropertiesResponsePtrOutput)
}

func (o MonitorPropertiesResponseOutput) LiftrResourceCategory() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorPropertiesResponse) string { return v.LiftrResourceCategory }).(pulumi.StringOutput)
}

// The priority of the resource.
func (o MonitorPropertiesResponseOutput) LiftrResourcePreference() pulumi.IntOutput {
	return o.ApplyT(func(v MonitorPropertiesResponse) int { return v.LiftrResourcePreference }).(pulumi.IntOutput)
}

// Flag specifying if the resource monitoring is enabled or disabled.
func (o MonitorPropertiesResponseOutput) MonitoringStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorPropertiesResponse) *string { return v.MonitoringStatus }).(pulumi.StringPtrOutput)
}

// Provisioning state of the monitor resource.
func (o MonitorPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Version of elastic of the monitor resource
func (o MonitorPropertiesResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorPropertiesResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// The properties of a resource currently being monitored by the Elastic monitor resource.
type MonitoredResourceResponse struct {
	// The ARM id of the resource.
	Id *string `pulumi:"id"`
	// Reason for why the resource is sending logs (or why it is not sending).
	ReasonForLogsStatus *string `pulumi:"reasonForLogsStatus"`
	// Flag indicating the status of the resource for sending logs operation to Elastic.
	SendingLogs *string `pulumi:"sendingLogs"`
}

// The properties of a resource currently being monitored by the Elastic monitor resource.
type MonitoredResourceResponseOutput struct{ *pulumi.OutputState }

func (MonitoredResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredResourceResponse)(nil)).Elem()
}

func (o MonitoredResourceResponseOutput) ToMonitoredResourceResponseOutput() MonitoredResourceResponseOutput {
	return o
}

func (o MonitoredResourceResponseOutput) ToMonitoredResourceResponseOutputWithContext(ctx context.Context) MonitoredResourceResponseOutput {
	return o
}

// The ARM id of the resource.
func (o MonitoredResourceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoredResourceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Reason for why the resource is sending logs (or why it is not sending).
func (o MonitoredResourceResponseOutput) ReasonForLogsStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoredResourceResponse) *string { return v.ReasonForLogsStatus }).(pulumi.StringPtrOutput)
}

// Flag indicating the status of the resource for sending logs operation to Elastic.
func (o MonitoredResourceResponseOutput) SendingLogs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoredResourceResponse) *string { return v.SendingLogs }).(pulumi.StringPtrOutput)
}

type MonitoredResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (MonitoredResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoredResourceResponse)(nil)).Elem()
}

func (o MonitoredResourceResponseArrayOutput) ToMonitoredResourceResponseArrayOutput() MonitoredResourceResponseArrayOutput {
	return o
}

func (o MonitoredResourceResponseArrayOutput) ToMonitoredResourceResponseArrayOutputWithContext(ctx context.Context) MonitoredResourceResponseArrayOutput {
	return o
}

func (o MonitoredResourceResponseArrayOutput) Index(i pulumi.IntInput) MonitoredResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitoredResourceResponse {
		return vs[0].([]MonitoredResourceResponse)[vs[1].(int)]
	}).(MonitoredResourceResponseOutput)
}

// Definition of the properties for a TagRules resource.
type MonitoringTagRulesProperties struct {
	// Rules for sending logs.
	LogRules *LogRules `pulumi:"logRules"`
	// Provisioning state of the monitoring tag rules.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// MonitoringTagRulesPropertiesInput is an input type that accepts MonitoringTagRulesPropertiesArgs and MonitoringTagRulesPropertiesOutput values.
// You can construct a concrete instance of `MonitoringTagRulesPropertiesInput` via:
//
//	MonitoringTagRulesPropertiesArgs{...}
type MonitoringTagRulesPropertiesInput interface {
	pulumi.Input

	ToMonitoringTagRulesPropertiesOutput() MonitoringTagRulesPropertiesOutput
	ToMonitoringTagRulesPropertiesOutputWithContext(context.Context) MonitoringTagRulesPropertiesOutput
}

// Definition of the properties for a TagRules resource.
type MonitoringTagRulesPropertiesArgs struct {
	// Rules for sending logs.
	LogRules LogRulesPtrInput `pulumi:"logRules"`
	// Provisioning state of the monitoring tag rules.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (MonitoringTagRulesPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringTagRulesProperties)(nil)).Elem()
}

func (i MonitoringTagRulesPropertiesArgs) ToMonitoringTagRulesPropertiesOutput() MonitoringTagRulesPropertiesOutput {
	return i.ToMonitoringTagRulesPropertiesOutputWithContext(context.Background())
}

func (i MonitoringTagRulesPropertiesArgs) ToMonitoringTagRulesPropertiesOutputWithContext(ctx context.Context) MonitoringTagRulesPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringTagRulesPropertiesOutput)
}

func (i MonitoringTagRulesPropertiesArgs) ToMonitoringTagRulesPropertiesPtrOutput() MonitoringTagRulesPropertiesPtrOutput {
	return i.ToMonitoringTagRulesPropertiesPtrOutputWithContext(context.Background())
}

func (i MonitoringTagRulesPropertiesArgs) ToMonitoringTagRulesPropertiesPtrOutputWithContext(ctx context.Context) MonitoringTagRulesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringTagRulesPropertiesOutput).ToMonitoringTagRulesPropertiesPtrOutputWithContext(ctx)
}

// MonitoringTagRulesPropertiesPtrInput is an input type that accepts MonitoringTagRulesPropertiesArgs, MonitoringTagRulesPropertiesPtr and MonitoringTagRulesPropertiesPtrOutput values.
// You can construct a concrete instance of `MonitoringTagRulesPropertiesPtrInput` via:
//
//	        MonitoringTagRulesPropertiesArgs{...}
//
//	or:
//
//	        nil
type MonitoringTagRulesPropertiesPtrInput interface {
	pulumi.Input

	ToMonitoringTagRulesPropertiesPtrOutput() MonitoringTagRulesPropertiesPtrOutput
	ToMonitoringTagRulesPropertiesPtrOutputWithContext(context.Context) MonitoringTagRulesPropertiesPtrOutput
}

type monitoringTagRulesPropertiesPtrType MonitoringTagRulesPropertiesArgs

func MonitoringTagRulesPropertiesPtr(v *MonitoringTagRulesPropertiesArgs) MonitoringTagRulesPropertiesPtrInput {
	return (*monitoringTagRulesPropertiesPtrType)(v)
}

func (*monitoringTagRulesPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringTagRulesProperties)(nil)).Elem()
}

func (i *monitoringTagRulesPropertiesPtrType) ToMonitoringTagRulesPropertiesPtrOutput() MonitoringTagRulesPropertiesPtrOutput {
	return i.ToMonitoringTagRulesPropertiesPtrOutputWithContext(context.Background())
}

func (i *monitoringTagRulesPropertiesPtrType) ToMonitoringTagRulesPropertiesPtrOutputWithContext(ctx context.Context) MonitoringTagRulesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringTagRulesPropertiesPtrOutput)
}

// Definition of the properties for a TagRules resource.
type MonitoringTagRulesPropertiesOutput struct{ *pulumi.OutputState }

func (MonitoringTagRulesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringTagRulesProperties)(nil)).Elem()
}

func (o MonitoringTagRulesPropertiesOutput) ToMonitoringTagRulesPropertiesOutput() MonitoringTagRulesPropertiesOutput {
	return o
}

func (o MonitoringTagRulesPropertiesOutput) ToMonitoringTagRulesPropertiesOutputWithContext(ctx context.Context) MonitoringTagRulesPropertiesOutput {
	return o
}

func (o MonitoringTagRulesPropertiesOutput) ToMonitoringTagRulesPropertiesPtrOutput() MonitoringTagRulesPropertiesPtrOutput {
	return o.ToMonitoringTagRulesPropertiesPtrOutputWithContext(context.Background())
}

func (o MonitoringTagRulesPropertiesOutput) ToMonitoringTagRulesPropertiesPtrOutputWithContext(ctx context.Context) MonitoringTagRulesPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringTagRulesProperties) *MonitoringTagRulesProperties {
		return &v
	}).(MonitoringTagRulesPropertiesPtrOutput)
}

// Rules for sending logs.
func (o MonitoringTagRulesPropertiesOutput) LogRules() LogRulesPtrOutput {
	return o.ApplyT(func(v MonitoringTagRulesProperties) *LogRules { return v.LogRules }).(LogRulesPtrOutput)
}

// Provisioning state of the monitoring tag rules.
func (o MonitoringTagRulesPropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringTagRulesProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type MonitoringTagRulesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (MonitoringTagRulesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringTagRulesProperties)(nil)).Elem()
}

func (o MonitoringTagRulesPropertiesPtrOutput) ToMonitoringTagRulesPropertiesPtrOutput() MonitoringTagRulesPropertiesPtrOutput {
	return o
}

func (o MonitoringTagRulesPropertiesPtrOutput) ToMonitoringTagRulesPropertiesPtrOutputWithContext(ctx context.Context) MonitoringTagRulesPropertiesPtrOutput {
	return o
}

func (o MonitoringTagRulesPropertiesPtrOutput) Elem() MonitoringTagRulesPropertiesOutput {
	return o.ApplyT(func(v *MonitoringTagRulesProperties) MonitoringTagRulesProperties {
		if v != nil {
			return *v
		}
		var ret MonitoringTagRulesProperties
		return ret
	}).(MonitoringTagRulesPropertiesOutput)
}

// Rules for sending logs.
func (o MonitoringTagRulesPropertiesPtrOutput) LogRules() LogRulesPtrOutput {
	return o.ApplyT(func(v *MonitoringTagRulesProperties) *LogRules {
		if v == nil {
			return nil
		}
		return v.LogRules
	}).(LogRulesPtrOutput)
}

// Provisioning state of the monitoring tag rules.
func (o MonitoringTagRulesPropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringTagRulesProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Definition of the properties for a TagRules resource.
type MonitoringTagRulesPropertiesResponse struct {
	// Rules for sending logs.
	LogRules *LogRulesResponse `pulumi:"logRules"`
	// Provisioning state of the monitoring tag rules.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// Definition of the properties for a TagRules resource.
type MonitoringTagRulesPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MonitoringTagRulesPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringTagRulesPropertiesResponse)(nil)).Elem()
}

func (o MonitoringTagRulesPropertiesResponseOutput) ToMonitoringTagRulesPropertiesResponseOutput() MonitoringTagRulesPropertiesResponseOutput {
	return o
}

func (o MonitoringTagRulesPropertiesResponseOutput) ToMonitoringTagRulesPropertiesResponseOutputWithContext(ctx context.Context) MonitoringTagRulesPropertiesResponseOutput {
	return o
}

// Rules for sending logs.
func (o MonitoringTagRulesPropertiesResponseOutput) LogRules() LogRulesResponsePtrOutput {
	return o.ApplyT(func(v MonitoringTagRulesPropertiesResponse) *LogRulesResponse { return v.LogRules }).(LogRulesResponsePtrOutput)
}

// Provisioning state of the monitoring tag rules.
func (o MonitoringTagRulesPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringTagRulesPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Microsoft.Elastic SKU.
type ResourceSku struct {
	// Name of the SKU.
	Name string `pulumi:"name"`
}

// ResourceSkuInput is an input type that accepts ResourceSkuArgs and ResourceSkuOutput values.
// You can construct a concrete instance of `ResourceSkuInput` via:
//
//	ResourceSkuArgs{...}
type ResourceSkuInput interface {
	pulumi.Input

	ToResourceSkuOutput() ResourceSkuOutput
	ToResourceSkuOutputWithContext(context.Context) ResourceSkuOutput
}

// Microsoft.Elastic SKU.
type ResourceSkuArgs struct {
	// Name of the SKU.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ResourceSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSku)(nil)).Elem()
}

func (i ResourceSkuArgs) ToResourceSkuOutput() ResourceSkuOutput {
	return i.ToResourceSkuOutputWithContext(context.Background())
}

func (i ResourceSkuArgs) ToResourceSkuOutputWithContext(ctx context.Context) ResourceSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSkuOutput)
}

func (i ResourceSkuArgs) ToResourceSkuPtrOutput() ResourceSkuPtrOutput {
	return i.ToResourceSkuPtrOutputWithContext(context.Background())
}

func (i ResourceSkuArgs) ToResourceSkuPtrOutputWithContext(ctx context.Context) ResourceSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSkuOutput).ToResourceSkuPtrOutputWithContext(ctx)
}

// ResourceSkuPtrInput is an input type that accepts ResourceSkuArgs, ResourceSkuPtr and ResourceSkuPtrOutput values.
// You can construct a concrete instance of `ResourceSkuPtrInput` via:
//
//	        ResourceSkuArgs{...}
//
//	or:
//
//	        nil
type ResourceSkuPtrInput interface {
	pulumi.Input

	ToResourceSkuPtrOutput() ResourceSkuPtrOutput
	ToResourceSkuPtrOutputWithContext(context.Context) ResourceSkuPtrOutput
}

type resourceSkuPtrType ResourceSkuArgs

func ResourceSkuPtr(v *ResourceSkuArgs) ResourceSkuPtrInput {
	return (*resourceSkuPtrType)(v)
}

func (*resourceSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSku)(nil)).Elem()
}

func (i *resourceSkuPtrType) ToResourceSkuPtrOutput() ResourceSkuPtrOutput {
	return i.ToResourceSkuPtrOutputWithContext(context.Background())
}

func (i *resourceSkuPtrType) ToResourceSkuPtrOutputWithContext(ctx context.Context) ResourceSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSkuPtrOutput)
}

// Microsoft.Elastic SKU.
type ResourceSkuOutput struct{ *pulumi.OutputState }

func (ResourceSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSku)(nil)).Elem()
}

func (o ResourceSkuOutput) ToResourceSkuOutput() ResourceSkuOutput {
	return o
}

func (o ResourceSkuOutput) ToResourceSkuOutputWithContext(ctx context.Context) ResourceSkuOutput {
	return o
}

func (o ResourceSkuOutput) ToResourceSkuPtrOutput() ResourceSkuPtrOutput {
	return o.ToResourceSkuPtrOutputWithContext(context.Background())
}

func (o ResourceSkuOutput) ToResourceSkuPtrOutputWithContext(ctx context.Context) ResourceSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceSku) *ResourceSku {
		return &v
	}).(ResourceSkuPtrOutput)
}

// Name of the SKU.
func (o ResourceSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceSku) string { return v.Name }).(pulumi.StringOutput)
}

type ResourceSkuPtrOutput struct{ *pulumi.OutputState }

func (ResourceSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSku)(nil)).Elem()
}

func (o ResourceSkuPtrOutput) ToResourceSkuPtrOutput() ResourceSkuPtrOutput {
	return o
}

func (o ResourceSkuPtrOutput) ToResourceSkuPtrOutputWithContext(ctx context.Context) ResourceSkuPtrOutput {
	return o
}

func (o ResourceSkuPtrOutput) Elem() ResourceSkuOutput {
	return o.ApplyT(func(v *ResourceSku) ResourceSku {
		if v != nil {
			return *v
		}
		var ret ResourceSku
		return ret
	}).(ResourceSkuOutput)
}

// Name of the SKU.
func (o ResourceSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Microsoft.Elastic SKU.
type ResourceSkuResponse struct {
	// Name of the SKU.
	Name string `pulumi:"name"`
}

// Microsoft.Elastic SKU.
type ResourceSkuResponseOutput struct{ *pulumi.OutputState }

func (ResourceSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSkuResponse)(nil)).Elem()
}

func (o ResourceSkuResponseOutput) ToResourceSkuResponseOutput() ResourceSkuResponseOutput {
	return o
}

func (o ResourceSkuResponseOutput) ToResourceSkuResponseOutputWithContext(ctx context.Context) ResourceSkuResponseOutput {
	return o
}

// Name of the SKU.
func (o ResourceSkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceSkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

type ResourceSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSkuResponse)(nil)).Elem()
}

func (o ResourceSkuResponsePtrOutput) ToResourceSkuResponsePtrOutput() ResourceSkuResponsePtrOutput {
	return o
}

func (o ResourceSkuResponsePtrOutput) ToResourceSkuResponsePtrOutputWithContext(ctx context.Context) ResourceSkuResponsePtrOutput {
	return o
}

func (o ResourceSkuResponsePtrOutput) Elem() ResourceSkuResponseOutput {
	return o.ApplyT(func(v *ResourceSkuResponse) ResourceSkuResponse {
		if v != nil {
			return *v
		}
		var ret ResourceSkuResponse
		return ret
	}).(ResourceSkuResponseOutput)
}

// Name of the SKU.
func (o ResourceSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// User Information to be passed to partners.
type UserInfo struct {
	// Company information of the user to be passed to partners.
	CompanyInfo *CompanyInfo `pulumi:"companyInfo"`
	// Company name of the user
	CompanyName *string `pulumi:"companyName"`
	// Email of the user used by Elastic for contacting them if needed
	EmailAddress *string `pulumi:"emailAddress"`
	// First name of the user
	FirstName *string `pulumi:"firstName"`
	// Last name of the user
	LastName *string `pulumi:"lastName"`
}

// UserInfoInput is an input type that accepts UserInfoArgs and UserInfoOutput values.
// You can construct a concrete instance of `UserInfoInput` via:
//
//	UserInfoArgs{...}
type UserInfoInput interface {
	pulumi.Input

	ToUserInfoOutput() UserInfoOutput
	ToUserInfoOutputWithContext(context.Context) UserInfoOutput
}

// User Information to be passed to partners.
type UserInfoArgs struct {
	// Company information of the user to be passed to partners.
	CompanyInfo CompanyInfoPtrInput `pulumi:"companyInfo"`
	// Company name of the user
	CompanyName pulumi.StringPtrInput `pulumi:"companyName"`
	// Email of the user used by Elastic for contacting them if needed
	EmailAddress pulumi.StringPtrInput `pulumi:"emailAddress"`
	// First name of the user
	FirstName pulumi.StringPtrInput `pulumi:"firstName"`
	// Last name of the user
	LastName pulumi.StringPtrInput `pulumi:"lastName"`
}

func (UserInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserInfo)(nil)).Elem()
}

func (i UserInfoArgs) ToUserInfoOutput() UserInfoOutput {
	return i.ToUserInfoOutputWithContext(context.Background())
}

func (i UserInfoArgs) ToUserInfoOutputWithContext(ctx context.Context) UserInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoOutput)
}

func (i UserInfoArgs) ToUserInfoPtrOutput() UserInfoPtrOutput {
	return i.ToUserInfoPtrOutputWithContext(context.Background())
}

func (i UserInfoArgs) ToUserInfoPtrOutputWithContext(ctx context.Context) UserInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoOutput).ToUserInfoPtrOutputWithContext(ctx)
}

// UserInfoPtrInput is an input type that accepts UserInfoArgs, UserInfoPtr and UserInfoPtrOutput values.
// You can construct a concrete instance of `UserInfoPtrInput` via:
//
//	        UserInfoArgs{...}
//
//	or:
//
//	        nil
type UserInfoPtrInput interface {
	pulumi.Input

	ToUserInfoPtrOutput() UserInfoPtrOutput
	ToUserInfoPtrOutputWithContext(context.Context) UserInfoPtrOutput
}

type userInfoPtrType UserInfoArgs

func UserInfoPtr(v *UserInfoArgs) UserInfoPtrInput {
	return (*userInfoPtrType)(v)
}

func (*userInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserInfo)(nil)).Elem()
}

func (i *userInfoPtrType) ToUserInfoPtrOutput() UserInfoPtrOutput {
	return i.ToUserInfoPtrOutputWithContext(context.Background())
}

func (i *userInfoPtrType) ToUserInfoPtrOutputWithContext(ctx context.Context) UserInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoPtrOutput)
}

// User Information to be passed to partners.
type UserInfoOutput struct{ *pulumi.OutputState }

func (UserInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserInfo)(nil)).Elem()
}

func (o UserInfoOutput) ToUserInfoOutput() UserInfoOutput {
	return o
}

func (o UserInfoOutput) ToUserInfoOutputWithContext(ctx context.Context) UserInfoOutput {
	return o
}

func (o UserInfoOutput) ToUserInfoPtrOutput() UserInfoPtrOutput {
	return o.ToUserInfoPtrOutputWithContext(context.Background())
}

func (o UserInfoOutput) ToUserInfoPtrOutputWithContext(ctx context.Context) UserInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserInfo) *UserInfo {
		return &v
	}).(UserInfoPtrOutput)
}

// Company information of the user to be passed to partners.
func (o UserInfoOutput) CompanyInfo() CompanyInfoPtrOutput {
	return o.ApplyT(func(v UserInfo) *CompanyInfo { return v.CompanyInfo }).(CompanyInfoPtrOutput)
}

// Company name of the user
func (o UserInfoOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfo) *string { return v.CompanyName }).(pulumi.StringPtrOutput)
}

// Email of the user used by Elastic for contacting them if needed
func (o UserInfoOutput) EmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfo) *string { return v.EmailAddress }).(pulumi.StringPtrOutput)
}

// First name of the user
func (o UserInfoOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfo) *string { return v.FirstName }).(pulumi.StringPtrOutput)
}

// Last name of the user
func (o UserInfoOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfo) *string { return v.LastName }).(pulumi.StringPtrOutput)
}

type UserInfoPtrOutput struct{ *pulumi.OutputState }

func (UserInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserInfo)(nil)).Elem()
}

func (o UserInfoPtrOutput) ToUserInfoPtrOutput() UserInfoPtrOutput {
	return o
}

func (o UserInfoPtrOutput) ToUserInfoPtrOutputWithContext(ctx context.Context) UserInfoPtrOutput {
	return o
}

func (o UserInfoPtrOutput) Elem() UserInfoOutput {
	return o.ApplyT(func(v *UserInfo) UserInfo {
		if v != nil {
			return *v
		}
		var ret UserInfo
		return ret
	}).(UserInfoOutput)
}

// Company information of the user to be passed to partners.
func (o UserInfoPtrOutput) CompanyInfo() CompanyInfoPtrOutput {
	return o.ApplyT(func(v *UserInfo) *CompanyInfo {
		if v == nil {
			return nil
		}
		return v.CompanyInfo
	}).(CompanyInfoPtrOutput)
}

// Company name of the user
func (o UserInfoPtrOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfo) *string {
		if v == nil {
			return nil
		}
		return v.CompanyName
	}).(pulumi.StringPtrOutput)
}

// Email of the user used by Elastic for contacting them if needed
func (o UserInfoPtrOutput) EmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfo) *string {
		if v == nil {
			return nil
		}
		return v.EmailAddress
	}).(pulumi.StringPtrOutput)
}

// First name of the user
func (o UserInfoPtrOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfo) *string {
		if v == nil {
			return nil
		}
		return v.FirstName
	}).(pulumi.StringPtrOutput)
}

// Last name of the user
func (o UserInfoPtrOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastName
	}).(pulumi.StringPtrOutput)
}

// The vm resource properties that is currently being monitored by the Elastic monitor resource.
type VMResourcesResponse struct {
	// The ARM id of the VM resource.
	VmResourceId *string `pulumi:"vmResourceId"`
}

// The vm resource properties that is currently being monitored by the Elastic monitor resource.
type VMResourcesResponseOutput struct{ *pulumi.OutputState }

func (VMResourcesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMResourcesResponse)(nil)).Elem()
}

func (o VMResourcesResponseOutput) ToVMResourcesResponseOutput() VMResourcesResponseOutput {
	return o
}

func (o VMResourcesResponseOutput) ToVMResourcesResponseOutputWithContext(ctx context.Context) VMResourcesResponseOutput {
	return o
}

// The ARM id of the VM resource.
func (o VMResourcesResponseOutput) VmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMResourcesResponse) *string { return v.VmResourceId }).(pulumi.StringPtrOutput)
}

type VMResourcesResponseArrayOutput struct{ *pulumi.OutputState }

func (VMResourcesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMResourcesResponse)(nil)).Elem()
}

func (o VMResourcesResponseArrayOutput) ToVMResourcesResponseArrayOutput() VMResourcesResponseArrayOutput {
	return o
}

func (o VMResourcesResponseArrayOutput) ToVMResourcesResponseArrayOutputWithContext(ctx context.Context) VMResourcesResponseArrayOutput {
	return o
}

func (o VMResourcesResponseArrayOutput) Index(i pulumi.IntInput) VMResourcesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMResourcesResponse {
		return vs[0].([]VMResourcesResponse)[vs[1].(int)]
	}).(VMResourcesResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(CompanyInfoOutput{})
	pulumi.RegisterOutputType(CompanyInfoPtrOutput{})
	pulumi.RegisterOutputType(ElasticCloudDeploymentResponseOutput{})
	pulumi.RegisterOutputType(ElasticCloudDeploymentResponsePtrOutput{})
	pulumi.RegisterOutputType(ElasticCloudUserResponseOutput{})
	pulumi.RegisterOutputType(ElasticCloudUserResponsePtrOutput{})
	pulumi.RegisterOutputType(ElasticPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ElasticPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(FilteringTagOutput{})
	pulumi.RegisterOutputType(FilteringTagArrayOutput{})
	pulumi.RegisterOutputType(FilteringTagResponseOutput{})
	pulumi.RegisterOutputType(FilteringTagResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LogRulesOutput{})
	pulumi.RegisterOutputType(LogRulesPtrOutput{})
	pulumi.RegisterOutputType(LogRulesResponseOutput{})
	pulumi.RegisterOutputType(LogRulesResponsePtrOutput{})
	pulumi.RegisterOutputType(MonitorPropertiesOutput{})
	pulumi.RegisterOutputType(MonitorPropertiesPtrOutput{})
	pulumi.RegisterOutputType(MonitorPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MonitoredResourceResponseOutput{})
	pulumi.RegisterOutputType(MonitoredResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(MonitoringTagRulesPropertiesOutput{})
	pulumi.RegisterOutputType(MonitoringTagRulesPropertiesPtrOutput{})
	pulumi.RegisterOutputType(MonitoringTagRulesPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ResourceSkuOutput{})
	pulumi.RegisterOutputType(ResourceSkuPtrOutput{})
	pulumi.RegisterOutputType(ResourceSkuResponseOutput{})
	pulumi.RegisterOutputType(ResourceSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UserInfoOutput{})
	pulumi.RegisterOutputType(UserInfoPtrOutput{})
	pulumi.RegisterOutputType(VMResourcesResponseOutput{})
	pulumi.RegisterOutputType(VMResourcesResponseArrayOutput{})
}
