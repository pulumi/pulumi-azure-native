// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200301preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The name of the SKU.
type DigitalTwinsSku string

const (
	DigitalTwinsSkuF1 = DigitalTwinsSku("F1")
)

func (DigitalTwinsSku) ElementType() reflect.Type {
	return reflect.TypeOf((*DigitalTwinsSku)(nil)).Elem()
}

func (e DigitalTwinsSku) ToDigitalTwinsSkuOutput() DigitalTwinsSkuOutput {
	return pulumi.ToOutput(e).(DigitalTwinsSkuOutput)
}

func (e DigitalTwinsSku) ToDigitalTwinsSkuOutputWithContext(ctx context.Context) DigitalTwinsSkuOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DigitalTwinsSkuOutput)
}

func (e DigitalTwinsSku) ToDigitalTwinsSkuPtrOutput() DigitalTwinsSkuPtrOutput {
	return e.ToDigitalTwinsSkuPtrOutputWithContext(context.Background())
}

func (e DigitalTwinsSku) ToDigitalTwinsSkuPtrOutputWithContext(ctx context.Context) DigitalTwinsSkuPtrOutput {
	return DigitalTwinsSku(e).ToDigitalTwinsSkuOutputWithContext(ctx).ToDigitalTwinsSkuPtrOutputWithContext(ctx)
}

func (e DigitalTwinsSku) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DigitalTwinsSku) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DigitalTwinsSku) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DigitalTwinsSku) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DigitalTwinsSkuOutput struct{ *pulumi.OutputState }

func (DigitalTwinsSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DigitalTwinsSku)(nil)).Elem()
}

func (o DigitalTwinsSkuOutput) ToDigitalTwinsSkuOutput() DigitalTwinsSkuOutput {
	return o
}

func (o DigitalTwinsSkuOutput) ToDigitalTwinsSkuOutputWithContext(ctx context.Context) DigitalTwinsSkuOutput {
	return o
}

func (o DigitalTwinsSkuOutput) ToDigitalTwinsSkuPtrOutput() DigitalTwinsSkuPtrOutput {
	return o.ToDigitalTwinsSkuPtrOutputWithContext(context.Background())
}

func (o DigitalTwinsSkuOutput) ToDigitalTwinsSkuPtrOutputWithContext(ctx context.Context) DigitalTwinsSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DigitalTwinsSku) *DigitalTwinsSku {
		return &v
	}).(DigitalTwinsSkuPtrOutput)
}

func (o DigitalTwinsSkuOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DigitalTwinsSkuOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DigitalTwinsSku) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DigitalTwinsSkuOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DigitalTwinsSkuOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DigitalTwinsSku) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DigitalTwinsSkuPtrOutput struct{ *pulumi.OutputState }

func (DigitalTwinsSkuPtrOutput) ElementType() reflect.Type {
	return digitalTwinsSkuPtrType
}

func (o DigitalTwinsSkuPtrOutput) ToDigitalTwinsSkuPtrOutput() DigitalTwinsSkuPtrOutput {
	return o
}

func (o DigitalTwinsSkuPtrOutput) ToDigitalTwinsSkuPtrOutputWithContext(ctx context.Context) DigitalTwinsSkuPtrOutput {
	return o
}

func (o DigitalTwinsSkuPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DigitalTwinsSkuPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DigitalTwinsSku) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o DigitalTwinsSkuPtrOutput) Elem() DigitalTwinsSkuOutput {
	return o.ApplyT(func(v *DigitalTwinsSku) DigitalTwinsSku {
		var ret DigitalTwinsSku
		if v != nil {
			ret = *v
		}
		return ret
	}).(DigitalTwinsSkuOutput)
}

// DigitalTwinsSkuInput is an input type that accepts DigitalTwinsSkuArgs and DigitalTwinsSkuOutput values.
// You can construct a concrete instance of `DigitalTwinsSkuInput` via:
//
//          DigitalTwinsSkuArgs{...}
type DigitalTwinsSkuInput interface {
	pulumi.Input

	ToDigitalTwinsSkuOutput() DigitalTwinsSkuOutput
	ToDigitalTwinsSkuOutputWithContext(context.Context) DigitalTwinsSkuOutput
}

var digitalTwinsSkuPtrType = reflect.TypeOf((**DigitalTwinsSku)(nil)).Elem()

type DigitalTwinsSkuPtrInput interface {
	pulumi.Input

	ToDigitalTwinsSkuPtrOutput() DigitalTwinsSkuPtrOutput
	ToDigitalTwinsSkuPtrOutputWithContext(context.Context) DigitalTwinsSkuPtrOutput
}

type digitalTwinsSkuPtr string

func DigitalTwinsSkuPtr(v string) DigitalTwinsSkuPtrInput {
	return (*digitalTwinsSkuPtr)(&v)
}

func (*digitalTwinsSkuPtr) ElementType() reflect.Type {
	return digitalTwinsSkuPtrType
}

func (in *digitalTwinsSkuPtr) ToDigitalTwinsSkuPtrOutput() DigitalTwinsSkuPtrOutput {
	return pulumi.ToOutput(in).(DigitalTwinsSkuPtrOutput)
}

func (in *digitalTwinsSkuPtr) ToDigitalTwinsSkuPtrOutputWithContext(ctx context.Context) DigitalTwinsSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DigitalTwinsSkuPtrOutput)
}

// The type of Digital Twins endpoint
type EndpointType string

const (
	EndpointTypeEventHub   = EndpointType("EventHub")
	EndpointTypeEventGrid  = EndpointType("EventGrid")
	EndpointTypeServiceBus = EndpointType("ServiceBus")
)

func (EndpointType) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointType)(nil)).Elem()
}

func (e EndpointType) ToEndpointTypeOutput() EndpointTypeOutput {
	return pulumi.ToOutput(e).(EndpointTypeOutput)
}

func (e EndpointType) ToEndpointTypeOutputWithContext(ctx context.Context) EndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EndpointTypeOutput)
}

func (e EndpointType) ToEndpointTypePtrOutput() EndpointTypePtrOutput {
	return e.ToEndpointTypePtrOutputWithContext(context.Background())
}

func (e EndpointType) ToEndpointTypePtrOutputWithContext(ctx context.Context) EndpointTypePtrOutput {
	return EndpointType(e).ToEndpointTypeOutputWithContext(ctx).ToEndpointTypePtrOutputWithContext(ctx)
}

func (e EndpointType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EndpointType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EndpointTypeOutput struct{ *pulumi.OutputState }

func (EndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointType)(nil)).Elem()
}

func (o EndpointTypeOutput) ToEndpointTypeOutput() EndpointTypeOutput {
	return o
}

func (o EndpointTypeOutput) ToEndpointTypeOutputWithContext(ctx context.Context) EndpointTypeOutput {
	return o
}

func (o EndpointTypeOutput) ToEndpointTypePtrOutput() EndpointTypePtrOutput {
	return o.ToEndpointTypePtrOutputWithContext(context.Background())
}

func (o EndpointTypeOutput) ToEndpointTypePtrOutputWithContext(ctx context.Context) EndpointTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointType) *EndpointType {
		return &v
	}).(EndpointTypePtrOutput)
}

func (o EndpointTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EndpointTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EndpointTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EndpointTypePtrOutput struct{ *pulumi.OutputState }

func (EndpointTypePtrOutput) ElementType() reflect.Type {
	return endpointTypePtrType
}

func (o EndpointTypePtrOutput) ToEndpointTypePtrOutput() EndpointTypePtrOutput {
	return o
}

func (o EndpointTypePtrOutput) ToEndpointTypePtrOutputWithContext(ctx context.Context) EndpointTypePtrOutput {
	return o
}

func (o EndpointTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EndpointType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o EndpointTypePtrOutput) Elem() EndpointTypeOutput {
	return o.ApplyT(func(v *EndpointType) EndpointType {
		var ret EndpointType
		if v != nil {
			ret = *v
		}
		return ret
	}).(EndpointTypeOutput)
}

// EndpointTypeInput is an input type that accepts EndpointTypeArgs and EndpointTypeOutput values.
// You can construct a concrete instance of `EndpointTypeInput` via:
//
//          EndpointTypeArgs{...}
type EndpointTypeInput interface {
	pulumi.Input

	ToEndpointTypeOutput() EndpointTypeOutput
	ToEndpointTypeOutputWithContext(context.Context) EndpointTypeOutput
}

var endpointTypePtrType = reflect.TypeOf((**EndpointType)(nil)).Elem()

type EndpointTypePtrInput interface {
	pulumi.Input

	ToEndpointTypePtrOutput() EndpointTypePtrOutput
	ToEndpointTypePtrOutputWithContext(context.Context) EndpointTypePtrOutput
}

type endpointTypePtr string

func EndpointTypePtr(v string) EndpointTypePtrInput {
	return (*endpointTypePtr)(&v)
}

func (*endpointTypePtr) ElementType() reflect.Type {
	return endpointTypePtrType
}

func (in *endpointTypePtr) ToEndpointTypePtrOutput() EndpointTypePtrOutput {
	return pulumi.ToOutput(in).(EndpointTypePtrOutput)
}

func (in *endpointTypePtr) ToEndpointTypePtrOutputWithContext(ctx context.Context) EndpointTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EndpointTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DigitalTwinsSkuOutput{})
	pulumi.RegisterOutputType(DigitalTwinsSkuPtrOutput{})
	pulumi.RegisterOutputType(EndpointTypeOutput{})
	pulumi.RegisterOutputType(EndpointTypePtrOutput{})
}
