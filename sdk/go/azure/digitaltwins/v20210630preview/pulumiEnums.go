// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210630preview

// Specifies the authentication type being used for connecting to the endpoint. Defaults to 'KeyBased'. If 'KeyBased' is selected, a connection string must be specified (at least the primary connection string). If 'IdentityBased' is select, the endpointUri and entityPath properties must be specified.
type AuthenticationType string

const (
	AuthenticationTypeKeyBased      = AuthenticationType("KeyBased")
	AuthenticationTypeIdentityBased = AuthenticationType("IdentityBased")
)

// The type of time series connection resource.
type ConnectionType string

const (
	ConnectionTypeAzureDataExplorer = ConnectionType("AzureDataExplorer")
)

// The type of Managed Identity used by the DigitalTwinsInstance. Only SystemAssigned is supported.
type DigitalTwinsIdentityType string

const (
	DigitalTwinsIdentityTypeNone           = DigitalTwinsIdentityType("None")
	DigitalTwinsIdentityTypeSystemAssigned = DigitalTwinsIdentityType("SystemAssigned")
)

// The type of Digital Twins endpoint
type EndpointType string

const (
	EndpointTypeEventHub   = EndpointType("EventHub")
	EndpointTypeEventGrid  = EndpointType("EventGrid")
	EndpointTypeServiceBus = EndpointType("ServiceBus")
)

// The status of a private endpoint connection.
type PrivateLinkServiceConnectionStatus string

const (
	PrivateLinkServiceConnectionStatusPending      = PrivateLinkServiceConnectionStatus("Pending")
	PrivateLinkServiceConnectionStatusApproved     = PrivateLinkServiceConnectionStatus("Approved")
	PrivateLinkServiceConnectionStatusRejected     = PrivateLinkServiceConnectionStatus("Rejected")
	PrivateLinkServiceConnectionStatusDisconnected = PrivateLinkServiceConnectionStatus("Disconnected")
)

// Public network access for the DigitalTwinsInstance.
type PublicNetworkAccess string

const (
	PublicNetworkAccessEnabled  = PublicNetworkAccess("Enabled")
	PublicNetworkAccessDisabled = PublicNetworkAccess("Disabled")
)

func init() {
}
