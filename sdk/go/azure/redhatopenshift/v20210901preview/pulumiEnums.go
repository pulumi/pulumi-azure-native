// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Whether master virtual machines are encrypted at host.
type EncryptionAtHost pulumi.String

const (
	EncryptionAtHostDisabled = EncryptionAtHost("Disabled")
	EncryptionAtHostEnabled  = EncryptionAtHost("Enabled")
)

func (EncryptionAtHost) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e EncryptionAtHost) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionAtHost) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionAtHost) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionAtHost) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The software defined network (SDN) to use when installing the cluster.
type SoftwareDefinedNetwork pulumi.String

const (
	SoftwareDefinedNetworkOVNKubernetes = SoftwareDefinedNetwork("OVNKubernetes")
	SoftwareDefinedNetworkOpenShiftSDN  = SoftwareDefinedNetwork("OpenShiftSDN")
)

func (SoftwareDefinedNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SoftwareDefinedNetwork) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SoftwareDefinedNetwork) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SoftwareDefinedNetwork) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SoftwareDefinedNetwork) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The size of the worker VMs.
type VMSize pulumi.String

const (
	VMSize_Standard_D16as_v4 = VMSize("Standard_D16as_v4")
	VMSize_Standard_D16s_v3  = VMSize("Standard_D16s_v3")
	VMSize_Standard_D2s_v3   = VMSize("Standard_D2s_v3")
	VMSize_Standard_D32as_v4 = VMSize("Standard_D32as_v4")
	VMSize_Standard_D32s_v3  = VMSize("Standard_D32s_v3")
	VMSize_Standard_D4as_v4  = VMSize("Standard_D4as_v4")
	VMSize_Standard_D4s_v3   = VMSize("Standard_D4s_v3")
	VMSize_Standard_D8as_v4  = VMSize("Standard_D8as_v4")
	VMSize_Standard_D8s_v3   = VMSize("Standard_D8s_v3")
	VMSize_Standard_E16s_v3  = VMSize("Standard_E16s_v3")
	VMSize_Standard_E32s_v3  = VMSize("Standard_E32s_v3")
	VMSize_Standard_E4s_v3   = VMSize("Standard_E4s_v3")
	VMSize_Standard_E64i_v3  = VMSize("Standard_E64i_v3")
	VMSize_Standard_E64is_v3 = VMSize("Standard_E64is_v3")
	VMSize_Standard_E8s_v3   = VMSize("Standard_E8s_v3")
	VMSize_Standard_F16s_v2  = VMSize("Standard_F16s_v2")
	VMSize_Standard_F32s_v2  = VMSize("Standard_F32s_v2")
	VMSize_Standard_F4s_v2   = VMSize("Standard_F4s_v2")
	VMSize_Standard_F72s_v2  = VMSize("Standard_F72s_v2")
	VMSize_Standard_F8s_v2   = VMSize("Standard_F8s_v2")
	VMSize_Standard_G5       = VMSize("Standard_G5")
	VMSize_Standard_GS5      = VMSize("Standard_GS5")
	VMSize_Standard_M128ms   = VMSize("Standard_M128ms")
)

func (VMSize) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e VMSize) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VMSize) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VMSize) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VMSize) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Ingress visibility.
type Visibility pulumi.String

const (
	VisibilityPrivate = Visibility("Private")
	VisibilityPublic  = Visibility("Public")
)

func (Visibility) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e Visibility) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Visibility) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Visibility) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Visibility) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
