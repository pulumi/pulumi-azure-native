// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chaos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Model that represents a Experiment resource.
// API Version: 2021-09-15-preview.
func LookupExperiment(ctx *pulumi.Context, args *LookupExperimentArgs, opts ...pulumi.InvokeOption) (*LookupExperimentResult, error) {
	var rv LookupExperimentResult
	err := ctx.Invoke("azure-native:chaos:getExperiment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupExperimentArgs struct {
	// String that represents a Experiment resource name.
	ExperimentName string `pulumi:"experimentName"`
	// String that represents an Azure resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Model that represents a Experiment resource.
type LookupExperimentResult struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The identity of the experiment resource.
	Identity *ResourceIdentityResponse `pulumi:"identity"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The properties of the experiment resource.
	Properties ExperimentPropertiesResponse `pulumi:"properties"`
	// The system metadata of the experiment resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupExperimentOutput(ctx *pulumi.Context, args LookupExperimentOutputArgs, opts ...pulumi.InvokeOption) LookupExperimentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupExperimentResult, error) {
			args := v.(LookupExperimentArgs)
			r, err := LookupExperiment(ctx, &args, opts...)
			var s LookupExperimentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupExperimentResultOutput)
}

type LookupExperimentOutputArgs struct {
	// String that represents a Experiment resource name.
	ExperimentName pulumi.StringInput `pulumi:"experimentName"`
	// String that represents an Azure resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupExperimentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExperimentArgs)(nil)).Elem()
}

// Model that represents a Experiment resource.
type LookupExperimentResultOutput struct{ *pulumi.OutputState }

func (LookupExperimentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExperimentResult)(nil)).Elem()
}

func (o LookupExperimentResultOutput) ToLookupExperimentResultOutput() LookupExperimentResultOutput {
	return o
}

func (o LookupExperimentResultOutput) ToLookupExperimentResultOutputWithContext(ctx context.Context) LookupExperimentResultOutput {
	return o
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupExperimentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.Id }).(pulumi.StringOutput)
}

// The identity of the experiment resource.
func (o LookupExperimentResultOutput) Identity() ResourceIdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupExperimentResult) *ResourceIdentityResponse { return v.Identity }).(ResourceIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o LookupExperimentResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupExperimentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of the experiment resource.
func (o LookupExperimentResultOutput) Properties() ExperimentPropertiesResponseOutput {
	return o.ApplyT(func(v LookupExperimentResult) ExperimentPropertiesResponse { return v.Properties }).(ExperimentPropertiesResponseOutput)
}

// The system metadata of the experiment resource.
func (o LookupExperimentResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupExperimentResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupExperimentResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupExperimentResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupExperimentResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupExperimentResultOutput{})
}
