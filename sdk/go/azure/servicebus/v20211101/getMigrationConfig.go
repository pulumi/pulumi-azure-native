// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20211101

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Single item in List or Get Migration Config operation
func LookupMigrationConfig(ctx *pulumi.Context, args *LookupMigrationConfigArgs, opts ...pulumi.InvokeOption) (*LookupMigrationConfigResult, error) {
	var rv LookupMigrationConfigResult
	err := ctx.Invoke("azure-native:servicebus/v20211101:getMigrationConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMigrationConfigArgs struct {
	// The configuration name. Should always be "$default".
	ConfigName string `pulumi:"configName"`
	// The namespace name
	NamespaceName string `pulumi:"namespaceName"`
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Single item in List or Get Migration Config operation
type LookupMigrationConfigResult struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// State in which Standard to Premium Migration is, possible values : Unknown, Reverting, Completing, Initiating, Syncing, Active
	MigrationState string `pulumi:"migrationState"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Number of entities pending to be replicated.
	PendingReplicationOperationsCount float64 `pulumi:"pendingReplicationOperationsCount"`
	// Name to access Standard Namespace after migration
	PostMigrationName string `pulumi:"postMigrationName"`
	// Provisioning state of Migration Configuration
	ProvisioningState string `pulumi:"provisioningState"`
	// The system meta data relating to this resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Existing premium Namespace ARM Id name which has no entities, will be used for migration
	TargetNamespace string `pulumi:"targetNamespace"`
	// The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
	Type string `pulumi:"type"`
}
