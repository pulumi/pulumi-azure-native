// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20211101

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Description of Rule Resource.
func LookupRule(ctx *pulumi.Context, args *LookupRuleArgs, opts ...pulumi.InvokeOption) (*LookupRuleResult, error) {
	var rv LookupRuleResult
	err := ctx.Invoke("azure-native:servicebus/v20211101:getRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupRuleArgs struct {
	// The namespace name
	NamespaceName string `pulumi:"namespaceName"`
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The rule name.
	RuleName string `pulumi:"ruleName"`
	// The subscription name.
	SubscriptionName string `pulumi:"subscriptionName"`
	// The topic name.
	TopicName string `pulumi:"topicName"`
}

// Description of Rule Resource.
type LookupRuleResult struct {
	// Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.
	Action *ActionResponse `pulumi:"action"`
	// Properties of correlationFilter
	CorrelationFilter *CorrelationFilterResponse `pulumi:"correlationFilter"`
	// Filter type that is evaluated against a BrokeredMessage.
	FilterType *string `pulumi:"filterType"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Properties of sqlFilter
	SqlFilter *SqlFilterResponse `pulumi:"sqlFilter"`
	// The system meta data relating to this resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupRuleResult
func (val *LookupRuleResult) Defaults() *LookupRuleResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Action = tmp.Action.Defaults()

	tmp.CorrelationFilter = tmp.CorrelationFilter.Defaults()

	tmp.SqlFilter = tmp.SqlFilter.Defaults()

	return &tmp
}
