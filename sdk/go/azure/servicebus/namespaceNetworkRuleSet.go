// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package servicebus

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NamespaceNetworkRuleSet struct {
	pulumi.CustomResourceState

	DefaultAction       pulumi.StringPtrOutput                          `pulumi:"defaultAction"`
	IpRules             NWRuleSetIpRulesResponseArrayOutput             `pulumi:"ipRules"`
	Name                pulumi.StringOutput                             `pulumi:"name"`
	Type                pulumi.StringOutput                             `pulumi:"type"`
	VirtualNetworkRules NWRuleSetVirtualNetworkRulesResponseArrayOutput `pulumi:"virtualNetworkRules"`
}

// NewNamespaceNetworkRuleSet registers a new resource with the given unique name, arguments, and options.
func NewNamespaceNetworkRuleSet(ctx *pulumi.Context,
	name string, args *NamespaceNetworkRuleSetArgs, opts ...pulumi.ResourceOption) (*NamespaceNetworkRuleSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NamespaceName == nil {
		return nil, errors.New("invalid value for required argument 'NamespaceName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:servicebus:NamespaceNetworkRuleSet"),
		},
		{
			Type: pulumi.String("azure-native:servicebus/v20170401:NamespaceNetworkRuleSet"),
		},
		{
			Type: pulumi.String("azure-nextgen:servicebus/v20170401:NamespaceNetworkRuleSet"),
		},
		{
			Type: pulumi.String("azure-native:servicebus/v20180101preview:NamespaceNetworkRuleSet"),
		},
		{
			Type: pulumi.String("azure-nextgen:servicebus/v20180101preview:NamespaceNetworkRuleSet"),
		},
		{
			Type: pulumi.String("azure-native:servicebus/v20210101preview:NamespaceNetworkRuleSet"),
		},
		{
			Type: pulumi.String("azure-nextgen:servicebus/v20210101preview:NamespaceNetworkRuleSet"),
		},
		{
			Type: pulumi.String("azure-native:servicebus/v20210601preview:NamespaceNetworkRuleSet"),
		},
		{
			Type: pulumi.String("azure-nextgen:servicebus/v20210601preview:NamespaceNetworkRuleSet"),
		},
	})
	opts = append(opts, aliases)
	var resource NamespaceNetworkRuleSet
	err := ctx.RegisterResource("azure-native:servicebus:NamespaceNetworkRuleSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNamespaceNetworkRuleSet gets an existing NamespaceNetworkRuleSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNamespaceNetworkRuleSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NamespaceNetworkRuleSetState, opts ...pulumi.ResourceOption) (*NamespaceNetworkRuleSet, error) {
	var resource NamespaceNetworkRuleSet
	err := ctx.ReadResource("azure-native:servicebus:NamespaceNetworkRuleSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NamespaceNetworkRuleSet resources.
type namespaceNetworkRuleSetState struct {
}

type NamespaceNetworkRuleSetState struct {
}

func (NamespaceNetworkRuleSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceNetworkRuleSetState)(nil)).Elem()
}

type namespaceNetworkRuleSetArgs struct {
	DefaultAction       *string                        `pulumi:"defaultAction"`
	IpRules             []NWRuleSetIpRules             `pulumi:"ipRules"`
	NamespaceName       string                         `pulumi:"namespaceName"`
	ResourceGroupName   string                         `pulumi:"resourceGroupName"`
	VirtualNetworkRules []NWRuleSetVirtualNetworkRules `pulumi:"virtualNetworkRules"`
}

// The set of arguments for constructing a NamespaceNetworkRuleSet resource.
type NamespaceNetworkRuleSetArgs struct {
	DefaultAction       pulumi.StringPtrInput
	IpRules             NWRuleSetIpRulesArrayInput
	NamespaceName       pulumi.StringInput
	ResourceGroupName   pulumi.StringInput
	VirtualNetworkRules NWRuleSetVirtualNetworkRulesArrayInput
}

func (NamespaceNetworkRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceNetworkRuleSetArgs)(nil)).Elem()
}

type NamespaceNetworkRuleSetInput interface {
	pulumi.Input

	ToNamespaceNetworkRuleSetOutput() NamespaceNetworkRuleSetOutput
	ToNamespaceNetworkRuleSetOutputWithContext(ctx context.Context) NamespaceNetworkRuleSetOutput
}

func (*NamespaceNetworkRuleSet) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceNetworkRuleSet)(nil))
}

func (i *NamespaceNetworkRuleSet) ToNamespaceNetworkRuleSetOutput() NamespaceNetworkRuleSetOutput {
	return i.ToNamespaceNetworkRuleSetOutputWithContext(context.Background())
}

func (i *NamespaceNetworkRuleSet) ToNamespaceNetworkRuleSetOutputWithContext(ctx context.Context) NamespaceNetworkRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceNetworkRuleSetOutput)
}

type NamespaceNetworkRuleSetOutput struct{ *pulumi.OutputState }

func (NamespaceNetworkRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceNetworkRuleSet)(nil))
}

func (o NamespaceNetworkRuleSetOutput) ToNamespaceNetworkRuleSetOutput() NamespaceNetworkRuleSetOutput {
	return o
}

func (o NamespaceNetworkRuleSetOutput) ToNamespaceNetworkRuleSetOutputWithContext(ctx context.Context) NamespaceNetworkRuleSetOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(NamespaceNetworkRuleSetOutput{})
}
