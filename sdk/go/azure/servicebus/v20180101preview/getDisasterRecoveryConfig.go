// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Single item in List or Get Alias(Disaster Recovery configuration) operation
func LookupDisasterRecoveryConfig(ctx *pulumi.Context, args *LookupDisasterRecoveryConfigArgs, opts ...pulumi.InvokeOption) (*LookupDisasterRecoveryConfigResult, error) {
	var rv LookupDisasterRecoveryConfigResult
	err := ctx.Invoke("azure-native:servicebus/v20180101preview:getDisasterRecoveryConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDisasterRecoveryConfigArgs struct {
	// The Disaster Recovery configuration name
	Alias string `pulumi:"alias"`
	// The namespace name
	NamespaceName string `pulumi:"namespaceName"`
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Single item in List or Get Alias(Disaster Recovery configuration) operation
type LookupDisasterRecoveryConfigResult struct {
	// Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
	AlternateName *string `pulumi:"alternateName"`
	// Resource Id
	Id string `pulumi:"id"`
	// Resource name
	Name string `pulumi:"name"`
	// ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
	PartnerNamespace *string `pulumi:"partnerNamespace"`
	// Number of entities pending to be replicated.
	PendingReplicationOperationsCount float64 `pulumi:"pendingReplicationOperationsCount"`
	// Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'
	ProvisioningState string `pulumi:"provisioningState"`
	// role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'
	Role string `pulumi:"role"`
	// Resource type
	Type string `pulumi:"type"`
}

func LookupDisasterRecoveryConfigOutput(ctx *pulumi.Context, args LookupDisasterRecoveryConfigOutputArgs, opts ...pulumi.InvokeOption) LookupDisasterRecoveryConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDisasterRecoveryConfigResult, error) {
			args := v.(LookupDisasterRecoveryConfigArgs)
			r, err := LookupDisasterRecoveryConfig(ctx, &args, opts...)
			var s LookupDisasterRecoveryConfigResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDisasterRecoveryConfigResultOutput)
}

type LookupDisasterRecoveryConfigOutputArgs struct {
	// The Disaster Recovery configuration name
	Alias pulumi.StringInput `pulumi:"alias"`
	// The namespace name
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupDisasterRecoveryConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDisasterRecoveryConfigArgs)(nil)).Elem()
}

// Single item in List or Get Alias(Disaster Recovery configuration) operation
type LookupDisasterRecoveryConfigResultOutput struct{ *pulumi.OutputState }

func (LookupDisasterRecoveryConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDisasterRecoveryConfigResult)(nil)).Elem()
}

func (o LookupDisasterRecoveryConfigResultOutput) ToLookupDisasterRecoveryConfigResultOutput() LookupDisasterRecoveryConfigResultOutput {
	return o
}

func (o LookupDisasterRecoveryConfigResultOutput) ToLookupDisasterRecoveryConfigResultOutputWithContext(ctx context.Context) LookupDisasterRecoveryConfigResultOutput {
	return o
}

// Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
func (o LookupDisasterRecoveryConfigResultOutput) AlternateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigResult) *string { return v.AlternateName }).(pulumi.StringPtrOutput)
}

// Resource Id
func (o LookupDisasterRecoveryConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name
func (o LookupDisasterRecoveryConfigResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigResult) string { return v.Name }).(pulumi.StringOutput)
}

// ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
func (o LookupDisasterRecoveryConfigResultOutput) PartnerNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigResult) *string { return v.PartnerNamespace }).(pulumi.StringPtrOutput)
}

// Number of entities pending to be replicated.
func (o LookupDisasterRecoveryConfigResultOutput) PendingReplicationOperationsCount() pulumi.Float64Output {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigResult) float64 { return v.PendingReplicationOperationsCount }).(pulumi.Float64Output)
}

// Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'
func (o LookupDisasterRecoveryConfigResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'
func (o LookupDisasterRecoveryConfigResultOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigResult) string { return v.Role }).(pulumi.StringOutput)
}

// Resource type
func (o LookupDisasterRecoveryConfigResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDisasterRecoveryConfigResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDisasterRecoveryConfigResultOutput{})
}
