// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210601preview

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Description of NetworkRuleSet resource.
func LookupNamespaceNetworkRuleSet(ctx *pulumi.Context, args *LookupNamespaceNetworkRuleSetArgs, opts ...pulumi.InvokeOption) (*LookupNamespaceNetworkRuleSetResult, error) {
	var rv LookupNamespaceNetworkRuleSetResult
	err := ctx.Invoke("azure-native:servicebus/v20210601preview:getNamespaceNetworkRuleSet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupNamespaceNetworkRuleSetArgs struct {
	// The namespace name
	NamespaceName string `pulumi:"namespaceName"`
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Description of NetworkRuleSet resource.
type LookupNamespaceNetworkRuleSetResult struct {
	// Default Action for Network Rule Set
	DefaultAction *string `pulumi:"defaultAction"`
	// Resource Id
	Id string `pulumi:"id"`
	// List of IpRules
	IpRules []NWRuleSetIpRulesResponse `pulumi:"ipRules"`
	// Resource name
	Name string `pulumi:"name"`
	// This determines if traffic is allowed over public network. By default it is enabled.
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// The system meta data relating to this resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Value that indicates whether Trusted Service Access is Enabled or not.
	TrustedServiceAccessEnabled *bool `pulumi:"trustedServiceAccessEnabled"`
	// Resource type
	Type string `pulumi:"type"`
	// List VirtualNetwork Rules
	VirtualNetworkRules []NWRuleSetVirtualNetworkRulesResponse `pulumi:"virtualNetworkRules"`
}

// Defaults sets the appropriate defaults for LookupNamespaceNetworkRuleSetResult
func (val *LookupNamespaceNetworkRuleSetResult) Defaults() *LookupNamespaceNetworkRuleSetResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.PublicNetworkAccess) {
		publicNetworkAccess_ := "Enabled"
		tmp.PublicNetworkAccess = &publicNetworkAccess_
	}
	return &tmp
}
