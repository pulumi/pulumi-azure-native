// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200214

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Uploads files to VMs (Linux, Windows). Corresponds to Packer file provisioner
type ImageTemplateFileCustomizer struct {
	// The absolute path to a file (with nested directory structures already created) where the file (from sourceUri) will be uploaded to in the VM
	Destination *string `pulumi:"destination"`
	// Friendly Name to provide context on what this customization step does
	Name *string `pulumi:"name"`
	// SHA256 checksum of the file provided in the sourceUri field above
	Sha256Checksum *string `pulumi:"sha256Checksum"`
	// The URI of the file to be uploaded for customizing the VM. It can be a github link, SAS URI for Azure Storage, etc
	SourceUri *string `pulumi:"sourceUri"`
	// The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
	// Expected value is 'File'.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for ImageTemplateFileCustomizer
func (val *ImageTemplateFileCustomizer) Defaults() *ImageTemplateFileCustomizer {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Sha256Checksum) {
		sha256Checksum_ := ""
		tmp.Sha256Checksum = &sha256Checksum_
	}
	return &tmp
}

// Uploads files to VMs (Linux, Windows). Corresponds to Packer file provisioner
type ImageTemplateFileCustomizerResponse struct {
	// The absolute path to a file (with nested directory structures already created) where the file (from sourceUri) will be uploaded to in the VM
	Destination *string `pulumi:"destination"`
	// Friendly Name to provide context on what this customization step does
	Name *string `pulumi:"name"`
	// SHA256 checksum of the file provided in the sourceUri field above
	Sha256Checksum *string `pulumi:"sha256Checksum"`
	// The URI of the file to be uploaded for customizing the VM. It can be a github link, SAS URI for Azure Storage, etc
	SourceUri *string `pulumi:"sourceUri"`
	// The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
	// Expected value is 'File'.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for ImageTemplateFileCustomizerResponse
func (val *ImageTemplateFileCustomizerResponse) Defaults() *ImageTemplateFileCustomizerResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Sha256Checksum) {
		sha256Checksum_ := ""
		tmp.Sha256Checksum = &sha256Checksum_
	}
	return &tmp
}

// Identity for the image template.
type ImageTemplateIdentity struct {
	// The type of identity used for the image template. The type 'None' will remove any identities from the image template.
	Type *ResourceIdentityType `pulumi:"type"`
	// The list of user identities associated with the image template. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]interface{} `pulumi:"userAssignedIdentities"`
}

// ImageTemplateIdentityInput is an input type that accepts ImageTemplateIdentityArgs and ImageTemplateIdentityOutput values.
// You can construct a concrete instance of `ImageTemplateIdentityInput` via:
//
//	ImageTemplateIdentityArgs{...}
type ImageTemplateIdentityInput interface {
	pulumi.Input

	ToImageTemplateIdentityOutput() ImageTemplateIdentityOutput
	ToImageTemplateIdentityOutputWithContext(context.Context) ImageTemplateIdentityOutput
}

// Identity for the image template.
type ImageTemplateIdentityArgs struct {
	// The type of identity used for the image template. The type 'None' will remove any identities from the image template.
	Type ResourceIdentityTypePtrInput `pulumi:"type"`
	// The list of user identities associated with the image template. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.MapInput `pulumi:"userAssignedIdentities"`
}

func (ImageTemplateIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateIdentity)(nil)).Elem()
}

func (i ImageTemplateIdentityArgs) ToImageTemplateIdentityOutput() ImageTemplateIdentityOutput {
	return i.ToImageTemplateIdentityOutputWithContext(context.Background())
}

func (i ImageTemplateIdentityArgs) ToImageTemplateIdentityOutputWithContext(ctx context.Context) ImageTemplateIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateIdentityOutput)
}

// Identity for the image template.
type ImageTemplateIdentityOutput struct{ *pulumi.OutputState }

func (ImageTemplateIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateIdentity)(nil)).Elem()
}

func (o ImageTemplateIdentityOutput) ToImageTemplateIdentityOutput() ImageTemplateIdentityOutput {
	return o
}

func (o ImageTemplateIdentityOutput) ToImageTemplateIdentityOutputWithContext(ctx context.Context) ImageTemplateIdentityOutput {
	return o
}

// The type of identity used for the image template. The type 'None' will remove any identities from the image template.
func (o ImageTemplateIdentityOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v ImageTemplateIdentity) *ResourceIdentityType { return v.Type }).(ResourceIdentityTypePtrOutput)
}

// The list of user identities associated with the image template. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ImageTemplateIdentityOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v ImageTemplateIdentity) map[string]interface{} { return v.UserAssignedIdentities }).(pulumi.MapOutput)
}

// Identity for the image template.
type ImageTemplateIdentityResponse struct {
	// The type of identity used for the image template. The type 'None' will remove any identities from the image template.
	Type *string `pulumi:"type"`
	// The list of user identities associated with the image template. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]ImageTemplateIdentityResponseUserAssignedIdentities `pulumi:"userAssignedIdentities"`
}

// Identity for the image template.
type ImageTemplateIdentityResponseOutput struct{ *pulumi.OutputState }

func (ImageTemplateIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateIdentityResponse)(nil)).Elem()
}

func (o ImageTemplateIdentityResponseOutput) ToImageTemplateIdentityResponseOutput() ImageTemplateIdentityResponseOutput {
	return o
}

func (o ImageTemplateIdentityResponseOutput) ToImageTemplateIdentityResponseOutputWithContext(ctx context.Context) ImageTemplateIdentityResponseOutput {
	return o
}

// The type of identity used for the image template. The type 'None' will remove any identities from the image template.
func (o ImageTemplateIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageTemplateIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the image template. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ImageTemplateIdentityResponseOutput) UserAssignedIdentities() ImageTemplateIdentityResponseUserAssignedIdentitiesMapOutput {
	return o.ApplyT(func(v ImageTemplateIdentityResponse) map[string]ImageTemplateIdentityResponseUserAssignedIdentities {
		return v.UserAssignedIdentities
	}).(ImageTemplateIdentityResponseUserAssignedIdentitiesMapOutput)
}

type ImageTemplateIdentityResponseUserAssignedIdentities struct {
	// The client id of user assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

type ImageTemplateIdentityResponseUserAssignedIdentitiesOutput struct{ *pulumi.OutputState }

func (ImageTemplateIdentityResponseUserAssignedIdentitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (o ImageTemplateIdentityResponseUserAssignedIdentitiesOutput) ToImageTemplateIdentityResponseUserAssignedIdentitiesOutput() ImageTemplateIdentityResponseUserAssignedIdentitiesOutput {
	return o
}

func (o ImageTemplateIdentityResponseUserAssignedIdentitiesOutput) ToImageTemplateIdentityResponseUserAssignedIdentitiesOutputWithContext(ctx context.Context) ImageTemplateIdentityResponseUserAssignedIdentitiesOutput {
	return o
}

// The client id of user assigned identity.
func (o ImageTemplateIdentityResponseUserAssignedIdentitiesOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ImageTemplateIdentityResponseUserAssignedIdentities) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal id of user assigned identity.
func (o ImageTemplateIdentityResponseUserAssignedIdentitiesOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ImageTemplateIdentityResponseUserAssignedIdentities) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type ImageTemplateIdentityResponseUserAssignedIdentitiesMapOutput struct{ *pulumi.OutputState }

func (ImageTemplateIdentityResponseUserAssignedIdentitiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ImageTemplateIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (o ImageTemplateIdentityResponseUserAssignedIdentitiesMapOutput) ToImageTemplateIdentityResponseUserAssignedIdentitiesMapOutput() ImageTemplateIdentityResponseUserAssignedIdentitiesMapOutput {
	return o
}

func (o ImageTemplateIdentityResponseUserAssignedIdentitiesMapOutput) ToImageTemplateIdentityResponseUserAssignedIdentitiesMapOutputWithContext(ctx context.Context) ImageTemplateIdentityResponseUserAssignedIdentitiesMapOutput {
	return o
}

func (o ImageTemplateIdentityResponseUserAssignedIdentitiesMapOutput) MapIndex(k pulumi.StringInput) ImageTemplateIdentityResponseUserAssignedIdentitiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ImageTemplateIdentityResponseUserAssignedIdentities {
		return vs[0].(map[string]ImageTemplateIdentityResponseUserAssignedIdentities)[vs[1].(string)]
	}).(ImageTemplateIdentityResponseUserAssignedIdentitiesOutput)
}

// Describes the latest status of running an image template
type ImageTemplateLastRunStatusResponse struct {
	// End time of the last run (UTC)
	EndTime *string `pulumi:"endTime"`
	// Verbose information about the last run state
	Message *string `pulumi:"message"`
	// State of the last run
	RunState *string `pulumi:"runState"`
	// Sub-state of the last run
	RunSubState *string `pulumi:"runSubState"`
	// Start time of the last run (UTC)
	StartTime *string `pulumi:"startTime"`
}

// Describes the latest status of running an image template
type ImageTemplateLastRunStatusResponseOutput struct{ *pulumi.OutputState }

func (ImageTemplateLastRunStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateLastRunStatusResponse)(nil)).Elem()
}

func (o ImageTemplateLastRunStatusResponseOutput) ToImageTemplateLastRunStatusResponseOutput() ImageTemplateLastRunStatusResponseOutput {
	return o
}

func (o ImageTemplateLastRunStatusResponseOutput) ToImageTemplateLastRunStatusResponseOutputWithContext(ctx context.Context) ImageTemplateLastRunStatusResponseOutput {
	return o
}

// End time of the last run (UTC)
func (o ImageTemplateLastRunStatusResponseOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageTemplateLastRunStatusResponse) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Verbose information about the last run state
func (o ImageTemplateLastRunStatusResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageTemplateLastRunStatusResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// State of the last run
func (o ImageTemplateLastRunStatusResponseOutput) RunState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageTemplateLastRunStatusResponse) *string { return v.RunState }).(pulumi.StringPtrOutput)
}

// Sub-state of the last run
func (o ImageTemplateLastRunStatusResponseOutput) RunSubState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageTemplateLastRunStatusResponse) *string { return v.RunSubState }).(pulumi.StringPtrOutput)
}

// Start time of the last run (UTC)
func (o ImageTemplateLastRunStatusResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageTemplateLastRunStatusResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Distribute as a Managed Disk Image.
type ImageTemplateManagedImageDistributor struct {
	// Tags that will be applied to the artifact once it has been created/updated by the distributor.
	ArtifactTags map[string]string `pulumi:"artifactTags"`
	// Resource Id of the Managed Disk Image
	ImageId string `pulumi:"imageId"`
	// Azure location for the image, should match if image already exists
	Location string `pulumi:"location"`
	// The name to be used for the associated RunOutput.
	RunOutputName string `pulumi:"runOutputName"`
	// Type of distribution.
	// Expected value is 'ManagedImage'.
	Type string `pulumi:"type"`
}

// Distribute as a Managed Disk Image.
type ImageTemplateManagedImageDistributorResponse struct {
	// Tags that will be applied to the artifact once it has been created/updated by the distributor.
	ArtifactTags map[string]string `pulumi:"artifactTags"`
	// Resource Id of the Managed Disk Image
	ImageId string `pulumi:"imageId"`
	// Azure location for the image, should match if image already exists
	Location string `pulumi:"location"`
	// The name to be used for the associated RunOutput.
	RunOutputName string `pulumi:"runOutputName"`
	// Type of distribution.
	// Expected value is 'ManagedImage'.
	Type string `pulumi:"type"`
}

// Describes an image source that is a managed image in customer subscription.
type ImageTemplateManagedImageSource struct {
	// ARM resource id of the managed image in customer subscription
	ImageId string `pulumi:"imageId"`
	// Specifies the type of source image you want to start with.
	// Expected value is 'ManagedImage'.
	Type string `pulumi:"type"`
}

// Describes an image source that is a managed image in customer subscription.
type ImageTemplateManagedImageSourceResponse struct {
	// ARM resource id of the managed image in customer subscription
	ImageId string `pulumi:"imageId"`
	// Specifies the type of source image you want to start with.
	// Expected value is 'ManagedImage'.
	Type string `pulumi:"type"`
}

// Describes an image source from [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
type ImageTemplatePlatformImageSource struct {
	// Image offer from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
	Offer *string `pulumi:"offer"`
	// Optional configuration of purchase plan for platform image.
	PlanInfo *PlatformImagePurchasePlan `pulumi:"planInfo"`
	// Image Publisher in [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
	Publisher *string `pulumi:"publisher"`
	// Image sku from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
	Sku *string `pulumi:"sku"`
	// Specifies the type of source image you want to start with.
	// Expected value is 'PlatformImage'.
	Type string `pulumi:"type"`
	// Image version from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages). If 'latest' is specified here, the version is evaluated when the image build takes place, not when the template is submitted. Specifying 'latest' could cause ROUNDTRIP_INCONSISTENT_PROPERTY issue which will be fixed.
	Version *string `pulumi:"version"`
}

// Describes an image source from [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
type ImageTemplatePlatformImageSourceResponse struct {
	// Image offer from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
	Offer *string `pulumi:"offer"`
	// Optional configuration of purchase plan for platform image.
	PlanInfo *PlatformImagePurchasePlanResponse `pulumi:"planInfo"`
	// Image Publisher in [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
	Publisher *string `pulumi:"publisher"`
	// Image sku from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
	Sku *string `pulumi:"sku"`
	// Specifies the type of source image you want to start with.
	// Expected value is 'PlatformImage'.
	Type string `pulumi:"type"`
	// Image version from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages). If 'latest' is specified here, the version is evaluated when the image build takes place, not when the template is submitted. Specifying 'latest' could cause ROUNDTRIP_INCONSISTENT_PROPERTY issue which will be fixed.
	Version *string `pulumi:"version"`
}

// Runs the specified PowerShell on the VM (Windows). Corresponds to Packer powershell provisioner. Exactly one of 'scriptUri' or 'inline' can be specified.
type ImageTemplatePowerShellCustomizer struct {
	// Array of PowerShell commands to execute
	Inline []string `pulumi:"inline"`
	// Friendly Name to provide context on what this customization step does
	Name *string `pulumi:"name"`
	// If specified, the PowerShell script will be run with elevated privileges using the Local System user. Can only be true when the runElevated field above is set to true.
	RunAsSystem *bool `pulumi:"runAsSystem"`
	// If specified, the PowerShell script will be run with elevated privileges
	RunElevated *bool `pulumi:"runElevated"`
	// URI of the PowerShell script to be run for customizing. It can be a github link, SAS URI for Azure Storage, etc
	ScriptUri *string `pulumi:"scriptUri"`
	// SHA256 checksum of the power shell script provided in the scriptUri field above
	Sha256Checksum *string `pulumi:"sha256Checksum"`
	// The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
	// Expected value is 'PowerShell'.
	Type string `pulumi:"type"`
	// Valid exit codes for the PowerShell script. [Default: 0]
	ValidExitCodes []int `pulumi:"validExitCodes"`
}

// Defaults sets the appropriate defaults for ImageTemplatePowerShellCustomizer
func (val *ImageTemplatePowerShellCustomizer) Defaults() *ImageTemplatePowerShellCustomizer {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.RunAsSystem) {
		runAsSystem_ := false
		tmp.RunAsSystem = &runAsSystem_
	}
	if isZero(tmp.RunElevated) {
		runElevated_ := false
		tmp.RunElevated = &runElevated_
	}
	if isZero(tmp.Sha256Checksum) {
		sha256Checksum_ := ""
		tmp.Sha256Checksum = &sha256Checksum_
	}
	return &tmp
}

// Runs the specified PowerShell on the VM (Windows). Corresponds to Packer powershell provisioner. Exactly one of 'scriptUri' or 'inline' can be specified.
type ImageTemplatePowerShellCustomizerResponse struct {
	// Array of PowerShell commands to execute
	Inline []string `pulumi:"inline"`
	// Friendly Name to provide context on what this customization step does
	Name *string `pulumi:"name"`
	// If specified, the PowerShell script will be run with elevated privileges using the Local System user. Can only be true when the runElevated field above is set to true.
	RunAsSystem *bool `pulumi:"runAsSystem"`
	// If specified, the PowerShell script will be run with elevated privileges
	RunElevated *bool `pulumi:"runElevated"`
	// URI of the PowerShell script to be run for customizing. It can be a github link, SAS URI for Azure Storage, etc
	ScriptUri *string `pulumi:"scriptUri"`
	// SHA256 checksum of the power shell script provided in the scriptUri field above
	Sha256Checksum *string `pulumi:"sha256Checksum"`
	// The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
	// Expected value is 'PowerShell'.
	Type string `pulumi:"type"`
	// Valid exit codes for the PowerShell script. [Default: 0]
	ValidExitCodes []int `pulumi:"validExitCodes"`
}

// Defaults sets the appropriate defaults for ImageTemplatePowerShellCustomizerResponse
func (val *ImageTemplatePowerShellCustomizerResponse) Defaults() *ImageTemplatePowerShellCustomizerResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.RunAsSystem) {
		runAsSystem_ := false
		tmp.RunAsSystem = &runAsSystem_
	}
	if isZero(tmp.RunElevated) {
		runElevated_ := false
		tmp.RunElevated = &runElevated_
	}
	if isZero(tmp.Sha256Checksum) {
		sha256Checksum_ := ""
		tmp.Sha256Checksum = &sha256Checksum_
	}
	return &tmp
}

// Reboots a VM and waits for it to come back online (Windows). Corresponds to Packer windows-restart provisioner
type ImageTemplateRestartCustomizer struct {
	// Friendly Name to provide context on what this customization step does
	Name *string `pulumi:"name"`
	// Command to check if restart succeeded [Default: '']
	RestartCheckCommand *string `pulumi:"restartCheckCommand"`
	// Command to execute the restart [Default: 'shutdown /r /f /t 0 /c "packer restart"']
	RestartCommand *string `pulumi:"restartCommand"`
	// Restart timeout specified as a string of magnitude and unit, e.g. '5m' (5 minutes) or '2h' (2 hours) [Default: '5m']
	RestartTimeout *string `pulumi:"restartTimeout"`
	// The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
	// Expected value is 'WindowsRestart'.
	Type string `pulumi:"type"`
}

// Reboots a VM and waits for it to come back online (Windows). Corresponds to Packer windows-restart provisioner
type ImageTemplateRestartCustomizerResponse struct {
	// Friendly Name to provide context on what this customization step does
	Name *string `pulumi:"name"`
	// Command to check if restart succeeded [Default: '']
	RestartCheckCommand *string `pulumi:"restartCheckCommand"`
	// Command to execute the restart [Default: 'shutdown /r /f /t 0 /c "packer restart"']
	RestartCommand *string `pulumi:"restartCommand"`
	// Restart timeout specified as a string of magnitude and unit, e.g. '5m' (5 minutes) or '2h' (2 hours) [Default: '5m']
	RestartTimeout *string `pulumi:"restartTimeout"`
	// The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
	// Expected value is 'WindowsRestart'.
	Type string `pulumi:"type"`
}

// Distribute via Shared Image Gallery.
type ImageTemplateSharedImageDistributor struct {
	// Tags that will be applied to the artifact once it has been created/updated by the distributor.
	ArtifactTags map[string]string `pulumi:"artifactTags"`
	// Flag that indicates whether created image version should be excluded from latest. Omit to use the default (false).
	ExcludeFromLatest *bool `pulumi:"excludeFromLatest"`
	// Resource Id of the Shared Image Gallery image
	GalleryImageId string `pulumi:"galleryImageId"`
	// A list of regions that the image will be replicated to
	ReplicationRegions []string `pulumi:"replicationRegions"`
	// The name to be used for the associated RunOutput.
	RunOutputName string `pulumi:"runOutputName"`
	// Storage account type to be used to store the shared image. Omit to use the default (Standard_LRS).
	StorageAccountType *string `pulumi:"storageAccountType"`
	// Type of distribution.
	// Expected value is 'SharedImage'.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for ImageTemplateSharedImageDistributor
func (val *ImageTemplateSharedImageDistributor) Defaults() *ImageTemplateSharedImageDistributor {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.ExcludeFromLatest) {
		excludeFromLatest_ := false
		tmp.ExcludeFromLatest = &excludeFromLatest_
	}
	return &tmp
}

// Distribute via Shared Image Gallery.
type ImageTemplateSharedImageDistributorResponse struct {
	// Tags that will be applied to the artifact once it has been created/updated by the distributor.
	ArtifactTags map[string]string `pulumi:"artifactTags"`
	// Flag that indicates whether created image version should be excluded from latest. Omit to use the default (false).
	ExcludeFromLatest *bool `pulumi:"excludeFromLatest"`
	// Resource Id of the Shared Image Gallery image
	GalleryImageId string `pulumi:"galleryImageId"`
	// A list of regions that the image will be replicated to
	ReplicationRegions []string `pulumi:"replicationRegions"`
	// The name to be used for the associated RunOutput.
	RunOutputName string `pulumi:"runOutputName"`
	// Storage account type to be used to store the shared image. Omit to use the default (Standard_LRS).
	StorageAccountType *string `pulumi:"storageAccountType"`
	// Type of distribution.
	// Expected value is 'SharedImage'.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for ImageTemplateSharedImageDistributorResponse
func (val *ImageTemplateSharedImageDistributorResponse) Defaults() *ImageTemplateSharedImageDistributorResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.ExcludeFromLatest) {
		excludeFromLatest_ := false
		tmp.ExcludeFromLatest = &excludeFromLatest_
	}
	return &tmp
}

// Describes an image source that is an image version in a shared image gallery.
type ImageTemplateSharedImageVersionSource struct {
	// ARM resource id of the image version in the shared image gallery
	ImageVersionId string `pulumi:"imageVersionId"`
	// Specifies the type of source image you want to start with.
	// Expected value is 'SharedImageVersion'.
	Type string `pulumi:"type"`
}

// Describes an image source that is an image version in a shared image gallery.
type ImageTemplateSharedImageVersionSourceResponse struct {
	// ARM resource id of the image version in the shared image gallery
	ImageVersionId string `pulumi:"imageVersionId"`
	// Specifies the type of source image you want to start with.
	// Expected value is 'SharedImageVersion'.
	Type string `pulumi:"type"`
}

// Runs a shell script during the customization phase (Linux). Corresponds to Packer shell provisioner. Exactly one of 'scriptUri' or 'inline' can be specified.
type ImageTemplateShellCustomizer struct {
	// Array of shell commands to execute
	Inline []string `pulumi:"inline"`
	// Friendly Name to provide context on what this customization step does
	Name *string `pulumi:"name"`
	// URI of the shell script to be run for customizing. It can be a github link, SAS URI for Azure Storage, etc
	ScriptUri *string `pulumi:"scriptUri"`
	// SHA256 checksum of the shell script provided in the scriptUri field
	Sha256Checksum *string `pulumi:"sha256Checksum"`
	// The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
	// Expected value is 'Shell'.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for ImageTemplateShellCustomizer
func (val *ImageTemplateShellCustomizer) Defaults() *ImageTemplateShellCustomizer {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Sha256Checksum) {
		sha256Checksum_ := ""
		tmp.Sha256Checksum = &sha256Checksum_
	}
	return &tmp
}

// Runs a shell script during the customization phase (Linux). Corresponds to Packer shell provisioner. Exactly one of 'scriptUri' or 'inline' can be specified.
type ImageTemplateShellCustomizerResponse struct {
	// Array of shell commands to execute
	Inline []string `pulumi:"inline"`
	// Friendly Name to provide context on what this customization step does
	Name *string `pulumi:"name"`
	// URI of the shell script to be run for customizing. It can be a github link, SAS URI for Azure Storage, etc
	ScriptUri *string `pulumi:"scriptUri"`
	// SHA256 checksum of the shell script provided in the scriptUri field
	Sha256Checksum *string `pulumi:"sha256Checksum"`
	// The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
	// Expected value is 'Shell'.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for ImageTemplateShellCustomizerResponse
func (val *ImageTemplateShellCustomizerResponse) Defaults() *ImageTemplateShellCustomizerResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Sha256Checksum) {
		sha256Checksum_ := ""
		tmp.Sha256Checksum = &sha256Checksum_
	}
	return &tmp
}

// Distribute via VHD in a storage account.
type ImageTemplateVhdDistributor struct {
	// Tags that will be applied to the artifact once it has been created/updated by the distributor.
	ArtifactTags map[string]string `pulumi:"artifactTags"`
	// The name to be used for the associated RunOutput.
	RunOutputName string `pulumi:"runOutputName"`
	// Type of distribution.
	// Expected value is 'VHD'.
	Type string `pulumi:"type"`
}

// Distribute via VHD in a storage account.
type ImageTemplateVhdDistributorResponse struct {
	// Tags that will be applied to the artifact once it has been created/updated by the distributor.
	ArtifactTags map[string]string `pulumi:"artifactTags"`
	// The name to be used for the associated RunOutput.
	RunOutputName string `pulumi:"runOutputName"`
	// Type of distribution.
	// Expected value is 'VHD'.
	Type string `pulumi:"type"`
}

// Describes the virtual machine used to build, customize and capture images
type ImageTemplateVmProfile struct {
	// Size of the OS disk in GB. Omit or specify 0 to use Azure's default OS disk size.
	OsDiskSizeGB *int `pulumi:"osDiskSizeGB"`
	// Size of the virtual machine used to build, customize and capture images. Omit or specify empty string to use the default (Standard_D1_v2 for Gen1 images and Standard_D2ds_v4 for Gen2 images).
	VmSize *string `pulumi:"vmSize"`
	// Optional configuration of the virtual network to use to deploy the build virtual machine in. Omit if no specific virtual network needs to be used.
	VnetConfig *VirtualNetworkConfig `pulumi:"vnetConfig"`
}

// Defaults sets the appropriate defaults for ImageTemplateVmProfile
func (val *ImageTemplateVmProfile) Defaults() *ImageTemplateVmProfile {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.OsDiskSizeGB) {
		osDiskSizeGB_ := 0
		tmp.OsDiskSizeGB = &osDiskSizeGB_
	}
	if isZero(tmp.VmSize) {
		vmSize_ := ""
		tmp.VmSize = &vmSize_
	}
	return &tmp
}

// ImageTemplateVmProfileInput is an input type that accepts ImageTemplateVmProfileArgs and ImageTemplateVmProfileOutput values.
// You can construct a concrete instance of `ImageTemplateVmProfileInput` via:
//
//	ImageTemplateVmProfileArgs{...}
type ImageTemplateVmProfileInput interface {
	pulumi.Input

	ToImageTemplateVmProfileOutput() ImageTemplateVmProfileOutput
	ToImageTemplateVmProfileOutputWithContext(context.Context) ImageTemplateVmProfileOutput
}

// Describes the virtual machine used to build, customize and capture images
type ImageTemplateVmProfileArgs struct {
	// Size of the OS disk in GB. Omit or specify 0 to use Azure's default OS disk size.
	OsDiskSizeGB pulumi.IntPtrInput `pulumi:"osDiskSizeGB"`
	// Size of the virtual machine used to build, customize and capture images. Omit or specify empty string to use the default (Standard_D1_v2 for Gen1 images and Standard_D2ds_v4 for Gen2 images).
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
	// Optional configuration of the virtual network to use to deploy the build virtual machine in. Omit if no specific virtual network needs to be used.
	VnetConfig VirtualNetworkConfigPtrInput `pulumi:"vnetConfig"`
}

// Defaults sets the appropriate defaults for ImageTemplateVmProfileArgs
func (val *ImageTemplateVmProfileArgs) Defaults() *ImageTemplateVmProfileArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.OsDiskSizeGB) {
		tmp.OsDiskSizeGB = pulumi.IntPtr(0)
	}
	if isZero(tmp.VmSize) {
		tmp.VmSize = pulumi.StringPtr("")
	}
	return &tmp
}
func (ImageTemplateVmProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateVmProfile)(nil)).Elem()
}

func (i ImageTemplateVmProfileArgs) ToImageTemplateVmProfileOutput() ImageTemplateVmProfileOutput {
	return i.ToImageTemplateVmProfileOutputWithContext(context.Background())
}

func (i ImageTemplateVmProfileArgs) ToImageTemplateVmProfileOutputWithContext(ctx context.Context) ImageTemplateVmProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateVmProfileOutput)
}

func (i ImageTemplateVmProfileArgs) ToImageTemplateVmProfilePtrOutput() ImageTemplateVmProfilePtrOutput {
	return i.ToImageTemplateVmProfilePtrOutputWithContext(context.Background())
}

func (i ImageTemplateVmProfileArgs) ToImageTemplateVmProfilePtrOutputWithContext(ctx context.Context) ImageTemplateVmProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateVmProfileOutput).ToImageTemplateVmProfilePtrOutputWithContext(ctx)
}

// ImageTemplateVmProfilePtrInput is an input type that accepts ImageTemplateVmProfileArgs, ImageTemplateVmProfilePtr and ImageTemplateVmProfilePtrOutput values.
// You can construct a concrete instance of `ImageTemplateVmProfilePtrInput` via:
//
//	        ImageTemplateVmProfileArgs{...}
//
//	or:
//
//	        nil
type ImageTemplateVmProfilePtrInput interface {
	pulumi.Input

	ToImageTemplateVmProfilePtrOutput() ImageTemplateVmProfilePtrOutput
	ToImageTemplateVmProfilePtrOutputWithContext(context.Context) ImageTemplateVmProfilePtrOutput
}

type imageTemplateVmProfilePtrType ImageTemplateVmProfileArgs

func ImageTemplateVmProfilePtr(v *ImageTemplateVmProfileArgs) ImageTemplateVmProfilePtrInput {
	return (*imageTemplateVmProfilePtrType)(v)
}

func (*imageTemplateVmProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageTemplateVmProfile)(nil)).Elem()
}

func (i *imageTemplateVmProfilePtrType) ToImageTemplateVmProfilePtrOutput() ImageTemplateVmProfilePtrOutput {
	return i.ToImageTemplateVmProfilePtrOutputWithContext(context.Background())
}

func (i *imageTemplateVmProfilePtrType) ToImageTemplateVmProfilePtrOutputWithContext(ctx context.Context) ImageTemplateVmProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateVmProfilePtrOutput)
}

// Describes the virtual machine used to build, customize and capture images
type ImageTemplateVmProfileOutput struct{ *pulumi.OutputState }

func (ImageTemplateVmProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateVmProfile)(nil)).Elem()
}

func (o ImageTemplateVmProfileOutput) ToImageTemplateVmProfileOutput() ImageTemplateVmProfileOutput {
	return o
}

func (o ImageTemplateVmProfileOutput) ToImageTemplateVmProfileOutputWithContext(ctx context.Context) ImageTemplateVmProfileOutput {
	return o
}

func (o ImageTemplateVmProfileOutput) ToImageTemplateVmProfilePtrOutput() ImageTemplateVmProfilePtrOutput {
	return o.ToImageTemplateVmProfilePtrOutputWithContext(context.Background())
}

func (o ImageTemplateVmProfileOutput) ToImageTemplateVmProfilePtrOutputWithContext(ctx context.Context) ImageTemplateVmProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageTemplateVmProfile) *ImageTemplateVmProfile {
		return &v
	}).(ImageTemplateVmProfilePtrOutput)
}

// Size of the OS disk in GB. Omit or specify 0 to use Azure's default OS disk size.
func (o ImageTemplateVmProfileOutput) OsDiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ImageTemplateVmProfile) *int { return v.OsDiskSizeGB }).(pulumi.IntPtrOutput)
}

// Size of the virtual machine used to build, customize and capture images. Omit or specify empty string to use the default (Standard_D1_v2 for Gen1 images and Standard_D2ds_v4 for Gen2 images).
func (o ImageTemplateVmProfileOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageTemplateVmProfile) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

// Optional configuration of the virtual network to use to deploy the build virtual machine in. Omit if no specific virtual network needs to be used.
func (o ImageTemplateVmProfileOutput) VnetConfig() VirtualNetworkConfigPtrOutput {
	return o.ApplyT(func(v ImageTemplateVmProfile) *VirtualNetworkConfig { return v.VnetConfig }).(VirtualNetworkConfigPtrOutput)
}

type ImageTemplateVmProfilePtrOutput struct{ *pulumi.OutputState }

func (ImageTemplateVmProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageTemplateVmProfile)(nil)).Elem()
}

func (o ImageTemplateVmProfilePtrOutput) ToImageTemplateVmProfilePtrOutput() ImageTemplateVmProfilePtrOutput {
	return o
}

func (o ImageTemplateVmProfilePtrOutput) ToImageTemplateVmProfilePtrOutputWithContext(ctx context.Context) ImageTemplateVmProfilePtrOutput {
	return o
}

func (o ImageTemplateVmProfilePtrOutput) Elem() ImageTemplateVmProfileOutput {
	return o.ApplyT(func(v *ImageTemplateVmProfile) ImageTemplateVmProfile {
		if v != nil {
			return *v
		}
		var ret ImageTemplateVmProfile
		return ret
	}).(ImageTemplateVmProfileOutput)
}

// Size of the OS disk in GB. Omit or specify 0 to use Azure's default OS disk size.
func (o ImageTemplateVmProfilePtrOutput) OsDiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ImageTemplateVmProfile) *int {
		if v == nil {
			return nil
		}
		return v.OsDiskSizeGB
	}).(pulumi.IntPtrOutput)
}

// Size of the virtual machine used to build, customize and capture images. Omit or specify empty string to use the default (Standard_D1_v2 for Gen1 images and Standard_D2ds_v4 for Gen2 images).
func (o ImageTemplateVmProfilePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageTemplateVmProfile) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// Optional configuration of the virtual network to use to deploy the build virtual machine in. Omit if no specific virtual network needs to be used.
func (o ImageTemplateVmProfilePtrOutput) VnetConfig() VirtualNetworkConfigPtrOutput {
	return o.ApplyT(func(v *ImageTemplateVmProfile) *VirtualNetworkConfig {
		if v == nil {
			return nil
		}
		return v.VnetConfig
	}).(VirtualNetworkConfigPtrOutput)
}

// Describes the virtual machine used to build, customize and capture images
type ImageTemplateVmProfileResponse struct {
	// Size of the OS disk in GB. Omit or specify 0 to use Azure's default OS disk size.
	OsDiskSizeGB *int `pulumi:"osDiskSizeGB"`
	// Size of the virtual machine used to build, customize and capture images. Omit or specify empty string to use the default (Standard_D1_v2 for Gen1 images and Standard_D2ds_v4 for Gen2 images).
	VmSize *string `pulumi:"vmSize"`
	// Optional configuration of the virtual network to use to deploy the build virtual machine in. Omit if no specific virtual network needs to be used.
	VnetConfig *VirtualNetworkConfigResponse `pulumi:"vnetConfig"`
}

// Defaults sets the appropriate defaults for ImageTemplateVmProfileResponse
func (val *ImageTemplateVmProfileResponse) Defaults() *ImageTemplateVmProfileResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.OsDiskSizeGB) {
		osDiskSizeGB_ := 0
		tmp.OsDiskSizeGB = &osDiskSizeGB_
	}
	if isZero(tmp.VmSize) {
		vmSize_ := ""
		tmp.VmSize = &vmSize_
	}
	return &tmp
}

// Describes the virtual machine used to build, customize and capture images
type ImageTemplateVmProfileResponseOutput struct{ *pulumi.OutputState }

func (ImageTemplateVmProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateVmProfileResponse)(nil)).Elem()
}

func (o ImageTemplateVmProfileResponseOutput) ToImageTemplateVmProfileResponseOutput() ImageTemplateVmProfileResponseOutput {
	return o
}

func (o ImageTemplateVmProfileResponseOutput) ToImageTemplateVmProfileResponseOutputWithContext(ctx context.Context) ImageTemplateVmProfileResponseOutput {
	return o
}

// Size of the OS disk in GB. Omit or specify 0 to use Azure's default OS disk size.
func (o ImageTemplateVmProfileResponseOutput) OsDiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ImageTemplateVmProfileResponse) *int { return v.OsDiskSizeGB }).(pulumi.IntPtrOutput)
}

// Size of the virtual machine used to build, customize and capture images. Omit or specify empty string to use the default (Standard_D1_v2 for Gen1 images and Standard_D2ds_v4 for Gen2 images).
func (o ImageTemplateVmProfileResponseOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageTemplateVmProfileResponse) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

// Optional configuration of the virtual network to use to deploy the build virtual machine in. Omit if no specific virtual network needs to be used.
func (o ImageTemplateVmProfileResponseOutput) VnetConfig() VirtualNetworkConfigResponsePtrOutput {
	return o.ApplyT(func(v ImageTemplateVmProfileResponse) *VirtualNetworkConfigResponse { return v.VnetConfig }).(VirtualNetworkConfigResponsePtrOutput)
}

type ImageTemplateVmProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ImageTemplateVmProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageTemplateVmProfileResponse)(nil)).Elem()
}

func (o ImageTemplateVmProfileResponsePtrOutput) ToImageTemplateVmProfileResponsePtrOutput() ImageTemplateVmProfileResponsePtrOutput {
	return o
}

func (o ImageTemplateVmProfileResponsePtrOutput) ToImageTemplateVmProfileResponsePtrOutputWithContext(ctx context.Context) ImageTemplateVmProfileResponsePtrOutput {
	return o
}

func (o ImageTemplateVmProfileResponsePtrOutput) Elem() ImageTemplateVmProfileResponseOutput {
	return o.ApplyT(func(v *ImageTemplateVmProfileResponse) ImageTemplateVmProfileResponse {
		if v != nil {
			return *v
		}
		var ret ImageTemplateVmProfileResponse
		return ret
	}).(ImageTemplateVmProfileResponseOutput)
}

// Size of the OS disk in GB. Omit or specify 0 to use Azure's default OS disk size.
func (o ImageTemplateVmProfileResponsePtrOutput) OsDiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ImageTemplateVmProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.OsDiskSizeGB
	}).(pulumi.IntPtrOutput)
}

// Size of the virtual machine used to build, customize and capture images. Omit or specify empty string to use the default (Standard_D1_v2 for Gen1 images and Standard_D2ds_v4 for Gen2 images).
func (o ImageTemplateVmProfileResponsePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageTemplateVmProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// Optional configuration of the virtual network to use to deploy the build virtual machine in. Omit if no specific virtual network needs to be used.
func (o ImageTemplateVmProfileResponsePtrOutput) VnetConfig() VirtualNetworkConfigResponsePtrOutput {
	return o.ApplyT(func(v *ImageTemplateVmProfileResponse) *VirtualNetworkConfigResponse {
		if v == nil {
			return nil
		}
		return v.VnetConfig
	}).(VirtualNetworkConfigResponsePtrOutput)
}

// Installs Windows Updates. Corresponds to Packer Windows Update Provisioner (https://github.com/rgl/packer-provisioner-windows-update)
type ImageTemplateWindowsUpdateCustomizer struct {
	// Array of filters to select updates to apply. Omit or specify empty array to use the default (no filter). Refer to above link for examples and detailed description of this field.
	Filters []string `pulumi:"filters"`
	// Friendly Name to provide context on what this customization step does
	Name *string `pulumi:"name"`
	// Criteria to search updates. Omit or specify empty string to use the default (search all). Refer to above link for examples and detailed description of this field.
	SearchCriteria *string `pulumi:"searchCriteria"`
	// The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
	// Expected value is 'WindowsUpdate'.
	Type string `pulumi:"type"`
	// Maximum number of updates to apply at a time. Omit or specify 0 to use the default (1000)
	UpdateLimit *int `pulumi:"updateLimit"`
}

// Installs Windows Updates. Corresponds to Packer Windows Update Provisioner (https://github.com/rgl/packer-provisioner-windows-update)
type ImageTemplateWindowsUpdateCustomizerResponse struct {
	// Array of filters to select updates to apply. Omit or specify empty array to use the default (no filter). Refer to above link for examples and detailed description of this field.
	Filters []string `pulumi:"filters"`
	// Friendly Name to provide context on what this customization step does
	Name *string `pulumi:"name"`
	// Criteria to search updates. Omit or specify empty string to use the default (search all). Refer to above link for examples and detailed description of this field.
	SearchCriteria *string `pulumi:"searchCriteria"`
	// The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
	// Expected value is 'WindowsUpdate'.
	Type string `pulumi:"type"`
	// Maximum number of updates to apply at a time. Omit or specify 0 to use the default (1000)
	UpdateLimit *int `pulumi:"updateLimit"`
}

// Purchase plan configuration for platform image.
type PlatformImagePurchasePlan struct {
	// Name of the purchase plan.
	PlanName string `pulumi:"planName"`
	// Product of the purchase plan.
	PlanProduct string `pulumi:"planProduct"`
	// Publisher of the purchase plan.
	PlanPublisher string `pulumi:"planPublisher"`
}

// Purchase plan configuration for platform image.
type PlatformImagePurchasePlanResponse struct {
	// Name of the purchase plan.
	PlanName string `pulumi:"planName"`
	// Product of the purchase plan.
	PlanProduct string `pulumi:"planProduct"`
	// Publisher of the purchase plan.
	PlanPublisher string `pulumi:"planPublisher"`
}

// Describes the error happened when create or update an image template
type ProvisioningErrorResponse struct {
	// Verbose error message about the provisioning failure
	Message *string `pulumi:"message"`
	// Error code of the provisioning failure
	ProvisioningErrorCode *string `pulumi:"provisioningErrorCode"`
}

// Describes the error happened when create or update an image template
type ProvisioningErrorResponseOutput struct{ *pulumi.OutputState }

func (ProvisioningErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningErrorResponse)(nil)).Elem()
}

func (o ProvisioningErrorResponseOutput) ToProvisioningErrorResponseOutput() ProvisioningErrorResponseOutput {
	return o
}

func (o ProvisioningErrorResponseOutput) ToProvisioningErrorResponseOutputWithContext(ctx context.Context) ProvisioningErrorResponseOutput {
	return o
}

// Verbose error message about the provisioning failure
func (o ProvisioningErrorResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningErrorResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Error code of the provisioning failure
func (o ProvisioningErrorResponseOutput) ProvisioningErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningErrorResponse) *string { return v.ProvisioningErrorCode }).(pulumi.StringPtrOutput)
}

// Virtual Network configuration.
type VirtualNetworkConfig struct {
	// Resource id of a pre-existing subnet.
	SubnetId *string `pulumi:"subnetId"`
}

// VirtualNetworkConfigInput is an input type that accepts VirtualNetworkConfigArgs and VirtualNetworkConfigOutput values.
// You can construct a concrete instance of `VirtualNetworkConfigInput` via:
//
//	VirtualNetworkConfigArgs{...}
type VirtualNetworkConfigInput interface {
	pulumi.Input

	ToVirtualNetworkConfigOutput() VirtualNetworkConfigOutput
	ToVirtualNetworkConfigOutputWithContext(context.Context) VirtualNetworkConfigOutput
}

// Virtual Network configuration.
type VirtualNetworkConfigArgs struct {
	// Resource id of a pre-existing subnet.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (VirtualNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkConfig)(nil)).Elem()
}

func (i VirtualNetworkConfigArgs) ToVirtualNetworkConfigOutput() VirtualNetworkConfigOutput {
	return i.ToVirtualNetworkConfigOutputWithContext(context.Background())
}

func (i VirtualNetworkConfigArgs) ToVirtualNetworkConfigOutputWithContext(ctx context.Context) VirtualNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigOutput)
}

func (i VirtualNetworkConfigArgs) ToVirtualNetworkConfigPtrOutput() VirtualNetworkConfigPtrOutput {
	return i.ToVirtualNetworkConfigPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkConfigArgs) ToVirtualNetworkConfigPtrOutputWithContext(ctx context.Context) VirtualNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigOutput).ToVirtualNetworkConfigPtrOutputWithContext(ctx)
}

// VirtualNetworkConfigPtrInput is an input type that accepts VirtualNetworkConfigArgs, VirtualNetworkConfigPtr and VirtualNetworkConfigPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkConfigPtrInput` via:
//
//	        VirtualNetworkConfigArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkConfigPtrInput interface {
	pulumi.Input

	ToVirtualNetworkConfigPtrOutput() VirtualNetworkConfigPtrOutput
	ToVirtualNetworkConfigPtrOutputWithContext(context.Context) VirtualNetworkConfigPtrOutput
}

type virtualNetworkConfigPtrType VirtualNetworkConfigArgs

func VirtualNetworkConfigPtr(v *VirtualNetworkConfigArgs) VirtualNetworkConfigPtrInput {
	return (*virtualNetworkConfigPtrType)(v)
}

func (*virtualNetworkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkConfig)(nil)).Elem()
}

func (i *virtualNetworkConfigPtrType) ToVirtualNetworkConfigPtrOutput() VirtualNetworkConfigPtrOutput {
	return i.ToVirtualNetworkConfigPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkConfigPtrType) ToVirtualNetworkConfigPtrOutputWithContext(ctx context.Context) VirtualNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigPtrOutput)
}

// Virtual Network configuration.
type VirtualNetworkConfigOutput struct{ *pulumi.OutputState }

func (VirtualNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkConfig)(nil)).Elem()
}

func (o VirtualNetworkConfigOutput) ToVirtualNetworkConfigOutput() VirtualNetworkConfigOutput {
	return o
}

func (o VirtualNetworkConfigOutput) ToVirtualNetworkConfigOutputWithContext(ctx context.Context) VirtualNetworkConfigOutput {
	return o
}

func (o VirtualNetworkConfigOutput) ToVirtualNetworkConfigPtrOutput() VirtualNetworkConfigPtrOutput {
	return o.ToVirtualNetworkConfigPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkConfigOutput) ToVirtualNetworkConfigPtrOutputWithContext(ctx context.Context) VirtualNetworkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkConfig) *VirtualNetworkConfig {
		return &v
	}).(VirtualNetworkConfigPtrOutput)
}

// Resource id of a pre-existing subnet.
func (o VirtualNetworkConfigOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkConfig) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type VirtualNetworkConfigPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkConfig)(nil)).Elem()
}

func (o VirtualNetworkConfigPtrOutput) ToVirtualNetworkConfigPtrOutput() VirtualNetworkConfigPtrOutput {
	return o
}

func (o VirtualNetworkConfigPtrOutput) ToVirtualNetworkConfigPtrOutputWithContext(ctx context.Context) VirtualNetworkConfigPtrOutput {
	return o
}

func (o VirtualNetworkConfigPtrOutput) Elem() VirtualNetworkConfigOutput {
	return o.ApplyT(func(v *VirtualNetworkConfig) VirtualNetworkConfig {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkConfig
		return ret
	}).(VirtualNetworkConfigOutput)
}

// Resource id of a pre-existing subnet.
func (o VirtualNetworkConfigPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfig) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// Virtual Network configuration.
type VirtualNetworkConfigResponse struct {
	// Resource id of a pre-existing subnet.
	SubnetId *string `pulumi:"subnetId"`
}

// Virtual Network configuration.
type VirtualNetworkConfigResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkConfigResponse)(nil)).Elem()
}

func (o VirtualNetworkConfigResponseOutput) ToVirtualNetworkConfigResponseOutput() VirtualNetworkConfigResponseOutput {
	return o
}

func (o VirtualNetworkConfigResponseOutput) ToVirtualNetworkConfigResponseOutputWithContext(ctx context.Context) VirtualNetworkConfigResponseOutput {
	return o
}

// Resource id of a pre-existing subnet.
func (o VirtualNetworkConfigResponseOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkConfigResponse) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type VirtualNetworkConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkConfigResponse)(nil)).Elem()
}

func (o VirtualNetworkConfigResponsePtrOutput) ToVirtualNetworkConfigResponsePtrOutput() VirtualNetworkConfigResponsePtrOutput {
	return o
}

func (o VirtualNetworkConfigResponsePtrOutput) ToVirtualNetworkConfigResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkConfigResponsePtrOutput {
	return o
}

func (o VirtualNetworkConfigResponsePtrOutput) Elem() VirtualNetworkConfigResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkConfigResponse) VirtualNetworkConfigResponse {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkConfigResponse
		return ret
	}).(VirtualNetworkConfigResponseOutput)
}

// Resource id of a pre-existing subnet.
func (o VirtualNetworkConfigResponsePtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ImageTemplateIdentityOutput{})
	pulumi.RegisterOutputType(ImageTemplateIdentityResponseOutput{})
	pulumi.RegisterOutputType(ImageTemplateIdentityResponseUserAssignedIdentitiesOutput{})
	pulumi.RegisterOutputType(ImageTemplateIdentityResponseUserAssignedIdentitiesMapOutput{})
	pulumi.RegisterOutputType(ImageTemplateLastRunStatusResponseOutput{})
	pulumi.RegisterOutputType(ImageTemplateVmProfileOutput{})
	pulumi.RegisterOutputType(ImageTemplateVmProfilePtrOutput{})
	pulumi.RegisterOutputType(ImageTemplateVmProfileResponseOutput{})
	pulumi.RegisterOutputType(ImageTemplateVmProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ProvisioningErrorResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigResponsePtrOutput{})
}
