// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cache

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AofFrequency string

const (
	AofFrequency_1s    = AofFrequency("1s")
	AofFrequencyAlways = AofFrequency("always")
)

func (AofFrequency) ElementType() reflect.Type {
	return reflect.TypeOf((*AofFrequency)(nil)).Elem()
}

func (e AofFrequency) ToAofFrequencyOutput() AofFrequencyOutput {
	return pulumi.ToOutput(e).(AofFrequencyOutput)
}

func (e AofFrequency) ToAofFrequencyOutputWithContext(ctx context.Context) AofFrequencyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AofFrequencyOutput)
}

func (e AofFrequency) ToAofFrequencyPtrOutput() AofFrequencyPtrOutput {
	return e.ToAofFrequencyPtrOutputWithContext(context.Background())
}

func (e AofFrequency) ToAofFrequencyPtrOutputWithContext(ctx context.Context) AofFrequencyPtrOutput {
	return AofFrequency(e).ToAofFrequencyOutputWithContext(ctx).ToAofFrequencyPtrOutputWithContext(ctx)
}

func (e AofFrequency) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AofFrequency) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AofFrequency) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AofFrequency) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AofFrequencyOutput struct{ *pulumi.OutputState }

func (AofFrequencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AofFrequency)(nil)).Elem()
}

func (o AofFrequencyOutput) ToAofFrequencyOutput() AofFrequencyOutput {
	return o
}

func (o AofFrequencyOutput) ToAofFrequencyOutputWithContext(ctx context.Context) AofFrequencyOutput {
	return o
}

func (o AofFrequencyOutput) ToAofFrequencyPtrOutput() AofFrequencyPtrOutput {
	return o.ToAofFrequencyPtrOutputWithContext(context.Background())
}

func (o AofFrequencyOutput) ToAofFrequencyPtrOutputWithContext(ctx context.Context) AofFrequencyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AofFrequency) *AofFrequency {
		return &v
	}).(AofFrequencyPtrOutput)
}

func (o AofFrequencyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AofFrequencyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AofFrequency) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AofFrequencyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AofFrequencyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AofFrequency) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AofFrequencyPtrOutput struct{ *pulumi.OutputState }

func (AofFrequencyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AofFrequency)(nil)).Elem()
}

func (o AofFrequencyPtrOutput) ToAofFrequencyPtrOutput() AofFrequencyPtrOutput {
	return o
}

func (o AofFrequencyPtrOutput) ToAofFrequencyPtrOutputWithContext(ctx context.Context) AofFrequencyPtrOutput {
	return o
}

func (o AofFrequencyPtrOutput) Elem() AofFrequencyOutput {
	return o.ApplyT(func(v *AofFrequency) AofFrequency {
		if v != nil {
			return *v
		}
		var ret AofFrequency
		return ret
	}).(AofFrequencyOutput)
}

func (o AofFrequencyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AofFrequencyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AofFrequency) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AofFrequencyInput is an input type that accepts AofFrequencyArgs and AofFrequencyOutput values.
// You can construct a concrete instance of `AofFrequencyInput` via:
//
//          AofFrequencyArgs{...}
type AofFrequencyInput interface {
	pulumi.Input

	ToAofFrequencyOutput() AofFrequencyOutput
	ToAofFrequencyOutputWithContext(context.Context) AofFrequencyOutput
}

var aofFrequencyPtrType = reflect.TypeOf((**AofFrequency)(nil)).Elem()

type AofFrequencyPtrInput interface {
	pulumi.Input

	ToAofFrequencyPtrOutput() AofFrequencyPtrOutput
	ToAofFrequencyPtrOutputWithContext(context.Context) AofFrequencyPtrOutput
}

type aofFrequencyPtr string

func AofFrequencyPtr(v string) AofFrequencyPtrInput {
	return (*aofFrequencyPtr)(&v)
}

func (*aofFrequencyPtr) ElementType() reflect.Type {
	return aofFrequencyPtrType
}

func (in *aofFrequencyPtr) ToAofFrequencyPtrOutput() AofFrequencyPtrOutput {
	return pulumi.ToOutput(in).(AofFrequencyPtrOutput)
}

func (in *aofFrequencyPtr) ToAofFrequencyPtrOutputWithContext(ctx context.Context) AofFrequencyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AofFrequencyPtrOutput)
}

type ClusteringPolicy string

const (
	ClusteringPolicyEnterpriseCluster = ClusteringPolicy("EnterpriseCluster")
	ClusteringPolicyOSSCluster        = ClusteringPolicy("OSSCluster")
)

func (ClusteringPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusteringPolicy)(nil)).Elem()
}

func (e ClusteringPolicy) ToClusteringPolicyOutput() ClusteringPolicyOutput {
	return pulumi.ToOutput(e).(ClusteringPolicyOutput)
}

func (e ClusteringPolicy) ToClusteringPolicyOutputWithContext(ctx context.Context) ClusteringPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClusteringPolicyOutput)
}

func (e ClusteringPolicy) ToClusteringPolicyPtrOutput() ClusteringPolicyPtrOutput {
	return e.ToClusteringPolicyPtrOutputWithContext(context.Background())
}

func (e ClusteringPolicy) ToClusteringPolicyPtrOutputWithContext(ctx context.Context) ClusteringPolicyPtrOutput {
	return ClusteringPolicy(e).ToClusteringPolicyOutputWithContext(ctx).ToClusteringPolicyPtrOutputWithContext(ctx)
}

func (e ClusteringPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusteringPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusteringPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClusteringPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClusteringPolicyOutput struct{ *pulumi.OutputState }

func (ClusteringPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusteringPolicy)(nil)).Elem()
}

func (o ClusteringPolicyOutput) ToClusteringPolicyOutput() ClusteringPolicyOutput {
	return o
}

func (o ClusteringPolicyOutput) ToClusteringPolicyOutputWithContext(ctx context.Context) ClusteringPolicyOutput {
	return o
}

func (o ClusteringPolicyOutput) ToClusteringPolicyPtrOutput() ClusteringPolicyPtrOutput {
	return o.ToClusteringPolicyPtrOutputWithContext(context.Background())
}

func (o ClusteringPolicyOutput) ToClusteringPolicyPtrOutputWithContext(ctx context.Context) ClusteringPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusteringPolicy) *ClusteringPolicy {
		return &v
	}).(ClusteringPolicyPtrOutput)
}

func (o ClusteringPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusteringPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusteringPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusteringPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusteringPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusteringPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusteringPolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusteringPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusteringPolicy)(nil)).Elem()
}

func (o ClusteringPolicyPtrOutput) ToClusteringPolicyPtrOutput() ClusteringPolicyPtrOutput {
	return o
}

func (o ClusteringPolicyPtrOutput) ToClusteringPolicyPtrOutputWithContext(ctx context.Context) ClusteringPolicyPtrOutput {
	return o
}

func (o ClusteringPolicyPtrOutput) Elem() ClusteringPolicyOutput {
	return o.ApplyT(func(v *ClusteringPolicy) ClusteringPolicy {
		if v != nil {
			return *v
		}
		var ret ClusteringPolicy
		return ret
	}).(ClusteringPolicyOutput)
}

func (o ClusteringPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusteringPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusteringPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClusteringPolicyInput is an input type that accepts ClusteringPolicyArgs and ClusteringPolicyOutput values.
// You can construct a concrete instance of `ClusteringPolicyInput` via:
//
//          ClusteringPolicyArgs{...}
type ClusteringPolicyInput interface {
	pulumi.Input

	ToClusteringPolicyOutput() ClusteringPolicyOutput
	ToClusteringPolicyOutputWithContext(context.Context) ClusteringPolicyOutput
}

var clusteringPolicyPtrType = reflect.TypeOf((**ClusteringPolicy)(nil)).Elem()

type ClusteringPolicyPtrInput interface {
	pulumi.Input

	ToClusteringPolicyPtrOutput() ClusteringPolicyPtrOutput
	ToClusteringPolicyPtrOutputWithContext(context.Context) ClusteringPolicyPtrOutput
}

type clusteringPolicyPtr string

func ClusteringPolicyPtr(v string) ClusteringPolicyPtrInput {
	return (*clusteringPolicyPtr)(&v)
}

func (*clusteringPolicyPtr) ElementType() reflect.Type {
	return clusteringPolicyPtrType
}

func (in *clusteringPolicyPtr) ToClusteringPolicyPtrOutput() ClusteringPolicyPtrOutput {
	return pulumi.ToOutput(in).(ClusteringPolicyPtrOutput)
}

func (in *clusteringPolicyPtr) ToClusteringPolicyPtrOutputWithContext(ctx context.Context) ClusteringPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClusteringPolicyPtrOutput)
}

type DayOfWeek string

const (
	DayOfWeekMonday    = DayOfWeek("Monday")
	DayOfWeekTuesday   = DayOfWeek("Tuesday")
	DayOfWeekWednesday = DayOfWeek("Wednesday")
	DayOfWeekThursday  = DayOfWeek("Thursday")
	DayOfWeekFriday    = DayOfWeek("Friday")
	DayOfWeekSaturday  = DayOfWeek("Saturday")
	DayOfWeekSunday    = DayOfWeek("Sunday")
	DayOfWeekEveryday  = DayOfWeek("Everyday")
	DayOfWeekWeekend   = DayOfWeek("Weekend")
)

func (DayOfWeek) ElementType() reflect.Type {
	return reflect.TypeOf((*DayOfWeek)(nil)).Elem()
}

func (e DayOfWeek) ToDayOfWeekOutput() DayOfWeekOutput {
	return pulumi.ToOutput(e).(DayOfWeekOutput)
}

func (e DayOfWeek) ToDayOfWeekOutputWithContext(ctx context.Context) DayOfWeekOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DayOfWeekOutput)
}

func (e DayOfWeek) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return e.ToDayOfWeekPtrOutputWithContext(context.Background())
}

func (e DayOfWeek) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return DayOfWeek(e).ToDayOfWeekOutputWithContext(ctx).ToDayOfWeekPtrOutputWithContext(ctx)
}

func (e DayOfWeek) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DayOfWeek) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DayOfWeek) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DayOfWeek) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DayOfWeekOutput struct{ *pulumi.OutputState }

func (DayOfWeekOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DayOfWeek)(nil)).Elem()
}

func (o DayOfWeekOutput) ToDayOfWeekOutput() DayOfWeekOutput {
	return o
}

func (o DayOfWeekOutput) ToDayOfWeekOutputWithContext(ctx context.Context) DayOfWeekOutput {
	return o
}

func (o DayOfWeekOutput) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return o.ToDayOfWeekPtrOutputWithContext(context.Background())
}

func (o DayOfWeekOutput) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DayOfWeek) *DayOfWeek {
		return &v
	}).(DayOfWeekPtrOutput)
}

func (o DayOfWeekOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DayOfWeekOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DayOfWeek) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DayOfWeekOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DayOfWeekOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DayOfWeek) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DayOfWeekPtrOutput struct{ *pulumi.OutputState }

func (DayOfWeekPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DayOfWeek)(nil)).Elem()
}

func (o DayOfWeekPtrOutput) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return o
}

func (o DayOfWeekPtrOutput) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return o
}

func (o DayOfWeekPtrOutput) Elem() DayOfWeekOutput {
	return o.ApplyT(func(v *DayOfWeek) DayOfWeek {
		if v != nil {
			return *v
		}
		var ret DayOfWeek
		return ret
	}).(DayOfWeekOutput)
}

func (o DayOfWeekPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DayOfWeekPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DayOfWeek) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DayOfWeekInput is an input type that accepts DayOfWeekArgs and DayOfWeekOutput values.
// You can construct a concrete instance of `DayOfWeekInput` via:
//
//          DayOfWeekArgs{...}
type DayOfWeekInput interface {
	pulumi.Input

	ToDayOfWeekOutput() DayOfWeekOutput
	ToDayOfWeekOutputWithContext(context.Context) DayOfWeekOutput
}

var dayOfWeekPtrType = reflect.TypeOf((**DayOfWeek)(nil)).Elem()

type DayOfWeekPtrInput interface {
	pulumi.Input

	ToDayOfWeekPtrOutput() DayOfWeekPtrOutput
	ToDayOfWeekPtrOutputWithContext(context.Context) DayOfWeekPtrOutput
}

type dayOfWeekPtr string

func DayOfWeekPtr(v string) DayOfWeekPtrInput {
	return (*dayOfWeekPtr)(&v)
}

func (*dayOfWeekPtr) ElementType() reflect.Type {
	return dayOfWeekPtrType
}

func (in *dayOfWeekPtr) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return pulumi.ToOutput(in).(DayOfWeekPtrOutput)
}

func (in *dayOfWeekPtr) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DayOfWeekPtrOutput)
}

type EvictionPolicy string

const (
	EvictionPolicyAllKeysLFU     = EvictionPolicy("AllKeysLFU")
	EvictionPolicyAllKeysLRU     = EvictionPolicy("AllKeysLRU")
	EvictionPolicyAllKeysRandom  = EvictionPolicy("AllKeysRandom")
	EvictionPolicyVolatileLRU    = EvictionPolicy("VolatileLRU")
	EvictionPolicyVolatileLFU    = EvictionPolicy("VolatileLFU")
	EvictionPolicyVolatileTTL    = EvictionPolicy("VolatileTTL")
	EvictionPolicyVolatileRandom = EvictionPolicy("VolatileRandom")
	EvictionPolicyNoEviction     = EvictionPolicy("NoEviction")
)

func (EvictionPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*EvictionPolicy)(nil)).Elem()
}

func (e EvictionPolicy) ToEvictionPolicyOutput() EvictionPolicyOutput {
	return pulumi.ToOutput(e).(EvictionPolicyOutput)
}

func (e EvictionPolicy) ToEvictionPolicyOutputWithContext(ctx context.Context) EvictionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EvictionPolicyOutput)
}

func (e EvictionPolicy) ToEvictionPolicyPtrOutput() EvictionPolicyPtrOutput {
	return e.ToEvictionPolicyPtrOutputWithContext(context.Background())
}

func (e EvictionPolicy) ToEvictionPolicyPtrOutputWithContext(ctx context.Context) EvictionPolicyPtrOutput {
	return EvictionPolicy(e).ToEvictionPolicyOutputWithContext(ctx).ToEvictionPolicyPtrOutputWithContext(ctx)
}

func (e EvictionPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvictionPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvictionPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EvictionPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EvictionPolicyOutput struct{ *pulumi.OutputState }

func (EvictionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvictionPolicy)(nil)).Elem()
}

func (o EvictionPolicyOutput) ToEvictionPolicyOutput() EvictionPolicyOutput {
	return o
}

func (o EvictionPolicyOutput) ToEvictionPolicyOutputWithContext(ctx context.Context) EvictionPolicyOutput {
	return o
}

func (o EvictionPolicyOutput) ToEvictionPolicyPtrOutput() EvictionPolicyPtrOutput {
	return o.ToEvictionPolicyPtrOutputWithContext(context.Background())
}

func (o EvictionPolicyOutput) ToEvictionPolicyPtrOutputWithContext(ctx context.Context) EvictionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvictionPolicy) *EvictionPolicy {
		return &v
	}).(EvictionPolicyPtrOutput)
}

func (o EvictionPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EvictionPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvictionPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EvictionPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvictionPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvictionPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EvictionPolicyPtrOutput struct{ *pulumi.OutputState }

func (EvictionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvictionPolicy)(nil)).Elem()
}

func (o EvictionPolicyPtrOutput) ToEvictionPolicyPtrOutput() EvictionPolicyPtrOutput {
	return o
}

func (o EvictionPolicyPtrOutput) ToEvictionPolicyPtrOutputWithContext(ctx context.Context) EvictionPolicyPtrOutput {
	return o
}

func (o EvictionPolicyPtrOutput) Elem() EvictionPolicyOutput {
	return o.ApplyT(func(v *EvictionPolicy) EvictionPolicy {
		if v != nil {
			return *v
		}
		var ret EvictionPolicy
		return ret
	}).(EvictionPolicyOutput)
}

func (o EvictionPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvictionPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EvictionPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EvictionPolicyInput is an input type that accepts EvictionPolicyArgs and EvictionPolicyOutput values.
// You can construct a concrete instance of `EvictionPolicyInput` via:
//
//          EvictionPolicyArgs{...}
type EvictionPolicyInput interface {
	pulumi.Input

	ToEvictionPolicyOutput() EvictionPolicyOutput
	ToEvictionPolicyOutputWithContext(context.Context) EvictionPolicyOutput
}

var evictionPolicyPtrType = reflect.TypeOf((**EvictionPolicy)(nil)).Elem()

type EvictionPolicyPtrInput interface {
	pulumi.Input

	ToEvictionPolicyPtrOutput() EvictionPolicyPtrOutput
	ToEvictionPolicyPtrOutputWithContext(context.Context) EvictionPolicyPtrOutput
}

type evictionPolicyPtr string

func EvictionPolicyPtr(v string) EvictionPolicyPtrInput {
	return (*evictionPolicyPtr)(&v)
}

func (*evictionPolicyPtr) ElementType() reflect.Type {
	return evictionPolicyPtrType
}

func (in *evictionPolicyPtr) ToEvictionPolicyPtrOutput() EvictionPolicyPtrOutput {
	return pulumi.ToOutput(in).(EvictionPolicyPtrOutput)
}

func (in *evictionPolicyPtr) ToEvictionPolicyPtrOutputWithContext(ctx context.Context) EvictionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EvictionPolicyPtrOutput)
}

type PrivateEndpointServiceConnectionStatus string

const (
	PrivateEndpointServiceConnectionStatusPending  = PrivateEndpointServiceConnectionStatus("Pending")
	PrivateEndpointServiceConnectionStatusApproved = PrivateEndpointServiceConnectionStatus("Approved")
	PrivateEndpointServiceConnectionStatusRejected = PrivateEndpointServiceConnectionStatus("Rejected")
)

func (PrivateEndpointServiceConnectionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput {
	return pulumi.ToOutput(e).(PrivateEndpointServiceConnectionStatusOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrivateEndpointServiceConnectionStatusOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return e.ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return PrivateEndpointServiceConnectionStatus(e).ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx).ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointServiceConnectionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrivateEndpointServiceConnectionStatusOutput struct{ *pulumi.OutputState }

func (PrivateEndpointServiceConnectionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return o.ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpointServiceConnectionStatus) *PrivateEndpointServiceConnectionStatus {
		return &v
	}).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateEndpointServiceConnectionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateEndpointServiceConnectionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrivateEndpointServiceConnectionStatusPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointServiceConnectionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) Elem() PrivateEndpointServiceConnectionStatusOutput {
	return o.ApplyT(func(v *PrivateEndpointServiceConnectionStatus) PrivateEndpointServiceConnectionStatus {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointServiceConnectionStatus
		return ret
	}).(PrivateEndpointServiceConnectionStatusOutput)
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrivateEndpointServiceConnectionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrivateEndpointServiceConnectionStatusInput is an input type that accepts PrivateEndpointServiceConnectionStatusArgs and PrivateEndpointServiceConnectionStatusOutput values.
// You can construct a concrete instance of `PrivateEndpointServiceConnectionStatusInput` via:
//
//          PrivateEndpointServiceConnectionStatusArgs{...}
type PrivateEndpointServiceConnectionStatusInput interface {
	pulumi.Input

	ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput
	ToPrivateEndpointServiceConnectionStatusOutputWithContext(context.Context) PrivateEndpointServiceConnectionStatusOutput
}

var privateEndpointServiceConnectionStatusPtrType = reflect.TypeOf((**PrivateEndpointServiceConnectionStatus)(nil)).Elem()

type PrivateEndpointServiceConnectionStatusPtrInput interface {
	pulumi.Input

	ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput
	ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Context) PrivateEndpointServiceConnectionStatusPtrOutput
}

type privateEndpointServiceConnectionStatusPtr string

func PrivateEndpointServiceConnectionStatusPtr(v string) PrivateEndpointServiceConnectionStatusPtrInput {
	return (*privateEndpointServiceConnectionStatusPtr)(&v)
}

func (*privateEndpointServiceConnectionStatusPtr) ElementType() reflect.Type {
	return privateEndpointServiceConnectionStatusPtrType
}

func (in *privateEndpointServiceConnectionStatusPtr) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return pulumi.ToOutput(in).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

func (in *privateEndpointServiceConnectionStatusPtr) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

type Protocol string

const (
	ProtocolEncrypted = Protocol("Encrypted")
	ProtocolPlaintext = Protocol("Plaintext")
)

func (Protocol) ElementType() reflect.Type {
	return reflect.TypeOf((*Protocol)(nil)).Elem()
}

func (e Protocol) ToProtocolOutput() ProtocolOutput {
	return pulumi.ToOutput(e).(ProtocolOutput)
}

func (e Protocol) ToProtocolOutputWithContext(ctx context.Context) ProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProtocolOutput)
}

func (e Protocol) ToProtocolPtrOutput() ProtocolPtrOutput {
	return e.ToProtocolPtrOutputWithContext(context.Background())
}

func (e Protocol) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return Protocol(e).ToProtocolOutputWithContext(ctx).ToProtocolPtrOutputWithContext(ctx)
}

func (e Protocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Protocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Protocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Protocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProtocolOutput struct{ *pulumi.OutputState }

func (ProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Protocol)(nil)).Elem()
}

func (o ProtocolOutput) ToProtocolOutput() ProtocolOutput {
	return o
}

func (o ProtocolOutput) ToProtocolOutputWithContext(ctx context.Context) ProtocolOutput {
	return o
}

func (o ProtocolOutput) ToProtocolPtrOutput() ProtocolPtrOutput {
	return o.ToProtocolPtrOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Protocol) *Protocol {
		return &v
	}).(ProtocolPtrOutput)
}

func (o ProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Protocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Protocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProtocolPtrOutput struct{ *pulumi.OutputState }

func (ProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Protocol)(nil)).Elem()
}

func (o ProtocolPtrOutput) ToProtocolPtrOutput() ProtocolPtrOutput {
	return o
}

func (o ProtocolPtrOutput) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return o
}

func (o ProtocolPtrOutput) Elem() ProtocolOutput {
	return o.ApplyT(func(v *Protocol) Protocol {
		if v != nil {
			return *v
		}
		var ret Protocol
		return ret
	}).(ProtocolOutput)
}

func (o ProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Protocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProtocolInput is an input type that accepts ProtocolArgs and ProtocolOutput values.
// You can construct a concrete instance of `ProtocolInput` via:
//
//          ProtocolArgs{...}
type ProtocolInput interface {
	pulumi.Input

	ToProtocolOutput() ProtocolOutput
	ToProtocolOutputWithContext(context.Context) ProtocolOutput
}

var protocolPtrType = reflect.TypeOf((**Protocol)(nil)).Elem()

type ProtocolPtrInput interface {
	pulumi.Input

	ToProtocolPtrOutput() ProtocolPtrOutput
	ToProtocolPtrOutputWithContext(context.Context) ProtocolPtrOutput
}

type protocolPtr string

func ProtocolPtr(v string) ProtocolPtrInput {
	return (*protocolPtr)(&v)
}

func (*protocolPtr) ElementType() reflect.Type {
	return protocolPtrType
}

func (in *protocolPtr) ToProtocolPtrOutput() ProtocolPtrOutput {
	return pulumi.ToOutput(in).(ProtocolPtrOutput)
}

func (in *protocolPtr) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProtocolPtrOutput)
}

type PublicNetworkAccess string

const (
	PublicNetworkAccessEnabled  = PublicNetworkAccess("Enabled")
	PublicNetworkAccessDisabled = PublicNetworkAccess("Disabled")
)

func (PublicNetworkAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return pulumi.ToOutput(e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return e.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return PublicNetworkAccess(e).ToPublicNetworkAccessOutputWithContext(ctx).ToPublicNetworkAccessPtrOutputWithContext(ctx)
}

func (e PublicNetworkAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicNetworkAccessOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkAccess) *PublicNetworkAccess {
		return &v
	}).(PublicNetworkAccessPtrOutput)
}

func (o PublicNetworkAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicNetworkAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkAccessPtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) Elem() PublicNetworkAccessOutput {
	return o.ApplyT(func(v *PublicNetworkAccess) PublicNetworkAccess {
		if v != nil {
			return *v
		}
		var ret PublicNetworkAccess
		return ret
	}).(PublicNetworkAccessOutput)
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicNetworkAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicNetworkAccessInput is an input type that accepts PublicNetworkAccessArgs and PublicNetworkAccessOutput values.
// You can construct a concrete instance of `PublicNetworkAccessInput` via:
//
//          PublicNetworkAccessArgs{...}
type PublicNetworkAccessInput interface {
	pulumi.Input

	ToPublicNetworkAccessOutput() PublicNetworkAccessOutput
	ToPublicNetworkAccessOutputWithContext(context.Context) PublicNetworkAccessOutput
}

var publicNetworkAccessPtrType = reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()

type PublicNetworkAccessPtrInput interface {
	pulumi.Input

	ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput
	ToPublicNetworkAccessPtrOutputWithContext(context.Context) PublicNetworkAccessPtrOutput
}

type publicNetworkAccessPtr string

func PublicNetworkAccessPtr(v string) PublicNetworkAccessPtrInput {
	return (*publicNetworkAccessPtr)(&v)
}

func (*publicNetworkAccessPtr) ElementType() reflect.Type {
	return publicNetworkAccessPtrType
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return pulumi.ToOutput(in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicNetworkAccessPtrOutput)
}

type RdbFrequency string

const (
	RdbFrequency_1h  = RdbFrequency("1h")
	RdbFrequency_6h  = RdbFrequency("6h")
	RdbFrequency_12h = RdbFrequency("12h")
)

func (RdbFrequency) ElementType() reflect.Type {
	return reflect.TypeOf((*RdbFrequency)(nil)).Elem()
}

func (e RdbFrequency) ToRdbFrequencyOutput() RdbFrequencyOutput {
	return pulumi.ToOutput(e).(RdbFrequencyOutput)
}

func (e RdbFrequency) ToRdbFrequencyOutputWithContext(ctx context.Context) RdbFrequencyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RdbFrequencyOutput)
}

func (e RdbFrequency) ToRdbFrequencyPtrOutput() RdbFrequencyPtrOutput {
	return e.ToRdbFrequencyPtrOutputWithContext(context.Background())
}

func (e RdbFrequency) ToRdbFrequencyPtrOutputWithContext(ctx context.Context) RdbFrequencyPtrOutput {
	return RdbFrequency(e).ToRdbFrequencyOutputWithContext(ctx).ToRdbFrequencyPtrOutputWithContext(ctx)
}

func (e RdbFrequency) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RdbFrequency) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RdbFrequency) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RdbFrequency) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RdbFrequencyOutput struct{ *pulumi.OutputState }

func (RdbFrequencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RdbFrequency)(nil)).Elem()
}

func (o RdbFrequencyOutput) ToRdbFrequencyOutput() RdbFrequencyOutput {
	return o
}

func (o RdbFrequencyOutput) ToRdbFrequencyOutputWithContext(ctx context.Context) RdbFrequencyOutput {
	return o
}

func (o RdbFrequencyOutput) ToRdbFrequencyPtrOutput() RdbFrequencyPtrOutput {
	return o.ToRdbFrequencyPtrOutputWithContext(context.Background())
}

func (o RdbFrequencyOutput) ToRdbFrequencyPtrOutputWithContext(ctx context.Context) RdbFrequencyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RdbFrequency) *RdbFrequency {
		return &v
	}).(RdbFrequencyPtrOutput)
}

func (o RdbFrequencyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RdbFrequencyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RdbFrequency) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RdbFrequencyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RdbFrequencyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RdbFrequency) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RdbFrequencyPtrOutput struct{ *pulumi.OutputState }

func (RdbFrequencyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RdbFrequency)(nil)).Elem()
}

func (o RdbFrequencyPtrOutput) ToRdbFrequencyPtrOutput() RdbFrequencyPtrOutput {
	return o
}

func (o RdbFrequencyPtrOutput) ToRdbFrequencyPtrOutputWithContext(ctx context.Context) RdbFrequencyPtrOutput {
	return o
}

func (o RdbFrequencyPtrOutput) Elem() RdbFrequencyOutput {
	return o.ApplyT(func(v *RdbFrequency) RdbFrequency {
		if v != nil {
			return *v
		}
		var ret RdbFrequency
		return ret
	}).(RdbFrequencyOutput)
}

func (o RdbFrequencyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RdbFrequencyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RdbFrequency) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RdbFrequencyInput is an input type that accepts RdbFrequencyArgs and RdbFrequencyOutput values.
// You can construct a concrete instance of `RdbFrequencyInput` via:
//
//          RdbFrequencyArgs{...}
type RdbFrequencyInput interface {
	pulumi.Input

	ToRdbFrequencyOutput() RdbFrequencyOutput
	ToRdbFrequencyOutputWithContext(context.Context) RdbFrequencyOutput
}

var rdbFrequencyPtrType = reflect.TypeOf((**RdbFrequency)(nil)).Elem()

type RdbFrequencyPtrInput interface {
	pulumi.Input

	ToRdbFrequencyPtrOutput() RdbFrequencyPtrOutput
	ToRdbFrequencyPtrOutputWithContext(context.Context) RdbFrequencyPtrOutput
}

type rdbFrequencyPtr string

func RdbFrequencyPtr(v string) RdbFrequencyPtrInput {
	return (*rdbFrequencyPtr)(&v)
}

func (*rdbFrequencyPtr) ElementType() reflect.Type {
	return rdbFrequencyPtrType
}

func (in *rdbFrequencyPtr) ToRdbFrequencyPtrOutput() RdbFrequencyPtrOutput {
	return pulumi.ToOutput(in).(RdbFrequencyPtrOutput)
}

func (in *rdbFrequencyPtr) ToRdbFrequencyPtrOutputWithContext(ctx context.Context) RdbFrequencyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RdbFrequencyPtrOutput)
}

type ReplicationRole string

const (
	ReplicationRolePrimary   = ReplicationRole("Primary")
	ReplicationRoleSecondary = ReplicationRole("Secondary")
)

func (ReplicationRole) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRole)(nil)).Elem()
}

func (e ReplicationRole) ToReplicationRoleOutput() ReplicationRoleOutput {
	return pulumi.ToOutput(e).(ReplicationRoleOutput)
}

func (e ReplicationRole) ToReplicationRoleOutputWithContext(ctx context.Context) ReplicationRoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ReplicationRoleOutput)
}

func (e ReplicationRole) ToReplicationRolePtrOutput() ReplicationRolePtrOutput {
	return e.ToReplicationRolePtrOutputWithContext(context.Background())
}

func (e ReplicationRole) ToReplicationRolePtrOutputWithContext(ctx context.Context) ReplicationRolePtrOutput {
	return ReplicationRole(e).ToReplicationRoleOutputWithContext(ctx).ToReplicationRolePtrOutputWithContext(ctx)
}

func (e ReplicationRole) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReplicationRole) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReplicationRole) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReplicationRole) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ReplicationRoleOutput struct{ *pulumi.OutputState }

func (ReplicationRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRole)(nil)).Elem()
}

func (o ReplicationRoleOutput) ToReplicationRoleOutput() ReplicationRoleOutput {
	return o
}

func (o ReplicationRoleOutput) ToReplicationRoleOutputWithContext(ctx context.Context) ReplicationRoleOutput {
	return o
}

func (o ReplicationRoleOutput) ToReplicationRolePtrOutput() ReplicationRolePtrOutput {
	return o.ToReplicationRolePtrOutputWithContext(context.Background())
}

func (o ReplicationRoleOutput) ToReplicationRolePtrOutputWithContext(ctx context.Context) ReplicationRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationRole) *ReplicationRole {
		return &v
	}).(ReplicationRolePtrOutput)
}

func (o ReplicationRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ReplicationRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReplicationRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ReplicationRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReplicationRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReplicationRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ReplicationRolePtrOutput struct{ *pulumi.OutputState }

func (ReplicationRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationRole)(nil)).Elem()
}

func (o ReplicationRolePtrOutput) ToReplicationRolePtrOutput() ReplicationRolePtrOutput {
	return o
}

func (o ReplicationRolePtrOutput) ToReplicationRolePtrOutputWithContext(ctx context.Context) ReplicationRolePtrOutput {
	return o
}

func (o ReplicationRolePtrOutput) Elem() ReplicationRoleOutput {
	return o.ApplyT(func(v *ReplicationRole) ReplicationRole {
		if v != nil {
			return *v
		}
		var ret ReplicationRole
		return ret
	}).(ReplicationRoleOutput)
}

func (o ReplicationRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReplicationRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ReplicationRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ReplicationRoleInput is an input type that accepts ReplicationRoleArgs and ReplicationRoleOutput values.
// You can construct a concrete instance of `ReplicationRoleInput` via:
//
//          ReplicationRoleArgs{...}
type ReplicationRoleInput interface {
	pulumi.Input

	ToReplicationRoleOutput() ReplicationRoleOutput
	ToReplicationRoleOutputWithContext(context.Context) ReplicationRoleOutput
}

var replicationRolePtrType = reflect.TypeOf((**ReplicationRole)(nil)).Elem()

type ReplicationRolePtrInput interface {
	pulumi.Input

	ToReplicationRolePtrOutput() ReplicationRolePtrOutput
	ToReplicationRolePtrOutputWithContext(context.Context) ReplicationRolePtrOutput
}

type replicationRolePtr string

func ReplicationRolePtr(v string) ReplicationRolePtrInput {
	return (*replicationRolePtr)(&v)
}

func (*replicationRolePtr) ElementType() reflect.Type {
	return replicationRolePtrType
}

func (in *replicationRolePtr) ToReplicationRolePtrOutput() ReplicationRolePtrOutput {
	return pulumi.ToOutput(in).(ReplicationRolePtrOutput)
}

func (in *replicationRolePtr) ToReplicationRolePtrOutputWithContext(ctx context.Context) ReplicationRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ReplicationRolePtrOutput)
}

type SkuFamily string

const (
	SkuFamilyC = SkuFamily("C")
	SkuFamilyP = SkuFamily("P")
)

func (SkuFamily) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuFamily)(nil)).Elem()
}

func (e SkuFamily) ToSkuFamilyOutput() SkuFamilyOutput {
	return pulumi.ToOutput(e).(SkuFamilyOutput)
}

func (e SkuFamily) ToSkuFamilyOutputWithContext(ctx context.Context) SkuFamilyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuFamilyOutput)
}

func (e SkuFamily) ToSkuFamilyPtrOutput() SkuFamilyPtrOutput {
	return e.ToSkuFamilyPtrOutputWithContext(context.Background())
}

func (e SkuFamily) ToSkuFamilyPtrOutputWithContext(ctx context.Context) SkuFamilyPtrOutput {
	return SkuFamily(e).ToSkuFamilyOutputWithContext(ctx).ToSkuFamilyPtrOutputWithContext(ctx)
}

func (e SkuFamily) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuFamily) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuFamily) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuFamily) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuFamilyOutput struct{ *pulumi.OutputState }

func (SkuFamilyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuFamily)(nil)).Elem()
}

func (o SkuFamilyOutput) ToSkuFamilyOutput() SkuFamilyOutput {
	return o
}

func (o SkuFamilyOutput) ToSkuFamilyOutputWithContext(ctx context.Context) SkuFamilyOutput {
	return o
}

func (o SkuFamilyOutput) ToSkuFamilyPtrOutput() SkuFamilyPtrOutput {
	return o.ToSkuFamilyPtrOutputWithContext(context.Background())
}

func (o SkuFamilyOutput) ToSkuFamilyPtrOutputWithContext(ctx context.Context) SkuFamilyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuFamily) *SkuFamily {
		return &v
	}).(SkuFamilyPtrOutput)
}

func (o SkuFamilyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuFamilyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuFamily) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuFamilyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuFamilyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuFamily) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuFamilyPtrOutput struct{ *pulumi.OutputState }

func (SkuFamilyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuFamily)(nil)).Elem()
}

func (o SkuFamilyPtrOutput) ToSkuFamilyPtrOutput() SkuFamilyPtrOutput {
	return o
}

func (o SkuFamilyPtrOutput) ToSkuFamilyPtrOutputWithContext(ctx context.Context) SkuFamilyPtrOutput {
	return o
}

func (o SkuFamilyPtrOutput) Elem() SkuFamilyOutput {
	return o.ApplyT(func(v *SkuFamily) SkuFamily {
		if v != nil {
			return *v
		}
		var ret SkuFamily
		return ret
	}).(SkuFamilyOutput)
}

func (o SkuFamilyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuFamilyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuFamily) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuFamilyInput is an input type that accepts SkuFamilyArgs and SkuFamilyOutput values.
// You can construct a concrete instance of `SkuFamilyInput` via:
//
//          SkuFamilyArgs{...}
type SkuFamilyInput interface {
	pulumi.Input

	ToSkuFamilyOutput() SkuFamilyOutput
	ToSkuFamilyOutputWithContext(context.Context) SkuFamilyOutput
}

var skuFamilyPtrType = reflect.TypeOf((**SkuFamily)(nil)).Elem()

type SkuFamilyPtrInput interface {
	pulumi.Input

	ToSkuFamilyPtrOutput() SkuFamilyPtrOutput
	ToSkuFamilyPtrOutputWithContext(context.Context) SkuFamilyPtrOutput
}

type skuFamilyPtr string

func SkuFamilyPtr(v string) SkuFamilyPtrInput {
	return (*skuFamilyPtr)(&v)
}

func (*skuFamilyPtr) ElementType() reflect.Type {
	return skuFamilyPtrType
}

func (in *skuFamilyPtr) ToSkuFamilyPtrOutput() SkuFamilyPtrOutput {
	return pulumi.ToOutput(in).(SkuFamilyPtrOutput)
}

func (in *skuFamilyPtr) ToSkuFamilyPtrOutputWithContext(ctx context.Context) SkuFamilyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuFamilyPtrOutput)
}

type SkuName string

const (
	SkuName_Enterprise_E10        = SkuName("Enterprise_E10")
	SkuName_Enterprise_E20        = SkuName("Enterprise_E20")
	SkuName_Enterprise_E50        = SkuName("Enterprise_E50")
	SkuName_Enterprise_E100       = SkuName("Enterprise_E100")
	SkuName_EnterpriseFlash_F300  = SkuName("EnterpriseFlash_F300")
	SkuName_EnterpriseFlash_F700  = SkuName("EnterpriseFlash_F700")
	SkuName_EnterpriseFlash_F1500 = SkuName("EnterpriseFlash_F1500")
)

func (SkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (e SkuName) ToSkuNameOutput() SkuNameOutput {
	return pulumi.ToOutput(e).(SkuNameOutput)
}

func (e SkuName) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuNameOutput)
}

func (e SkuName) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return e.ToSkuNamePtrOutputWithContext(context.Background())
}

func (e SkuName) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return SkuName(e).ToSkuNameOutputWithContext(ctx).ToSkuNamePtrOutputWithContext(ctx)
}

func (e SkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuNameOutput struct{ *pulumi.OutputState }

func (SkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (o SkuNameOutput) ToSkuNameOutput() SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o.ToSkuNamePtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuName) *SkuName {
		return &v
	}).(SkuNamePtrOutput)
}

func (o SkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuNamePtrOutput struct{ *pulumi.OutputState }

func (SkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuName)(nil)).Elem()
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) Elem() SkuNameOutput {
	return o.ApplyT(func(v *SkuName) SkuName {
		if v != nil {
			return *v
		}
		var ret SkuName
		return ret
	}).(SkuNameOutput)
}

func (o SkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuNameInput is an input type that accepts SkuNameArgs and SkuNameOutput values.
// You can construct a concrete instance of `SkuNameInput` via:
//
//          SkuNameArgs{...}
type SkuNameInput interface {
	pulumi.Input

	ToSkuNameOutput() SkuNameOutput
	ToSkuNameOutputWithContext(context.Context) SkuNameOutput
}

var skuNamePtrType = reflect.TypeOf((**SkuName)(nil)).Elem()

type SkuNamePtrInput interface {
	pulumi.Input

	ToSkuNamePtrOutput() SkuNamePtrOutput
	ToSkuNamePtrOutputWithContext(context.Context) SkuNamePtrOutput
}

type skuNamePtr string

func SkuNamePtr(v string) SkuNamePtrInput {
	return (*skuNamePtr)(&v)
}

func (*skuNamePtr) ElementType() reflect.Type {
	return skuNamePtrType
}

func (in *skuNamePtr) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return pulumi.ToOutput(in).(SkuNamePtrOutput)
}

func (in *skuNamePtr) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuNamePtrOutput)
}

type TlsVersion string

const (
	TlsVersion_1_0 = TlsVersion("1.0")
	TlsVersion_1_1 = TlsVersion("1.1")
	TlsVersion_1_2 = TlsVersion("1.2")
)

func (TlsVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsVersion)(nil)).Elem()
}

func (e TlsVersion) ToTlsVersionOutput() TlsVersionOutput {
	return pulumi.ToOutput(e).(TlsVersionOutput)
}

func (e TlsVersion) ToTlsVersionOutputWithContext(ctx context.Context) TlsVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TlsVersionOutput)
}

func (e TlsVersion) ToTlsVersionPtrOutput() TlsVersionPtrOutput {
	return e.ToTlsVersionPtrOutputWithContext(context.Background())
}

func (e TlsVersion) ToTlsVersionPtrOutputWithContext(ctx context.Context) TlsVersionPtrOutput {
	return TlsVersion(e).ToTlsVersionOutputWithContext(ctx).ToTlsVersionPtrOutputWithContext(ctx)
}

func (e TlsVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TlsVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TlsVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TlsVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TlsVersionOutput struct{ *pulumi.OutputState }

func (TlsVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsVersion)(nil)).Elem()
}

func (o TlsVersionOutput) ToTlsVersionOutput() TlsVersionOutput {
	return o
}

func (o TlsVersionOutput) ToTlsVersionOutputWithContext(ctx context.Context) TlsVersionOutput {
	return o
}

func (o TlsVersionOutput) ToTlsVersionPtrOutput() TlsVersionPtrOutput {
	return o.ToTlsVersionPtrOutputWithContext(context.Background())
}

func (o TlsVersionOutput) ToTlsVersionPtrOutputWithContext(ctx context.Context) TlsVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TlsVersion) *TlsVersion {
		return &v
	}).(TlsVersionPtrOutput)
}

func (o TlsVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TlsVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TlsVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TlsVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TlsVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TlsVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TlsVersionPtrOutput struct{ *pulumi.OutputState }

func (TlsVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsVersion)(nil)).Elem()
}

func (o TlsVersionPtrOutput) ToTlsVersionPtrOutput() TlsVersionPtrOutput {
	return o
}

func (o TlsVersionPtrOutput) ToTlsVersionPtrOutputWithContext(ctx context.Context) TlsVersionPtrOutput {
	return o
}

func (o TlsVersionPtrOutput) Elem() TlsVersionOutput {
	return o.ApplyT(func(v *TlsVersion) TlsVersion {
		if v != nil {
			return *v
		}
		var ret TlsVersion
		return ret
	}).(TlsVersionOutput)
}

func (o TlsVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TlsVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TlsVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TlsVersionInput is an input type that accepts TlsVersionArgs and TlsVersionOutput values.
// You can construct a concrete instance of `TlsVersionInput` via:
//
//          TlsVersionArgs{...}
type TlsVersionInput interface {
	pulumi.Input

	ToTlsVersionOutput() TlsVersionOutput
	ToTlsVersionOutputWithContext(context.Context) TlsVersionOutput
}

var tlsVersionPtrType = reflect.TypeOf((**TlsVersion)(nil)).Elem()

type TlsVersionPtrInput interface {
	pulumi.Input

	ToTlsVersionPtrOutput() TlsVersionPtrOutput
	ToTlsVersionPtrOutputWithContext(context.Context) TlsVersionPtrOutput
}

type tlsVersionPtr string

func TlsVersionPtr(v string) TlsVersionPtrInput {
	return (*tlsVersionPtr)(&v)
}

func (*tlsVersionPtr) ElementType() reflect.Type {
	return tlsVersionPtrType
}

func (in *tlsVersionPtr) ToTlsVersionPtrOutput() TlsVersionPtrOutput {
	return pulumi.ToOutput(in).(TlsVersionPtrOutput)
}

func (in *tlsVersionPtr) ToTlsVersionPtrOutputWithContext(ctx context.Context) TlsVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TlsVersionPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AofFrequencyOutput{})
	pulumi.RegisterOutputType(AofFrequencyPtrOutput{})
	pulumi.RegisterOutputType(ClusteringPolicyOutput{})
	pulumi.RegisterOutputType(ClusteringPolicyPtrOutput{})
	pulumi.RegisterOutputType(DayOfWeekOutput{})
	pulumi.RegisterOutputType(DayOfWeekPtrOutput{})
	pulumi.RegisterOutputType(EvictionPolicyOutput{})
	pulumi.RegisterOutputType(EvictionPolicyPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointServiceConnectionStatusOutput{})
	pulumi.RegisterOutputType(PrivateEndpointServiceConnectionStatusPtrOutput{})
	pulumi.RegisterOutputType(ProtocolOutput{})
	pulumi.RegisterOutputType(ProtocolPtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessPtrOutput{})
	pulumi.RegisterOutputType(RdbFrequencyOutput{})
	pulumi.RegisterOutputType(RdbFrequencyPtrOutput{})
	pulumi.RegisterOutputType(ReplicationRoleOutput{})
	pulumi.RegisterOutputType(ReplicationRolePtrOutput{})
	pulumi.RegisterOutputType(SkuFamilyOutput{})
	pulumi.RegisterOutputType(SkuFamilyPtrOutput{})
	pulumi.RegisterOutputType(SkuNameOutput{})
	pulumi.RegisterOutputType(SkuNamePtrOutput{})
	pulumi.RegisterOutputType(TlsVersionOutput{})
	pulumi.RegisterOutputType(TlsVersionPtrOutput{})
}
