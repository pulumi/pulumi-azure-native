// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210401

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The properties of File services in storage account.
func LookupFileServiceProperties(ctx *pulumi.Context, args *LookupFileServicePropertiesArgs, opts ...pulumi.InvokeOption) (*LookupFileServicePropertiesResult, error) {
	var rv LookupFileServicePropertiesResult
	err := ctx.Invoke("azure-native:storage/v20210401:getFileServiceProperties", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFileServicePropertiesArgs struct {
	// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	AccountName string `pulumi:"accountName"`
	// The name of the file Service within the specified storage account. File Service Name must be "default"
	FileServicesName string `pulumi:"fileServicesName"`
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The properties of File services in storage account.
type LookupFileServicePropertiesResult struct {
	// Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service.
	Cors *CorsRulesResponse `pulumi:"cors"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Protocol settings for file service
	ProtocolSettings *ProtocolSettingsResponse `pulumi:"protocolSettings"`
	// The file service properties for share soft delete.
	ShareDeleteRetentionPolicy *DeleteRetentionPolicyResponse `pulumi:"shareDeleteRetentionPolicy"`
	// Sku name and tier.
	Sku SkuResponse `pulumi:"sku"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupFileServicePropertiesOutput(ctx *pulumi.Context, args LookupFileServicePropertiesOutputArgs, opts ...pulumi.InvokeOption) LookupFileServicePropertiesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFileServicePropertiesResult, error) {
			args := v.(LookupFileServicePropertiesArgs)
			r, err := LookupFileServiceProperties(ctx, &args, opts...)
			var s LookupFileServicePropertiesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFileServicePropertiesResultOutput)
}

type LookupFileServicePropertiesOutputArgs struct {
	// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the file Service within the specified storage account. File Service Name must be "default"
	FileServicesName pulumi.StringInput `pulumi:"fileServicesName"`
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupFileServicePropertiesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFileServicePropertiesArgs)(nil)).Elem()
}

// The properties of File services in storage account.
type LookupFileServicePropertiesResultOutput struct{ *pulumi.OutputState }

func (LookupFileServicePropertiesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFileServicePropertiesResult)(nil)).Elem()
}

func (o LookupFileServicePropertiesResultOutput) ToLookupFileServicePropertiesResultOutput() LookupFileServicePropertiesResultOutput {
	return o
}

func (o LookupFileServicePropertiesResultOutput) ToLookupFileServicePropertiesResultOutputWithContext(ctx context.Context) LookupFileServicePropertiesResultOutput {
	return o
}

// Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service.
func (o LookupFileServicePropertiesResultOutput) Cors() CorsRulesResponsePtrOutput {
	return o.ApplyT(func(v LookupFileServicePropertiesResult) *CorsRulesResponse { return v.Cors }).(CorsRulesResponsePtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupFileServicePropertiesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFileServicePropertiesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupFileServicePropertiesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFileServicePropertiesResult) string { return v.Name }).(pulumi.StringOutput)
}

// Protocol settings for file service
func (o LookupFileServicePropertiesResultOutput) ProtocolSettings() ProtocolSettingsResponsePtrOutput {
	return o.ApplyT(func(v LookupFileServicePropertiesResult) *ProtocolSettingsResponse { return v.ProtocolSettings }).(ProtocolSettingsResponsePtrOutput)
}

// The file service properties for share soft delete.
func (o LookupFileServicePropertiesResultOutput) ShareDeleteRetentionPolicy() DeleteRetentionPolicyResponsePtrOutput {
	return o.ApplyT(func(v LookupFileServicePropertiesResult) *DeleteRetentionPolicyResponse {
		return v.ShareDeleteRetentionPolicy
	}).(DeleteRetentionPolicyResponsePtrOutput)
}

// Sku name and tier.
func (o LookupFileServicePropertiesResultOutput) Sku() SkuResponseOutput {
	return o.ApplyT(func(v LookupFileServicePropertiesResult) SkuResponse { return v.Sku }).(SkuResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupFileServicePropertiesResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFileServicePropertiesResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFileServicePropertiesResultOutput{})
}
