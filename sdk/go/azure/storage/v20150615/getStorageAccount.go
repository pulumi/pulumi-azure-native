// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20150615

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The storage account.
//
// Deprecated: Version 2015-06-15 will be removed in v2 of the provider.
func LookupStorageAccount(ctx *pulumi.Context, args *LookupStorageAccountArgs, opts ...pulumi.InvokeOption) (*LookupStorageAccountResult, error) {
	var rv LookupStorageAccountResult
	err := ctx.Invoke("azure-native:storage/v20150615:getStorageAccount", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStorageAccountArgs struct {
	// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	AccountName string `pulumi:"accountName"`
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The storage account.
type LookupStorageAccountResult struct {
	// The type of the storage account.
	AccountType *string `pulumi:"accountType"`
	// The creation date and time of the storage account in UTC.
	CreationTime *string `pulumi:"creationTime"`
	// The custom domain the user assigned to this storage account.
	CustomDomain *CustomDomainResponse `pulumi:"customDomain"`
	// Resource Id
	Id string `pulumi:"id"`
	// The timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.
	LastGeoFailoverTime *string `pulumi:"lastGeoFailoverTime"`
	// Resource location
	Location *string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// The URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.
	PrimaryEndpoints *EndpointsResponse `pulumi:"primaryEndpoints"`
	// The location of the primary data center for the storage account.
	PrimaryLocation *string `pulumi:"primaryLocation"`
	// The status of the storage account at the time the operation was called.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.
	SecondaryEndpoints *EndpointsResponse `pulumi:"secondaryEndpoints"`
	// The location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
	SecondaryLocation *string `pulumi:"secondaryLocation"`
	// The status indicating whether the primary location of the storage account is available or unavailable.
	StatusOfPrimary *string `pulumi:"statusOfPrimary"`
	// The status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.
	StatusOfSecondary *string `pulumi:"statusOfSecondary"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

func LookupStorageAccountOutput(ctx *pulumi.Context, args LookupStorageAccountOutputArgs, opts ...pulumi.InvokeOption) LookupStorageAccountResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStorageAccountResult, error) {
			args := v.(LookupStorageAccountArgs)
			r, err := LookupStorageAccount(ctx, &args, opts...)
			var s LookupStorageAccountResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStorageAccountResultOutput)
}

type LookupStorageAccountOutputArgs struct {
	// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupStorageAccountOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStorageAccountArgs)(nil)).Elem()
}

// The storage account.
type LookupStorageAccountResultOutput struct{ *pulumi.OutputState }

func (LookupStorageAccountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStorageAccountResult)(nil)).Elem()
}

func (o LookupStorageAccountResultOutput) ToLookupStorageAccountResultOutput() LookupStorageAccountResultOutput {
	return o
}

func (o LookupStorageAccountResultOutput) ToLookupStorageAccountResultOutputWithContext(ctx context.Context) LookupStorageAccountResultOutput {
	return o
}

// The type of the storage account.
func (o LookupStorageAccountResultOutput) AccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStorageAccountResult) *string { return v.AccountType }).(pulumi.StringPtrOutput)
}

// The creation date and time of the storage account in UTC.
func (o LookupStorageAccountResultOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStorageAccountResult) *string { return v.CreationTime }).(pulumi.StringPtrOutput)
}

// The custom domain the user assigned to this storage account.
func (o LookupStorageAccountResultOutput) CustomDomain() CustomDomainResponsePtrOutput {
	return o.ApplyT(func(v LookupStorageAccountResult) *CustomDomainResponse { return v.CustomDomain }).(CustomDomainResponsePtrOutput)
}

// Resource Id
func (o LookupStorageAccountResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageAccountResult) string { return v.Id }).(pulumi.StringOutput)
}

// The timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.
func (o LookupStorageAccountResultOutput) LastGeoFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStorageAccountResult) *string { return v.LastGeoFailoverTime }).(pulumi.StringPtrOutput)
}

// Resource location
func (o LookupStorageAccountResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStorageAccountResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name
func (o LookupStorageAccountResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageAccountResult) string { return v.Name }).(pulumi.StringOutput)
}

// The URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.
func (o LookupStorageAccountResultOutput) PrimaryEndpoints() EndpointsResponsePtrOutput {
	return o.ApplyT(func(v LookupStorageAccountResult) *EndpointsResponse { return v.PrimaryEndpoints }).(EndpointsResponsePtrOutput)
}

// The location of the primary data center for the storage account.
func (o LookupStorageAccountResultOutput) PrimaryLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStorageAccountResult) *string { return v.PrimaryLocation }).(pulumi.StringPtrOutput)
}

// The status of the storage account at the time the operation was called.
func (o LookupStorageAccountResultOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStorageAccountResult) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.
func (o LookupStorageAccountResultOutput) SecondaryEndpoints() EndpointsResponsePtrOutput {
	return o.ApplyT(func(v LookupStorageAccountResult) *EndpointsResponse { return v.SecondaryEndpoints }).(EndpointsResponsePtrOutput)
}

// The location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
func (o LookupStorageAccountResultOutput) SecondaryLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStorageAccountResult) *string { return v.SecondaryLocation }).(pulumi.StringPtrOutput)
}

// The status indicating whether the primary location of the storage account is available or unavailable.
func (o LookupStorageAccountResultOutput) StatusOfPrimary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStorageAccountResult) *string { return v.StatusOfPrimary }).(pulumi.StringPtrOutput)
}

// The status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.
func (o LookupStorageAccountResultOutput) StatusOfSecondary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStorageAccountResult) *string { return v.StatusOfSecondary }).(pulumi.StringPtrOutput)
}

// Resource tags
func (o LookupStorageAccountResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupStorageAccountResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o LookupStorageAccountResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageAccountResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStorageAccountResultOutput{})
}
