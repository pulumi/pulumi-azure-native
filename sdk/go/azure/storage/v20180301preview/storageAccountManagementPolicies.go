// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180301preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Get Storage Account ManagementPolicies operation response.
//
// Deprecated: Version 2018-03-01-preview will be removed in v2 of the provider.
type StorageAccountManagementPolicies struct {
	pulumi.CustomResourceState

	// Returns the date and time the ManagementPolicies was last modified.
	LastModifiedTime pulumi.StringOutput `pulumi:"lastModifiedTime"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The Storage Account ManagementPolicies Rules, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
	Policy pulumi.AnyOutput `pulumi:"policy"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewStorageAccountManagementPolicies registers a new resource with the given unique name, arguments, and options.
func NewStorageAccountManagementPolicies(ctx *pulumi.Context,
	name string, args *StorageAccountManagementPoliciesArgs, opts ...pulumi.ResourceOption) (*StorageAccountManagementPolicies, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:storage:StorageAccountManagementPolicies"),
		},
		{
			Type: pulumi.String("azure-native:storage/v20181101:StorageAccountManagementPolicies"),
		},
		{
			Type: pulumi.String("azure-native:storage/v20190401:StorageAccountManagementPolicies"),
		},
		{
			Type: pulumi.String("azure-native:storage/v20190601:StorageAccountManagementPolicies"),
		},
		{
			Type: pulumi.String("azure-native:storage/v20200801preview:StorageAccountManagementPolicies"),
		},
		{
			Type: pulumi.String("azure-native:storage/v20210101:StorageAccountManagementPolicies"),
		},
		{
			Type: pulumi.String("azure-native:storage/v20210201:StorageAccountManagementPolicies"),
		},
		{
			Type: pulumi.String("azure-native:storage/v20210401:StorageAccountManagementPolicies"),
		},
		{
			Type: pulumi.String("azure-native:storage/v20210601:StorageAccountManagementPolicies"),
		},
		{
			Type: pulumi.String("azure-native:storage/v20210801:StorageAccountManagementPolicies"),
		},
		{
			Type: pulumi.String("azure-native:storage/v20210901:StorageAccountManagementPolicies"),
		},
		{
			Type: pulumi.String("azure-native:storage/v20220501:StorageAccountManagementPolicies"),
		},
	})
	opts = append(opts, aliases)
	var resource StorageAccountManagementPolicies
	err := ctx.RegisterResource("azure-native:storage/v20180301preview:StorageAccountManagementPolicies", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageAccountManagementPolicies gets an existing StorageAccountManagementPolicies resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageAccountManagementPolicies(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageAccountManagementPoliciesState, opts ...pulumi.ResourceOption) (*StorageAccountManagementPolicies, error) {
	var resource StorageAccountManagementPolicies
	err := ctx.ReadResource("azure-native:storage/v20180301preview:StorageAccountManagementPolicies", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageAccountManagementPolicies resources.
type storageAccountManagementPoliciesState struct {
}

type StorageAccountManagementPoliciesState struct {
}

func (StorageAccountManagementPoliciesState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageAccountManagementPoliciesState)(nil)).Elem()
}

type storageAccountManagementPoliciesArgs struct {
	// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	AccountName string `pulumi:"accountName"`
	// The name of the Storage Account Management Policy. It should always be 'default'
	ManagementPolicyName *string `pulumi:"managementPolicyName"`
	// The Storage Account ManagementPolicies Rules, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
	Policy interface{} `pulumi:"policy"`
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a StorageAccountManagementPolicies resource.
type StorageAccountManagementPoliciesArgs struct {
	// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	AccountName pulumi.StringInput
	// The name of the Storage Account Management Policy. It should always be 'default'
	ManagementPolicyName pulumi.StringPtrInput
	// The Storage Account ManagementPolicies Rules, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
	Policy pulumi.Input
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (StorageAccountManagementPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageAccountManagementPoliciesArgs)(nil)).Elem()
}

type StorageAccountManagementPoliciesInput interface {
	pulumi.Input

	ToStorageAccountManagementPoliciesOutput() StorageAccountManagementPoliciesOutput
	ToStorageAccountManagementPoliciesOutputWithContext(ctx context.Context) StorageAccountManagementPoliciesOutput
}

func (*StorageAccountManagementPolicies) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountManagementPolicies)(nil)).Elem()
}

func (i *StorageAccountManagementPolicies) ToStorageAccountManagementPoliciesOutput() StorageAccountManagementPoliciesOutput {
	return i.ToStorageAccountManagementPoliciesOutputWithContext(context.Background())
}

func (i *StorageAccountManagementPolicies) ToStorageAccountManagementPoliciesOutputWithContext(ctx context.Context) StorageAccountManagementPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountManagementPoliciesOutput)
}

type StorageAccountManagementPoliciesOutput struct{ *pulumi.OutputState }

func (StorageAccountManagementPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountManagementPolicies)(nil)).Elem()
}

func (o StorageAccountManagementPoliciesOutput) ToStorageAccountManagementPoliciesOutput() StorageAccountManagementPoliciesOutput {
	return o
}

func (o StorageAccountManagementPoliciesOutput) ToStorageAccountManagementPoliciesOutputWithContext(ctx context.Context) StorageAccountManagementPoliciesOutput {
	return o
}

// Returns the date and time the ManagementPolicies was last modified.
func (o StorageAccountManagementPoliciesOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageAccountManagementPolicies) pulumi.StringOutput { return v.LastModifiedTime }).(pulumi.StringOutput)
}

// The name of the resource
func (o StorageAccountManagementPoliciesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageAccountManagementPolicies) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Storage Account ManagementPolicies Rules, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
func (o StorageAccountManagementPoliciesOutput) Policy() pulumi.AnyOutput {
	return o.ApplyT(func(v *StorageAccountManagementPolicies) pulumi.AnyOutput { return v.Policy }).(pulumi.AnyOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o StorageAccountManagementPoliciesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageAccountManagementPolicies) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(StorageAccountManagementPoliciesOutput{})
}
