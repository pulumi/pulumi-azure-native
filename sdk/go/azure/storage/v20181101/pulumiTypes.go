// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20181101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Specifies a CORS rule for the Blob service.
type CorsRule struct {
	// Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Required if CorsRule element is present. A list of response headers to expose to CORS clients.
	ExposedHeaders []string `pulumi:"exposedHeaders"`
	// Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.
	MaxAgeInSeconds int `pulumi:"maxAgeInSeconds"`
}

// CorsRuleInput is an input type that accepts CorsRuleArgs and CorsRuleOutput values.
// You can construct a concrete instance of `CorsRuleInput` via:
//
//          CorsRuleArgs{...}
type CorsRuleInput interface {
	pulumi.Input

	ToCorsRuleOutput() CorsRuleOutput
	ToCorsRuleOutputWithContext(context.Context) CorsRuleOutput
}

// Specifies a CORS rule for the Blob service.
type CorsRuleArgs struct {
	// Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	// Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Required if CorsRule element is present. A list of response headers to expose to CORS clients.
	ExposedHeaders pulumi.StringArrayInput `pulumi:"exposedHeaders"`
	// Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.
	MaxAgeInSeconds pulumi.IntInput `pulumi:"maxAgeInSeconds"`
}

func (CorsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRule)(nil)).Elem()
}

func (i CorsRuleArgs) ToCorsRuleOutput() CorsRuleOutput {
	return i.ToCorsRuleOutputWithContext(context.Background())
}

func (i CorsRuleArgs) ToCorsRuleOutputWithContext(ctx context.Context) CorsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRuleOutput)
}

// CorsRuleArrayInput is an input type that accepts CorsRuleArray and CorsRuleArrayOutput values.
// You can construct a concrete instance of `CorsRuleArrayInput` via:
//
//          CorsRuleArray{ CorsRuleArgs{...} }
type CorsRuleArrayInput interface {
	pulumi.Input

	ToCorsRuleArrayOutput() CorsRuleArrayOutput
	ToCorsRuleArrayOutputWithContext(context.Context) CorsRuleArrayOutput
}

type CorsRuleArray []CorsRuleInput

func (CorsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CorsRule)(nil)).Elem()
}

func (i CorsRuleArray) ToCorsRuleArrayOutput() CorsRuleArrayOutput {
	return i.ToCorsRuleArrayOutputWithContext(context.Background())
}

func (i CorsRuleArray) ToCorsRuleArrayOutputWithContext(ctx context.Context) CorsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRuleArrayOutput)
}

// Specifies a CORS rule for the Blob service.
type CorsRuleOutput struct{ *pulumi.OutputState }

func (CorsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRule)(nil)).Elem()
}

func (o CorsRuleOutput) ToCorsRuleOutput() CorsRuleOutput {
	return o
}

func (o CorsRuleOutput) ToCorsRuleOutputWithContext(ctx context.Context) CorsRuleOutput {
	return o
}

// Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
func (o CorsRuleOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsRule) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
func (o CorsRuleOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsRule) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
func (o CorsRuleOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsRule) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Required if CorsRule element is present. A list of response headers to expose to CORS clients.
func (o CorsRuleOutput) ExposedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsRule) []string { return v.ExposedHeaders }).(pulumi.StringArrayOutput)
}

// Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.
func (o CorsRuleOutput) MaxAgeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v CorsRule) int { return v.MaxAgeInSeconds }).(pulumi.IntOutput)
}

type CorsRuleArrayOutput struct{ *pulumi.OutputState }

func (CorsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CorsRule)(nil)).Elem()
}

func (o CorsRuleArrayOutput) ToCorsRuleArrayOutput() CorsRuleArrayOutput {
	return o
}

func (o CorsRuleArrayOutput) ToCorsRuleArrayOutputWithContext(ctx context.Context) CorsRuleArrayOutput {
	return o
}

func (o CorsRuleArrayOutput) Index(i pulumi.IntInput) CorsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CorsRule {
		return vs[0].([]CorsRule)[vs[1].(int)]
	}).(CorsRuleOutput)
}

// Specifies a CORS rule for the Blob service.
type CorsRuleResponse struct {
	// Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Required if CorsRule element is present. A list of response headers to expose to CORS clients.
	ExposedHeaders []string `pulumi:"exposedHeaders"`
	// Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.
	MaxAgeInSeconds int `pulumi:"maxAgeInSeconds"`
}

// CorsRuleResponseInput is an input type that accepts CorsRuleResponseArgs and CorsRuleResponseOutput values.
// You can construct a concrete instance of `CorsRuleResponseInput` via:
//
//          CorsRuleResponseArgs{...}
type CorsRuleResponseInput interface {
	pulumi.Input

	ToCorsRuleResponseOutput() CorsRuleResponseOutput
	ToCorsRuleResponseOutputWithContext(context.Context) CorsRuleResponseOutput
}

// Specifies a CORS rule for the Blob service.
type CorsRuleResponseArgs struct {
	// Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	// Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Required if CorsRule element is present. A list of response headers to expose to CORS clients.
	ExposedHeaders pulumi.StringArrayInput `pulumi:"exposedHeaders"`
	// Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.
	MaxAgeInSeconds pulumi.IntInput `pulumi:"maxAgeInSeconds"`
}

func (CorsRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRuleResponse)(nil)).Elem()
}

func (i CorsRuleResponseArgs) ToCorsRuleResponseOutput() CorsRuleResponseOutput {
	return i.ToCorsRuleResponseOutputWithContext(context.Background())
}

func (i CorsRuleResponseArgs) ToCorsRuleResponseOutputWithContext(ctx context.Context) CorsRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRuleResponseOutput)
}

// CorsRuleResponseArrayInput is an input type that accepts CorsRuleResponseArray and CorsRuleResponseArrayOutput values.
// You can construct a concrete instance of `CorsRuleResponseArrayInput` via:
//
//          CorsRuleResponseArray{ CorsRuleResponseArgs{...} }
type CorsRuleResponseArrayInput interface {
	pulumi.Input

	ToCorsRuleResponseArrayOutput() CorsRuleResponseArrayOutput
	ToCorsRuleResponseArrayOutputWithContext(context.Context) CorsRuleResponseArrayOutput
}

type CorsRuleResponseArray []CorsRuleResponseInput

func (CorsRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CorsRuleResponse)(nil)).Elem()
}

func (i CorsRuleResponseArray) ToCorsRuleResponseArrayOutput() CorsRuleResponseArrayOutput {
	return i.ToCorsRuleResponseArrayOutputWithContext(context.Background())
}

func (i CorsRuleResponseArray) ToCorsRuleResponseArrayOutputWithContext(ctx context.Context) CorsRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRuleResponseArrayOutput)
}

// Specifies a CORS rule for the Blob service.
type CorsRuleResponseOutput struct{ *pulumi.OutputState }

func (CorsRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRuleResponse)(nil)).Elem()
}

func (o CorsRuleResponseOutput) ToCorsRuleResponseOutput() CorsRuleResponseOutput {
	return o
}

func (o CorsRuleResponseOutput) ToCorsRuleResponseOutputWithContext(ctx context.Context) CorsRuleResponseOutput {
	return o
}

// Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
func (o CorsRuleResponseOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsRuleResponse) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
func (o CorsRuleResponseOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsRuleResponse) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
func (o CorsRuleResponseOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsRuleResponse) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Required if CorsRule element is present. A list of response headers to expose to CORS clients.
func (o CorsRuleResponseOutput) ExposedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsRuleResponse) []string { return v.ExposedHeaders }).(pulumi.StringArrayOutput)
}

// Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.
func (o CorsRuleResponseOutput) MaxAgeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v CorsRuleResponse) int { return v.MaxAgeInSeconds }).(pulumi.IntOutput)
}

type CorsRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (CorsRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CorsRuleResponse)(nil)).Elem()
}

func (o CorsRuleResponseArrayOutput) ToCorsRuleResponseArrayOutput() CorsRuleResponseArrayOutput {
	return o
}

func (o CorsRuleResponseArrayOutput) ToCorsRuleResponseArrayOutputWithContext(ctx context.Context) CorsRuleResponseArrayOutput {
	return o
}

func (o CorsRuleResponseArrayOutput) Index(i pulumi.IntInput) CorsRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CorsRuleResponse {
		return vs[0].([]CorsRuleResponse)[vs[1].(int)]
	}).(CorsRuleResponseOutput)
}

// Sets the CORS rules. You can include up to five CorsRule elements in the request.
type CorsRules struct {
	// The List of CORS rules. You can include up to five CorsRule elements in the request.
	CorsRules []CorsRule `pulumi:"corsRules"`
}

// CorsRulesInput is an input type that accepts CorsRulesArgs and CorsRulesOutput values.
// You can construct a concrete instance of `CorsRulesInput` via:
//
//          CorsRulesArgs{...}
type CorsRulesInput interface {
	pulumi.Input

	ToCorsRulesOutput() CorsRulesOutput
	ToCorsRulesOutputWithContext(context.Context) CorsRulesOutput
}

// Sets the CORS rules. You can include up to five CorsRule elements in the request.
type CorsRulesArgs struct {
	// The List of CORS rules. You can include up to five CorsRule elements in the request.
	CorsRules CorsRuleArrayInput `pulumi:"corsRules"`
}

func (CorsRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRules)(nil)).Elem()
}

func (i CorsRulesArgs) ToCorsRulesOutput() CorsRulesOutput {
	return i.ToCorsRulesOutputWithContext(context.Background())
}

func (i CorsRulesArgs) ToCorsRulesOutputWithContext(ctx context.Context) CorsRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRulesOutput)
}

func (i CorsRulesArgs) ToCorsRulesPtrOutput() CorsRulesPtrOutput {
	return i.ToCorsRulesPtrOutputWithContext(context.Background())
}

func (i CorsRulesArgs) ToCorsRulesPtrOutputWithContext(ctx context.Context) CorsRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRulesOutput).ToCorsRulesPtrOutputWithContext(ctx)
}

// CorsRulesPtrInput is an input type that accepts CorsRulesArgs, CorsRulesPtr and CorsRulesPtrOutput values.
// You can construct a concrete instance of `CorsRulesPtrInput` via:
//
//          CorsRulesArgs{...}
//
//  or:
//
//          nil
type CorsRulesPtrInput interface {
	pulumi.Input

	ToCorsRulesPtrOutput() CorsRulesPtrOutput
	ToCorsRulesPtrOutputWithContext(context.Context) CorsRulesPtrOutput
}

type corsRulesPtrType CorsRulesArgs

func CorsRulesPtr(v *CorsRulesArgs) CorsRulesPtrInput {
	return (*corsRulesPtrType)(v)
}

func (*corsRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsRules)(nil)).Elem()
}

func (i *corsRulesPtrType) ToCorsRulesPtrOutput() CorsRulesPtrOutput {
	return i.ToCorsRulesPtrOutputWithContext(context.Background())
}

func (i *corsRulesPtrType) ToCorsRulesPtrOutputWithContext(ctx context.Context) CorsRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRulesPtrOutput)
}

// Sets the CORS rules. You can include up to five CorsRule elements in the request.
type CorsRulesOutput struct{ *pulumi.OutputState }

func (CorsRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRules)(nil)).Elem()
}

func (o CorsRulesOutput) ToCorsRulesOutput() CorsRulesOutput {
	return o
}

func (o CorsRulesOutput) ToCorsRulesOutputWithContext(ctx context.Context) CorsRulesOutput {
	return o
}

func (o CorsRulesOutput) ToCorsRulesPtrOutput() CorsRulesPtrOutput {
	return o.ToCorsRulesPtrOutputWithContext(context.Background())
}

func (o CorsRulesOutput) ToCorsRulesPtrOutputWithContext(ctx context.Context) CorsRulesPtrOutput {
	return o.ApplyT(func(v CorsRules) *CorsRules {
		return &v
	}).(CorsRulesPtrOutput)
}

// The List of CORS rules. You can include up to five CorsRule elements in the request.
func (o CorsRulesOutput) CorsRules() CorsRuleArrayOutput {
	return o.ApplyT(func(v CorsRules) []CorsRule { return v.CorsRules }).(CorsRuleArrayOutput)
}

type CorsRulesPtrOutput struct{ *pulumi.OutputState }

func (CorsRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsRules)(nil)).Elem()
}

func (o CorsRulesPtrOutput) ToCorsRulesPtrOutput() CorsRulesPtrOutput {
	return o
}

func (o CorsRulesPtrOutput) ToCorsRulesPtrOutputWithContext(ctx context.Context) CorsRulesPtrOutput {
	return o
}

func (o CorsRulesPtrOutput) Elem() CorsRulesOutput {
	return o.ApplyT(func(v *CorsRules) CorsRules { return *v }).(CorsRulesOutput)
}

// The List of CORS rules. You can include up to five CorsRule elements in the request.
func (o CorsRulesPtrOutput) CorsRules() CorsRuleArrayOutput {
	return o.ApplyT(func(v *CorsRules) []CorsRule {
		if v == nil {
			return nil
		}
		return v.CorsRules
	}).(CorsRuleArrayOutput)
}

// Sets the CORS rules. You can include up to five CorsRule elements in the request.
type CorsRulesResponse struct {
	// The List of CORS rules. You can include up to five CorsRule elements in the request.
	CorsRules []CorsRuleResponse `pulumi:"corsRules"`
}

// CorsRulesResponseInput is an input type that accepts CorsRulesResponseArgs and CorsRulesResponseOutput values.
// You can construct a concrete instance of `CorsRulesResponseInput` via:
//
//          CorsRulesResponseArgs{...}
type CorsRulesResponseInput interface {
	pulumi.Input

	ToCorsRulesResponseOutput() CorsRulesResponseOutput
	ToCorsRulesResponseOutputWithContext(context.Context) CorsRulesResponseOutput
}

// Sets the CORS rules. You can include up to five CorsRule elements in the request.
type CorsRulesResponseArgs struct {
	// The List of CORS rules. You can include up to five CorsRule elements in the request.
	CorsRules CorsRuleResponseArrayInput `pulumi:"corsRules"`
}

func (CorsRulesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRulesResponse)(nil)).Elem()
}

func (i CorsRulesResponseArgs) ToCorsRulesResponseOutput() CorsRulesResponseOutput {
	return i.ToCorsRulesResponseOutputWithContext(context.Background())
}

func (i CorsRulesResponseArgs) ToCorsRulesResponseOutputWithContext(ctx context.Context) CorsRulesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRulesResponseOutput)
}

func (i CorsRulesResponseArgs) ToCorsRulesResponsePtrOutput() CorsRulesResponsePtrOutput {
	return i.ToCorsRulesResponsePtrOutputWithContext(context.Background())
}

func (i CorsRulesResponseArgs) ToCorsRulesResponsePtrOutputWithContext(ctx context.Context) CorsRulesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRulesResponseOutput).ToCorsRulesResponsePtrOutputWithContext(ctx)
}

// CorsRulesResponsePtrInput is an input type that accepts CorsRulesResponseArgs, CorsRulesResponsePtr and CorsRulesResponsePtrOutput values.
// You can construct a concrete instance of `CorsRulesResponsePtrInput` via:
//
//          CorsRulesResponseArgs{...}
//
//  or:
//
//          nil
type CorsRulesResponsePtrInput interface {
	pulumi.Input

	ToCorsRulesResponsePtrOutput() CorsRulesResponsePtrOutput
	ToCorsRulesResponsePtrOutputWithContext(context.Context) CorsRulesResponsePtrOutput
}

type corsRulesResponsePtrType CorsRulesResponseArgs

func CorsRulesResponsePtr(v *CorsRulesResponseArgs) CorsRulesResponsePtrInput {
	return (*corsRulesResponsePtrType)(v)
}

func (*corsRulesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsRulesResponse)(nil)).Elem()
}

func (i *corsRulesResponsePtrType) ToCorsRulesResponsePtrOutput() CorsRulesResponsePtrOutput {
	return i.ToCorsRulesResponsePtrOutputWithContext(context.Background())
}

func (i *corsRulesResponsePtrType) ToCorsRulesResponsePtrOutputWithContext(ctx context.Context) CorsRulesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRulesResponsePtrOutput)
}

// Sets the CORS rules. You can include up to five CorsRule elements in the request.
type CorsRulesResponseOutput struct{ *pulumi.OutputState }

func (CorsRulesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRulesResponse)(nil)).Elem()
}

func (o CorsRulesResponseOutput) ToCorsRulesResponseOutput() CorsRulesResponseOutput {
	return o
}

func (o CorsRulesResponseOutput) ToCorsRulesResponseOutputWithContext(ctx context.Context) CorsRulesResponseOutput {
	return o
}

func (o CorsRulesResponseOutput) ToCorsRulesResponsePtrOutput() CorsRulesResponsePtrOutput {
	return o.ToCorsRulesResponsePtrOutputWithContext(context.Background())
}

func (o CorsRulesResponseOutput) ToCorsRulesResponsePtrOutputWithContext(ctx context.Context) CorsRulesResponsePtrOutput {
	return o.ApplyT(func(v CorsRulesResponse) *CorsRulesResponse {
		return &v
	}).(CorsRulesResponsePtrOutput)
}

// The List of CORS rules. You can include up to five CorsRule elements in the request.
func (o CorsRulesResponseOutput) CorsRules() CorsRuleResponseArrayOutput {
	return o.ApplyT(func(v CorsRulesResponse) []CorsRuleResponse { return v.CorsRules }).(CorsRuleResponseArrayOutput)
}

type CorsRulesResponsePtrOutput struct{ *pulumi.OutputState }

func (CorsRulesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsRulesResponse)(nil)).Elem()
}

func (o CorsRulesResponsePtrOutput) ToCorsRulesResponsePtrOutput() CorsRulesResponsePtrOutput {
	return o
}

func (o CorsRulesResponsePtrOutput) ToCorsRulesResponsePtrOutputWithContext(ctx context.Context) CorsRulesResponsePtrOutput {
	return o
}

func (o CorsRulesResponsePtrOutput) Elem() CorsRulesResponseOutput {
	return o.ApplyT(func(v *CorsRulesResponse) CorsRulesResponse { return *v }).(CorsRulesResponseOutput)
}

// The List of CORS rules. You can include up to five CorsRule elements in the request.
func (o CorsRulesResponsePtrOutput) CorsRules() CorsRuleResponseArrayOutput {
	return o.ApplyT(func(v *CorsRulesResponse) []CorsRuleResponse {
		if v == nil {
			return nil
		}
		return v.CorsRules
	}).(CorsRuleResponseArrayOutput)
}

// The custom domain assigned to this storage account. This can be set via Update.
type CustomDomain struct {
	// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
	Name string `pulumi:"name"`
	// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
	UseSubDomainName *bool `pulumi:"useSubDomainName"`
}

// CustomDomainInput is an input type that accepts CustomDomainArgs and CustomDomainOutput values.
// You can construct a concrete instance of `CustomDomainInput` via:
//
//          CustomDomainArgs{...}
type CustomDomainInput interface {
	pulumi.Input

	ToCustomDomainOutput() CustomDomainOutput
	ToCustomDomainOutputWithContext(context.Context) CustomDomainOutput
}

// The custom domain assigned to this storage account. This can be set via Update.
type CustomDomainArgs struct {
	// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
	UseSubDomainName pulumi.BoolPtrInput `pulumi:"useSubDomainName"`
}

func (CustomDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomain)(nil)).Elem()
}

func (i CustomDomainArgs) ToCustomDomainOutput() CustomDomainOutput {
	return i.ToCustomDomainOutputWithContext(context.Background())
}

func (i CustomDomainArgs) ToCustomDomainOutputWithContext(ctx context.Context) CustomDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainOutput)
}

func (i CustomDomainArgs) ToCustomDomainPtrOutput() CustomDomainPtrOutput {
	return i.ToCustomDomainPtrOutputWithContext(context.Background())
}

func (i CustomDomainArgs) ToCustomDomainPtrOutputWithContext(ctx context.Context) CustomDomainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainOutput).ToCustomDomainPtrOutputWithContext(ctx)
}

// CustomDomainPtrInput is an input type that accepts CustomDomainArgs, CustomDomainPtr and CustomDomainPtrOutput values.
// You can construct a concrete instance of `CustomDomainPtrInput` via:
//
//          CustomDomainArgs{...}
//
//  or:
//
//          nil
type CustomDomainPtrInput interface {
	pulumi.Input

	ToCustomDomainPtrOutput() CustomDomainPtrOutput
	ToCustomDomainPtrOutputWithContext(context.Context) CustomDomainPtrOutput
}

type customDomainPtrType CustomDomainArgs

func CustomDomainPtr(v *CustomDomainArgs) CustomDomainPtrInput {
	return (*customDomainPtrType)(v)
}

func (*customDomainPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomain)(nil)).Elem()
}

func (i *customDomainPtrType) ToCustomDomainPtrOutput() CustomDomainPtrOutput {
	return i.ToCustomDomainPtrOutputWithContext(context.Background())
}

func (i *customDomainPtrType) ToCustomDomainPtrOutputWithContext(ctx context.Context) CustomDomainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainPtrOutput)
}

// The custom domain assigned to this storage account. This can be set via Update.
type CustomDomainOutput struct{ *pulumi.OutputState }

func (CustomDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomain)(nil)).Elem()
}

func (o CustomDomainOutput) ToCustomDomainOutput() CustomDomainOutput {
	return o
}

func (o CustomDomainOutput) ToCustomDomainOutputWithContext(ctx context.Context) CustomDomainOutput {
	return o
}

func (o CustomDomainOutput) ToCustomDomainPtrOutput() CustomDomainPtrOutput {
	return o.ToCustomDomainPtrOutputWithContext(context.Background())
}

func (o CustomDomainOutput) ToCustomDomainPtrOutputWithContext(ctx context.Context) CustomDomainPtrOutput {
	return o.ApplyT(func(v CustomDomain) *CustomDomain {
		return &v
	}).(CustomDomainPtrOutput)
}

// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
func (o CustomDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomain) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
func (o CustomDomainOutput) UseSubDomainName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomDomain) *bool { return v.UseSubDomainName }).(pulumi.BoolPtrOutput)
}

type CustomDomainPtrOutput struct{ *pulumi.OutputState }

func (CustomDomainPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomain)(nil)).Elem()
}

func (o CustomDomainPtrOutput) ToCustomDomainPtrOutput() CustomDomainPtrOutput {
	return o
}

func (o CustomDomainPtrOutput) ToCustomDomainPtrOutputWithContext(ctx context.Context) CustomDomainPtrOutput {
	return o
}

func (o CustomDomainPtrOutput) Elem() CustomDomainOutput {
	return o.ApplyT(func(v *CustomDomain) CustomDomain { return *v }).(CustomDomainOutput)
}

// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
func (o CustomDomainPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomain) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
func (o CustomDomainPtrOutput) UseSubDomainName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomDomain) *bool {
		if v == nil {
			return nil
		}
		return v.UseSubDomainName
	}).(pulumi.BoolPtrOutput)
}

// The custom domain assigned to this storage account. This can be set via Update.
type CustomDomainResponse struct {
	// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
	Name string `pulumi:"name"`
	// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
	UseSubDomainName *bool `pulumi:"useSubDomainName"`
}

// CustomDomainResponseInput is an input type that accepts CustomDomainResponseArgs and CustomDomainResponseOutput values.
// You can construct a concrete instance of `CustomDomainResponseInput` via:
//
//          CustomDomainResponseArgs{...}
type CustomDomainResponseInput interface {
	pulumi.Input

	ToCustomDomainResponseOutput() CustomDomainResponseOutput
	ToCustomDomainResponseOutputWithContext(context.Context) CustomDomainResponseOutput
}

// The custom domain assigned to this storage account. This can be set via Update.
type CustomDomainResponseArgs struct {
	// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
	UseSubDomainName pulumi.BoolPtrInput `pulumi:"useSubDomainName"`
}

func (CustomDomainResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainResponse)(nil)).Elem()
}

func (i CustomDomainResponseArgs) ToCustomDomainResponseOutput() CustomDomainResponseOutput {
	return i.ToCustomDomainResponseOutputWithContext(context.Background())
}

func (i CustomDomainResponseArgs) ToCustomDomainResponseOutputWithContext(ctx context.Context) CustomDomainResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainResponseOutput)
}

func (i CustomDomainResponseArgs) ToCustomDomainResponsePtrOutput() CustomDomainResponsePtrOutput {
	return i.ToCustomDomainResponsePtrOutputWithContext(context.Background())
}

func (i CustomDomainResponseArgs) ToCustomDomainResponsePtrOutputWithContext(ctx context.Context) CustomDomainResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainResponseOutput).ToCustomDomainResponsePtrOutputWithContext(ctx)
}

// CustomDomainResponsePtrInput is an input type that accepts CustomDomainResponseArgs, CustomDomainResponsePtr and CustomDomainResponsePtrOutput values.
// You can construct a concrete instance of `CustomDomainResponsePtrInput` via:
//
//          CustomDomainResponseArgs{...}
//
//  or:
//
//          nil
type CustomDomainResponsePtrInput interface {
	pulumi.Input

	ToCustomDomainResponsePtrOutput() CustomDomainResponsePtrOutput
	ToCustomDomainResponsePtrOutputWithContext(context.Context) CustomDomainResponsePtrOutput
}

type customDomainResponsePtrType CustomDomainResponseArgs

func CustomDomainResponsePtr(v *CustomDomainResponseArgs) CustomDomainResponsePtrInput {
	return (*customDomainResponsePtrType)(v)
}

func (*customDomainResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainResponse)(nil)).Elem()
}

func (i *customDomainResponsePtrType) ToCustomDomainResponsePtrOutput() CustomDomainResponsePtrOutput {
	return i.ToCustomDomainResponsePtrOutputWithContext(context.Background())
}

func (i *customDomainResponsePtrType) ToCustomDomainResponsePtrOutputWithContext(ctx context.Context) CustomDomainResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainResponsePtrOutput)
}

// The custom domain assigned to this storage account. This can be set via Update.
type CustomDomainResponseOutput struct{ *pulumi.OutputState }

func (CustomDomainResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainResponse)(nil)).Elem()
}

func (o CustomDomainResponseOutput) ToCustomDomainResponseOutput() CustomDomainResponseOutput {
	return o
}

func (o CustomDomainResponseOutput) ToCustomDomainResponseOutputWithContext(ctx context.Context) CustomDomainResponseOutput {
	return o
}

func (o CustomDomainResponseOutput) ToCustomDomainResponsePtrOutput() CustomDomainResponsePtrOutput {
	return o.ToCustomDomainResponsePtrOutputWithContext(context.Background())
}

func (o CustomDomainResponseOutput) ToCustomDomainResponsePtrOutputWithContext(ctx context.Context) CustomDomainResponsePtrOutput {
	return o.ApplyT(func(v CustomDomainResponse) *CustomDomainResponse {
		return &v
	}).(CustomDomainResponsePtrOutput)
}

// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
func (o CustomDomainResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
func (o CustomDomainResponseOutput) UseSubDomainName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomDomainResponse) *bool { return v.UseSubDomainName }).(pulumi.BoolPtrOutput)
}

type CustomDomainResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomDomainResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainResponse)(nil)).Elem()
}

func (o CustomDomainResponsePtrOutput) ToCustomDomainResponsePtrOutput() CustomDomainResponsePtrOutput {
	return o
}

func (o CustomDomainResponsePtrOutput) ToCustomDomainResponsePtrOutputWithContext(ctx context.Context) CustomDomainResponsePtrOutput {
	return o
}

func (o CustomDomainResponsePtrOutput) Elem() CustomDomainResponseOutput {
	return o.ApplyT(func(v *CustomDomainResponse) CustomDomainResponse { return *v }).(CustomDomainResponseOutput)
}

// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
func (o CustomDomainResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
func (o CustomDomainResponsePtrOutput) UseSubDomainName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomDomainResponse) *bool {
		if v == nil {
			return nil
		}
		return v.UseSubDomainName
	}).(pulumi.BoolPtrOutput)
}

// Object to define the number of days after creation.
type DateAfterCreation struct {
	// Integer value indicating the age in days after creation
	DaysAfterCreationGreaterThan int `pulumi:"daysAfterCreationGreaterThan"`
}

// DateAfterCreationInput is an input type that accepts DateAfterCreationArgs and DateAfterCreationOutput values.
// You can construct a concrete instance of `DateAfterCreationInput` via:
//
//          DateAfterCreationArgs{...}
type DateAfterCreationInput interface {
	pulumi.Input

	ToDateAfterCreationOutput() DateAfterCreationOutput
	ToDateAfterCreationOutputWithContext(context.Context) DateAfterCreationOutput
}

// Object to define the number of days after creation.
type DateAfterCreationArgs struct {
	// Integer value indicating the age in days after creation
	DaysAfterCreationGreaterThan pulumi.IntInput `pulumi:"daysAfterCreationGreaterThan"`
}

func (DateAfterCreationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DateAfterCreation)(nil)).Elem()
}

func (i DateAfterCreationArgs) ToDateAfterCreationOutput() DateAfterCreationOutput {
	return i.ToDateAfterCreationOutputWithContext(context.Background())
}

func (i DateAfterCreationArgs) ToDateAfterCreationOutputWithContext(ctx context.Context) DateAfterCreationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateAfterCreationOutput)
}

func (i DateAfterCreationArgs) ToDateAfterCreationPtrOutput() DateAfterCreationPtrOutput {
	return i.ToDateAfterCreationPtrOutputWithContext(context.Background())
}

func (i DateAfterCreationArgs) ToDateAfterCreationPtrOutputWithContext(ctx context.Context) DateAfterCreationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateAfterCreationOutput).ToDateAfterCreationPtrOutputWithContext(ctx)
}

// DateAfterCreationPtrInput is an input type that accepts DateAfterCreationArgs, DateAfterCreationPtr and DateAfterCreationPtrOutput values.
// You can construct a concrete instance of `DateAfterCreationPtrInput` via:
//
//          DateAfterCreationArgs{...}
//
//  or:
//
//          nil
type DateAfterCreationPtrInput interface {
	pulumi.Input

	ToDateAfterCreationPtrOutput() DateAfterCreationPtrOutput
	ToDateAfterCreationPtrOutputWithContext(context.Context) DateAfterCreationPtrOutput
}

type dateAfterCreationPtrType DateAfterCreationArgs

func DateAfterCreationPtr(v *DateAfterCreationArgs) DateAfterCreationPtrInput {
	return (*dateAfterCreationPtrType)(v)
}

func (*dateAfterCreationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DateAfterCreation)(nil)).Elem()
}

func (i *dateAfterCreationPtrType) ToDateAfterCreationPtrOutput() DateAfterCreationPtrOutput {
	return i.ToDateAfterCreationPtrOutputWithContext(context.Background())
}

func (i *dateAfterCreationPtrType) ToDateAfterCreationPtrOutputWithContext(ctx context.Context) DateAfterCreationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateAfterCreationPtrOutput)
}

// Object to define the number of days after creation.
type DateAfterCreationOutput struct{ *pulumi.OutputState }

func (DateAfterCreationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DateAfterCreation)(nil)).Elem()
}

func (o DateAfterCreationOutput) ToDateAfterCreationOutput() DateAfterCreationOutput {
	return o
}

func (o DateAfterCreationOutput) ToDateAfterCreationOutputWithContext(ctx context.Context) DateAfterCreationOutput {
	return o
}

func (o DateAfterCreationOutput) ToDateAfterCreationPtrOutput() DateAfterCreationPtrOutput {
	return o.ToDateAfterCreationPtrOutputWithContext(context.Background())
}

func (o DateAfterCreationOutput) ToDateAfterCreationPtrOutputWithContext(ctx context.Context) DateAfterCreationPtrOutput {
	return o.ApplyT(func(v DateAfterCreation) *DateAfterCreation {
		return &v
	}).(DateAfterCreationPtrOutput)
}

// Integer value indicating the age in days after creation
func (o DateAfterCreationOutput) DaysAfterCreationGreaterThan() pulumi.IntOutput {
	return o.ApplyT(func(v DateAfterCreation) int { return v.DaysAfterCreationGreaterThan }).(pulumi.IntOutput)
}

type DateAfterCreationPtrOutput struct{ *pulumi.OutputState }

func (DateAfterCreationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DateAfterCreation)(nil)).Elem()
}

func (o DateAfterCreationPtrOutput) ToDateAfterCreationPtrOutput() DateAfterCreationPtrOutput {
	return o
}

func (o DateAfterCreationPtrOutput) ToDateAfterCreationPtrOutputWithContext(ctx context.Context) DateAfterCreationPtrOutput {
	return o
}

func (o DateAfterCreationPtrOutput) Elem() DateAfterCreationOutput {
	return o.ApplyT(func(v *DateAfterCreation) DateAfterCreation { return *v }).(DateAfterCreationOutput)
}

// Integer value indicating the age in days after creation
func (o DateAfterCreationPtrOutput) DaysAfterCreationGreaterThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DateAfterCreation) *int {
		if v == nil {
			return nil
		}
		return &v.DaysAfterCreationGreaterThan
	}).(pulumi.IntPtrOutput)
}

// Object to define the number of days after creation.
type DateAfterCreationResponse struct {
	// Integer value indicating the age in days after creation
	DaysAfterCreationGreaterThan int `pulumi:"daysAfterCreationGreaterThan"`
}

// DateAfterCreationResponseInput is an input type that accepts DateAfterCreationResponseArgs and DateAfterCreationResponseOutput values.
// You can construct a concrete instance of `DateAfterCreationResponseInput` via:
//
//          DateAfterCreationResponseArgs{...}
type DateAfterCreationResponseInput interface {
	pulumi.Input

	ToDateAfterCreationResponseOutput() DateAfterCreationResponseOutput
	ToDateAfterCreationResponseOutputWithContext(context.Context) DateAfterCreationResponseOutput
}

// Object to define the number of days after creation.
type DateAfterCreationResponseArgs struct {
	// Integer value indicating the age in days after creation
	DaysAfterCreationGreaterThan pulumi.IntInput `pulumi:"daysAfterCreationGreaterThan"`
}

func (DateAfterCreationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DateAfterCreationResponse)(nil)).Elem()
}

func (i DateAfterCreationResponseArgs) ToDateAfterCreationResponseOutput() DateAfterCreationResponseOutput {
	return i.ToDateAfterCreationResponseOutputWithContext(context.Background())
}

func (i DateAfterCreationResponseArgs) ToDateAfterCreationResponseOutputWithContext(ctx context.Context) DateAfterCreationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateAfterCreationResponseOutput)
}

func (i DateAfterCreationResponseArgs) ToDateAfterCreationResponsePtrOutput() DateAfterCreationResponsePtrOutput {
	return i.ToDateAfterCreationResponsePtrOutputWithContext(context.Background())
}

func (i DateAfterCreationResponseArgs) ToDateAfterCreationResponsePtrOutputWithContext(ctx context.Context) DateAfterCreationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateAfterCreationResponseOutput).ToDateAfterCreationResponsePtrOutputWithContext(ctx)
}

// DateAfterCreationResponsePtrInput is an input type that accepts DateAfterCreationResponseArgs, DateAfterCreationResponsePtr and DateAfterCreationResponsePtrOutput values.
// You can construct a concrete instance of `DateAfterCreationResponsePtrInput` via:
//
//          DateAfterCreationResponseArgs{...}
//
//  or:
//
//          nil
type DateAfterCreationResponsePtrInput interface {
	pulumi.Input

	ToDateAfterCreationResponsePtrOutput() DateAfterCreationResponsePtrOutput
	ToDateAfterCreationResponsePtrOutputWithContext(context.Context) DateAfterCreationResponsePtrOutput
}

type dateAfterCreationResponsePtrType DateAfterCreationResponseArgs

func DateAfterCreationResponsePtr(v *DateAfterCreationResponseArgs) DateAfterCreationResponsePtrInput {
	return (*dateAfterCreationResponsePtrType)(v)
}

func (*dateAfterCreationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DateAfterCreationResponse)(nil)).Elem()
}

func (i *dateAfterCreationResponsePtrType) ToDateAfterCreationResponsePtrOutput() DateAfterCreationResponsePtrOutput {
	return i.ToDateAfterCreationResponsePtrOutputWithContext(context.Background())
}

func (i *dateAfterCreationResponsePtrType) ToDateAfterCreationResponsePtrOutputWithContext(ctx context.Context) DateAfterCreationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateAfterCreationResponsePtrOutput)
}

// Object to define the number of days after creation.
type DateAfterCreationResponseOutput struct{ *pulumi.OutputState }

func (DateAfterCreationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DateAfterCreationResponse)(nil)).Elem()
}

func (o DateAfterCreationResponseOutput) ToDateAfterCreationResponseOutput() DateAfterCreationResponseOutput {
	return o
}

func (o DateAfterCreationResponseOutput) ToDateAfterCreationResponseOutputWithContext(ctx context.Context) DateAfterCreationResponseOutput {
	return o
}

func (o DateAfterCreationResponseOutput) ToDateAfterCreationResponsePtrOutput() DateAfterCreationResponsePtrOutput {
	return o.ToDateAfterCreationResponsePtrOutputWithContext(context.Background())
}

func (o DateAfterCreationResponseOutput) ToDateAfterCreationResponsePtrOutputWithContext(ctx context.Context) DateAfterCreationResponsePtrOutput {
	return o.ApplyT(func(v DateAfterCreationResponse) *DateAfterCreationResponse {
		return &v
	}).(DateAfterCreationResponsePtrOutput)
}

// Integer value indicating the age in days after creation
func (o DateAfterCreationResponseOutput) DaysAfterCreationGreaterThan() pulumi.IntOutput {
	return o.ApplyT(func(v DateAfterCreationResponse) int { return v.DaysAfterCreationGreaterThan }).(pulumi.IntOutput)
}

type DateAfterCreationResponsePtrOutput struct{ *pulumi.OutputState }

func (DateAfterCreationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DateAfterCreationResponse)(nil)).Elem()
}

func (o DateAfterCreationResponsePtrOutput) ToDateAfterCreationResponsePtrOutput() DateAfterCreationResponsePtrOutput {
	return o
}

func (o DateAfterCreationResponsePtrOutput) ToDateAfterCreationResponsePtrOutputWithContext(ctx context.Context) DateAfterCreationResponsePtrOutput {
	return o
}

func (o DateAfterCreationResponsePtrOutput) Elem() DateAfterCreationResponseOutput {
	return o.ApplyT(func(v *DateAfterCreationResponse) DateAfterCreationResponse { return *v }).(DateAfterCreationResponseOutput)
}

// Integer value indicating the age in days after creation
func (o DateAfterCreationResponsePtrOutput) DaysAfterCreationGreaterThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DateAfterCreationResponse) *int {
		if v == nil {
			return nil
		}
		return &v.DaysAfterCreationGreaterThan
	}).(pulumi.IntPtrOutput)
}

// Object to define the number of days after last modification.
type DateAfterModification struct {
	// Integer value indicating the age in days after last modification
	DaysAfterModificationGreaterThan int `pulumi:"daysAfterModificationGreaterThan"`
}

// DateAfterModificationInput is an input type that accepts DateAfterModificationArgs and DateAfterModificationOutput values.
// You can construct a concrete instance of `DateAfterModificationInput` via:
//
//          DateAfterModificationArgs{...}
type DateAfterModificationInput interface {
	pulumi.Input

	ToDateAfterModificationOutput() DateAfterModificationOutput
	ToDateAfterModificationOutputWithContext(context.Context) DateAfterModificationOutput
}

// Object to define the number of days after last modification.
type DateAfterModificationArgs struct {
	// Integer value indicating the age in days after last modification
	DaysAfterModificationGreaterThan pulumi.IntInput `pulumi:"daysAfterModificationGreaterThan"`
}

func (DateAfterModificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DateAfterModification)(nil)).Elem()
}

func (i DateAfterModificationArgs) ToDateAfterModificationOutput() DateAfterModificationOutput {
	return i.ToDateAfterModificationOutputWithContext(context.Background())
}

func (i DateAfterModificationArgs) ToDateAfterModificationOutputWithContext(ctx context.Context) DateAfterModificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateAfterModificationOutput)
}

func (i DateAfterModificationArgs) ToDateAfterModificationPtrOutput() DateAfterModificationPtrOutput {
	return i.ToDateAfterModificationPtrOutputWithContext(context.Background())
}

func (i DateAfterModificationArgs) ToDateAfterModificationPtrOutputWithContext(ctx context.Context) DateAfterModificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateAfterModificationOutput).ToDateAfterModificationPtrOutputWithContext(ctx)
}

// DateAfterModificationPtrInput is an input type that accepts DateAfterModificationArgs, DateAfterModificationPtr and DateAfterModificationPtrOutput values.
// You can construct a concrete instance of `DateAfterModificationPtrInput` via:
//
//          DateAfterModificationArgs{...}
//
//  or:
//
//          nil
type DateAfterModificationPtrInput interface {
	pulumi.Input

	ToDateAfterModificationPtrOutput() DateAfterModificationPtrOutput
	ToDateAfterModificationPtrOutputWithContext(context.Context) DateAfterModificationPtrOutput
}

type dateAfterModificationPtrType DateAfterModificationArgs

func DateAfterModificationPtr(v *DateAfterModificationArgs) DateAfterModificationPtrInput {
	return (*dateAfterModificationPtrType)(v)
}

func (*dateAfterModificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DateAfterModification)(nil)).Elem()
}

func (i *dateAfterModificationPtrType) ToDateAfterModificationPtrOutput() DateAfterModificationPtrOutput {
	return i.ToDateAfterModificationPtrOutputWithContext(context.Background())
}

func (i *dateAfterModificationPtrType) ToDateAfterModificationPtrOutputWithContext(ctx context.Context) DateAfterModificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateAfterModificationPtrOutput)
}

// Object to define the number of days after last modification.
type DateAfterModificationOutput struct{ *pulumi.OutputState }

func (DateAfterModificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DateAfterModification)(nil)).Elem()
}

func (o DateAfterModificationOutput) ToDateAfterModificationOutput() DateAfterModificationOutput {
	return o
}

func (o DateAfterModificationOutput) ToDateAfterModificationOutputWithContext(ctx context.Context) DateAfterModificationOutput {
	return o
}

func (o DateAfterModificationOutput) ToDateAfterModificationPtrOutput() DateAfterModificationPtrOutput {
	return o.ToDateAfterModificationPtrOutputWithContext(context.Background())
}

func (o DateAfterModificationOutput) ToDateAfterModificationPtrOutputWithContext(ctx context.Context) DateAfterModificationPtrOutput {
	return o.ApplyT(func(v DateAfterModification) *DateAfterModification {
		return &v
	}).(DateAfterModificationPtrOutput)
}

// Integer value indicating the age in days after last modification
func (o DateAfterModificationOutput) DaysAfterModificationGreaterThan() pulumi.IntOutput {
	return o.ApplyT(func(v DateAfterModification) int { return v.DaysAfterModificationGreaterThan }).(pulumi.IntOutput)
}

type DateAfterModificationPtrOutput struct{ *pulumi.OutputState }

func (DateAfterModificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DateAfterModification)(nil)).Elem()
}

func (o DateAfterModificationPtrOutput) ToDateAfterModificationPtrOutput() DateAfterModificationPtrOutput {
	return o
}

func (o DateAfterModificationPtrOutput) ToDateAfterModificationPtrOutputWithContext(ctx context.Context) DateAfterModificationPtrOutput {
	return o
}

func (o DateAfterModificationPtrOutput) Elem() DateAfterModificationOutput {
	return o.ApplyT(func(v *DateAfterModification) DateAfterModification { return *v }).(DateAfterModificationOutput)
}

// Integer value indicating the age in days after last modification
func (o DateAfterModificationPtrOutput) DaysAfterModificationGreaterThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DateAfterModification) *int {
		if v == nil {
			return nil
		}
		return &v.DaysAfterModificationGreaterThan
	}).(pulumi.IntPtrOutput)
}

// Object to define the number of days after last modification.
type DateAfterModificationResponse struct {
	// Integer value indicating the age in days after last modification
	DaysAfterModificationGreaterThan int `pulumi:"daysAfterModificationGreaterThan"`
}

// DateAfterModificationResponseInput is an input type that accepts DateAfterModificationResponseArgs and DateAfterModificationResponseOutput values.
// You can construct a concrete instance of `DateAfterModificationResponseInput` via:
//
//          DateAfterModificationResponseArgs{...}
type DateAfterModificationResponseInput interface {
	pulumi.Input

	ToDateAfterModificationResponseOutput() DateAfterModificationResponseOutput
	ToDateAfterModificationResponseOutputWithContext(context.Context) DateAfterModificationResponseOutput
}

// Object to define the number of days after last modification.
type DateAfterModificationResponseArgs struct {
	// Integer value indicating the age in days after last modification
	DaysAfterModificationGreaterThan pulumi.IntInput `pulumi:"daysAfterModificationGreaterThan"`
}

func (DateAfterModificationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DateAfterModificationResponse)(nil)).Elem()
}

func (i DateAfterModificationResponseArgs) ToDateAfterModificationResponseOutput() DateAfterModificationResponseOutput {
	return i.ToDateAfterModificationResponseOutputWithContext(context.Background())
}

func (i DateAfterModificationResponseArgs) ToDateAfterModificationResponseOutputWithContext(ctx context.Context) DateAfterModificationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateAfterModificationResponseOutput)
}

func (i DateAfterModificationResponseArgs) ToDateAfterModificationResponsePtrOutput() DateAfterModificationResponsePtrOutput {
	return i.ToDateAfterModificationResponsePtrOutputWithContext(context.Background())
}

func (i DateAfterModificationResponseArgs) ToDateAfterModificationResponsePtrOutputWithContext(ctx context.Context) DateAfterModificationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateAfterModificationResponseOutput).ToDateAfterModificationResponsePtrOutputWithContext(ctx)
}

// DateAfterModificationResponsePtrInput is an input type that accepts DateAfterModificationResponseArgs, DateAfterModificationResponsePtr and DateAfterModificationResponsePtrOutput values.
// You can construct a concrete instance of `DateAfterModificationResponsePtrInput` via:
//
//          DateAfterModificationResponseArgs{...}
//
//  or:
//
//          nil
type DateAfterModificationResponsePtrInput interface {
	pulumi.Input

	ToDateAfterModificationResponsePtrOutput() DateAfterModificationResponsePtrOutput
	ToDateAfterModificationResponsePtrOutputWithContext(context.Context) DateAfterModificationResponsePtrOutput
}

type dateAfterModificationResponsePtrType DateAfterModificationResponseArgs

func DateAfterModificationResponsePtr(v *DateAfterModificationResponseArgs) DateAfterModificationResponsePtrInput {
	return (*dateAfterModificationResponsePtrType)(v)
}

func (*dateAfterModificationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DateAfterModificationResponse)(nil)).Elem()
}

func (i *dateAfterModificationResponsePtrType) ToDateAfterModificationResponsePtrOutput() DateAfterModificationResponsePtrOutput {
	return i.ToDateAfterModificationResponsePtrOutputWithContext(context.Background())
}

func (i *dateAfterModificationResponsePtrType) ToDateAfterModificationResponsePtrOutputWithContext(ctx context.Context) DateAfterModificationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateAfterModificationResponsePtrOutput)
}

// Object to define the number of days after last modification.
type DateAfterModificationResponseOutput struct{ *pulumi.OutputState }

func (DateAfterModificationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DateAfterModificationResponse)(nil)).Elem()
}

func (o DateAfterModificationResponseOutput) ToDateAfterModificationResponseOutput() DateAfterModificationResponseOutput {
	return o
}

func (o DateAfterModificationResponseOutput) ToDateAfterModificationResponseOutputWithContext(ctx context.Context) DateAfterModificationResponseOutput {
	return o
}

func (o DateAfterModificationResponseOutput) ToDateAfterModificationResponsePtrOutput() DateAfterModificationResponsePtrOutput {
	return o.ToDateAfterModificationResponsePtrOutputWithContext(context.Background())
}

func (o DateAfterModificationResponseOutput) ToDateAfterModificationResponsePtrOutputWithContext(ctx context.Context) DateAfterModificationResponsePtrOutput {
	return o.ApplyT(func(v DateAfterModificationResponse) *DateAfterModificationResponse {
		return &v
	}).(DateAfterModificationResponsePtrOutput)
}

// Integer value indicating the age in days after last modification
func (o DateAfterModificationResponseOutput) DaysAfterModificationGreaterThan() pulumi.IntOutput {
	return o.ApplyT(func(v DateAfterModificationResponse) int { return v.DaysAfterModificationGreaterThan }).(pulumi.IntOutput)
}

type DateAfterModificationResponsePtrOutput struct{ *pulumi.OutputState }

func (DateAfterModificationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DateAfterModificationResponse)(nil)).Elem()
}

func (o DateAfterModificationResponsePtrOutput) ToDateAfterModificationResponsePtrOutput() DateAfterModificationResponsePtrOutput {
	return o
}

func (o DateAfterModificationResponsePtrOutput) ToDateAfterModificationResponsePtrOutputWithContext(ctx context.Context) DateAfterModificationResponsePtrOutput {
	return o
}

func (o DateAfterModificationResponsePtrOutput) Elem() DateAfterModificationResponseOutput {
	return o.ApplyT(func(v *DateAfterModificationResponse) DateAfterModificationResponse { return *v }).(DateAfterModificationResponseOutput)
}

// Integer value indicating the age in days after last modification
func (o DateAfterModificationResponsePtrOutput) DaysAfterModificationGreaterThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DateAfterModificationResponse) *int {
		if v == nil {
			return nil
		}
		return &v.DaysAfterModificationGreaterThan
	}).(pulumi.IntPtrOutput)
}

// The blob service properties for soft delete.
type DeleteRetentionPolicy struct {
	// Indicates the number of days that the deleted blob should be retained. The minimum specified value can be 1 and the maximum value can be 365.
	Days *int `pulumi:"days"`
	// Indicates whether DeleteRetentionPolicy is enabled for the Blob service.
	Enabled *bool `pulumi:"enabled"`
}

// DeleteRetentionPolicyInput is an input type that accepts DeleteRetentionPolicyArgs and DeleteRetentionPolicyOutput values.
// You can construct a concrete instance of `DeleteRetentionPolicyInput` via:
//
//          DeleteRetentionPolicyArgs{...}
type DeleteRetentionPolicyInput interface {
	pulumi.Input

	ToDeleteRetentionPolicyOutput() DeleteRetentionPolicyOutput
	ToDeleteRetentionPolicyOutputWithContext(context.Context) DeleteRetentionPolicyOutput
}

// The blob service properties for soft delete.
type DeleteRetentionPolicyArgs struct {
	// Indicates the number of days that the deleted blob should be retained. The minimum specified value can be 1 and the maximum value can be 365.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// Indicates whether DeleteRetentionPolicy is enabled for the Blob service.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (DeleteRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeleteRetentionPolicy)(nil)).Elem()
}

func (i DeleteRetentionPolicyArgs) ToDeleteRetentionPolicyOutput() DeleteRetentionPolicyOutput {
	return i.ToDeleteRetentionPolicyOutputWithContext(context.Background())
}

func (i DeleteRetentionPolicyArgs) ToDeleteRetentionPolicyOutputWithContext(ctx context.Context) DeleteRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeleteRetentionPolicyOutput)
}

func (i DeleteRetentionPolicyArgs) ToDeleteRetentionPolicyPtrOutput() DeleteRetentionPolicyPtrOutput {
	return i.ToDeleteRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i DeleteRetentionPolicyArgs) ToDeleteRetentionPolicyPtrOutputWithContext(ctx context.Context) DeleteRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeleteRetentionPolicyOutput).ToDeleteRetentionPolicyPtrOutputWithContext(ctx)
}

// DeleteRetentionPolicyPtrInput is an input type that accepts DeleteRetentionPolicyArgs, DeleteRetentionPolicyPtr and DeleteRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `DeleteRetentionPolicyPtrInput` via:
//
//          DeleteRetentionPolicyArgs{...}
//
//  or:
//
//          nil
type DeleteRetentionPolicyPtrInput interface {
	pulumi.Input

	ToDeleteRetentionPolicyPtrOutput() DeleteRetentionPolicyPtrOutput
	ToDeleteRetentionPolicyPtrOutputWithContext(context.Context) DeleteRetentionPolicyPtrOutput
}

type deleteRetentionPolicyPtrType DeleteRetentionPolicyArgs

func DeleteRetentionPolicyPtr(v *DeleteRetentionPolicyArgs) DeleteRetentionPolicyPtrInput {
	return (*deleteRetentionPolicyPtrType)(v)
}

func (*deleteRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeleteRetentionPolicy)(nil)).Elem()
}

func (i *deleteRetentionPolicyPtrType) ToDeleteRetentionPolicyPtrOutput() DeleteRetentionPolicyPtrOutput {
	return i.ToDeleteRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *deleteRetentionPolicyPtrType) ToDeleteRetentionPolicyPtrOutputWithContext(ctx context.Context) DeleteRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeleteRetentionPolicyPtrOutput)
}

// The blob service properties for soft delete.
type DeleteRetentionPolicyOutput struct{ *pulumi.OutputState }

func (DeleteRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeleteRetentionPolicy)(nil)).Elem()
}

func (o DeleteRetentionPolicyOutput) ToDeleteRetentionPolicyOutput() DeleteRetentionPolicyOutput {
	return o
}

func (o DeleteRetentionPolicyOutput) ToDeleteRetentionPolicyOutputWithContext(ctx context.Context) DeleteRetentionPolicyOutput {
	return o
}

func (o DeleteRetentionPolicyOutput) ToDeleteRetentionPolicyPtrOutput() DeleteRetentionPolicyPtrOutput {
	return o.ToDeleteRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o DeleteRetentionPolicyOutput) ToDeleteRetentionPolicyPtrOutputWithContext(ctx context.Context) DeleteRetentionPolicyPtrOutput {
	return o.ApplyT(func(v DeleteRetentionPolicy) *DeleteRetentionPolicy {
		return &v
	}).(DeleteRetentionPolicyPtrOutput)
}

// Indicates the number of days that the deleted blob should be retained. The minimum specified value can be 1 and the maximum value can be 365.
func (o DeleteRetentionPolicyOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeleteRetentionPolicy) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Indicates whether DeleteRetentionPolicy is enabled for the Blob service.
func (o DeleteRetentionPolicyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeleteRetentionPolicy) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type DeleteRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (DeleteRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeleteRetentionPolicy)(nil)).Elem()
}

func (o DeleteRetentionPolicyPtrOutput) ToDeleteRetentionPolicyPtrOutput() DeleteRetentionPolicyPtrOutput {
	return o
}

func (o DeleteRetentionPolicyPtrOutput) ToDeleteRetentionPolicyPtrOutputWithContext(ctx context.Context) DeleteRetentionPolicyPtrOutput {
	return o
}

func (o DeleteRetentionPolicyPtrOutput) Elem() DeleteRetentionPolicyOutput {
	return o.ApplyT(func(v *DeleteRetentionPolicy) DeleteRetentionPolicy { return *v }).(DeleteRetentionPolicyOutput)
}

// Indicates the number of days that the deleted blob should be retained. The minimum specified value can be 1 and the maximum value can be 365.
func (o DeleteRetentionPolicyPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeleteRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Indicates whether DeleteRetentionPolicy is enabled for the Blob service.
func (o DeleteRetentionPolicyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeleteRetentionPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The blob service properties for soft delete.
type DeleteRetentionPolicyResponse struct {
	// Indicates the number of days that the deleted blob should be retained. The minimum specified value can be 1 and the maximum value can be 365.
	Days *int `pulumi:"days"`
	// Indicates whether DeleteRetentionPolicy is enabled for the Blob service.
	Enabled *bool `pulumi:"enabled"`
}

// DeleteRetentionPolicyResponseInput is an input type that accepts DeleteRetentionPolicyResponseArgs and DeleteRetentionPolicyResponseOutput values.
// You can construct a concrete instance of `DeleteRetentionPolicyResponseInput` via:
//
//          DeleteRetentionPolicyResponseArgs{...}
type DeleteRetentionPolicyResponseInput interface {
	pulumi.Input

	ToDeleteRetentionPolicyResponseOutput() DeleteRetentionPolicyResponseOutput
	ToDeleteRetentionPolicyResponseOutputWithContext(context.Context) DeleteRetentionPolicyResponseOutput
}

// The blob service properties for soft delete.
type DeleteRetentionPolicyResponseArgs struct {
	// Indicates the number of days that the deleted blob should be retained. The minimum specified value can be 1 and the maximum value can be 365.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// Indicates whether DeleteRetentionPolicy is enabled for the Blob service.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (DeleteRetentionPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeleteRetentionPolicyResponse)(nil)).Elem()
}

func (i DeleteRetentionPolicyResponseArgs) ToDeleteRetentionPolicyResponseOutput() DeleteRetentionPolicyResponseOutput {
	return i.ToDeleteRetentionPolicyResponseOutputWithContext(context.Background())
}

func (i DeleteRetentionPolicyResponseArgs) ToDeleteRetentionPolicyResponseOutputWithContext(ctx context.Context) DeleteRetentionPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeleteRetentionPolicyResponseOutput)
}

func (i DeleteRetentionPolicyResponseArgs) ToDeleteRetentionPolicyResponsePtrOutput() DeleteRetentionPolicyResponsePtrOutput {
	return i.ToDeleteRetentionPolicyResponsePtrOutputWithContext(context.Background())
}

func (i DeleteRetentionPolicyResponseArgs) ToDeleteRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) DeleteRetentionPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeleteRetentionPolicyResponseOutput).ToDeleteRetentionPolicyResponsePtrOutputWithContext(ctx)
}

// DeleteRetentionPolicyResponsePtrInput is an input type that accepts DeleteRetentionPolicyResponseArgs, DeleteRetentionPolicyResponsePtr and DeleteRetentionPolicyResponsePtrOutput values.
// You can construct a concrete instance of `DeleteRetentionPolicyResponsePtrInput` via:
//
//          DeleteRetentionPolicyResponseArgs{...}
//
//  or:
//
//          nil
type DeleteRetentionPolicyResponsePtrInput interface {
	pulumi.Input

	ToDeleteRetentionPolicyResponsePtrOutput() DeleteRetentionPolicyResponsePtrOutput
	ToDeleteRetentionPolicyResponsePtrOutputWithContext(context.Context) DeleteRetentionPolicyResponsePtrOutput
}

type deleteRetentionPolicyResponsePtrType DeleteRetentionPolicyResponseArgs

func DeleteRetentionPolicyResponsePtr(v *DeleteRetentionPolicyResponseArgs) DeleteRetentionPolicyResponsePtrInput {
	return (*deleteRetentionPolicyResponsePtrType)(v)
}

func (*deleteRetentionPolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeleteRetentionPolicyResponse)(nil)).Elem()
}

func (i *deleteRetentionPolicyResponsePtrType) ToDeleteRetentionPolicyResponsePtrOutput() DeleteRetentionPolicyResponsePtrOutput {
	return i.ToDeleteRetentionPolicyResponsePtrOutputWithContext(context.Background())
}

func (i *deleteRetentionPolicyResponsePtrType) ToDeleteRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) DeleteRetentionPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeleteRetentionPolicyResponsePtrOutput)
}

// The blob service properties for soft delete.
type DeleteRetentionPolicyResponseOutput struct{ *pulumi.OutputState }

func (DeleteRetentionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeleteRetentionPolicyResponse)(nil)).Elem()
}

func (o DeleteRetentionPolicyResponseOutput) ToDeleteRetentionPolicyResponseOutput() DeleteRetentionPolicyResponseOutput {
	return o
}

func (o DeleteRetentionPolicyResponseOutput) ToDeleteRetentionPolicyResponseOutputWithContext(ctx context.Context) DeleteRetentionPolicyResponseOutput {
	return o
}

func (o DeleteRetentionPolicyResponseOutput) ToDeleteRetentionPolicyResponsePtrOutput() DeleteRetentionPolicyResponsePtrOutput {
	return o.ToDeleteRetentionPolicyResponsePtrOutputWithContext(context.Background())
}

func (o DeleteRetentionPolicyResponseOutput) ToDeleteRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) DeleteRetentionPolicyResponsePtrOutput {
	return o.ApplyT(func(v DeleteRetentionPolicyResponse) *DeleteRetentionPolicyResponse {
		return &v
	}).(DeleteRetentionPolicyResponsePtrOutput)
}

// Indicates the number of days that the deleted blob should be retained. The minimum specified value can be 1 and the maximum value can be 365.
func (o DeleteRetentionPolicyResponseOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeleteRetentionPolicyResponse) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Indicates whether DeleteRetentionPolicy is enabled for the Blob service.
func (o DeleteRetentionPolicyResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeleteRetentionPolicyResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type DeleteRetentionPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (DeleteRetentionPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeleteRetentionPolicyResponse)(nil)).Elem()
}

func (o DeleteRetentionPolicyResponsePtrOutput) ToDeleteRetentionPolicyResponsePtrOutput() DeleteRetentionPolicyResponsePtrOutput {
	return o
}

func (o DeleteRetentionPolicyResponsePtrOutput) ToDeleteRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) DeleteRetentionPolicyResponsePtrOutput {
	return o
}

func (o DeleteRetentionPolicyResponsePtrOutput) Elem() DeleteRetentionPolicyResponseOutput {
	return o.ApplyT(func(v *DeleteRetentionPolicyResponse) DeleteRetentionPolicyResponse { return *v }).(DeleteRetentionPolicyResponseOutput)
}

// Indicates the number of days that the deleted blob should be retained. The minimum specified value can be 1 and the maximum value can be 365.
func (o DeleteRetentionPolicyResponsePtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeleteRetentionPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Indicates whether DeleteRetentionPolicy is enabled for the Blob service.
func (o DeleteRetentionPolicyResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeleteRetentionPolicyResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The encryption settings on the storage account.
type Encryption struct {
	// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
	KeySource string `pulumi:"keySource"`
	// Properties provided by key vault.
	KeyVaultProperties *KeyVaultProperties `pulumi:"keyVaultProperties"`
	// List of services which support encryption.
	Services *EncryptionServices `pulumi:"services"`
}

// EncryptionInput is an input type that accepts EncryptionArgs and EncryptionOutput values.
// You can construct a concrete instance of `EncryptionInput` via:
//
//          EncryptionArgs{...}
type EncryptionInput interface {
	pulumi.Input

	ToEncryptionOutput() EncryptionOutput
	ToEncryptionOutputWithContext(context.Context) EncryptionOutput
}

// The encryption settings on the storage account.
type EncryptionArgs struct {
	// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
	KeySource pulumi.StringInput `pulumi:"keySource"`
	// Properties provided by key vault.
	KeyVaultProperties KeyVaultPropertiesPtrInput `pulumi:"keyVaultProperties"`
	// List of services which support encryption.
	Services EncryptionServicesPtrInput `pulumi:"services"`
}

func (EncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Encryption)(nil)).Elem()
}

func (i EncryptionArgs) ToEncryptionOutput() EncryptionOutput {
	return i.ToEncryptionOutputWithContext(context.Background())
}

func (i EncryptionArgs) ToEncryptionOutputWithContext(ctx context.Context) EncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionOutput)
}

func (i EncryptionArgs) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return i.ToEncryptionPtrOutputWithContext(context.Background())
}

func (i EncryptionArgs) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionOutput).ToEncryptionPtrOutputWithContext(ctx)
}

// EncryptionPtrInput is an input type that accepts EncryptionArgs, EncryptionPtr and EncryptionPtrOutput values.
// You can construct a concrete instance of `EncryptionPtrInput` via:
//
//          EncryptionArgs{...}
//
//  or:
//
//          nil
type EncryptionPtrInput interface {
	pulumi.Input

	ToEncryptionPtrOutput() EncryptionPtrOutput
	ToEncryptionPtrOutputWithContext(context.Context) EncryptionPtrOutput
}

type encryptionPtrType EncryptionArgs

func EncryptionPtr(v *EncryptionArgs) EncryptionPtrInput {
	return (*encryptionPtrType)(v)
}

func (*encryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Encryption)(nil)).Elem()
}

func (i *encryptionPtrType) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return i.ToEncryptionPtrOutputWithContext(context.Background())
}

func (i *encryptionPtrType) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPtrOutput)
}

// The encryption settings on the storage account.
type EncryptionOutput struct{ *pulumi.OutputState }

func (EncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Encryption)(nil)).Elem()
}

func (o EncryptionOutput) ToEncryptionOutput() EncryptionOutput {
	return o
}

func (o EncryptionOutput) ToEncryptionOutputWithContext(ctx context.Context) EncryptionOutput {
	return o
}

func (o EncryptionOutput) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return o.ToEncryptionPtrOutputWithContext(context.Background())
}

func (o EncryptionOutput) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return o.ApplyT(func(v Encryption) *Encryption {
		return &v
	}).(EncryptionPtrOutput)
}

// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
func (o EncryptionOutput) KeySource() pulumi.StringOutput {
	return o.ApplyT(func(v Encryption) string { return v.KeySource }).(pulumi.StringOutput)
}

// Properties provided by key vault.
func (o EncryptionOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v Encryption) *KeyVaultProperties { return v.KeyVaultProperties }).(KeyVaultPropertiesPtrOutput)
}

// List of services which support encryption.
func (o EncryptionOutput) Services() EncryptionServicesPtrOutput {
	return o.ApplyT(func(v Encryption) *EncryptionServices { return v.Services }).(EncryptionServicesPtrOutput)
}

type EncryptionPtrOutput struct{ *pulumi.OutputState }

func (EncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Encryption)(nil)).Elem()
}

func (o EncryptionPtrOutput) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return o
}

func (o EncryptionPtrOutput) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return o
}

func (o EncryptionPtrOutput) Elem() EncryptionOutput {
	return o.ApplyT(func(v *Encryption) Encryption { return *v }).(EncryptionOutput)
}

// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
func (o EncryptionPtrOutput) KeySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Encryption) *string {
		if v == nil {
			return nil
		}
		return &v.KeySource
	}).(pulumi.StringPtrOutput)
}

// Properties provided by key vault.
func (o EncryptionPtrOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v *Encryption) *KeyVaultProperties {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(KeyVaultPropertiesPtrOutput)
}

// List of services which support encryption.
func (o EncryptionPtrOutput) Services() EncryptionServicesPtrOutput {
	return o.ApplyT(func(v *Encryption) *EncryptionServices {
		if v == nil {
			return nil
		}
		return v.Services
	}).(EncryptionServicesPtrOutput)
}

// The encryption settings on the storage account.
type EncryptionResponse struct {
	// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
	KeySource string `pulumi:"keySource"`
	// Properties provided by key vault.
	KeyVaultProperties *KeyVaultPropertiesResponse `pulumi:"keyVaultProperties"`
	// List of services which support encryption.
	Services *EncryptionServicesResponse `pulumi:"services"`
}

// EncryptionResponseInput is an input type that accepts EncryptionResponseArgs and EncryptionResponseOutput values.
// You can construct a concrete instance of `EncryptionResponseInput` via:
//
//          EncryptionResponseArgs{...}
type EncryptionResponseInput interface {
	pulumi.Input

	ToEncryptionResponseOutput() EncryptionResponseOutput
	ToEncryptionResponseOutputWithContext(context.Context) EncryptionResponseOutput
}

// The encryption settings on the storage account.
type EncryptionResponseArgs struct {
	// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
	KeySource pulumi.StringInput `pulumi:"keySource"`
	// Properties provided by key vault.
	KeyVaultProperties KeyVaultPropertiesResponsePtrInput `pulumi:"keyVaultProperties"`
	// List of services which support encryption.
	Services EncryptionServicesResponsePtrInput `pulumi:"services"`
}

func (EncryptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionResponse)(nil)).Elem()
}

func (i EncryptionResponseArgs) ToEncryptionResponseOutput() EncryptionResponseOutput {
	return i.ToEncryptionResponseOutputWithContext(context.Background())
}

func (i EncryptionResponseArgs) ToEncryptionResponseOutputWithContext(ctx context.Context) EncryptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionResponseOutput)
}

func (i EncryptionResponseArgs) ToEncryptionResponsePtrOutput() EncryptionResponsePtrOutput {
	return i.ToEncryptionResponsePtrOutputWithContext(context.Background())
}

func (i EncryptionResponseArgs) ToEncryptionResponsePtrOutputWithContext(ctx context.Context) EncryptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionResponseOutput).ToEncryptionResponsePtrOutputWithContext(ctx)
}

// EncryptionResponsePtrInput is an input type that accepts EncryptionResponseArgs, EncryptionResponsePtr and EncryptionResponsePtrOutput values.
// You can construct a concrete instance of `EncryptionResponsePtrInput` via:
//
//          EncryptionResponseArgs{...}
//
//  or:
//
//          nil
type EncryptionResponsePtrInput interface {
	pulumi.Input

	ToEncryptionResponsePtrOutput() EncryptionResponsePtrOutput
	ToEncryptionResponsePtrOutputWithContext(context.Context) EncryptionResponsePtrOutput
}

type encryptionResponsePtrType EncryptionResponseArgs

func EncryptionResponsePtr(v *EncryptionResponseArgs) EncryptionResponsePtrInput {
	return (*encryptionResponsePtrType)(v)
}

func (*encryptionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionResponse)(nil)).Elem()
}

func (i *encryptionResponsePtrType) ToEncryptionResponsePtrOutput() EncryptionResponsePtrOutput {
	return i.ToEncryptionResponsePtrOutputWithContext(context.Background())
}

func (i *encryptionResponsePtrType) ToEncryptionResponsePtrOutputWithContext(ctx context.Context) EncryptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionResponsePtrOutput)
}

// The encryption settings on the storage account.
type EncryptionResponseOutput struct{ *pulumi.OutputState }

func (EncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionResponse)(nil)).Elem()
}

func (o EncryptionResponseOutput) ToEncryptionResponseOutput() EncryptionResponseOutput {
	return o
}

func (o EncryptionResponseOutput) ToEncryptionResponseOutputWithContext(ctx context.Context) EncryptionResponseOutput {
	return o
}

func (o EncryptionResponseOutput) ToEncryptionResponsePtrOutput() EncryptionResponsePtrOutput {
	return o.ToEncryptionResponsePtrOutputWithContext(context.Background())
}

func (o EncryptionResponseOutput) ToEncryptionResponsePtrOutputWithContext(ctx context.Context) EncryptionResponsePtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *EncryptionResponse {
		return &v
	}).(EncryptionResponsePtrOutput)
}

// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
func (o EncryptionResponseOutput) KeySource() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionResponse) string { return v.KeySource }).(pulumi.StringOutput)
}

// Properties provided by key vault.
func (o EncryptionResponseOutput) KeyVaultProperties() KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *KeyVaultPropertiesResponse { return v.KeyVaultProperties }).(KeyVaultPropertiesResponsePtrOutput)
}

// List of services which support encryption.
func (o EncryptionResponseOutput) Services() EncryptionServicesResponsePtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *EncryptionServicesResponse { return v.Services }).(EncryptionServicesResponsePtrOutput)
}

type EncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionResponse)(nil)).Elem()
}

func (o EncryptionResponsePtrOutput) ToEncryptionResponsePtrOutput() EncryptionResponsePtrOutput {
	return o
}

func (o EncryptionResponsePtrOutput) ToEncryptionResponsePtrOutputWithContext(ctx context.Context) EncryptionResponsePtrOutput {
	return o
}

func (o EncryptionResponsePtrOutput) Elem() EncryptionResponseOutput {
	return o.ApplyT(func(v *EncryptionResponse) EncryptionResponse { return *v }).(EncryptionResponseOutput)
}

// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
func (o EncryptionResponsePtrOutput) KeySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeySource
	}).(pulumi.StringPtrOutput)
}

// Properties provided by key vault.
func (o EncryptionResponsePtrOutput) KeyVaultProperties() KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionResponse) *KeyVaultPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(KeyVaultPropertiesResponsePtrOutput)
}

// List of services which support encryption.
func (o EncryptionResponsePtrOutput) Services() EncryptionServicesResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionResponse) *EncryptionServicesResponse {
		if v == nil {
			return nil
		}
		return v.Services
	}).(EncryptionServicesResponsePtrOutput)
}

// A service that allows server-side encryption to be used.
type EncryptionService struct {
	// A boolean indicating whether or not the service encrypts the data as it is stored.
	Enabled *bool `pulumi:"enabled"`
}

// EncryptionServiceInput is an input type that accepts EncryptionServiceArgs and EncryptionServiceOutput values.
// You can construct a concrete instance of `EncryptionServiceInput` via:
//
//          EncryptionServiceArgs{...}
type EncryptionServiceInput interface {
	pulumi.Input

	ToEncryptionServiceOutput() EncryptionServiceOutput
	ToEncryptionServiceOutputWithContext(context.Context) EncryptionServiceOutput
}

// A service that allows server-side encryption to be used.
type EncryptionServiceArgs struct {
	// A boolean indicating whether or not the service encrypts the data as it is stored.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (EncryptionServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionService)(nil)).Elem()
}

func (i EncryptionServiceArgs) ToEncryptionServiceOutput() EncryptionServiceOutput {
	return i.ToEncryptionServiceOutputWithContext(context.Background())
}

func (i EncryptionServiceArgs) ToEncryptionServiceOutputWithContext(ctx context.Context) EncryptionServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServiceOutput)
}

func (i EncryptionServiceArgs) ToEncryptionServicePtrOutput() EncryptionServicePtrOutput {
	return i.ToEncryptionServicePtrOutputWithContext(context.Background())
}

func (i EncryptionServiceArgs) ToEncryptionServicePtrOutputWithContext(ctx context.Context) EncryptionServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServiceOutput).ToEncryptionServicePtrOutputWithContext(ctx)
}

// EncryptionServicePtrInput is an input type that accepts EncryptionServiceArgs, EncryptionServicePtr and EncryptionServicePtrOutput values.
// You can construct a concrete instance of `EncryptionServicePtrInput` via:
//
//          EncryptionServiceArgs{...}
//
//  or:
//
//          nil
type EncryptionServicePtrInput interface {
	pulumi.Input

	ToEncryptionServicePtrOutput() EncryptionServicePtrOutput
	ToEncryptionServicePtrOutputWithContext(context.Context) EncryptionServicePtrOutput
}

type encryptionServicePtrType EncryptionServiceArgs

func EncryptionServicePtr(v *EncryptionServiceArgs) EncryptionServicePtrInput {
	return (*encryptionServicePtrType)(v)
}

func (*encryptionServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionService)(nil)).Elem()
}

func (i *encryptionServicePtrType) ToEncryptionServicePtrOutput() EncryptionServicePtrOutput {
	return i.ToEncryptionServicePtrOutputWithContext(context.Background())
}

func (i *encryptionServicePtrType) ToEncryptionServicePtrOutputWithContext(ctx context.Context) EncryptionServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServicePtrOutput)
}

// A service that allows server-side encryption to be used.
type EncryptionServiceOutput struct{ *pulumi.OutputState }

func (EncryptionServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionService)(nil)).Elem()
}

func (o EncryptionServiceOutput) ToEncryptionServiceOutput() EncryptionServiceOutput {
	return o
}

func (o EncryptionServiceOutput) ToEncryptionServiceOutputWithContext(ctx context.Context) EncryptionServiceOutput {
	return o
}

func (o EncryptionServiceOutput) ToEncryptionServicePtrOutput() EncryptionServicePtrOutput {
	return o.ToEncryptionServicePtrOutputWithContext(context.Background())
}

func (o EncryptionServiceOutput) ToEncryptionServicePtrOutputWithContext(ctx context.Context) EncryptionServicePtrOutput {
	return o.ApplyT(func(v EncryptionService) *EncryptionService {
		return &v
	}).(EncryptionServicePtrOutput)
}

// A boolean indicating whether or not the service encrypts the data as it is stored.
func (o EncryptionServiceOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EncryptionService) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type EncryptionServicePtrOutput struct{ *pulumi.OutputState }

func (EncryptionServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionService)(nil)).Elem()
}

func (o EncryptionServicePtrOutput) ToEncryptionServicePtrOutput() EncryptionServicePtrOutput {
	return o
}

func (o EncryptionServicePtrOutput) ToEncryptionServicePtrOutputWithContext(ctx context.Context) EncryptionServicePtrOutput {
	return o
}

func (o EncryptionServicePtrOutput) Elem() EncryptionServiceOutput {
	return o.ApplyT(func(v *EncryptionService) EncryptionService { return *v }).(EncryptionServiceOutput)
}

// A boolean indicating whether or not the service encrypts the data as it is stored.
func (o EncryptionServicePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionService) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A service that allows server-side encryption to be used.
type EncryptionServiceResponse struct {
	// A boolean indicating whether or not the service encrypts the data as it is stored.
	Enabled *bool `pulumi:"enabled"`
	// Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.
	LastEnabledTime string `pulumi:"lastEnabledTime"`
}

// EncryptionServiceResponseInput is an input type that accepts EncryptionServiceResponseArgs and EncryptionServiceResponseOutput values.
// You can construct a concrete instance of `EncryptionServiceResponseInput` via:
//
//          EncryptionServiceResponseArgs{...}
type EncryptionServiceResponseInput interface {
	pulumi.Input

	ToEncryptionServiceResponseOutput() EncryptionServiceResponseOutput
	ToEncryptionServiceResponseOutputWithContext(context.Context) EncryptionServiceResponseOutput
}

// A service that allows server-side encryption to be used.
type EncryptionServiceResponseArgs struct {
	// A boolean indicating whether or not the service encrypts the data as it is stored.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.
	LastEnabledTime pulumi.StringInput `pulumi:"lastEnabledTime"`
}

func (EncryptionServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionServiceResponse)(nil)).Elem()
}

func (i EncryptionServiceResponseArgs) ToEncryptionServiceResponseOutput() EncryptionServiceResponseOutput {
	return i.ToEncryptionServiceResponseOutputWithContext(context.Background())
}

func (i EncryptionServiceResponseArgs) ToEncryptionServiceResponseOutputWithContext(ctx context.Context) EncryptionServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServiceResponseOutput)
}

func (i EncryptionServiceResponseArgs) ToEncryptionServiceResponsePtrOutput() EncryptionServiceResponsePtrOutput {
	return i.ToEncryptionServiceResponsePtrOutputWithContext(context.Background())
}

func (i EncryptionServiceResponseArgs) ToEncryptionServiceResponsePtrOutputWithContext(ctx context.Context) EncryptionServiceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServiceResponseOutput).ToEncryptionServiceResponsePtrOutputWithContext(ctx)
}

// EncryptionServiceResponsePtrInput is an input type that accepts EncryptionServiceResponseArgs, EncryptionServiceResponsePtr and EncryptionServiceResponsePtrOutput values.
// You can construct a concrete instance of `EncryptionServiceResponsePtrInput` via:
//
//          EncryptionServiceResponseArgs{...}
//
//  or:
//
//          nil
type EncryptionServiceResponsePtrInput interface {
	pulumi.Input

	ToEncryptionServiceResponsePtrOutput() EncryptionServiceResponsePtrOutput
	ToEncryptionServiceResponsePtrOutputWithContext(context.Context) EncryptionServiceResponsePtrOutput
}

type encryptionServiceResponsePtrType EncryptionServiceResponseArgs

func EncryptionServiceResponsePtr(v *EncryptionServiceResponseArgs) EncryptionServiceResponsePtrInput {
	return (*encryptionServiceResponsePtrType)(v)
}

func (*encryptionServiceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionServiceResponse)(nil)).Elem()
}

func (i *encryptionServiceResponsePtrType) ToEncryptionServiceResponsePtrOutput() EncryptionServiceResponsePtrOutput {
	return i.ToEncryptionServiceResponsePtrOutputWithContext(context.Background())
}

func (i *encryptionServiceResponsePtrType) ToEncryptionServiceResponsePtrOutputWithContext(ctx context.Context) EncryptionServiceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServiceResponsePtrOutput)
}

// A service that allows server-side encryption to be used.
type EncryptionServiceResponseOutput struct{ *pulumi.OutputState }

func (EncryptionServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionServiceResponse)(nil)).Elem()
}

func (o EncryptionServiceResponseOutput) ToEncryptionServiceResponseOutput() EncryptionServiceResponseOutput {
	return o
}

func (o EncryptionServiceResponseOutput) ToEncryptionServiceResponseOutputWithContext(ctx context.Context) EncryptionServiceResponseOutput {
	return o
}

func (o EncryptionServiceResponseOutput) ToEncryptionServiceResponsePtrOutput() EncryptionServiceResponsePtrOutput {
	return o.ToEncryptionServiceResponsePtrOutputWithContext(context.Background())
}

func (o EncryptionServiceResponseOutput) ToEncryptionServiceResponsePtrOutputWithContext(ctx context.Context) EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v EncryptionServiceResponse) *EncryptionServiceResponse {
		return &v
	}).(EncryptionServiceResponsePtrOutput)
}

// A boolean indicating whether or not the service encrypts the data as it is stored.
func (o EncryptionServiceResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EncryptionServiceResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.
func (o EncryptionServiceResponseOutput) LastEnabledTime() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionServiceResponse) string { return v.LastEnabledTime }).(pulumi.StringOutput)
}

type EncryptionServiceResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionServiceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionServiceResponse)(nil)).Elem()
}

func (o EncryptionServiceResponsePtrOutput) ToEncryptionServiceResponsePtrOutput() EncryptionServiceResponsePtrOutput {
	return o
}

func (o EncryptionServiceResponsePtrOutput) ToEncryptionServiceResponsePtrOutputWithContext(ctx context.Context) EncryptionServiceResponsePtrOutput {
	return o
}

func (o EncryptionServiceResponsePtrOutput) Elem() EncryptionServiceResponseOutput {
	return o.ApplyT(func(v *EncryptionServiceResponse) EncryptionServiceResponse { return *v }).(EncryptionServiceResponseOutput)
}

// A boolean indicating whether or not the service encrypts the data as it is stored.
func (o EncryptionServiceResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionServiceResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.
func (o EncryptionServiceResponsePtrOutput) LastEnabledTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastEnabledTime
	}).(pulumi.StringPtrOutput)
}

// A list of services that support encryption.
type EncryptionServices struct {
	// The encryption function of the blob storage service.
	Blob *EncryptionService `pulumi:"blob"`
	// The encryption function of the file storage service.
	File *EncryptionService `pulumi:"file"`
}

// EncryptionServicesInput is an input type that accepts EncryptionServicesArgs and EncryptionServicesOutput values.
// You can construct a concrete instance of `EncryptionServicesInput` via:
//
//          EncryptionServicesArgs{...}
type EncryptionServicesInput interface {
	pulumi.Input

	ToEncryptionServicesOutput() EncryptionServicesOutput
	ToEncryptionServicesOutputWithContext(context.Context) EncryptionServicesOutput
}

// A list of services that support encryption.
type EncryptionServicesArgs struct {
	// The encryption function of the blob storage service.
	Blob EncryptionServicePtrInput `pulumi:"blob"`
	// The encryption function of the file storage service.
	File EncryptionServicePtrInput `pulumi:"file"`
}

func (EncryptionServicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionServices)(nil)).Elem()
}

func (i EncryptionServicesArgs) ToEncryptionServicesOutput() EncryptionServicesOutput {
	return i.ToEncryptionServicesOutputWithContext(context.Background())
}

func (i EncryptionServicesArgs) ToEncryptionServicesOutputWithContext(ctx context.Context) EncryptionServicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServicesOutput)
}

func (i EncryptionServicesArgs) ToEncryptionServicesPtrOutput() EncryptionServicesPtrOutput {
	return i.ToEncryptionServicesPtrOutputWithContext(context.Background())
}

func (i EncryptionServicesArgs) ToEncryptionServicesPtrOutputWithContext(ctx context.Context) EncryptionServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServicesOutput).ToEncryptionServicesPtrOutputWithContext(ctx)
}

// EncryptionServicesPtrInput is an input type that accepts EncryptionServicesArgs, EncryptionServicesPtr and EncryptionServicesPtrOutput values.
// You can construct a concrete instance of `EncryptionServicesPtrInput` via:
//
//          EncryptionServicesArgs{...}
//
//  or:
//
//          nil
type EncryptionServicesPtrInput interface {
	pulumi.Input

	ToEncryptionServicesPtrOutput() EncryptionServicesPtrOutput
	ToEncryptionServicesPtrOutputWithContext(context.Context) EncryptionServicesPtrOutput
}

type encryptionServicesPtrType EncryptionServicesArgs

func EncryptionServicesPtr(v *EncryptionServicesArgs) EncryptionServicesPtrInput {
	return (*encryptionServicesPtrType)(v)
}

func (*encryptionServicesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionServices)(nil)).Elem()
}

func (i *encryptionServicesPtrType) ToEncryptionServicesPtrOutput() EncryptionServicesPtrOutput {
	return i.ToEncryptionServicesPtrOutputWithContext(context.Background())
}

func (i *encryptionServicesPtrType) ToEncryptionServicesPtrOutputWithContext(ctx context.Context) EncryptionServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServicesPtrOutput)
}

// A list of services that support encryption.
type EncryptionServicesOutput struct{ *pulumi.OutputState }

func (EncryptionServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionServices)(nil)).Elem()
}

func (o EncryptionServicesOutput) ToEncryptionServicesOutput() EncryptionServicesOutput {
	return o
}

func (o EncryptionServicesOutput) ToEncryptionServicesOutputWithContext(ctx context.Context) EncryptionServicesOutput {
	return o
}

func (o EncryptionServicesOutput) ToEncryptionServicesPtrOutput() EncryptionServicesPtrOutput {
	return o.ToEncryptionServicesPtrOutputWithContext(context.Background())
}

func (o EncryptionServicesOutput) ToEncryptionServicesPtrOutputWithContext(ctx context.Context) EncryptionServicesPtrOutput {
	return o.ApplyT(func(v EncryptionServices) *EncryptionServices {
		return &v
	}).(EncryptionServicesPtrOutput)
}

// The encryption function of the blob storage service.
func (o EncryptionServicesOutput) Blob() EncryptionServicePtrOutput {
	return o.ApplyT(func(v EncryptionServices) *EncryptionService { return v.Blob }).(EncryptionServicePtrOutput)
}

// The encryption function of the file storage service.
func (o EncryptionServicesOutput) File() EncryptionServicePtrOutput {
	return o.ApplyT(func(v EncryptionServices) *EncryptionService { return v.File }).(EncryptionServicePtrOutput)
}

type EncryptionServicesPtrOutput struct{ *pulumi.OutputState }

func (EncryptionServicesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionServices)(nil)).Elem()
}

func (o EncryptionServicesPtrOutput) ToEncryptionServicesPtrOutput() EncryptionServicesPtrOutput {
	return o
}

func (o EncryptionServicesPtrOutput) ToEncryptionServicesPtrOutputWithContext(ctx context.Context) EncryptionServicesPtrOutput {
	return o
}

func (o EncryptionServicesPtrOutput) Elem() EncryptionServicesOutput {
	return o.ApplyT(func(v *EncryptionServices) EncryptionServices { return *v }).(EncryptionServicesOutput)
}

// The encryption function of the blob storage service.
func (o EncryptionServicesPtrOutput) Blob() EncryptionServicePtrOutput {
	return o.ApplyT(func(v *EncryptionServices) *EncryptionService {
		if v == nil {
			return nil
		}
		return v.Blob
	}).(EncryptionServicePtrOutput)
}

// The encryption function of the file storage service.
func (o EncryptionServicesPtrOutput) File() EncryptionServicePtrOutput {
	return o.ApplyT(func(v *EncryptionServices) *EncryptionService {
		if v == nil {
			return nil
		}
		return v.File
	}).(EncryptionServicePtrOutput)
}

// A list of services that support encryption.
type EncryptionServicesResponse struct {
	// The encryption function of the blob storage service.
	Blob *EncryptionServiceResponse `pulumi:"blob"`
	// The encryption function of the file storage service.
	File *EncryptionServiceResponse `pulumi:"file"`
	// The encryption function of the queue storage service.
	Queue EncryptionServiceResponse `pulumi:"queue"`
	// The encryption function of the table storage service.
	Table EncryptionServiceResponse `pulumi:"table"`
}

// EncryptionServicesResponseInput is an input type that accepts EncryptionServicesResponseArgs and EncryptionServicesResponseOutput values.
// You can construct a concrete instance of `EncryptionServicesResponseInput` via:
//
//          EncryptionServicesResponseArgs{...}
type EncryptionServicesResponseInput interface {
	pulumi.Input

	ToEncryptionServicesResponseOutput() EncryptionServicesResponseOutput
	ToEncryptionServicesResponseOutputWithContext(context.Context) EncryptionServicesResponseOutput
}

// A list of services that support encryption.
type EncryptionServicesResponseArgs struct {
	// The encryption function of the blob storage service.
	Blob EncryptionServiceResponsePtrInput `pulumi:"blob"`
	// The encryption function of the file storage service.
	File EncryptionServiceResponsePtrInput `pulumi:"file"`
	// The encryption function of the queue storage service.
	Queue EncryptionServiceResponseInput `pulumi:"queue"`
	// The encryption function of the table storage service.
	Table EncryptionServiceResponseInput `pulumi:"table"`
}

func (EncryptionServicesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionServicesResponse)(nil)).Elem()
}

func (i EncryptionServicesResponseArgs) ToEncryptionServicesResponseOutput() EncryptionServicesResponseOutput {
	return i.ToEncryptionServicesResponseOutputWithContext(context.Background())
}

func (i EncryptionServicesResponseArgs) ToEncryptionServicesResponseOutputWithContext(ctx context.Context) EncryptionServicesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServicesResponseOutput)
}

func (i EncryptionServicesResponseArgs) ToEncryptionServicesResponsePtrOutput() EncryptionServicesResponsePtrOutput {
	return i.ToEncryptionServicesResponsePtrOutputWithContext(context.Background())
}

func (i EncryptionServicesResponseArgs) ToEncryptionServicesResponsePtrOutputWithContext(ctx context.Context) EncryptionServicesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServicesResponseOutput).ToEncryptionServicesResponsePtrOutputWithContext(ctx)
}

// EncryptionServicesResponsePtrInput is an input type that accepts EncryptionServicesResponseArgs, EncryptionServicesResponsePtr and EncryptionServicesResponsePtrOutput values.
// You can construct a concrete instance of `EncryptionServicesResponsePtrInput` via:
//
//          EncryptionServicesResponseArgs{...}
//
//  or:
//
//          nil
type EncryptionServicesResponsePtrInput interface {
	pulumi.Input

	ToEncryptionServicesResponsePtrOutput() EncryptionServicesResponsePtrOutput
	ToEncryptionServicesResponsePtrOutputWithContext(context.Context) EncryptionServicesResponsePtrOutput
}

type encryptionServicesResponsePtrType EncryptionServicesResponseArgs

func EncryptionServicesResponsePtr(v *EncryptionServicesResponseArgs) EncryptionServicesResponsePtrInput {
	return (*encryptionServicesResponsePtrType)(v)
}

func (*encryptionServicesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionServicesResponse)(nil)).Elem()
}

func (i *encryptionServicesResponsePtrType) ToEncryptionServicesResponsePtrOutput() EncryptionServicesResponsePtrOutput {
	return i.ToEncryptionServicesResponsePtrOutputWithContext(context.Background())
}

func (i *encryptionServicesResponsePtrType) ToEncryptionServicesResponsePtrOutputWithContext(ctx context.Context) EncryptionServicesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServicesResponsePtrOutput)
}

// A list of services that support encryption.
type EncryptionServicesResponseOutput struct{ *pulumi.OutputState }

func (EncryptionServicesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionServicesResponse)(nil)).Elem()
}

func (o EncryptionServicesResponseOutput) ToEncryptionServicesResponseOutput() EncryptionServicesResponseOutput {
	return o
}

func (o EncryptionServicesResponseOutput) ToEncryptionServicesResponseOutputWithContext(ctx context.Context) EncryptionServicesResponseOutput {
	return o
}

func (o EncryptionServicesResponseOutput) ToEncryptionServicesResponsePtrOutput() EncryptionServicesResponsePtrOutput {
	return o.ToEncryptionServicesResponsePtrOutputWithContext(context.Background())
}

func (o EncryptionServicesResponseOutput) ToEncryptionServicesResponsePtrOutputWithContext(ctx context.Context) EncryptionServicesResponsePtrOutput {
	return o.ApplyT(func(v EncryptionServicesResponse) *EncryptionServicesResponse {
		return &v
	}).(EncryptionServicesResponsePtrOutput)
}

// The encryption function of the blob storage service.
func (o EncryptionServicesResponseOutput) Blob() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v EncryptionServicesResponse) *EncryptionServiceResponse { return v.Blob }).(EncryptionServiceResponsePtrOutput)
}

// The encryption function of the file storage service.
func (o EncryptionServicesResponseOutput) File() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v EncryptionServicesResponse) *EncryptionServiceResponse { return v.File }).(EncryptionServiceResponsePtrOutput)
}

// The encryption function of the queue storage service.
func (o EncryptionServicesResponseOutput) Queue() EncryptionServiceResponseOutput {
	return o.ApplyT(func(v EncryptionServicesResponse) EncryptionServiceResponse { return v.Queue }).(EncryptionServiceResponseOutput)
}

// The encryption function of the table storage service.
func (o EncryptionServicesResponseOutput) Table() EncryptionServiceResponseOutput {
	return o.ApplyT(func(v EncryptionServicesResponse) EncryptionServiceResponse { return v.Table }).(EncryptionServiceResponseOutput)
}

type EncryptionServicesResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionServicesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionServicesResponse)(nil)).Elem()
}

func (o EncryptionServicesResponsePtrOutput) ToEncryptionServicesResponsePtrOutput() EncryptionServicesResponsePtrOutput {
	return o
}

func (o EncryptionServicesResponsePtrOutput) ToEncryptionServicesResponsePtrOutputWithContext(ctx context.Context) EncryptionServicesResponsePtrOutput {
	return o
}

func (o EncryptionServicesResponsePtrOutput) Elem() EncryptionServicesResponseOutput {
	return o.ApplyT(func(v *EncryptionServicesResponse) EncryptionServicesResponse { return *v }).(EncryptionServicesResponseOutput)
}

// The encryption function of the blob storage service.
func (o EncryptionServicesResponsePtrOutput) Blob() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionServicesResponse) *EncryptionServiceResponse {
		if v == nil {
			return nil
		}
		return v.Blob
	}).(EncryptionServiceResponsePtrOutput)
}

// The encryption function of the file storage service.
func (o EncryptionServicesResponsePtrOutput) File() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionServicesResponse) *EncryptionServiceResponse {
		if v == nil {
			return nil
		}
		return v.File
	}).(EncryptionServiceResponsePtrOutput)
}

// The encryption function of the queue storage service.
func (o EncryptionServicesResponsePtrOutput) Queue() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionServicesResponse) *EncryptionServiceResponse {
		if v == nil {
			return nil
		}
		return &v.Queue
	}).(EncryptionServiceResponsePtrOutput)
}

// The encryption function of the table storage service.
func (o EncryptionServicesResponsePtrOutput) Table() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionServicesResponse) *EncryptionServiceResponse {
		if v == nil {
			return nil
		}
		return &v.Table
	}).(EncryptionServiceResponsePtrOutput)
}

// The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.
type EndpointsResponse struct {
	// Gets the blob endpoint.
	Blob string `pulumi:"blob"`
	// Gets the dfs endpoint.
	Dfs string `pulumi:"dfs"`
	// Gets the file endpoint.
	File string `pulumi:"file"`
	// Gets the queue endpoint.
	Queue string `pulumi:"queue"`
	// Gets the table endpoint.
	Table string `pulumi:"table"`
	// Gets the web endpoint.
	Web string `pulumi:"web"`
}

// EndpointsResponseInput is an input type that accepts EndpointsResponseArgs and EndpointsResponseOutput values.
// You can construct a concrete instance of `EndpointsResponseInput` via:
//
//          EndpointsResponseArgs{...}
type EndpointsResponseInput interface {
	pulumi.Input

	ToEndpointsResponseOutput() EndpointsResponseOutput
	ToEndpointsResponseOutputWithContext(context.Context) EndpointsResponseOutput
}

// The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.
type EndpointsResponseArgs struct {
	// Gets the blob endpoint.
	Blob pulumi.StringInput `pulumi:"blob"`
	// Gets the dfs endpoint.
	Dfs pulumi.StringInput `pulumi:"dfs"`
	// Gets the file endpoint.
	File pulumi.StringInput `pulumi:"file"`
	// Gets the queue endpoint.
	Queue pulumi.StringInput `pulumi:"queue"`
	// Gets the table endpoint.
	Table pulumi.StringInput `pulumi:"table"`
	// Gets the web endpoint.
	Web pulumi.StringInput `pulumi:"web"`
}

func (EndpointsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointsResponse)(nil)).Elem()
}

func (i EndpointsResponseArgs) ToEndpointsResponseOutput() EndpointsResponseOutput {
	return i.ToEndpointsResponseOutputWithContext(context.Background())
}

func (i EndpointsResponseArgs) ToEndpointsResponseOutputWithContext(ctx context.Context) EndpointsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsResponseOutput)
}

func (i EndpointsResponseArgs) ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput {
	return i.ToEndpointsResponsePtrOutputWithContext(context.Background())
}

func (i EndpointsResponseArgs) ToEndpointsResponsePtrOutputWithContext(ctx context.Context) EndpointsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsResponseOutput).ToEndpointsResponsePtrOutputWithContext(ctx)
}

// EndpointsResponsePtrInput is an input type that accepts EndpointsResponseArgs, EndpointsResponsePtr and EndpointsResponsePtrOutput values.
// You can construct a concrete instance of `EndpointsResponsePtrInput` via:
//
//          EndpointsResponseArgs{...}
//
//  or:
//
//          nil
type EndpointsResponsePtrInput interface {
	pulumi.Input

	ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput
	ToEndpointsResponsePtrOutputWithContext(context.Context) EndpointsResponsePtrOutput
}

type endpointsResponsePtrType EndpointsResponseArgs

func EndpointsResponsePtr(v *EndpointsResponseArgs) EndpointsResponsePtrInput {
	return (*endpointsResponsePtrType)(v)
}

func (*endpointsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointsResponse)(nil)).Elem()
}

func (i *endpointsResponsePtrType) ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput {
	return i.ToEndpointsResponsePtrOutputWithContext(context.Background())
}

func (i *endpointsResponsePtrType) ToEndpointsResponsePtrOutputWithContext(ctx context.Context) EndpointsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsResponsePtrOutput)
}

// The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.
type EndpointsResponseOutput struct{ *pulumi.OutputState }

func (EndpointsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointsResponse)(nil)).Elem()
}

func (o EndpointsResponseOutput) ToEndpointsResponseOutput() EndpointsResponseOutput {
	return o
}

func (o EndpointsResponseOutput) ToEndpointsResponseOutputWithContext(ctx context.Context) EndpointsResponseOutput {
	return o
}

func (o EndpointsResponseOutput) ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput {
	return o.ToEndpointsResponsePtrOutputWithContext(context.Background())
}

func (o EndpointsResponseOutput) ToEndpointsResponsePtrOutputWithContext(ctx context.Context) EndpointsResponsePtrOutput {
	return o.ApplyT(func(v EndpointsResponse) *EndpointsResponse {
		return &v
	}).(EndpointsResponsePtrOutput)
}

// Gets the blob endpoint.
func (o EndpointsResponseOutput) Blob() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Blob }).(pulumi.StringOutput)
}

// Gets the dfs endpoint.
func (o EndpointsResponseOutput) Dfs() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Dfs }).(pulumi.StringOutput)
}

// Gets the file endpoint.
func (o EndpointsResponseOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.File }).(pulumi.StringOutput)
}

// Gets the queue endpoint.
func (o EndpointsResponseOutput) Queue() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Queue }).(pulumi.StringOutput)
}

// Gets the table endpoint.
func (o EndpointsResponseOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Table }).(pulumi.StringOutput)
}

// Gets the web endpoint.
func (o EndpointsResponseOutput) Web() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Web }).(pulumi.StringOutput)
}

type EndpointsResponsePtrOutput struct{ *pulumi.OutputState }

func (EndpointsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointsResponse)(nil)).Elem()
}

func (o EndpointsResponsePtrOutput) ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput {
	return o
}

func (o EndpointsResponsePtrOutput) ToEndpointsResponsePtrOutputWithContext(ctx context.Context) EndpointsResponsePtrOutput {
	return o
}

func (o EndpointsResponsePtrOutput) Elem() EndpointsResponseOutput {
	return o.ApplyT(func(v *EndpointsResponse) EndpointsResponse { return *v }).(EndpointsResponseOutput)
}

// Gets the blob endpoint.
func (o EndpointsResponsePtrOutput) Blob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Blob
	}).(pulumi.StringPtrOutput)
}

// Gets the dfs endpoint.
func (o EndpointsResponsePtrOutput) Dfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Dfs
	}).(pulumi.StringPtrOutput)
}

// Gets the file endpoint.
func (o EndpointsResponsePtrOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.File
	}).(pulumi.StringPtrOutput)
}

// Gets the queue endpoint.
func (o EndpointsResponsePtrOutput) Queue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Queue
	}).(pulumi.StringPtrOutput)
}

// Gets the table endpoint.
func (o EndpointsResponsePtrOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Table
	}).(pulumi.StringPtrOutput)
}

// Gets the web endpoint.
func (o EndpointsResponsePtrOutput) Web() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Web
	}).(pulumi.StringPtrOutput)
}

// Statistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account.
type GeoReplicationStatsResponse struct {
	// A boolean flag which indicates whether or not account failover is supported for the account.
	CanFailover bool `pulumi:"canFailover"`
	// All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
	LastSyncTime string `pulumi:"lastSyncTime"`
	// The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.
	Status string `pulumi:"status"`
}

// GeoReplicationStatsResponseInput is an input type that accepts GeoReplicationStatsResponseArgs and GeoReplicationStatsResponseOutput values.
// You can construct a concrete instance of `GeoReplicationStatsResponseInput` via:
//
//          GeoReplicationStatsResponseArgs{...}
type GeoReplicationStatsResponseInput interface {
	pulumi.Input

	ToGeoReplicationStatsResponseOutput() GeoReplicationStatsResponseOutput
	ToGeoReplicationStatsResponseOutputWithContext(context.Context) GeoReplicationStatsResponseOutput
}

// Statistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account.
type GeoReplicationStatsResponseArgs struct {
	// A boolean flag which indicates whether or not account failover is supported for the account.
	CanFailover pulumi.BoolInput `pulumi:"canFailover"`
	// All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
	LastSyncTime pulumi.StringInput `pulumi:"lastSyncTime"`
	// The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GeoReplicationStatsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoReplicationStatsResponse)(nil)).Elem()
}

func (i GeoReplicationStatsResponseArgs) ToGeoReplicationStatsResponseOutput() GeoReplicationStatsResponseOutput {
	return i.ToGeoReplicationStatsResponseOutputWithContext(context.Background())
}

func (i GeoReplicationStatsResponseArgs) ToGeoReplicationStatsResponseOutputWithContext(ctx context.Context) GeoReplicationStatsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoReplicationStatsResponseOutput)
}

func (i GeoReplicationStatsResponseArgs) ToGeoReplicationStatsResponsePtrOutput() GeoReplicationStatsResponsePtrOutput {
	return i.ToGeoReplicationStatsResponsePtrOutputWithContext(context.Background())
}

func (i GeoReplicationStatsResponseArgs) ToGeoReplicationStatsResponsePtrOutputWithContext(ctx context.Context) GeoReplicationStatsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoReplicationStatsResponseOutput).ToGeoReplicationStatsResponsePtrOutputWithContext(ctx)
}

// GeoReplicationStatsResponsePtrInput is an input type that accepts GeoReplicationStatsResponseArgs, GeoReplicationStatsResponsePtr and GeoReplicationStatsResponsePtrOutput values.
// You can construct a concrete instance of `GeoReplicationStatsResponsePtrInput` via:
//
//          GeoReplicationStatsResponseArgs{...}
//
//  or:
//
//          nil
type GeoReplicationStatsResponsePtrInput interface {
	pulumi.Input

	ToGeoReplicationStatsResponsePtrOutput() GeoReplicationStatsResponsePtrOutput
	ToGeoReplicationStatsResponsePtrOutputWithContext(context.Context) GeoReplicationStatsResponsePtrOutput
}

type geoReplicationStatsResponsePtrType GeoReplicationStatsResponseArgs

func GeoReplicationStatsResponsePtr(v *GeoReplicationStatsResponseArgs) GeoReplicationStatsResponsePtrInput {
	return (*geoReplicationStatsResponsePtrType)(v)
}

func (*geoReplicationStatsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GeoReplicationStatsResponse)(nil)).Elem()
}

func (i *geoReplicationStatsResponsePtrType) ToGeoReplicationStatsResponsePtrOutput() GeoReplicationStatsResponsePtrOutput {
	return i.ToGeoReplicationStatsResponsePtrOutputWithContext(context.Background())
}

func (i *geoReplicationStatsResponsePtrType) ToGeoReplicationStatsResponsePtrOutputWithContext(ctx context.Context) GeoReplicationStatsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoReplicationStatsResponsePtrOutput)
}

// Statistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account.
type GeoReplicationStatsResponseOutput struct{ *pulumi.OutputState }

func (GeoReplicationStatsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoReplicationStatsResponse)(nil)).Elem()
}

func (o GeoReplicationStatsResponseOutput) ToGeoReplicationStatsResponseOutput() GeoReplicationStatsResponseOutput {
	return o
}

func (o GeoReplicationStatsResponseOutput) ToGeoReplicationStatsResponseOutputWithContext(ctx context.Context) GeoReplicationStatsResponseOutput {
	return o
}

func (o GeoReplicationStatsResponseOutput) ToGeoReplicationStatsResponsePtrOutput() GeoReplicationStatsResponsePtrOutput {
	return o.ToGeoReplicationStatsResponsePtrOutputWithContext(context.Background())
}

func (o GeoReplicationStatsResponseOutput) ToGeoReplicationStatsResponsePtrOutputWithContext(ctx context.Context) GeoReplicationStatsResponsePtrOutput {
	return o.ApplyT(func(v GeoReplicationStatsResponse) *GeoReplicationStatsResponse {
		return &v
	}).(GeoReplicationStatsResponsePtrOutput)
}

// A boolean flag which indicates whether or not account failover is supported for the account.
func (o GeoReplicationStatsResponseOutput) CanFailover() pulumi.BoolOutput {
	return o.ApplyT(func(v GeoReplicationStatsResponse) bool { return v.CanFailover }).(pulumi.BoolOutput)
}

// All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
func (o GeoReplicationStatsResponseOutput) LastSyncTime() pulumi.StringOutput {
	return o.ApplyT(func(v GeoReplicationStatsResponse) string { return v.LastSyncTime }).(pulumi.StringOutput)
}

// The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.
func (o GeoReplicationStatsResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GeoReplicationStatsResponse) string { return v.Status }).(pulumi.StringOutput)
}

type GeoReplicationStatsResponsePtrOutput struct{ *pulumi.OutputState }

func (GeoReplicationStatsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GeoReplicationStatsResponse)(nil)).Elem()
}

func (o GeoReplicationStatsResponsePtrOutput) ToGeoReplicationStatsResponsePtrOutput() GeoReplicationStatsResponsePtrOutput {
	return o
}

func (o GeoReplicationStatsResponsePtrOutput) ToGeoReplicationStatsResponsePtrOutputWithContext(ctx context.Context) GeoReplicationStatsResponsePtrOutput {
	return o
}

func (o GeoReplicationStatsResponsePtrOutput) Elem() GeoReplicationStatsResponseOutput {
	return o.ApplyT(func(v *GeoReplicationStatsResponse) GeoReplicationStatsResponse { return *v }).(GeoReplicationStatsResponseOutput)
}

// A boolean flag which indicates whether or not account failover is supported for the account.
func (o GeoReplicationStatsResponsePtrOutput) CanFailover() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GeoReplicationStatsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CanFailover
	}).(pulumi.BoolPtrOutput)
}

// All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
func (o GeoReplicationStatsResponsePtrOutput) LastSyncTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeoReplicationStatsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastSyncTime
	}).(pulumi.StringPtrOutput)
}

// The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.
func (o GeoReplicationStatsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GeoReplicationStatsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRule struct {
	// The action of IP ACL rule.
	Action *string `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	IPAddressOrRange string `pulumi:"iPAddressOrRange"`
}

// IPRuleInput is an input type that accepts IPRuleArgs and IPRuleOutput values.
// You can construct a concrete instance of `IPRuleInput` via:
//
//          IPRuleArgs{...}
type IPRuleInput interface {
	pulumi.Input

	ToIPRuleOutput() IPRuleOutput
	ToIPRuleOutputWithContext(context.Context) IPRuleOutput
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleArgs struct {
	// The action of IP ACL rule.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	IPAddressOrRange pulumi.StringInput `pulumi:"iPAddressOrRange"`
}

func (IPRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRule)(nil)).Elem()
}

func (i IPRuleArgs) ToIPRuleOutput() IPRuleOutput {
	return i.ToIPRuleOutputWithContext(context.Background())
}

func (i IPRuleArgs) ToIPRuleOutputWithContext(ctx context.Context) IPRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleOutput)
}

// IPRuleArrayInput is an input type that accepts IPRuleArray and IPRuleArrayOutput values.
// You can construct a concrete instance of `IPRuleArrayInput` via:
//
//          IPRuleArray{ IPRuleArgs{...} }
type IPRuleArrayInput interface {
	pulumi.Input

	ToIPRuleArrayOutput() IPRuleArrayOutput
	ToIPRuleArrayOutputWithContext(context.Context) IPRuleArrayOutput
}

type IPRuleArray []IPRuleInput

func (IPRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRule)(nil)).Elem()
}

func (i IPRuleArray) ToIPRuleArrayOutput() IPRuleArrayOutput {
	return i.ToIPRuleArrayOutputWithContext(context.Background())
}

func (i IPRuleArray) ToIPRuleArrayOutputWithContext(ctx context.Context) IPRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleArrayOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleOutput struct{ *pulumi.OutputState }

func (IPRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRule)(nil)).Elem()
}

func (o IPRuleOutput) ToIPRuleOutput() IPRuleOutput {
	return o
}

func (o IPRuleOutput) ToIPRuleOutputWithContext(ctx context.Context) IPRuleOutput {
	return o
}

// The action of IP ACL rule.
func (o IPRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
func (o IPRuleOutput) IPAddressOrRange() pulumi.StringOutput {
	return o.ApplyT(func(v IPRule) string { return v.IPAddressOrRange }).(pulumi.StringOutput)
}

type IPRuleArrayOutput struct{ *pulumi.OutputState }

func (IPRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRule)(nil)).Elem()
}

func (o IPRuleArrayOutput) ToIPRuleArrayOutput() IPRuleArrayOutput {
	return o
}

func (o IPRuleArrayOutput) ToIPRuleArrayOutputWithContext(ctx context.Context) IPRuleArrayOutput {
	return o
}

func (o IPRuleArrayOutput) Index(i pulumi.IntInput) IPRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPRule {
		return vs[0].([]IPRule)[vs[1].(int)]
	}).(IPRuleOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleResponse struct {
	// The action of IP ACL rule.
	Action *string `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	IPAddressOrRange string `pulumi:"iPAddressOrRange"`
}

// IPRuleResponseInput is an input type that accepts IPRuleResponseArgs and IPRuleResponseOutput values.
// You can construct a concrete instance of `IPRuleResponseInput` via:
//
//          IPRuleResponseArgs{...}
type IPRuleResponseInput interface {
	pulumi.Input

	ToIPRuleResponseOutput() IPRuleResponseOutput
	ToIPRuleResponseOutputWithContext(context.Context) IPRuleResponseOutput
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleResponseArgs struct {
	// The action of IP ACL rule.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	IPAddressOrRange pulumi.StringInput `pulumi:"iPAddressOrRange"`
}

func (IPRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRuleResponse)(nil)).Elem()
}

func (i IPRuleResponseArgs) ToIPRuleResponseOutput() IPRuleResponseOutput {
	return i.ToIPRuleResponseOutputWithContext(context.Background())
}

func (i IPRuleResponseArgs) ToIPRuleResponseOutputWithContext(ctx context.Context) IPRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleResponseOutput)
}

// IPRuleResponseArrayInput is an input type that accepts IPRuleResponseArray and IPRuleResponseArrayOutput values.
// You can construct a concrete instance of `IPRuleResponseArrayInput` via:
//
//          IPRuleResponseArray{ IPRuleResponseArgs{...} }
type IPRuleResponseArrayInput interface {
	pulumi.Input

	ToIPRuleResponseArrayOutput() IPRuleResponseArrayOutput
	ToIPRuleResponseArrayOutputWithContext(context.Context) IPRuleResponseArrayOutput
}

type IPRuleResponseArray []IPRuleResponseInput

func (IPRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRuleResponse)(nil)).Elem()
}

func (i IPRuleResponseArray) ToIPRuleResponseArrayOutput() IPRuleResponseArrayOutput {
	return i.ToIPRuleResponseArrayOutputWithContext(context.Background())
}

func (i IPRuleResponseArray) ToIPRuleResponseArrayOutputWithContext(ctx context.Context) IPRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleResponseArrayOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleResponseOutput struct{ *pulumi.OutputState }

func (IPRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRuleResponse)(nil)).Elem()
}

func (o IPRuleResponseOutput) ToIPRuleResponseOutput() IPRuleResponseOutput {
	return o
}

func (o IPRuleResponseOutput) ToIPRuleResponseOutputWithContext(ctx context.Context) IPRuleResponseOutput {
	return o
}

// The action of IP ACL rule.
func (o IPRuleResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPRuleResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
func (o IPRuleResponseOutput) IPAddressOrRange() pulumi.StringOutput {
	return o.ApplyT(func(v IPRuleResponse) string { return v.IPAddressOrRange }).(pulumi.StringOutput)
}

type IPRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (IPRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRuleResponse)(nil)).Elem()
}

func (o IPRuleResponseArrayOutput) ToIPRuleResponseArrayOutput() IPRuleResponseArrayOutput {
	return o
}

func (o IPRuleResponseArrayOutput) ToIPRuleResponseArrayOutputWithContext(ctx context.Context) IPRuleResponseArrayOutput {
	return o
}

func (o IPRuleResponseArrayOutput) Index(i pulumi.IntInput) IPRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPRuleResponse {
		return vs[0].([]IPRuleResponse)[vs[1].(int)]
	}).(IPRuleResponseOutput)
}

// Identity for the resource.
type Identity struct {
	// The identity type.
	Type string `pulumi:"type"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//          IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Identity for the resource.
type IdentityArgs struct {
	// The identity type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//          IdentityArgs{...}
//
//  or:
//
//          nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Identity for the resource.
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyT(func(v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

// The identity type.
func (o IdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v Identity) string { return v.Type }).(pulumi.StringOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity { return *v }).(IdentityOutput)
}

// The identity type.
func (o IdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type IdentityResponse struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// The identity type.
	Type string `pulumi:"type"`
}

// IdentityResponseInput is an input type that accepts IdentityResponseArgs and IdentityResponseOutput values.
// You can construct a concrete instance of `IdentityResponseInput` via:
//
//          IdentityResponseArgs{...}
type IdentityResponseInput interface {
	pulumi.Input

	ToIdentityResponseOutput() IdentityResponseOutput
	ToIdentityResponseOutputWithContext(context.Context) IdentityResponseOutput
}

// Identity for the resource.
type IdentityResponseArgs struct {
	// The principal ID of resource identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The identity type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (i IdentityResponseArgs) ToIdentityResponseOutput() IdentityResponseOutput {
	return i.ToIdentityResponseOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput)
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput).ToIdentityResponsePtrOutputWithContext(ctx)
}

// IdentityResponsePtrInput is an input type that accepts IdentityResponseArgs, IdentityResponsePtr and IdentityResponsePtrOutput values.
// You can construct a concrete instance of `IdentityResponsePtrInput` via:
//
//          IdentityResponseArgs{...}
//
//  or:
//
//          nil
type IdentityResponsePtrInput interface {
	pulumi.Input

	ToIdentityResponsePtrOutput() IdentityResponsePtrOutput
	ToIdentityResponsePtrOutputWithContext(context.Context) IdentityResponsePtrOutput
}

type identityResponsePtrType IdentityResponseArgs

func IdentityResponsePtr(v *IdentityResponseArgs) IdentityResponsePtrInput {
	return (*identityResponsePtrType)(v)
}

func (*identityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponsePtrOutput)
}

// Identity for the resource.
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o.ApplyT(func(v IdentityResponse) *IdentityResponse {
		return &v
	}).(IdentityResponsePtrOutput)
}

// The principal ID of resource identity.
func (o IdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o IdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type.
func (o IdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse { return *v }).(IdentityResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The properties of an ImmutabilityPolicy of a blob container.
type ImmutabilityPolicyPropertiesResponse struct {
	// ImmutabilityPolicy Etag.
	Etag string `pulumi:"etag"`
	// The immutability period for the blobs in the container since the policy creation, in days.
	ImmutabilityPeriodSinceCreationInDays int `pulumi:"immutabilityPeriodSinceCreationInDays"`
	// The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
	State string `pulumi:"state"`
	// The ImmutabilityPolicy update history of the blob container.
	UpdateHistory []UpdateHistoryPropertyResponse `pulumi:"updateHistory"`
}

// ImmutabilityPolicyPropertiesResponseInput is an input type that accepts ImmutabilityPolicyPropertiesResponseArgs and ImmutabilityPolicyPropertiesResponseOutput values.
// You can construct a concrete instance of `ImmutabilityPolicyPropertiesResponseInput` via:
//
//          ImmutabilityPolicyPropertiesResponseArgs{...}
type ImmutabilityPolicyPropertiesResponseInput interface {
	pulumi.Input

	ToImmutabilityPolicyPropertiesResponseOutput() ImmutabilityPolicyPropertiesResponseOutput
	ToImmutabilityPolicyPropertiesResponseOutputWithContext(context.Context) ImmutabilityPolicyPropertiesResponseOutput
}

// The properties of an ImmutabilityPolicy of a blob container.
type ImmutabilityPolicyPropertiesResponseArgs struct {
	// ImmutabilityPolicy Etag.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The immutability period for the blobs in the container since the policy creation, in days.
	ImmutabilityPeriodSinceCreationInDays pulumi.IntInput `pulumi:"immutabilityPeriodSinceCreationInDays"`
	// The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
	State pulumi.StringInput `pulumi:"state"`
	// The ImmutabilityPolicy update history of the blob container.
	UpdateHistory UpdateHistoryPropertyResponseArrayInput `pulumi:"updateHistory"`
}

func (ImmutabilityPolicyPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilityPolicyPropertiesResponse)(nil)).Elem()
}

func (i ImmutabilityPolicyPropertiesResponseArgs) ToImmutabilityPolicyPropertiesResponseOutput() ImmutabilityPolicyPropertiesResponseOutput {
	return i.ToImmutabilityPolicyPropertiesResponseOutputWithContext(context.Background())
}

func (i ImmutabilityPolicyPropertiesResponseArgs) ToImmutabilityPolicyPropertiesResponseOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilityPolicyPropertiesResponseOutput)
}

func (i ImmutabilityPolicyPropertiesResponseArgs) ToImmutabilityPolicyPropertiesResponsePtrOutput() ImmutabilityPolicyPropertiesResponsePtrOutput {
	return i.ToImmutabilityPolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ImmutabilityPolicyPropertiesResponseArgs) ToImmutabilityPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilityPolicyPropertiesResponseOutput).ToImmutabilityPolicyPropertiesResponsePtrOutputWithContext(ctx)
}

// ImmutabilityPolicyPropertiesResponsePtrInput is an input type that accepts ImmutabilityPolicyPropertiesResponseArgs, ImmutabilityPolicyPropertiesResponsePtr and ImmutabilityPolicyPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ImmutabilityPolicyPropertiesResponsePtrInput` via:
//
//          ImmutabilityPolicyPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ImmutabilityPolicyPropertiesResponsePtrInput interface {
	pulumi.Input

	ToImmutabilityPolicyPropertiesResponsePtrOutput() ImmutabilityPolicyPropertiesResponsePtrOutput
	ToImmutabilityPolicyPropertiesResponsePtrOutputWithContext(context.Context) ImmutabilityPolicyPropertiesResponsePtrOutput
}

type immutabilityPolicyPropertiesResponsePtrType ImmutabilityPolicyPropertiesResponseArgs

func ImmutabilityPolicyPropertiesResponsePtr(v *ImmutabilityPolicyPropertiesResponseArgs) ImmutabilityPolicyPropertiesResponsePtrInput {
	return (*immutabilityPolicyPropertiesResponsePtrType)(v)
}

func (*immutabilityPolicyPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImmutabilityPolicyPropertiesResponse)(nil)).Elem()
}

func (i *immutabilityPolicyPropertiesResponsePtrType) ToImmutabilityPolicyPropertiesResponsePtrOutput() ImmutabilityPolicyPropertiesResponsePtrOutput {
	return i.ToImmutabilityPolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *immutabilityPolicyPropertiesResponsePtrType) ToImmutabilityPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilityPolicyPropertiesResponsePtrOutput)
}

// The properties of an ImmutabilityPolicy of a blob container.
type ImmutabilityPolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ImmutabilityPolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilityPolicyPropertiesResponse)(nil)).Elem()
}

func (o ImmutabilityPolicyPropertiesResponseOutput) ToImmutabilityPolicyPropertiesResponseOutput() ImmutabilityPolicyPropertiesResponseOutput {
	return o
}

func (o ImmutabilityPolicyPropertiesResponseOutput) ToImmutabilityPolicyPropertiesResponseOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertiesResponseOutput {
	return o
}

func (o ImmutabilityPolicyPropertiesResponseOutput) ToImmutabilityPolicyPropertiesResponsePtrOutput() ImmutabilityPolicyPropertiesResponsePtrOutput {
	return o.ToImmutabilityPolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ImmutabilityPolicyPropertiesResponseOutput) ToImmutabilityPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ImmutabilityPolicyPropertiesResponse) *ImmutabilityPolicyPropertiesResponse {
		return &v
	}).(ImmutabilityPolicyPropertiesResponsePtrOutput)
}

// ImmutabilityPolicy Etag.
func (o ImmutabilityPolicyPropertiesResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ImmutabilityPolicyPropertiesResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The immutability period for the blobs in the container since the policy creation, in days.
func (o ImmutabilityPolicyPropertiesResponseOutput) ImmutabilityPeriodSinceCreationInDays() pulumi.IntOutput {
	return o.ApplyT(func(v ImmutabilityPolicyPropertiesResponse) int { return v.ImmutabilityPeriodSinceCreationInDays }).(pulumi.IntOutput)
}

// The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
func (o ImmutabilityPolicyPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ImmutabilityPolicyPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// The ImmutabilityPolicy update history of the blob container.
func (o ImmutabilityPolicyPropertiesResponseOutput) UpdateHistory() UpdateHistoryPropertyResponseArrayOutput {
	return o.ApplyT(func(v ImmutabilityPolicyPropertiesResponse) []UpdateHistoryPropertyResponse { return v.UpdateHistory }).(UpdateHistoryPropertyResponseArrayOutput)
}

type ImmutabilityPolicyPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ImmutabilityPolicyPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImmutabilityPolicyPropertiesResponse)(nil)).Elem()
}

func (o ImmutabilityPolicyPropertiesResponsePtrOutput) ToImmutabilityPolicyPropertiesResponsePtrOutput() ImmutabilityPolicyPropertiesResponsePtrOutput {
	return o
}

func (o ImmutabilityPolicyPropertiesResponsePtrOutput) ToImmutabilityPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertiesResponsePtrOutput {
	return o
}

func (o ImmutabilityPolicyPropertiesResponsePtrOutput) Elem() ImmutabilityPolicyPropertiesResponseOutput {
	return o.ApplyT(func(v *ImmutabilityPolicyPropertiesResponse) ImmutabilityPolicyPropertiesResponse { return *v }).(ImmutabilityPolicyPropertiesResponseOutput)
}

// ImmutabilityPolicy Etag.
func (o ImmutabilityPolicyPropertiesResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImmutabilityPolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// The immutability period for the blobs in the container since the policy creation, in days.
func (o ImmutabilityPolicyPropertiesResponsePtrOutput) ImmutabilityPeriodSinceCreationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ImmutabilityPolicyPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ImmutabilityPeriodSinceCreationInDays
	}).(pulumi.IntPtrOutput)
}

// The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
func (o ImmutabilityPolicyPropertiesResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImmutabilityPolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// The ImmutabilityPolicy update history of the blob container.
func (o ImmutabilityPolicyPropertiesResponsePtrOutput) UpdateHistory() UpdateHistoryPropertyResponseArrayOutput {
	return o.ApplyT(func(v *ImmutabilityPolicyPropertiesResponse) []UpdateHistoryPropertyResponse {
		if v == nil {
			return nil
		}
		return v.UpdateHistory
	}).(UpdateHistoryPropertyResponseArrayOutput)
}

// Properties of key vault.
type KeyVaultProperties struct {
	// The name of KeyVault key.
	KeyName *string `pulumi:"keyName"`
	// The Uri of KeyVault.
	KeyVaultUri *string `pulumi:"keyVaultUri"`
	// The version of KeyVault key.
	KeyVersion *string `pulumi:"keyVersion"`
}

// KeyVaultPropertiesInput is an input type that accepts KeyVaultPropertiesArgs and KeyVaultPropertiesOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesInput` via:
//
//          KeyVaultPropertiesArgs{...}
type KeyVaultPropertiesInput interface {
	pulumi.Input

	ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput
	ToKeyVaultPropertiesOutputWithContext(context.Context) KeyVaultPropertiesOutput
}

// Properties of key vault.
type KeyVaultPropertiesArgs struct {
	// The name of KeyVault key.
	KeyName pulumi.StringPtrInput `pulumi:"keyName"`
	// The Uri of KeyVault.
	KeyVaultUri pulumi.StringPtrInput `pulumi:"keyVaultUri"`
	// The version of KeyVault key.
	KeyVersion pulumi.StringPtrInput `pulumi:"keyVersion"`
}

func (KeyVaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return i.ToKeyVaultPropertiesOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput)
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput).ToKeyVaultPropertiesPtrOutputWithContext(ctx)
}

// KeyVaultPropertiesPtrInput is an input type that accepts KeyVaultPropertiesArgs, KeyVaultPropertiesPtr and KeyVaultPropertiesPtrOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesPtrInput` via:
//
//          KeyVaultPropertiesArgs{...}
//
//  or:
//
//          nil
type KeyVaultPropertiesPtrInput interface {
	pulumi.Input

	ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput
	ToKeyVaultPropertiesPtrOutputWithContext(context.Context) KeyVaultPropertiesPtrOutput
}

type keyVaultPropertiesPtrType KeyVaultPropertiesArgs

func KeyVaultPropertiesPtr(v *KeyVaultPropertiesArgs) KeyVaultPropertiesPtrInput {
	return (*keyVaultPropertiesPtrType)(v)
}

func (*keyVaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesPtrOutput)
}

// Properties of key vault.
type KeyVaultPropertiesOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *KeyVaultProperties {
		return &v
	}).(KeyVaultPropertiesPtrOutput)
}

// The name of KeyVault key.
func (o KeyVaultPropertiesOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// The Uri of KeyVault.
func (o KeyVaultPropertiesOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.KeyVaultUri }).(pulumi.StringPtrOutput)
}

// The version of KeyVault key.
func (o KeyVaultPropertiesOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.KeyVersion }).(pulumi.StringPtrOutput)
}

type KeyVaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) Elem() KeyVaultPropertiesOutput {
	return o.ApplyT(func(v *KeyVaultProperties) KeyVaultProperties { return *v }).(KeyVaultPropertiesOutput)
}

// The name of KeyVault key.
func (o KeyVaultPropertiesPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyName
	}).(pulumi.StringPtrOutput)
}

// The Uri of KeyVault.
func (o KeyVaultPropertiesPtrOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultUri
	}).(pulumi.StringPtrOutput)
}

// The version of KeyVault key.
func (o KeyVaultPropertiesPtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

// Properties of key vault.
type KeyVaultPropertiesResponse struct {
	// The name of KeyVault key.
	KeyName *string `pulumi:"keyName"`
	// The Uri of KeyVault.
	KeyVaultUri *string `pulumi:"keyVaultUri"`
	// The version of KeyVault key.
	KeyVersion *string `pulumi:"keyVersion"`
}

// KeyVaultPropertiesResponseInput is an input type that accepts KeyVaultPropertiesResponseArgs and KeyVaultPropertiesResponseOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesResponseInput` via:
//
//          KeyVaultPropertiesResponseArgs{...}
type KeyVaultPropertiesResponseInput interface {
	pulumi.Input

	ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput
	ToKeyVaultPropertiesResponseOutputWithContext(context.Context) KeyVaultPropertiesResponseOutput
}

// Properties of key vault.
type KeyVaultPropertiesResponseArgs struct {
	// The name of KeyVault key.
	KeyName pulumi.StringPtrInput `pulumi:"keyName"`
	// The Uri of KeyVault.
	KeyVaultUri pulumi.StringPtrInput `pulumi:"keyVaultUri"`
	// The version of KeyVault key.
	KeyVersion pulumi.StringPtrInput `pulumi:"keyVersion"`
}

func (KeyVaultPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesResponse)(nil)).Elem()
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput {
	return i.ToKeyVaultPropertiesResponseOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponseOutput)
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return i.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponseOutput).ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx)
}

// KeyVaultPropertiesResponsePtrInput is an input type that accepts KeyVaultPropertiesResponseArgs, KeyVaultPropertiesResponsePtr and KeyVaultPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesResponsePtrInput` via:
//
//          KeyVaultPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type KeyVaultPropertiesResponsePtrInput interface {
	pulumi.Input

	ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput
	ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Context) KeyVaultPropertiesResponsePtrOutput
}

type keyVaultPropertiesResponsePtrType KeyVaultPropertiesResponseArgs

func KeyVaultPropertiesResponsePtr(v *KeyVaultPropertiesResponseArgs) KeyVaultPropertiesResponsePtrInput {
	return (*keyVaultPropertiesResponsePtrType)(v)
}

func (*keyVaultPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultPropertiesResponse)(nil)).Elem()
}

func (i *keyVaultPropertiesResponsePtrType) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return i.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *keyVaultPropertiesResponsePtrType) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponsePtrOutput)
}

// Properties of key vault.
type KeyVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return o.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *KeyVaultPropertiesResponse {
		return &v
	}).(KeyVaultPropertiesResponsePtrOutput)
}

// The name of KeyVault key.
func (o KeyVaultPropertiesResponseOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// The Uri of KeyVault.
func (o KeyVaultPropertiesResponseOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.KeyVaultUri }).(pulumi.StringPtrOutput)
}

// The version of KeyVault key.
func (o KeyVaultPropertiesResponseOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.KeyVersion }).(pulumi.StringPtrOutput)
}

type KeyVaultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) Elem() KeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) KeyVaultPropertiesResponse { return *v }).(KeyVaultPropertiesResponseOutput)
}

// The name of KeyVault key.
func (o KeyVaultPropertiesResponsePtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyName
	}).(pulumi.StringPtrOutput)
}

// The Uri of KeyVault.
func (o KeyVaultPropertiesResponsePtrOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultUri
	}).(pulumi.StringPtrOutput)
}

// The version of KeyVault key.
func (o KeyVaultPropertiesResponsePtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

// The LegalHold property of a blob container.
type LegalHoldPropertiesResponse struct {
	// The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
	HasLegalHold bool `pulumi:"hasLegalHold"`
	// The list of LegalHold tags of a blob container.
	Tags []TagPropertyResponse `pulumi:"tags"`
}

// LegalHoldPropertiesResponseInput is an input type that accepts LegalHoldPropertiesResponseArgs and LegalHoldPropertiesResponseOutput values.
// You can construct a concrete instance of `LegalHoldPropertiesResponseInput` via:
//
//          LegalHoldPropertiesResponseArgs{...}
type LegalHoldPropertiesResponseInput interface {
	pulumi.Input

	ToLegalHoldPropertiesResponseOutput() LegalHoldPropertiesResponseOutput
	ToLegalHoldPropertiesResponseOutputWithContext(context.Context) LegalHoldPropertiesResponseOutput
}

// The LegalHold property of a blob container.
type LegalHoldPropertiesResponseArgs struct {
	// The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
	HasLegalHold pulumi.BoolInput `pulumi:"hasLegalHold"`
	// The list of LegalHold tags of a blob container.
	Tags TagPropertyResponseArrayInput `pulumi:"tags"`
}

func (LegalHoldPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LegalHoldPropertiesResponse)(nil)).Elem()
}

func (i LegalHoldPropertiesResponseArgs) ToLegalHoldPropertiesResponseOutput() LegalHoldPropertiesResponseOutput {
	return i.ToLegalHoldPropertiesResponseOutputWithContext(context.Background())
}

func (i LegalHoldPropertiesResponseArgs) ToLegalHoldPropertiesResponseOutputWithContext(ctx context.Context) LegalHoldPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LegalHoldPropertiesResponseOutput)
}

func (i LegalHoldPropertiesResponseArgs) ToLegalHoldPropertiesResponsePtrOutput() LegalHoldPropertiesResponsePtrOutput {
	return i.ToLegalHoldPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i LegalHoldPropertiesResponseArgs) ToLegalHoldPropertiesResponsePtrOutputWithContext(ctx context.Context) LegalHoldPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LegalHoldPropertiesResponseOutput).ToLegalHoldPropertiesResponsePtrOutputWithContext(ctx)
}

// LegalHoldPropertiesResponsePtrInput is an input type that accepts LegalHoldPropertiesResponseArgs, LegalHoldPropertiesResponsePtr and LegalHoldPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `LegalHoldPropertiesResponsePtrInput` via:
//
//          LegalHoldPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type LegalHoldPropertiesResponsePtrInput interface {
	pulumi.Input

	ToLegalHoldPropertiesResponsePtrOutput() LegalHoldPropertiesResponsePtrOutput
	ToLegalHoldPropertiesResponsePtrOutputWithContext(context.Context) LegalHoldPropertiesResponsePtrOutput
}

type legalHoldPropertiesResponsePtrType LegalHoldPropertiesResponseArgs

func LegalHoldPropertiesResponsePtr(v *LegalHoldPropertiesResponseArgs) LegalHoldPropertiesResponsePtrInput {
	return (*legalHoldPropertiesResponsePtrType)(v)
}

func (*legalHoldPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LegalHoldPropertiesResponse)(nil)).Elem()
}

func (i *legalHoldPropertiesResponsePtrType) ToLegalHoldPropertiesResponsePtrOutput() LegalHoldPropertiesResponsePtrOutput {
	return i.ToLegalHoldPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *legalHoldPropertiesResponsePtrType) ToLegalHoldPropertiesResponsePtrOutputWithContext(ctx context.Context) LegalHoldPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LegalHoldPropertiesResponsePtrOutput)
}

// The LegalHold property of a blob container.
type LegalHoldPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LegalHoldPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LegalHoldPropertiesResponse)(nil)).Elem()
}

func (o LegalHoldPropertiesResponseOutput) ToLegalHoldPropertiesResponseOutput() LegalHoldPropertiesResponseOutput {
	return o
}

func (o LegalHoldPropertiesResponseOutput) ToLegalHoldPropertiesResponseOutputWithContext(ctx context.Context) LegalHoldPropertiesResponseOutput {
	return o
}

func (o LegalHoldPropertiesResponseOutput) ToLegalHoldPropertiesResponsePtrOutput() LegalHoldPropertiesResponsePtrOutput {
	return o.ToLegalHoldPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o LegalHoldPropertiesResponseOutput) ToLegalHoldPropertiesResponsePtrOutputWithContext(ctx context.Context) LegalHoldPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LegalHoldPropertiesResponse) *LegalHoldPropertiesResponse {
		return &v
	}).(LegalHoldPropertiesResponsePtrOutput)
}

// The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
func (o LegalHoldPropertiesResponseOutput) HasLegalHold() pulumi.BoolOutput {
	return o.ApplyT(func(v LegalHoldPropertiesResponse) bool { return v.HasLegalHold }).(pulumi.BoolOutput)
}

// The list of LegalHold tags of a blob container.
func (o LegalHoldPropertiesResponseOutput) Tags() TagPropertyResponseArrayOutput {
	return o.ApplyT(func(v LegalHoldPropertiesResponse) []TagPropertyResponse { return v.Tags }).(TagPropertyResponseArrayOutput)
}

type LegalHoldPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (LegalHoldPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LegalHoldPropertiesResponse)(nil)).Elem()
}

func (o LegalHoldPropertiesResponsePtrOutput) ToLegalHoldPropertiesResponsePtrOutput() LegalHoldPropertiesResponsePtrOutput {
	return o
}

func (o LegalHoldPropertiesResponsePtrOutput) ToLegalHoldPropertiesResponsePtrOutputWithContext(ctx context.Context) LegalHoldPropertiesResponsePtrOutput {
	return o
}

func (o LegalHoldPropertiesResponsePtrOutput) Elem() LegalHoldPropertiesResponseOutput {
	return o.ApplyT(func(v *LegalHoldPropertiesResponse) LegalHoldPropertiesResponse { return *v }).(LegalHoldPropertiesResponseOutput)
}

// The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
func (o LegalHoldPropertiesResponsePtrOutput) HasLegalHold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LegalHoldPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.HasLegalHold
	}).(pulumi.BoolPtrOutput)
}

// The list of LegalHold tags of a blob container.
func (o LegalHoldPropertiesResponsePtrOutput) Tags() TagPropertyResponseArrayOutput {
	return o.ApplyT(func(v *LegalHoldPropertiesResponse) []TagPropertyResponse {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(TagPropertyResponseArrayOutput)
}

// Actions are applied to the filtered blobs when the execution condition is met.
type ManagementPolicyAction struct {
	// The management policy action for base blob
	BaseBlob *ManagementPolicyBaseBlob `pulumi:"baseBlob"`
	// The management policy action for snapshot
	Snapshot *ManagementPolicySnapShot `pulumi:"snapshot"`
}

// ManagementPolicyActionInput is an input type that accepts ManagementPolicyActionArgs and ManagementPolicyActionOutput values.
// You can construct a concrete instance of `ManagementPolicyActionInput` via:
//
//          ManagementPolicyActionArgs{...}
type ManagementPolicyActionInput interface {
	pulumi.Input

	ToManagementPolicyActionOutput() ManagementPolicyActionOutput
	ToManagementPolicyActionOutputWithContext(context.Context) ManagementPolicyActionOutput
}

// Actions are applied to the filtered blobs when the execution condition is met.
type ManagementPolicyActionArgs struct {
	// The management policy action for base blob
	BaseBlob ManagementPolicyBaseBlobPtrInput `pulumi:"baseBlob"`
	// The management policy action for snapshot
	Snapshot ManagementPolicySnapShotPtrInput `pulumi:"snapshot"`
}

func (ManagementPolicyActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyAction)(nil)).Elem()
}

func (i ManagementPolicyActionArgs) ToManagementPolicyActionOutput() ManagementPolicyActionOutput {
	return i.ToManagementPolicyActionOutputWithContext(context.Background())
}

func (i ManagementPolicyActionArgs) ToManagementPolicyActionOutputWithContext(ctx context.Context) ManagementPolicyActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyActionOutput)
}

// Actions are applied to the filtered blobs when the execution condition is met.
type ManagementPolicyActionOutput struct{ *pulumi.OutputState }

func (ManagementPolicyActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyAction)(nil)).Elem()
}

func (o ManagementPolicyActionOutput) ToManagementPolicyActionOutput() ManagementPolicyActionOutput {
	return o
}

func (o ManagementPolicyActionOutput) ToManagementPolicyActionOutputWithContext(ctx context.Context) ManagementPolicyActionOutput {
	return o
}

// The management policy action for base blob
func (o ManagementPolicyActionOutput) BaseBlob() ManagementPolicyBaseBlobPtrOutput {
	return o.ApplyT(func(v ManagementPolicyAction) *ManagementPolicyBaseBlob { return v.BaseBlob }).(ManagementPolicyBaseBlobPtrOutput)
}

// The management policy action for snapshot
func (o ManagementPolicyActionOutput) Snapshot() ManagementPolicySnapShotPtrOutput {
	return o.ApplyT(func(v ManagementPolicyAction) *ManagementPolicySnapShot { return v.Snapshot }).(ManagementPolicySnapShotPtrOutput)
}

// Actions are applied to the filtered blobs when the execution condition is met.
type ManagementPolicyActionResponse struct {
	// The management policy action for base blob
	BaseBlob *ManagementPolicyBaseBlobResponse `pulumi:"baseBlob"`
	// The management policy action for snapshot
	Snapshot *ManagementPolicySnapShotResponse `pulumi:"snapshot"`
}

// ManagementPolicyActionResponseInput is an input type that accepts ManagementPolicyActionResponseArgs and ManagementPolicyActionResponseOutput values.
// You can construct a concrete instance of `ManagementPolicyActionResponseInput` via:
//
//          ManagementPolicyActionResponseArgs{...}
type ManagementPolicyActionResponseInput interface {
	pulumi.Input

	ToManagementPolicyActionResponseOutput() ManagementPolicyActionResponseOutput
	ToManagementPolicyActionResponseOutputWithContext(context.Context) ManagementPolicyActionResponseOutput
}

// Actions are applied to the filtered blobs when the execution condition is met.
type ManagementPolicyActionResponseArgs struct {
	// The management policy action for base blob
	BaseBlob ManagementPolicyBaseBlobResponsePtrInput `pulumi:"baseBlob"`
	// The management policy action for snapshot
	Snapshot ManagementPolicySnapShotResponsePtrInput `pulumi:"snapshot"`
}

func (ManagementPolicyActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyActionResponse)(nil)).Elem()
}

func (i ManagementPolicyActionResponseArgs) ToManagementPolicyActionResponseOutput() ManagementPolicyActionResponseOutput {
	return i.ToManagementPolicyActionResponseOutputWithContext(context.Background())
}

func (i ManagementPolicyActionResponseArgs) ToManagementPolicyActionResponseOutputWithContext(ctx context.Context) ManagementPolicyActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyActionResponseOutput)
}

// Actions are applied to the filtered blobs when the execution condition is met.
type ManagementPolicyActionResponseOutput struct{ *pulumi.OutputState }

func (ManagementPolicyActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyActionResponse)(nil)).Elem()
}

func (o ManagementPolicyActionResponseOutput) ToManagementPolicyActionResponseOutput() ManagementPolicyActionResponseOutput {
	return o
}

func (o ManagementPolicyActionResponseOutput) ToManagementPolicyActionResponseOutputWithContext(ctx context.Context) ManagementPolicyActionResponseOutput {
	return o
}

// The management policy action for base blob
func (o ManagementPolicyActionResponseOutput) BaseBlob() ManagementPolicyBaseBlobResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicyActionResponse) *ManagementPolicyBaseBlobResponse { return v.BaseBlob }).(ManagementPolicyBaseBlobResponsePtrOutput)
}

// The management policy action for snapshot
func (o ManagementPolicyActionResponseOutput) Snapshot() ManagementPolicySnapShotResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicyActionResponse) *ManagementPolicySnapShotResponse { return v.Snapshot }).(ManagementPolicySnapShotResponsePtrOutput)
}

// Management policy action for base blob.
type ManagementPolicyBaseBlob struct {
	// The function to delete the blob
	Delete *DateAfterModification `pulumi:"delete"`
	// The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
	TierToArchive *DateAfterModification `pulumi:"tierToArchive"`
	// The function to tier blobs to cool storage. Support blobs currently at Hot tier
	TierToCool *DateAfterModification `pulumi:"tierToCool"`
}

// ManagementPolicyBaseBlobInput is an input type that accepts ManagementPolicyBaseBlobArgs and ManagementPolicyBaseBlobOutput values.
// You can construct a concrete instance of `ManagementPolicyBaseBlobInput` via:
//
//          ManagementPolicyBaseBlobArgs{...}
type ManagementPolicyBaseBlobInput interface {
	pulumi.Input

	ToManagementPolicyBaseBlobOutput() ManagementPolicyBaseBlobOutput
	ToManagementPolicyBaseBlobOutputWithContext(context.Context) ManagementPolicyBaseBlobOutput
}

// Management policy action for base blob.
type ManagementPolicyBaseBlobArgs struct {
	// The function to delete the blob
	Delete DateAfterModificationPtrInput `pulumi:"delete"`
	// The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
	TierToArchive DateAfterModificationPtrInput `pulumi:"tierToArchive"`
	// The function to tier blobs to cool storage. Support blobs currently at Hot tier
	TierToCool DateAfterModificationPtrInput `pulumi:"tierToCool"`
}

func (ManagementPolicyBaseBlobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyBaseBlob)(nil)).Elem()
}

func (i ManagementPolicyBaseBlobArgs) ToManagementPolicyBaseBlobOutput() ManagementPolicyBaseBlobOutput {
	return i.ToManagementPolicyBaseBlobOutputWithContext(context.Background())
}

func (i ManagementPolicyBaseBlobArgs) ToManagementPolicyBaseBlobOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyBaseBlobOutput)
}

func (i ManagementPolicyBaseBlobArgs) ToManagementPolicyBaseBlobPtrOutput() ManagementPolicyBaseBlobPtrOutput {
	return i.ToManagementPolicyBaseBlobPtrOutputWithContext(context.Background())
}

func (i ManagementPolicyBaseBlobArgs) ToManagementPolicyBaseBlobPtrOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyBaseBlobOutput).ToManagementPolicyBaseBlobPtrOutputWithContext(ctx)
}

// ManagementPolicyBaseBlobPtrInput is an input type that accepts ManagementPolicyBaseBlobArgs, ManagementPolicyBaseBlobPtr and ManagementPolicyBaseBlobPtrOutput values.
// You can construct a concrete instance of `ManagementPolicyBaseBlobPtrInput` via:
//
//          ManagementPolicyBaseBlobArgs{...}
//
//  or:
//
//          nil
type ManagementPolicyBaseBlobPtrInput interface {
	pulumi.Input

	ToManagementPolicyBaseBlobPtrOutput() ManagementPolicyBaseBlobPtrOutput
	ToManagementPolicyBaseBlobPtrOutputWithContext(context.Context) ManagementPolicyBaseBlobPtrOutput
}

type managementPolicyBaseBlobPtrType ManagementPolicyBaseBlobArgs

func ManagementPolicyBaseBlobPtr(v *ManagementPolicyBaseBlobArgs) ManagementPolicyBaseBlobPtrInput {
	return (*managementPolicyBaseBlobPtrType)(v)
}

func (*managementPolicyBaseBlobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicyBaseBlob)(nil)).Elem()
}

func (i *managementPolicyBaseBlobPtrType) ToManagementPolicyBaseBlobPtrOutput() ManagementPolicyBaseBlobPtrOutput {
	return i.ToManagementPolicyBaseBlobPtrOutputWithContext(context.Background())
}

func (i *managementPolicyBaseBlobPtrType) ToManagementPolicyBaseBlobPtrOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyBaseBlobPtrOutput)
}

// Management policy action for base blob.
type ManagementPolicyBaseBlobOutput struct{ *pulumi.OutputState }

func (ManagementPolicyBaseBlobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyBaseBlob)(nil)).Elem()
}

func (o ManagementPolicyBaseBlobOutput) ToManagementPolicyBaseBlobOutput() ManagementPolicyBaseBlobOutput {
	return o
}

func (o ManagementPolicyBaseBlobOutput) ToManagementPolicyBaseBlobOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobOutput {
	return o
}

func (o ManagementPolicyBaseBlobOutput) ToManagementPolicyBaseBlobPtrOutput() ManagementPolicyBaseBlobPtrOutput {
	return o.ToManagementPolicyBaseBlobPtrOutputWithContext(context.Background())
}

func (o ManagementPolicyBaseBlobOutput) ToManagementPolicyBaseBlobPtrOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobPtrOutput {
	return o.ApplyT(func(v ManagementPolicyBaseBlob) *ManagementPolicyBaseBlob {
		return &v
	}).(ManagementPolicyBaseBlobPtrOutput)
}

// The function to delete the blob
func (o ManagementPolicyBaseBlobOutput) Delete() DateAfterModificationPtrOutput {
	return o.ApplyT(func(v ManagementPolicyBaseBlob) *DateAfterModification { return v.Delete }).(DateAfterModificationPtrOutput)
}

// The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
func (o ManagementPolicyBaseBlobOutput) TierToArchive() DateAfterModificationPtrOutput {
	return o.ApplyT(func(v ManagementPolicyBaseBlob) *DateAfterModification { return v.TierToArchive }).(DateAfterModificationPtrOutput)
}

// The function to tier blobs to cool storage. Support blobs currently at Hot tier
func (o ManagementPolicyBaseBlobOutput) TierToCool() DateAfterModificationPtrOutput {
	return o.ApplyT(func(v ManagementPolicyBaseBlob) *DateAfterModification { return v.TierToCool }).(DateAfterModificationPtrOutput)
}

type ManagementPolicyBaseBlobPtrOutput struct{ *pulumi.OutputState }

func (ManagementPolicyBaseBlobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicyBaseBlob)(nil)).Elem()
}

func (o ManagementPolicyBaseBlobPtrOutput) ToManagementPolicyBaseBlobPtrOutput() ManagementPolicyBaseBlobPtrOutput {
	return o
}

func (o ManagementPolicyBaseBlobPtrOutput) ToManagementPolicyBaseBlobPtrOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobPtrOutput {
	return o
}

func (o ManagementPolicyBaseBlobPtrOutput) Elem() ManagementPolicyBaseBlobOutput {
	return o.ApplyT(func(v *ManagementPolicyBaseBlob) ManagementPolicyBaseBlob { return *v }).(ManagementPolicyBaseBlobOutput)
}

// The function to delete the blob
func (o ManagementPolicyBaseBlobPtrOutput) Delete() DateAfterModificationPtrOutput {
	return o.ApplyT(func(v *ManagementPolicyBaseBlob) *DateAfterModification {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(DateAfterModificationPtrOutput)
}

// The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
func (o ManagementPolicyBaseBlobPtrOutput) TierToArchive() DateAfterModificationPtrOutput {
	return o.ApplyT(func(v *ManagementPolicyBaseBlob) *DateAfterModification {
		if v == nil {
			return nil
		}
		return v.TierToArchive
	}).(DateAfterModificationPtrOutput)
}

// The function to tier blobs to cool storage. Support blobs currently at Hot tier
func (o ManagementPolicyBaseBlobPtrOutput) TierToCool() DateAfterModificationPtrOutput {
	return o.ApplyT(func(v *ManagementPolicyBaseBlob) *DateAfterModification {
		if v == nil {
			return nil
		}
		return v.TierToCool
	}).(DateAfterModificationPtrOutput)
}

// Management policy action for base blob.
type ManagementPolicyBaseBlobResponse struct {
	// The function to delete the blob
	Delete *DateAfterModificationResponse `pulumi:"delete"`
	// The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
	TierToArchive *DateAfterModificationResponse `pulumi:"tierToArchive"`
	// The function to tier blobs to cool storage. Support blobs currently at Hot tier
	TierToCool *DateAfterModificationResponse `pulumi:"tierToCool"`
}

// ManagementPolicyBaseBlobResponseInput is an input type that accepts ManagementPolicyBaseBlobResponseArgs and ManagementPolicyBaseBlobResponseOutput values.
// You can construct a concrete instance of `ManagementPolicyBaseBlobResponseInput` via:
//
//          ManagementPolicyBaseBlobResponseArgs{...}
type ManagementPolicyBaseBlobResponseInput interface {
	pulumi.Input

	ToManagementPolicyBaseBlobResponseOutput() ManagementPolicyBaseBlobResponseOutput
	ToManagementPolicyBaseBlobResponseOutputWithContext(context.Context) ManagementPolicyBaseBlobResponseOutput
}

// Management policy action for base blob.
type ManagementPolicyBaseBlobResponseArgs struct {
	// The function to delete the blob
	Delete DateAfterModificationResponsePtrInput `pulumi:"delete"`
	// The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
	TierToArchive DateAfterModificationResponsePtrInput `pulumi:"tierToArchive"`
	// The function to tier blobs to cool storage. Support blobs currently at Hot tier
	TierToCool DateAfterModificationResponsePtrInput `pulumi:"tierToCool"`
}

func (ManagementPolicyBaseBlobResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyBaseBlobResponse)(nil)).Elem()
}

func (i ManagementPolicyBaseBlobResponseArgs) ToManagementPolicyBaseBlobResponseOutput() ManagementPolicyBaseBlobResponseOutput {
	return i.ToManagementPolicyBaseBlobResponseOutputWithContext(context.Background())
}

func (i ManagementPolicyBaseBlobResponseArgs) ToManagementPolicyBaseBlobResponseOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyBaseBlobResponseOutput)
}

func (i ManagementPolicyBaseBlobResponseArgs) ToManagementPolicyBaseBlobResponsePtrOutput() ManagementPolicyBaseBlobResponsePtrOutput {
	return i.ToManagementPolicyBaseBlobResponsePtrOutputWithContext(context.Background())
}

func (i ManagementPolicyBaseBlobResponseArgs) ToManagementPolicyBaseBlobResponsePtrOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyBaseBlobResponseOutput).ToManagementPolicyBaseBlobResponsePtrOutputWithContext(ctx)
}

// ManagementPolicyBaseBlobResponsePtrInput is an input type that accepts ManagementPolicyBaseBlobResponseArgs, ManagementPolicyBaseBlobResponsePtr and ManagementPolicyBaseBlobResponsePtrOutput values.
// You can construct a concrete instance of `ManagementPolicyBaseBlobResponsePtrInput` via:
//
//          ManagementPolicyBaseBlobResponseArgs{...}
//
//  or:
//
//          nil
type ManagementPolicyBaseBlobResponsePtrInput interface {
	pulumi.Input

	ToManagementPolicyBaseBlobResponsePtrOutput() ManagementPolicyBaseBlobResponsePtrOutput
	ToManagementPolicyBaseBlobResponsePtrOutputWithContext(context.Context) ManagementPolicyBaseBlobResponsePtrOutput
}

type managementPolicyBaseBlobResponsePtrType ManagementPolicyBaseBlobResponseArgs

func ManagementPolicyBaseBlobResponsePtr(v *ManagementPolicyBaseBlobResponseArgs) ManagementPolicyBaseBlobResponsePtrInput {
	return (*managementPolicyBaseBlobResponsePtrType)(v)
}

func (*managementPolicyBaseBlobResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicyBaseBlobResponse)(nil)).Elem()
}

func (i *managementPolicyBaseBlobResponsePtrType) ToManagementPolicyBaseBlobResponsePtrOutput() ManagementPolicyBaseBlobResponsePtrOutput {
	return i.ToManagementPolicyBaseBlobResponsePtrOutputWithContext(context.Background())
}

func (i *managementPolicyBaseBlobResponsePtrType) ToManagementPolicyBaseBlobResponsePtrOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyBaseBlobResponsePtrOutput)
}

// Management policy action for base blob.
type ManagementPolicyBaseBlobResponseOutput struct{ *pulumi.OutputState }

func (ManagementPolicyBaseBlobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyBaseBlobResponse)(nil)).Elem()
}

func (o ManagementPolicyBaseBlobResponseOutput) ToManagementPolicyBaseBlobResponseOutput() ManagementPolicyBaseBlobResponseOutput {
	return o
}

func (o ManagementPolicyBaseBlobResponseOutput) ToManagementPolicyBaseBlobResponseOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobResponseOutput {
	return o
}

func (o ManagementPolicyBaseBlobResponseOutput) ToManagementPolicyBaseBlobResponsePtrOutput() ManagementPolicyBaseBlobResponsePtrOutput {
	return o.ToManagementPolicyBaseBlobResponsePtrOutputWithContext(context.Background())
}

func (o ManagementPolicyBaseBlobResponseOutput) ToManagementPolicyBaseBlobResponsePtrOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicyBaseBlobResponse) *ManagementPolicyBaseBlobResponse {
		return &v
	}).(ManagementPolicyBaseBlobResponsePtrOutput)
}

// The function to delete the blob
func (o ManagementPolicyBaseBlobResponseOutput) Delete() DateAfterModificationResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicyBaseBlobResponse) *DateAfterModificationResponse { return v.Delete }).(DateAfterModificationResponsePtrOutput)
}

// The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
func (o ManagementPolicyBaseBlobResponseOutput) TierToArchive() DateAfterModificationResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicyBaseBlobResponse) *DateAfterModificationResponse { return v.TierToArchive }).(DateAfterModificationResponsePtrOutput)
}

// The function to tier blobs to cool storage. Support blobs currently at Hot tier
func (o ManagementPolicyBaseBlobResponseOutput) TierToCool() DateAfterModificationResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicyBaseBlobResponse) *DateAfterModificationResponse { return v.TierToCool }).(DateAfterModificationResponsePtrOutput)
}

type ManagementPolicyBaseBlobResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagementPolicyBaseBlobResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicyBaseBlobResponse)(nil)).Elem()
}

func (o ManagementPolicyBaseBlobResponsePtrOutput) ToManagementPolicyBaseBlobResponsePtrOutput() ManagementPolicyBaseBlobResponsePtrOutput {
	return o
}

func (o ManagementPolicyBaseBlobResponsePtrOutput) ToManagementPolicyBaseBlobResponsePtrOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobResponsePtrOutput {
	return o
}

func (o ManagementPolicyBaseBlobResponsePtrOutput) Elem() ManagementPolicyBaseBlobResponseOutput {
	return o.ApplyT(func(v *ManagementPolicyBaseBlobResponse) ManagementPolicyBaseBlobResponse { return *v }).(ManagementPolicyBaseBlobResponseOutput)
}

// The function to delete the blob
func (o ManagementPolicyBaseBlobResponsePtrOutput) Delete() DateAfterModificationResponsePtrOutput {
	return o.ApplyT(func(v *ManagementPolicyBaseBlobResponse) *DateAfterModificationResponse {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(DateAfterModificationResponsePtrOutput)
}

// The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
func (o ManagementPolicyBaseBlobResponsePtrOutput) TierToArchive() DateAfterModificationResponsePtrOutput {
	return o.ApplyT(func(v *ManagementPolicyBaseBlobResponse) *DateAfterModificationResponse {
		if v == nil {
			return nil
		}
		return v.TierToArchive
	}).(DateAfterModificationResponsePtrOutput)
}

// The function to tier blobs to cool storage. Support blobs currently at Hot tier
func (o ManagementPolicyBaseBlobResponsePtrOutput) TierToCool() DateAfterModificationResponsePtrOutput {
	return o.ApplyT(func(v *ManagementPolicyBaseBlobResponse) *DateAfterModificationResponse {
		if v == nil {
			return nil
		}
		return v.TierToCool
	}).(DateAfterModificationResponsePtrOutput)
}

// An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
type ManagementPolicyDefinition struct {
	// An object that defines the action set.
	Actions ManagementPolicyAction `pulumi:"actions"`
	// An object that defines the filter set.
	Filters *ManagementPolicyFilter `pulumi:"filters"`
}

// ManagementPolicyDefinitionInput is an input type that accepts ManagementPolicyDefinitionArgs and ManagementPolicyDefinitionOutput values.
// You can construct a concrete instance of `ManagementPolicyDefinitionInput` via:
//
//          ManagementPolicyDefinitionArgs{...}
type ManagementPolicyDefinitionInput interface {
	pulumi.Input

	ToManagementPolicyDefinitionOutput() ManagementPolicyDefinitionOutput
	ToManagementPolicyDefinitionOutputWithContext(context.Context) ManagementPolicyDefinitionOutput
}

// An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
type ManagementPolicyDefinitionArgs struct {
	// An object that defines the action set.
	Actions ManagementPolicyActionInput `pulumi:"actions"`
	// An object that defines the filter set.
	Filters ManagementPolicyFilterPtrInput `pulumi:"filters"`
}

func (ManagementPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyDefinition)(nil)).Elem()
}

func (i ManagementPolicyDefinitionArgs) ToManagementPolicyDefinitionOutput() ManagementPolicyDefinitionOutput {
	return i.ToManagementPolicyDefinitionOutputWithContext(context.Background())
}

func (i ManagementPolicyDefinitionArgs) ToManagementPolicyDefinitionOutputWithContext(ctx context.Context) ManagementPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyDefinitionOutput)
}

// An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
type ManagementPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (ManagementPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyDefinition)(nil)).Elem()
}

func (o ManagementPolicyDefinitionOutput) ToManagementPolicyDefinitionOutput() ManagementPolicyDefinitionOutput {
	return o
}

func (o ManagementPolicyDefinitionOutput) ToManagementPolicyDefinitionOutputWithContext(ctx context.Context) ManagementPolicyDefinitionOutput {
	return o
}

// An object that defines the action set.
func (o ManagementPolicyDefinitionOutput) Actions() ManagementPolicyActionOutput {
	return o.ApplyT(func(v ManagementPolicyDefinition) ManagementPolicyAction { return v.Actions }).(ManagementPolicyActionOutput)
}

// An object that defines the filter set.
func (o ManagementPolicyDefinitionOutput) Filters() ManagementPolicyFilterPtrOutput {
	return o.ApplyT(func(v ManagementPolicyDefinition) *ManagementPolicyFilter { return v.Filters }).(ManagementPolicyFilterPtrOutput)
}

// An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
type ManagementPolicyDefinitionResponse struct {
	// An object that defines the action set.
	Actions ManagementPolicyActionResponse `pulumi:"actions"`
	// An object that defines the filter set.
	Filters *ManagementPolicyFilterResponse `pulumi:"filters"`
}

// ManagementPolicyDefinitionResponseInput is an input type that accepts ManagementPolicyDefinitionResponseArgs and ManagementPolicyDefinitionResponseOutput values.
// You can construct a concrete instance of `ManagementPolicyDefinitionResponseInput` via:
//
//          ManagementPolicyDefinitionResponseArgs{...}
type ManagementPolicyDefinitionResponseInput interface {
	pulumi.Input

	ToManagementPolicyDefinitionResponseOutput() ManagementPolicyDefinitionResponseOutput
	ToManagementPolicyDefinitionResponseOutputWithContext(context.Context) ManagementPolicyDefinitionResponseOutput
}

// An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
type ManagementPolicyDefinitionResponseArgs struct {
	// An object that defines the action set.
	Actions ManagementPolicyActionResponseInput `pulumi:"actions"`
	// An object that defines the filter set.
	Filters ManagementPolicyFilterResponsePtrInput `pulumi:"filters"`
}

func (ManagementPolicyDefinitionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyDefinitionResponse)(nil)).Elem()
}

func (i ManagementPolicyDefinitionResponseArgs) ToManagementPolicyDefinitionResponseOutput() ManagementPolicyDefinitionResponseOutput {
	return i.ToManagementPolicyDefinitionResponseOutputWithContext(context.Background())
}

func (i ManagementPolicyDefinitionResponseArgs) ToManagementPolicyDefinitionResponseOutputWithContext(ctx context.Context) ManagementPolicyDefinitionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyDefinitionResponseOutput)
}

// An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
type ManagementPolicyDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ManagementPolicyDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyDefinitionResponse)(nil)).Elem()
}

func (o ManagementPolicyDefinitionResponseOutput) ToManagementPolicyDefinitionResponseOutput() ManagementPolicyDefinitionResponseOutput {
	return o
}

func (o ManagementPolicyDefinitionResponseOutput) ToManagementPolicyDefinitionResponseOutputWithContext(ctx context.Context) ManagementPolicyDefinitionResponseOutput {
	return o
}

// An object that defines the action set.
func (o ManagementPolicyDefinitionResponseOutput) Actions() ManagementPolicyActionResponseOutput {
	return o.ApplyT(func(v ManagementPolicyDefinitionResponse) ManagementPolicyActionResponse { return v.Actions }).(ManagementPolicyActionResponseOutput)
}

// An object that defines the filter set.
func (o ManagementPolicyDefinitionResponseOutput) Filters() ManagementPolicyFilterResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicyDefinitionResponse) *ManagementPolicyFilterResponse { return v.Filters }).(ManagementPolicyFilterResponsePtrOutput)
}

// Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters.
type ManagementPolicyFilter struct {
	// An array of predefined enum values. Only blockBlob is supported.
	BlobTypes []string `pulumi:"blobTypes"`
	// An array of strings for prefixes to be match.
	PrefixMatch []string `pulumi:"prefixMatch"`
}

// ManagementPolicyFilterInput is an input type that accepts ManagementPolicyFilterArgs and ManagementPolicyFilterOutput values.
// You can construct a concrete instance of `ManagementPolicyFilterInput` via:
//
//          ManagementPolicyFilterArgs{...}
type ManagementPolicyFilterInput interface {
	pulumi.Input

	ToManagementPolicyFilterOutput() ManagementPolicyFilterOutput
	ToManagementPolicyFilterOutputWithContext(context.Context) ManagementPolicyFilterOutput
}

// Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters.
type ManagementPolicyFilterArgs struct {
	// An array of predefined enum values. Only blockBlob is supported.
	BlobTypes pulumi.StringArrayInput `pulumi:"blobTypes"`
	// An array of strings for prefixes to be match.
	PrefixMatch pulumi.StringArrayInput `pulumi:"prefixMatch"`
}

func (ManagementPolicyFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyFilter)(nil)).Elem()
}

func (i ManagementPolicyFilterArgs) ToManagementPolicyFilterOutput() ManagementPolicyFilterOutput {
	return i.ToManagementPolicyFilterOutputWithContext(context.Background())
}

func (i ManagementPolicyFilterArgs) ToManagementPolicyFilterOutputWithContext(ctx context.Context) ManagementPolicyFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyFilterOutput)
}

func (i ManagementPolicyFilterArgs) ToManagementPolicyFilterPtrOutput() ManagementPolicyFilterPtrOutput {
	return i.ToManagementPolicyFilterPtrOutputWithContext(context.Background())
}

func (i ManagementPolicyFilterArgs) ToManagementPolicyFilterPtrOutputWithContext(ctx context.Context) ManagementPolicyFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyFilterOutput).ToManagementPolicyFilterPtrOutputWithContext(ctx)
}

// ManagementPolicyFilterPtrInput is an input type that accepts ManagementPolicyFilterArgs, ManagementPolicyFilterPtr and ManagementPolicyFilterPtrOutput values.
// You can construct a concrete instance of `ManagementPolicyFilterPtrInput` via:
//
//          ManagementPolicyFilterArgs{...}
//
//  or:
//
//          nil
type ManagementPolicyFilterPtrInput interface {
	pulumi.Input

	ToManagementPolicyFilterPtrOutput() ManagementPolicyFilterPtrOutput
	ToManagementPolicyFilterPtrOutputWithContext(context.Context) ManagementPolicyFilterPtrOutput
}

type managementPolicyFilterPtrType ManagementPolicyFilterArgs

func ManagementPolicyFilterPtr(v *ManagementPolicyFilterArgs) ManagementPolicyFilterPtrInput {
	return (*managementPolicyFilterPtrType)(v)
}

func (*managementPolicyFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicyFilter)(nil)).Elem()
}

func (i *managementPolicyFilterPtrType) ToManagementPolicyFilterPtrOutput() ManagementPolicyFilterPtrOutput {
	return i.ToManagementPolicyFilterPtrOutputWithContext(context.Background())
}

func (i *managementPolicyFilterPtrType) ToManagementPolicyFilterPtrOutputWithContext(ctx context.Context) ManagementPolicyFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyFilterPtrOutput)
}

// Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters.
type ManagementPolicyFilterOutput struct{ *pulumi.OutputState }

func (ManagementPolicyFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyFilter)(nil)).Elem()
}

func (o ManagementPolicyFilterOutput) ToManagementPolicyFilterOutput() ManagementPolicyFilterOutput {
	return o
}

func (o ManagementPolicyFilterOutput) ToManagementPolicyFilterOutputWithContext(ctx context.Context) ManagementPolicyFilterOutput {
	return o
}

func (o ManagementPolicyFilterOutput) ToManagementPolicyFilterPtrOutput() ManagementPolicyFilterPtrOutput {
	return o.ToManagementPolicyFilterPtrOutputWithContext(context.Background())
}

func (o ManagementPolicyFilterOutput) ToManagementPolicyFilterPtrOutputWithContext(ctx context.Context) ManagementPolicyFilterPtrOutput {
	return o.ApplyT(func(v ManagementPolicyFilter) *ManagementPolicyFilter {
		return &v
	}).(ManagementPolicyFilterPtrOutput)
}

// An array of predefined enum values. Only blockBlob is supported.
func (o ManagementPolicyFilterOutput) BlobTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementPolicyFilter) []string { return v.BlobTypes }).(pulumi.StringArrayOutput)
}

// An array of strings for prefixes to be match.
func (o ManagementPolicyFilterOutput) PrefixMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementPolicyFilter) []string { return v.PrefixMatch }).(pulumi.StringArrayOutput)
}

type ManagementPolicyFilterPtrOutput struct{ *pulumi.OutputState }

func (ManagementPolicyFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicyFilter)(nil)).Elem()
}

func (o ManagementPolicyFilterPtrOutput) ToManagementPolicyFilterPtrOutput() ManagementPolicyFilterPtrOutput {
	return o
}

func (o ManagementPolicyFilterPtrOutput) ToManagementPolicyFilterPtrOutputWithContext(ctx context.Context) ManagementPolicyFilterPtrOutput {
	return o
}

func (o ManagementPolicyFilterPtrOutput) Elem() ManagementPolicyFilterOutput {
	return o.ApplyT(func(v *ManagementPolicyFilter) ManagementPolicyFilter { return *v }).(ManagementPolicyFilterOutput)
}

// An array of predefined enum values. Only blockBlob is supported.
func (o ManagementPolicyFilterPtrOutput) BlobTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagementPolicyFilter) []string {
		if v == nil {
			return nil
		}
		return v.BlobTypes
	}).(pulumi.StringArrayOutput)
}

// An array of strings for prefixes to be match.
func (o ManagementPolicyFilterPtrOutput) PrefixMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagementPolicyFilter) []string {
		if v == nil {
			return nil
		}
		return v.PrefixMatch
	}).(pulumi.StringArrayOutput)
}

// Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters.
type ManagementPolicyFilterResponse struct {
	// An array of predefined enum values. Only blockBlob is supported.
	BlobTypes []string `pulumi:"blobTypes"`
	// An array of strings for prefixes to be match.
	PrefixMatch []string `pulumi:"prefixMatch"`
}

// ManagementPolicyFilterResponseInput is an input type that accepts ManagementPolicyFilterResponseArgs and ManagementPolicyFilterResponseOutput values.
// You can construct a concrete instance of `ManagementPolicyFilterResponseInput` via:
//
//          ManagementPolicyFilterResponseArgs{...}
type ManagementPolicyFilterResponseInput interface {
	pulumi.Input

	ToManagementPolicyFilterResponseOutput() ManagementPolicyFilterResponseOutput
	ToManagementPolicyFilterResponseOutputWithContext(context.Context) ManagementPolicyFilterResponseOutput
}

// Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters.
type ManagementPolicyFilterResponseArgs struct {
	// An array of predefined enum values. Only blockBlob is supported.
	BlobTypes pulumi.StringArrayInput `pulumi:"blobTypes"`
	// An array of strings for prefixes to be match.
	PrefixMatch pulumi.StringArrayInput `pulumi:"prefixMatch"`
}

func (ManagementPolicyFilterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyFilterResponse)(nil)).Elem()
}

func (i ManagementPolicyFilterResponseArgs) ToManagementPolicyFilterResponseOutput() ManagementPolicyFilterResponseOutput {
	return i.ToManagementPolicyFilterResponseOutputWithContext(context.Background())
}

func (i ManagementPolicyFilterResponseArgs) ToManagementPolicyFilterResponseOutputWithContext(ctx context.Context) ManagementPolicyFilterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyFilterResponseOutput)
}

func (i ManagementPolicyFilterResponseArgs) ToManagementPolicyFilterResponsePtrOutput() ManagementPolicyFilterResponsePtrOutput {
	return i.ToManagementPolicyFilterResponsePtrOutputWithContext(context.Background())
}

func (i ManagementPolicyFilterResponseArgs) ToManagementPolicyFilterResponsePtrOutputWithContext(ctx context.Context) ManagementPolicyFilterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyFilterResponseOutput).ToManagementPolicyFilterResponsePtrOutputWithContext(ctx)
}

// ManagementPolicyFilterResponsePtrInput is an input type that accepts ManagementPolicyFilterResponseArgs, ManagementPolicyFilterResponsePtr and ManagementPolicyFilterResponsePtrOutput values.
// You can construct a concrete instance of `ManagementPolicyFilterResponsePtrInput` via:
//
//          ManagementPolicyFilterResponseArgs{...}
//
//  or:
//
//          nil
type ManagementPolicyFilterResponsePtrInput interface {
	pulumi.Input

	ToManagementPolicyFilterResponsePtrOutput() ManagementPolicyFilterResponsePtrOutput
	ToManagementPolicyFilterResponsePtrOutputWithContext(context.Context) ManagementPolicyFilterResponsePtrOutput
}

type managementPolicyFilterResponsePtrType ManagementPolicyFilterResponseArgs

func ManagementPolicyFilterResponsePtr(v *ManagementPolicyFilterResponseArgs) ManagementPolicyFilterResponsePtrInput {
	return (*managementPolicyFilterResponsePtrType)(v)
}

func (*managementPolicyFilterResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicyFilterResponse)(nil)).Elem()
}

func (i *managementPolicyFilterResponsePtrType) ToManagementPolicyFilterResponsePtrOutput() ManagementPolicyFilterResponsePtrOutput {
	return i.ToManagementPolicyFilterResponsePtrOutputWithContext(context.Background())
}

func (i *managementPolicyFilterResponsePtrType) ToManagementPolicyFilterResponsePtrOutputWithContext(ctx context.Context) ManagementPolicyFilterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyFilterResponsePtrOutput)
}

// Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters.
type ManagementPolicyFilterResponseOutput struct{ *pulumi.OutputState }

func (ManagementPolicyFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyFilterResponse)(nil)).Elem()
}

func (o ManagementPolicyFilterResponseOutput) ToManagementPolicyFilterResponseOutput() ManagementPolicyFilterResponseOutput {
	return o
}

func (o ManagementPolicyFilterResponseOutput) ToManagementPolicyFilterResponseOutputWithContext(ctx context.Context) ManagementPolicyFilterResponseOutput {
	return o
}

func (o ManagementPolicyFilterResponseOutput) ToManagementPolicyFilterResponsePtrOutput() ManagementPolicyFilterResponsePtrOutput {
	return o.ToManagementPolicyFilterResponsePtrOutputWithContext(context.Background())
}

func (o ManagementPolicyFilterResponseOutput) ToManagementPolicyFilterResponsePtrOutputWithContext(ctx context.Context) ManagementPolicyFilterResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicyFilterResponse) *ManagementPolicyFilterResponse {
		return &v
	}).(ManagementPolicyFilterResponsePtrOutput)
}

// An array of predefined enum values. Only blockBlob is supported.
func (o ManagementPolicyFilterResponseOutput) BlobTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementPolicyFilterResponse) []string { return v.BlobTypes }).(pulumi.StringArrayOutput)
}

// An array of strings for prefixes to be match.
func (o ManagementPolicyFilterResponseOutput) PrefixMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementPolicyFilterResponse) []string { return v.PrefixMatch }).(pulumi.StringArrayOutput)
}

type ManagementPolicyFilterResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagementPolicyFilterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicyFilterResponse)(nil)).Elem()
}

func (o ManagementPolicyFilterResponsePtrOutput) ToManagementPolicyFilterResponsePtrOutput() ManagementPolicyFilterResponsePtrOutput {
	return o
}

func (o ManagementPolicyFilterResponsePtrOutput) ToManagementPolicyFilterResponsePtrOutputWithContext(ctx context.Context) ManagementPolicyFilterResponsePtrOutput {
	return o
}

func (o ManagementPolicyFilterResponsePtrOutput) Elem() ManagementPolicyFilterResponseOutput {
	return o.ApplyT(func(v *ManagementPolicyFilterResponse) ManagementPolicyFilterResponse { return *v }).(ManagementPolicyFilterResponseOutput)
}

// An array of predefined enum values. Only blockBlob is supported.
func (o ManagementPolicyFilterResponsePtrOutput) BlobTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagementPolicyFilterResponse) []string {
		if v == nil {
			return nil
		}
		return v.BlobTypes
	}).(pulumi.StringArrayOutput)
}

// An array of strings for prefixes to be match.
func (o ManagementPolicyFilterResponsePtrOutput) PrefixMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagementPolicyFilterResponse) []string {
		if v == nil {
			return nil
		}
		return v.PrefixMatch
	}).(pulumi.StringArrayOutput)
}

// An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
type ManagementPolicyRule struct {
	// An object that defines the Lifecycle rule.
	Definition ManagementPolicyDefinition `pulumi:"definition"`
	// Rule is enabled if set to true.
	Enabled *bool `pulumi:"enabled"`
	// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
	Name string `pulumi:"name"`
	// The valid value is Lifecycle
	Type string `pulumi:"type"`
}

// ManagementPolicyRuleInput is an input type that accepts ManagementPolicyRuleArgs and ManagementPolicyRuleOutput values.
// You can construct a concrete instance of `ManagementPolicyRuleInput` via:
//
//          ManagementPolicyRuleArgs{...}
type ManagementPolicyRuleInput interface {
	pulumi.Input

	ToManagementPolicyRuleOutput() ManagementPolicyRuleOutput
	ToManagementPolicyRuleOutputWithContext(context.Context) ManagementPolicyRuleOutput
}

// An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
type ManagementPolicyRuleArgs struct {
	// An object that defines the Lifecycle rule.
	Definition ManagementPolicyDefinitionInput `pulumi:"definition"`
	// Rule is enabled if set to true.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The valid value is Lifecycle
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagementPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyRule)(nil)).Elem()
}

func (i ManagementPolicyRuleArgs) ToManagementPolicyRuleOutput() ManagementPolicyRuleOutput {
	return i.ToManagementPolicyRuleOutputWithContext(context.Background())
}

func (i ManagementPolicyRuleArgs) ToManagementPolicyRuleOutputWithContext(ctx context.Context) ManagementPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyRuleOutput)
}

// ManagementPolicyRuleArrayInput is an input type that accepts ManagementPolicyRuleArray and ManagementPolicyRuleArrayOutput values.
// You can construct a concrete instance of `ManagementPolicyRuleArrayInput` via:
//
//          ManagementPolicyRuleArray{ ManagementPolicyRuleArgs{...} }
type ManagementPolicyRuleArrayInput interface {
	pulumi.Input

	ToManagementPolicyRuleArrayOutput() ManagementPolicyRuleArrayOutput
	ToManagementPolicyRuleArrayOutputWithContext(context.Context) ManagementPolicyRuleArrayOutput
}

type ManagementPolicyRuleArray []ManagementPolicyRuleInput

func (ManagementPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementPolicyRule)(nil)).Elem()
}

func (i ManagementPolicyRuleArray) ToManagementPolicyRuleArrayOutput() ManagementPolicyRuleArrayOutput {
	return i.ToManagementPolicyRuleArrayOutputWithContext(context.Background())
}

func (i ManagementPolicyRuleArray) ToManagementPolicyRuleArrayOutputWithContext(ctx context.Context) ManagementPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyRuleArrayOutput)
}

// An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
type ManagementPolicyRuleOutput struct{ *pulumi.OutputState }

func (ManagementPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyRule)(nil)).Elem()
}

func (o ManagementPolicyRuleOutput) ToManagementPolicyRuleOutput() ManagementPolicyRuleOutput {
	return o
}

func (o ManagementPolicyRuleOutput) ToManagementPolicyRuleOutputWithContext(ctx context.Context) ManagementPolicyRuleOutput {
	return o
}

// An object that defines the Lifecycle rule.
func (o ManagementPolicyRuleOutput) Definition() ManagementPolicyDefinitionOutput {
	return o.ApplyT(func(v ManagementPolicyRule) ManagementPolicyDefinition { return v.Definition }).(ManagementPolicyDefinitionOutput)
}

// Rule is enabled if set to true.
func (o ManagementPolicyRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementPolicyRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
func (o ManagementPolicyRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementPolicyRule) string { return v.Name }).(pulumi.StringOutput)
}

// The valid value is Lifecycle
func (o ManagementPolicyRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementPolicyRule) string { return v.Type }).(pulumi.StringOutput)
}

type ManagementPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (ManagementPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementPolicyRule)(nil)).Elem()
}

func (o ManagementPolicyRuleArrayOutput) ToManagementPolicyRuleArrayOutput() ManagementPolicyRuleArrayOutput {
	return o
}

func (o ManagementPolicyRuleArrayOutput) ToManagementPolicyRuleArrayOutputWithContext(ctx context.Context) ManagementPolicyRuleArrayOutput {
	return o
}

func (o ManagementPolicyRuleArrayOutput) Index(i pulumi.IntInput) ManagementPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementPolicyRule {
		return vs[0].([]ManagementPolicyRule)[vs[1].(int)]
	}).(ManagementPolicyRuleOutput)
}

// An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
type ManagementPolicyRuleResponse struct {
	// An object that defines the Lifecycle rule.
	Definition ManagementPolicyDefinitionResponse `pulumi:"definition"`
	// Rule is enabled if set to true.
	Enabled *bool `pulumi:"enabled"`
	// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
	Name string `pulumi:"name"`
	// The valid value is Lifecycle
	Type string `pulumi:"type"`
}

// ManagementPolicyRuleResponseInput is an input type that accepts ManagementPolicyRuleResponseArgs and ManagementPolicyRuleResponseOutput values.
// You can construct a concrete instance of `ManagementPolicyRuleResponseInput` via:
//
//          ManagementPolicyRuleResponseArgs{...}
type ManagementPolicyRuleResponseInput interface {
	pulumi.Input

	ToManagementPolicyRuleResponseOutput() ManagementPolicyRuleResponseOutput
	ToManagementPolicyRuleResponseOutputWithContext(context.Context) ManagementPolicyRuleResponseOutput
}

// An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
type ManagementPolicyRuleResponseArgs struct {
	// An object that defines the Lifecycle rule.
	Definition ManagementPolicyDefinitionResponseInput `pulumi:"definition"`
	// Rule is enabled if set to true.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The valid value is Lifecycle
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagementPolicyRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyRuleResponse)(nil)).Elem()
}

func (i ManagementPolicyRuleResponseArgs) ToManagementPolicyRuleResponseOutput() ManagementPolicyRuleResponseOutput {
	return i.ToManagementPolicyRuleResponseOutputWithContext(context.Background())
}

func (i ManagementPolicyRuleResponseArgs) ToManagementPolicyRuleResponseOutputWithContext(ctx context.Context) ManagementPolicyRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyRuleResponseOutput)
}

// ManagementPolicyRuleResponseArrayInput is an input type that accepts ManagementPolicyRuleResponseArray and ManagementPolicyRuleResponseArrayOutput values.
// You can construct a concrete instance of `ManagementPolicyRuleResponseArrayInput` via:
//
//          ManagementPolicyRuleResponseArray{ ManagementPolicyRuleResponseArgs{...} }
type ManagementPolicyRuleResponseArrayInput interface {
	pulumi.Input

	ToManagementPolicyRuleResponseArrayOutput() ManagementPolicyRuleResponseArrayOutput
	ToManagementPolicyRuleResponseArrayOutputWithContext(context.Context) ManagementPolicyRuleResponseArrayOutput
}

type ManagementPolicyRuleResponseArray []ManagementPolicyRuleResponseInput

func (ManagementPolicyRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementPolicyRuleResponse)(nil)).Elem()
}

func (i ManagementPolicyRuleResponseArray) ToManagementPolicyRuleResponseArrayOutput() ManagementPolicyRuleResponseArrayOutput {
	return i.ToManagementPolicyRuleResponseArrayOutputWithContext(context.Background())
}

func (i ManagementPolicyRuleResponseArray) ToManagementPolicyRuleResponseArrayOutputWithContext(ctx context.Context) ManagementPolicyRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyRuleResponseArrayOutput)
}

// An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
type ManagementPolicyRuleResponseOutput struct{ *pulumi.OutputState }

func (ManagementPolicyRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyRuleResponse)(nil)).Elem()
}

func (o ManagementPolicyRuleResponseOutput) ToManagementPolicyRuleResponseOutput() ManagementPolicyRuleResponseOutput {
	return o
}

func (o ManagementPolicyRuleResponseOutput) ToManagementPolicyRuleResponseOutputWithContext(ctx context.Context) ManagementPolicyRuleResponseOutput {
	return o
}

// An object that defines the Lifecycle rule.
func (o ManagementPolicyRuleResponseOutput) Definition() ManagementPolicyDefinitionResponseOutput {
	return o.ApplyT(func(v ManagementPolicyRuleResponse) ManagementPolicyDefinitionResponse { return v.Definition }).(ManagementPolicyDefinitionResponseOutput)
}

// Rule is enabled if set to true.
func (o ManagementPolicyRuleResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementPolicyRuleResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
func (o ManagementPolicyRuleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementPolicyRuleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The valid value is Lifecycle
func (o ManagementPolicyRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementPolicyRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ManagementPolicyRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagementPolicyRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementPolicyRuleResponse)(nil)).Elem()
}

func (o ManagementPolicyRuleResponseArrayOutput) ToManagementPolicyRuleResponseArrayOutput() ManagementPolicyRuleResponseArrayOutput {
	return o
}

func (o ManagementPolicyRuleResponseArrayOutput) ToManagementPolicyRuleResponseArrayOutputWithContext(ctx context.Context) ManagementPolicyRuleResponseArrayOutput {
	return o
}

func (o ManagementPolicyRuleResponseArrayOutput) Index(i pulumi.IntInput) ManagementPolicyRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementPolicyRuleResponse {
		return vs[0].([]ManagementPolicyRuleResponse)[vs[1].(int)]
	}).(ManagementPolicyRuleResponseOutput)
}

// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
type ManagementPolicySchema struct {
	// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
	Rules []ManagementPolicyRule `pulumi:"rules"`
}

// ManagementPolicySchemaInput is an input type that accepts ManagementPolicySchemaArgs and ManagementPolicySchemaOutput values.
// You can construct a concrete instance of `ManagementPolicySchemaInput` via:
//
//          ManagementPolicySchemaArgs{...}
type ManagementPolicySchemaInput interface {
	pulumi.Input

	ToManagementPolicySchemaOutput() ManagementPolicySchemaOutput
	ToManagementPolicySchemaOutputWithContext(context.Context) ManagementPolicySchemaOutput
}

// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
type ManagementPolicySchemaArgs struct {
	// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
	Rules ManagementPolicyRuleArrayInput `pulumi:"rules"`
}

func (ManagementPolicySchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicySchema)(nil)).Elem()
}

func (i ManagementPolicySchemaArgs) ToManagementPolicySchemaOutput() ManagementPolicySchemaOutput {
	return i.ToManagementPolicySchemaOutputWithContext(context.Background())
}

func (i ManagementPolicySchemaArgs) ToManagementPolicySchemaOutputWithContext(ctx context.Context) ManagementPolicySchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicySchemaOutput)
}

func (i ManagementPolicySchemaArgs) ToManagementPolicySchemaPtrOutput() ManagementPolicySchemaPtrOutput {
	return i.ToManagementPolicySchemaPtrOutputWithContext(context.Background())
}

func (i ManagementPolicySchemaArgs) ToManagementPolicySchemaPtrOutputWithContext(ctx context.Context) ManagementPolicySchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicySchemaOutput).ToManagementPolicySchemaPtrOutputWithContext(ctx)
}

// ManagementPolicySchemaPtrInput is an input type that accepts ManagementPolicySchemaArgs, ManagementPolicySchemaPtr and ManagementPolicySchemaPtrOutput values.
// You can construct a concrete instance of `ManagementPolicySchemaPtrInput` via:
//
//          ManagementPolicySchemaArgs{...}
//
//  or:
//
//          nil
type ManagementPolicySchemaPtrInput interface {
	pulumi.Input

	ToManagementPolicySchemaPtrOutput() ManagementPolicySchemaPtrOutput
	ToManagementPolicySchemaPtrOutputWithContext(context.Context) ManagementPolicySchemaPtrOutput
}

type managementPolicySchemaPtrType ManagementPolicySchemaArgs

func ManagementPolicySchemaPtr(v *ManagementPolicySchemaArgs) ManagementPolicySchemaPtrInput {
	return (*managementPolicySchemaPtrType)(v)
}

func (*managementPolicySchemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicySchema)(nil)).Elem()
}

func (i *managementPolicySchemaPtrType) ToManagementPolicySchemaPtrOutput() ManagementPolicySchemaPtrOutput {
	return i.ToManagementPolicySchemaPtrOutputWithContext(context.Background())
}

func (i *managementPolicySchemaPtrType) ToManagementPolicySchemaPtrOutputWithContext(ctx context.Context) ManagementPolicySchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicySchemaPtrOutput)
}

// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
type ManagementPolicySchemaOutput struct{ *pulumi.OutputState }

func (ManagementPolicySchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicySchema)(nil)).Elem()
}

func (o ManagementPolicySchemaOutput) ToManagementPolicySchemaOutput() ManagementPolicySchemaOutput {
	return o
}

func (o ManagementPolicySchemaOutput) ToManagementPolicySchemaOutputWithContext(ctx context.Context) ManagementPolicySchemaOutput {
	return o
}

func (o ManagementPolicySchemaOutput) ToManagementPolicySchemaPtrOutput() ManagementPolicySchemaPtrOutput {
	return o.ToManagementPolicySchemaPtrOutputWithContext(context.Background())
}

func (o ManagementPolicySchemaOutput) ToManagementPolicySchemaPtrOutputWithContext(ctx context.Context) ManagementPolicySchemaPtrOutput {
	return o.ApplyT(func(v ManagementPolicySchema) *ManagementPolicySchema {
		return &v
	}).(ManagementPolicySchemaPtrOutput)
}

// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
func (o ManagementPolicySchemaOutput) Rules() ManagementPolicyRuleArrayOutput {
	return o.ApplyT(func(v ManagementPolicySchema) []ManagementPolicyRule { return v.Rules }).(ManagementPolicyRuleArrayOutput)
}

type ManagementPolicySchemaPtrOutput struct{ *pulumi.OutputState }

func (ManagementPolicySchemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicySchema)(nil)).Elem()
}

func (o ManagementPolicySchemaPtrOutput) ToManagementPolicySchemaPtrOutput() ManagementPolicySchemaPtrOutput {
	return o
}

func (o ManagementPolicySchemaPtrOutput) ToManagementPolicySchemaPtrOutputWithContext(ctx context.Context) ManagementPolicySchemaPtrOutput {
	return o
}

func (o ManagementPolicySchemaPtrOutput) Elem() ManagementPolicySchemaOutput {
	return o.ApplyT(func(v *ManagementPolicySchema) ManagementPolicySchema { return *v }).(ManagementPolicySchemaOutput)
}

// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
func (o ManagementPolicySchemaPtrOutput) Rules() ManagementPolicyRuleArrayOutput {
	return o.ApplyT(func(v *ManagementPolicySchema) []ManagementPolicyRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(ManagementPolicyRuleArrayOutput)
}

// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
type ManagementPolicySchemaResponse struct {
	// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
	Rules []ManagementPolicyRuleResponse `pulumi:"rules"`
}

// ManagementPolicySchemaResponseInput is an input type that accepts ManagementPolicySchemaResponseArgs and ManagementPolicySchemaResponseOutput values.
// You can construct a concrete instance of `ManagementPolicySchemaResponseInput` via:
//
//          ManagementPolicySchemaResponseArgs{...}
type ManagementPolicySchemaResponseInput interface {
	pulumi.Input

	ToManagementPolicySchemaResponseOutput() ManagementPolicySchemaResponseOutput
	ToManagementPolicySchemaResponseOutputWithContext(context.Context) ManagementPolicySchemaResponseOutput
}

// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
type ManagementPolicySchemaResponseArgs struct {
	// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
	Rules ManagementPolicyRuleResponseArrayInput `pulumi:"rules"`
}

func (ManagementPolicySchemaResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicySchemaResponse)(nil)).Elem()
}

func (i ManagementPolicySchemaResponseArgs) ToManagementPolicySchemaResponseOutput() ManagementPolicySchemaResponseOutput {
	return i.ToManagementPolicySchemaResponseOutputWithContext(context.Background())
}

func (i ManagementPolicySchemaResponseArgs) ToManagementPolicySchemaResponseOutputWithContext(ctx context.Context) ManagementPolicySchemaResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicySchemaResponseOutput)
}

func (i ManagementPolicySchemaResponseArgs) ToManagementPolicySchemaResponsePtrOutput() ManagementPolicySchemaResponsePtrOutput {
	return i.ToManagementPolicySchemaResponsePtrOutputWithContext(context.Background())
}

func (i ManagementPolicySchemaResponseArgs) ToManagementPolicySchemaResponsePtrOutputWithContext(ctx context.Context) ManagementPolicySchemaResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicySchemaResponseOutput).ToManagementPolicySchemaResponsePtrOutputWithContext(ctx)
}

// ManagementPolicySchemaResponsePtrInput is an input type that accepts ManagementPolicySchemaResponseArgs, ManagementPolicySchemaResponsePtr and ManagementPolicySchemaResponsePtrOutput values.
// You can construct a concrete instance of `ManagementPolicySchemaResponsePtrInput` via:
//
//          ManagementPolicySchemaResponseArgs{...}
//
//  or:
//
//          nil
type ManagementPolicySchemaResponsePtrInput interface {
	pulumi.Input

	ToManagementPolicySchemaResponsePtrOutput() ManagementPolicySchemaResponsePtrOutput
	ToManagementPolicySchemaResponsePtrOutputWithContext(context.Context) ManagementPolicySchemaResponsePtrOutput
}

type managementPolicySchemaResponsePtrType ManagementPolicySchemaResponseArgs

func ManagementPolicySchemaResponsePtr(v *ManagementPolicySchemaResponseArgs) ManagementPolicySchemaResponsePtrInput {
	return (*managementPolicySchemaResponsePtrType)(v)
}

func (*managementPolicySchemaResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicySchemaResponse)(nil)).Elem()
}

func (i *managementPolicySchemaResponsePtrType) ToManagementPolicySchemaResponsePtrOutput() ManagementPolicySchemaResponsePtrOutput {
	return i.ToManagementPolicySchemaResponsePtrOutputWithContext(context.Background())
}

func (i *managementPolicySchemaResponsePtrType) ToManagementPolicySchemaResponsePtrOutputWithContext(ctx context.Context) ManagementPolicySchemaResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicySchemaResponsePtrOutput)
}

// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
type ManagementPolicySchemaResponseOutput struct{ *pulumi.OutputState }

func (ManagementPolicySchemaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicySchemaResponse)(nil)).Elem()
}

func (o ManagementPolicySchemaResponseOutput) ToManagementPolicySchemaResponseOutput() ManagementPolicySchemaResponseOutput {
	return o
}

func (o ManagementPolicySchemaResponseOutput) ToManagementPolicySchemaResponseOutputWithContext(ctx context.Context) ManagementPolicySchemaResponseOutput {
	return o
}

func (o ManagementPolicySchemaResponseOutput) ToManagementPolicySchemaResponsePtrOutput() ManagementPolicySchemaResponsePtrOutput {
	return o.ToManagementPolicySchemaResponsePtrOutputWithContext(context.Background())
}

func (o ManagementPolicySchemaResponseOutput) ToManagementPolicySchemaResponsePtrOutputWithContext(ctx context.Context) ManagementPolicySchemaResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicySchemaResponse) *ManagementPolicySchemaResponse {
		return &v
	}).(ManagementPolicySchemaResponsePtrOutput)
}

// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
func (o ManagementPolicySchemaResponseOutput) Rules() ManagementPolicyRuleResponseArrayOutput {
	return o.ApplyT(func(v ManagementPolicySchemaResponse) []ManagementPolicyRuleResponse { return v.Rules }).(ManagementPolicyRuleResponseArrayOutput)
}

type ManagementPolicySchemaResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagementPolicySchemaResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicySchemaResponse)(nil)).Elem()
}

func (o ManagementPolicySchemaResponsePtrOutput) ToManagementPolicySchemaResponsePtrOutput() ManagementPolicySchemaResponsePtrOutput {
	return o
}

func (o ManagementPolicySchemaResponsePtrOutput) ToManagementPolicySchemaResponsePtrOutputWithContext(ctx context.Context) ManagementPolicySchemaResponsePtrOutput {
	return o
}

func (o ManagementPolicySchemaResponsePtrOutput) Elem() ManagementPolicySchemaResponseOutput {
	return o.ApplyT(func(v *ManagementPolicySchemaResponse) ManagementPolicySchemaResponse { return *v }).(ManagementPolicySchemaResponseOutput)
}

// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
func (o ManagementPolicySchemaResponsePtrOutput) Rules() ManagementPolicyRuleResponseArrayOutput {
	return o.ApplyT(func(v *ManagementPolicySchemaResponse) []ManagementPolicyRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(ManagementPolicyRuleResponseArrayOutput)
}

// Management policy action for snapshot.
type ManagementPolicySnapShot struct {
	// The function to delete the blob snapshot
	Delete *DateAfterCreation `pulumi:"delete"`
}

// ManagementPolicySnapShotInput is an input type that accepts ManagementPolicySnapShotArgs and ManagementPolicySnapShotOutput values.
// You can construct a concrete instance of `ManagementPolicySnapShotInput` via:
//
//          ManagementPolicySnapShotArgs{...}
type ManagementPolicySnapShotInput interface {
	pulumi.Input

	ToManagementPolicySnapShotOutput() ManagementPolicySnapShotOutput
	ToManagementPolicySnapShotOutputWithContext(context.Context) ManagementPolicySnapShotOutput
}

// Management policy action for snapshot.
type ManagementPolicySnapShotArgs struct {
	// The function to delete the blob snapshot
	Delete DateAfterCreationPtrInput `pulumi:"delete"`
}

func (ManagementPolicySnapShotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicySnapShot)(nil)).Elem()
}

func (i ManagementPolicySnapShotArgs) ToManagementPolicySnapShotOutput() ManagementPolicySnapShotOutput {
	return i.ToManagementPolicySnapShotOutputWithContext(context.Background())
}

func (i ManagementPolicySnapShotArgs) ToManagementPolicySnapShotOutputWithContext(ctx context.Context) ManagementPolicySnapShotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicySnapShotOutput)
}

func (i ManagementPolicySnapShotArgs) ToManagementPolicySnapShotPtrOutput() ManagementPolicySnapShotPtrOutput {
	return i.ToManagementPolicySnapShotPtrOutputWithContext(context.Background())
}

func (i ManagementPolicySnapShotArgs) ToManagementPolicySnapShotPtrOutputWithContext(ctx context.Context) ManagementPolicySnapShotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicySnapShotOutput).ToManagementPolicySnapShotPtrOutputWithContext(ctx)
}

// ManagementPolicySnapShotPtrInput is an input type that accepts ManagementPolicySnapShotArgs, ManagementPolicySnapShotPtr and ManagementPolicySnapShotPtrOutput values.
// You can construct a concrete instance of `ManagementPolicySnapShotPtrInput` via:
//
//          ManagementPolicySnapShotArgs{...}
//
//  or:
//
//          nil
type ManagementPolicySnapShotPtrInput interface {
	pulumi.Input

	ToManagementPolicySnapShotPtrOutput() ManagementPolicySnapShotPtrOutput
	ToManagementPolicySnapShotPtrOutputWithContext(context.Context) ManagementPolicySnapShotPtrOutput
}

type managementPolicySnapShotPtrType ManagementPolicySnapShotArgs

func ManagementPolicySnapShotPtr(v *ManagementPolicySnapShotArgs) ManagementPolicySnapShotPtrInput {
	return (*managementPolicySnapShotPtrType)(v)
}

func (*managementPolicySnapShotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicySnapShot)(nil)).Elem()
}

func (i *managementPolicySnapShotPtrType) ToManagementPolicySnapShotPtrOutput() ManagementPolicySnapShotPtrOutput {
	return i.ToManagementPolicySnapShotPtrOutputWithContext(context.Background())
}

func (i *managementPolicySnapShotPtrType) ToManagementPolicySnapShotPtrOutputWithContext(ctx context.Context) ManagementPolicySnapShotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicySnapShotPtrOutput)
}

// Management policy action for snapshot.
type ManagementPolicySnapShotOutput struct{ *pulumi.OutputState }

func (ManagementPolicySnapShotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicySnapShot)(nil)).Elem()
}

func (o ManagementPolicySnapShotOutput) ToManagementPolicySnapShotOutput() ManagementPolicySnapShotOutput {
	return o
}

func (o ManagementPolicySnapShotOutput) ToManagementPolicySnapShotOutputWithContext(ctx context.Context) ManagementPolicySnapShotOutput {
	return o
}

func (o ManagementPolicySnapShotOutput) ToManagementPolicySnapShotPtrOutput() ManagementPolicySnapShotPtrOutput {
	return o.ToManagementPolicySnapShotPtrOutputWithContext(context.Background())
}

func (o ManagementPolicySnapShotOutput) ToManagementPolicySnapShotPtrOutputWithContext(ctx context.Context) ManagementPolicySnapShotPtrOutput {
	return o.ApplyT(func(v ManagementPolicySnapShot) *ManagementPolicySnapShot {
		return &v
	}).(ManagementPolicySnapShotPtrOutput)
}

// The function to delete the blob snapshot
func (o ManagementPolicySnapShotOutput) Delete() DateAfterCreationPtrOutput {
	return o.ApplyT(func(v ManagementPolicySnapShot) *DateAfterCreation { return v.Delete }).(DateAfterCreationPtrOutput)
}

type ManagementPolicySnapShotPtrOutput struct{ *pulumi.OutputState }

func (ManagementPolicySnapShotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicySnapShot)(nil)).Elem()
}

func (o ManagementPolicySnapShotPtrOutput) ToManagementPolicySnapShotPtrOutput() ManagementPolicySnapShotPtrOutput {
	return o
}

func (o ManagementPolicySnapShotPtrOutput) ToManagementPolicySnapShotPtrOutputWithContext(ctx context.Context) ManagementPolicySnapShotPtrOutput {
	return o
}

func (o ManagementPolicySnapShotPtrOutput) Elem() ManagementPolicySnapShotOutput {
	return o.ApplyT(func(v *ManagementPolicySnapShot) ManagementPolicySnapShot { return *v }).(ManagementPolicySnapShotOutput)
}

// The function to delete the blob snapshot
func (o ManagementPolicySnapShotPtrOutput) Delete() DateAfterCreationPtrOutput {
	return o.ApplyT(func(v *ManagementPolicySnapShot) *DateAfterCreation {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(DateAfterCreationPtrOutput)
}

// Management policy action for snapshot.
type ManagementPolicySnapShotResponse struct {
	// The function to delete the blob snapshot
	Delete *DateAfterCreationResponse `pulumi:"delete"`
}

// ManagementPolicySnapShotResponseInput is an input type that accepts ManagementPolicySnapShotResponseArgs and ManagementPolicySnapShotResponseOutput values.
// You can construct a concrete instance of `ManagementPolicySnapShotResponseInput` via:
//
//          ManagementPolicySnapShotResponseArgs{...}
type ManagementPolicySnapShotResponseInput interface {
	pulumi.Input

	ToManagementPolicySnapShotResponseOutput() ManagementPolicySnapShotResponseOutput
	ToManagementPolicySnapShotResponseOutputWithContext(context.Context) ManagementPolicySnapShotResponseOutput
}

// Management policy action for snapshot.
type ManagementPolicySnapShotResponseArgs struct {
	// The function to delete the blob snapshot
	Delete DateAfterCreationResponsePtrInput `pulumi:"delete"`
}

func (ManagementPolicySnapShotResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicySnapShotResponse)(nil)).Elem()
}

func (i ManagementPolicySnapShotResponseArgs) ToManagementPolicySnapShotResponseOutput() ManagementPolicySnapShotResponseOutput {
	return i.ToManagementPolicySnapShotResponseOutputWithContext(context.Background())
}

func (i ManagementPolicySnapShotResponseArgs) ToManagementPolicySnapShotResponseOutputWithContext(ctx context.Context) ManagementPolicySnapShotResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicySnapShotResponseOutput)
}

func (i ManagementPolicySnapShotResponseArgs) ToManagementPolicySnapShotResponsePtrOutput() ManagementPolicySnapShotResponsePtrOutput {
	return i.ToManagementPolicySnapShotResponsePtrOutputWithContext(context.Background())
}

func (i ManagementPolicySnapShotResponseArgs) ToManagementPolicySnapShotResponsePtrOutputWithContext(ctx context.Context) ManagementPolicySnapShotResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicySnapShotResponseOutput).ToManagementPolicySnapShotResponsePtrOutputWithContext(ctx)
}

// ManagementPolicySnapShotResponsePtrInput is an input type that accepts ManagementPolicySnapShotResponseArgs, ManagementPolicySnapShotResponsePtr and ManagementPolicySnapShotResponsePtrOutput values.
// You can construct a concrete instance of `ManagementPolicySnapShotResponsePtrInput` via:
//
//          ManagementPolicySnapShotResponseArgs{...}
//
//  or:
//
//          nil
type ManagementPolicySnapShotResponsePtrInput interface {
	pulumi.Input

	ToManagementPolicySnapShotResponsePtrOutput() ManagementPolicySnapShotResponsePtrOutput
	ToManagementPolicySnapShotResponsePtrOutputWithContext(context.Context) ManagementPolicySnapShotResponsePtrOutput
}

type managementPolicySnapShotResponsePtrType ManagementPolicySnapShotResponseArgs

func ManagementPolicySnapShotResponsePtr(v *ManagementPolicySnapShotResponseArgs) ManagementPolicySnapShotResponsePtrInput {
	return (*managementPolicySnapShotResponsePtrType)(v)
}

func (*managementPolicySnapShotResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicySnapShotResponse)(nil)).Elem()
}

func (i *managementPolicySnapShotResponsePtrType) ToManagementPolicySnapShotResponsePtrOutput() ManagementPolicySnapShotResponsePtrOutput {
	return i.ToManagementPolicySnapShotResponsePtrOutputWithContext(context.Background())
}

func (i *managementPolicySnapShotResponsePtrType) ToManagementPolicySnapShotResponsePtrOutputWithContext(ctx context.Context) ManagementPolicySnapShotResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicySnapShotResponsePtrOutput)
}

// Management policy action for snapshot.
type ManagementPolicySnapShotResponseOutput struct{ *pulumi.OutputState }

func (ManagementPolicySnapShotResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicySnapShotResponse)(nil)).Elem()
}

func (o ManagementPolicySnapShotResponseOutput) ToManagementPolicySnapShotResponseOutput() ManagementPolicySnapShotResponseOutput {
	return o
}

func (o ManagementPolicySnapShotResponseOutput) ToManagementPolicySnapShotResponseOutputWithContext(ctx context.Context) ManagementPolicySnapShotResponseOutput {
	return o
}

func (o ManagementPolicySnapShotResponseOutput) ToManagementPolicySnapShotResponsePtrOutput() ManagementPolicySnapShotResponsePtrOutput {
	return o.ToManagementPolicySnapShotResponsePtrOutputWithContext(context.Background())
}

func (o ManagementPolicySnapShotResponseOutput) ToManagementPolicySnapShotResponsePtrOutputWithContext(ctx context.Context) ManagementPolicySnapShotResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicySnapShotResponse) *ManagementPolicySnapShotResponse {
		return &v
	}).(ManagementPolicySnapShotResponsePtrOutput)
}

// The function to delete the blob snapshot
func (o ManagementPolicySnapShotResponseOutput) Delete() DateAfterCreationResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicySnapShotResponse) *DateAfterCreationResponse { return v.Delete }).(DateAfterCreationResponsePtrOutput)
}

type ManagementPolicySnapShotResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagementPolicySnapShotResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicySnapShotResponse)(nil)).Elem()
}

func (o ManagementPolicySnapShotResponsePtrOutput) ToManagementPolicySnapShotResponsePtrOutput() ManagementPolicySnapShotResponsePtrOutput {
	return o
}

func (o ManagementPolicySnapShotResponsePtrOutput) ToManagementPolicySnapShotResponsePtrOutputWithContext(ctx context.Context) ManagementPolicySnapShotResponsePtrOutput {
	return o
}

func (o ManagementPolicySnapShotResponsePtrOutput) Elem() ManagementPolicySnapShotResponseOutput {
	return o.ApplyT(func(v *ManagementPolicySnapShotResponse) ManagementPolicySnapShotResponse { return *v }).(ManagementPolicySnapShotResponseOutput)
}

// The function to delete the blob snapshot
func (o ManagementPolicySnapShotResponsePtrOutput) Delete() DateAfterCreationResponsePtrOutput {
	return o.ApplyT(func(v *ManagementPolicySnapShotResponse) *DateAfterCreationResponse {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(DateAfterCreationResponsePtrOutput)
}

// Network rule set
type NetworkRuleSet struct {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
	Bypass *string `pulumi:"bypass"`
	// Specifies the default action of allow or deny when no other rules match.
	DefaultAction string `pulumi:"defaultAction"`
	// Sets the IP ACL rules
	IpRules []IPRule `pulumi:"ipRules"`
	// Sets the virtual network rules
	VirtualNetworkRules []VirtualNetworkRule `pulumi:"virtualNetworkRules"`
}

// NetworkRuleSetInput is an input type that accepts NetworkRuleSetArgs and NetworkRuleSetOutput values.
// You can construct a concrete instance of `NetworkRuleSetInput` via:
//
//          NetworkRuleSetArgs{...}
type NetworkRuleSetInput interface {
	pulumi.Input

	ToNetworkRuleSetOutput() NetworkRuleSetOutput
	ToNetworkRuleSetOutputWithContext(context.Context) NetworkRuleSetOutput
}

// Network rule set
type NetworkRuleSetArgs struct {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
	Bypass pulumi.StringPtrInput `pulumi:"bypass"`
	// Specifies the default action of allow or deny when no other rules match.
	DefaultAction pulumi.StringInput `pulumi:"defaultAction"`
	// Sets the IP ACL rules
	IpRules IPRuleArrayInput `pulumi:"ipRules"`
	// Sets the virtual network rules
	VirtualNetworkRules VirtualNetworkRuleArrayInput `pulumi:"virtualNetworkRules"`
}

func (NetworkRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSet)(nil)).Elem()
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetOutput() NetworkRuleSetOutput {
	return i.ToNetworkRuleSetOutputWithContext(context.Background())
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetOutputWithContext(ctx context.Context) NetworkRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetOutput)
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return i.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetOutput).ToNetworkRuleSetPtrOutputWithContext(ctx)
}

// NetworkRuleSetPtrInput is an input type that accepts NetworkRuleSetArgs, NetworkRuleSetPtr and NetworkRuleSetPtrOutput values.
// You can construct a concrete instance of `NetworkRuleSetPtrInput` via:
//
//          NetworkRuleSetArgs{...}
//
//  or:
//
//          nil
type NetworkRuleSetPtrInput interface {
	pulumi.Input

	ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput
	ToNetworkRuleSetPtrOutputWithContext(context.Context) NetworkRuleSetPtrOutput
}

type networkRuleSetPtrType NetworkRuleSetArgs

func NetworkRuleSetPtr(v *NetworkRuleSetArgs) NetworkRuleSetPtrInput {
	return (*networkRuleSetPtrType)(v)
}

func (*networkRuleSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSet)(nil)).Elem()
}

func (i *networkRuleSetPtrType) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return i.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (i *networkRuleSetPtrType) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetPtrOutput)
}

// Network rule set
type NetworkRuleSetOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSet)(nil)).Elem()
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetOutput() NetworkRuleSetOutput {
	return o
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetOutputWithContext(ctx context.Context) NetworkRuleSetOutput {
	return o
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return o.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return o.ApplyT(func(v NetworkRuleSet) *NetworkRuleSet {
		return &v
	}).(NetworkRuleSetPtrOutput)
}

// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
func (o NetworkRuleSetOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleSet) *string { return v.Bypass }).(pulumi.StringPtrOutput)
}

// Specifies the default action of allow or deny when no other rules match.
func (o NetworkRuleSetOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRuleSet) string { return v.DefaultAction }).(pulumi.StringOutput)
}

// Sets the IP ACL rules
func (o NetworkRuleSetOutput) IpRules() IPRuleArrayOutput {
	return o.ApplyT(func(v NetworkRuleSet) []IPRule { return v.IpRules }).(IPRuleArrayOutput)
}

// Sets the virtual network rules
func (o NetworkRuleSetOutput) VirtualNetworkRules() VirtualNetworkRuleArrayOutput {
	return o.ApplyT(func(v NetworkRuleSet) []VirtualNetworkRule { return v.VirtualNetworkRules }).(VirtualNetworkRuleArrayOutput)
}

type NetworkRuleSetPtrOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSet)(nil)).Elem()
}

func (o NetworkRuleSetPtrOutput) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return o
}

func (o NetworkRuleSetPtrOutput) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return o
}

func (o NetworkRuleSetPtrOutput) Elem() NetworkRuleSetOutput {
	return o.ApplyT(func(v *NetworkRuleSet) NetworkRuleSet { return *v }).(NetworkRuleSetOutput)
}

// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
func (o NetworkRuleSetPtrOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSet) *string {
		if v == nil {
			return nil
		}
		return v.Bypass
	}).(pulumi.StringPtrOutput)
}

// Specifies the default action of allow or deny when no other rules match.
func (o NetworkRuleSetPtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSet) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// Sets the IP ACL rules
func (o NetworkRuleSetPtrOutput) IpRules() IPRuleArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSet) []IPRule {
		if v == nil {
			return nil
		}
		return v.IpRules
	}).(IPRuleArrayOutput)
}

// Sets the virtual network rules
func (o NetworkRuleSetPtrOutput) VirtualNetworkRules() VirtualNetworkRuleArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSet) []VirtualNetworkRule {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkRules
	}).(VirtualNetworkRuleArrayOutput)
}

// Network rule set
type NetworkRuleSetResponse struct {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
	Bypass *string `pulumi:"bypass"`
	// Specifies the default action of allow or deny when no other rules match.
	DefaultAction string `pulumi:"defaultAction"`
	// Sets the IP ACL rules
	IpRules []IPRuleResponse `pulumi:"ipRules"`
	// Sets the virtual network rules
	VirtualNetworkRules []VirtualNetworkRuleResponse `pulumi:"virtualNetworkRules"`
}

// NetworkRuleSetResponseInput is an input type that accepts NetworkRuleSetResponseArgs and NetworkRuleSetResponseOutput values.
// You can construct a concrete instance of `NetworkRuleSetResponseInput` via:
//
//          NetworkRuleSetResponseArgs{...}
type NetworkRuleSetResponseInput interface {
	pulumi.Input

	ToNetworkRuleSetResponseOutput() NetworkRuleSetResponseOutput
	ToNetworkRuleSetResponseOutputWithContext(context.Context) NetworkRuleSetResponseOutput
}

// Network rule set
type NetworkRuleSetResponseArgs struct {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
	Bypass pulumi.StringPtrInput `pulumi:"bypass"`
	// Specifies the default action of allow or deny when no other rules match.
	DefaultAction pulumi.StringInput `pulumi:"defaultAction"`
	// Sets the IP ACL rules
	IpRules IPRuleResponseArrayInput `pulumi:"ipRules"`
	// Sets the virtual network rules
	VirtualNetworkRules VirtualNetworkRuleResponseArrayInput `pulumi:"virtualNetworkRules"`
}

func (NetworkRuleSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSetResponse)(nil)).Elem()
}

func (i NetworkRuleSetResponseArgs) ToNetworkRuleSetResponseOutput() NetworkRuleSetResponseOutput {
	return i.ToNetworkRuleSetResponseOutputWithContext(context.Background())
}

func (i NetworkRuleSetResponseArgs) ToNetworkRuleSetResponseOutputWithContext(ctx context.Context) NetworkRuleSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetResponseOutput)
}

func (i NetworkRuleSetResponseArgs) ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput {
	return i.ToNetworkRuleSetResponsePtrOutputWithContext(context.Background())
}

func (i NetworkRuleSetResponseArgs) ToNetworkRuleSetResponsePtrOutputWithContext(ctx context.Context) NetworkRuleSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetResponseOutput).ToNetworkRuleSetResponsePtrOutputWithContext(ctx)
}

// NetworkRuleSetResponsePtrInput is an input type that accepts NetworkRuleSetResponseArgs, NetworkRuleSetResponsePtr and NetworkRuleSetResponsePtrOutput values.
// You can construct a concrete instance of `NetworkRuleSetResponsePtrInput` via:
//
//          NetworkRuleSetResponseArgs{...}
//
//  or:
//
//          nil
type NetworkRuleSetResponsePtrInput interface {
	pulumi.Input

	ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput
	ToNetworkRuleSetResponsePtrOutputWithContext(context.Context) NetworkRuleSetResponsePtrOutput
}

type networkRuleSetResponsePtrType NetworkRuleSetResponseArgs

func NetworkRuleSetResponsePtr(v *NetworkRuleSetResponseArgs) NetworkRuleSetResponsePtrInput {
	return (*networkRuleSetResponsePtrType)(v)
}

func (*networkRuleSetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSetResponse)(nil)).Elem()
}

func (i *networkRuleSetResponsePtrType) ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput {
	return i.ToNetworkRuleSetResponsePtrOutputWithContext(context.Background())
}

func (i *networkRuleSetResponsePtrType) ToNetworkRuleSetResponsePtrOutputWithContext(ctx context.Context) NetworkRuleSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetResponsePtrOutput)
}

// Network rule set
type NetworkRuleSetResponseOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSetResponse)(nil)).Elem()
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponseOutput() NetworkRuleSetResponseOutput {
	return o
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponseOutputWithContext(ctx context.Context) NetworkRuleSetResponseOutput {
	return o
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput {
	return o.ToNetworkRuleSetResponsePtrOutputWithContext(context.Background())
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponsePtrOutputWithContext(ctx context.Context) NetworkRuleSetResponsePtrOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) *NetworkRuleSetResponse {
		return &v
	}).(NetworkRuleSetResponsePtrOutput)
}

// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
func (o NetworkRuleSetResponseOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) *string { return v.Bypass }).(pulumi.StringPtrOutput)
}

// Specifies the default action of allow or deny when no other rules match.
func (o NetworkRuleSetResponseOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) string { return v.DefaultAction }).(pulumi.StringOutput)
}

// Sets the IP ACL rules
func (o NetworkRuleSetResponseOutput) IpRules() IPRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) []IPRuleResponse { return v.IpRules }).(IPRuleResponseArrayOutput)
}

// Sets the virtual network rules
func (o NetworkRuleSetResponseOutput) VirtualNetworkRules() VirtualNetworkRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) []VirtualNetworkRuleResponse { return v.VirtualNetworkRules }).(VirtualNetworkRuleResponseArrayOutput)
}

type NetworkRuleSetResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSetResponse)(nil)).Elem()
}

func (o NetworkRuleSetResponsePtrOutput) ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput {
	return o
}

func (o NetworkRuleSetResponsePtrOutput) ToNetworkRuleSetResponsePtrOutputWithContext(ctx context.Context) NetworkRuleSetResponsePtrOutput {
	return o
}

func (o NetworkRuleSetResponsePtrOutput) Elem() NetworkRuleSetResponseOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) NetworkRuleSetResponse { return *v }).(NetworkRuleSetResponseOutput)
}

// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
func (o NetworkRuleSetResponsePtrOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Bypass
	}).(pulumi.StringPtrOutput)
}

// Specifies the default action of allow or deny when no other rules match.
func (o NetworkRuleSetResponsePtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// Sets the IP ACL rules
func (o NetworkRuleSetResponsePtrOutput) IpRules() IPRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) []IPRuleResponse {
		if v == nil {
			return nil
		}
		return v.IpRules
	}).(IPRuleResponseArrayOutput)
}

// Sets the virtual network rules
func (o NetworkRuleSetResponsePtrOutput) VirtualNetworkRules() VirtualNetworkRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) []VirtualNetworkRuleResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkRules
	}).(VirtualNetworkRuleResponseArrayOutput)
}

// The restriction because of which SKU cannot be used.
type Restriction struct {
	// The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC.
	ReasonCode *string `pulumi:"reasonCode"`
}

// RestrictionInput is an input type that accepts RestrictionArgs and RestrictionOutput values.
// You can construct a concrete instance of `RestrictionInput` via:
//
//          RestrictionArgs{...}
type RestrictionInput interface {
	pulumi.Input

	ToRestrictionOutput() RestrictionOutput
	ToRestrictionOutputWithContext(context.Context) RestrictionOutput
}

// The restriction because of which SKU cannot be used.
type RestrictionArgs struct {
	// The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC.
	ReasonCode pulumi.StringPtrInput `pulumi:"reasonCode"`
}

func (RestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Restriction)(nil)).Elem()
}

func (i RestrictionArgs) ToRestrictionOutput() RestrictionOutput {
	return i.ToRestrictionOutputWithContext(context.Background())
}

func (i RestrictionArgs) ToRestrictionOutputWithContext(ctx context.Context) RestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionOutput)
}

// RestrictionArrayInput is an input type that accepts RestrictionArray and RestrictionArrayOutput values.
// You can construct a concrete instance of `RestrictionArrayInput` via:
//
//          RestrictionArray{ RestrictionArgs{...} }
type RestrictionArrayInput interface {
	pulumi.Input

	ToRestrictionArrayOutput() RestrictionArrayOutput
	ToRestrictionArrayOutputWithContext(context.Context) RestrictionArrayOutput
}

type RestrictionArray []RestrictionInput

func (RestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Restriction)(nil)).Elem()
}

func (i RestrictionArray) ToRestrictionArrayOutput() RestrictionArrayOutput {
	return i.ToRestrictionArrayOutputWithContext(context.Background())
}

func (i RestrictionArray) ToRestrictionArrayOutputWithContext(ctx context.Context) RestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionArrayOutput)
}

// The restriction because of which SKU cannot be used.
type RestrictionOutput struct{ *pulumi.OutputState }

func (RestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Restriction)(nil)).Elem()
}

func (o RestrictionOutput) ToRestrictionOutput() RestrictionOutput {
	return o
}

func (o RestrictionOutput) ToRestrictionOutputWithContext(ctx context.Context) RestrictionOutput {
	return o
}

// The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC.
func (o RestrictionOutput) ReasonCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Restriction) *string { return v.ReasonCode }).(pulumi.StringPtrOutput)
}

type RestrictionArrayOutput struct{ *pulumi.OutputState }

func (RestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Restriction)(nil)).Elem()
}

func (o RestrictionArrayOutput) ToRestrictionArrayOutput() RestrictionArrayOutput {
	return o
}

func (o RestrictionArrayOutput) ToRestrictionArrayOutputWithContext(ctx context.Context) RestrictionArrayOutput {
	return o
}

func (o RestrictionArrayOutput) Index(i pulumi.IntInput) RestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Restriction {
		return vs[0].([]Restriction)[vs[1].(int)]
	}).(RestrictionOutput)
}

// The restriction because of which SKU cannot be used.
type RestrictionResponse struct {
	// The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC.
	ReasonCode *string `pulumi:"reasonCode"`
	// The type of restrictions. As of now only possible value for this is location.
	Type string `pulumi:"type"`
	// The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
	Values []string `pulumi:"values"`
}

// RestrictionResponseInput is an input type that accepts RestrictionResponseArgs and RestrictionResponseOutput values.
// You can construct a concrete instance of `RestrictionResponseInput` via:
//
//          RestrictionResponseArgs{...}
type RestrictionResponseInput interface {
	pulumi.Input

	ToRestrictionResponseOutput() RestrictionResponseOutput
	ToRestrictionResponseOutputWithContext(context.Context) RestrictionResponseOutput
}

// The restriction because of which SKU cannot be used.
type RestrictionResponseArgs struct {
	// The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC.
	ReasonCode pulumi.StringPtrInput `pulumi:"reasonCode"`
	// The type of restrictions. As of now only possible value for this is location.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RestrictionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestrictionResponse)(nil)).Elem()
}

func (i RestrictionResponseArgs) ToRestrictionResponseOutput() RestrictionResponseOutput {
	return i.ToRestrictionResponseOutputWithContext(context.Background())
}

func (i RestrictionResponseArgs) ToRestrictionResponseOutputWithContext(ctx context.Context) RestrictionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionResponseOutput)
}

// RestrictionResponseArrayInput is an input type that accepts RestrictionResponseArray and RestrictionResponseArrayOutput values.
// You can construct a concrete instance of `RestrictionResponseArrayInput` via:
//
//          RestrictionResponseArray{ RestrictionResponseArgs{...} }
type RestrictionResponseArrayInput interface {
	pulumi.Input

	ToRestrictionResponseArrayOutput() RestrictionResponseArrayOutput
	ToRestrictionResponseArrayOutputWithContext(context.Context) RestrictionResponseArrayOutput
}

type RestrictionResponseArray []RestrictionResponseInput

func (RestrictionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestrictionResponse)(nil)).Elem()
}

func (i RestrictionResponseArray) ToRestrictionResponseArrayOutput() RestrictionResponseArrayOutput {
	return i.ToRestrictionResponseArrayOutputWithContext(context.Background())
}

func (i RestrictionResponseArray) ToRestrictionResponseArrayOutputWithContext(ctx context.Context) RestrictionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionResponseArrayOutput)
}

// The restriction because of which SKU cannot be used.
type RestrictionResponseOutput struct{ *pulumi.OutputState }

func (RestrictionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestrictionResponse)(nil)).Elem()
}

func (o RestrictionResponseOutput) ToRestrictionResponseOutput() RestrictionResponseOutput {
	return o
}

func (o RestrictionResponseOutput) ToRestrictionResponseOutputWithContext(ctx context.Context) RestrictionResponseOutput {
	return o
}

// The reason for the restriction. As of now this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The "NotAvailableForSubscription" is related to capacity at DC.
func (o RestrictionResponseOutput) ReasonCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestrictionResponse) *string { return v.ReasonCode }).(pulumi.StringPtrOutput)
}

// The type of restrictions. As of now only possible value for this is location.
func (o RestrictionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RestrictionResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
func (o RestrictionResponseOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RestrictionResponse) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RestrictionResponseArrayOutput struct{ *pulumi.OutputState }

func (RestrictionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestrictionResponse)(nil)).Elem()
}

func (o RestrictionResponseArrayOutput) ToRestrictionResponseArrayOutput() RestrictionResponseArrayOutput {
	return o
}

func (o RestrictionResponseArrayOutput) ToRestrictionResponseArrayOutputWithContext(ctx context.Context) RestrictionResponseArrayOutput {
	return o
}

func (o RestrictionResponseArrayOutput) Index(i pulumi.IntInput) RestrictionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RestrictionResponse {
		return vs[0].([]RestrictionResponse)[vs[1].(int)]
	}).(RestrictionResponseOutput)
}

// The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
type SKUCapabilityResponse struct {
	// The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
	Name string `pulumi:"name"`
	// A string value to indicate states of given capability. Possibly 'true' or 'false'.
	Value string `pulumi:"value"`
}

// SKUCapabilityResponseInput is an input type that accepts SKUCapabilityResponseArgs and SKUCapabilityResponseOutput values.
// You can construct a concrete instance of `SKUCapabilityResponseInput` via:
//
//          SKUCapabilityResponseArgs{...}
type SKUCapabilityResponseInput interface {
	pulumi.Input

	ToSKUCapabilityResponseOutput() SKUCapabilityResponseOutput
	ToSKUCapabilityResponseOutputWithContext(context.Context) SKUCapabilityResponseOutput
}

// The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
type SKUCapabilityResponseArgs struct {
	// The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
	Name pulumi.StringInput `pulumi:"name"`
	// A string value to indicate states of given capability. Possibly 'true' or 'false'.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SKUCapabilityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SKUCapabilityResponse)(nil)).Elem()
}

func (i SKUCapabilityResponseArgs) ToSKUCapabilityResponseOutput() SKUCapabilityResponseOutput {
	return i.ToSKUCapabilityResponseOutputWithContext(context.Background())
}

func (i SKUCapabilityResponseArgs) ToSKUCapabilityResponseOutputWithContext(ctx context.Context) SKUCapabilityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SKUCapabilityResponseOutput)
}

// SKUCapabilityResponseArrayInput is an input type that accepts SKUCapabilityResponseArray and SKUCapabilityResponseArrayOutput values.
// You can construct a concrete instance of `SKUCapabilityResponseArrayInput` via:
//
//          SKUCapabilityResponseArray{ SKUCapabilityResponseArgs{...} }
type SKUCapabilityResponseArrayInput interface {
	pulumi.Input

	ToSKUCapabilityResponseArrayOutput() SKUCapabilityResponseArrayOutput
	ToSKUCapabilityResponseArrayOutputWithContext(context.Context) SKUCapabilityResponseArrayOutput
}

type SKUCapabilityResponseArray []SKUCapabilityResponseInput

func (SKUCapabilityResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SKUCapabilityResponse)(nil)).Elem()
}

func (i SKUCapabilityResponseArray) ToSKUCapabilityResponseArrayOutput() SKUCapabilityResponseArrayOutput {
	return i.ToSKUCapabilityResponseArrayOutputWithContext(context.Background())
}

func (i SKUCapabilityResponseArray) ToSKUCapabilityResponseArrayOutputWithContext(ctx context.Context) SKUCapabilityResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SKUCapabilityResponseArrayOutput)
}

// The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
type SKUCapabilityResponseOutput struct{ *pulumi.OutputState }

func (SKUCapabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SKUCapabilityResponse)(nil)).Elem()
}

func (o SKUCapabilityResponseOutput) ToSKUCapabilityResponseOutput() SKUCapabilityResponseOutput {
	return o
}

func (o SKUCapabilityResponseOutput) ToSKUCapabilityResponseOutputWithContext(ctx context.Context) SKUCapabilityResponseOutput {
	return o
}

// The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
func (o SKUCapabilityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SKUCapabilityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// A string value to indicate states of given capability. Possibly 'true' or 'false'.
func (o SKUCapabilityResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SKUCapabilityResponse) string { return v.Value }).(pulumi.StringOutput)
}

type SKUCapabilityResponseArrayOutput struct{ *pulumi.OutputState }

func (SKUCapabilityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SKUCapabilityResponse)(nil)).Elem()
}

func (o SKUCapabilityResponseArrayOutput) ToSKUCapabilityResponseArrayOutput() SKUCapabilityResponseArrayOutput {
	return o
}

func (o SKUCapabilityResponseArrayOutput) ToSKUCapabilityResponseArrayOutputWithContext(ctx context.Context) SKUCapabilityResponseArrayOutput {
	return o
}

func (o SKUCapabilityResponseArrayOutput) Index(i pulumi.IntInput) SKUCapabilityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SKUCapabilityResponse {
		return vs[0].([]SKUCapabilityResponse)[vs[1].(int)]
	}).(SKUCapabilityResponseOutput)
}

// The SKU of the storage account.
type Sku struct {
	// Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
	Name string `pulumi:"name"`
	// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
	Restrictions []Restriction `pulumi:"restrictions"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The SKU of the storage account.
type SkuArgs struct {
	// Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
	Name pulumi.StringInput `pulumi:"name"`
	// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
	Restrictions RestrictionArrayInput `pulumi:"restrictions"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The SKU of the storage account.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
func (o SkuOutput) Restrictions() RestrictionArrayOutput {
	return o.ApplyT(func(v Sku) []Restriction { return v.Restrictions }).(RestrictionArrayOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
func (o SkuPtrOutput) Restrictions() RestrictionArrayOutput {
	return o.ApplyT(func(v *Sku) []Restriction {
		if v == nil {
			return nil
		}
		return v.Restrictions
	}).(RestrictionArrayOutput)
}

// The SKU of the storage account.
type SkuResponse struct {
	// The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
	Capabilities []SKUCapabilityResponse `pulumi:"capabilities"`
	// Indicates the type of storage account.
	Kind string `pulumi:"kind"`
	// The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).
	Locations []string `pulumi:"locations"`
	// Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
	Name string `pulumi:"name"`
	// The type of the resource, usually it is 'storageAccounts'.
	ResourceType string `pulumi:"resourceType"`
	// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
	Restrictions []RestrictionResponse `pulumi:"restrictions"`
	// Gets the SKU tier. This is based on the SKU name.
	Tier string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// The SKU of the storage account.
type SkuResponseArgs struct {
	// The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
	Capabilities SKUCapabilityResponseArrayInput `pulumi:"capabilities"`
	// Indicates the type of storage account.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the resource, usually it is 'storageAccounts'.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
	Restrictions RestrictionResponseArrayInput `pulumi:"restrictions"`
	// Gets the SKU tier. This is based on the SKU name.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// The SKU of the storage account.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
func (o SkuResponseOutput) Capabilities() SKUCapabilityResponseArrayOutput {
	return o.ApplyT(func(v SkuResponse) []SKUCapabilityResponse { return v.Capabilities }).(SKUCapabilityResponseArrayOutput)
}

// Indicates the type of storage account.
func (o SkuResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).
func (o SkuResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SkuResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the resource, usually it is 'storageAccounts'.
func (o SkuResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
func (o SkuResponseOutput) Restrictions() RestrictionResponseArrayOutput {
	return o.ApplyT(func(v SkuResponse) []RestrictionResponse { return v.Restrictions }).(RestrictionResponseArrayOutput)
}

// Gets the SKU tier. This is based on the SKU name.
func (o SkuResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.
func (o SkuResponsePtrOutput) Capabilities() SKUCapabilityResponseArrayOutput {
	return o.ApplyT(func(v *SkuResponse) []SKUCapabilityResponse {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(SKUCapabilityResponseArrayOutput)
}

// Indicates the type of storage account.
func (o SkuResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).
func (o SkuResponsePtrOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SkuResponse) []string {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(pulumi.StringArrayOutput)
}

// Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the resource, usually it is 'storageAccounts'.
func (o SkuResponsePtrOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceType
	}).(pulumi.StringPtrOutput)
}

// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
func (o SkuResponsePtrOutput) Restrictions() RestrictionResponseArrayOutput {
	return o.ApplyT(func(v *SkuResponse) []RestrictionResponse {
		if v == nil {
			return nil
		}
		return v.Restrictions
	}).(RestrictionResponseArrayOutput)
}

// Gets the SKU tier. This is based on the SKU name.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// An access key for the storage account.
type StorageAccountKeyResponse struct {
	// Name of the key.
	KeyName string `pulumi:"keyName"`
	// Permissions for the key -- read-only or full permissions.
	Permissions string `pulumi:"permissions"`
	// Base 64-encoded value of the key.
	Value string `pulumi:"value"`
}

// StorageAccountKeyResponseInput is an input type that accepts StorageAccountKeyResponseArgs and StorageAccountKeyResponseOutput values.
// You can construct a concrete instance of `StorageAccountKeyResponseInput` via:
//
//          StorageAccountKeyResponseArgs{...}
type StorageAccountKeyResponseInput interface {
	pulumi.Input

	ToStorageAccountKeyResponseOutput() StorageAccountKeyResponseOutput
	ToStorageAccountKeyResponseOutputWithContext(context.Context) StorageAccountKeyResponseOutput
}

// An access key for the storage account.
type StorageAccountKeyResponseArgs struct {
	// Name of the key.
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// Permissions for the key -- read-only or full permissions.
	Permissions pulumi.StringInput `pulumi:"permissions"`
	// Base 64-encoded value of the key.
	Value pulumi.StringInput `pulumi:"value"`
}

func (StorageAccountKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountKeyResponse)(nil)).Elem()
}

func (i StorageAccountKeyResponseArgs) ToStorageAccountKeyResponseOutput() StorageAccountKeyResponseOutput {
	return i.ToStorageAccountKeyResponseOutputWithContext(context.Background())
}

func (i StorageAccountKeyResponseArgs) ToStorageAccountKeyResponseOutputWithContext(ctx context.Context) StorageAccountKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountKeyResponseOutput)
}

// StorageAccountKeyResponseArrayInput is an input type that accepts StorageAccountKeyResponseArray and StorageAccountKeyResponseArrayOutput values.
// You can construct a concrete instance of `StorageAccountKeyResponseArrayInput` via:
//
//          StorageAccountKeyResponseArray{ StorageAccountKeyResponseArgs{...} }
type StorageAccountKeyResponseArrayInput interface {
	pulumi.Input

	ToStorageAccountKeyResponseArrayOutput() StorageAccountKeyResponseArrayOutput
	ToStorageAccountKeyResponseArrayOutputWithContext(context.Context) StorageAccountKeyResponseArrayOutput
}

type StorageAccountKeyResponseArray []StorageAccountKeyResponseInput

func (StorageAccountKeyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountKeyResponse)(nil)).Elem()
}

func (i StorageAccountKeyResponseArray) ToStorageAccountKeyResponseArrayOutput() StorageAccountKeyResponseArrayOutput {
	return i.ToStorageAccountKeyResponseArrayOutputWithContext(context.Background())
}

func (i StorageAccountKeyResponseArray) ToStorageAccountKeyResponseArrayOutputWithContext(ctx context.Context) StorageAccountKeyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountKeyResponseArrayOutput)
}

// An access key for the storage account.
type StorageAccountKeyResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountKeyResponse)(nil)).Elem()
}

func (o StorageAccountKeyResponseOutput) ToStorageAccountKeyResponseOutput() StorageAccountKeyResponseOutput {
	return o
}

func (o StorageAccountKeyResponseOutput) ToStorageAccountKeyResponseOutputWithContext(ctx context.Context) StorageAccountKeyResponseOutput {
	return o
}

// Name of the key.
func (o StorageAccountKeyResponseOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountKeyResponse) string { return v.KeyName }).(pulumi.StringOutput)
}

// Permissions for the key -- read-only or full permissions.
func (o StorageAccountKeyResponseOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountKeyResponse) string { return v.Permissions }).(pulumi.StringOutput)
}

// Base 64-encoded value of the key.
func (o StorageAccountKeyResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountKeyResponse) string { return v.Value }).(pulumi.StringOutput)
}

type StorageAccountKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (StorageAccountKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountKeyResponse)(nil)).Elem()
}

func (o StorageAccountKeyResponseArrayOutput) ToStorageAccountKeyResponseArrayOutput() StorageAccountKeyResponseArrayOutput {
	return o
}

func (o StorageAccountKeyResponseArrayOutput) ToStorageAccountKeyResponseArrayOutputWithContext(ctx context.Context) StorageAccountKeyResponseArrayOutput {
	return o
}

func (o StorageAccountKeyResponseArrayOutput) Index(i pulumi.IntInput) StorageAccountKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageAccountKeyResponse {
		return vs[0].([]StorageAccountKeyResponse)[vs[1].(int)]
	}).(StorageAccountKeyResponseOutput)
}

// A tag of the LegalHold of a blob container.
type TagPropertyResponse struct {
	// Returns the Object ID of the user who added the tag.
	ObjectIdentifier string `pulumi:"objectIdentifier"`
	// The tag value.
	Tag string `pulumi:"tag"`
	// Returns the Tenant ID that issued the token for the user who added the tag.
	TenantId string `pulumi:"tenantId"`
	// Returns the date and time the tag was added.
	Timestamp string `pulumi:"timestamp"`
	// Returns the User Principal Name of the user who added the tag.
	Upn string `pulumi:"upn"`
}

// TagPropertyResponseInput is an input type that accepts TagPropertyResponseArgs and TagPropertyResponseOutput values.
// You can construct a concrete instance of `TagPropertyResponseInput` via:
//
//          TagPropertyResponseArgs{...}
type TagPropertyResponseInput interface {
	pulumi.Input

	ToTagPropertyResponseOutput() TagPropertyResponseOutput
	ToTagPropertyResponseOutputWithContext(context.Context) TagPropertyResponseOutput
}

// A tag of the LegalHold of a blob container.
type TagPropertyResponseArgs struct {
	// Returns the Object ID of the user who added the tag.
	ObjectIdentifier pulumi.StringInput `pulumi:"objectIdentifier"`
	// The tag value.
	Tag pulumi.StringInput `pulumi:"tag"`
	// Returns the Tenant ID that issued the token for the user who added the tag.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Returns the date and time the tag was added.
	Timestamp pulumi.StringInput `pulumi:"timestamp"`
	// Returns the User Principal Name of the user who added the tag.
	Upn pulumi.StringInput `pulumi:"upn"`
}

func (TagPropertyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagPropertyResponse)(nil)).Elem()
}

func (i TagPropertyResponseArgs) ToTagPropertyResponseOutput() TagPropertyResponseOutput {
	return i.ToTagPropertyResponseOutputWithContext(context.Background())
}

func (i TagPropertyResponseArgs) ToTagPropertyResponseOutputWithContext(ctx context.Context) TagPropertyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagPropertyResponseOutput)
}

// TagPropertyResponseArrayInput is an input type that accepts TagPropertyResponseArray and TagPropertyResponseArrayOutput values.
// You can construct a concrete instance of `TagPropertyResponseArrayInput` via:
//
//          TagPropertyResponseArray{ TagPropertyResponseArgs{...} }
type TagPropertyResponseArrayInput interface {
	pulumi.Input

	ToTagPropertyResponseArrayOutput() TagPropertyResponseArrayOutput
	ToTagPropertyResponseArrayOutputWithContext(context.Context) TagPropertyResponseArrayOutput
}

type TagPropertyResponseArray []TagPropertyResponseInput

func (TagPropertyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagPropertyResponse)(nil)).Elem()
}

func (i TagPropertyResponseArray) ToTagPropertyResponseArrayOutput() TagPropertyResponseArrayOutput {
	return i.ToTagPropertyResponseArrayOutputWithContext(context.Background())
}

func (i TagPropertyResponseArray) ToTagPropertyResponseArrayOutputWithContext(ctx context.Context) TagPropertyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagPropertyResponseArrayOutput)
}

// A tag of the LegalHold of a blob container.
type TagPropertyResponseOutput struct{ *pulumi.OutputState }

func (TagPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagPropertyResponse)(nil)).Elem()
}

func (o TagPropertyResponseOutput) ToTagPropertyResponseOutput() TagPropertyResponseOutput {
	return o
}

func (o TagPropertyResponseOutput) ToTagPropertyResponseOutputWithContext(ctx context.Context) TagPropertyResponseOutput {
	return o
}

// Returns the Object ID of the user who added the tag.
func (o TagPropertyResponseOutput) ObjectIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v TagPropertyResponse) string { return v.ObjectIdentifier }).(pulumi.StringOutput)
}

// The tag value.
func (o TagPropertyResponseOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v TagPropertyResponse) string { return v.Tag }).(pulumi.StringOutput)
}

// Returns the Tenant ID that issued the token for the user who added the tag.
func (o TagPropertyResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v TagPropertyResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Returns the date and time the tag was added.
func (o TagPropertyResponseOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v TagPropertyResponse) string { return v.Timestamp }).(pulumi.StringOutput)
}

// Returns the User Principal Name of the user who added the tag.
func (o TagPropertyResponseOutput) Upn() pulumi.StringOutput {
	return o.ApplyT(func(v TagPropertyResponse) string { return v.Upn }).(pulumi.StringOutput)
}

type TagPropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (TagPropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagPropertyResponse)(nil)).Elem()
}

func (o TagPropertyResponseArrayOutput) ToTagPropertyResponseArrayOutput() TagPropertyResponseArrayOutput {
	return o
}

func (o TagPropertyResponseArrayOutput) ToTagPropertyResponseArrayOutputWithContext(ctx context.Context) TagPropertyResponseArrayOutput {
	return o
}

func (o TagPropertyResponseArrayOutput) Index(i pulumi.IntInput) TagPropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagPropertyResponse {
		return vs[0].([]TagPropertyResponse)[vs[1].(int)]
	}).(TagPropertyResponseOutput)
}

// An update history of the ImmutabilityPolicy of a blob container.
type UpdateHistoryPropertyResponse struct {
	// The immutability period for the blobs in the container since the policy creation, in days.
	ImmutabilityPeriodSinceCreationInDays int `pulumi:"immutabilityPeriodSinceCreationInDays"`
	// Returns the Object ID of the user who updated the ImmutabilityPolicy.
	ObjectIdentifier string `pulumi:"objectIdentifier"`
	// Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.
	TenantId string `pulumi:"tenantId"`
	// Returns the date and time the ImmutabilityPolicy was updated.
	Timestamp string `pulumi:"timestamp"`
	// The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.
	Update string `pulumi:"update"`
	// Returns the User Principal Name of the user who updated the ImmutabilityPolicy.
	Upn string `pulumi:"upn"`
}

// UpdateHistoryPropertyResponseInput is an input type that accepts UpdateHistoryPropertyResponseArgs and UpdateHistoryPropertyResponseOutput values.
// You can construct a concrete instance of `UpdateHistoryPropertyResponseInput` via:
//
//          UpdateHistoryPropertyResponseArgs{...}
type UpdateHistoryPropertyResponseInput interface {
	pulumi.Input

	ToUpdateHistoryPropertyResponseOutput() UpdateHistoryPropertyResponseOutput
	ToUpdateHistoryPropertyResponseOutputWithContext(context.Context) UpdateHistoryPropertyResponseOutput
}

// An update history of the ImmutabilityPolicy of a blob container.
type UpdateHistoryPropertyResponseArgs struct {
	// The immutability period for the blobs in the container since the policy creation, in days.
	ImmutabilityPeriodSinceCreationInDays pulumi.IntInput `pulumi:"immutabilityPeriodSinceCreationInDays"`
	// Returns the Object ID of the user who updated the ImmutabilityPolicy.
	ObjectIdentifier pulumi.StringInput `pulumi:"objectIdentifier"`
	// Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Returns the date and time the ImmutabilityPolicy was updated.
	Timestamp pulumi.StringInput `pulumi:"timestamp"`
	// The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.
	Update pulumi.StringInput `pulumi:"update"`
	// Returns the User Principal Name of the user who updated the ImmutabilityPolicy.
	Upn pulumi.StringInput `pulumi:"upn"`
}

func (UpdateHistoryPropertyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateHistoryPropertyResponse)(nil)).Elem()
}

func (i UpdateHistoryPropertyResponseArgs) ToUpdateHistoryPropertyResponseOutput() UpdateHistoryPropertyResponseOutput {
	return i.ToUpdateHistoryPropertyResponseOutputWithContext(context.Background())
}

func (i UpdateHistoryPropertyResponseArgs) ToUpdateHistoryPropertyResponseOutputWithContext(ctx context.Context) UpdateHistoryPropertyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateHistoryPropertyResponseOutput)
}

// UpdateHistoryPropertyResponseArrayInput is an input type that accepts UpdateHistoryPropertyResponseArray and UpdateHistoryPropertyResponseArrayOutput values.
// You can construct a concrete instance of `UpdateHistoryPropertyResponseArrayInput` via:
//
//          UpdateHistoryPropertyResponseArray{ UpdateHistoryPropertyResponseArgs{...} }
type UpdateHistoryPropertyResponseArrayInput interface {
	pulumi.Input

	ToUpdateHistoryPropertyResponseArrayOutput() UpdateHistoryPropertyResponseArrayOutput
	ToUpdateHistoryPropertyResponseArrayOutputWithContext(context.Context) UpdateHistoryPropertyResponseArrayOutput
}

type UpdateHistoryPropertyResponseArray []UpdateHistoryPropertyResponseInput

func (UpdateHistoryPropertyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UpdateHistoryPropertyResponse)(nil)).Elem()
}

func (i UpdateHistoryPropertyResponseArray) ToUpdateHistoryPropertyResponseArrayOutput() UpdateHistoryPropertyResponseArrayOutput {
	return i.ToUpdateHistoryPropertyResponseArrayOutputWithContext(context.Background())
}

func (i UpdateHistoryPropertyResponseArray) ToUpdateHistoryPropertyResponseArrayOutputWithContext(ctx context.Context) UpdateHistoryPropertyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateHistoryPropertyResponseArrayOutput)
}

// An update history of the ImmutabilityPolicy of a blob container.
type UpdateHistoryPropertyResponseOutput struct{ *pulumi.OutputState }

func (UpdateHistoryPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateHistoryPropertyResponse)(nil)).Elem()
}

func (o UpdateHistoryPropertyResponseOutput) ToUpdateHistoryPropertyResponseOutput() UpdateHistoryPropertyResponseOutput {
	return o
}

func (o UpdateHistoryPropertyResponseOutput) ToUpdateHistoryPropertyResponseOutputWithContext(ctx context.Context) UpdateHistoryPropertyResponseOutput {
	return o
}

// The immutability period for the blobs in the container since the policy creation, in days.
func (o UpdateHistoryPropertyResponseOutput) ImmutabilityPeriodSinceCreationInDays() pulumi.IntOutput {
	return o.ApplyT(func(v UpdateHistoryPropertyResponse) int { return v.ImmutabilityPeriodSinceCreationInDays }).(pulumi.IntOutput)
}

// Returns the Object ID of the user who updated the ImmutabilityPolicy.
func (o UpdateHistoryPropertyResponseOutput) ObjectIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateHistoryPropertyResponse) string { return v.ObjectIdentifier }).(pulumi.StringOutput)
}

// Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.
func (o UpdateHistoryPropertyResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateHistoryPropertyResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Returns the date and time the ImmutabilityPolicy was updated.
func (o UpdateHistoryPropertyResponseOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateHistoryPropertyResponse) string { return v.Timestamp }).(pulumi.StringOutput)
}

// The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.
func (o UpdateHistoryPropertyResponseOutput) Update() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateHistoryPropertyResponse) string { return v.Update }).(pulumi.StringOutput)
}

// Returns the User Principal Name of the user who updated the ImmutabilityPolicy.
func (o UpdateHistoryPropertyResponseOutput) Upn() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateHistoryPropertyResponse) string { return v.Upn }).(pulumi.StringOutput)
}

type UpdateHistoryPropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (UpdateHistoryPropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UpdateHistoryPropertyResponse)(nil)).Elem()
}

func (o UpdateHistoryPropertyResponseArrayOutput) ToUpdateHistoryPropertyResponseArrayOutput() UpdateHistoryPropertyResponseArrayOutput {
	return o
}

func (o UpdateHistoryPropertyResponseArrayOutput) ToUpdateHistoryPropertyResponseArrayOutputWithContext(ctx context.Context) UpdateHistoryPropertyResponseArrayOutput {
	return o
}

func (o UpdateHistoryPropertyResponseArrayOutput) Index(i pulumi.IntInput) UpdateHistoryPropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UpdateHistoryPropertyResponse {
		return vs[0].([]UpdateHistoryPropertyResponse)[vs[1].(int)]
	}).(UpdateHistoryPropertyResponseOutput)
}

// Virtual Network rule.
type VirtualNetworkRule struct {
	// The action of virtual network rule.
	Action *string `pulumi:"action"`
	// Gets the state of virtual network rule.
	State *string `pulumi:"state"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	VirtualNetworkResourceId string `pulumi:"virtualNetworkResourceId"`
}

// VirtualNetworkRuleInput is an input type that accepts VirtualNetworkRuleArgs and VirtualNetworkRuleOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleInput` via:
//
//          VirtualNetworkRuleArgs{...}
type VirtualNetworkRuleInput interface {
	pulumi.Input

	ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput
	ToVirtualNetworkRuleOutputWithContext(context.Context) VirtualNetworkRuleOutput
}

// Virtual Network rule.
type VirtualNetworkRuleArgs struct {
	// The action of virtual network rule.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Gets the state of virtual network rule.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	VirtualNetworkResourceId pulumi.StringInput `pulumi:"virtualNetworkResourceId"`
}

func (VirtualNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRule)(nil)).Elem()
}

func (i VirtualNetworkRuleArgs) ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput {
	return i.ToVirtualNetworkRuleOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleArgs) ToVirtualNetworkRuleOutputWithContext(ctx context.Context) VirtualNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleOutput)
}

// VirtualNetworkRuleArrayInput is an input type that accepts VirtualNetworkRuleArray and VirtualNetworkRuleArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleArrayInput` via:
//
//          VirtualNetworkRuleArray{ VirtualNetworkRuleArgs{...} }
type VirtualNetworkRuleArrayInput interface {
	pulumi.Input

	ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput
	ToVirtualNetworkRuleArrayOutputWithContext(context.Context) VirtualNetworkRuleArrayOutput
}

type VirtualNetworkRuleArray []VirtualNetworkRuleInput

func (VirtualNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRule)(nil)).Elem()
}

func (i VirtualNetworkRuleArray) ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput {
	return i.ToVirtualNetworkRuleArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleArray) ToVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleArrayOutput)
}

// Virtual Network rule.
type VirtualNetworkRuleOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRule)(nil)).Elem()
}

func (o VirtualNetworkRuleOutput) ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput {
	return o
}

func (o VirtualNetworkRuleOutput) ToVirtualNetworkRuleOutputWithContext(ctx context.Context) VirtualNetworkRuleOutput {
	return o
}

// The action of virtual network rule.
func (o VirtualNetworkRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Gets the state of virtual network rule.
func (o VirtualNetworkRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
func (o VirtualNetworkRuleOutput) VirtualNetworkResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkRule) string { return v.VirtualNetworkResourceId }).(pulumi.StringOutput)
}

type VirtualNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRule)(nil)).Elem()
}

func (o VirtualNetworkRuleArrayOutput) ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput {
	return o
}

func (o VirtualNetworkRuleArrayOutput) ToVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleArrayOutput {
	return o
}

func (o VirtualNetworkRuleArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRule {
		return vs[0].([]VirtualNetworkRule)[vs[1].(int)]
	}).(VirtualNetworkRuleOutput)
}

// Virtual Network rule.
type VirtualNetworkRuleResponse struct {
	// The action of virtual network rule.
	Action *string `pulumi:"action"`
	// Gets the state of virtual network rule.
	State *string `pulumi:"state"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	VirtualNetworkResourceId string `pulumi:"virtualNetworkResourceId"`
}

// VirtualNetworkRuleResponseInput is an input type that accepts VirtualNetworkRuleResponseArgs and VirtualNetworkRuleResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleResponseInput` via:
//
//          VirtualNetworkRuleResponseArgs{...}
type VirtualNetworkRuleResponseInput interface {
	pulumi.Input

	ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput
	ToVirtualNetworkRuleResponseOutputWithContext(context.Context) VirtualNetworkRuleResponseOutput
}

// Virtual Network rule.
type VirtualNetworkRuleResponseArgs struct {
	// The action of virtual network rule.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Gets the state of virtual network rule.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	VirtualNetworkResourceId pulumi.StringInput `pulumi:"virtualNetworkResourceId"`
}

func (VirtualNetworkRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRuleResponse)(nil)).Elem()
}

func (i VirtualNetworkRuleResponseArgs) ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput {
	return i.ToVirtualNetworkRuleResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleResponseArgs) ToVirtualNetworkRuleResponseOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleResponseOutput)
}

// VirtualNetworkRuleResponseArrayInput is an input type that accepts VirtualNetworkRuleResponseArray and VirtualNetworkRuleResponseArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleResponseArrayInput` via:
//
//          VirtualNetworkRuleResponseArray{ VirtualNetworkRuleResponseArgs{...} }
type VirtualNetworkRuleResponseArrayInput interface {
	pulumi.Input

	ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput
	ToVirtualNetworkRuleResponseArrayOutputWithContext(context.Context) VirtualNetworkRuleResponseArrayOutput
}

type VirtualNetworkRuleResponseArray []VirtualNetworkRuleResponseInput

func (VirtualNetworkRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRuleResponse)(nil)).Elem()
}

func (i VirtualNetworkRuleResponseArray) ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput {
	return i.ToVirtualNetworkRuleResponseArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleResponseArray) ToVirtualNetworkRuleResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleResponseArrayOutput)
}

// Virtual Network rule.
type VirtualNetworkRuleResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleResponseOutput) ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput {
	return o
}

func (o VirtualNetworkRuleResponseOutput) ToVirtualNetworkRuleResponseOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseOutput {
	return o
}

// The action of virtual network rule.
func (o VirtualNetworkRuleResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Gets the state of virtual network rule.
func (o VirtualNetworkRuleResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
func (o VirtualNetworkRuleResponseOutput) VirtualNetworkResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) string { return v.VirtualNetworkResourceId }).(pulumi.StringOutput)
}

type VirtualNetworkRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleResponseArrayOutput) ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleResponseArrayOutput) ToVirtualNetworkRuleResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRuleResponse {
		return vs[0].([]VirtualNetworkRuleResponse)[vs[1].(int)]
	}).(VirtualNetworkRuleResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(CorsRuleOutput{})
	pulumi.RegisterOutputType(CorsRuleArrayOutput{})
	pulumi.RegisterOutputType(CorsRuleResponseOutput{})
	pulumi.RegisterOutputType(CorsRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(CorsRulesOutput{})
	pulumi.RegisterOutputType(CorsRulesPtrOutput{})
	pulumi.RegisterOutputType(CorsRulesResponseOutput{})
	pulumi.RegisterOutputType(CorsRulesResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomDomainOutput{})
	pulumi.RegisterOutputType(CustomDomainPtrOutput{})
	pulumi.RegisterOutputType(CustomDomainResponseOutput{})
	pulumi.RegisterOutputType(CustomDomainResponsePtrOutput{})
	pulumi.RegisterOutputType(DateAfterCreationOutput{})
	pulumi.RegisterOutputType(DateAfterCreationPtrOutput{})
	pulumi.RegisterOutputType(DateAfterCreationResponseOutput{})
	pulumi.RegisterOutputType(DateAfterCreationResponsePtrOutput{})
	pulumi.RegisterOutputType(DateAfterModificationOutput{})
	pulumi.RegisterOutputType(DateAfterModificationPtrOutput{})
	pulumi.RegisterOutputType(DateAfterModificationResponseOutput{})
	pulumi.RegisterOutputType(DateAfterModificationResponsePtrOutput{})
	pulumi.RegisterOutputType(DeleteRetentionPolicyOutput{})
	pulumi.RegisterOutputType(DeleteRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(DeleteRetentionPolicyResponseOutput{})
	pulumi.RegisterOutputType(DeleteRetentionPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionOutput{})
	pulumi.RegisterOutputType(EncryptionPtrOutput{})
	pulumi.RegisterOutputType(EncryptionResponseOutput{})
	pulumi.RegisterOutputType(EncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionServiceOutput{})
	pulumi.RegisterOutputType(EncryptionServicePtrOutput{})
	pulumi.RegisterOutputType(EncryptionServiceResponseOutput{})
	pulumi.RegisterOutputType(EncryptionServiceResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionServicesOutput{})
	pulumi.RegisterOutputType(EncryptionServicesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionServicesResponseOutput{})
	pulumi.RegisterOutputType(EncryptionServicesResponsePtrOutput{})
	pulumi.RegisterOutputType(EndpointsResponseOutput{})
	pulumi.RegisterOutputType(EndpointsResponsePtrOutput{})
	pulumi.RegisterOutputType(GeoReplicationStatsResponseOutput{})
	pulumi.RegisterOutputType(GeoReplicationStatsResponsePtrOutput{})
	pulumi.RegisterOutputType(IPRuleOutput{})
	pulumi.RegisterOutputType(IPRuleArrayOutput{})
	pulumi.RegisterOutputType(IPRuleResponseOutput{})
	pulumi.RegisterOutputType(IPRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ImmutabilityPolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ImmutabilityPolicyPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LegalHoldPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LegalHoldPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagementPolicyActionOutput{})
	pulumi.RegisterOutputType(ManagementPolicyActionResponseOutput{})
	pulumi.RegisterOutputType(ManagementPolicyBaseBlobOutput{})
	pulumi.RegisterOutputType(ManagementPolicyBaseBlobPtrOutput{})
	pulumi.RegisterOutputType(ManagementPolicyBaseBlobResponseOutput{})
	pulumi.RegisterOutputType(ManagementPolicyBaseBlobResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagementPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(ManagementPolicyDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ManagementPolicyFilterOutput{})
	pulumi.RegisterOutputType(ManagementPolicyFilterPtrOutput{})
	pulumi.RegisterOutputType(ManagementPolicyFilterResponseOutput{})
	pulumi.RegisterOutputType(ManagementPolicyFilterResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagementPolicyRuleOutput{})
	pulumi.RegisterOutputType(ManagementPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(ManagementPolicyRuleResponseOutput{})
	pulumi.RegisterOutputType(ManagementPolicyRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagementPolicySchemaOutput{})
	pulumi.RegisterOutputType(ManagementPolicySchemaPtrOutput{})
	pulumi.RegisterOutputType(ManagementPolicySchemaResponseOutput{})
	pulumi.RegisterOutputType(ManagementPolicySchemaResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagementPolicySnapShotOutput{})
	pulumi.RegisterOutputType(ManagementPolicySnapShotPtrOutput{})
	pulumi.RegisterOutputType(ManagementPolicySnapShotResponseOutput{})
	pulumi.RegisterOutputType(ManagementPolicySnapShotResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetPtrOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetResponseOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetResponsePtrOutput{})
	pulumi.RegisterOutputType(RestrictionOutput{})
	pulumi.RegisterOutputType(RestrictionArrayOutput{})
	pulumi.RegisterOutputType(RestrictionResponseOutput{})
	pulumi.RegisterOutputType(RestrictionResponseArrayOutput{})
	pulumi.RegisterOutputType(SKUCapabilityResponseOutput{})
	pulumi.RegisterOutputType(SKUCapabilityResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountKeyResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(TagPropertyResponseOutput{})
	pulumi.RegisterOutputType(TagPropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(UpdateHistoryPropertyResponseOutput{})
	pulumi.RegisterOutputType(UpdateHistoryPropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleResponseArrayOutput{})
}
