// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200801preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The storage account blob inventory policy.
type BlobInventoryPolicy struct {
	pulumi.CustomResourceState

	// Returns the last modified date and time of the blob inventory policy.
	LastModifiedTime pulumi.StringOutput `pulumi:"lastModifiedTime"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The storage account blob inventory policy object. It is composed of policy rules.
	Policy BlobInventoryPolicySchemaResponseOutput `pulumi:"policy"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewBlobInventoryPolicy registers a new resource with the given unique name, arguments, and options.
func NewBlobInventoryPolicy(ctx *pulumi.Context,
	name string, args *BlobInventoryPolicyArgs, opts ...pulumi.ResourceOption) (*BlobInventoryPolicy, error) {
	if args == nil || args.AccountName == nil {
		return nil, errors.New("missing required argument 'AccountName'")
	}
	if args == nil || args.BlobInventoryPolicyName == nil {
		return nil, errors.New("missing required argument 'BlobInventoryPolicyName'")
	}
	if args == nil || args.Policy == nil {
		return nil, errors.New("missing required argument 'Policy'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &BlobInventoryPolicyArgs{}
	}
	var resource BlobInventoryPolicy
	err := ctx.RegisterResource("azure-nextgen:storage/v20200801preview:BlobInventoryPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBlobInventoryPolicy gets an existing BlobInventoryPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBlobInventoryPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BlobInventoryPolicyState, opts ...pulumi.ResourceOption) (*BlobInventoryPolicy, error) {
	var resource BlobInventoryPolicy
	err := ctx.ReadResource("azure-nextgen:storage/v20200801preview:BlobInventoryPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BlobInventoryPolicy resources.
type blobInventoryPolicyState struct {
	// Returns the last modified date and time of the blob inventory policy.
	LastModifiedTime *string `pulumi:"lastModifiedTime"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// The storage account blob inventory policy object. It is composed of policy rules.
	Policy *BlobInventoryPolicySchemaResponse `pulumi:"policy"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `pulumi:"type"`
}

type BlobInventoryPolicyState struct {
	// Returns the last modified date and time of the blob inventory policy.
	LastModifiedTime pulumi.StringPtrInput
	// The name of the resource
	Name pulumi.StringPtrInput
	// The storage account blob inventory policy object. It is composed of policy rules.
	Policy BlobInventoryPolicySchemaResponsePtrInput
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponsePtrInput
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringPtrInput
}

func (BlobInventoryPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*blobInventoryPolicyState)(nil)).Elem()
}

type blobInventoryPolicyArgs struct {
	// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	AccountName string `pulumi:"accountName"`
	// The name of the storage account blob inventory policy. It should always be 'default'
	BlobInventoryPolicyName string `pulumi:"blobInventoryPolicyName"`
	// The storage account blob inventory policy object. It is composed of policy rules.
	Policy BlobInventoryPolicySchema `pulumi:"policy"`
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a BlobInventoryPolicy resource.
type BlobInventoryPolicyArgs struct {
	// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
	AccountName pulumi.StringInput
	// The name of the storage account blob inventory policy. It should always be 'default'
	BlobInventoryPolicyName pulumi.StringInput
	// The storage account blob inventory policy object. It is composed of policy rules.
	Policy BlobInventoryPolicySchemaInput
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (BlobInventoryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*blobInventoryPolicyArgs)(nil)).Elem()
}
