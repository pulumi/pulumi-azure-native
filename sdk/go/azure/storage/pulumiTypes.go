// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Settings properties for Active Directory (AD).
type ActiveDirectoryProperties struct {
	// Specifies the security identifier (SID) for Azure Storage.
	AzureStorageSid string `pulumi:"azureStorageSid"`
	// Specifies the domain GUID.
	DomainGuid string `pulumi:"domainGuid"`
	// Specifies the primary domain that the AD DNS server is authoritative for.
	DomainName string `pulumi:"domainName"`
	// Specifies the security identifier (SID).
	DomainSid string `pulumi:"domainSid"`
	// Specifies the Active Directory forest to get.
	ForestName string `pulumi:"forestName"`
	// Specifies the NetBIOS domain name.
	NetBiosDomainName string `pulumi:"netBiosDomainName"`
}

// ActiveDirectoryPropertiesInput is an input type that accepts ActiveDirectoryPropertiesArgs and ActiveDirectoryPropertiesOutput values.
// You can construct a concrete instance of `ActiveDirectoryPropertiesInput` via:
//
//	ActiveDirectoryPropertiesArgs{...}
type ActiveDirectoryPropertiesInput interface {
	pulumi.Input

	ToActiveDirectoryPropertiesOutput() ActiveDirectoryPropertiesOutput
	ToActiveDirectoryPropertiesOutputWithContext(context.Context) ActiveDirectoryPropertiesOutput
}

// Settings properties for Active Directory (AD).
type ActiveDirectoryPropertiesArgs struct {
	// Specifies the security identifier (SID) for Azure Storage.
	AzureStorageSid pulumi.StringInput `pulumi:"azureStorageSid"`
	// Specifies the domain GUID.
	DomainGuid pulumi.StringInput `pulumi:"domainGuid"`
	// Specifies the primary domain that the AD DNS server is authoritative for.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// Specifies the security identifier (SID).
	DomainSid pulumi.StringInput `pulumi:"domainSid"`
	// Specifies the Active Directory forest to get.
	ForestName pulumi.StringInput `pulumi:"forestName"`
	// Specifies the NetBIOS domain name.
	NetBiosDomainName pulumi.StringInput `pulumi:"netBiosDomainName"`
}

func (ActiveDirectoryPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryProperties)(nil)).Elem()
}

func (i ActiveDirectoryPropertiesArgs) ToActiveDirectoryPropertiesOutput() ActiveDirectoryPropertiesOutput {
	return i.ToActiveDirectoryPropertiesOutputWithContext(context.Background())
}

func (i ActiveDirectoryPropertiesArgs) ToActiveDirectoryPropertiesOutputWithContext(ctx context.Context) ActiveDirectoryPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryPropertiesOutput)
}

func (i ActiveDirectoryPropertiesArgs) ToActiveDirectoryPropertiesPtrOutput() ActiveDirectoryPropertiesPtrOutput {
	return i.ToActiveDirectoryPropertiesPtrOutputWithContext(context.Background())
}

func (i ActiveDirectoryPropertiesArgs) ToActiveDirectoryPropertiesPtrOutputWithContext(ctx context.Context) ActiveDirectoryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryPropertiesOutput).ToActiveDirectoryPropertiesPtrOutputWithContext(ctx)
}

// ActiveDirectoryPropertiesPtrInput is an input type that accepts ActiveDirectoryPropertiesArgs, ActiveDirectoryPropertiesPtr and ActiveDirectoryPropertiesPtrOutput values.
// You can construct a concrete instance of `ActiveDirectoryPropertiesPtrInput` via:
//
//	        ActiveDirectoryPropertiesArgs{...}
//
//	or:
//
//	        nil
type ActiveDirectoryPropertiesPtrInput interface {
	pulumi.Input

	ToActiveDirectoryPropertiesPtrOutput() ActiveDirectoryPropertiesPtrOutput
	ToActiveDirectoryPropertiesPtrOutputWithContext(context.Context) ActiveDirectoryPropertiesPtrOutput
}

type activeDirectoryPropertiesPtrType ActiveDirectoryPropertiesArgs

func ActiveDirectoryPropertiesPtr(v *ActiveDirectoryPropertiesArgs) ActiveDirectoryPropertiesPtrInput {
	return (*activeDirectoryPropertiesPtrType)(v)
}

func (*activeDirectoryPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveDirectoryProperties)(nil)).Elem()
}

func (i *activeDirectoryPropertiesPtrType) ToActiveDirectoryPropertiesPtrOutput() ActiveDirectoryPropertiesPtrOutput {
	return i.ToActiveDirectoryPropertiesPtrOutputWithContext(context.Background())
}

func (i *activeDirectoryPropertiesPtrType) ToActiveDirectoryPropertiesPtrOutputWithContext(ctx context.Context) ActiveDirectoryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryPropertiesPtrOutput)
}

// Settings properties for Active Directory (AD).
type ActiveDirectoryPropertiesOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryProperties)(nil)).Elem()
}

func (o ActiveDirectoryPropertiesOutput) ToActiveDirectoryPropertiesOutput() ActiveDirectoryPropertiesOutput {
	return o
}

func (o ActiveDirectoryPropertiesOutput) ToActiveDirectoryPropertiesOutputWithContext(ctx context.Context) ActiveDirectoryPropertiesOutput {
	return o
}

func (o ActiveDirectoryPropertiesOutput) ToActiveDirectoryPropertiesPtrOutput() ActiveDirectoryPropertiesPtrOutput {
	return o.ToActiveDirectoryPropertiesPtrOutputWithContext(context.Background())
}

func (o ActiveDirectoryPropertiesOutput) ToActiveDirectoryPropertiesPtrOutputWithContext(ctx context.Context) ActiveDirectoryPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActiveDirectoryProperties) *ActiveDirectoryProperties {
		return &v
	}).(ActiveDirectoryPropertiesPtrOutput)
}

// Specifies the security identifier (SID) for Azure Storage.
func (o ActiveDirectoryPropertiesOutput) AzureStorageSid() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDirectoryProperties) string { return v.AzureStorageSid }).(pulumi.StringOutput)
}

// Specifies the domain GUID.
func (o ActiveDirectoryPropertiesOutput) DomainGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDirectoryProperties) string { return v.DomainGuid }).(pulumi.StringOutput)
}

// Specifies the primary domain that the AD DNS server is authoritative for.
func (o ActiveDirectoryPropertiesOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDirectoryProperties) string { return v.DomainName }).(pulumi.StringOutput)
}

// Specifies the security identifier (SID).
func (o ActiveDirectoryPropertiesOutput) DomainSid() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDirectoryProperties) string { return v.DomainSid }).(pulumi.StringOutput)
}

// Specifies the Active Directory forest to get.
func (o ActiveDirectoryPropertiesOutput) ForestName() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDirectoryProperties) string { return v.ForestName }).(pulumi.StringOutput)
}

// Specifies the NetBIOS domain name.
func (o ActiveDirectoryPropertiesOutput) NetBiosDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDirectoryProperties) string { return v.NetBiosDomainName }).(pulumi.StringOutput)
}

type ActiveDirectoryPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveDirectoryProperties)(nil)).Elem()
}

func (o ActiveDirectoryPropertiesPtrOutput) ToActiveDirectoryPropertiesPtrOutput() ActiveDirectoryPropertiesPtrOutput {
	return o
}

func (o ActiveDirectoryPropertiesPtrOutput) ToActiveDirectoryPropertiesPtrOutputWithContext(ctx context.Context) ActiveDirectoryPropertiesPtrOutput {
	return o
}

func (o ActiveDirectoryPropertiesPtrOutput) Elem() ActiveDirectoryPropertiesOutput {
	return o.ApplyT(func(v *ActiveDirectoryProperties) ActiveDirectoryProperties {
		if v != nil {
			return *v
		}
		var ret ActiveDirectoryProperties
		return ret
	}).(ActiveDirectoryPropertiesOutput)
}

// Specifies the security identifier (SID) for Azure Storage.
func (o ActiveDirectoryPropertiesPtrOutput) AzureStorageSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AzureStorageSid
	}).(pulumi.StringPtrOutput)
}

// Specifies the domain GUID.
func (o ActiveDirectoryPropertiesPtrOutput) DomainGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DomainGuid
	}).(pulumi.StringPtrOutput)
}

// Specifies the primary domain that the AD DNS server is authoritative for.
func (o ActiveDirectoryPropertiesPtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DomainName
	}).(pulumi.StringPtrOutput)
}

// Specifies the security identifier (SID).
func (o ActiveDirectoryPropertiesPtrOutput) DomainSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DomainSid
	}).(pulumi.StringPtrOutput)
}

// Specifies the Active Directory forest to get.
func (o ActiveDirectoryPropertiesPtrOutput) ForestName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ForestName
	}).(pulumi.StringPtrOutput)
}

// Specifies the NetBIOS domain name.
func (o ActiveDirectoryPropertiesPtrOutput) NetBiosDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryProperties) *string {
		if v == nil {
			return nil
		}
		return &v.NetBiosDomainName
	}).(pulumi.StringPtrOutput)
}

// Settings properties for Active Directory (AD).
type ActiveDirectoryPropertiesResponse struct {
	// Specifies the security identifier (SID) for Azure Storage.
	AzureStorageSid string `pulumi:"azureStorageSid"`
	// Specifies the domain GUID.
	DomainGuid string `pulumi:"domainGuid"`
	// Specifies the primary domain that the AD DNS server is authoritative for.
	DomainName string `pulumi:"domainName"`
	// Specifies the security identifier (SID).
	DomainSid string `pulumi:"domainSid"`
	// Specifies the Active Directory forest to get.
	ForestName string `pulumi:"forestName"`
	// Specifies the NetBIOS domain name.
	NetBiosDomainName string `pulumi:"netBiosDomainName"`
}

// Settings properties for Active Directory (AD).
type ActiveDirectoryPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveDirectoryPropertiesResponse)(nil)).Elem()
}

func (o ActiveDirectoryPropertiesResponseOutput) ToActiveDirectoryPropertiesResponseOutput() ActiveDirectoryPropertiesResponseOutput {
	return o
}

func (o ActiveDirectoryPropertiesResponseOutput) ToActiveDirectoryPropertiesResponseOutputWithContext(ctx context.Context) ActiveDirectoryPropertiesResponseOutput {
	return o
}

// Specifies the security identifier (SID) for Azure Storage.
func (o ActiveDirectoryPropertiesResponseOutput) AzureStorageSid() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDirectoryPropertiesResponse) string { return v.AzureStorageSid }).(pulumi.StringOutput)
}

// Specifies the domain GUID.
func (o ActiveDirectoryPropertiesResponseOutput) DomainGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDirectoryPropertiesResponse) string { return v.DomainGuid }).(pulumi.StringOutput)
}

// Specifies the primary domain that the AD DNS server is authoritative for.
func (o ActiveDirectoryPropertiesResponseOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDirectoryPropertiesResponse) string { return v.DomainName }).(pulumi.StringOutput)
}

// Specifies the security identifier (SID).
func (o ActiveDirectoryPropertiesResponseOutput) DomainSid() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDirectoryPropertiesResponse) string { return v.DomainSid }).(pulumi.StringOutput)
}

// Specifies the Active Directory forest to get.
func (o ActiveDirectoryPropertiesResponseOutput) ForestName() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDirectoryPropertiesResponse) string { return v.ForestName }).(pulumi.StringOutput)
}

// Specifies the NetBIOS domain name.
func (o ActiveDirectoryPropertiesResponseOutput) NetBiosDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v ActiveDirectoryPropertiesResponse) string { return v.NetBiosDomainName }).(pulumi.StringOutput)
}

type ActiveDirectoryPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveDirectoryPropertiesResponse)(nil)).Elem()
}

func (o ActiveDirectoryPropertiesResponsePtrOutput) ToActiveDirectoryPropertiesResponsePtrOutput() ActiveDirectoryPropertiesResponsePtrOutput {
	return o
}

func (o ActiveDirectoryPropertiesResponsePtrOutput) ToActiveDirectoryPropertiesResponsePtrOutputWithContext(ctx context.Context) ActiveDirectoryPropertiesResponsePtrOutput {
	return o
}

func (o ActiveDirectoryPropertiesResponsePtrOutput) Elem() ActiveDirectoryPropertiesResponseOutput {
	return o.ApplyT(func(v *ActiveDirectoryPropertiesResponse) ActiveDirectoryPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ActiveDirectoryPropertiesResponse
		return ret
	}).(ActiveDirectoryPropertiesResponseOutput)
}

// Specifies the security identifier (SID) for Azure Storage.
func (o ActiveDirectoryPropertiesResponsePtrOutput) AzureStorageSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AzureStorageSid
	}).(pulumi.StringPtrOutput)
}

// Specifies the domain GUID.
func (o ActiveDirectoryPropertiesResponsePtrOutput) DomainGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DomainGuid
	}).(pulumi.StringPtrOutput)
}

// Specifies the primary domain that the AD DNS server is authoritative for.
func (o ActiveDirectoryPropertiesResponsePtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DomainName
	}).(pulumi.StringPtrOutput)
}

// Specifies the security identifier (SID).
func (o ActiveDirectoryPropertiesResponsePtrOutput) DomainSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DomainSid
	}).(pulumi.StringPtrOutput)
}

// Specifies the Active Directory forest to get.
func (o ActiveDirectoryPropertiesResponsePtrOutput) ForestName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ForestName
	}).(pulumi.StringPtrOutput)
}

// Specifies the NetBIOS domain name.
func (o ActiveDirectoryPropertiesResponsePtrOutput) NetBiosDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.NetBiosDomainName
	}).(pulumi.StringPtrOutput)
}

// Settings for Azure Files identity based authentication.
type AzureFilesIdentityBasedAuthentication struct {
	// Required if choose AD.
	ActiveDirectoryProperties *ActiveDirectoryProperties `pulumi:"activeDirectoryProperties"`
	// Indicates the directory service used.
	DirectoryServiceOptions string `pulumi:"directoryServiceOptions"`
}

// AzureFilesIdentityBasedAuthenticationInput is an input type that accepts AzureFilesIdentityBasedAuthenticationArgs and AzureFilesIdentityBasedAuthenticationOutput values.
// You can construct a concrete instance of `AzureFilesIdentityBasedAuthenticationInput` via:
//
//	AzureFilesIdentityBasedAuthenticationArgs{...}
type AzureFilesIdentityBasedAuthenticationInput interface {
	pulumi.Input

	ToAzureFilesIdentityBasedAuthenticationOutput() AzureFilesIdentityBasedAuthenticationOutput
	ToAzureFilesIdentityBasedAuthenticationOutputWithContext(context.Context) AzureFilesIdentityBasedAuthenticationOutput
}

// Settings for Azure Files identity based authentication.
type AzureFilesIdentityBasedAuthenticationArgs struct {
	// Required if choose AD.
	ActiveDirectoryProperties ActiveDirectoryPropertiesPtrInput `pulumi:"activeDirectoryProperties"`
	// Indicates the directory service used.
	DirectoryServiceOptions pulumi.StringInput `pulumi:"directoryServiceOptions"`
}

func (AzureFilesIdentityBasedAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFilesIdentityBasedAuthentication)(nil)).Elem()
}

func (i AzureFilesIdentityBasedAuthenticationArgs) ToAzureFilesIdentityBasedAuthenticationOutput() AzureFilesIdentityBasedAuthenticationOutput {
	return i.ToAzureFilesIdentityBasedAuthenticationOutputWithContext(context.Background())
}

func (i AzureFilesIdentityBasedAuthenticationArgs) ToAzureFilesIdentityBasedAuthenticationOutputWithContext(ctx context.Context) AzureFilesIdentityBasedAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFilesIdentityBasedAuthenticationOutput)
}

func (i AzureFilesIdentityBasedAuthenticationArgs) ToAzureFilesIdentityBasedAuthenticationPtrOutput() AzureFilesIdentityBasedAuthenticationPtrOutput {
	return i.ToAzureFilesIdentityBasedAuthenticationPtrOutputWithContext(context.Background())
}

func (i AzureFilesIdentityBasedAuthenticationArgs) ToAzureFilesIdentityBasedAuthenticationPtrOutputWithContext(ctx context.Context) AzureFilesIdentityBasedAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFilesIdentityBasedAuthenticationOutput).ToAzureFilesIdentityBasedAuthenticationPtrOutputWithContext(ctx)
}

// AzureFilesIdentityBasedAuthenticationPtrInput is an input type that accepts AzureFilesIdentityBasedAuthenticationArgs, AzureFilesIdentityBasedAuthenticationPtr and AzureFilesIdentityBasedAuthenticationPtrOutput values.
// You can construct a concrete instance of `AzureFilesIdentityBasedAuthenticationPtrInput` via:
//
//	        AzureFilesIdentityBasedAuthenticationArgs{...}
//
//	or:
//
//	        nil
type AzureFilesIdentityBasedAuthenticationPtrInput interface {
	pulumi.Input

	ToAzureFilesIdentityBasedAuthenticationPtrOutput() AzureFilesIdentityBasedAuthenticationPtrOutput
	ToAzureFilesIdentityBasedAuthenticationPtrOutputWithContext(context.Context) AzureFilesIdentityBasedAuthenticationPtrOutput
}

type azureFilesIdentityBasedAuthenticationPtrType AzureFilesIdentityBasedAuthenticationArgs

func AzureFilesIdentityBasedAuthenticationPtr(v *AzureFilesIdentityBasedAuthenticationArgs) AzureFilesIdentityBasedAuthenticationPtrInput {
	return (*azureFilesIdentityBasedAuthenticationPtrType)(v)
}

func (*azureFilesIdentityBasedAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFilesIdentityBasedAuthentication)(nil)).Elem()
}

func (i *azureFilesIdentityBasedAuthenticationPtrType) ToAzureFilesIdentityBasedAuthenticationPtrOutput() AzureFilesIdentityBasedAuthenticationPtrOutput {
	return i.ToAzureFilesIdentityBasedAuthenticationPtrOutputWithContext(context.Background())
}

func (i *azureFilesIdentityBasedAuthenticationPtrType) ToAzureFilesIdentityBasedAuthenticationPtrOutputWithContext(ctx context.Context) AzureFilesIdentityBasedAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFilesIdentityBasedAuthenticationPtrOutput)
}

// Settings for Azure Files identity based authentication.
type AzureFilesIdentityBasedAuthenticationOutput struct{ *pulumi.OutputState }

func (AzureFilesIdentityBasedAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFilesIdentityBasedAuthentication)(nil)).Elem()
}

func (o AzureFilesIdentityBasedAuthenticationOutput) ToAzureFilesIdentityBasedAuthenticationOutput() AzureFilesIdentityBasedAuthenticationOutput {
	return o
}

func (o AzureFilesIdentityBasedAuthenticationOutput) ToAzureFilesIdentityBasedAuthenticationOutputWithContext(ctx context.Context) AzureFilesIdentityBasedAuthenticationOutput {
	return o
}

func (o AzureFilesIdentityBasedAuthenticationOutput) ToAzureFilesIdentityBasedAuthenticationPtrOutput() AzureFilesIdentityBasedAuthenticationPtrOutput {
	return o.ToAzureFilesIdentityBasedAuthenticationPtrOutputWithContext(context.Background())
}

func (o AzureFilesIdentityBasedAuthenticationOutput) ToAzureFilesIdentityBasedAuthenticationPtrOutputWithContext(ctx context.Context) AzureFilesIdentityBasedAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureFilesIdentityBasedAuthentication) *AzureFilesIdentityBasedAuthentication {
		return &v
	}).(AzureFilesIdentityBasedAuthenticationPtrOutput)
}

// Required if choose AD.
func (o AzureFilesIdentityBasedAuthenticationOutput) ActiveDirectoryProperties() ActiveDirectoryPropertiesPtrOutput {
	return o.ApplyT(func(v AzureFilesIdentityBasedAuthentication) *ActiveDirectoryProperties {
		return v.ActiveDirectoryProperties
	}).(ActiveDirectoryPropertiesPtrOutput)
}

// Indicates the directory service used.
func (o AzureFilesIdentityBasedAuthenticationOutput) DirectoryServiceOptions() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFilesIdentityBasedAuthentication) string { return v.DirectoryServiceOptions }).(pulumi.StringOutput)
}

type AzureFilesIdentityBasedAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (AzureFilesIdentityBasedAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFilesIdentityBasedAuthentication)(nil)).Elem()
}

func (o AzureFilesIdentityBasedAuthenticationPtrOutput) ToAzureFilesIdentityBasedAuthenticationPtrOutput() AzureFilesIdentityBasedAuthenticationPtrOutput {
	return o
}

func (o AzureFilesIdentityBasedAuthenticationPtrOutput) ToAzureFilesIdentityBasedAuthenticationPtrOutputWithContext(ctx context.Context) AzureFilesIdentityBasedAuthenticationPtrOutput {
	return o
}

func (o AzureFilesIdentityBasedAuthenticationPtrOutput) Elem() AzureFilesIdentityBasedAuthenticationOutput {
	return o.ApplyT(func(v *AzureFilesIdentityBasedAuthentication) AzureFilesIdentityBasedAuthentication {
		if v != nil {
			return *v
		}
		var ret AzureFilesIdentityBasedAuthentication
		return ret
	}).(AzureFilesIdentityBasedAuthenticationOutput)
}

// Required if choose AD.
func (o AzureFilesIdentityBasedAuthenticationPtrOutput) ActiveDirectoryProperties() ActiveDirectoryPropertiesPtrOutput {
	return o.ApplyT(func(v *AzureFilesIdentityBasedAuthentication) *ActiveDirectoryProperties {
		if v == nil {
			return nil
		}
		return v.ActiveDirectoryProperties
	}).(ActiveDirectoryPropertiesPtrOutput)
}

// Indicates the directory service used.
func (o AzureFilesIdentityBasedAuthenticationPtrOutput) DirectoryServiceOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFilesIdentityBasedAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.DirectoryServiceOptions
	}).(pulumi.StringPtrOutput)
}

// Settings for Azure Files identity based authentication.
type AzureFilesIdentityBasedAuthenticationResponse struct {
	// Required if choose AD.
	ActiveDirectoryProperties *ActiveDirectoryPropertiesResponse `pulumi:"activeDirectoryProperties"`
	// Indicates the directory service used.
	DirectoryServiceOptions string `pulumi:"directoryServiceOptions"`
}

// Settings for Azure Files identity based authentication.
type AzureFilesIdentityBasedAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (AzureFilesIdentityBasedAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFilesIdentityBasedAuthenticationResponse)(nil)).Elem()
}

func (o AzureFilesIdentityBasedAuthenticationResponseOutput) ToAzureFilesIdentityBasedAuthenticationResponseOutput() AzureFilesIdentityBasedAuthenticationResponseOutput {
	return o
}

func (o AzureFilesIdentityBasedAuthenticationResponseOutput) ToAzureFilesIdentityBasedAuthenticationResponseOutputWithContext(ctx context.Context) AzureFilesIdentityBasedAuthenticationResponseOutput {
	return o
}

// Required if choose AD.
func (o AzureFilesIdentityBasedAuthenticationResponseOutput) ActiveDirectoryProperties() ActiveDirectoryPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AzureFilesIdentityBasedAuthenticationResponse) *ActiveDirectoryPropertiesResponse {
		return v.ActiveDirectoryProperties
	}).(ActiveDirectoryPropertiesResponsePtrOutput)
}

// Indicates the directory service used.
func (o AzureFilesIdentityBasedAuthenticationResponseOutput) DirectoryServiceOptions() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFilesIdentityBasedAuthenticationResponse) string { return v.DirectoryServiceOptions }).(pulumi.StringOutput)
}

type AzureFilesIdentityBasedAuthenticationResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFilesIdentityBasedAuthenticationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFilesIdentityBasedAuthenticationResponse)(nil)).Elem()
}

func (o AzureFilesIdentityBasedAuthenticationResponsePtrOutput) ToAzureFilesIdentityBasedAuthenticationResponsePtrOutput() AzureFilesIdentityBasedAuthenticationResponsePtrOutput {
	return o
}

func (o AzureFilesIdentityBasedAuthenticationResponsePtrOutput) ToAzureFilesIdentityBasedAuthenticationResponsePtrOutputWithContext(ctx context.Context) AzureFilesIdentityBasedAuthenticationResponsePtrOutput {
	return o
}

func (o AzureFilesIdentityBasedAuthenticationResponsePtrOutput) Elem() AzureFilesIdentityBasedAuthenticationResponseOutput {
	return o.ApplyT(func(v *AzureFilesIdentityBasedAuthenticationResponse) AzureFilesIdentityBasedAuthenticationResponse {
		if v != nil {
			return *v
		}
		var ret AzureFilesIdentityBasedAuthenticationResponse
		return ret
	}).(AzureFilesIdentityBasedAuthenticationResponseOutput)
}

// Required if choose AD.
func (o AzureFilesIdentityBasedAuthenticationResponsePtrOutput) ActiveDirectoryProperties() ActiveDirectoryPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *AzureFilesIdentityBasedAuthenticationResponse) *ActiveDirectoryPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.ActiveDirectoryProperties
	}).(ActiveDirectoryPropertiesResponsePtrOutput)
}

// Indicates the directory service used.
func (o AzureFilesIdentityBasedAuthenticationResponsePtrOutput) DirectoryServiceOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFilesIdentityBasedAuthenticationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DirectoryServiceOptions
	}).(pulumi.StringPtrOutput)
}

// An object that defines the blob inventory rule. Each definition consists of a set of filters.
type BlobInventoryPolicyDefinition struct {
	// An object that defines the filter set.
	Filters BlobInventoryPolicyFilter `pulumi:"filters"`
}

// BlobInventoryPolicyDefinitionInput is an input type that accepts BlobInventoryPolicyDefinitionArgs and BlobInventoryPolicyDefinitionOutput values.
// You can construct a concrete instance of `BlobInventoryPolicyDefinitionInput` via:
//
//	BlobInventoryPolicyDefinitionArgs{...}
type BlobInventoryPolicyDefinitionInput interface {
	pulumi.Input

	ToBlobInventoryPolicyDefinitionOutput() BlobInventoryPolicyDefinitionOutput
	ToBlobInventoryPolicyDefinitionOutputWithContext(context.Context) BlobInventoryPolicyDefinitionOutput
}

// An object that defines the blob inventory rule. Each definition consists of a set of filters.
type BlobInventoryPolicyDefinitionArgs struct {
	// An object that defines the filter set.
	Filters BlobInventoryPolicyFilterInput `pulumi:"filters"`
}

func (BlobInventoryPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobInventoryPolicyDefinition)(nil)).Elem()
}

func (i BlobInventoryPolicyDefinitionArgs) ToBlobInventoryPolicyDefinitionOutput() BlobInventoryPolicyDefinitionOutput {
	return i.ToBlobInventoryPolicyDefinitionOutputWithContext(context.Background())
}

func (i BlobInventoryPolicyDefinitionArgs) ToBlobInventoryPolicyDefinitionOutputWithContext(ctx context.Context) BlobInventoryPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobInventoryPolicyDefinitionOutput)
}

// An object that defines the blob inventory rule. Each definition consists of a set of filters.
type BlobInventoryPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (BlobInventoryPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobInventoryPolicyDefinition)(nil)).Elem()
}

func (o BlobInventoryPolicyDefinitionOutput) ToBlobInventoryPolicyDefinitionOutput() BlobInventoryPolicyDefinitionOutput {
	return o
}

func (o BlobInventoryPolicyDefinitionOutput) ToBlobInventoryPolicyDefinitionOutputWithContext(ctx context.Context) BlobInventoryPolicyDefinitionOutput {
	return o
}

// An object that defines the filter set.
func (o BlobInventoryPolicyDefinitionOutput) Filters() BlobInventoryPolicyFilterOutput {
	return o.ApplyT(func(v BlobInventoryPolicyDefinition) BlobInventoryPolicyFilter { return v.Filters }).(BlobInventoryPolicyFilterOutput)
}

// An object that defines the blob inventory rule. Each definition consists of a set of filters.
type BlobInventoryPolicyDefinitionResponse struct {
	// An object that defines the filter set.
	Filters BlobInventoryPolicyFilterResponse `pulumi:"filters"`
}

// An object that defines the blob inventory rule. Each definition consists of a set of filters.
type BlobInventoryPolicyDefinitionResponseOutput struct{ *pulumi.OutputState }

func (BlobInventoryPolicyDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobInventoryPolicyDefinitionResponse)(nil)).Elem()
}

func (o BlobInventoryPolicyDefinitionResponseOutput) ToBlobInventoryPolicyDefinitionResponseOutput() BlobInventoryPolicyDefinitionResponseOutput {
	return o
}

func (o BlobInventoryPolicyDefinitionResponseOutput) ToBlobInventoryPolicyDefinitionResponseOutputWithContext(ctx context.Context) BlobInventoryPolicyDefinitionResponseOutput {
	return o
}

// An object that defines the filter set.
func (o BlobInventoryPolicyDefinitionResponseOutput) Filters() BlobInventoryPolicyFilterResponseOutput {
	return o.ApplyT(func(v BlobInventoryPolicyDefinitionResponse) BlobInventoryPolicyFilterResponse { return v.Filters }).(BlobInventoryPolicyFilterResponseOutput)
}

// An object that defines the blob inventory rule filter conditions.
type BlobInventoryPolicyFilter struct {
	// An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs.
	BlobTypes []string `pulumi:"blobTypes"`
	// Includes blob versions in blob inventory when value set to true.
	IncludeBlobVersions *bool `pulumi:"includeBlobVersions"`
	// Includes blob snapshots in blob inventory when value set to true.
	IncludeSnapshots *bool `pulumi:"includeSnapshots"`
	// An array of strings for blob prefixes to be matched.
	PrefixMatch []string `pulumi:"prefixMatch"`
}

// BlobInventoryPolicyFilterInput is an input type that accepts BlobInventoryPolicyFilterArgs and BlobInventoryPolicyFilterOutput values.
// You can construct a concrete instance of `BlobInventoryPolicyFilterInput` via:
//
//	BlobInventoryPolicyFilterArgs{...}
type BlobInventoryPolicyFilterInput interface {
	pulumi.Input

	ToBlobInventoryPolicyFilterOutput() BlobInventoryPolicyFilterOutput
	ToBlobInventoryPolicyFilterOutputWithContext(context.Context) BlobInventoryPolicyFilterOutput
}

// An object that defines the blob inventory rule filter conditions.
type BlobInventoryPolicyFilterArgs struct {
	// An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs.
	BlobTypes pulumi.StringArrayInput `pulumi:"blobTypes"`
	// Includes blob versions in blob inventory when value set to true.
	IncludeBlobVersions pulumi.BoolPtrInput `pulumi:"includeBlobVersions"`
	// Includes blob snapshots in blob inventory when value set to true.
	IncludeSnapshots pulumi.BoolPtrInput `pulumi:"includeSnapshots"`
	// An array of strings for blob prefixes to be matched.
	PrefixMatch pulumi.StringArrayInput `pulumi:"prefixMatch"`
}

func (BlobInventoryPolicyFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobInventoryPolicyFilter)(nil)).Elem()
}

func (i BlobInventoryPolicyFilterArgs) ToBlobInventoryPolicyFilterOutput() BlobInventoryPolicyFilterOutput {
	return i.ToBlobInventoryPolicyFilterOutputWithContext(context.Background())
}

func (i BlobInventoryPolicyFilterArgs) ToBlobInventoryPolicyFilterOutputWithContext(ctx context.Context) BlobInventoryPolicyFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobInventoryPolicyFilterOutput)
}

// An object that defines the blob inventory rule filter conditions.
type BlobInventoryPolicyFilterOutput struct{ *pulumi.OutputState }

func (BlobInventoryPolicyFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobInventoryPolicyFilter)(nil)).Elem()
}

func (o BlobInventoryPolicyFilterOutput) ToBlobInventoryPolicyFilterOutput() BlobInventoryPolicyFilterOutput {
	return o
}

func (o BlobInventoryPolicyFilterOutput) ToBlobInventoryPolicyFilterOutputWithContext(ctx context.Context) BlobInventoryPolicyFilterOutput {
	return o
}

// An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs.
func (o BlobInventoryPolicyFilterOutput) BlobTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobInventoryPolicyFilter) []string { return v.BlobTypes }).(pulumi.StringArrayOutput)
}

// Includes blob versions in blob inventory when value set to true.
func (o BlobInventoryPolicyFilterOutput) IncludeBlobVersions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlobInventoryPolicyFilter) *bool { return v.IncludeBlobVersions }).(pulumi.BoolPtrOutput)
}

// Includes blob snapshots in blob inventory when value set to true.
func (o BlobInventoryPolicyFilterOutput) IncludeSnapshots() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlobInventoryPolicyFilter) *bool { return v.IncludeSnapshots }).(pulumi.BoolPtrOutput)
}

// An array of strings for blob prefixes to be matched.
func (o BlobInventoryPolicyFilterOutput) PrefixMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobInventoryPolicyFilter) []string { return v.PrefixMatch }).(pulumi.StringArrayOutput)
}

// An object that defines the blob inventory rule filter conditions.
type BlobInventoryPolicyFilterResponse struct {
	// An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs.
	BlobTypes []string `pulumi:"blobTypes"`
	// Includes blob versions in blob inventory when value set to true.
	IncludeBlobVersions *bool `pulumi:"includeBlobVersions"`
	// Includes blob snapshots in blob inventory when value set to true.
	IncludeSnapshots *bool `pulumi:"includeSnapshots"`
	// An array of strings for blob prefixes to be matched.
	PrefixMatch []string `pulumi:"prefixMatch"`
}

// An object that defines the blob inventory rule filter conditions.
type BlobInventoryPolicyFilterResponseOutput struct{ *pulumi.OutputState }

func (BlobInventoryPolicyFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobInventoryPolicyFilterResponse)(nil)).Elem()
}

func (o BlobInventoryPolicyFilterResponseOutput) ToBlobInventoryPolicyFilterResponseOutput() BlobInventoryPolicyFilterResponseOutput {
	return o
}

func (o BlobInventoryPolicyFilterResponseOutput) ToBlobInventoryPolicyFilterResponseOutputWithContext(ctx context.Context) BlobInventoryPolicyFilterResponseOutput {
	return o
}

// An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs.
func (o BlobInventoryPolicyFilterResponseOutput) BlobTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobInventoryPolicyFilterResponse) []string { return v.BlobTypes }).(pulumi.StringArrayOutput)
}

// Includes blob versions in blob inventory when value set to true.
func (o BlobInventoryPolicyFilterResponseOutput) IncludeBlobVersions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlobInventoryPolicyFilterResponse) *bool { return v.IncludeBlobVersions }).(pulumi.BoolPtrOutput)
}

// Includes blob snapshots in blob inventory when value set to true.
func (o BlobInventoryPolicyFilterResponseOutput) IncludeSnapshots() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlobInventoryPolicyFilterResponse) *bool { return v.IncludeSnapshots }).(pulumi.BoolPtrOutput)
}

// An array of strings for blob prefixes to be matched.
func (o BlobInventoryPolicyFilterResponseOutput) PrefixMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobInventoryPolicyFilterResponse) []string { return v.PrefixMatch }).(pulumi.StringArrayOutput)
}

// An object that wraps the blob inventory rule. Each rule is uniquely defined by name.
type BlobInventoryPolicyRule struct {
	// An object that defines the blob inventory policy rule.
	Definition BlobInventoryPolicyDefinition `pulumi:"definition"`
	// Rule is enabled when set to true.
	Enabled bool `pulumi:"enabled"`
	// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
	Name string `pulumi:"name"`
}

// BlobInventoryPolicyRuleInput is an input type that accepts BlobInventoryPolicyRuleArgs and BlobInventoryPolicyRuleOutput values.
// You can construct a concrete instance of `BlobInventoryPolicyRuleInput` via:
//
//	BlobInventoryPolicyRuleArgs{...}
type BlobInventoryPolicyRuleInput interface {
	pulumi.Input

	ToBlobInventoryPolicyRuleOutput() BlobInventoryPolicyRuleOutput
	ToBlobInventoryPolicyRuleOutputWithContext(context.Context) BlobInventoryPolicyRuleOutput
}

// An object that wraps the blob inventory rule. Each rule is uniquely defined by name.
type BlobInventoryPolicyRuleArgs struct {
	// An object that defines the blob inventory policy rule.
	Definition BlobInventoryPolicyDefinitionInput `pulumi:"definition"`
	// Rule is enabled when set to true.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
	Name pulumi.StringInput `pulumi:"name"`
}

func (BlobInventoryPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobInventoryPolicyRule)(nil)).Elem()
}

func (i BlobInventoryPolicyRuleArgs) ToBlobInventoryPolicyRuleOutput() BlobInventoryPolicyRuleOutput {
	return i.ToBlobInventoryPolicyRuleOutputWithContext(context.Background())
}

func (i BlobInventoryPolicyRuleArgs) ToBlobInventoryPolicyRuleOutputWithContext(ctx context.Context) BlobInventoryPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobInventoryPolicyRuleOutput)
}

// BlobInventoryPolicyRuleArrayInput is an input type that accepts BlobInventoryPolicyRuleArray and BlobInventoryPolicyRuleArrayOutput values.
// You can construct a concrete instance of `BlobInventoryPolicyRuleArrayInput` via:
//
//	BlobInventoryPolicyRuleArray{ BlobInventoryPolicyRuleArgs{...} }
type BlobInventoryPolicyRuleArrayInput interface {
	pulumi.Input

	ToBlobInventoryPolicyRuleArrayOutput() BlobInventoryPolicyRuleArrayOutput
	ToBlobInventoryPolicyRuleArrayOutputWithContext(context.Context) BlobInventoryPolicyRuleArrayOutput
}

type BlobInventoryPolicyRuleArray []BlobInventoryPolicyRuleInput

func (BlobInventoryPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlobInventoryPolicyRule)(nil)).Elem()
}

func (i BlobInventoryPolicyRuleArray) ToBlobInventoryPolicyRuleArrayOutput() BlobInventoryPolicyRuleArrayOutput {
	return i.ToBlobInventoryPolicyRuleArrayOutputWithContext(context.Background())
}

func (i BlobInventoryPolicyRuleArray) ToBlobInventoryPolicyRuleArrayOutputWithContext(ctx context.Context) BlobInventoryPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobInventoryPolicyRuleArrayOutput)
}

// An object that wraps the blob inventory rule. Each rule is uniquely defined by name.
type BlobInventoryPolicyRuleOutput struct{ *pulumi.OutputState }

func (BlobInventoryPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobInventoryPolicyRule)(nil)).Elem()
}

func (o BlobInventoryPolicyRuleOutput) ToBlobInventoryPolicyRuleOutput() BlobInventoryPolicyRuleOutput {
	return o
}

func (o BlobInventoryPolicyRuleOutput) ToBlobInventoryPolicyRuleOutputWithContext(ctx context.Context) BlobInventoryPolicyRuleOutput {
	return o
}

// An object that defines the blob inventory policy rule.
func (o BlobInventoryPolicyRuleOutput) Definition() BlobInventoryPolicyDefinitionOutput {
	return o.ApplyT(func(v BlobInventoryPolicyRule) BlobInventoryPolicyDefinition { return v.Definition }).(BlobInventoryPolicyDefinitionOutput)
}

// Rule is enabled when set to true.
func (o BlobInventoryPolicyRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BlobInventoryPolicyRule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
func (o BlobInventoryPolicyRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BlobInventoryPolicyRule) string { return v.Name }).(pulumi.StringOutput)
}

type BlobInventoryPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (BlobInventoryPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlobInventoryPolicyRule)(nil)).Elem()
}

func (o BlobInventoryPolicyRuleArrayOutput) ToBlobInventoryPolicyRuleArrayOutput() BlobInventoryPolicyRuleArrayOutput {
	return o
}

func (o BlobInventoryPolicyRuleArrayOutput) ToBlobInventoryPolicyRuleArrayOutputWithContext(ctx context.Context) BlobInventoryPolicyRuleArrayOutput {
	return o
}

func (o BlobInventoryPolicyRuleArrayOutput) Index(i pulumi.IntInput) BlobInventoryPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BlobInventoryPolicyRule {
		return vs[0].([]BlobInventoryPolicyRule)[vs[1].(int)]
	}).(BlobInventoryPolicyRuleOutput)
}

// An object that wraps the blob inventory rule. Each rule is uniquely defined by name.
type BlobInventoryPolicyRuleResponse struct {
	// An object that defines the blob inventory policy rule.
	Definition BlobInventoryPolicyDefinitionResponse `pulumi:"definition"`
	// Rule is enabled when set to true.
	Enabled bool `pulumi:"enabled"`
	// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
	Name string `pulumi:"name"`
}

// An object that wraps the blob inventory rule. Each rule is uniquely defined by name.
type BlobInventoryPolicyRuleResponseOutput struct{ *pulumi.OutputState }

func (BlobInventoryPolicyRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobInventoryPolicyRuleResponse)(nil)).Elem()
}

func (o BlobInventoryPolicyRuleResponseOutput) ToBlobInventoryPolicyRuleResponseOutput() BlobInventoryPolicyRuleResponseOutput {
	return o
}

func (o BlobInventoryPolicyRuleResponseOutput) ToBlobInventoryPolicyRuleResponseOutputWithContext(ctx context.Context) BlobInventoryPolicyRuleResponseOutput {
	return o
}

// An object that defines the blob inventory policy rule.
func (o BlobInventoryPolicyRuleResponseOutput) Definition() BlobInventoryPolicyDefinitionResponseOutput {
	return o.ApplyT(func(v BlobInventoryPolicyRuleResponse) BlobInventoryPolicyDefinitionResponse { return v.Definition }).(BlobInventoryPolicyDefinitionResponseOutput)
}

// Rule is enabled when set to true.
func (o BlobInventoryPolicyRuleResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BlobInventoryPolicyRuleResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
func (o BlobInventoryPolicyRuleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BlobInventoryPolicyRuleResponse) string { return v.Name }).(pulumi.StringOutput)
}

type BlobInventoryPolicyRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (BlobInventoryPolicyRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlobInventoryPolicyRuleResponse)(nil)).Elem()
}

func (o BlobInventoryPolicyRuleResponseArrayOutput) ToBlobInventoryPolicyRuleResponseArrayOutput() BlobInventoryPolicyRuleResponseArrayOutput {
	return o
}

func (o BlobInventoryPolicyRuleResponseArrayOutput) ToBlobInventoryPolicyRuleResponseArrayOutputWithContext(ctx context.Context) BlobInventoryPolicyRuleResponseArrayOutput {
	return o
}

func (o BlobInventoryPolicyRuleResponseArrayOutput) Index(i pulumi.IntInput) BlobInventoryPolicyRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BlobInventoryPolicyRuleResponse {
		return vs[0].([]BlobInventoryPolicyRuleResponse)[vs[1].(int)]
	}).(BlobInventoryPolicyRuleResponseOutput)
}

// The storage account blob inventory policy rules.
type BlobInventoryPolicySchema struct {
	// Container name where blob inventory files are stored. Must be pre-created.
	Destination string `pulumi:"destination"`
	// Policy is enabled if set to true.
	Enabled bool `pulumi:"enabled"`
	// The storage account blob inventory policy rules. The rule is applied when it is enabled.
	Rules []BlobInventoryPolicyRule `pulumi:"rules"`
	// The valid value is Inventory
	Type string `pulumi:"type"`
}

// BlobInventoryPolicySchemaInput is an input type that accepts BlobInventoryPolicySchemaArgs and BlobInventoryPolicySchemaOutput values.
// You can construct a concrete instance of `BlobInventoryPolicySchemaInput` via:
//
//	BlobInventoryPolicySchemaArgs{...}
type BlobInventoryPolicySchemaInput interface {
	pulumi.Input

	ToBlobInventoryPolicySchemaOutput() BlobInventoryPolicySchemaOutput
	ToBlobInventoryPolicySchemaOutputWithContext(context.Context) BlobInventoryPolicySchemaOutput
}

// The storage account blob inventory policy rules.
type BlobInventoryPolicySchemaArgs struct {
	// Container name where blob inventory files are stored. Must be pre-created.
	Destination pulumi.StringInput `pulumi:"destination"`
	// Policy is enabled if set to true.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The storage account blob inventory policy rules. The rule is applied when it is enabled.
	Rules BlobInventoryPolicyRuleArrayInput `pulumi:"rules"`
	// The valid value is Inventory
	Type pulumi.StringInput `pulumi:"type"`
}

func (BlobInventoryPolicySchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobInventoryPolicySchema)(nil)).Elem()
}

func (i BlobInventoryPolicySchemaArgs) ToBlobInventoryPolicySchemaOutput() BlobInventoryPolicySchemaOutput {
	return i.ToBlobInventoryPolicySchemaOutputWithContext(context.Background())
}

func (i BlobInventoryPolicySchemaArgs) ToBlobInventoryPolicySchemaOutputWithContext(ctx context.Context) BlobInventoryPolicySchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobInventoryPolicySchemaOutput)
}

// The storage account blob inventory policy rules.
type BlobInventoryPolicySchemaOutput struct{ *pulumi.OutputState }

func (BlobInventoryPolicySchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobInventoryPolicySchema)(nil)).Elem()
}

func (o BlobInventoryPolicySchemaOutput) ToBlobInventoryPolicySchemaOutput() BlobInventoryPolicySchemaOutput {
	return o
}

func (o BlobInventoryPolicySchemaOutput) ToBlobInventoryPolicySchemaOutputWithContext(ctx context.Context) BlobInventoryPolicySchemaOutput {
	return o
}

// Container name where blob inventory files are stored. Must be pre-created.
func (o BlobInventoryPolicySchemaOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v BlobInventoryPolicySchema) string { return v.Destination }).(pulumi.StringOutput)
}

// Policy is enabled if set to true.
func (o BlobInventoryPolicySchemaOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BlobInventoryPolicySchema) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The storage account blob inventory policy rules. The rule is applied when it is enabled.
func (o BlobInventoryPolicySchemaOutput) Rules() BlobInventoryPolicyRuleArrayOutput {
	return o.ApplyT(func(v BlobInventoryPolicySchema) []BlobInventoryPolicyRule { return v.Rules }).(BlobInventoryPolicyRuleArrayOutput)
}

// The valid value is Inventory
func (o BlobInventoryPolicySchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobInventoryPolicySchema) string { return v.Type }).(pulumi.StringOutput)
}

// The storage account blob inventory policy rules.
type BlobInventoryPolicySchemaResponse struct {
	// Container name where blob inventory files are stored. Must be pre-created.
	Destination string `pulumi:"destination"`
	// Policy is enabled if set to true.
	Enabled bool `pulumi:"enabled"`
	// The storage account blob inventory policy rules. The rule is applied when it is enabled.
	Rules []BlobInventoryPolicyRuleResponse `pulumi:"rules"`
	// The valid value is Inventory
	Type string `pulumi:"type"`
}

// The storage account blob inventory policy rules.
type BlobInventoryPolicySchemaResponseOutput struct{ *pulumi.OutputState }

func (BlobInventoryPolicySchemaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobInventoryPolicySchemaResponse)(nil)).Elem()
}

func (o BlobInventoryPolicySchemaResponseOutput) ToBlobInventoryPolicySchemaResponseOutput() BlobInventoryPolicySchemaResponseOutput {
	return o
}

func (o BlobInventoryPolicySchemaResponseOutput) ToBlobInventoryPolicySchemaResponseOutputWithContext(ctx context.Context) BlobInventoryPolicySchemaResponseOutput {
	return o
}

// Container name where blob inventory files are stored. Must be pre-created.
func (o BlobInventoryPolicySchemaResponseOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v BlobInventoryPolicySchemaResponse) string { return v.Destination }).(pulumi.StringOutput)
}

// Policy is enabled if set to true.
func (o BlobInventoryPolicySchemaResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BlobInventoryPolicySchemaResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The storage account blob inventory policy rules. The rule is applied when it is enabled.
func (o BlobInventoryPolicySchemaResponseOutput) Rules() BlobInventoryPolicyRuleResponseArrayOutput {
	return o.ApplyT(func(v BlobInventoryPolicySchemaResponse) []BlobInventoryPolicyRuleResponse { return v.Rules }).(BlobInventoryPolicyRuleResponseArrayOutput)
}

// The valid value is Inventory
func (o BlobInventoryPolicySchemaResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobInventoryPolicySchemaResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Blob restore parameters
type BlobRestoreParametersResponse struct {
	// Blob ranges to restore.
	BlobRanges []BlobRestoreRangeResponse `pulumi:"blobRanges"`
	// Restore blob to the specified time.
	TimeToRestore string `pulumi:"timeToRestore"`
}

// Blob restore parameters
type BlobRestoreParametersResponseOutput struct{ *pulumi.OutputState }

func (BlobRestoreParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobRestoreParametersResponse)(nil)).Elem()
}

func (o BlobRestoreParametersResponseOutput) ToBlobRestoreParametersResponseOutput() BlobRestoreParametersResponseOutput {
	return o
}

func (o BlobRestoreParametersResponseOutput) ToBlobRestoreParametersResponseOutputWithContext(ctx context.Context) BlobRestoreParametersResponseOutput {
	return o
}

// Blob ranges to restore.
func (o BlobRestoreParametersResponseOutput) BlobRanges() BlobRestoreRangeResponseArrayOutput {
	return o.ApplyT(func(v BlobRestoreParametersResponse) []BlobRestoreRangeResponse { return v.BlobRanges }).(BlobRestoreRangeResponseArrayOutput)
}

// Restore blob to the specified time.
func (o BlobRestoreParametersResponseOutput) TimeToRestore() pulumi.StringOutput {
	return o.ApplyT(func(v BlobRestoreParametersResponse) string { return v.TimeToRestore }).(pulumi.StringOutput)
}

// Blob range
type BlobRestoreRangeResponse struct {
	// Blob end range. This is exclusive. Empty means account end.
	EndRange string `pulumi:"endRange"`
	// Blob start range. This is inclusive. Empty means account start.
	StartRange string `pulumi:"startRange"`
}

// Blob range
type BlobRestoreRangeResponseOutput struct{ *pulumi.OutputState }

func (BlobRestoreRangeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobRestoreRangeResponse)(nil)).Elem()
}

func (o BlobRestoreRangeResponseOutput) ToBlobRestoreRangeResponseOutput() BlobRestoreRangeResponseOutput {
	return o
}

func (o BlobRestoreRangeResponseOutput) ToBlobRestoreRangeResponseOutputWithContext(ctx context.Context) BlobRestoreRangeResponseOutput {
	return o
}

// Blob end range. This is exclusive. Empty means account end.
func (o BlobRestoreRangeResponseOutput) EndRange() pulumi.StringOutput {
	return o.ApplyT(func(v BlobRestoreRangeResponse) string { return v.EndRange }).(pulumi.StringOutput)
}

// Blob start range. This is inclusive. Empty means account start.
func (o BlobRestoreRangeResponseOutput) StartRange() pulumi.StringOutput {
	return o.ApplyT(func(v BlobRestoreRangeResponse) string { return v.StartRange }).(pulumi.StringOutput)
}

type BlobRestoreRangeResponseArrayOutput struct{ *pulumi.OutputState }

func (BlobRestoreRangeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlobRestoreRangeResponse)(nil)).Elem()
}

func (o BlobRestoreRangeResponseArrayOutput) ToBlobRestoreRangeResponseArrayOutput() BlobRestoreRangeResponseArrayOutput {
	return o
}

func (o BlobRestoreRangeResponseArrayOutput) ToBlobRestoreRangeResponseArrayOutputWithContext(ctx context.Context) BlobRestoreRangeResponseArrayOutput {
	return o
}

func (o BlobRestoreRangeResponseArrayOutput) Index(i pulumi.IntInput) BlobRestoreRangeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BlobRestoreRangeResponse {
		return vs[0].([]BlobRestoreRangeResponse)[vs[1].(int)]
	}).(BlobRestoreRangeResponseOutput)
}

// Blob restore status.
type BlobRestoreStatusResponse struct {
	// Failure reason when blob restore is failed.
	FailureReason string `pulumi:"failureReason"`
	// Blob restore request parameters.
	Parameters BlobRestoreParametersResponse `pulumi:"parameters"`
	// Id for tracking blob restore request.
	RestoreId string `pulumi:"restoreId"`
	// The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.
	Status string `pulumi:"status"`
}

// Blob restore status.
type BlobRestoreStatusResponseOutput struct{ *pulumi.OutputState }

func (BlobRestoreStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobRestoreStatusResponse)(nil)).Elem()
}

func (o BlobRestoreStatusResponseOutput) ToBlobRestoreStatusResponseOutput() BlobRestoreStatusResponseOutput {
	return o
}

func (o BlobRestoreStatusResponseOutput) ToBlobRestoreStatusResponseOutputWithContext(ctx context.Context) BlobRestoreStatusResponseOutput {
	return o
}

// Failure reason when blob restore is failed.
func (o BlobRestoreStatusResponseOutput) FailureReason() pulumi.StringOutput {
	return o.ApplyT(func(v BlobRestoreStatusResponse) string { return v.FailureReason }).(pulumi.StringOutput)
}

// Blob restore request parameters.
func (o BlobRestoreStatusResponseOutput) Parameters() BlobRestoreParametersResponseOutput {
	return o.ApplyT(func(v BlobRestoreStatusResponse) BlobRestoreParametersResponse { return v.Parameters }).(BlobRestoreParametersResponseOutput)
}

// Id for tracking blob restore request.
func (o BlobRestoreStatusResponseOutput) RestoreId() pulumi.StringOutput {
	return o.ApplyT(func(v BlobRestoreStatusResponse) string { return v.RestoreId }).(pulumi.StringOutput)
}

// The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.
func (o BlobRestoreStatusResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v BlobRestoreStatusResponse) string { return v.Status }).(pulumi.StringOutput)
}

// The blob service properties for change feed events.
type ChangeFeed struct {
	// Indicates whether change feed event logging is enabled for the Blob service.
	Enabled *bool `pulumi:"enabled"`
	// Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.
	RetentionInDays *int `pulumi:"retentionInDays"`
}

// ChangeFeedInput is an input type that accepts ChangeFeedArgs and ChangeFeedOutput values.
// You can construct a concrete instance of `ChangeFeedInput` via:
//
//	ChangeFeedArgs{...}
type ChangeFeedInput interface {
	pulumi.Input

	ToChangeFeedOutput() ChangeFeedOutput
	ToChangeFeedOutputWithContext(context.Context) ChangeFeedOutput
}

// The blob service properties for change feed events.
type ChangeFeedArgs struct {
	// Indicates whether change feed event logging is enabled for the Blob service.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
}

func (ChangeFeedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChangeFeed)(nil)).Elem()
}

func (i ChangeFeedArgs) ToChangeFeedOutput() ChangeFeedOutput {
	return i.ToChangeFeedOutputWithContext(context.Background())
}

func (i ChangeFeedArgs) ToChangeFeedOutputWithContext(ctx context.Context) ChangeFeedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChangeFeedOutput)
}

func (i ChangeFeedArgs) ToChangeFeedPtrOutput() ChangeFeedPtrOutput {
	return i.ToChangeFeedPtrOutputWithContext(context.Background())
}

func (i ChangeFeedArgs) ToChangeFeedPtrOutputWithContext(ctx context.Context) ChangeFeedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChangeFeedOutput).ToChangeFeedPtrOutputWithContext(ctx)
}

// ChangeFeedPtrInput is an input type that accepts ChangeFeedArgs, ChangeFeedPtr and ChangeFeedPtrOutput values.
// You can construct a concrete instance of `ChangeFeedPtrInput` via:
//
//	        ChangeFeedArgs{...}
//
//	or:
//
//	        nil
type ChangeFeedPtrInput interface {
	pulumi.Input

	ToChangeFeedPtrOutput() ChangeFeedPtrOutput
	ToChangeFeedPtrOutputWithContext(context.Context) ChangeFeedPtrOutput
}

type changeFeedPtrType ChangeFeedArgs

func ChangeFeedPtr(v *ChangeFeedArgs) ChangeFeedPtrInput {
	return (*changeFeedPtrType)(v)
}

func (*changeFeedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChangeFeed)(nil)).Elem()
}

func (i *changeFeedPtrType) ToChangeFeedPtrOutput() ChangeFeedPtrOutput {
	return i.ToChangeFeedPtrOutputWithContext(context.Background())
}

func (i *changeFeedPtrType) ToChangeFeedPtrOutputWithContext(ctx context.Context) ChangeFeedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChangeFeedPtrOutput)
}

// The blob service properties for change feed events.
type ChangeFeedOutput struct{ *pulumi.OutputState }

func (ChangeFeedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChangeFeed)(nil)).Elem()
}

func (o ChangeFeedOutput) ToChangeFeedOutput() ChangeFeedOutput {
	return o
}

func (o ChangeFeedOutput) ToChangeFeedOutputWithContext(ctx context.Context) ChangeFeedOutput {
	return o
}

func (o ChangeFeedOutput) ToChangeFeedPtrOutput() ChangeFeedPtrOutput {
	return o.ToChangeFeedPtrOutputWithContext(context.Background())
}

func (o ChangeFeedOutput) ToChangeFeedPtrOutputWithContext(ctx context.Context) ChangeFeedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChangeFeed) *ChangeFeed {
		return &v
	}).(ChangeFeedPtrOutput)
}

// Indicates whether change feed event logging is enabled for the Blob service.
func (o ChangeFeedOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ChangeFeed) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.
func (o ChangeFeedOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChangeFeed) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

type ChangeFeedPtrOutput struct{ *pulumi.OutputState }

func (ChangeFeedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChangeFeed)(nil)).Elem()
}

func (o ChangeFeedPtrOutput) ToChangeFeedPtrOutput() ChangeFeedPtrOutput {
	return o
}

func (o ChangeFeedPtrOutput) ToChangeFeedPtrOutputWithContext(ctx context.Context) ChangeFeedPtrOutput {
	return o
}

func (o ChangeFeedPtrOutput) Elem() ChangeFeedOutput {
	return o.ApplyT(func(v *ChangeFeed) ChangeFeed {
		if v != nil {
			return *v
		}
		var ret ChangeFeed
		return ret
	}).(ChangeFeedOutput)
}

// Indicates whether change feed event logging is enabled for the Blob service.
func (o ChangeFeedPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ChangeFeed) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.
func (o ChangeFeedPtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChangeFeed) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// The blob service properties for change feed events.
type ChangeFeedResponse struct {
	// Indicates whether change feed event logging is enabled for the Blob service.
	Enabled *bool `pulumi:"enabled"`
	// Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.
	RetentionInDays *int `pulumi:"retentionInDays"`
}

// The blob service properties for change feed events.
type ChangeFeedResponseOutput struct{ *pulumi.OutputState }

func (ChangeFeedResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChangeFeedResponse)(nil)).Elem()
}

func (o ChangeFeedResponseOutput) ToChangeFeedResponseOutput() ChangeFeedResponseOutput {
	return o
}

func (o ChangeFeedResponseOutput) ToChangeFeedResponseOutputWithContext(ctx context.Context) ChangeFeedResponseOutput {
	return o
}

// Indicates whether change feed event logging is enabled for the Blob service.
func (o ChangeFeedResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ChangeFeedResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.
func (o ChangeFeedResponseOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChangeFeedResponse) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

type ChangeFeedResponsePtrOutput struct{ *pulumi.OutputState }

func (ChangeFeedResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChangeFeedResponse)(nil)).Elem()
}

func (o ChangeFeedResponsePtrOutput) ToChangeFeedResponsePtrOutput() ChangeFeedResponsePtrOutput {
	return o
}

func (o ChangeFeedResponsePtrOutput) ToChangeFeedResponsePtrOutputWithContext(ctx context.Context) ChangeFeedResponsePtrOutput {
	return o
}

func (o ChangeFeedResponsePtrOutput) Elem() ChangeFeedResponseOutput {
	return o.ApplyT(func(v *ChangeFeedResponse) ChangeFeedResponse {
		if v != nil {
			return *v
		}
		var ret ChangeFeedResponse
		return ret
	}).(ChangeFeedResponseOutput)
}

// Indicates whether change feed event logging is enabled for the Blob service.
func (o ChangeFeedResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ChangeFeedResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.
func (o ChangeFeedResponsePtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChangeFeedResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// Specifies a CORS rule for the Blob service.
type CorsRule struct {
	// Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Required if CorsRule element is present. A list of response headers to expose to CORS clients.
	ExposedHeaders []string `pulumi:"exposedHeaders"`
	// Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.
	MaxAgeInSeconds int `pulumi:"maxAgeInSeconds"`
}

// CorsRuleInput is an input type that accepts CorsRuleArgs and CorsRuleOutput values.
// You can construct a concrete instance of `CorsRuleInput` via:
//
//	CorsRuleArgs{...}
type CorsRuleInput interface {
	pulumi.Input

	ToCorsRuleOutput() CorsRuleOutput
	ToCorsRuleOutputWithContext(context.Context) CorsRuleOutput
}

// Specifies a CORS rule for the Blob service.
type CorsRuleArgs struct {
	// Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	// Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Required if CorsRule element is present. A list of response headers to expose to CORS clients.
	ExposedHeaders pulumi.StringArrayInput `pulumi:"exposedHeaders"`
	// Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.
	MaxAgeInSeconds pulumi.IntInput `pulumi:"maxAgeInSeconds"`
}

func (CorsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRule)(nil)).Elem()
}

func (i CorsRuleArgs) ToCorsRuleOutput() CorsRuleOutput {
	return i.ToCorsRuleOutputWithContext(context.Background())
}

func (i CorsRuleArgs) ToCorsRuleOutputWithContext(ctx context.Context) CorsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRuleOutput)
}

// CorsRuleArrayInput is an input type that accepts CorsRuleArray and CorsRuleArrayOutput values.
// You can construct a concrete instance of `CorsRuleArrayInput` via:
//
//	CorsRuleArray{ CorsRuleArgs{...} }
type CorsRuleArrayInput interface {
	pulumi.Input

	ToCorsRuleArrayOutput() CorsRuleArrayOutput
	ToCorsRuleArrayOutputWithContext(context.Context) CorsRuleArrayOutput
}

type CorsRuleArray []CorsRuleInput

func (CorsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CorsRule)(nil)).Elem()
}

func (i CorsRuleArray) ToCorsRuleArrayOutput() CorsRuleArrayOutput {
	return i.ToCorsRuleArrayOutputWithContext(context.Background())
}

func (i CorsRuleArray) ToCorsRuleArrayOutputWithContext(ctx context.Context) CorsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRuleArrayOutput)
}

// Specifies a CORS rule for the Blob service.
type CorsRuleOutput struct{ *pulumi.OutputState }

func (CorsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRule)(nil)).Elem()
}

func (o CorsRuleOutput) ToCorsRuleOutput() CorsRuleOutput {
	return o
}

func (o CorsRuleOutput) ToCorsRuleOutputWithContext(ctx context.Context) CorsRuleOutput {
	return o
}

// Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
func (o CorsRuleOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsRule) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
func (o CorsRuleOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsRule) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
func (o CorsRuleOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsRule) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Required if CorsRule element is present. A list of response headers to expose to CORS clients.
func (o CorsRuleOutput) ExposedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsRule) []string { return v.ExposedHeaders }).(pulumi.StringArrayOutput)
}

// Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.
func (o CorsRuleOutput) MaxAgeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v CorsRule) int { return v.MaxAgeInSeconds }).(pulumi.IntOutput)
}

type CorsRuleArrayOutput struct{ *pulumi.OutputState }

func (CorsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CorsRule)(nil)).Elem()
}

func (o CorsRuleArrayOutput) ToCorsRuleArrayOutput() CorsRuleArrayOutput {
	return o
}

func (o CorsRuleArrayOutput) ToCorsRuleArrayOutputWithContext(ctx context.Context) CorsRuleArrayOutput {
	return o
}

func (o CorsRuleArrayOutput) Index(i pulumi.IntInput) CorsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CorsRule {
		return vs[0].([]CorsRule)[vs[1].(int)]
	}).(CorsRuleOutput)
}

// Specifies a CORS rule for the Blob service.
type CorsRuleResponse struct {
	// Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Required if CorsRule element is present. A list of response headers to expose to CORS clients.
	ExposedHeaders []string `pulumi:"exposedHeaders"`
	// Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.
	MaxAgeInSeconds int `pulumi:"maxAgeInSeconds"`
}

// Specifies a CORS rule for the Blob service.
type CorsRuleResponseOutput struct{ *pulumi.OutputState }

func (CorsRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRuleResponse)(nil)).Elem()
}

func (o CorsRuleResponseOutput) ToCorsRuleResponseOutput() CorsRuleResponseOutput {
	return o
}

func (o CorsRuleResponseOutput) ToCorsRuleResponseOutputWithContext(ctx context.Context) CorsRuleResponseOutput {
	return o
}

// Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
func (o CorsRuleResponseOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsRuleResponse) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
func (o CorsRuleResponseOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsRuleResponse) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
func (o CorsRuleResponseOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsRuleResponse) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Required if CorsRule element is present. A list of response headers to expose to CORS clients.
func (o CorsRuleResponseOutput) ExposedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsRuleResponse) []string { return v.ExposedHeaders }).(pulumi.StringArrayOutput)
}

// Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.
func (o CorsRuleResponseOutput) MaxAgeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v CorsRuleResponse) int { return v.MaxAgeInSeconds }).(pulumi.IntOutput)
}

type CorsRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (CorsRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CorsRuleResponse)(nil)).Elem()
}

func (o CorsRuleResponseArrayOutput) ToCorsRuleResponseArrayOutput() CorsRuleResponseArrayOutput {
	return o
}

func (o CorsRuleResponseArrayOutput) ToCorsRuleResponseArrayOutputWithContext(ctx context.Context) CorsRuleResponseArrayOutput {
	return o
}

func (o CorsRuleResponseArrayOutput) Index(i pulumi.IntInput) CorsRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CorsRuleResponse {
		return vs[0].([]CorsRuleResponse)[vs[1].(int)]
	}).(CorsRuleResponseOutput)
}

// Sets the CORS rules. You can include up to five CorsRule elements in the request.
type CorsRules struct {
	// The List of CORS rules. You can include up to five CorsRule elements in the request.
	CorsRules []CorsRule `pulumi:"corsRules"`
}

// CorsRulesInput is an input type that accepts CorsRulesArgs and CorsRulesOutput values.
// You can construct a concrete instance of `CorsRulesInput` via:
//
//	CorsRulesArgs{...}
type CorsRulesInput interface {
	pulumi.Input

	ToCorsRulesOutput() CorsRulesOutput
	ToCorsRulesOutputWithContext(context.Context) CorsRulesOutput
}

// Sets the CORS rules. You can include up to five CorsRule elements in the request.
type CorsRulesArgs struct {
	// The List of CORS rules. You can include up to five CorsRule elements in the request.
	CorsRules CorsRuleArrayInput `pulumi:"corsRules"`
}

func (CorsRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRules)(nil)).Elem()
}

func (i CorsRulesArgs) ToCorsRulesOutput() CorsRulesOutput {
	return i.ToCorsRulesOutputWithContext(context.Background())
}

func (i CorsRulesArgs) ToCorsRulesOutputWithContext(ctx context.Context) CorsRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRulesOutput)
}

func (i CorsRulesArgs) ToCorsRulesPtrOutput() CorsRulesPtrOutput {
	return i.ToCorsRulesPtrOutputWithContext(context.Background())
}

func (i CorsRulesArgs) ToCorsRulesPtrOutputWithContext(ctx context.Context) CorsRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRulesOutput).ToCorsRulesPtrOutputWithContext(ctx)
}

// CorsRulesPtrInput is an input type that accepts CorsRulesArgs, CorsRulesPtr and CorsRulesPtrOutput values.
// You can construct a concrete instance of `CorsRulesPtrInput` via:
//
//	        CorsRulesArgs{...}
//
//	or:
//
//	        nil
type CorsRulesPtrInput interface {
	pulumi.Input

	ToCorsRulesPtrOutput() CorsRulesPtrOutput
	ToCorsRulesPtrOutputWithContext(context.Context) CorsRulesPtrOutput
}

type corsRulesPtrType CorsRulesArgs

func CorsRulesPtr(v *CorsRulesArgs) CorsRulesPtrInput {
	return (*corsRulesPtrType)(v)
}

func (*corsRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsRules)(nil)).Elem()
}

func (i *corsRulesPtrType) ToCorsRulesPtrOutput() CorsRulesPtrOutput {
	return i.ToCorsRulesPtrOutputWithContext(context.Background())
}

func (i *corsRulesPtrType) ToCorsRulesPtrOutputWithContext(ctx context.Context) CorsRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsRulesPtrOutput)
}

// Sets the CORS rules. You can include up to five CorsRule elements in the request.
type CorsRulesOutput struct{ *pulumi.OutputState }

func (CorsRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRules)(nil)).Elem()
}

func (o CorsRulesOutput) ToCorsRulesOutput() CorsRulesOutput {
	return o
}

func (o CorsRulesOutput) ToCorsRulesOutputWithContext(ctx context.Context) CorsRulesOutput {
	return o
}

func (o CorsRulesOutput) ToCorsRulesPtrOutput() CorsRulesPtrOutput {
	return o.ToCorsRulesPtrOutputWithContext(context.Background())
}

func (o CorsRulesOutput) ToCorsRulesPtrOutputWithContext(ctx context.Context) CorsRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CorsRules) *CorsRules {
		return &v
	}).(CorsRulesPtrOutput)
}

// The List of CORS rules. You can include up to five CorsRule elements in the request.
func (o CorsRulesOutput) CorsRules() CorsRuleArrayOutput {
	return o.ApplyT(func(v CorsRules) []CorsRule { return v.CorsRules }).(CorsRuleArrayOutput)
}

type CorsRulesPtrOutput struct{ *pulumi.OutputState }

func (CorsRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsRules)(nil)).Elem()
}

func (o CorsRulesPtrOutput) ToCorsRulesPtrOutput() CorsRulesPtrOutput {
	return o
}

func (o CorsRulesPtrOutput) ToCorsRulesPtrOutputWithContext(ctx context.Context) CorsRulesPtrOutput {
	return o
}

func (o CorsRulesPtrOutput) Elem() CorsRulesOutput {
	return o.ApplyT(func(v *CorsRules) CorsRules {
		if v != nil {
			return *v
		}
		var ret CorsRules
		return ret
	}).(CorsRulesOutput)
}

// The List of CORS rules. You can include up to five CorsRule elements in the request.
func (o CorsRulesPtrOutput) CorsRules() CorsRuleArrayOutput {
	return o.ApplyT(func(v *CorsRules) []CorsRule {
		if v == nil {
			return nil
		}
		return v.CorsRules
	}).(CorsRuleArrayOutput)
}

// Sets the CORS rules. You can include up to five CorsRule elements in the request.
type CorsRulesResponse struct {
	// The List of CORS rules. You can include up to five CorsRule elements in the request.
	CorsRules []CorsRuleResponse `pulumi:"corsRules"`
}

// Sets the CORS rules. You can include up to five CorsRule elements in the request.
type CorsRulesResponseOutput struct{ *pulumi.OutputState }

func (CorsRulesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsRulesResponse)(nil)).Elem()
}

func (o CorsRulesResponseOutput) ToCorsRulesResponseOutput() CorsRulesResponseOutput {
	return o
}

func (o CorsRulesResponseOutput) ToCorsRulesResponseOutputWithContext(ctx context.Context) CorsRulesResponseOutput {
	return o
}

// The List of CORS rules. You can include up to five CorsRule elements in the request.
func (o CorsRulesResponseOutput) CorsRules() CorsRuleResponseArrayOutput {
	return o.ApplyT(func(v CorsRulesResponse) []CorsRuleResponse { return v.CorsRules }).(CorsRuleResponseArrayOutput)
}

type CorsRulesResponsePtrOutput struct{ *pulumi.OutputState }

func (CorsRulesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsRulesResponse)(nil)).Elem()
}

func (o CorsRulesResponsePtrOutput) ToCorsRulesResponsePtrOutput() CorsRulesResponsePtrOutput {
	return o
}

func (o CorsRulesResponsePtrOutput) ToCorsRulesResponsePtrOutputWithContext(ctx context.Context) CorsRulesResponsePtrOutput {
	return o
}

func (o CorsRulesResponsePtrOutput) Elem() CorsRulesResponseOutput {
	return o.ApplyT(func(v *CorsRulesResponse) CorsRulesResponse {
		if v != nil {
			return *v
		}
		var ret CorsRulesResponse
		return ret
	}).(CorsRulesResponseOutput)
}

// The List of CORS rules. You can include up to five CorsRule elements in the request.
func (o CorsRulesResponsePtrOutput) CorsRules() CorsRuleResponseArrayOutput {
	return o.ApplyT(func(v *CorsRulesResponse) []CorsRuleResponse {
		if v == nil {
			return nil
		}
		return v.CorsRules
	}).(CorsRuleResponseArrayOutput)
}

// The custom domain assigned to this storage account. This can be set via Update.
type CustomDomain struct {
	// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
	Name string `pulumi:"name"`
	// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
	UseSubDomainName *bool `pulumi:"useSubDomainName"`
}

// CustomDomainInput is an input type that accepts CustomDomainArgs and CustomDomainOutput values.
// You can construct a concrete instance of `CustomDomainInput` via:
//
//	CustomDomainArgs{...}
type CustomDomainInput interface {
	pulumi.Input

	ToCustomDomainOutput() CustomDomainOutput
	ToCustomDomainOutputWithContext(context.Context) CustomDomainOutput
}

// The custom domain assigned to this storage account. This can be set via Update.
type CustomDomainArgs struct {
	// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
	UseSubDomainName pulumi.BoolPtrInput `pulumi:"useSubDomainName"`
}

func (CustomDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomain)(nil)).Elem()
}

func (i CustomDomainArgs) ToCustomDomainOutput() CustomDomainOutput {
	return i.ToCustomDomainOutputWithContext(context.Background())
}

func (i CustomDomainArgs) ToCustomDomainOutputWithContext(ctx context.Context) CustomDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainOutput)
}

func (i CustomDomainArgs) ToCustomDomainPtrOutput() CustomDomainPtrOutput {
	return i.ToCustomDomainPtrOutputWithContext(context.Background())
}

func (i CustomDomainArgs) ToCustomDomainPtrOutputWithContext(ctx context.Context) CustomDomainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainOutput).ToCustomDomainPtrOutputWithContext(ctx)
}

// CustomDomainPtrInput is an input type that accepts CustomDomainArgs, CustomDomainPtr and CustomDomainPtrOutput values.
// You can construct a concrete instance of `CustomDomainPtrInput` via:
//
//	        CustomDomainArgs{...}
//
//	or:
//
//	        nil
type CustomDomainPtrInput interface {
	pulumi.Input

	ToCustomDomainPtrOutput() CustomDomainPtrOutput
	ToCustomDomainPtrOutputWithContext(context.Context) CustomDomainPtrOutput
}

type customDomainPtrType CustomDomainArgs

func CustomDomainPtr(v *CustomDomainArgs) CustomDomainPtrInput {
	return (*customDomainPtrType)(v)
}

func (*customDomainPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomain)(nil)).Elem()
}

func (i *customDomainPtrType) ToCustomDomainPtrOutput() CustomDomainPtrOutput {
	return i.ToCustomDomainPtrOutputWithContext(context.Background())
}

func (i *customDomainPtrType) ToCustomDomainPtrOutputWithContext(ctx context.Context) CustomDomainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainPtrOutput)
}

// The custom domain assigned to this storage account. This can be set via Update.
type CustomDomainOutput struct{ *pulumi.OutputState }

func (CustomDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomain)(nil)).Elem()
}

func (o CustomDomainOutput) ToCustomDomainOutput() CustomDomainOutput {
	return o
}

func (o CustomDomainOutput) ToCustomDomainOutputWithContext(ctx context.Context) CustomDomainOutput {
	return o
}

func (o CustomDomainOutput) ToCustomDomainPtrOutput() CustomDomainPtrOutput {
	return o.ToCustomDomainPtrOutputWithContext(context.Background())
}

func (o CustomDomainOutput) ToCustomDomainPtrOutputWithContext(ctx context.Context) CustomDomainPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomDomain) *CustomDomain {
		return &v
	}).(CustomDomainPtrOutput)
}

// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
func (o CustomDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomain) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
func (o CustomDomainOutput) UseSubDomainName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomDomain) *bool { return v.UseSubDomainName }).(pulumi.BoolPtrOutput)
}

type CustomDomainPtrOutput struct{ *pulumi.OutputState }

func (CustomDomainPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomain)(nil)).Elem()
}

func (o CustomDomainPtrOutput) ToCustomDomainPtrOutput() CustomDomainPtrOutput {
	return o
}

func (o CustomDomainPtrOutput) ToCustomDomainPtrOutputWithContext(ctx context.Context) CustomDomainPtrOutput {
	return o
}

func (o CustomDomainPtrOutput) Elem() CustomDomainOutput {
	return o.ApplyT(func(v *CustomDomain) CustomDomain {
		if v != nil {
			return *v
		}
		var ret CustomDomain
		return ret
	}).(CustomDomainOutput)
}

// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
func (o CustomDomainPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomain) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
func (o CustomDomainPtrOutput) UseSubDomainName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomDomain) *bool {
		if v == nil {
			return nil
		}
		return v.UseSubDomainName
	}).(pulumi.BoolPtrOutput)
}

// The custom domain assigned to this storage account. This can be set via Update.
type CustomDomainResponse struct {
	// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
	Name string `pulumi:"name"`
	// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
	UseSubDomainName *bool `pulumi:"useSubDomainName"`
}

// The custom domain assigned to this storage account. This can be set via Update.
type CustomDomainResponseOutput struct{ *pulumi.OutputState }

func (CustomDomainResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainResponse)(nil)).Elem()
}

func (o CustomDomainResponseOutput) ToCustomDomainResponseOutput() CustomDomainResponseOutput {
	return o
}

func (o CustomDomainResponseOutput) ToCustomDomainResponseOutputWithContext(ctx context.Context) CustomDomainResponseOutput {
	return o
}

// Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
func (o CustomDomainResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
func (o CustomDomainResponseOutput) UseSubDomainName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomDomainResponse) *bool { return v.UseSubDomainName }).(pulumi.BoolPtrOutput)
}

// Object to define the number of days after creation.
type DateAfterCreation struct {
	// Value indicating the age in days after creation
	DaysAfterCreationGreaterThan float64 `pulumi:"daysAfterCreationGreaterThan"`
}

// DateAfterCreationInput is an input type that accepts DateAfterCreationArgs and DateAfterCreationOutput values.
// You can construct a concrete instance of `DateAfterCreationInput` via:
//
//	DateAfterCreationArgs{...}
type DateAfterCreationInput interface {
	pulumi.Input

	ToDateAfterCreationOutput() DateAfterCreationOutput
	ToDateAfterCreationOutputWithContext(context.Context) DateAfterCreationOutput
}

// Object to define the number of days after creation.
type DateAfterCreationArgs struct {
	// Value indicating the age in days after creation
	DaysAfterCreationGreaterThan pulumi.Float64Input `pulumi:"daysAfterCreationGreaterThan"`
}

func (DateAfterCreationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DateAfterCreation)(nil)).Elem()
}

func (i DateAfterCreationArgs) ToDateAfterCreationOutput() DateAfterCreationOutput {
	return i.ToDateAfterCreationOutputWithContext(context.Background())
}

func (i DateAfterCreationArgs) ToDateAfterCreationOutputWithContext(ctx context.Context) DateAfterCreationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateAfterCreationOutput)
}

func (i DateAfterCreationArgs) ToDateAfterCreationPtrOutput() DateAfterCreationPtrOutput {
	return i.ToDateAfterCreationPtrOutputWithContext(context.Background())
}

func (i DateAfterCreationArgs) ToDateAfterCreationPtrOutputWithContext(ctx context.Context) DateAfterCreationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateAfterCreationOutput).ToDateAfterCreationPtrOutputWithContext(ctx)
}

// DateAfterCreationPtrInput is an input type that accepts DateAfterCreationArgs, DateAfterCreationPtr and DateAfterCreationPtrOutput values.
// You can construct a concrete instance of `DateAfterCreationPtrInput` via:
//
//	        DateAfterCreationArgs{...}
//
//	or:
//
//	        nil
type DateAfterCreationPtrInput interface {
	pulumi.Input

	ToDateAfterCreationPtrOutput() DateAfterCreationPtrOutput
	ToDateAfterCreationPtrOutputWithContext(context.Context) DateAfterCreationPtrOutput
}

type dateAfterCreationPtrType DateAfterCreationArgs

func DateAfterCreationPtr(v *DateAfterCreationArgs) DateAfterCreationPtrInput {
	return (*dateAfterCreationPtrType)(v)
}

func (*dateAfterCreationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DateAfterCreation)(nil)).Elem()
}

func (i *dateAfterCreationPtrType) ToDateAfterCreationPtrOutput() DateAfterCreationPtrOutput {
	return i.ToDateAfterCreationPtrOutputWithContext(context.Background())
}

func (i *dateAfterCreationPtrType) ToDateAfterCreationPtrOutputWithContext(ctx context.Context) DateAfterCreationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateAfterCreationPtrOutput)
}

// Object to define the number of days after creation.
type DateAfterCreationOutput struct{ *pulumi.OutputState }

func (DateAfterCreationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DateAfterCreation)(nil)).Elem()
}

func (o DateAfterCreationOutput) ToDateAfterCreationOutput() DateAfterCreationOutput {
	return o
}

func (o DateAfterCreationOutput) ToDateAfterCreationOutputWithContext(ctx context.Context) DateAfterCreationOutput {
	return o
}

func (o DateAfterCreationOutput) ToDateAfterCreationPtrOutput() DateAfterCreationPtrOutput {
	return o.ToDateAfterCreationPtrOutputWithContext(context.Background())
}

func (o DateAfterCreationOutput) ToDateAfterCreationPtrOutputWithContext(ctx context.Context) DateAfterCreationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DateAfterCreation) *DateAfterCreation {
		return &v
	}).(DateAfterCreationPtrOutput)
}

// Value indicating the age in days after creation
func (o DateAfterCreationOutput) DaysAfterCreationGreaterThan() pulumi.Float64Output {
	return o.ApplyT(func(v DateAfterCreation) float64 { return v.DaysAfterCreationGreaterThan }).(pulumi.Float64Output)
}

type DateAfterCreationPtrOutput struct{ *pulumi.OutputState }

func (DateAfterCreationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DateAfterCreation)(nil)).Elem()
}

func (o DateAfterCreationPtrOutput) ToDateAfterCreationPtrOutput() DateAfterCreationPtrOutput {
	return o
}

func (o DateAfterCreationPtrOutput) ToDateAfterCreationPtrOutputWithContext(ctx context.Context) DateAfterCreationPtrOutput {
	return o
}

func (o DateAfterCreationPtrOutput) Elem() DateAfterCreationOutput {
	return o.ApplyT(func(v *DateAfterCreation) DateAfterCreation {
		if v != nil {
			return *v
		}
		var ret DateAfterCreation
		return ret
	}).(DateAfterCreationOutput)
}

// Value indicating the age in days after creation
func (o DateAfterCreationPtrOutput) DaysAfterCreationGreaterThan() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DateAfterCreation) *float64 {
		if v == nil {
			return nil
		}
		return &v.DaysAfterCreationGreaterThan
	}).(pulumi.Float64PtrOutput)
}

// Object to define the number of days after creation.
type DateAfterCreationResponse struct {
	// Value indicating the age in days after creation
	DaysAfterCreationGreaterThan float64 `pulumi:"daysAfterCreationGreaterThan"`
}

// Object to define the number of days after creation.
type DateAfterCreationResponseOutput struct{ *pulumi.OutputState }

func (DateAfterCreationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DateAfterCreationResponse)(nil)).Elem()
}

func (o DateAfterCreationResponseOutput) ToDateAfterCreationResponseOutput() DateAfterCreationResponseOutput {
	return o
}

func (o DateAfterCreationResponseOutput) ToDateAfterCreationResponseOutputWithContext(ctx context.Context) DateAfterCreationResponseOutput {
	return o
}

// Value indicating the age in days after creation
func (o DateAfterCreationResponseOutput) DaysAfterCreationGreaterThan() pulumi.Float64Output {
	return o.ApplyT(func(v DateAfterCreationResponse) float64 { return v.DaysAfterCreationGreaterThan }).(pulumi.Float64Output)
}

type DateAfterCreationResponsePtrOutput struct{ *pulumi.OutputState }

func (DateAfterCreationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DateAfterCreationResponse)(nil)).Elem()
}

func (o DateAfterCreationResponsePtrOutput) ToDateAfterCreationResponsePtrOutput() DateAfterCreationResponsePtrOutput {
	return o
}

func (o DateAfterCreationResponsePtrOutput) ToDateAfterCreationResponsePtrOutputWithContext(ctx context.Context) DateAfterCreationResponsePtrOutput {
	return o
}

func (o DateAfterCreationResponsePtrOutput) Elem() DateAfterCreationResponseOutput {
	return o.ApplyT(func(v *DateAfterCreationResponse) DateAfterCreationResponse {
		if v != nil {
			return *v
		}
		var ret DateAfterCreationResponse
		return ret
	}).(DateAfterCreationResponseOutput)
}

// Value indicating the age in days after creation
func (o DateAfterCreationResponsePtrOutput) DaysAfterCreationGreaterThan() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DateAfterCreationResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.DaysAfterCreationGreaterThan
	}).(pulumi.Float64PtrOutput)
}

// Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive.
type DateAfterModification struct {
	// Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy
	DaysAfterLastAccessTimeGreaterThan *float64 `pulumi:"daysAfterLastAccessTimeGreaterThan"`
	// Value indicating the age in days after last modification
	DaysAfterModificationGreaterThan *float64 `pulumi:"daysAfterModificationGreaterThan"`
}

// DateAfterModificationInput is an input type that accepts DateAfterModificationArgs and DateAfterModificationOutput values.
// You can construct a concrete instance of `DateAfterModificationInput` via:
//
//	DateAfterModificationArgs{...}
type DateAfterModificationInput interface {
	pulumi.Input

	ToDateAfterModificationOutput() DateAfterModificationOutput
	ToDateAfterModificationOutputWithContext(context.Context) DateAfterModificationOutput
}

// Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive.
type DateAfterModificationArgs struct {
	// Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy
	DaysAfterLastAccessTimeGreaterThan pulumi.Float64PtrInput `pulumi:"daysAfterLastAccessTimeGreaterThan"`
	// Value indicating the age in days after last modification
	DaysAfterModificationGreaterThan pulumi.Float64PtrInput `pulumi:"daysAfterModificationGreaterThan"`
}

func (DateAfterModificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DateAfterModification)(nil)).Elem()
}

func (i DateAfterModificationArgs) ToDateAfterModificationOutput() DateAfterModificationOutput {
	return i.ToDateAfterModificationOutputWithContext(context.Background())
}

func (i DateAfterModificationArgs) ToDateAfterModificationOutputWithContext(ctx context.Context) DateAfterModificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateAfterModificationOutput)
}

func (i DateAfterModificationArgs) ToDateAfterModificationPtrOutput() DateAfterModificationPtrOutput {
	return i.ToDateAfterModificationPtrOutputWithContext(context.Background())
}

func (i DateAfterModificationArgs) ToDateAfterModificationPtrOutputWithContext(ctx context.Context) DateAfterModificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateAfterModificationOutput).ToDateAfterModificationPtrOutputWithContext(ctx)
}

// DateAfterModificationPtrInput is an input type that accepts DateAfterModificationArgs, DateAfterModificationPtr and DateAfterModificationPtrOutput values.
// You can construct a concrete instance of `DateAfterModificationPtrInput` via:
//
//	        DateAfterModificationArgs{...}
//
//	or:
//
//	        nil
type DateAfterModificationPtrInput interface {
	pulumi.Input

	ToDateAfterModificationPtrOutput() DateAfterModificationPtrOutput
	ToDateAfterModificationPtrOutputWithContext(context.Context) DateAfterModificationPtrOutput
}

type dateAfterModificationPtrType DateAfterModificationArgs

func DateAfterModificationPtr(v *DateAfterModificationArgs) DateAfterModificationPtrInput {
	return (*dateAfterModificationPtrType)(v)
}

func (*dateAfterModificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DateAfterModification)(nil)).Elem()
}

func (i *dateAfterModificationPtrType) ToDateAfterModificationPtrOutput() DateAfterModificationPtrOutput {
	return i.ToDateAfterModificationPtrOutputWithContext(context.Background())
}

func (i *dateAfterModificationPtrType) ToDateAfterModificationPtrOutputWithContext(ctx context.Context) DateAfterModificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateAfterModificationPtrOutput)
}

// Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive.
type DateAfterModificationOutput struct{ *pulumi.OutputState }

func (DateAfterModificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DateAfterModification)(nil)).Elem()
}

func (o DateAfterModificationOutput) ToDateAfterModificationOutput() DateAfterModificationOutput {
	return o
}

func (o DateAfterModificationOutput) ToDateAfterModificationOutputWithContext(ctx context.Context) DateAfterModificationOutput {
	return o
}

func (o DateAfterModificationOutput) ToDateAfterModificationPtrOutput() DateAfterModificationPtrOutput {
	return o.ToDateAfterModificationPtrOutputWithContext(context.Background())
}

func (o DateAfterModificationOutput) ToDateAfterModificationPtrOutputWithContext(ctx context.Context) DateAfterModificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DateAfterModification) *DateAfterModification {
		return &v
	}).(DateAfterModificationPtrOutput)
}

// Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy
func (o DateAfterModificationOutput) DaysAfterLastAccessTimeGreaterThan() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DateAfterModification) *float64 { return v.DaysAfterLastAccessTimeGreaterThan }).(pulumi.Float64PtrOutput)
}

// Value indicating the age in days after last modification
func (o DateAfterModificationOutput) DaysAfterModificationGreaterThan() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DateAfterModification) *float64 { return v.DaysAfterModificationGreaterThan }).(pulumi.Float64PtrOutput)
}

type DateAfterModificationPtrOutput struct{ *pulumi.OutputState }

func (DateAfterModificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DateAfterModification)(nil)).Elem()
}

func (o DateAfterModificationPtrOutput) ToDateAfterModificationPtrOutput() DateAfterModificationPtrOutput {
	return o
}

func (o DateAfterModificationPtrOutput) ToDateAfterModificationPtrOutputWithContext(ctx context.Context) DateAfterModificationPtrOutput {
	return o
}

func (o DateAfterModificationPtrOutput) Elem() DateAfterModificationOutput {
	return o.ApplyT(func(v *DateAfterModification) DateAfterModification {
		if v != nil {
			return *v
		}
		var ret DateAfterModification
		return ret
	}).(DateAfterModificationOutput)
}

// Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy
func (o DateAfterModificationPtrOutput) DaysAfterLastAccessTimeGreaterThan() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DateAfterModification) *float64 {
		if v == nil {
			return nil
		}
		return v.DaysAfterLastAccessTimeGreaterThan
	}).(pulumi.Float64PtrOutput)
}

// Value indicating the age in days after last modification
func (o DateAfterModificationPtrOutput) DaysAfterModificationGreaterThan() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DateAfterModification) *float64 {
		if v == nil {
			return nil
		}
		return v.DaysAfterModificationGreaterThan
	}).(pulumi.Float64PtrOutput)
}

// Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive.
type DateAfterModificationResponse struct {
	// Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy
	DaysAfterLastAccessTimeGreaterThan *float64 `pulumi:"daysAfterLastAccessTimeGreaterThan"`
	// Value indicating the age in days after last modification
	DaysAfterModificationGreaterThan *float64 `pulumi:"daysAfterModificationGreaterThan"`
}

// Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive.
type DateAfterModificationResponseOutput struct{ *pulumi.OutputState }

func (DateAfterModificationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DateAfterModificationResponse)(nil)).Elem()
}

func (o DateAfterModificationResponseOutput) ToDateAfterModificationResponseOutput() DateAfterModificationResponseOutput {
	return o
}

func (o DateAfterModificationResponseOutput) ToDateAfterModificationResponseOutputWithContext(ctx context.Context) DateAfterModificationResponseOutput {
	return o
}

// Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy
func (o DateAfterModificationResponseOutput) DaysAfterLastAccessTimeGreaterThan() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DateAfterModificationResponse) *float64 { return v.DaysAfterLastAccessTimeGreaterThan }).(pulumi.Float64PtrOutput)
}

// Value indicating the age in days after last modification
func (o DateAfterModificationResponseOutput) DaysAfterModificationGreaterThan() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DateAfterModificationResponse) *float64 { return v.DaysAfterModificationGreaterThan }).(pulumi.Float64PtrOutput)
}

type DateAfterModificationResponsePtrOutput struct{ *pulumi.OutputState }

func (DateAfterModificationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DateAfterModificationResponse)(nil)).Elem()
}

func (o DateAfterModificationResponsePtrOutput) ToDateAfterModificationResponsePtrOutput() DateAfterModificationResponsePtrOutput {
	return o
}

func (o DateAfterModificationResponsePtrOutput) ToDateAfterModificationResponsePtrOutputWithContext(ctx context.Context) DateAfterModificationResponsePtrOutput {
	return o
}

func (o DateAfterModificationResponsePtrOutput) Elem() DateAfterModificationResponseOutput {
	return o.ApplyT(func(v *DateAfterModificationResponse) DateAfterModificationResponse {
		if v != nil {
			return *v
		}
		var ret DateAfterModificationResponse
		return ret
	}).(DateAfterModificationResponseOutput)
}

// Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy
func (o DateAfterModificationResponsePtrOutput) DaysAfterLastAccessTimeGreaterThan() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DateAfterModificationResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.DaysAfterLastAccessTimeGreaterThan
	}).(pulumi.Float64PtrOutput)
}

// Value indicating the age in days after last modification
func (o DateAfterModificationResponsePtrOutput) DaysAfterModificationGreaterThan() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DateAfterModificationResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.DaysAfterModificationGreaterThan
	}).(pulumi.Float64PtrOutput)
}

// The service properties for soft delete.
type DeleteRetentionPolicy struct {
	// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.
	Days *int `pulumi:"days"`
	// Indicates whether DeleteRetentionPolicy is enabled.
	Enabled *bool `pulumi:"enabled"`
}

// DeleteRetentionPolicyInput is an input type that accepts DeleteRetentionPolicyArgs and DeleteRetentionPolicyOutput values.
// You can construct a concrete instance of `DeleteRetentionPolicyInput` via:
//
//	DeleteRetentionPolicyArgs{...}
type DeleteRetentionPolicyInput interface {
	pulumi.Input

	ToDeleteRetentionPolicyOutput() DeleteRetentionPolicyOutput
	ToDeleteRetentionPolicyOutputWithContext(context.Context) DeleteRetentionPolicyOutput
}

// The service properties for soft delete.
type DeleteRetentionPolicyArgs struct {
	// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// Indicates whether DeleteRetentionPolicy is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (DeleteRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeleteRetentionPolicy)(nil)).Elem()
}

func (i DeleteRetentionPolicyArgs) ToDeleteRetentionPolicyOutput() DeleteRetentionPolicyOutput {
	return i.ToDeleteRetentionPolicyOutputWithContext(context.Background())
}

func (i DeleteRetentionPolicyArgs) ToDeleteRetentionPolicyOutputWithContext(ctx context.Context) DeleteRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeleteRetentionPolicyOutput)
}

func (i DeleteRetentionPolicyArgs) ToDeleteRetentionPolicyPtrOutput() DeleteRetentionPolicyPtrOutput {
	return i.ToDeleteRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i DeleteRetentionPolicyArgs) ToDeleteRetentionPolicyPtrOutputWithContext(ctx context.Context) DeleteRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeleteRetentionPolicyOutput).ToDeleteRetentionPolicyPtrOutputWithContext(ctx)
}

// DeleteRetentionPolicyPtrInput is an input type that accepts DeleteRetentionPolicyArgs, DeleteRetentionPolicyPtr and DeleteRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `DeleteRetentionPolicyPtrInput` via:
//
//	        DeleteRetentionPolicyArgs{...}
//
//	or:
//
//	        nil
type DeleteRetentionPolicyPtrInput interface {
	pulumi.Input

	ToDeleteRetentionPolicyPtrOutput() DeleteRetentionPolicyPtrOutput
	ToDeleteRetentionPolicyPtrOutputWithContext(context.Context) DeleteRetentionPolicyPtrOutput
}

type deleteRetentionPolicyPtrType DeleteRetentionPolicyArgs

func DeleteRetentionPolicyPtr(v *DeleteRetentionPolicyArgs) DeleteRetentionPolicyPtrInput {
	return (*deleteRetentionPolicyPtrType)(v)
}

func (*deleteRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeleteRetentionPolicy)(nil)).Elem()
}

func (i *deleteRetentionPolicyPtrType) ToDeleteRetentionPolicyPtrOutput() DeleteRetentionPolicyPtrOutput {
	return i.ToDeleteRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *deleteRetentionPolicyPtrType) ToDeleteRetentionPolicyPtrOutputWithContext(ctx context.Context) DeleteRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeleteRetentionPolicyPtrOutput)
}

// The service properties for soft delete.
type DeleteRetentionPolicyOutput struct{ *pulumi.OutputState }

func (DeleteRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeleteRetentionPolicy)(nil)).Elem()
}

func (o DeleteRetentionPolicyOutput) ToDeleteRetentionPolicyOutput() DeleteRetentionPolicyOutput {
	return o
}

func (o DeleteRetentionPolicyOutput) ToDeleteRetentionPolicyOutputWithContext(ctx context.Context) DeleteRetentionPolicyOutput {
	return o
}

func (o DeleteRetentionPolicyOutput) ToDeleteRetentionPolicyPtrOutput() DeleteRetentionPolicyPtrOutput {
	return o.ToDeleteRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o DeleteRetentionPolicyOutput) ToDeleteRetentionPolicyPtrOutputWithContext(ctx context.Context) DeleteRetentionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeleteRetentionPolicy) *DeleteRetentionPolicy {
		return &v
	}).(DeleteRetentionPolicyPtrOutput)
}

// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.
func (o DeleteRetentionPolicyOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeleteRetentionPolicy) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Indicates whether DeleteRetentionPolicy is enabled.
func (o DeleteRetentionPolicyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeleteRetentionPolicy) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type DeleteRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (DeleteRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeleteRetentionPolicy)(nil)).Elem()
}

func (o DeleteRetentionPolicyPtrOutput) ToDeleteRetentionPolicyPtrOutput() DeleteRetentionPolicyPtrOutput {
	return o
}

func (o DeleteRetentionPolicyPtrOutput) ToDeleteRetentionPolicyPtrOutputWithContext(ctx context.Context) DeleteRetentionPolicyPtrOutput {
	return o
}

func (o DeleteRetentionPolicyPtrOutput) Elem() DeleteRetentionPolicyOutput {
	return o.ApplyT(func(v *DeleteRetentionPolicy) DeleteRetentionPolicy {
		if v != nil {
			return *v
		}
		var ret DeleteRetentionPolicy
		return ret
	}).(DeleteRetentionPolicyOutput)
}

// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.
func (o DeleteRetentionPolicyPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeleteRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Indicates whether DeleteRetentionPolicy is enabled.
func (o DeleteRetentionPolicyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeleteRetentionPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The service properties for soft delete.
type DeleteRetentionPolicyResponse struct {
	// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.
	Days *int `pulumi:"days"`
	// Indicates whether DeleteRetentionPolicy is enabled.
	Enabled *bool `pulumi:"enabled"`
}

// The service properties for soft delete.
type DeleteRetentionPolicyResponseOutput struct{ *pulumi.OutputState }

func (DeleteRetentionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeleteRetentionPolicyResponse)(nil)).Elem()
}

func (o DeleteRetentionPolicyResponseOutput) ToDeleteRetentionPolicyResponseOutput() DeleteRetentionPolicyResponseOutput {
	return o
}

func (o DeleteRetentionPolicyResponseOutput) ToDeleteRetentionPolicyResponseOutputWithContext(ctx context.Context) DeleteRetentionPolicyResponseOutput {
	return o
}

// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.
func (o DeleteRetentionPolicyResponseOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeleteRetentionPolicyResponse) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Indicates whether DeleteRetentionPolicy is enabled.
func (o DeleteRetentionPolicyResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeleteRetentionPolicyResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type DeleteRetentionPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (DeleteRetentionPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeleteRetentionPolicyResponse)(nil)).Elem()
}

func (o DeleteRetentionPolicyResponsePtrOutput) ToDeleteRetentionPolicyResponsePtrOutput() DeleteRetentionPolicyResponsePtrOutput {
	return o
}

func (o DeleteRetentionPolicyResponsePtrOutput) ToDeleteRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) DeleteRetentionPolicyResponsePtrOutput {
	return o
}

func (o DeleteRetentionPolicyResponsePtrOutput) Elem() DeleteRetentionPolicyResponseOutput {
	return o.ApplyT(func(v *DeleteRetentionPolicyResponse) DeleteRetentionPolicyResponse {
		if v != nil {
			return *v
		}
		var ret DeleteRetentionPolicyResponse
		return ret
	}).(DeleteRetentionPolicyResponseOutput)
}

// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.
func (o DeleteRetentionPolicyResponsePtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeleteRetentionPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Indicates whether DeleteRetentionPolicy is enabled.
func (o DeleteRetentionPolicyResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeleteRetentionPolicyResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The encryption settings on the storage account.
type Encryption struct {
	// The identity to be used with service-side encryption at rest.
	EncryptionIdentity *EncryptionIdentity `pulumi:"encryptionIdentity"`
	// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
	KeySource string `pulumi:"keySource"`
	// Properties provided by key vault.
	KeyVaultProperties *KeyVaultProperties `pulumi:"keyVaultProperties"`
	// A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
	RequireInfrastructureEncryption *bool `pulumi:"requireInfrastructureEncryption"`
	// List of services which support encryption.
	Services *EncryptionServices `pulumi:"services"`
}

// Defaults sets the appropriate defaults for Encryption
func (val *Encryption) Defaults() *Encryption {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.KeySource) {
		tmp.KeySource = "Microsoft.Storage"
	}
	return &tmp
}

// EncryptionInput is an input type that accepts EncryptionArgs and EncryptionOutput values.
// You can construct a concrete instance of `EncryptionInput` via:
//
//	EncryptionArgs{...}
type EncryptionInput interface {
	pulumi.Input

	ToEncryptionOutput() EncryptionOutput
	ToEncryptionOutputWithContext(context.Context) EncryptionOutput
}

// The encryption settings on the storage account.
type EncryptionArgs struct {
	// The identity to be used with service-side encryption at rest.
	EncryptionIdentity EncryptionIdentityPtrInput `pulumi:"encryptionIdentity"`
	// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
	KeySource pulumi.StringInput `pulumi:"keySource"`
	// Properties provided by key vault.
	KeyVaultProperties KeyVaultPropertiesPtrInput `pulumi:"keyVaultProperties"`
	// A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
	RequireInfrastructureEncryption pulumi.BoolPtrInput `pulumi:"requireInfrastructureEncryption"`
	// List of services which support encryption.
	Services EncryptionServicesPtrInput `pulumi:"services"`
}

// Defaults sets the appropriate defaults for EncryptionArgs
func (val *EncryptionArgs) Defaults() *EncryptionArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.KeySource) {
		tmp.KeySource = pulumi.String("Microsoft.Storage")
	}
	return &tmp
}
func (EncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Encryption)(nil)).Elem()
}

func (i EncryptionArgs) ToEncryptionOutput() EncryptionOutput {
	return i.ToEncryptionOutputWithContext(context.Background())
}

func (i EncryptionArgs) ToEncryptionOutputWithContext(ctx context.Context) EncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionOutput)
}

func (i EncryptionArgs) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return i.ToEncryptionPtrOutputWithContext(context.Background())
}

func (i EncryptionArgs) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionOutput).ToEncryptionPtrOutputWithContext(ctx)
}

// EncryptionPtrInput is an input type that accepts EncryptionArgs, EncryptionPtr and EncryptionPtrOutput values.
// You can construct a concrete instance of `EncryptionPtrInput` via:
//
//	        EncryptionArgs{...}
//
//	or:
//
//	        nil
type EncryptionPtrInput interface {
	pulumi.Input

	ToEncryptionPtrOutput() EncryptionPtrOutput
	ToEncryptionPtrOutputWithContext(context.Context) EncryptionPtrOutput
}

type encryptionPtrType EncryptionArgs

func EncryptionPtr(v *EncryptionArgs) EncryptionPtrInput {
	return (*encryptionPtrType)(v)
}

func (*encryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Encryption)(nil)).Elem()
}

func (i *encryptionPtrType) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return i.ToEncryptionPtrOutputWithContext(context.Background())
}

func (i *encryptionPtrType) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPtrOutput)
}

// The encryption settings on the storage account.
type EncryptionOutput struct{ *pulumi.OutputState }

func (EncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Encryption)(nil)).Elem()
}

func (o EncryptionOutput) ToEncryptionOutput() EncryptionOutput {
	return o
}

func (o EncryptionOutput) ToEncryptionOutputWithContext(ctx context.Context) EncryptionOutput {
	return o
}

func (o EncryptionOutput) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return o.ToEncryptionPtrOutputWithContext(context.Background())
}

func (o EncryptionOutput) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Encryption) *Encryption {
		return &v
	}).(EncryptionPtrOutput)
}

// The identity to be used with service-side encryption at rest.
func (o EncryptionOutput) EncryptionIdentity() EncryptionIdentityPtrOutput {
	return o.ApplyT(func(v Encryption) *EncryptionIdentity { return v.EncryptionIdentity }).(EncryptionIdentityPtrOutput)
}

// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
func (o EncryptionOutput) KeySource() pulumi.StringOutput {
	return o.ApplyT(func(v Encryption) string { return v.KeySource }).(pulumi.StringOutput)
}

// Properties provided by key vault.
func (o EncryptionOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v Encryption) *KeyVaultProperties { return v.KeyVaultProperties }).(KeyVaultPropertiesPtrOutput)
}

// A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
func (o EncryptionOutput) RequireInfrastructureEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Encryption) *bool { return v.RequireInfrastructureEncryption }).(pulumi.BoolPtrOutput)
}

// List of services which support encryption.
func (o EncryptionOutput) Services() EncryptionServicesPtrOutput {
	return o.ApplyT(func(v Encryption) *EncryptionServices { return v.Services }).(EncryptionServicesPtrOutput)
}

type EncryptionPtrOutput struct{ *pulumi.OutputState }

func (EncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Encryption)(nil)).Elem()
}

func (o EncryptionPtrOutput) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return o
}

func (o EncryptionPtrOutput) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return o
}

func (o EncryptionPtrOutput) Elem() EncryptionOutput {
	return o.ApplyT(func(v *Encryption) Encryption {
		if v != nil {
			return *v
		}
		var ret Encryption
		return ret
	}).(EncryptionOutput)
}

// The identity to be used with service-side encryption at rest.
func (o EncryptionPtrOutput) EncryptionIdentity() EncryptionIdentityPtrOutput {
	return o.ApplyT(func(v *Encryption) *EncryptionIdentity {
		if v == nil {
			return nil
		}
		return v.EncryptionIdentity
	}).(EncryptionIdentityPtrOutput)
}

// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
func (o EncryptionPtrOutput) KeySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Encryption) *string {
		if v == nil {
			return nil
		}
		return &v.KeySource
	}).(pulumi.StringPtrOutput)
}

// Properties provided by key vault.
func (o EncryptionPtrOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v *Encryption) *KeyVaultProperties {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(KeyVaultPropertiesPtrOutput)
}

// A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
func (o EncryptionPtrOutput) RequireInfrastructureEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Encryption) *bool {
		if v == nil {
			return nil
		}
		return v.RequireInfrastructureEncryption
	}).(pulumi.BoolPtrOutput)
}

// List of services which support encryption.
func (o EncryptionPtrOutput) Services() EncryptionServicesPtrOutput {
	return o.ApplyT(func(v *Encryption) *EncryptionServices {
		if v == nil {
			return nil
		}
		return v.Services
	}).(EncryptionServicesPtrOutput)
}

// Encryption identity for the storage account.
type EncryptionIdentity struct {
	// Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account.
	EncryptionUserAssignedIdentity *string `pulumi:"encryptionUserAssignedIdentity"`
}

// EncryptionIdentityInput is an input type that accepts EncryptionIdentityArgs and EncryptionIdentityOutput values.
// You can construct a concrete instance of `EncryptionIdentityInput` via:
//
//	EncryptionIdentityArgs{...}
type EncryptionIdentityInput interface {
	pulumi.Input

	ToEncryptionIdentityOutput() EncryptionIdentityOutput
	ToEncryptionIdentityOutputWithContext(context.Context) EncryptionIdentityOutput
}

// Encryption identity for the storage account.
type EncryptionIdentityArgs struct {
	// Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account.
	EncryptionUserAssignedIdentity pulumi.StringPtrInput `pulumi:"encryptionUserAssignedIdentity"`
}

func (EncryptionIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionIdentity)(nil)).Elem()
}

func (i EncryptionIdentityArgs) ToEncryptionIdentityOutput() EncryptionIdentityOutput {
	return i.ToEncryptionIdentityOutputWithContext(context.Background())
}

func (i EncryptionIdentityArgs) ToEncryptionIdentityOutputWithContext(ctx context.Context) EncryptionIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionIdentityOutput)
}

func (i EncryptionIdentityArgs) ToEncryptionIdentityPtrOutput() EncryptionIdentityPtrOutput {
	return i.ToEncryptionIdentityPtrOutputWithContext(context.Background())
}

func (i EncryptionIdentityArgs) ToEncryptionIdentityPtrOutputWithContext(ctx context.Context) EncryptionIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionIdentityOutput).ToEncryptionIdentityPtrOutputWithContext(ctx)
}

// EncryptionIdentityPtrInput is an input type that accepts EncryptionIdentityArgs, EncryptionIdentityPtr and EncryptionIdentityPtrOutput values.
// You can construct a concrete instance of `EncryptionIdentityPtrInput` via:
//
//	        EncryptionIdentityArgs{...}
//
//	or:
//
//	        nil
type EncryptionIdentityPtrInput interface {
	pulumi.Input

	ToEncryptionIdentityPtrOutput() EncryptionIdentityPtrOutput
	ToEncryptionIdentityPtrOutputWithContext(context.Context) EncryptionIdentityPtrOutput
}

type encryptionIdentityPtrType EncryptionIdentityArgs

func EncryptionIdentityPtr(v *EncryptionIdentityArgs) EncryptionIdentityPtrInput {
	return (*encryptionIdentityPtrType)(v)
}

func (*encryptionIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionIdentity)(nil)).Elem()
}

func (i *encryptionIdentityPtrType) ToEncryptionIdentityPtrOutput() EncryptionIdentityPtrOutput {
	return i.ToEncryptionIdentityPtrOutputWithContext(context.Background())
}

func (i *encryptionIdentityPtrType) ToEncryptionIdentityPtrOutputWithContext(ctx context.Context) EncryptionIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionIdentityPtrOutput)
}

// Encryption identity for the storage account.
type EncryptionIdentityOutput struct{ *pulumi.OutputState }

func (EncryptionIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionIdentity)(nil)).Elem()
}

func (o EncryptionIdentityOutput) ToEncryptionIdentityOutput() EncryptionIdentityOutput {
	return o
}

func (o EncryptionIdentityOutput) ToEncryptionIdentityOutputWithContext(ctx context.Context) EncryptionIdentityOutput {
	return o
}

func (o EncryptionIdentityOutput) ToEncryptionIdentityPtrOutput() EncryptionIdentityPtrOutput {
	return o.ToEncryptionIdentityPtrOutputWithContext(context.Background())
}

func (o EncryptionIdentityOutput) ToEncryptionIdentityPtrOutputWithContext(ctx context.Context) EncryptionIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionIdentity) *EncryptionIdentity {
		return &v
	}).(EncryptionIdentityPtrOutput)
}

// Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account.
func (o EncryptionIdentityOutput) EncryptionUserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionIdentity) *string { return v.EncryptionUserAssignedIdentity }).(pulumi.StringPtrOutput)
}

type EncryptionIdentityPtrOutput struct{ *pulumi.OutputState }

func (EncryptionIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionIdentity)(nil)).Elem()
}

func (o EncryptionIdentityPtrOutput) ToEncryptionIdentityPtrOutput() EncryptionIdentityPtrOutput {
	return o
}

func (o EncryptionIdentityPtrOutput) ToEncryptionIdentityPtrOutputWithContext(ctx context.Context) EncryptionIdentityPtrOutput {
	return o
}

func (o EncryptionIdentityPtrOutput) Elem() EncryptionIdentityOutput {
	return o.ApplyT(func(v *EncryptionIdentity) EncryptionIdentity {
		if v != nil {
			return *v
		}
		var ret EncryptionIdentity
		return ret
	}).(EncryptionIdentityOutput)
}

// Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account.
func (o EncryptionIdentityPtrOutput) EncryptionUserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionIdentity) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionUserAssignedIdentity
	}).(pulumi.StringPtrOutput)
}

// Encryption identity for the storage account.
type EncryptionIdentityResponse struct {
	// Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account.
	EncryptionUserAssignedIdentity *string `pulumi:"encryptionUserAssignedIdentity"`
}

// Encryption identity for the storage account.
type EncryptionIdentityResponseOutput struct{ *pulumi.OutputState }

func (EncryptionIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionIdentityResponse)(nil)).Elem()
}

func (o EncryptionIdentityResponseOutput) ToEncryptionIdentityResponseOutput() EncryptionIdentityResponseOutput {
	return o
}

func (o EncryptionIdentityResponseOutput) ToEncryptionIdentityResponseOutputWithContext(ctx context.Context) EncryptionIdentityResponseOutput {
	return o
}

// Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account.
func (o EncryptionIdentityResponseOutput) EncryptionUserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionIdentityResponse) *string { return v.EncryptionUserAssignedIdentity }).(pulumi.StringPtrOutput)
}

type EncryptionIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionIdentityResponse)(nil)).Elem()
}

func (o EncryptionIdentityResponsePtrOutput) ToEncryptionIdentityResponsePtrOutput() EncryptionIdentityResponsePtrOutput {
	return o
}

func (o EncryptionIdentityResponsePtrOutput) ToEncryptionIdentityResponsePtrOutputWithContext(ctx context.Context) EncryptionIdentityResponsePtrOutput {
	return o
}

func (o EncryptionIdentityResponsePtrOutput) Elem() EncryptionIdentityResponseOutput {
	return o.ApplyT(func(v *EncryptionIdentityResponse) EncryptionIdentityResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionIdentityResponse
		return ret
	}).(EncryptionIdentityResponseOutput)
}

// Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account.
func (o EncryptionIdentityResponsePtrOutput) EncryptionUserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionUserAssignedIdentity
	}).(pulumi.StringPtrOutput)
}

// The encryption settings on the storage account.
type EncryptionResponse struct {
	// The identity to be used with service-side encryption at rest.
	EncryptionIdentity *EncryptionIdentityResponse `pulumi:"encryptionIdentity"`
	// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
	KeySource string `pulumi:"keySource"`
	// Properties provided by key vault.
	KeyVaultProperties *KeyVaultPropertiesResponse `pulumi:"keyVaultProperties"`
	// A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
	RequireInfrastructureEncryption *bool `pulumi:"requireInfrastructureEncryption"`
	// List of services which support encryption.
	Services *EncryptionServicesResponse `pulumi:"services"`
}

// Defaults sets the appropriate defaults for EncryptionResponse
func (val *EncryptionResponse) Defaults() *EncryptionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.KeySource) {
		tmp.KeySource = "Microsoft.Storage"
	}
	return &tmp
}

// The encryption settings on the storage account.
type EncryptionResponseOutput struct{ *pulumi.OutputState }

func (EncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionResponse)(nil)).Elem()
}

func (o EncryptionResponseOutput) ToEncryptionResponseOutput() EncryptionResponseOutput {
	return o
}

func (o EncryptionResponseOutput) ToEncryptionResponseOutputWithContext(ctx context.Context) EncryptionResponseOutput {
	return o
}

// The identity to be used with service-side encryption at rest.
func (o EncryptionResponseOutput) EncryptionIdentity() EncryptionIdentityResponsePtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *EncryptionIdentityResponse { return v.EncryptionIdentity }).(EncryptionIdentityResponsePtrOutput)
}

// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault
func (o EncryptionResponseOutput) KeySource() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionResponse) string { return v.KeySource }).(pulumi.StringOutput)
}

// Properties provided by key vault.
func (o EncryptionResponseOutput) KeyVaultProperties() KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *KeyVaultPropertiesResponse { return v.KeyVaultProperties }).(KeyVaultPropertiesResponsePtrOutput)
}

// A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
func (o EncryptionResponseOutput) RequireInfrastructureEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *bool { return v.RequireInfrastructureEncryption }).(pulumi.BoolPtrOutput)
}

// List of services which support encryption.
func (o EncryptionResponseOutput) Services() EncryptionServicesResponsePtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *EncryptionServicesResponse { return v.Services }).(EncryptionServicesResponsePtrOutput)
}

// The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.
type EncryptionScopeKeyVaultProperties struct {
	// The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.
	KeyUri *string `pulumi:"keyUri"`
}

// EncryptionScopeKeyVaultPropertiesInput is an input type that accepts EncryptionScopeKeyVaultPropertiesArgs and EncryptionScopeKeyVaultPropertiesOutput values.
// You can construct a concrete instance of `EncryptionScopeKeyVaultPropertiesInput` via:
//
//	EncryptionScopeKeyVaultPropertiesArgs{...}
type EncryptionScopeKeyVaultPropertiesInput interface {
	pulumi.Input

	ToEncryptionScopeKeyVaultPropertiesOutput() EncryptionScopeKeyVaultPropertiesOutput
	ToEncryptionScopeKeyVaultPropertiesOutputWithContext(context.Context) EncryptionScopeKeyVaultPropertiesOutput
}

// The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.
type EncryptionScopeKeyVaultPropertiesArgs struct {
	// The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.
	KeyUri pulumi.StringPtrInput `pulumi:"keyUri"`
}

func (EncryptionScopeKeyVaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionScopeKeyVaultProperties)(nil)).Elem()
}

func (i EncryptionScopeKeyVaultPropertiesArgs) ToEncryptionScopeKeyVaultPropertiesOutput() EncryptionScopeKeyVaultPropertiesOutput {
	return i.ToEncryptionScopeKeyVaultPropertiesOutputWithContext(context.Background())
}

func (i EncryptionScopeKeyVaultPropertiesArgs) ToEncryptionScopeKeyVaultPropertiesOutputWithContext(ctx context.Context) EncryptionScopeKeyVaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionScopeKeyVaultPropertiesOutput)
}

func (i EncryptionScopeKeyVaultPropertiesArgs) ToEncryptionScopeKeyVaultPropertiesPtrOutput() EncryptionScopeKeyVaultPropertiesPtrOutput {
	return i.ToEncryptionScopeKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i EncryptionScopeKeyVaultPropertiesArgs) ToEncryptionScopeKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) EncryptionScopeKeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionScopeKeyVaultPropertiesOutput).ToEncryptionScopeKeyVaultPropertiesPtrOutputWithContext(ctx)
}

// EncryptionScopeKeyVaultPropertiesPtrInput is an input type that accepts EncryptionScopeKeyVaultPropertiesArgs, EncryptionScopeKeyVaultPropertiesPtr and EncryptionScopeKeyVaultPropertiesPtrOutput values.
// You can construct a concrete instance of `EncryptionScopeKeyVaultPropertiesPtrInput` via:
//
//	        EncryptionScopeKeyVaultPropertiesArgs{...}
//
//	or:
//
//	        nil
type EncryptionScopeKeyVaultPropertiesPtrInput interface {
	pulumi.Input

	ToEncryptionScopeKeyVaultPropertiesPtrOutput() EncryptionScopeKeyVaultPropertiesPtrOutput
	ToEncryptionScopeKeyVaultPropertiesPtrOutputWithContext(context.Context) EncryptionScopeKeyVaultPropertiesPtrOutput
}

type encryptionScopeKeyVaultPropertiesPtrType EncryptionScopeKeyVaultPropertiesArgs

func EncryptionScopeKeyVaultPropertiesPtr(v *EncryptionScopeKeyVaultPropertiesArgs) EncryptionScopeKeyVaultPropertiesPtrInput {
	return (*encryptionScopeKeyVaultPropertiesPtrType)(v)
}

func (*encryptionScopeKeyVaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionScopeKeyVaultProperties)(nil)).Elem()
}

func (i *encryptionScopeKeyVaultPropertiesPtrType) ToEncryptionScopeKeyVaultPropertiesPtrOutput() EncryptionScopeKeyVaultPropertiesPtrOutput {
	return i.ToEncryptionScopeKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *encryptionScopeKeyVaultPropertiesPtrType) ToEncryptionScopeKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) EncryptionScopeKeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionScopeKeyVaultPropertiesPtrOutput)
}

// The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.
type EncryptionScopeKeyVaultPropertiesOutput struct{ *pulumi.OutputState }

func (EncryptionScopeKeyVaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionScopeKeyVaultProperties)(nil)).Elem()
}

func (o EncryptionScopeKeyVaultPropertiesOutput) ToEncryptionScopeKeyVaultPropertiesOutput() EncryptionScopeKeyVaultPropertiesOutput {
	return o
}

func (o EncryptionScopeKeyVaultPropertiesOutput) ToEncryptionScopeKeyVaultPropertiesOutputWithContext(ctx context.Context) EncryptionScopeKeyVaultPropertiesOutput {
	return o
}

func (o EncryptionScopeKeyVaultPropertiesOutput) ToEncryptionScopeKeyVaultPropertiesPtrOutput() EncryptionScopeKeyVaultPropertiesPtrOutput {
	return o.ToEncryptionScopeKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o EncryptionScopeKeyVaultPropertiesOutput) ToEncryptionScopeKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) EncryptionScopeKeyVaultPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionScopeKeyVaultProperties) *EncryptionScopeKeyVaultProperties {
		return &v
	}).(EncryptionScopeKeyVaultPropertiesPtrOutput)
}

// The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.
func (o EncryptionScopeKeyVaultPropertiesOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionScopeKeyVaultProperties) *string { return v.KeyUri }).(pulumi.StringPtrOutput)
}

type EncryptionScopeKeyVaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EncryptionScopeKeyVaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionScopeKeyVaultProperties)(nil)).Elem()
}

func (o EncryptionScopeKeyVaultPropertiesPtrOutput) ToEncryptionScopeKeyVaultPropertiesPtrOutput() EncryptionScopeKeyVaultPropertiesPtrOutput {
	return o
}

func (o EncryptionScopeKeyVaultPropertiesPtrOutput) ToEncryptionScopeKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) EncryptionScopeKeyVaultPropertiesPtrOutput {
	return o
}

func (o EncryptionScopeKeyVaultPropertiesPtrOutput) Elem() EncryptionScopeKeyVaultPropertiesOutput {
	return o.ApplyT(func(v *EncryptionScopeKeyVaultProperties) EncryptionScopeKeyVaultProperties {
		if v != nil {
			return *v
		}
		var ret EncryptionScopeKeyVaultProperties
		return ret
	}).(EncryptionScopeKeyVaultPropertiesOutput)
}

// The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.
func (o EncryptionScopeKeyVaultPropertiesPtrOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionScopeKeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyUri
	}).(pulumi.StringPtrOutput)
}

// The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.
type EncryptionScopeKeyVaultPropertiesResponse struct {
	// The object identifier of the current versioned Key Vault Key in use.
	CurrentVersionedKeyIdentifier string `pulumi:"currentVersionedKeyIdentifier"`
	// The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.
	KeyUri *string `pulumi:"keyUri"`
	// Timestamp of last rotation of the Key Vault Key.
	LastKeyRotationTimestamp string `pulumi:"lastKeyRotationTimestamp"`
}

// The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.
type EncryptionScopeKeyVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EncryptionScopeKeyVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionScopeKeyVaultPropertiesResponse)(nil)).Elem()
}

func (o EncryptionScopeKeyVaultPropertiesResponseOutput) ToEncryptionScopeKeyVaultPropertiesResponseOutput() EncryptionScopeKeyVaultPropertiesResponseOutput {
	return o
}

func (o EncryptionScopeKeyVaultPropertiesResponseOutput) ToEncryptionScopeKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) EncryptionScopeKeyVaultPropertiesResponseOutput {
	return o
}

// The object identifier of the current versioned Key Vault Key in use.
func (o EncryptionScopeKeyVaultPropertiesResponseOutput) CurrentVersionedKeyIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionScopeKeyVaultPropertiesResponse) string { return v.CurrentVersionedKeyIdentifier }).(pulumi.StringOutput)
}

// The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.
func (o EncryptionScopeKeyVaultPropertiesResponseOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionScopeKeyVaultPropertiesResponse) *string { return v.KeyUri }).(pulumi.StringPtrOutput)
}

// Timestamp of last rotation of the Key Vault Key.
func (o EncryptionScopeKeyVaultPropertiesResponseOutput) LastKeyRotationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionScopeKeyVaultPropertiesResponse) string { return v.LastKeyRotationTimestamp }).(pulumi.StringOutput)
}

type EncryptionScopeKeyVaultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionScopeKeyVaultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionScopeKeyVaultPropertiesResponse)(nil)).Elem()
}

func (o EncryptionScopeKeyVaultPropertiesResponsePtrOutput) ToEncryptionScopeKeyVaultPropertiesResponsePtrOutput() EncryptionScopeKeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o EncryptionScopeKeyVaultPropertiesResponsePtrOutput) ToEncryptionScopeKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) EncryptionScopeKeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o EncryptionScopeKeyVaultPropertiesResponsePtrOutput) Elem() EncryptionScopeKeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v *EncryptionScopeKeyVaultPropertiesResponse) EncryptionScopeKeyVaultPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionScopeKeyVaultPropertiesResponse
		return ret
	}).(EncryptionScopeKeyVaultPropertiesResponseOutput)
}

// The object identifier of the current versioned Key Vault Key in use.
func (o EncryptionScopeKeyVaultPropertiesResponsePtrOutput) CurrentVersionedKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionScopeKeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CurrentVersionedKeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.
func (o EncryptionScopeKeyVaultPropertiesResponsePtrOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionScopeKeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyUri
	}).(pulumi.StringPtrOutput)
}

// Timestamp of last rotation of the Key Vault Key.
func (o EncryptionScopeKeyVaultPropertiesResponsePtrOutput) LastKeyRotationTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionScopeKeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastKeyRotationTimestamp
	}).(pulumi.StringPtrOutput)
}

// A service that allows server-side encryption to be used.
type EncryptionService struct {
	// A boolean indicating whether or not the service encrypts the data as it is stored.
	Enabled *bool `pulumi:"enabled"`
	// Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.
	KeyType *string `pulumi:"keyType"`
}

// EncryptionServiceInput is an input type that accepts EncryptionServiceArgs and EncryptionServiceOutput values.
// You can construct a concrete instance of `EncryptionServiceInput` via:
//
//	EncryptionServiceArgs{...}
type EncryptionServiceInput interface {
	pulumi.Input

	ToEncryptionServiceOutput() EncryptionServiceOutput
	ToEncryptionServiceOutputWithContext(context.Context) EncryptionServiceOutput
}

// A service that allows server-side encryption to be used.
type EncryptionServiceArgs struct {
	// A boolean indicating whether or not the service encrypts the data as it is stored.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.
	KeyType pulumi.StringPtrInput `pulumi:"keyType"`
}

func (EncryptionServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionService)(nil)).Elem()
}

func (i EncryptionServiceArgs) ToEncryptionServiceOutput() EncryptionServiceOutput {
	return i.ToEncryptionServiceOutputWithContext(context.Background())
}

func (i EncryptionServiceArgs) ToEncryptionServiceOutputWithContext(ctx context.Context) EncryptionServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServiceOutput)
}

func (i EncryptionServiceArgs) ToEncryptionServicePtrOutput() EncryptionServicePtrOutput {
	return i.ToEncryptionServicePtrOutputWithContext(context.Background())
}

func (i EncryptionServiceArgs) ToEncryptionServicePtrOutputWithContext(ctx context.Context) EncryptionServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServiceOutput).ToEncryptionServicePtrOutputWithContext(ctx)
}

// EncryptionServicePtrInput is an input type that accepts EncryptionServiceArgs, EncryptionServicePtr and EncryptionServicePtrOutput values.
// You can construct a concrete instance of `EncryptionServicePtrInput` via:
//
//	        EncryptionServiceArgs{...}
//
//	or:
//
//	        nil
type EncryptionServicePtrInput interface {
	pulumi.Input

	ToEncryptionServicePtrOutput() EncryptionServicePtrOutput
	ToEncryptionServicePtrOutputWithContext(context.Context) EncryptionServicePtrOutput
}

type encryptionServicePtrType EncryptionServiceArgs

func EncryptionServicePtr(v *EncryptionServiceArgs) EncryptionServicePtrInput {
	return (*encryptionServicePtrType)(v)
}

func (*encryptionServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionService)(nil)).Elem()
}

func (i *encryptionServicePtrType) ToEncryptionServicePtrOutput() EncryptionServicePtrOutput {
	return i.ToEncryptionServicePtrOutputWithContext(context.Background())
}

func (i *encryptionServicePtrType) ToEncryptionServicePtrOutputWithContext(ctx context.Context) EncryptionServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServicePtrOutput)
}

// A service that allows server-side encryption to be used.
type EncryptionServiceOutput struct{ *pulumi.OutputState }

func (EncryptionServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionService)(nil)).Elem()
}

func (o EncryptionServiceOutput) ToEncryptionServiceOutput() EncryptionServiceOutput {
	return o
}

func (o EncryptionServiceOutput) ToEncryptionServiceOutputWithContext(ctx context.Context) EncryptionServiceOutput {
	return o
}

func (o EncryptionServiceOutput) ToEncryptionServicePtrOutput() EncryptionServicePtrOutput {
	return o.ToEncryptionServicePtrOutputWithContext(context.Background())
}

func (o EncryptionServiceOutput) ToEncryptionServicePtrOutputWithContext(ctx context.Context) EncryptionServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionService) *EncryptionService {
		return &v
	}).(EncryptionServicePtrOutput)
}

// A boolean indicating whether or not the service encrypts the data as it is stored.
func (o EncryptionServiceOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EncryptionService) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.
func (o EncryptionServiceOutput) KeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionService) *string { return v.KeyType }).(pulumi.StringPtrOutput)
}

type EncryptionServicePtrOutput struct{ *pulumi.OutputState }

func (EncryptionServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionService)(nil)).Elem()
}

func (o EncryptionServicePtrOutput) ToEncryptionServicePtrOutput() EncryptionServicePtrOutput {
	return o
}

func (o EncryptionServicePtrOutput) ToEncryptionServicePtrOutputWithContext(ctx context.Context) EncryptionServicePtrOutput {
	return o
}

func (o EncryptionServicePtrOutput) Elem() EncryptionServiceOutput {
	return o.ApplyT(func(v *EncryptionService) EncryptionService {
		if v != nil {
			return *v
		}
		var ret EncryptionService
		return ret
	}).(EncryptionServiceOutput)
}

// A boolean indicating whether or not the service encrypts the data as it is stored.
func (o EncryptionServicePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionService) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.
func (o EncryptionServicePtrOutput) KeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionService) *string {
		if v == nil {
			return nil
		}
		return v.KeyType
	}).(pulumi.StringPtrOutput)
}

// A service that allows server-side encryption to be used.
type EncryptionServiceResponse struct {
	// A boolean indicating whether or not the service encrypts the data as it is stored.
	Enabled *bool `pulumi:"enabled"`
	// Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.
	KeyType *string `pulumi:"keyType"`
	// Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.
	LastEnabledTime string `pulumi:"lastEnabledTime"`
}

// A service that allows server-side encryption to be used.
type EncryptionServiceResponseOutput struct{ *pulumi.OutputState }

func (EncryptionServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionServiceResponse)(nil)).Elem()
}

func (o EncryptionServiceResponseOutput) ToEncryptionServiceResponseOutput() EncryptionServiceResponseOutput {
	return o
}

func (o EncryptionServiceResponseOutput) ToEncryptionServiceResponseOutputWithContext(ctx context.Context) EncryptionServiceResponseOutput {
	return o
}

// A boolean indicating whether or not the service encrypts the data as it is stored.
func (o EncryptionServiceResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EncryptionServiceResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.
func (o EncryptionServiceResponseOutput) KeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionServiceResponse) *string { return v.KeyType }).(pulumi.StringPtrOutput)
}

// Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.
func (o EncryptionServiceResponseOutput) LastEnabledTime() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionServiceResponse) string { return v.LastEnabledTime }).(pulumi.StringOutput)
}

type EncryptionServiceResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionServiceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionServiceResponse)(nil)).Elem()
}

func (o EncryptionServiceResponsePtrOutput) ToEncryptionServiceResponsePtrOutput() EncryptionServiceResponsePtrOutput {
	return o
}

func (o EncryptionServiceResponsePtrOutput) ToEncryptionServiceResponsePtrOutputWithContext(ctx context.Context) EncryptionServiceResponsePtrOutput {
	return o
}

func (o EncryptionServiceResponsePtrOutput) Elem() EncryptionServiceResponseOutput {
	return o.ApplyT(func(v *EncryptionServiceResponse) EncryptionServiceResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionServiceResponse
		return ret
	}).(EncryptionServiceResponseOutput)
}

// A boolean indicating whether or not the service encrypts the data as it is stored.
func (o EncryptionServiceResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionServiceResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.
func (o EncryptionServiceResponsePtrOutput) KeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionServiceResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyType
	}).(pulumi.StringPtrOutput)
}

// Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate.
func (o EncryptionServiceResponsePtrOutput) LastEnabledTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastEnabledTime
	}).(pulumi.StringPtrOutput)
}

// A list of services that support encryption.
type EncryptionServices struct {
	// The encryption function of the blob storage service.
	Blob *EncryptionService `pulumi:"blob"`
	// The encryption function of the file storage service.
	File *EncryptionService `pulumi:"file"`
	// The encryption function of the queue storage service.
	Queue *EncryptionService `pulumi:"queue"`
	// The encryption function of the table storage service.
	Table *EncryptionService `pulumi:"table"`
}

// EncryptionServicesInput is an input type that accepts EncryptionServicesArgs and EncryptionServicesOutput values.
// You can construct a concrete instance of `EncryptionServicesInput` via:
//
//	EncryptionServicesArgs{...}
type EncryptionServicesInput interface {
	pulumi.Input

	ToEncryptionServicesOutput() EncryptionServicesOutput
	ToEncryptionServicesOutputWithContext(context.Context) EncryptionServicesOutput
}

// A list of services that support encryption.
type EncryptionServicesArgs struct {
	// The encryption function of the blob storage service.
	Blob EncryptionServicePtrInput `pulumi:"blob"`
	// The encryption function of the file storage service.
	File EncryptionServicePtrInput `pulumi:"file"`
	// The encryption function of the queue storage service.
	Queue EncryptionServicePtrInput `pulumi:"queue"`
	// The encryption function of the table storage service.
	Table EncryptionServicePtrInput `pulumi:"table"`
}

func (EncryptionServicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionServices)(nil)).Elem()
}

func (i EncryptionServicesArgs) ToEncryptionServicesOutput() EncryptionServicesOutput {
	return i.ToEncryptionServicesOutputWithContext(context.Background())
}

func (i EncryptionServicesArgs) ToEncryptionServicesOutputWithContext(ctx context.Context) EncryptionServicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServicesOutput)
}

func (i EncryptionServicesArgs) ToEncryptionServicesPtrOutput() EncryptionServicesPtrOutput {
	return i.ToEncryptionServicesPtrOutputWithContext(context.Background())
}

func (i EncryptionServicesArgs) ToEncryptionServicesPtrOutputWithContext(ctx context.Context) EncryptionServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServicesOutput).ToEncryptionServicesPtrOutputWithContext(ctx)
}

// EncryptionServicesPtrInput is an input type that accepts EncryptionServicesArgs, EncryptionServicesPtr and EncryptionServicesPtrOutput values.
// You can construct a concrete instance of `EncryptionServicesPtrInput` via:
//
//	        EncryptionServicesArgs{...}
//
//	or:
//
//	        nil
type EncryptionServicesPtrInput interface {
	pulumi.Input

	ToEncryptionServicesPtrOutput() EncryptionServicesPtrOutput
	ToEncryptionServicesPtrOutputWithContext(context.Context) EncryptionServicesPtrOutput
}

type encryptionServicesPtrType EncryptionServicesArgs

func EncryptionServicesPtr(v *EncryptionServicesArgs) EncryptionServicesPtrInput {
	return (*encryptionServicesPtrType)(v)
}

func (*encryptionServicesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionServices)(nil)).Elem()
}

func (i *encryptionServicesPtrType) ToEncryptionServicesPtrOutput() EncryptionServicesPtrOutput {
	return i.ToEncryptionServicesPtrOutputWithContext(context.Background())
}

func (i *encryptionServicesPtrType) ToEncryptionServicesPtrOutputWithContext(ctx context.Context) EncryptionServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionServicesPtrOutput)
}

// A list of services that support encryption.
type EncryptionServicesOutput struct{ *pulumi.OutputState }

func (EncryptionServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionServices)(nil)).Elem()
}

func (o EncryptionServicesOutput) ToEncryptionServicesOutput() EncryptionServicesOutput {
	return o
}

func (o EncryptionServicesOutput) ToEncryptionServicesOutputWithContext(ctx context.Context) EncryptionServicesOutput {
	return o
}

func (o EncryptionServicesOutput) ToEncryptionServicesPtrOutput() EncryptionServicesPtrOutput {
	return o.ToEncryptionServicesPtrOutputWithContext(context.Background())
}

func (o EncryptionServicesOutput) ToEncryptionServicesPtrOutputWithContext(ctx context.Context) EncryptionServicesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionServices) *EncryptionServices {
		return &v
	}).(EncryptionServicesPtrOutput)
}

// The encryption function of the blob storage service.
func (o EncryptionServicesOutput) Blob() EncryptionServicePtrOutput {
	return o.ApplyT(func(v EncryptionServices) *EncryptionService { return v.Blob }).(EncryptionServicePtrOutput)
}

// The encryption function of the file storage service.
func (o EncryptionServicesOutput) File() EncryptionServicePtrOutput {
	return o.ApplyT(func(v EncryptionServices) *EncryptionService { return v.File }).(EncryptionServicePtrOutput)
}

// The encryption function of the queue storage service.
func (o EncryptionServicesOutput) Queue() EncryptionServicePtrOutput {
	return o.ApplyT(func(v EncryptionServices) *EncryptionService { return v.Queue }).(EncryptionServicePtrOutput)
}

// The encryption function of the table storage service.
func (o EncryptionServicesOutput) Table() EncryptionServicePtrOutput {
	return o.ApplyT(func(v EncryptionServices) *EncryptionService { return v.Table }).(EncryptionServicePtrOutput)
}

type EncryptionServicesPtrOutput struct{ *pulumi.OutputState }

func (EncryptionServicesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionServices)(nil)).Elem()
}

func (o EncryptionServicesPtrOutput) ToEncryptionServicesPtrOutput() EncryptionServicesPtrOutput {
	return o
}

func (o EncryptionServicesPtrOutput) ToEncryptionServicesPtrOutputWithContext(ctx context.Context) EncryptionServicesPtrOutput {
	return o
}

func (o EncryptionServicesPtrOutput) Elem() EncryptionServicesOutput {
	return o.ApplyT(func(v *EncryptionServices) EncryptionServices {
		if v != nil {
			return *v
		}
		var ret EncryptionServices
		return ret
	}).(EncryptionServicesOutput)
}

// The encryption function of the blob storage service.
func (o EncryptionServicesPtrOutput) Blob() EncryptionServicePtrOutput {
	return o.ApplyT(func(v *EncryptionServices) *EncryptionService {
		if v == nil {
			return nil
		}
		return v.Blob
	}).(EncryptionServicePtrOutput)
}

// The encryption function of the file storage service.
func (o EncryptionServicesPtrOutput) File() EncryptionServicePtrOutput {
	return o.ApplyT(func(v *EncryptionServices) *EncryptionService {
		if v == nil {
			return nil
		}
		return v.File
	}).(EncryptionServicePtrOutput)
}

// The encryption function of the queue storage service.
func (o EncryptionServicesPtrOutput) Queue() EncryptionServicePtrOutput {
	return o.ApplyT(func(v *EncryptionServices) *EncryptionService {
		if v == nil {
			return nil
		}
		return v.Queue
	}).(EncryptionServicePtrOutput)
}

// The encryption function of the table storage service.
func (o EncryptionServicesPtrOutput) Table() EncryptionServicePtrOutput {
	return o.ApplyT(func(v *EncryptionServices) *EncryptionService {
		if v == nil {
			return nil
		}
		return v.Table
	}).(EncryptionServicePtrOutput)
}

// A list of services that support encryption.
type EncryptionServicesResponse struct {
	// The encryption function of the blob storage service.
	Blob *EncryptionServiceResponse `pulumi:"blob"`
	// The encryption function of the file storage service.
	File *EncryptionServiceResponse `pulumi:"file"`
	// The encryption function of the queue storage service.
	Queue *EncryptionServiceResponse `pulumi:"queue"`
	// The encryption function of the table storage service.
	Table *EncryptionServiceResponse `pulumi:"table"`
}

// A list of services that support encryption.
type EncryptionServicesResponseOutput struct{ *pulumi.OutputState }

func (EncryptionServicesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionServicesResponse)(nil)).Elem()
}

func (o EncryptionServicesResponseOutput) ToEncryptionServicesResponseOutput() EncryptionServicesResponseOutput {
	return o
}

func (o EncryptionServicesResponseOutput) ToEncryptionServicesResponseOutputWithContext(ctx context.Context) EncryptionServicesResponseOutput {
	return o
}

// The encryption function of the blob storage service.
func (o EncryptionServicesResponseOutput) Blob() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v EncryptionServicesResponse) *EncryptionServiceResponse { return v.Blob }).(EncryptionServiceResponsePtrOutput)
}

// The encryption function of the file storage service.
func (o EncryptionServicesResponseOutput) File() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v EncryptionServicesResponse) *EncryptionServiceResponse { return v.File }).(EncryptionServiceResponsePtrOutput)
}

// The encryption function of the queue storage service.
func (o EncryptionServicesResponseOutput) Queue() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v EncryptionServicesResponse) *EncryptionServiceResponse { return v.Queue }).(EncryptionServiceResponsePtrOutput)
}

// The encryption function of the table storage service.
func (o EncryptionServicesResponseOutput) Table() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v EncryptionServicesResponse) *EncryptionServiceResponse { return v.Table }).(EncryptionServiceResponsePtrOutput)
}

type EncryptionServicesResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionServicesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionServicesResponse)(nil)).Elem()
}

func (o EncryptionServicesResponsePtrOutput) ToEncryptionServicesResponsePtrOutput() EncryptionServicesResponsePtrOutput {
	return o
}

func (o EncryptionServicesResponsePtrOutput) ToEncryptionServicesResponsePtrOutputWithContext(ctx context.Context) EncryptionServicesResponsePtrOutput {
	return o
}

func (o EncryptionServicesResponsePtrOutput) Elem() EncryptionServicesResponseOutput {
	return o.ApplyT(func(v *EncryptionServicesResponse) EncryptionServicesResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionServicesResponse
		return ret
	}).(EncryptionServicesResponseOutput)
}

// The encryption function of the blob storage service.
func (o EncryptionServicesResponsePtrOutput) Blob() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionServicesResponse) *EncryptionServiceResponse {
		if v == nil {
			return nil
		}
		return v.Blob
	}).(EncryptionServiceResponsePtrOutput)
}

// The encryption function of the file storage service.
func (o EncryptionServicesResponsePtrOutput) File() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionServicesResponse) *EncryptionServiceResponse {
		if v == nil {
			return nil
		}
		return v.File
	}).(EncryptionServiceResponsePtrOutput)
}

// The encryption function of the queue storage service.
func (o EncryptionServicesResponsePtrOutput) Queue() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionServicesResponse) *EncryptionServiceResponse {
		if v == nil {
			return nil
		}
		return v.Queue
	}).(EncryptionServiceResponsePtrOutput)
}

// The encryption function of the table storage service.
func (o EncryptionServicesResponsePtrOutput) Table() EncryptionServiceResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionServicesResponse) *EncryptionServiceResponse {
		if v == nil {
			return nil
		}
		return v.Table
	}).(EncryptionServiceResponsePtrOutput)
}

// The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.
type EndpointsResponse struct {
	// Gets the blob endpoint.
	Blob string `pulumi:"blob"`
	// Gets the dfs endpoint.
	Dfs string `pulumi:"dfs"`
	// Gets the file endpoint.
	File string `pulumi:"file"`
	// Gets the internet routing storage endpoints
	InternetEndpoints *StorageAccountInternetEndpointsResponse `pulumi:"internetEndpoints"`
	// Gets the microsoft routing storage endpoints.
	MicrosoftEndpoints *StorageAccountMicrosoftEndpointsResponse `pulumi:"microsoftEndpoints"`
	// Gets the queue endpoint.
	Queue string `pulumi:"queue"`
	// Gets the table endpoint.
	Table string `pulumi:"table"`
	// Gets the web endpoint.
	Web string `pulumi:"web"`
}

// The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.
type EndpointsResponseOutput struct{ *pulumi.OutputState }

func (EndpointsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointsResponse)(nil)).Elem()
}

func (o EndpointsResponseOutput) ToEndpointsResponseOutput() EndpointsResponseOutput {
	return o
}

func (o EndpointsResponseOutput) ToEndpointsResponseOutputWithContext(ctx context.Context) EndpointsResponseOutput {
	return o
}

// Gets the blob endpoint.
func (o EndpointsResponseOutput) Blob() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Blob }).(pulumi.StringOutput)
}

// Gets the dfs endpoint.
func (o EndpointsResponseOutput) Dfs() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Dfs }).(pulumi.StringOutput)
}

// Gets the file endpoint.
func (o EndpointsResponseOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.File }).(pulumi.StringOutput)
}

// Gets the internet routing storage endpoints
func (o EndpointsResponseOutput) InternetEndpoints() StorageAccountInternetEndpointsResponsePtrOutput {
	return o.ApplyT(func(v EndpointsResponse) *StorageAccountInternetEndpointsResponse { return v.InternetEndpoints }).(StorageAccountInternetEndpointsResponsePtrOutput)
}

// Gets the microsoft routing storage endpoints.
func (o EndpointsResponseOutput) MicrosoftEndpoints() StorageAccountMicrosoftEndpointsResponsePtrOutput {
	return o.ApplyT(func(v EndpointsResponse) *StorageAccountMicrosoftEndpointsResponse { return v.MicrosoftEndpoints }).(StorageAccountMicrosoftEndpointsResponsePtrOutput)
}

// Gets the queue endpoint.
func (o EndpointsResponseOutput) Queue() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Queue }).(pulumi.StringOutput)
}

// Gets the table endpoint.
func (o EndpointsResponseOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Table }).(pulumi.StringOutput)
}

// Gets the web endpoint.
func (o EndpointsResponseOutput) Web() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Web }).(pulumi.StringOutput)
}

// The complex type of the extended location.
type ExtendedLocation struct {
	// The name of the extended location.
	Name *string `pulumi:"name"`
	// The type of the extended location.
	Type *string `pulumi:"type"`
}

// ExtendedLocationInput is an input type that accepts ExtendedLocationArgs and ExtendedLocationOutput values.
// You can construct a concrete instance of `ExtendedLocationInput` via:
//
//	ExtendedLocationArgs{...}
type ExtendedLocationInput interface {
	pulumi.Input

	ToExtendedLocationOutput() ExtendedLocationOutput
	ToExtendedLocationOutputWithContext(context.Context) ExtendedLocationOutput
}

// The complex type of the extended location.
type ExtendedLocationArgs struct {
	// The name of the extended location.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the extended location.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (i ExtendedLocationArgs) ToExtendedLocationOutput() ExtendedLocationOutput {
	return i.ToExtendedLocationOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput)
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput).ToExtendedLocationPtrOutputWithContext(ctx)
}

// ExtendedLocationPtrInput is an input type that accepts ExtendedLocationArgs, ExtendedLocationPtr and ExtendedLocationPtrOutput values.
// You can construct a concrete instance of `ExtendedLocationPtrInput` via:
//
//	        ExtendedLocationArgs{...}
//
//	or:
//
//	        nil
type ExtendedLocationPtrInput interface {
	pulumi.Input

	ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput
	ToExtendedLocationPtrOutputWithContext(context.Context) ExtendedLocationPtrOutput
}

type extendedLocationPtrType ExtendedLocationArgs

func ExtendedLocationPtr(v *ExtendedLocationArgs) ExtendedLocationPtrInput {
	return (*extendedLocationPtrType)(v)
}

func (*extendedLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationPtrOutput)
}

// The complex type of the extended location.
type ExtendedLocationOutput struct{ *pulumi.OutputState }

func (ExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationOutput) ToExtendedLocationOutput() ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedLocation) *ExtendedLocation {
		return &v
	}).(ExtendedLocationPtrOutput)
}

// The name of the extended location.
func (o ExtendedLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ExtendedLocationPtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) Elem() ExtendedLocationOutput {
	return o.ApplyT(func(v *ExtendedLocation) ExtendedLocation {
		if v != nil {
			return *v
		}
		var ret ExtendedLocation
		return ret
	}).(ExtendedLocationOutput)
}

// The name of the extended location.
func (o ExtendedLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The complex type of the extended location.
type ExtendedLocationResponse struct {
	// The name of the extended location.
	Name *string `pulumi:"name"`
	// The type of the extended location.
	Type *string `pulumi:"type"`
}

// The complex type of the extended location.
type ExtendedLocationResponseOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutput() ExtendedLocationResponseOutput {
	return o
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutputWithContext(ctx context.Context) ExtendedLocationResponseOutput {
	return o
}

// The name of the extended location.
func (o ExtendedLocationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ExtendedLocationResponsePtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutput() ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutputWithContext(ctx context.Context) ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) Elem() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) ExtendedLocationResponse {
		if v != nil {
			return *v
		}
		var ret ExtendedLocationResponse
		return ret
	}).(ExtendedLocationResponseOutput)
}

// The name of the extended location.
func (o ExtendedLocationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Statistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account.
type GeoReplicationStatsResponse struct {
	// A boolean flag which indicates whether or not account failover is supported for the account.
	CanFailover bool `pulumi:"canFailover"`
	// All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
	LastSyncTime string `pulumi:"lastSyncTime"`
	// The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.
	Status string `pulumi:"status"`
}

// Statistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account.
type GeoReplicationStatsResponseOutput struct{ *pulumi.OutputState }

func (GeoReplicationStatsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoReplicationStatsResponse)(nil)).Elem()
}

func (o GeoReplicationStatsResponseOutput) ToGeoReplicationStatsResponseOutput() GeoReplicationStatsResponseOutput {
	return o
}

func (o GeoReplicationStatsResponseOutput) ToGeoReplicationStatsResponseOutputWithContext(ctx context.Context) GeoReplicationStatsResponseOutput {
	return o
}

// A boolean flag which indicates whether or not account failover is supported for the account.
func (o GeoReplicationStatsResponseOutput) CanFailover() pulumi.BoolOutput {
	return o.ApplyT(func(v GeoReplicationStatsResponse) bool { return v.CanFailover }).(pulumi.BoolOutput)
}

// All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.
func (o GeoReplicationStatsResponseOutput) LastSyncTime() pulumi.StringOutput {
	return o.ApplyT(func(v GeoReplicationStatsResponse) string { return v.LastSyncTime }).(pulumi.StringOutput)
}

// The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.
func (o GeoReplicationStatsResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GeoReplicationStatsResponse) string { return v.Status }).(pulumi.StringOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRule struct {
	// The action of IP ACL rule.
	Action *Action `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	IPAddressOrRange string `pulumi:"iPAddressOrRange"`
}

// Defaults sets the appropriate defaults for IPRule
func (val *IPRule) Defaults() *IPRule {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Action) {
		action_ := Action("Allow")
		tmp.Action = &action_
	}
	return &tmp
}

// IPRuleInput is an input type that accepts IPRuleArgs and IPRuleOutput values.
// You can construct a concrete instance of `IPRuleInput` via:
//
//	IPRuleArgs{...}
type IPRuleInput interface {
	pulumi.Input

	ToIPRuleOutput() IPRuleOutput
	ToIPRuleOutputWithContext(context.Context) IPRuleOutput
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleArgs struct {
	// The action of IP ACL rule.
	Action ActionPtrInput `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	IPAddressOrRange pulumi.StringInput `pulumi:"iPAddressOrRange"`
}

// Defaults sets the appropriate defaults for IPRuleArgs
func (val *IPRuleArgs) Defaults() *IPRuleArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Action) {
		tmp.Action = Action("Allow")
	}
	return &tmp
}
func (IPRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRule)(nil)).Elem()
}

func (i IPRuleArgs) ToIPRuleOutput() IPRuleOutput {
	return i.ToIPRuleOutputWithContext(context.Background())
}

func (i IPRuleArgs) ToIPRuleOutputWithContext(ctx context.Context) IPRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleOutput)
}

// IPRuleArrayInput is an input type that accepts IPRuleArray and IPRuleArrayOutput values.
// You can construct a concrete instance of `IPRuleArrayInput` via:
//
//	IPRuleArray{ IPRuleArgs{...} }
type IPRuleArrayInput interface {
	pulumi.Input

	ToIPRuleArrayOutput() IPRuleArrayOutput
	ToIPRuleArrayOutputWithContext(context.Context) IPRuleArrayOutput
}

type IPRuleArray []IPRuleInput

func (IPRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRule)(nil)).Elem()
}

func (i IPRuleArray) ToIPRuleArrayOutput() IPRuleArrayOutput {
	return i.ToIPRuleArrayOutputWithContext(context.Background())
}

func (i IPRuleArray) ToIPRuleArrayOutputWithContext(ctx context.Context) IPRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleArrayOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleOutput struct{ *pulumi.OutputState }

func (IPRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRule)(nil)).Elem()
}

func (o IPRuleOutput) ToIPRuleOutput() IPRuleOutput {
	return o
}

func (o IPRuleOutput) ToIPRuleOutputWithContext(ctx context.Context) IPRuleOutput {
	return o
}

// The action of IP ACL rule.
func (o IPRuleOutput) Action() ActionPtrOutput {
	return o.ApplyT(func(v IPRule) *Action { return v.Action }).(ActionPtrOutput)
}

// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
func (o IPRuleOutput) IPAddressOrRange() pulumi.StringOutput {
	return o.ApplyT(func(v IPRule) string { return v.IPAddressOrRange }).(pulumi.StringOutput)
}

type IPRuleArrayOutput struct{ *pulumi.OutputState }

func (IPRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRule)(nil)).Elem()
}

func (o IPRuleArrayOutput) ToIPRuleArrayOutput() IPRuleArrayOutput {
	return o
}

func (o IPRuleArrayOutput) ToIPRuleArrayOutputWithContext(ctx context.Context) IPRuleArrayOutput {
	return o
}

func (o IPRuleArrayOutput) Index(i pulumi.IntInput) IPRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPRule {
		return vs[0].([]IPRule)[vs[1].(int)]
	}).(IPRuleOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleResponse struct {
	// The action of IP ACL rule.
	Action *string `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	IPAddressOrRange string `pulumi:"iPAddressOrRange"`
}

// Defaults sets the appropriate defaults for IPRuleResponse
func (val *IPRuleResponse) Defaults() *IPRuleResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Action) {
		action_ := "Allow"
		tmp.Action = &action_
	}
	return &tmp
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleResponseOutput struct{ *pulumi.OutputState }

func (IPRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRuleResponse)(nil)).Elem()
}

func (o IPRuleResponseOutput) ToIPRuleResponseOutput() IPRuleResponseOutput {
	return o
}

func (o IPRuleResponseOutput) ToIPRuleResponseOutputWithContext(ctx context.Context) IPRuleResponseOutput {
	return o
}

// The action of IP ACL rule.
func (o IPRuleResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPRuleResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
func (o IPRuleResponseOutput) IPAddressOrRange() pulumi.StringOutput {
	return o.ApplyT(func(v IPRuleResponse) string { return v.IPAddressOrRange }).(pulumi.StringOutput)
}

type IPRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (IPRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRuleResponse)(nil)).Elem()
}

func (o IPRuleResponseArrayOutput) ToIPRuleResponseArrayOutput() IPRuleResponseArrayOutput {
	return o
}

func (o IPRuleResponseArrayOutput) ToIPRuleResponseArrayOutputWithContext(ctx context.Context) IPRuleResponseArrayOutput {
	return o
}

func (o IPRuleResponseArrayOutput) Index(i pulumi.IntInput) IPRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPRuleResponse {
		return vs[0].([]IPRuleResponse)[vs[1].(int)]
	}).(IPRuleResponseOutput)
}

// Identity for the resource.
type Identity struct {
	// The identity type.
	Type string `pulumi:"type"`
	// Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here.
	UserAssignedIdentities map[string]interface{} `pulumi:"userAssignedIdentities"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//	IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Identity for the resource.
type IdentityArgs struct {
	// The identity type.
	Type pulumi.StringInput `pulumi:"type"`
	// Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here.
	UserAssignedIdentities pulumi.MapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//	        IdentityArgs{...}
//
//	or:
//
//	        nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Identity for the resource.
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

// The identity type.
func (o IdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v Identity) string { return v.Type }).(pulumi.StringOutput)
}

// Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here.
func (o IdentityOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v Identity) map[string]interface{} { return v.UserAssignedIdentities }).(pulumi.MapOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity {
		if v != nil {
			return *v
		}
		var ret Identity
		return ret
	}).(IdentityOutput)
}

// The identity type.
func (o IdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here.
func (o IdentityPtrOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v *Identity) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.MapOutput)
}

// Identity for the resource.
type IdentityResponse struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// The identity type.
	Type string `pulumi:"type"`
	// Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Identity for the resource.
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

// The principal ID of resource identity.
func (o IdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o IdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type.
func (o IdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here.
func (o IdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v IdentityResponse) map[string]UserAssignedIdentityResponse { return v.UserAssignedIdentities }).(UserAssignedIdentityResponseMapOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse {
		if v != nil {
			return *v
		}
		var ret IdentityResponse
		return ret
	}).(IdentityResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here.
func (o IdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *IdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// The properties of an ImmutabilityPolicy of a blob container.
type ImmutabilityPolicyPropertiesResponse struct {
	// This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API
	AllowProtectedAppendWrites *bool `pulumi:"allowProtectedAppendWrites"`
	// ImmutabilityPolicy Etag.
	Etag string `pulumi:"etag"`
	// The immutability period for the blobs in the container since the policy creation, in days.
	ImmutabilityPeriodSinceCreationInDays *int `pulumi:"immutabilityPeriodSinceCreationInDays"`
	// The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
	State string `pulumi:"state"`
	// The ImmutabilityPolicy update history of the blob container.
	UpdateHistory []UpdateHistoryPropertyResponse `pulumi:"updateHistory"`
}

// The properties of an ImmutabilityPolicy of a blob container.
type ImmutabilityPolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ImmutabilityPolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilityPolicyPropertiesResponse)(nil)).Elem()
}

func (o ImmutabilityPolicyPropertiesResponseOutput) ToImmutabilityPolicyPropertiesResponseOutput() ImmutabilityPolicyPropertiesResponseOutput {
	return o
}

func (o ImmutabilityPolicyPropertiesResponseOutput) ToImmutabilityPolicyPropertiesResponseOutputWithContext(ctx context.Context) ImmutabilityPolicyPropertiesResponseOutput {
	return o
}

// This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API
func (o ImmutabilityPolicyPropertiesResponseOutput) AllowProtectedAppendWrites() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ImmutabilityPolicyPropertiesResponse) *bool { return v.AllowProtectedAppendWrites }).(pulumi.BoolPtrOutput)
}

// ImmutabilityPolicy Etag.
func (o ImmutabilityPolicyPropertiesResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ImmutabilityPolicyPropertiesResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The immutability period for the blobs in the container since the policy creation, in days.
func (o ImmutabilityPolicyPropertiesResponseOutput) ImmutabilityPeriodSinceCreationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ImmutabilityPolicyPropertiesResponse) *int { return v.ImmutabilityPeriodSinceCreationInDays }).(pulumi.IntPtrOutput)
}

// The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
func (o ImmutabilityPolicyPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ImmutabilityPolicyPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// The ImmutabilityPolicy update history of the blob container.
func (o ImmutabilityPolicyPropertiesResponseOutput) UpdateHistory() UpdateHistoryPropertyResponseArrayOutput {
	return o.ApplyT(func(v ImmutabilityPolicyPropertiesResponse) []UpdateHistoryPropertyResponse { return v.UpdateHistory }).(UpdateHistoryPropertyResponseArrayOutput)
}

// Storage account keys creation time.
type KeyCreationTimeResponse struct {
	Key1 *string `pulumi:"key1"`
	Key2 *string `pulumi:"key2"`
}

// Storage account keys creation time.
type KeyCreationTimeResponseOutput struct{ *pulumi.OutputState }

func (KeyCreationTimeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyCreationTimeResponse)(nil)).Elem()
}

func (o KeyCreationTimeResponseOutput) ToKeyCreationTimeResponseOutput() KeyCreationTimeResponseOutput {
	return o
}

func (o KeyCreationTimeResponseOutput) ToKeyCreationTimeResponseOutputWithContext(ctx context.Context) KeyCreationTimeResponseOutput {
	return o
}

func (o KeyCreationTimeResponseOutput) Key1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyCreationTimeResponse) *string { return v.Key1 }).(pulumi.StringPtrOutput)
}

func (o KeyCreationTimeResponseOutput) Key2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyCreationTimeResponse) *string { return v.Key2 }).(pulumi.StringPtrOutput)
}

// KeyPolicy assigned to the storage account.
type KeyPolicy struct {
	// The key expiration period in days.
	KeyExpirationPeriodInDays int `pulumi:"keyExpirationPeriodInDays"`
}

// KeyPolicyInput is an input type that accepts KeyPolicyArgs and KeyPolicyOutput values.
// You can construct a concrete instance of `KeyPolicyInput` via:
//
//	KeyPolicyArgs{...}
type KeyPolicyInput interface {
	pulumi.Input

	ToKeyPolicyOutput() KeyPolicyOutput
	ToKeyPolicyOutputWithContext(context.Context) KeyPolicyOutput
}

// KeyPolicy assigned to the storage account.
type KeyPolicyArgs struct {
	// The key expiration period in days.
	KeyExpirationPeriodInDays pulumi.IntInput `pulumi:"keyExpirationPeriodInDays"`
}

func (KeyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyPolicy)(nil)).Elem()
}

func (i KeyPolicyArgs) ToKeyPolicyOutput() KeyPolicyOutput {
	return i.ToKeyPolicyOutputWithContext(context.Background())
}

func (i KeyPolicyArgs) ToKeyPolicyOutputWithContext(ctx context.Context) KeyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyPolicyOutput)
}

func (i KeyPolicyArgs) ToKeyPolicyPtrOutput() KeyPolicyPtrOutput {
	return i.ToKeyPolicyPtrOutputWithContext(context.Background())
}

func (i KeyPolicyArgs) ToKeyPolicyPtrOutputWithContext(ctx context.Context) KeyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyPolicyOutput).ToKeyPolicyPtrOutputWithContext(ctx)
}

// KeyPolicyPtrInput is an input type that accepts KeyPolicyArgs, KeyPolicyPtr and KeyPolicyPtrOutput values.
// You can construct a concrete instance of `KeyPolicyPtrInput` via:
//
//	        KeyPolicyArgs{...}
//
//	or:
//
//	        nil
type KeyPolicyPtrInput interface {
	pulumi.Input

	ToKeyPolicyPtrOutput() KeyPolicyPtrOutput
	ToKeyPolicyPtrOutputWithContext(context.Context) KeyPolicyPtrOutput
}

type keyPolicyPtrType KeyPolicyArgs

func KeyPolicyPtr(v *KeyPolicyArgs) KeyPolicyPtrInput {
	return (*keyPolicyPtrType)(v)
}

func (*keyPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyPolicy)(nil)).Elem()
}

func (i *keyPolicyPtrType) ToKeyPolicyPtrOutput() KeyPolicyPtrOutput {
	return i.ToKeyPolicyPtrOutputWithContext(context.Background())
}

func (i *keyPolicyPtrType) ToKeyPolicyPtrOutputWithContext(ctx context.Context) KeyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyPolicyPtrOutput)
}

// KeyPolicy assigned to the storage account.
type KeyPolicyOutput struct{ *pulumi.OutputState }

func (KeyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyPolicy)(nil)).Elem()
}

func (o KeyPolicyOutput) ToKeyPolicyOutput() KeyPolicyOutput {
	return o
}

func (o KeyPolicyOutput) ToKeyPolicyOutputWithContext(ctx context.Context) KeyPolicyOutput {
	return o
}

func (o KeyPolicyOutput) ToKeyPolicyPtrOutput() KeyPolicyPtrOutput {
	return o.ToKeyPolicyPtrOutputWithContext(context.Background())
}

func (o KeyPolicyOutput) ToKeyPolicyPtrOutputWithContext(ctx context.Context) KeyPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyPolicy) *KeyPolicy {
		return &v
	}).(KeyPolicyPtrOutput)
}

// The key expiration period in days.
func (o KeyPolicyOutput) KeyExpirationPeriodInDays() pulumi.IntOutput {
	return o.ApplyT(func(v KeyPolicy) int { return v.KeyExpirationPeriodInDays }).(pulumi.IntOutput)
}

type KeyPolicyPtrOutput struct{ *pulumi.OutputState }

func (KeyPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyPolicy)(nil)).Elem()
}

func (o KeyPolicyPtrOutput) ToKeyPolicyPtrOutput() KeyPolicyPtrOutput {
	return o
}

func (o KeyPolicyPtrOutput) ToKeyPolicyPtrOutputWithContext(ctx context.Context) KeyPolicyPtrOutput {
	return o
}

func (o KeyPolicyPtrOutput) Elem() KeyPolicyOutput {
	return o.ApplyT(func(v *KeyPolicy) KeyPolicy {
		if v != nil {
			return *v
		}
		var ret KeyPolicy
		return ret
	}).(KeyPolicyOutput)
}

// The key expiration period in days.
func (o KeyPolicyPtrOutput) KeyExpirationPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KeyPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.KeyExpirationPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// KeyPolicy assigned to the storage account.
type KeyPolicyResponse struct {
	// The key expiration period in days.
	KeyExpirationPeriodInDays int `pulumi:"keyExpirationPeriodInDays"`
}

// KeyPolicy assigned to the storage account.
type KeyPolicyResponseOutput struct{ *pulumi.OutputState }

func (KeyPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyPolicyResponse)(nil)).Elem()
}

func (o KeyPolicyResponseOutput) ToKeyPolicyResponseOutput() KeyPolicyResponseOutput {
	return o
}

func (o KeyPolicyResponseOutput) ToKeyPolicyResponseOutputWithContext(ctx context.Context) KeyPolicyResponseOutput {
	return o
}

// The key expiration period in days.
func (o KeyPolicyResponseOutput) KeyExpirationPeriodInDays() pulumi.IntOutput {
	return o.ApplyT(func(v KeyPolicyResponse) int { return v.KeyExpirationPeriodInDays }).(pulumi.IntOutput)
}

// Properties of key vault.
type KeyVaultProperties struct {
	// The name of KeyVault key.
	KeyName *string `pulumi:"keyName"`
	// The Uri of KeyVault.
	KeyVaultUri *string `pulumi:"keyVaultUri"`
	// The version of KeyVault key.
	KeyVersion *string `pulumi:"keyVersion"`
}

// KeyVaultPropertiesInput is an input type that accepts KeyVaultPropertiesArgs and KeyVaultPropertiesOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesInput` via:
//
//	KeyVaultPropertiesArgs{...}
type KeyVaultPropertiesInput interface {
	pulumi.Input

	ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput
	ToKeyVaultPropertiesOutputWithContext(context.Context) KeyVaultPropertiesOutput
}

// Properties of key vault.
type KeyVaultPropertiesArgs struct {
	// The name of KeyVault key.
	KeyName pulumi.StringPtrInput `pulumi:"keyName"`
	// The Uri of KeyVault.
	KeyVaultUri pulumi.StringPtrInput `pulumi:"keyVaultUri"`
	// The version of KeyVault key.
	KeyVersion pulumi.StringPtrInput `pulumi:"keyVersion"`
}

func (KeyVaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return i.ToKeyVaultPropertiesOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput)
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput).ToKeyVaultPropertiesPtrOutputWithContext(ctx)
}

// KeyVaultPropertiesPtrInput is an input type that accepts KeyVaultPropertiesArgs, KeyVaultPropertiesPtr and KeyVaultPropertiesPtrOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesPtrInput` via:
//
//	        KeyVaultPropertiesArgs{...}
//
//	or:
//
//	        nil
type KeyVaultPropertiesPtrInput interface {
	pulumi.Input

	ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput
	ToKeyVaultPropertiesPtrOutputWithContext(context.Context) KeyVaultPropertiesPtrOutput
}

type keyVaultPropertiesPtrType KeyVaultPropertiesArgs

func KeyVaultPropertiesPtr(v *KeyVaultPropertiesArgs) KeyVaultPropertiesPtrInput {
	return (*keyVaultPropertiesPtrType)(v)
}

func (*keyVaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesPtrOutput)
}

// Properties of key vault.
type KeyVaultPropertiesOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyVaultProperties) *KeyVaultProperties {
		return &v
	}).(KeyVaultPropertiesPtrOutput)
}

// The name of KeyVault key.
func (o KeyVaultPropertiesOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// The Uri of KeyVault.
func (o KeyVaultPropertiesOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.KeyVaultUri }).(pulumi.StringPtrOutput)
}

// The version of KeyVault key.
func (o KeyVaultPropertiesOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.KeyVersion }).(pulumi.StringPtrOutput)
}

type KeyVaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) Elem() KeyVaultPropertiesOutput {
	return o.ApplyT(func(v *KeyVaultProperties) KeyVaultProperties {
		if v != nil {
			return *v
		}
		var ret KeyVaultProperties
		return ret
	}).(KeyVaultPropertiesOutput)
}

// The name of KeyVault key.
func (o KeyVaultPropertiesPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyName
	}).(pulumi.StringPtrOutput)
}

// The Uri of KeyVault.
func (o KeyVaultPropertiesPtrOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultUri
	}).(pulumi.StringPtrOutput)
}

// The version of KeyVault key.
func (o KeyVaultPropertiesPtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

// Properties of key vault.
type KeyVaultPropertiesResponse struct {
	// The object identifier of the current versioned Key Vault Key in use.
	CurrentVersionedKeyIdentifier string `pulumi:"currentVersionedKeyIdentifier"`
	// The name of KeyVault key.
	KeyName *string `pulumi:"keyName"`
	// The Uri of KeyVault.
	KeyVaultUri *string `pulumi:"keyVaultUri"`
	// The version of KeyVault key.
	KeyVersion *string `pulumi:"keyVersion"`
	// Timestamp of last rotation of the Key Vault Key.
	LastKeyRotationTimestamp string `pulumi:"lastKeyRotationTimestamp"`
}

// Properties of key vault.
type KeyVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesResponseOutput {
	return o
}

// The object identifier of the current versioned Key Vault Key in use.
func (o KeyVaultPropertiesResponseOutput) CurrentVersionedKeyIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) string { return v.CurrentVersionedKeyIdentifier }).(pulumi.StringOutput)
}

// The name of KeyVault key.
func (o KeyVaultPropertiesResponseOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// The Uri of KeyVault.
func (o KeyVaultPropertiesResponseOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.KeyVaultUri }).(pulumi.StringPtrOutput)
}

// The version of KeyVault key.
func (o KeyVaultPropertiesResponseOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.KeyVersion }).(pulumi.StringPtrOutput)
}

// Timestamp of last rotation of the Key Vault Key.
func (o KeyVaultPropertiesResponseOutput) LastKeyRotationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) string { return v.LastKeyRotationTimestamp }).(pulumi.StringOutput)
}

type KeyVaultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) Elem() KeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) KeyVaultPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret KeyVaultPropertiesResponse
		return ret
	}).(KeyVaultPropertiesResponseOutput)
}

// The object identifier of the current versioned Key Vault Key in use.
func (o KeyVaultPropertiesResponsePtrOutput) CurrentVersionedKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CurrentVersionedKeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// The name of KeyVault key.
func (o KeyVaultPropertiesResponsePtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyName
	}).(pulumi.StringPtrOutput)
}

// The Uri of KeyVault.
func (o KeyVaultPropertiesResponsePtrOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultUri
	}).(pulumi.StringPtrOutput)
}

// The version of KeyVault key.
func (o KeyVaultPropertiesResponsePtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

// Timestamp of last rotation of the Key Vault Key.
func (o KeyVaultPropertiesResponsePtrOutput) LastKeyRotationTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastKeyRotationTimestamp
	}).(pulumi.StringPtrOutput)
}

// The blob service properties for Last access time based tracking policy.
type LastAccessTimeTrackingPolicy struct {
	// An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only
	BlobType []string `pulumi:"blobType"`
	// When set to true last access time based tracking is enabled.
	Enable bool `pulumi:"enable"`
	// Name of the policy. The valid value is AccessTimeTracking. This field is currently read only
	Name *string `pulumi:"name"`
	// The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1
	TrackingGranularityInDays *int `pulumi:"trackingGranularityInDays"`
}

// LastAccessTimeTrackingPolicyInput is an input type that accepts LastAccessTimeTrackingPolicyArgs and LastAccessTimeTrackingPolicyOutput values.
// You can construct a concrete instance of `LastAccessTimeTrackingPolicyInput` via:
//
//	LastAccessTimeTrackingPolicyArgs{...}
type LastAccessTimeTrackingPolicyInput interface {
	pulumi.Input

	ToLastAccessTimeTrackingPolicyOutput() LastAccessTimeTrackingPolicyOutput
	ToLastAccessTimeTrackingPolicyOutputWithContext(context.Context) LastAccessTimeTrackingPolicyOutput
}

// The blob service properties for Last access time based tracking policy.
type LastAccessTimeTrackingPolicyArgs struct {
	// An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only
	BlobType pulumi.StringArrayInput `pulumi:"blobType"`
	// When set to true last access time based tracking is enabled.
	Enable pulumi.BoolInput `pulumi:"enable"`
	// Name of the policy. The valid value is AccessTimeTracking. This field is currently read only
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1
	TrackingGranularityInDays pulumi.IntPtrInput `pulumi:"trackingGranularityInDays"`
}

func (LastAccessTimeTrackingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LastAccessTimeTrackingPolicy)(nil)).Elem()
}

func (i LastAccessTimeTrackingPolicyArgs) ToLastAccessTimeTrackingPolicyOutput() LastAccessTimeTrackingPolicyOutput {
	return i.ToLastAccessTimeTrackingPolicyOutputWithContext(context.Background())
}

func (i LastAccessTimeTrackingPolicyArgs) ToLastAccessTimeTrackingPolicyOutputWithContext(ctx context.Context) LastAccessTimeTrackingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LastAccessTimeTrackingPolicyOutput)
}

func (i LastAccessTimeTrackingPolicyArgs) ToLastAccessTimeTrackingPolicyPtrOutput() LastAccessTimeTrackingPolicyPtrOutput {
	return i.ToLastAccessTimeTrackingPolicyPtrOutputWithContext(context.Background())
}

func (i LastAccessTimeTrackingPolicyArgs) ToLastAccessTimeTrackingPolicyPtrOutputWithContext(ctx context.Context) LastAccessTimeTrackingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LastAccessTimeTrackingPolicyOutput).ToLastAccessTimeTrackingPolicyPtrOutputWithContext(ctx)
}

// LastAccessTimeTrackingPolicyPtrInput is an input type that accepts LastAccessTimeTrackingPolicyArgs, LastAccessTimeTrackingPolicyPtr and LastAccessTimeTrackingPolicyPtrOutput values.
// You can construct a concrete instance of `LastAccessTimeTrackingPolicyPtrInput` via:
//
//	        LastAccessTimeTrackingPolicyArgs{...}
//
//	or:
//
//	        nil
type LastAccessTimeTrackingPolicyPtrInput interface {
	pulumi.Input

	ToLastAccessTimeTrackingPolicyPtrOutput() LastAccessTimeTrackingPolicyPtrOutput
	ToLastAccessTimeTrackingPolicyPtrOutputWithContext(context.Context) LastAccessTimeTrackingPolicyPtrOutput
}

type lastAccessTimeTrackingPolicyPtrType LastAccessTimeTrackingPolicyArgs

func LastAccessTimeTrackingPolicyPtr(v *LastAccessTimeTrackingPolicyArgs) LastAccessTimeTrackingPolicyPtrInput {
	return (*lastAccessTimeTrackingPolicyPtrType)(v)
}

func (*lastAccessTimeTrackingPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LastAccessTimeTrackingPolicy)(nil)).Elem()
}

func (i *lastAccessTimeTrackingPolicyPtrType) ToLastAccessTimeTrackingPolicyPtrOutput() LastAccessTimeTrackingPolicyPtrOutput {
	return i.ToLastAccessTimeTrackingPolicyPtrOutputWithContext(context.Background())
}

func (i *lastAccessTimeTrackingPolicyPtrType) ToLastAccessTimeTrackingPolicyPtrOutputWithContext(ctx context.Context) LastAccessTimeTrackingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LastAccessTimeTrackingPolicyPtrOutput)
}

// The blob service properties for Last access time based tracking policy.
type LastAccessTimeTrackingPolicyOutput struct{ *pulumi.OutputState }

func (LastAccessTimeTrackingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LastAccessTimeTrackingPolicy)(nil)).Elem()
}

func (o LastAccessTimeTrackingPolicyOutput) ToLastAccessTimeTrackingPolicyOutput() LastAccessTimeTrackingPolicyOutput {
	return o
}

func (o LastAccessTimeTrackingPolicyOutput) ToLastAccessTimeTrackingPolicyOutputWithContext(ctx context.Context) LastAccessTimeTrackingPolicyOutput {
	return o
}

func (o LastAccessTimeTrackingPolicyOutput) ToLastAccessTimeTrackingPolicyPtrOutput() LastAccessTimeTrackingPolicyPtrOutput {
	return o.ToLastAccessTimeTrackingPolicyPtrOutputWithContext(context.Background())
}

func (o LastAccessTimeTrackingPolicyOutput) ToLastAccessTimeTrackingPolicyPtrOutputWithContext(ctx context.Context) LastAccessTimeTrackingPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LastAccessTimeTrackingPolicy) *LastAccessTimeTrackingPolicy {
		return &v
	}).(LastAccessTimeTrackingPolicyPtrOutput)
}

// An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only
func (o LastAccessTimeTrackingPolicyOutput) BlobType() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LastAccessTimeTrackingPolicy) []string { return v.BlobType }).(pulumi.StringArrayOutput)
}

// When set to true last access time based tracking is enabled.
func (o LastAccessTimeTrackingPolicyOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v LastAccessTimeTrackingPolicy) bool { return v.Enable }).(pulumi.BoolOutput)
}

// Name of the policy. The valid value is AccessTimeTracking. This field is currently read only
func (o LastAccessTimeTrackingPolicyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LastAccessTimeTrackingPolicy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1
func (o LastAccessTimeTrackingPolicyOutput) TrackingGranularityInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LastAccessTimeTrackingPolicy) *int { return v.TrackingGranularityInDays }).(pulumi.IntPtrOutput)
}

type LastAccessTimeTrackingPolicyPtrOutput struct{ *pulumi.OutputState }

func (LastAccessTimeTrackingPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LastAccessTimeTrackingPolicy)(nil)).Elem()
}

func (o LastAccessTimeTrackingPolicyPtrOutput) ToLastAccessTimeTrackingPolicyPtrOutput() LastAccessTimeTrackingPolicyPtrOutput {
	return o
}

func (o LastAccessTimeTrackingPolicyPtrOutput) ToLastAccessTimeTrackingPolicyPtrOutputWithContext(ctx context.Context) LastAccessTimeTrackingPolicyPtrOutput {
	return o
}

func (o LastAccessTimeTrackingPolicyPtrOutput) Elem() LastAccessTimeTrackingPolicyOutput {
	return o.ApplyT(func(v *LastAccessTimeTrackingPolicy) LastAccessTimeTrackingPolicy {
		if v != nil {
			return *v
		}
		var ret LastAccessTimeTrackingPolicy
		return ret
	}).(LastAccessTimeTrackingPolicyOutput)
}

// An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only
func (o LastAccessTimeTrackingPolicyPtrOutput) BlobType() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LastAccessTimeTrackingPolicy) []string {
		if v == nil {
			return nil
		}
		return v.BlobType
	}).(pulumi.StringArrayOutput)
}

// When set to true last access time based tracking is enabled.
func (o LastAccessTimeTrackingPolicyPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LastAccessTimeTrackingPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Enable
	}).(pulumi.BoolPtrOutput)
}

// Name of the policy. The valid value is AccessTimeTracking. This field is currently read only
func (o LastAccessTimeTrackingPolicyPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LastAccessTimeTrackingPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1
func (o LastAccessTimeTrackingPolicyPtrOutput) TrackingGranularityInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LastAccessTimeTrackingPolicy) *int {
		if v == nil {
			return nil
		}
		return v.TrackingGranularityInDays
	}).(pulumi.IntPtrOutput)
}

// The blob service properties for Last access time based tracking policy.
type LastAccessTimeTrackingPolicyResponse struct {
	// An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only
	BlobType []string `pulumi:"blobType"`
	// When set to true last access time based tracking is enabled.
	Enable bool `pulumi:"enable"`
	// Name of the policy. The valid value is AccessTimeTracking. This field is currently read only
	Name *string `pulumi:"name"`
	// The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1
	TrackingGranularityInDays *int `pulumi:"trackingGranularityInDays"`
}

// The blob service properties for Last access time based tracking policy.
type LastAccessTimeTrackingPolicyResponseOutput struct{ *pulumi.OutputState }

func (LastAccessTimeTrackingPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LastAccessTimeTrackingPolicyResponse)(nil)).Elem()
}

func (o LastAccessTimeTrackingPolicyResponseOutput) ToLastAccessTimeTrackingPolicyResponseOutput() LastAccessTimeTrackingPolicyResponseOutput {
	return o
}

func (o LastAccessTimeTrackingPolicyResponseOutput) ToLastAccessTimeTrackingPolicyResponseOutputWithContext(ctx context.Context) LastAccessTimeTrackingPolicyResponseOutput {
	return o
}

// An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only
func (o LastAccessTimeTrackingPolicyResponseOutput) BlobType() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LastAccessTimeTrackingPolicyResponse) []string { return v.BlobType }).(pulumi.StringArrayOutput)
}

// When set to true last access time based tracking is enabled.
func (o LastAccessTimeTrackingPolicyResponseOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v LastAccessTimeTrackingPolicyResponse) bool { return v.Enable }).(pulumi.BoolOutput)
}

// Name of the policy. The valid value is AccessTimeTracking. This field is currently read only
func (o LastAccessTimeTrackingPolicyResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LastAccessTimeTrackingPolicyResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1
func (o LastAccessTimeTrackingPolicyResponseOutput) TrackingGranularityInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LastAccessTimeTrackingPolicyResponse) *int { return v.TrackingGranularityInDays }).(pulumi.IntPtrOutput)
}

type LastAccessTimeTrackingPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (LastAccessTimeTrackingPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LastAccessTimeTrackingPolicyResponse)(nil)).Elem()
}

func (o LastAccessTimeTrackingPolicyResponsePtrOutput) ToLastAccessTimeTrackingPolicyResponsePtrOutput() LastAccessTimeTrackingPolicyResponsePtrOutput {
	return o
}

func (o LastAccessTimeTrackingPolicyResponsePtrOutput) ToLastAccessTimeTrackingPolicyResponsePtrOutputWithContext(ctx context.Context) LastAccessTimeTrackingPolicyResponsePtrOutput {
	return o
}

func (o LastAccessTimeTrackingPolicyResponsePtrOutput) Elem() LastAccessTimeTrackingPolicyResponseOutput {
	return o.ApplyT(func(v *LastAccessTimeTrackingPolicyResponse) LastAccessTimeTrackingPolicyResponse {
		if v != nil {
			return *v
		}
		var ret LastAccessTimeTrackingPolicyResponse
		return ret
	}).(LastAccessTimeTrackingPolicyResponseOutput)
}

// An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only
func (o LastAccessTimeTrackingPolicyResponsePtrOutput) BlobType() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LastAccessTimeTrackingPolicyResponse) []string {
		if v == nil {
			return nil
		}
		return v.BlobType
	}).(pulumi.StringArrayOutput)
}

// When set to true last access time based tracking is enabled.
func (o LastAccessTimeTrackingPolicyResponsePtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LastAccessTimeTrackingPolicyResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enable
	}).(pulumi.BoolPtrOutput)
}

// Name of the policy. The valid value is AccessTimeTracking. This field is currently read only
func (o LastAccessTimeTrackingPolicyResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LastAccessTimeTrackingPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1
func (o LastAccessTimeTrackingPolicyResponsePtrOutput) TrackingGranularityInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LastAccessTimeTrackingPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.TrackingGranularityInDays
	}).(pulumi.IntPtrOutput)
}

// The LegalHold property of a blob container.
type LegalHoldPropertiesResponse struct {
	// The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
	HasLegalHold bool `pulumi:"hasLegalHold"`
	// The list of LegalHold tags of a blob container.
	Tags []TagPropertyResponse `pulumi:"tags"`
}

// The LegalHold property of a blob container.
type LegalHoldPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LegalHoldPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LegalHoldPropertiesResponse)(nil)).Elem()
}

func (o LegalHoldPropertiesResponseOutput) ToLegalHoldPropertiesResponseOutput() LegalHoldPropertiesResponseOutput {
	return o
}

func (o LegalHoldPropertiesResponseOutput) ToLegalHoldPropertiesResponseOutputWithContext(ctx context.Context) LegalHoldPropertiesResponseOutput {
	return o
}

// The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.
func (o LegalHoldPropertiesResponseOutput) HasLegalHold() pulumi.BoolOutput {
	return o.ApplyT(func(v LegalHoldPropertiesResponse) bool { return v.HasLegalHold }).(pulumi.BoolOutput)
}

// The list of LegalHold tags of a blob container.
func (o LegalHoldPropertiesResponseOutput) Tags() TagPropertyResponseArrayOutput {
	return o.ApplyT(func(v LegalHoldPropertiesResponse) []TagPropertyResponse { return v.Tags }).(TagPropertyResponseArrayOutput)
}

// Actions are applied to the filtered blobs when the execution condition is met.
type ManagementPolicyAction struct {
	// The management policy action for base blob
	BaseBlob *ManagementPolicyBaseBlob `pulumi:"baseBlob"`
	// The management policy action for snapshot
	Snapshot *ManagementPolicySnapShot `pulumi:"snapshot"`
	// The management policy action for version
	Version *ManagementPolicyVersion `pulumi:"version"`
}

// ManagementPolicyActionInput is an input type that accepts ManagementPolicyActionArgs and ManagementPolicyActionOutput values.
// You can construct a concrete instance of `ManagementPolicyActionInput` via:
//
//	ManagementPolicyActionArgs{...}
type ManagementPolicyActionInput interface {
	pulumi.Input

	ToManagementPolicyActionOutput() ManagementPolicyActionOutput
	ToManagementPolicyActionOutputWithContext(context.Context) ManagementPolicyActionOutput
}

// Actions are applied to the filtered blobs when the execution condition is met.
type ManagementPolicyActionArgs struct {
	// The management policy action for base blob
	BaseBlob ManagementPolicyBaseBlobPtrInput `pulumi:"baseBlob"`
	// The management policy action for snapshot
	Snapshot ManagementPolicySnapShotPtrInput `pulumi:"snapshot"`
	// The management policy action for version
	Version ManagementPolicyVersionPtrInput `pulumi:"version"`
}

func (ManagementPolicyActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyAction)(nil)).Elem()
}

func (i ManagementPolicyActionArgs) ToManagementPolicyActionOutput() ManagementPolicyActionOutput {
	return i.ToManagementPolicyActionOutputWithContext(context.Background())
}

func (i ManagementPolicyActionArgs) ToManagementPolicyActionOutputWithContext(ctx context.Context) ManagementPolicyActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyActionOutput)
}

// Actions are applied to the filtered blobs when the execution condition is met.
type ManagementPolicyActionOutput struct{ *pulumi.OutputState }

func (ManagementPolicyActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyAction)(nil)).Elem()
}

func (o ManagementPolicyActionOutput) ToManagementPolicyActionOutput() ManagementPolicyActionOutput {
	return o
}

func (o ManagementPolicyActionOutput) ToManagementPolicyActionOutputWithContext(ctx context.Context) ManagementPolicyActionOutput {
	return o
}

// The management policy action for base blob
func (o ManagementPolicyActionOutput) BaseBlob() ManagementPolicyBaseBlobPtrOutput {
	return o.ApplyT(func(v ManagementPolicyAction) *ManagementPolicyBaseBlob { return v.BaseBlob }).(ManagementPolicyBaseBlobPtrOutput)
}

// The management policy action for snapshot
func (o ManagementPolicyActionOutput) Snapshot() ManagementPolicySnapShotPtrOutput {
	return o.ApplyT(func(v ManagementPolicyAction) *ManagementPolicySnapShot { return v.Snapshot }).(ManagementPolicySnapShotPtrOutput)
}

// The management policy action for version
func (o ManagementPolicyActionOutput) Version() ManagementPolicyVersionPtrOutput {
	return o.ApplyT(func(v ManagementPolicyAction) *ManagementPolicyVersion { return v.Version }).(ManagementPolicyVersionPtrOutput)
}

// Actions are applied to the filtered blobs when the execution condition is met.
type ManagementPolicyActionResponse struct {
	// The management policy action for base blob
	BaseBlob *ManagementPolicyBaseBlobResponse `pulumi:"baseBlob"`
	// The management policy action for snapshot
	Snapshot *ManagementPolicySnapShotResponse `pulumi:"snapshot"`
	// The management policy action for version
	Version *ManagementPolicyVersionResponse `pulumi:"version"`
}

// Actions are applied to the filtered blobs when the execution condition is met.
type ManagementPolicyActionResponseOutput struct{ *pulumi.OutputState }

func (ManagementPolicyActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyActionResponse)(nil)).Elem()
}

func (o ManagementPolicyActionResponseOutput) ToManagementPolicyActionResponseOutput() ManagementPolicyActionResponseOutput {
	return o
}

func (o ManagementPolicyActionResponseOutput) ToManagementPolicyActionResponseOutputWithContext(ctx context.Context) ManagementPolicyActionResponseOutput {
	return o
}

// The management policy action for base blob
func (o ManagementPolicyActionResponseOutput) BaseBlob() ManagementPolicyBaseBlobResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicyActionResponse) *ManagementPolicyBaseBlobResponse { return v.BaseBlob }).(ManagementPolicyBaseBlobResponsePtrOutput)
}

// The management policy action for snapshot
func (o ManagementPolicyActionResponseOutput) Snapshot() ManagementPolicySnapShotResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicyActionResponse) *ManagementPolicySnapShotResponse { return v.Snapshot }).(ManagementPolicySnapShotResponsePtrOutput)
}

// The management policy action for version
func (o ManagementPolicyActionResponseOutput) Version() ManagementPolicyVersionResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicyActionResponse) *ManagementPolicyVersionResponse { return v.Version }).(ManagementPolicyVersionResponsePtrOutput)
}

// Management policy action for base blob.
type ManagementPolicyBaseBlob struct {
	// The function to delete the blob
	Delete *DateAfterModification `pulumi:"delete"`
	// This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.
	EnableAutoTierToHotFromCool *bool `pulumi:"enableAutoTierToHotFromCool"`
	// The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
	TierToArchive *DateAfterModification `pulumi:"tierToArchive"`
	// The function to tier blobs to cool storage. Support blobs currently at Hot tier
	TierToCool *DateAfterModification `pulumi:"tierToCool"`
}

// ManagementPolicyBaseBlobInput is an input type that accepts ManagementPolicyBaseBlobArgs and ManagementPolicyBaseBlobOutput values.
// You can construct a concrete instance of `ManagementPolicyBaseBlobInput` via:
//
//	ManagementPolicyBaseBlobArgs{...}
type ManagementPolicyBaseBlobInput interface {
	pulumi.Input

	ToManagementPolicyBaseBlobOutput() ManagementPolicyBaseBlobOutput
	ToManagementPolicyBaseBlobOutputWithContext(context.Context) ManagementPolicyBaseBlobOutput
}

// Management policy action for base blob.
type ManagementPolicyBaseBlobArgs struct {
	// The function to delete the blob
	Delete DateAfterModificationPtrInput `pulumi:"delete"`
	// This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.
	EnableAutoTierToHotFromCool pulumi.BoolPtrInput `pulumi:"enableAutoTierToHotFromCool"`
	// The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
	TierToArchive DateAfterModificationPtrInput `pulumi:"tierToArchive"`
	// The function to tier blobs to cool storage. Support blobs currently at Hot tier
	TierToCool DateAfterModificationPtrInput `pulumi:"tierToCool"`
}

func (ManagementPolicyBaseBlobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyBaseBlob)(nil)).Elem()
}

func (i ManagementPolicyBaseBlobArgs) ToManagementPolicyBaseBlobOutput() ManagementPolicyBaseBlobOutput {
	return i.ToManagementPolicyBaseBlobOutputWithContext(context.Background())
}

func (i ManagementPolicyBaseBlobArgs) ToManagementPolicyBaseBlobOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyBaseBlobOutput)
}

func (i ManagementPolicyBaseBlobArgs) ToManagementPolicyBaseBlobPtrOutput() ManagementPolicyBaseBlobPtrOutput {
	return i.ToManagementPolicyBaseBlobPtrOutputWithContext(context.Background())
}

func (i ManagementPolicyBaseBlobArgs) ToManagementPolicyBaseBlobPtrOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyBaseBlobOutput).ToManagementPolicyBaseBlobPtrOutputWithContext(ctx)
}

// ManagementPolicyBaseBlobPtrInput is an input type that accepts ManagementPolicyBaseBlobArgs, ManagementPolicyBaseBlobPtr and ManagementPolicyBaseBlobPtrOutput values.
// You can construct a concrete instance of `ManagementPolicyBaseBlobPtrInput` via:
//
//	        ManagementPolicyBaseBlobArgs{...}
//
//	or:
//
//	        nil
type ManagementPolicyBaseBlobPtrInput interface {
	pulumi.Input

	ToManagementPolicyBaseBlobPtrOutput() ManagementPolicyBaseBlobPtrOutput
	ToManagementPolicyBaseBlobPtrOutputWithContext(context.Context) ManagementPolicyBaseBlobPtrOutput
}

type managementPolicyBaseBlobPtrType ManagementPolicyBaseBlobArgs

func ManagementPolicyBaseBlobPtr(v *ManagementPolicyBaseBlobArgs) ManagementPolicyBaseBlobPtrInput {
	return (*managementPolicyBaseBlobPtrType)(v)
}

func (*managementPolicyBaseBlobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicyBaseBlob)(nil)).Elem()
}

func (i *managementPolicyBaseBlobPtrType) ToManagementPolicyBaseBlobPtrOutput() ManagementPolicyBaseBlobPtrOutput {
	return i.ToManagementPolicyBaseBlobPtrOutputWithContext(context.Background())
}

func (i *managementPolicyBaseBlobPtrType) ToManagementPolicyBaseBlobPtrOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyBaseBlobPtrOutput)
}

// Management policy action for base blob.
type ManagementPolicyBaseBlobOutput struct{ *pulumi.OutputState }

func (ManagementPolicyBaseBlobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyBaseBlob)(nil)).Elem()
}

func (o ManagementPolicyBaseBlobOutput) ToManagementPolicyBaseBlobOutput() ManagementPolicyBaseBlobOutput {
	return o
}

func (o ManagementPolicyBaseBlobOutput) ToManagementPolicyBaseBlobOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobOutput {
	return o
}

func (o ManagementPolicyBaseBlobOutput) ToManagementPolicyBaseBlobPtrOutput() ManagementPolicyBaseBlobPtrOutput {
	return o.ToManagementPolicyBaseBlobPtrOutputWithContext(context.Background())
}

func (o ManagementPolicyBaseBlobOutput) ToManagementPolicyBaseBlobPtrOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementPolicyBaseBlob) *ManagementPolicyBaseBlob {
		return &v
	}).(ManagementPolicyBaseBlobPtrOutput)
}

// The function to delete the blob
func (o ManagementPolicyBaseBlobOutput) Delete() DateAfterModificationPtrOutput {
	return o.ApplyT(func(v ManagementPolicyBaseBlob) *DateAfterModification { return v.Delete }).(DateAfterModificationPtrOutput)
}

// This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.
func (o ManagementPolicyBaseBlobOutput) EnableAutoTierToHotFromCool() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementPolicyBaseBlob) *bool { return v.EnableAutoTierToHotFromCool }).(pulumi.BoolPtrOutput)
}

// The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
func (o ManagementPolicyBaseBlobOutput) TierToArchive() DateAfterModificationPtrOutput {
	return o.ApplyT(func(v ManagementPolicyBaseBlob) *DateAfterModification { return v.TierToArchive }).(DateAfterModificationPtrOutput)
}

// The function to tier blobs to cool storage. Support blobs currently at Hot tier
func (o ManagementPolicyBaseBlobOutput) TierToCool() DateAfterModificationPtrOutput {
	return o.ApplyT(func(v ManagementPolicyBaseBlob) *DateAfterModification { return v.TierToCool }).(DateAfterModificationPtrOutput)
}

type ManagementPolicyBaseBlobPtrOutput struct{ *pulumi.OutputState }

func (ManagementPolicyBaseBlobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicyBaseBlob)(nil)).Elem()
}

func (o ManagementPolicyBaseBlobPtrOutput) ToManagementPolicyBaseBlobPtrOutput() ManagementPolicyBaseBlobPtrOutput {
	return o
}

func (o ManagementPolicyBaseBlobPtrOutput) ToManagementPolicyBaseBlobPtrOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobPtrOutput {
	return o
}

func (o ManagementPolicyBaseBlobPtrOutput) Elem() ManagementPolicyBaseBlobOutput {
	return o.ApplyT(func(v *ManagementPolicyBaseBlob) ManagementPolicyBaseBlob {
		if v != nil {
			return *v
		}
		var ret ManagementPolicyBaseBlob
		return ret
	}).(ManagementPolicyBaseBlobOutput)
}

// The function to delete the blob
func (o ManagementPolicyBaseBlobPtrOutput) Delete() DateAfterModificationPtrOutput {
	return o.ApplyT(func(v *ManagementPolicyBaseBlob) *DateAfterModification {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(DateAfterModificationPtrOutput)
}

// This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.
func (o ManagementPolicyBaseBlobPtrOutput) EnableAutoTierToHotFromCool() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagementPolicyBaseBlob) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutoTierToHotFromCool
	}).(pulumi.BoolPtrOutput)
}

// The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
func (o ManagementPolicyBaseBlobPtrOutput) TierToArchive() DateAfterModificationPtrOutput {
	return o.ApplyT(func(v *ManagementPolicyBaseBlob) *DateAfterModification {
		if v == nil {
			return nil
		}
		return v.TierToArchive
	}).(DateAfterModificationPtrOutput)
}

// The function to tier blobs to cool storage. Support blobs currently at Hot tier
func (o ManagementPolicyBaseBlobPtrOutput) TierToCool() DateAfterModificationPtrOutput {
	return o.ApplyT(func(v *ManagementPolicyBaseBlob) *DateAfterModification {
		if v == nil {
			return nil
		}
		return v.TierToCool
	}).(DateAfterModificationPtrOutput)
}

// Management policy action for base blob.
type ManagementPolicyBaseBlobResponse struct {
	// The function to delete the blob
	Delete *DateAfterModificationResponse `pulumi:"delete"`
	// This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.
	EnableAutoTierToHotFromCool *bool `pulumi:"enableAutoTierToHotFromCool"`
	// The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
	TierToArchive *DateAfterModificationResponse `pulumi:"tierToArchive"`
	// The function to tier blobs to cool storage. Support blobs currently at Hot tier
	TierToCool *DateAfterModificationResponse `pulumi:"tierToCool"`
}

// Management policy action for base blob.
type ManagementPolicyBaseBlobResponseOutput struct{ *pulumi.OutputState }

func (ManagementPolicyBaseBlobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyBaseBlobResponse)(nil)).Elem()
}

func (o ManagementPolicyBaseBlobResponseOutput) ToManagementPolicyBaseBlobResponseOutput() ManagementPolicyBaseBlobResponseOutput {
	return o
}

func (o ManagementPolicyBaseBlobResponseOutput) ToManagementPolicyBaseBlobResponseOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobResponseOutput {
	return o
}

// The function to delete the blob
func (o ManagementPolicyBaseBlobResponseOutput) Delete() DateAfterModificationResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicyBaseBlobResponse) *DateAfterModificationResponse { return v.Delete }).(DateAfterModificationResponsePtrOutput)
}

// This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.
func (o ManagementPolicyBaseBlobResponseOutput) EnableAutoTierToHotFromCool() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementPolicyBaseBlobResponse) *bool { return v.EnableAutoTierToHotFromCool }).(pulumi.BoolPtrOutput)
}

// The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
func (o ManagementPolicyBaseBlobResponseOutput) TierToArchive() DateAfterModificationResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicyBaseBlobResponse) *DateAfterModificationResponse { return v.TierToArchive }).(DateAfterModificationResponsePtrOutput)
}

// The function to tier blobs to cool storage. Support blobs currently at Hot tier
func (o ManagementPolicyBaseBlobResponseOutput) TierToCool() DateAfterModificationResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicyBaseBlobResponse) *DateAfterModificationResponse { return v.TierToCool }).(DateAfterModificationResponsePtrOutput)
}

type ManagementPolicyBaseBlobResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagementPolicyBaseBlobResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicyBaseBlobResponse)(nil)).Elem()
}

func (o ManagementPolicyBaseBlobResponsePtrOutput) ToManagementPolicyBaseBlobResponsePtrOutput() ManagementPolicyBaseBlobResponsePtrOutput {
	return o
}

func (o ManagementPolicyBaseBlobResponsePtrOutput) ToManagementPolicyBaseBlobResponsePtrOutputWithContext(ctx context.Context) ManagementPolicyBaseBlobResponsePtrOutput {
	return o
}

func (o ManagementPolicyBaseBlobResponsePtrOutput) Elem() ManagementPolicyBaseBlobResponseOutput {
	return o.ApplyT(func(v *ManagementPolicyBaseBlobResponse) ManagementPolicyBaseBlobResponse {
		if v != nil {
			return *v
		}
		var ret ManagementPolicyBaseBlobResponse
		return ret
	}).(ManagementPolicyBaseBlobResponseOutput)
}

// The function to delete the blob
func (o ManagementPolicyBaseBlobResponsePtrOutput) Delete() DateAfterModificationResponsePtrOutput {
	return o.ApplyT(func(v *ManagementPolicyBaseBlobResponse) *DateAfterModificationResponse {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(DateAfterModificationResponsePtrOutput)
}

// This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.
func (o ManagementPolicyBaseBlobResponsePtrOutput) EnableAutoTierToHotFromCool() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagementPolicyBaseBlobResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutoTierToHotFromCool
	}).(pulumi.BoolPtrOutput)
}

// The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
func (o ManagementPolicyBaseBlobResponsePtrOutput) TierToArchive() DateAfterModificationResponsePtrOutput {
	return o.ApplyT(func(v *ManagementPolicyBaseBlobResponse) *DateAfterModificationResponse {
		if v == nil {
			return nil
		}
		return v.TierToArchive
	}).(DateAfterModificationResponsePtrOutput)
}

// The function to tier blobs to cool storage. Support blobs currently at Hot tier
func (o ManagementPolicyBaseBlobResponsePtrOutput) TierToCool() DateAfterModificationResponsePtrOutput {
	return o.ApplyT(func(v *ManagementPolicyBaseBlobResponse) *DateAfterModificationResponse {
		if v == nil {
			return nil
		}
		return v.TierToCool
	}).(DateAfterModificationResponsePtrOutput)
}

// An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
type ManagementPolicyDefinition struct {
	// An object that defines the action set.
	Actions ManagementPolicyAction `pulumi:"actions"`
	// An object that defines the filter set.
	Filters *ManagementPolicyFilter `pulumi:"filters"`
}

// ManagementPolicyDefinitionInput is an input type that accepts ManagementPolicyDefinitionArgs and ManagementPolicyDefinitionOutput values.
// You can construct a concrete instance of `ManagementPolicyDefinitionInput` via:
//
//	ManagementPolicyDefinitionArgs{...}
type ManagementPolicyDefinitionInput interface {
	pulumi.Input

	ToManagementPolicyDefinitionOutput() ManagementPolicyDefinitionOutput
	ToManagementPolicyDefinitionOutputWithContext(context.Context) ManagementPolicyDefinitionOutput
}

// An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
type ManagementPolicyDefinitionArgs struct {
	// An object that defines the action set.
	Actions ManagementPolicyActionInput `pulumi:"actions"`
	// An object that defines the filter set.
	Filters ManagementPolicyFilterPtrInput `pulumi:"filters"`
}

func (ManagementPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyDefinition)(nil)).Elem()
}

func (i ManagementPolicyDefinitionArgs) ToManagementPolicyDefinitionOutput() ManagementPolicyDefinitionOutput {
	return i.ToManagementPolicyDefinitionOutputWithContext(context.Background())
}

func (i ManagementPolicyDefinitionArgs) ToManagementPolicyDefinitionOutputWithContext(ctx context.Context) ManagementPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyDefinitionOutput)
}

// An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
type ManagementPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (ManagementPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyDefinition)(nil)).Elem()
}

func (o ManagementPolicyDefinitionOutput) ToManagementPolicyDefinitionOutput() ManagementPolicyDefinitionOutput {
	return o
}

func (o ManagementPolicyDefinitionOutput) ToManagementPolicyDefinitionOutputWithContext(ctx context.Context) ManagementPolicyDefinitionOutput {
	return o
}

// An object that defines the action set.
func (o ManagementPolicyDefinitionOutput) Actions() ManagementPolicyActionOutput {
	return o.ApplyT(func(v ManagementPolicyDefinition) ManagementPolicyAction { return v.Actions }).(ManagementPolicyActionOutput)
}

// An object that defines the filter set.
func (o ManagementPolicyDefinitionOutput) Filters() ManagementPolicyFilterPtrOutput {
	return o.ApplyT(func(v ManagementPolicyDefinition) *ManagementPolicyFilter { return v.Filters }).(ManagementPolicyFilterPtrOutput)
}

// An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
type ManagementPolicyDefinitionResponse struct {
	// An object that defines the action set.
	Actions ManagementPolicyActionResponse `pulumi:"actions"`
	// An object that defines the filter set.
	Filters *ManagementPolicyFilterResponse `pulumi:"filters"`
}

// An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
type ManagementPolicyDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ManagementPolicyDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyDefinitionResponse)(nil)).Elem()
}

func (o ManagementPolicyDefinitionResponseOutput) ToManagementPolicyDefinitionResponseOutput() ManagementPolicyDefinitionResponseOutput {
	return o
}

func (o ManagementPolicyDefinitionResponseOutput) ToManagementPolicyDefinitionResponseOutputWithContext(ctx context.Context) ManagementPolicyDefinitionResponseOutput {
	return o
}

// An object that defines the action set.
func (o ManagementPolicyDefinitionResponseOutput) Actions() ManagementPolicyActionResponseOutput {
	return o.ApplyT(func(v ManagementPolicyDefinitionResponse) ManagementPolicyActionResponse { return v.Actions }).(ManagementPolicyActionResponseOutput)
}

// An object that defines the filter set.
func (o ManagementPolicyDefinitionResponseOutput) Filters() ManagementPolicyFilterResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicyDefinitionResponse) *ManagementPolicyFilterResponse { return v.Filters }).(ManagementPolicyFilterResponsePtrOutput)
}

// Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters.
type ManagementPolicyFilter struct {
	// An array of blob index tag based filters, there can be at most 10 tag filters
	BlobIndexMatch []TagFilter `pulumi:"blobIndexMatch"`
	// An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.
	BlobTypes []string `pulumi:"blobTypes"`
	// An array of strings for prefixes to be match.
	PrefixMatch []string `pulumi:"prefixMatch"`
}

// ManagementPolicyFilterInput is an input type that accepts ManagementPolicyFilterArgs and ManagementPolicyFilterOutput values.
// You can construct a concrete instance of `ManagementPolicyFilterInput` via:
//
//	ManagementPolicyFilterArgs{...}
type ManagementPolicyFilterInput interface {
	pulumi.Input

	ToManagementPolicyFilterOutput() ManagementPolicyFilterOutput
	ToManagementPolicyFilterOutputWithContext(context.Context) ManagementPolicyFilterOutput
}

// Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters.
type ManagementPolicyFilterArgs struct {
	// An array of blob index tag based filters, there can be at most 10 tag filters
	BlobIndexMatch TagFilterArrayInput `pulumi:"blobIndexMatch"`
	// An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.
	BlobTypes pulumi.StringArrayInput `pulumi:"blobTypes"`
	// An array of strings for prefixes to be match.
	PrefixMatch pulumi.StringArrayInput `pulumi:"prefixMatch"`
}

func (ManagementPolicyFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyFilter)(nil)).Elem()
}

func (i ManagementPolicyFilterArgs) ToManagementPolicyFilterOutput() ManagementPolicyFilterOutput {
	return i.ToManagementPolicyFilterOutputWithContext(context.Background())
}

func (i ManagementPolicyFilterArgs) ToManagementPolicyFilterOutputWithContext(ctx context.Context) ManagementPolicyFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyFilterOutput)
}

func (i ManagementPolicyFilterArgs) ToManagementPolicyFilterPtrOutput() ManagementPolicyFilterPtrOutput {
	return i.ToManagementPolicyFilterPtrOutputWithContext(context.Background())
}

func (i ManagementPolicyFilterArgs) ToManagementPolicyFilterPtrOutputWithContext(ctx context.Context) ManagementPolicyFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyFilterOutput).ToManagementPolicyFilterPtrOutputWithContext(ctx)
}

// ManagementPolicyFilterPtrInput is an input type that accepts ManagementPolicyFilterArgs, ManagementPolicyFilterPtr and ManagementPolicyFilterPtrOutput values.
// You can construct a concrete instance of `ManagementPolicyFilterPtrInput` via:
//
//	        ManagementPolicyFilterArgs{...}
//
//	or:
//
//	        nil
type ManagementPolicyFilterPtrInput interface {
	pulumi.Input

	ToManagementPolicyFilterPtrOutput() ManagementPolicyFilterPtrOutput
	ToManagementPolicyFilterPtrOutputWithContext(context.Context) ManagementPolicyFilterPtrOutput
}

type managementPolicyFilterPtrType ManagementPolicyFilterArgs

func ManagementPolicyFilterPtr(v *ManagementPolicyFilterArgs) ManagementPolicyFilterPtrInput {
	return (*managementPolicyFilterPtrType)(v)
}

func (*managementPolicyFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicyFilter)(nil)).Elem()
}

func (i *managementPolicyFilterPtrType) ToManagementPolicyFilterPtrOutput() ManagementPolicyFilterPtrOutput {
	return i.ToManagementPolicyFilterPtrOutputWithContext(context.Background())
}

func (i *managementPolicyFilterPtrType) ToManagementPolicyFilterPtrOutputWithContext(ctx context.Context) ManagementPolicyFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyFilterPtrOutput)
}

// Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters.
type ManagementPolicyFilterOutput struct{ *pulumi.OutputState }

func (ManagementPolicyFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyFilter)(nil)).Elem()
}

func (o ManagementPolicyFilterOutput) ToManagementPolicyFilterOutput() ManagementPolicyFilterOutput {
	return o
}

func (o ManagementPolicyFilterOutput) ToManagementPolicyFilterOutputWithContext(ctx context.Context) ManagementPolicyFilterOutput {
	return o
}

func (o ManagementPolicyFilterOutput) ToManagementPolicyFilterPtrOutput() ManagementPolicyFilterPtrOutput {
	return o.ToManagementPolicyFilterPtrOutputWithContext(context.Background())
}

func (o ManagementPolicyFilterOutput) ToManagementPolicyFilterPtrOutputWithContext(ctx context.Context) ManagementPolicyFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementPolicyFilter) *ManagementPolicyFilter {
		return &v
	}).(ManagementPolicyFilterPtrOutput)
}

// An array of blob index tag based filters, there can be at most 10 tag filters
func (o ManagementPolicyFilterOutput) BlobIndexMatch() TagFilterArrayOutput {
	return o.ApplyT(func(v ManagementPolicyFilter) []TagFilter { return v.BlobIndexMatch }).(TagFilterArrayOutput)
}

// An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.
func (o ManagementPolicyFilterOutput) BlobTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementPolicyFilter) []string { return v.BlobTypes }).(pulumi.StringArrayOutput)
}

// An array of strings for prefixes to be match.
func (o ManagementPolicyFilterOutput) PrefixMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementPolicyFilter) []string { return v.PrefixMatch }).(pulumi.StringArrayOutput)
}

type ManagementPolicyFilterPtrOutput struct{ *pulumi.OutputState }

func (ManagementPolicyFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicyFilter)(nil)).Elem()
}

func (o ManagementPolicyFilterPtrOutput) ToManagementPolicyFilterPtrOutput() ManagementPolicyFilterPtrOutput {
	return o
}

func (o ManagementPolicyFilterPtrOutput) ToManagementPolicyFilterPtrOutputWithContext(ctx context.Context) ManagementPolicyFilterPtrOutput {
	return o
}

func (o ManagementPolicyFilterPtrOutput) Elem() ManagementPolicyFilterOutput {
	return o.ApplyT(func(v *ManagementPolicyFilter) ManagementPolicyFilter {
		if v != nil {
			return *v
		}
		var ret ManagementPolicyFilter
		return ret
	}).(ManagementPolicyFilterOutput)
}

// An array of blob index tag based filters, there can be at most 10 tag filters
func (o ManagementPolicyFilterPtrOutput) BlobIndexMatch() TagFilterArrayOutput {
	return o.ApplyT(func(v *ManagementPolicyFilter) []TagFilter {
		if v == nil {
			return nil
		}
		return v.BlobIndexMatch
	}).(TagFilterArrayOutput)
}

// An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.
func (o ManagementPolicyFilterPtrOutput) BlobTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagementPolicyFilter) []string {
		if v == nil {
			return nil
		}
		return v.BlobTypes
	}).(pulumi.StringArrayOutput)
}

// An array of strings for prefixes to be match.
func (o ManagementPolicyFilterPtrOutput) PrefixMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagementPolicyFilter) []string {
		if v == nil {
			return nil
		}
		return v.PrefixMatch
	}).(pulumi.StringArrayOutput)
}

// Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters.
type ManagementPolicyFilterResponse struct {
	// An array of blob index tag based filters, there can be at most 10 tag filters
	BlobIndexMatch []TagFilterResponse `pulumi:"blobIndexMatch"`
	// An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.
	BlobTypes []string `pulumi:"blobTypes"`
	// An array of strings for prefixes to be match.
	PrefixMatch []string `pulumi:"prefixMatch"`
}

// Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters.
type ManagementPolicyFilterResponseOutput struct{ *pulumi.OutputState }

func (ManagementPolicyFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyFilterResponse)(nil)).Elem()
}

func (o ManagementPolicyFilterResponseOutput) ToManagementPolicyFilterResponseOutput() ManagementPolicyFilterResponseOutput {
	return o
}

func (o ManagementPolicyFilterResponseOutput) ToManagementPolicyFilterResponseOutputWithContext(ctx context.Context) ManagementPolicyFilterResponseOutput {
	return o
}

// An array of blob index tag based filters, there can be at most 10 tag filters
func (o ManagementPolicyFilterResponseOutput) BlobIndexMatch() TagFilterResponseArrayOutput {
	return o.ApplyT(func(v ManagementPolicyFilterResponse) []TagFilterResponse { return v.BlobIndexMatch }).(TagFilterResponseArrayOutput)
}

// An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.
func (o ManagementPolicyFilterResponseOutput) BlobTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementPolicyFilterResponse) []string { return v.BlobTypes }).(pulumi.StringArrayOutput)
}

// An array of strings for prefixes to be match.
func (o ManagementPolicyFilterResponseOutput) PrefixMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementPolicyFilterResponse) []string { return v.PrefixMatch }).(pulumi.StringArrayOutput)
}

type ManagementPolicyFilterResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagementPolicyFilterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicyFilterResponse)(nil)).Elem()
}

func (o ManagementPolicyFilterResponsePtrOutput) ToManagementPolicyFilterResponsePtrOutput() ManagementPolicyFilterResponsePtrOutput {
	return o
}

func (o ManagementPolicyFilterResponsePtrOutput) ToManagementPolicyFilterResponsePtrOutputWithContext(ctx context.Context) ManagementPolicyFilterResponsePtrOutput {
	return o
}

func (o ManagementPolicyFilterResponsePtrOutput) Elem() ManagementPolicyFilterResponseOutput {
	return o.ApplyT(func(v *ManagementPolicyFilterResponse) ManagementPolicyFilterResponse {
		if v != nil {
			return *v
		}
		var ret ManagementPolicyFilterResponse
		return ret
	}).(ManagementPolicyFilterResponseOutput)
}

// An array of blob index tag based filters, there can be at most 10 tag filters
func (o ManagementPolicyFilterResponsePtrOutput) BlobIndexMatch() TagFilterResponseArrayOutput {
	return o.ApplyT(func(v *ManagementPolicyFilterResponse) []TagFilterResponse {
		if v == nil {
			return nil
		}
		return v.BlobIndexMatch
	}).(TagFilterResponseArrayOutput)
}

// An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.
func (o ManagementPolicyFilterResponsePtrOutput) BlobTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagementPolicyFilterResponse) []string {
		if v == nil {
			return nil
		}
		return v.BlobTypes
	}).(pulumi.StringArrayOutput)
}

// An array of strings for prefixes to be match.
func (o ManagementPolicyFilterResponsePtrOutput) PrefixMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagementPolicyFilterResponse) []string {
		if v == nil {
			return nil
		}
		return v.PrefixMatch
	}).(pulumi.StringArrayOutput)
}

// An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
type ManagementPolicyRule struct {
	// An object that defines the Lifecycle rule.
	Definition ManagementPolicyDefinition `pulumi:"definition"`
	// Rule is enabled if set to true.
	Enabled *bool `pulumi:"enabled"`
	// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
	Name string `pulumi:"name"`
	// The valid value is Lifecycle
	Type string `pulumi:"type"`
}

// ManagementPolicyRuleInput is an input type that accepts ManagementPolicyRuleArgs and ManagementPolicyRuleOutput values.
// You can construct a concrete instance of `ManagementPolicyRuleInput` via:
//
//	ManagementPolicyRuleArgs{...}
type ManagementPolicyRuleInput interface {
	pulumi.Input

	ToManagementPolicyRuleOutput() ManagementPolicyRuleOutput
	ToManagementPolicyRuleOutputWithContext(context.Context) ManagementPolicyRuleOutput
}

// An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
type ManagementPolicyRuleArgs struct {
	// An object that defines the Lifecycle rule.
	Definition ManagementPolicyDefinitionInput `pulumi:"definition"`
	// Rule is enabled if set to true.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The valid value is Lifecycle
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagementPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyRule)(nil)).Elem()
}

func (i ManagementPolicyRuleArgs) ToManagementPolicyRuleOutput() ManagementPolicyRuleOutput {
	return i.ToManagementPolicyRuleOutputWithContext(context.Background())
}

func (i ManagementPolicyRuleArgs) ToManagementPolicyRuleOutputWithContext(ctx context.Context) ManagementPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyRuleOutput)
}

// ManagementPolicyRuleArrayInput is an input type that accepts ManagementPolicyRuleArray and ManagementPolicyRuleArrayOutput values.
// You can construct a concrete instance of `ManagementPolicyRuleArrayInput` via:
//
//	ManagementPolicyRuleArray{ ManagementPolicyRuleArgs{...} }
type ManagementPolicyRuleArrayInput interface {
	pulumi.Input

	ToManagementPolicyRuleArrayOutput() ManagementPolicyRuleArrayOutput
	ToManagementPolicyRuleArrayOutputWithContext(context.Context) ManagementPolicyRuleArrayOutput
}

type ManagementPolicyRuleArray []ManagementPolicyRuleInput

func (ManagementPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementPolicyRule)(nil)).Elem()
}

func (i ManagementPolicyRuleArray) ToManagementPolicyRuleArrayOutput() ManagementPolicyRuleArrayOutput {
	return i.ToManagementPolicyRuleArrayOutputWithContext(context.Background())
}

func (i ManagementPolicyRuleArray) ToManagementPolicyRuleArrayOutputWithContext(ctx context.Context) ManagementPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyRuleArrayOutput)
}

// An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
type ManagementPolicyRuleOutput struct{ *pulumi.OutputState }

func (ManagementPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyRule)(nil)).Elem()
}

func (o ManagementPolicyRuleOutput) ToManagementPolicyRuleOutput() ManagementPolicyRuleOutput {
	return o
}

func (o ManagementPolicyRuleOutput) ToManagementPolicyRuleOutputWithContext(ctx context.Context) ManagementPolicyRuleOutput {
	return o
}

// An object that defines the Lifecycle rule.
func (o ManagementPolicyRuleOutput) Definition() ManagementPolicyDefinitionOutput {
	return o.ApplyT(func(v ManagementPolicyRule) ManagementPolicyDefinition { return v.Definition }).(ManagementPolicyDefinitionOutput)
}

// Rule is enabled if set to true.
func (o ManagementPolicyRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementPolicyRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
func (o ManagementPolicyRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementPolicyRule) string { return v.Name }).(pulumi.StringOutput)
}

// The valid value is Lifecycle
func (o ManagementPolicyRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementPolicyRule) string { return v.Type }).(pulumi.StringOutput)
}

type ManagementPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (ManagementPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementPolicyRule)(nil)).Elem()
}

func (o ManagementPolicyRuleArrayOutput) ToManagementPolicyRuleArrayOutput() ManagementPolicyRuleArrayOutput {
	return o
}

func (o ManagementPolicyRuleArrayOutput) ToManagementPolicyRuleArrayOutputWithContext(ctx context.Context) ManagementPolicyRuleArrayOutput {
	return o
}

func (o ManagementPolicyRuleArrayOutput) Index(i pulumi.IntInput) ManagementPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementPolicyRule {
		return vs[0].([]ManagementPolicyRule)[vs[1].(int)]
	}).(ManagementPolicyRuleOutput)
}

// An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
type ManagementPolicyRuleResponse struct {
	// An object that defines the Lifecycle rule.
	Definition ManagementPolicyDefinitionResponse `pulumi:"definition"`
	// Rule is enabled if set to true.
	Enabled *bool `pulumi:"enabled"`
	// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
	Name string `pulumi:"name"`
	// The valid value is Lifecycle
	Type string `pulumi:"type"`
}

// An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
type ManagementPolicyRuleResponseOutput struct{ *pulumi.OutputState }

func (ManagementPolicyRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyRuleResponse)(nil)).Elem()
}

func (o ManagementPolicyRuleResponseOutput) ToManagementPolicyRuleResponseOutput() ManagementPolicyRuleResponseOutput {
	return o
}

func (o ManagementPolicyRuleResponseOutput) ToManagementPolicyRuleResponseOutputWithContext(ctx context.Context) ManagementPolicyRuleResponseOutput {
	return o
}

// An object that defines the Lifecycle rule.
func (o ManagementPolicyRuleResponseOutput) Definition() ManagementPolicyDefinitionResponseOutput {
	return o.ApplyT(func(v ManagementPolicyRuleResponse) ManagementPolicyDefinitionResponse { return v.Definition }).(ManagementPolicyDefinitionResponseOutput)
}

// Rule is enabled if set to true.
func (o ManagementPolicyRuleResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagementPolicyRuleResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
func (o ManagementPolicyRuleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementPolicyRuleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The valid value is Lifecycle
func (o ManagementPolicyRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagementPolicyRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ManagementPolicyRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagementPolicyRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementPolicyRuleResponse)(nil)).Elem()
}

func (o ManagementPolicyRuleResponseArrayOutput) ToManagementPolicyRuleResponseArrayOutput() ManagementPolicyRuleResponseArrayOutput {
	return o
}

func (o ManagementPolicyRuleResponseArrayOutput) ToManagementPolicyRuleResponseArrayOutputWithContext(ctx context.Context) ManagementPolicyRuleResponseArrayOutput {
	return o
}

func (o ManagementPolicyRuleResponseArrayOutput) Index(i pulumi.IntInput) ManagementPolicyRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementPolicyRuleResponse {
		return vs[0].([]ManagementPolicyRuleResponse)[vs[1].(int)]
	}).(ManagementPolicyRuleResponseOutput)
}

// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
type ManagementPolicySchema struct {
	// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
	Rules []ManagementPolicyRule `pulumi:"rules"`
}

// ManagementPolicySchemaInput is an input type that accepts ManagementPolicySchemaArgs and ManagementPolicySchemaOutput values.
// You can construct a concrete instance of `ManagementPolicySchemaInput` via:
//
//	ManagementPolicySchemaArgs{...}
type ManagementPolicySchemaInput interface {
	pulumi.Input

	ToManagementPolicySchemaOutput() ManagementPolicySchemaOutput
	ToManagementPolicySchemaOutputWithContext(context.Context) ManagementPolicySchemaOutput
}

// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
type ManagementPolicySchemaArgs struct {
	// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
	Rules ManagementPolicyRuleArrayInput `pulumi:"rules"`
}

func (ManagementPolicySchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicySchema)(nil)).Elem()
}

func (i ManagementPolicySchemaArgs) ToManagementPolicySchemaOutput() ManagementPolicySchemaOutput {
	return i.ToManagementPolicySchemaOutputWithContext(context.Background())
}

func (i ManagementPolicySchemaArgs) ToManagementPolicySchemaOutputWithContext(ctx context.Context) ManagementPolicySchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicySchemaOutput)
}

// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
type ManagementPolicySchemaOutput struct{ *pulumi.OutputState }

func (ManagementPolicySchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicySchema)(nil)).Elem()
}

func (o ManagementPolicySchemaOutput) ToManagementPolicySchemaOutput() ManagementPolicySchemaOutput {
	return o
}

func (o ManagementPolicySchemaOutput) ToManagementPolicySchemaOutputWithContext(ctx context.Context) ManagementPolicySchemaOutput {
	return o
}

// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
func (o ManagementPolicySchemaOutput) Rules() ManagementPolicyRuleArrayOutput {
	return o.ApplyT(func(v ManagementPolicySchema) []ManagementPolicyRule { return v.Rules }).(ManagementPolicyRuleArrayOutput)
}

// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
type ManagementPolicySchemaResponse struct {
	// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
	Rules []ManagementPolicyRuleResponse `pulumi:"rules"`
}

// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
type ManagementPolicySchemaResponseOutput struct{ *pulumi.OutputState }

func (ManagementPolicySchemaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicySchemaResponse)(nil)).Elem()
}

func (o ManagementPolicySchemaResponseOutput) ToManagementPolicySchemaResponseOutput() ManagementPolicySchemaResponseOutput {
	return o
}

func (o ManagementPolicySchemaResponseOutput) ToManagementPolicySchemaResponseOutputWithContext(ctx context.Context) ManagementPolicySchemaResponseOutput {
	return o
}

// The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
func (o ManagementPolicySchemaResponseOutput) Rules() ManagementPolicyRuleResponseArrayOutput {
	return o.ApplyT(func(v ManagementPolicySchemaResponse) []ManagementPolicyRuleResponse { return v.Rules }).(ManagementPolicyRuleResponseArrayOutput)
}

// Management policy action for snapshot.
type ManagementPolicySnapShot struct {
	// The function to delete the blob snapshot
	Delete *DateAfterCreation `pulumi:"delete"`
	// The function to tier blob snapshot to archive storage. Support blob snapshot currently at Hot or Cool tier
	TierToArchive *DateAfterCreation `pulumi:"tierToArchive"`
	// The function to tier blob snapshot to cool storage. Support blob snapshot currently at Hot tier
	TierToCool *DateAfterCreation `pulumi:"tierToCool"`
}

// ManagementPolicySnapShotInput is an input type that accepts ManagementPolicySnapShotArgs and ManagementPolicySnapShotOutput values.
// You can construct a concrete instance of `ManagementPolicySnapShotInput` via:
//
//	ManagementPolicySnapShotArgs{...}
type ManagementPolicySnapShotInput interface {
	pulumi.Input

	ToManagementPolicySnapShotOutput() ManagementPolicySnapShotOutput
	ToManagementPolicySnapShotOutputWithContext(context.Context) ManagementPolicySnapShotOutput
}

// Management policy action for snapshot.
type ManagementPolicySnapShotArgs struct {
	// The function to delete the blob snapshot
	Delete DateAfterCreationPtrInput `pulumi:"delete"`
	// The function to tier blob snapshot to archive storage. Support blob snapshot currently at Hot or Cool tier
	TierToArchive DateAfterCreationPtrInput `pulumi:"tierToArchive"`
	// The function to tier blob snapshot to cool storage. Support blob snapshot currently at Hot tier
	TierToCool DateAfterCreationPtrInput `pulumi:"tierToCool"`
}

func (ManagementPolicySnapShotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicySnapShot)(nil)).Elem()
}

func (i ManagementPolicySnapShotArgs) ToManagementPolicySnapShotOutput() ManagementPolicySnapShotOutput {
	return i.ToManagementPolicySnapShotOutputWithContext(context.Background())
}

func (i ManagementPolicySnapShotArgs) ToManagementPolicySnapShotOutputWithContext(ctx context.Context) ManagementPolicySnapShotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicySnapShotOutput)
}

func (i ManagementPolicySnapShotArgs) ToManagementPolicySnapShotPtrOutput() ManagementPolicySnapShotPtrOutput {
	return i.ToManagementPolicySnapShotPtrOutputWithContext(context.Background())
}

func (i ManagementPolicySnapShotArgs) ToManagementPolicySnapShotPtrOutputWithContext(ctx context.Context) ManagementPolicySnapShotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicySnapShotOutput).ToManagementPolicySnapShotPtrOutputWithContext(ctx)
}

// ManagementPolicySnapShotPtrInput is an input type that accepts ManagementPolicySnapShotArgs, ManagementPolicySnapShotPtr and ManagementPolicySnapShotPtrOutput values.
// You can construct a concrete instance of `ManagementPolicySnapShotPtrInput` via:
//
//	        ManagementPolicySnapShotArgs{...}
//
//	or:
//
//	        nil
type ManagementPolicySnapShotPtrInput interface {
	pulumi.Input

	ToManagementPolicySnapShotPtrOutput() ManagementPolicySnapShotPtrOutput
	ToManagementPolicySnapShotPtrOutputWithContext(context.Context) ManagementPolicySnapShotPtrOutput
}

type managementPolicySnapShotPtrType ManagementPolicySnapShotArgs

func ManagementPolicySnapShotPtr(v *ManagementPolicySnapShotArgs) ManagementPolicySnapShotPtrInput {
	return (*managementPolicySnapShotPtrType)(v)
}

func (*managementPolicySnapShotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicySnapShot)(nil)).Elem()
}

func (i *managementPolicySnapShotPtrType) ToManagementPolicySnapShotPtrOutput() ManagementPolicySnapShotPtrOutput {
	return i.ToManagementPolicySnapShotPtrOutputWithContext(context.Background())
}

func (i *managementPolicySnapShotPtrType) ToManagementPolicySnapShotPtrOutputWithContext(ctx context.Context) ManagementPolicySnapShotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicySnapShotPtrOutput)
}

// Management policy action for snapshot.
type ManagementPolicySnapShotOutput struct{ *pulumi.OutputState }

func (ManagementPolicySnapShotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicySnapShot)(nil)).Elem()
}

func (o ManagementPolicySnapShotOutput) ToManagementPolicySnapShotOutput() ManagementPolicySnapShotOutput {
	return o
}

func (o ManagementPolicySnapShotOutput) ToManagementPolicySnapShotOutputWithContext(ctx context.Context) ManagementPolicySnapShotOutput {
	return o
}

func (o ManagementPolicySnapShotOutput) ToManagementPolicySnapShotPtrOutput() ManagementPolicySnapShotPtrOutput {
	return o.ToManagementPolicySnapShotPtrOutputWithContext(context.Background())
}

func (o ManagementPolicySnapShotOutput) ToManagementPolicySnapShotPtrOutputWithContext(ctx context.Context) ManagementPolicySnapShotPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementPolicySnapShot) *ManagementPolicySnapShot {
		return &v
	}).(ManagementPolicySnapShotPtrOutput)
}

// The function to delete the blob snapshot
func (o ManagementPolicySnapShotOutput) Delete() DateAfterCreationPtrOutput {
	return o.ApplyT(func(v ManagementPolicySnapShot) *DateAfterCreation { return v.Delete }).(DateAfterCreationPtrOutput)
}

// The function to tier blob snapshot to archive storage. Support blob snapshot currently at Hot or Cool tier
func (o ManagementPolicySnapShotOutput) TierToArchive() DateAfterCreationPtrOutput {
	return o.ApplyT(func(v ManagementPolicySnapShot) *DateAfterCreation { return v.TierToArchive }).(DateAfterCreationPtrOutput)
}

// The function to tier blob snapshot to cool storage. Support blob snapshot currently at Hot tier
func (o ManagementPolicySnapShotOutput) TierToCool() DateAfterCreationPtrOutput {
	return o.ApplyT(func(v ManagementPolicySnapShot) *DateAfterCreation { return v.TierToCool }).(DateAfterCreationPtrOutput)
}

type ManagementPolicySnapShotPtrOutput struct{ *pulumi.OutputState }

func (ManagementPolicySnapShotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicySnapShot)(nil)).Elem()
}

func (o ManagementPolicySnapShotPtrOutput) ToManagementPolicySnapShotPtrOutput() ManagementPolicySnapShotPtrOutput {
	return o
}

func (o ManagementPolicySnapShotPtrOutput) ToManagementPolicySnapShotPtrOutputWithContext(ctx context.Context) ManagementPolicySnapShotPtrOutput {
	return o
}

func (o ManagementPolicySnapShotPtrOutput) Elem() ManagementPolicySnapShotOutput {
	return o.ApplyT(func(v *ManagementPolicySnapShot) ManagementPolicySnapShot {
		if v != nil {
			return *v
		}
		var ret ManagementPolicySnapShot
		return ret
	}).(ManagementPolicySnapShotOutput)
}

// The function to delete the blob snapshot
func (o ManagementPolicySnapShotPtrOutput) Delete() DateAfterCreationPtrOutput {
	return o.ApplyT(func(v *ManagementPolicySnapShot) *DateAfterCreation {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(DateAfterCreationPtrOutput)
}

// The function to tier blob snapshot to archive storage. Support blob snapshot currently at Hot or Cool tier
func (o ManagementPolicySnapShotPtrOutput) TierToArchive() DateAfterCreationPtrOutput {
	return o.ApplyT(func(v *ManagementPolicySnapShot) *DateAfterCreation {
		if v == nil {
			return nil
		}
		return v.TierToArchive
	}).(DateAfterCreationPtrOutput)
}

// The function to tier blob snapshot to cool storage. Support blob snapshot currently at Hot tier
func (o ManagementPolicySnapShotPtrOutput) TierToCool() DateAfterCreationPtrOutput {
	return o.ApplyT(func(v *ManagementPolicySnapShot) *DateAfterCreation {
		if v == nil {
			return nil
		}
		return v.TierToCool
	}).(DateAfterCreationPtrOutput)
}

// Management policy action for snapshot.
type ManagementPolicySnapShotResponse struct {
	// The function to delete the blob snapshot
	Delete *DateAfterCreationResponse `pulumi:"delete"`
	// The function to tier blob snapshot to archive storage. Support blob snapshot currently at Hot or Cool tier
	TierToArchive *DateAfterCreationResponse `pulumi:"tierToArchive"`
	// The function to tier blob snapshot to cool storage. Support blob snapshot currently at Hot tier
	TierToCool *DateAfterCreationResponse `pulumi:"tierToCool"`
}

// Management policy action for snapshot.
type ManagementPolicySnapShotResponseOutput struct{ *pulumi.OutputState }

func (ManagementPolicySnapShotResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicySnapShotResponse)(nil)).Elem()
}

func (o ManagementPolicySnapShotResponseOutput) ToManagementPolicySnapShotResponseOutput() ManagementPolicySnapShotResponseOutput {
	return o
}

func (o ManagementPolicySnapShotResponseOutput) ToManagementPolicySnapShotResponseOutputWithContext(ctx context.Context) ManagementPolicySnapShotResponseOutput {
	return o
}

// The function to delete the blob snapshot
func (o ManagementPolicySnapShotResponseOutput) Delete() DateAfterCreationResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicySnapShotResponse) *DateAfterCreationResponse { return v.Delete }).(DateAfterCreationResponsePtrOutput)
}

// The function to tier blob snapshot to archive storage. Support blob snapshot currently at Hot or Cool tier
func (o ManagementPolicySnapShotResponseOutput) TierToArchive() DateAfterCreationResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicySnapShotResponse) *DateAfterCreationResponse { return v.TierToArchive }).(DateAfterCreationResponsePtrOutput)
}

// The function to tier blob snapshot to cool storage. Support blob snapshot currently at Hot tier
func (o ManagementPolicySnapShotResponseOutput) TierToCool() DateAfterCreationResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicySnapShotResponse) *DateAfterCreationResponse { return v.TierToCool }).(DateAfterCreationResponsePtrOutput)
}

type ManagementPolicySnapShotResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagementPolicySnapShotResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicySnapShotResponse)(nil)).Elem()
}

func (o ManagementPolicySnapShotResponsePtrOutput) ToManagementPolicySnapShotResponsePtrOutput() ManagementPolicySnapShotResponsePtrOutput {
	return o
}

func (o ManagementPolicySnapShotResponsePtrOutput) ToManagementPolicySnapShotResponsePtrOutputWithContext(ctx context.Context) ManagementPolicySnapShotResponsePtrOutput {
	return o
}

func (o ManagementPolicySnapShotResponsePtrOutput) Elem() ManagementPolicySnapShotResponseOutput {
	return o.ApplyT(func(v *ManagementPolicySnapShotResponse) ManagementPolicySnapShotResponse {
		if v != nil {
			return *v
		}
		var ret ManagementPolicySnapShotResponse
		return ret
	}).(ManagementPolicySnapShotResponseOutput)
}

// The function to delete the blob snapshot
func (o ManagementPolicySnapShotResponsePtrOutput) Delete() DateAfterCreationResponsePtrOutput {
	return o.ApplyT(func(v *ManagementPolicySnapShotResponse) *DateAfterCreationResponse {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(DateAfterCreationResponsePtrOutput)
}

// The function to tier blob snapshot to archive storage. Support blob snapshot currently at Hot or Cool tier
func (o ManagementPolicySnapShotResponsePtrOutput) TierToArchive() DateAfterCreationResponsePtrOutput {
	return o.ApplyT(func(v *ManagementPolicySnapShotResponse) *DateAfterCreationResponse {
		if v == nil {
			return nil
		}
		return v.TierToArchive
	}).(DateAfterCreationResponsePtrOutput)
}

// The function to tier blob snapshot to cool storage. Support blob snapshot currently at Hot tier
func (o ManagementPolicySnapShotResponsePtrOutput) TierToCool() DateAfterCreationResponsePtrOutput {
	return o.ApplyT(func(v *ManagementPolicySnapShotResponse) *DateAfterCreationResponse {
		if v == nil {
			return nil
		}
		return v.TierToCool
	}).(DateAfterCreationResponsePtrOutput)
}

// Management policy action for blob version.
type ManagementPolicyVersion struct {
	// The function to delete the blob version
	Delete *DateAfterCreation `pulumi:"delete"`
	// The function to tier blob version to archive storage. Support blob version currently at Hot or Cool tier
	TierToArchive *DateAfterCreation `pulumi:"tierToArchive"`
	// The function to tier blob version to cool storage. Support blob version currently at Hot tier
	TierToCool *DateAfterCreation `pulumi:"tierToCool"`
}

// ManagementPolicyVersionInput is an input type that accepts ManagementPolicyVersionArgs and ManagementPolicyVersionOutput values.
// You can construct a concrete instance of `ManagementPolicyVersionInput` via:
//
//	ManagementPolicyVersionArgs{...}
type ManagementPolicyVersionInput interface {
	pulumi.Input

	ToManagementPolicyVersionOutput() ManagementPolicyVersionOutput
	ToManagementPolicyVersionOutputWithContext(context.Context) ManagementPolicyVersionOutput
}

// Management policy action for blob version.
type ManagementPolicyVersionArgs struct {
	// The function to delete the blob version
	Delete DateAfterCreationPtrInput `pulumi:"delete"`
	// The function to tier blob version to archive storage. Support blob version currently at Hot or Cool tier
	TierToArchive DateAfterCreationPtrInput `pulumi:"tierToArchive"`
	// The function to tier blob version to cool storage. Support blob version currently at Hot tier
	TierToCool DateAfterCreationPtrInput `pulumi:"tierToCool"`
}

func (ManagementPolicyVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyVersion)(nil)).Elem()
}

func (i ManagementPolicyVersionArgs) ToManagementPolicyVersionOutput() ManagementPolicyVersionOutput {
	return i.ToManagementPolicyVersionOutputWithContext(context.Background())
}

func (i ManagementPolicyVersionArgs) ToManagementPolicyVersionOutputWithContext(ctx context.Context) ManagementPolicyVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyVersionOutput)
}

func (i ManagementPolicyVersionArgs) ToManagementPolicyVersionPtrOutput() ManagementPolicyVersionPtrOutput {
	return i.ToManagementPolicyVersionPtrOutputWithContext(context.Background())
}

func (i ManagementPolicyVersionArgs) ToManagementPolicyVersionPtrOutputWithContext(ctx context.Context) ManagementPolicyVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyVersionOutput).ToManagementPolicyVersionPtrOutputWithContext(ctx)
}

// ManagementPolicyVersionPtrInput is an input type that accepts ManagementPolicyVersionArgs, ManagementPolicyVersionPtr and ManagementPolicyVersionPtrOutput values.
// You can construct a concrete instance of `ManagementPolicyVersionPtrInput` via:
//
//	        ManagementPolicyVersionArgs{...}
//
//	or:
//
//	        nil
type ManagementPolicyVersionPtrInput interface {
	pulumi.Input

	ToManagementPolicyVersionPtrOutput() ManagementPolicyVersionPtrOutput
	ToManagementPolicyVersionPtrOutputWithContext(context.Context) ManagementPolicyVersionPtrOutput
}

type managementPolicyVersionPtrType ManagementPolicyVersionArgs

func ManagementPolicyVersionPtr(v *ManagementPolicyVersionArgs) ManagementPolicyVersionPtrInput {
	return (*managementPolicyVersionPtrType)(v)
}

func (*managementPolicyVersionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicyVersion)(nil)).Elem()
}

func (i *managementPolicyVersionPtrType) ToManagementPolicyVersionPtrOutput() ManagementPolicyVersionPtrOutput {
	return i.ToManagementPolicyVersionPtrOutputWithContext(context.Background())
}

func (i *managementPolicyVersionPtrType) ToManagementPolicyVersionPtrOutputWithContext(ctx context.Context) ManagementPolicyVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyVersionPtrOutput)
}

// Management policy action for blob version.
type ManagementPolicyVersionOutput struct{ *pulumi.OutputState }

func (ManagementPolicyVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyVersion)(nil)).Elem()
}

func (o ManagementPolicyVersionOutput) ToManagementPolicyVersionOutput() ManagementPolicyVersionOutput {
	return o
}

func (o ManagementPolicyVersionOutput) ToManagementPolicyVersionOutputWithContext(ctx context.Context) ManagementPolicyVersionOutput {
	return o
}

func (o ManagementPolicyVersionOutput) ToManagementPolicyVersionPtrOutput() ManagementPolicyVersionPtrOutput {
	return o.ToManagementPolicyVersionPtrOutputWithContext(context.Background())
}

func (o ManagementPolicyVersionOutput) ToManagementPolicyVersionPtrOutputWithContext(ctx context.Context) ManagementPolicyVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementPolicyVersion) *ManagementPolicyVersion {
		return &v
	}).(ManagementPolicyVersionPtrOutput)
}

// The function to delete the blob version
func (o ManagementPolicyVersionOutput) Delete() DateAfterCreationPtrOutput {
	return o.ApplyT(func(v ManagementPolicyVersion) *DateAfterCreation { return v.Delete }).(DateAfterCreationPtrOutput)
}

// The function to tier blob version to archive storage. Support blob version currently at Hot or Cool tier
func (o ManagementPolicyVersionOutput) TierToArchive() DateAfterCreationPtrOutput {
	return o.ApplyT(func(v ManagementPolicyVersion) *DateAfterCreation { return v.TierToArchive }).(DateAfterCreationPtrOutput)
}

// The function to tier blob version to cool storage. Support blob version currently at Hot tier
func (o ManagementPolicyVersionOutput) TierToCool() DateAfterCreationPtrOutput {
	return o.ApplyT(func(v ManagementPolicyVersion) *DateAfterCreation { return v.TierToCool }).(DateAfterCreationPtrOutput)
}

type ManagementPolicyVersionPtrOutput struct{ *pulumi.OutputState }

func (ManagementPolicyVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicyVersion)(nil)).Elem()
}

func (o ManagementPolicyVersionPtrOutput) ToManagementPolicyVersionPtrOutput() ManagementPolicyVersionPtrOutput {
	return o
}

func (o ManagementPolicyVersionPtrOutput) ToManagementPolicyVersionPtrOutputWithContext(ctx context.Context) ManagementPolicyVersionPtrOutput {
	return o
}

func (o ManagementPolicyVersionPtrOutput) Elem() ManagementPolicyVersionOutput {
	return o.ApplyT(func(v *ManagementPolicyVersion) ManagementPolicyVersion {
		if v != nil {
			return *v
		}
		var ret ManagementPolicyVersion
		return ret
	}).(ManagementPolicyVersionOutput)
}

// The function to delete the blob version
func (o ManagementPolicyVersionPtrOutput) Delete() DateAfterCreationPtrOutput {
	return o.ApplyT(func(v *ManagementPolicyVersion) *DateAfterCreation {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(DateAfterCreationPtrOutput)
}

// The function to tier blob version to archive storage. Support blob version currently at Hot or Cool tier
func (o ManagementPolicyVersionPtrOutput) TierToArchive() DateAfterCreationPtrOutput {
	return o.ApplyT(func(v *ManagementPolicyVersion) *DateAfterCreation {
		if v == nil {
			return nil
		}
		return v.TierToArchive
	}).(DateAfterCreationPtrOutput)
}

// The function to tier blob version to cool storage. Support blob version currently at Hot tier
func (o ManagementPolicyVersionPtrOutput) TierToCool() DateAfterCreationPtrOutput {
	return o.ApplyT(func(v *ManagementPolicyVersion) *DateAfterCreation {
		if v == nil {
			return nil
		}
		return v.TierToCool
	}).(DateAfterCreationPtrOutput)
}

// Management policy action for blob version.
type ManagementPolicyVersionResponse struct {
	// The function to delete the blob version
	Delete *DateAfterCreationResponse `pulumi:"delete"`
	// The function to tier blob version to archive storage. Support blob version currently at Hot or Cool tier
	TierToArchive *DateAfterCreationResponse `pulumi:"tierToArchive"`
	// The function to tier blob version to cool storage. Support blob version currently at Hot tier
	TierToCool *DateAfterCreationResponse `pulumi:"tierToCool"`
}

// Management policy action for blob version.
type ManagementPolicyVersionResponseOutput struct{ *pulumi.OutputState }

func (ManagementPolicyVersionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementPolicyVersionResponse)(nil)).Elem()
}

func (o ManagementPolicyVersionResponseOutput) ToManagementPolicyVersionResponseOutput() ManagementPolicyVersionResponseOutput {
	return o
}

func (o ManagementPolicyVersionResponseOutput) ToManagementPolicyVersionResponseOutputWithContext(ctx context.Context) ManagementPolicyVersionResponseOutput {
	return o
}

// The function to delete the blob version
func (o ManagementPolicyVersionResponseOutput) Delete() DateAfterCreationResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicyVersionResponse) *DateAfterCreationResponse { return v.Delete }).(DateAfterCreationResponsePtrOutput)
}

// The function to tier blob version to archive storage. Support blob version currently at Hot or Cool tier
func (o ManagementPolicyVersionResponseOutput) TierToArchive() DateAfterCreationResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicyVersionResponse) *DateAfterCreationResponse { return v.TierToArchive }).(DateAfterCreationResponsePtrOutput)
}

// The function to tier blob version to cool storage. Support blob version currently at Hot tier
func (o ManagementPolicyVersionResponseOutput) TierToCool() DateAfterCreationResponsePtrOutput {
	return o.ApplyT(func(v ManagementPolicyVersionResponse) *DateAfterCreationResponse { return v.TierToCool }).(DateAfterCreationResponsePtrOutput)
}

type ManagementPolicyVersionResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagementPolicyVersionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicyVersionResponse)(nil)).Elem()
}

func (o ManagementPolicyVersionResponsePtrOutput) ToManagementPolicyVersionResponsePtrOutput() ManagementPolicyVersionResponsePtrOutput {
	return o
}

func (o ManagementPolicyVersionResponsePtrOutput) ToManagementPolicyVersionResponsePtrOutputWithContext(ctx context.Context) ManagementPolicyVersionResponsePtrOutput {
	return o
}

func (o ManagementPolicyVersionResponsePtrOutput) Elem() ManagementPolicyVersionResponseOutput {
	return o.ApplyT(func(v *ManagementPolicyVersionResponse) ManagementPolicyVersionResponse {
		if v != nil {
			return *v
		}
		var ret ManagementPolicyVersionResponse
		return ret
	}).(ManagementPolicyVersionResponseOutput)
}

// The function to delete the blob version
func (o ManagementPolicyVersionResponsePtrOutput) Delete() DateAfterCreationResponsePtrOutput {
	return o.ApplyT(func(v *ManagementPolicyVersionResponse) *DateAfterCreationResponse {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(DateAfterCreationResponsePtrOutput)
}

// The function to tier blob version to archive storage. Support blob version currently at Hot or Cool tier
func (o ManagementPolicyVersionResponsePtrOutput) TierToArchive() DateAfterCreationResponsePtrOutput {
	return o.ApplyT(func(v *ManagementPolicyVersionResponse) *DateAfterCreationResponse {
		if v == nil {
			return nil
		}
		return v.TierToArchive
	}).(DateAfterCreationResponsePtrOutput)
}

// The function to tier blob version to cool storage. Support blob version currently at Hot tier
func (o ManagementPolicyVersionResponsePtrOutput) TierToCool() DateAfterCreationResponsePtrOutput {
	return o.ApplyT(func(v *ManagementPolicyVersionResponse) *DateAfterCreationResponse {
		if v == nil {
			return nil
		}
		return v.TierToCool
	}).(DateAfterCreationResponsePtrOutput)
}

// Multichannel setting. Applies to Premium FileStorage only.
type Multichannel struct {
	// Indicates whether multichannel is enabled
	Enabled *bool `pulumi:"enabled"`
}

// MultichannelInput is an input type that accepts MultichannelArgs and MultichannelOutput values.
// You can construct a concrete instance of `MultichannelInput` via:
//
//	MultichannelArgs{...}
type MultichannelInput interface {
	pulumi.Input

	ToMultichannelOutput() MultichannelOutput
	ToMultichannelOutputWithContext(context.Context) MultichannelOutput
}

// Multichannel setting. Applies to Premium FileStorage only.
type MultichannelArgs struct {
	// Indicates whether multichannel is enabled
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (MultichannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Multichannel)(nil)).Elem()
}

func (i MultichannelArgs) ToMultichannelOutput() MultichannelOutput {
	return i.ToMultichannelOutputWithContext(context.Background())
}

func (i MultichannelArgs) ToMultichannelOutputWithContext(ctx context.Context) MultichannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultichannelOutput)
}

func (i MultichannelArgs) ToMultichannelPtrOutput() MultichannelPtrOutput {
	return i.ToMultichannelPtrOutputWithContext(context.Background())
}

func (i MultichannelArgs) ToMultichannelPtrOutputWithContext(ctx context.Context) MultichannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultichannelOutput).ToMultichannelPtrOutputWithContext(ctx)
}

// MultichannelPtrInput is an input type that accepts MultichannelArgs, MultichannelPtr and MultichannelPtrOutput values.
// You can construct a concrete instance of `MultichannelPtrInput` via:
//
//	        MultichannelArgs{...}
//
//	or:
//
//	        nil
type MultichannelPtrInput interface {
	pulumi.Input

	ToMultichannelPtrOutput() MultichannelPtrOutput
	ToMultichannelPtrOutputWithContext(context.Context) MultichannelPtrOutput
}

type multichannelPtrType MultichannelArgs

func MultichannelPtr(v *MultichannelArgs) MultichannelPtrInput {
	return (*multichannelPtrType)(v)
}

func (*multichannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Multichannel)(nil)).Elem()
}

func (i *multichannelPtrType) ToMultichannelPtrOutput() MultichannelPtrOutput {
	return i.ToMultichannelPtrOutputWithContext(context.Background())
}

func (i *multichannelPtrType) ToMultichannelPtrOutputWithContext(ctx context.Context) MultichannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultichannelPtrOutput)
}

// Multichannel setting. Applies to Premium FileStorage only.
type MultichannelOutput struct{ *pulumi.OutputState }

func (MultichannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Multichannel)(nil)).Elem()
}

func (o MultichannelOutput) ToMultichannelOutput() MultichannelOutput {
	return o
}

func (o MultichannelOutput) ToMultichannelOutputWithContext(ctx context.Context) MultichannelOutput {
	return o
}

func (o MultichannelOutput) ToMultichannelPtrOutput() MultichannelPtrOutput {
	return o.ToMultichannelPtrOutputWithContext(context.Background())
}

func (o MultichannelOutput) ToMultichannelPtrOutputWithContext(ctx context.Context) MultichannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Multichannel) *Multichannel {
		return &v
	}).(MultichannelPtrOutput)
}

// Indicates whether multichannel is enabled
func (o MultichannelOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Multichannel) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type MultichannelPtrOutput struct{ *pulumi.OutputState }

func (MultichannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Multichannel)(nil)).Elem()
}

func (o MultichannelPtrOutput) ToMultichannelPtrOutput() MultichannelPtrOutput {
	return o
}

func (o MultichannelPtrOutput) ToMultichannelPtrOutputWithContext(ctx context.Context) MultichannelPtrOutput {
	return o
}

func (o MultichannelPtrOutput) Elem() MultichannelOutput {
	return o.ApplyT(func(v *Multichannel) Multichannel {
		if v != nil {
			return *v
		}
		var ret Multichannel
		return ret
	}).(MultichannelOutput)
}

// Indicates whether multichannel is enabled
func (o MultichannelPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Multichannel) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Multichannel setting. Applies to Premium FileStorage only.
type MultichannelResponse struct {
	// Indicates whether multichannel is enabled
	Enabled *bool `pulumi:"enabled"`
}

// Multichannel setting. Applies to Premium FileStorage only.
type MultichannelResponseOutput struct{ *pulumi.OutputState }

func (MultichannelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultichannelResponse)(nil)).Elem()
}

func (o MultichannelResponseOutput) ToMultichannelResponseOutput() MultichannelResponseOutput {
	return o
}

func (o MultichannelResponseOutput) ToMultichannelResponseOutputWithContext(ctx context.Context) MultichannelResponseOutput {
	return o
}

// Indicates whether multichannel is enabled
func (o MultichannelResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MultichannelResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type MultichannelResponsePtrOutput struct{ *pulumi.OutputState }

func (MultichannelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultichannelResponse)(nil)).Elem()
}

func (o MultichannelResponsePtrOutput) ToMultichannelResponsePtrOutput() MultichannelResponsePtrOutput {
	return o
}

func (o MultichannelResponsePtrOutput) ToMultichannelResponsePtrOutputWithContext(ctx context.Context) MultichannelResponsePtrOutput {
	return o
}

func (o MultichannelResponsePtrOutput) Elem() MultichannelResponseOutput {
	return o.ApplyT(func(v *MultichannelResponse) MultichannelResponse {
		if v != nil {
			return *v
		}
		var ret MultichannelResponse
		return ret
	}).(MultichannelResponseOutput)
}

// Indicates whether multichannel is enabled
func (o MultichannelResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MultichannelResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Network rule set
type NetworkRuleSet struct {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
	Bypass *string `pulumi:"bypass"`
	// Specifies the default action of allow or deny when no other rules match.
	DefaultAction DefaultAction `pulumi:"defaultAction"`
	// Sets the IP ACL rules
	IpRules []IPRule `pulumi:"ipRules"`
	// Sets the resource access rules
	ResourceAccessRules []ResourceAccessRule `pulumi:"resourceAccessRules"`
	// Sets the virtual network rules
	VirtualNetworkRules []VirtualNetworkRule `pulumi:"virtualNetworkRules"`
}

// Defaults sets the appropriate defaults for NetworkRuleSet
func (val *NetworkRuleSet) Defaults() *NetworkRuleSet {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Bypass) {
		bypass_ := "AzureServices"
		tmp.Bypass = &bypass_
	}
	if isZero(tmp.DefaultAction) {
		tmp.DefaultAction = DefaultAction("Allow")
	}
	return &tmp
}

// NetworkRuleSetInput is an input type that accepts NetworkRuleSetArgs and NetworkRuleSetOutput values.
// You can construct a concrete instance of `NetworkRuleSetInput` via:
//
//	NetworkRuleSetArgs{...}
type NetworkRuleSetInput interface {
	pulumi.Input

	ToNetworkRuleSetOutput() NetworkRuleSetOutput
	ToNetworkRuleSetOutputWithContext(context.Context) NetworkRuleSetOutput
}

// Network rule set
type NetworkRuleSetArgs struct {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
	Bypass pulumi.StringPtrInput `pulumi:"bypass"`
	// Specifies the default action of allow or deny when no other rules match.
	DefaultAction DefaultActionInput `pulumi:"defaultAction"`
	// Sets the IP ACL rules
	IpRules IPRuleArrayInput `pulumi:"ipRules"`
	// Sets the resource access rules
	ResourceAccessRules ResourceAccessRuleArrayInput `pulumi:"resourceAccessRules"`
	// Sets the virtual network rules
	VirtualNetworkRules VirtualNetworkRuleArrayInput `pulumi:"virtualNetworkRules"`
}

// Defaults sets the appropriate defaults for NetworkRuleSetArgs
func (val *NetworkRuleSetArgs) Defaults() *NetworkRuleSetArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Bypass) {
		tmp.Bypass = pulumi.StringPtr("AzureServices")
	}
	if isZero(tmp.DefaultAction) {
		tmp.DefaultAction = DefaultAction("Allow")
	}
	return &tmp
}
func (NetworkRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSet)(nil)).Elem()
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetOutput() NetworkRuleSetOutput {
	return i.ToNetworkRuleSetOutputWithContext(context.Background())
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetOutputWithContext(ctx context.Context) NetworkRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetOutput)
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return i.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetOutput).ToNetworkRuleSetPtrOutputWithContext(ctx)
}

// NetworkRuleSetPtrInput is an input type that accepts NetworkRuleSetArgs, NetworkRuleSetPtr and NetworkRuleSetPtrOutput values.
// You can construct a concrete instance of `NetworkRuleSetPtrInput` via:
//
//	        NetworkRuleSetArgs{...}
//
//	or:
//
//	        nil
type NetworkRuleSetPtrInput interface {
	pulumi.Input

	ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput
	ToNetworkRuleSetPtrOutputWithContext(context.Context) NetworkRuleSetPtrOutput
}

type networkRuleSetPtrType NetworkRuleSetArgs

func NetworkRuleSetPtr(v *NetworkRuleSetArgs) NetworkRuleSetPtrInput {
	return (*networkRuleSetPtrType)(v)
}

func (*networkRuleSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSet)(nil)).Elem()
}

func (i *networkRuleSetPtrType) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return i.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (i *networkRuleSetPtrType) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetPtrOutput)
}

// Network rule set
type NetworkRuleSetOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSet)(nil)).Elem()
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetOutput() NetworkRuleSetOutput {
	return o
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetOutputWithContext(ctx context.Context) NetworkRuleSetOutput {
	return o
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return o.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkRuleSet) *NetworkRuleSet {
		return &v
	}).(NetworkRuleSetPtrOutput)
}

// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
func (o NetworkRuleSetOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleSet) *string { return v.Bypass }).(pulumi.StringPtrOutput)
}

// Specifies the default action of allow or deny when no other rules match.
func (o NetworkRuleSetOutput) DefaultAction() DefaultActionOutput {
	return o.ApplyT(func(v NetworkRuleSet) DefaultAction { return v.DefaultAction }).(DefaultActionOutput)
}

// Sets the IP ACL rules
func (o NetworkRuleSetOutput) IpRules() IPRuleArrayOutput {
	return o.ApplyT(func(v NetworkRuleSet) []IPRule { return v.IpRules }).(IPRuleArrayOutput)
}

// Sets the resource access rules
func (o NetworkRuleSetOutput) ResourceAccessRules() ResourceAccessRuleArrayOutput {
	return o.ApplyT(func(v NetworkRuleSet) []ResourceAccessRule { return v.ResourceAccessRules }).(ResourceAccessRuleArrayOutput)
}

// Sets the virtual network rules
func (o NetworkRuleSetOutput) VirtualNetworkRules() VirtualNetworkRuleArrayOutput {
	return o.ApplyT(func(v NetworkRuleSet) []VirtualNetworkRule { return v.VirtualNetworkRules }).(VirtualNetworkRuleArrayOutput)
}

type NetworkRuleSetPtrOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSet)(nil)).Elem()
}

func (o NetworkRuleSetPtrOutput) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return o
}

func (o NetworkRuleSetPtrOutput) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return o
}

func (o NetworkRuleSetPtrOutput) Elem() NetworkRuleSetOutput {
	return o.ApplyT(func(v *NetworkRuleSet) NetworkRuleSet {
		if v != nil {
			return *v
		}
		var ret NetworkRuleSet
		return ret
	}).(NetworkRuleSetOutput)
}

// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
func (o NetworkRuleSetPtrOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSet) *string {
		if v == nil {
			return nil
		}
		return v.Bypass
	}).(pulumi.StringPtrOutput)
}

// Specifies the default action of allow or deny when no other rules match.
func (o NetworkRuleSetPtrOutput) DefaultAction() DefaultActionPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSet) *DefaultAction {
		if v == nil {
			return nil
		}
		return &v.DefaultAction
	}).(DefaultActionPtrOutput)
}

// Sets the IP ACL rules
func (o NetworkRuleSetPtrOutput) IpRules() IPRuleArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSet) []IPRule {
		if v == nil {
			return nil
		}
		return v.IpRules
	}).(IPRuleArrayOutput)
}

// Sets the resource access rules
func (o NetworkRuleSetPtrOutput) ResourceAccessRules() ResourceAccessRuleArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSet) []ResourceAccessRule {
		if v == nil {
			return nil
		}
		return v.ResourceAccessRules
	}).(ResourceAccessRuleArrayOutput)
}

// Sets the virtual network rules
func (o NetworkRuleSetPtrOutput) VirtualNetworkRules() VirtualNetworkRuleArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSet) []VirtualNetworkRule {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkRules
	}).(VirtualNetworkRuleArrayOutput)
}

// Network rule set
type NetworkRuleSetResponse struct {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
	Bypass *string `pulumi:"bypass"`
	// Specifies the default action of allow or deny when no other rules match.
	DefaultAction string `pulumi:"defaultAction"`
	// Sets the IP ACL rules
	IpRules []IPRuleResponse `pulumi:"ipRules"`
	// Sets the resource access rules
	ResourceAccessRules []ResourceAccessRuleResponse `pulumi:"resourceAccessRules"`
	// Sets the virtual network rules
	VirtualNetworkRules []VirtualNetworkRuleResponse `pulumi:"virtualNetworkRules"`
}

// Defaults sets the appropriate defaults for NetworkRuleSetResponse
func (val *NetworkRuleSetResponse) Defaults() *NetworkRuleSetResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Bypass) {
		bypass_ := "AzureServices"
		tmp.Bypass = &bypass_
	}
	if isZero(tmp.DefaultAction) {
		tmp.DefaultAction = "Allow"
	}
	return &tmp
}

// Network rule set
type NetworkRuleSetResponseOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSetResponse)(nil)).Elem()
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponseOutput() NetworkRuleSetResponseOutput {
	return o
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponseOutputWithContext(ctx context.Context) NetworkRuleSetResponseOutput {
	return o
}

// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
func (o NetworkRuleSetResponseOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) *string { return v.Bypass }).(pulumi.StringPtrOutput)
}

// Specifies the default action of allow or deny when no other rules match.
func (o NetworkRuleSetResponseOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) string { return v.DefaultAction }).(pulumi.StringOutput)
}

// Sets the IP ACL rules
func (o NetworkRuleSetResponseOutput) IpRules() IPRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) []IPRuleResponse { return v.IpRules }).(IPRuleResponseArrayOutput)
}

// Sets the resource access rules
func (o NetworkRuleSetResponseOutput) ResourceAccessRules() ResourceAccessRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) []ResourceAccessRuleResponse { return v.ResourceAccessRules }).(ResourceAccessRuleResponseArrayOutput)
}

// Sets the virtual network rules
func (o NetworkRuleSetResponseOutput) VirtualNetworkRules() VirtualNetworkRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) []VirtualNetworkRuleResponse { return v.VirtualNetworkRules }).(VirtualNetworkRuleResponseArrayOutput)
}

// Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters.
type ObjectReplicationPolicyFilter struct {
	// Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z
	MinCreationTime *string `pulumi:"minCreationTime"`
	// Optional. Filters the results to replicate only blobs whose names begin with the specified prefix.
	PrefixMatch []string `pulumi:"prefixMatch"`
}

// ObjectReplicationPolicyFilterInput is an input type that accepts ObjectReplicationPolicyFilterArgs and ObjectReplicationPolicyFilterOutput values.
// You can construct a concrete instance of `ObjectReplicationPolicyFilterInput` via:
//
//	ObjectReplicationPolicyFilterArgs{...}
type ObjectReplicationPolicyFilterInput interface {
	pulumi.Input

	ToObjectReplicationPolicyFilterOutput() ObjectReplicationPolicyFilterOutput
	ToObjectReplicationPolicyFilterOutputWithContext(context.Context) ObjectReplicationPolicyFilterOutput
}

// Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters.
type ObjectReplicationPolicyFilterArgs struct {
	// Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z
	MinCreationTime pulumi.StringPtrInput `pulumi:"minCreationTime"`
	// Optional. Filters the results to replicate only blobs whose names begin with the specified prefix.
	PrefixMatch pulumi.StringArrayInput `pulumi:"prefixMatch"`
}

func (ObjectReplicationPolicyFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectReplicationPolicyFilter)(nil)).Elem()
}

func (i ObjectReplicationPolicyFilterArgs) ToObjectReplicationPolicyFilterOutput() ObjectReplicationPolicyFilterOutput {
	return i.ToObjectReplicationPolicyFilterOutputWithContext(context.Background())
}

func (i ObjectReplicationPolicyFilterArgs) ToObjectReplicationPolicyFilterOutputWithContext(ctx context.Context) ObjectReplicationPolicyFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectReplicationPolicyFilterOutput)
}

func (i ObjectReplicationPolicyFilterArgs) ToObjectReplicationPolicyFilterPtrOutput() ObjectReplicationPolicyFilterPtrOutput {
	return i.ToObjectReplicationPolicyFilterPtrOutputWithContext(context.Background())
}

func (i ObjectReplicationPolicyFilterArgs) ToObjectReplicationPolicyFilterPtrOutputWithContext(ctx context.Context) ObjectReplicationPolicyFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectReplicationPolicyFilterOutput).ToObjectReplicationPolicyFilterPtrOutputWithContext(ctx)
}

// ObjectReplicationPolicyFilterPtrInput is an input type that accepts ObjectReplicationPolicyFilterArgs, ObjectReplicationPolicyFilterPtr and ObjectReplicationPolicyFilterPtrOutput values.
// You can construct a concrete instance of `ObjectReplicationPolicyFilterPtrInput` via:
//
//	        ObjectReplicationPolicyFilterArgs{...}
//
//	or:
//
//	        nil
type ObjectReplicationPolicyFilterPtrInput interface {
	pulumi.Input

	ToObjectReplicationPolicyFilterPtrOutput() ObjectReplicationPolicyFilterPtrOutput
	ToObjectReplicationPolicyFilterPtrOutputWithContext(context.Context) ObjectReplicationPolicyFilterPtrOutput
}

type objectReplicationPolicyFilterPtrType ObjectReplicationPolicyFilterArgs

func ObjectReplicationPolicyFilterPtr(v *ObjectReplicationPolicyFilterArgs) ObjectReplicationPolicyFilterPtrInput {
	return (*objectReplicationPolicyFilterPtrType)(v)
}

func (*objectReplicationPolicyFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectReplicationPolicyFilter)(nil)).Elem()
}

func (i *objectReplicationPolicyFilterPtrType) ToObjectReplicationPolicyFilterPtrOutput() ObjectReplicationPolicyFilterPtrOutput {
	return i.ToObjectReplicationPolicyFilterPtrOutputWithContext(context.Background())
}

func (i *objectReplicationPolicyFilterPtrType) ToObjectReplicationPolicyFilterPtrOutputWithContext(ctx context.Context) ObjectReplicationPolicyFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectReplicationPolicyFilterPtrOutput)
}

// Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters.
type ObjectReplicationPolicyFilterOutput struct{ *pulumi.OutputState }

func (ObjectReplicationPolicyFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectReplicationPolicyFilter)(nil)).Elem()
}

func (o ObjectReplicationPolicyFilterOutput) ToObjectReplicationPolicyFilterOutput() ObjectReplicationPolicyFilterOutput {
	return o
}

func (o ObjectReplicationPolicyFilterOutput) ToObjectReplicationPolicyFilterOutputWithContext(ctx context.Context) ObjectReplicationPolicyFilterOutput {
	return o
}

func (o ObjectReplicationPolicyFilterOutput) ToObjectReplicationPolicyFilterPtrOutput() ObjectReplicationPolicyFilterPtrOutput {
	return o.ToObjectReplicationPolicyFilterPtrOutputWithContext(context.Background())
}

func (o ObjectReplicationPolicyFilterOutput) ToObjectReplicationPolicyFilterPtrOutputWithContext(ctx context.Context) ObjectReplicationPolicyFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectReplicationPolicyFilter) *ObjectReplicationPolicyFilter {
		return &v
	}).(ObjectReplicationPolicyFilterPtrOutput)
}

// Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z
func (o ObjectReplicationPolicyFilterOutput) MinCreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectReplicationPolicyFilter) *string { return v.MinCreationTime }).(pulumi.StringPtrOutput)
}

// Optional. Filters the results to replicate only blobs whose names begin with the specified prefix.
func (o ObjectReplicationPolicyFilterOutput) PrefixMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObjectReplicationPolicyFilter) []string { return v.PrefixMatch }).(pulumi.StringArrayOutput)
}

type ObjectReplicationPolicyFilterPtrOutput struct{ *pulumi.OutputState }

func (ObjectReplicationPolicyFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectReplicationPolicyFilter)(nil)).Elem()
}

func (o ObjectReplicationPolicyFilterPtrOutput) ToObjectReplicationPolicyFilterPtrOutput() ObjectReplicationPolicyFilterPtrOutput {
	return o
}

func (o ObjectReplicationPolicyFilterPtrOutput) ToObjectReplicationPolicyFilterPtrOutputWithContext(ctx context.Context) ObjectReplicationPolicyFilterPtrOutput {
	return o
}

func (o ObjectReplicationPolicyFilterPtrOutput) Elem() ObjectReplicationPolicyFilterOutput {
	return o.ApplyT(func(v *ObjectReplicationPolicyFilter) ObjectReplicationPolicyFilter {
		if v != nil {
			return *v
		}
		var ret ObjectReplicationPolicyFilter
		return ret
	}).(ObjectReplicationPolicyFilterOutput)
}

// Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z
func (o ObjectReplicationPolicyFilterPtrOutput) MinCreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectReplicationPolicyFilter) *string {
		if v == nil {
			return nil
		}
		return v.MinCreationTime
	}).(pulumi.StringPtrOutput)
}

// Optional. Filters the results to replicate only blobs whose names begin with the specified prefix.
func (o ObjectReplicationPolicyFilterPtrOutput) PrefixMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ObjectReplicationPolicyFilter) []string {
		if v == nil {
			return nil
		}
		return v.PrefixMatch
	}).(pulumi.StringArrayOutput)
}

// Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters.
type ObjectReplicationPolicyFilterResponse struct {
	// Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z
	MinCreationTime *string `pulumi:"minCreationTime"`
	// Optional. Filters the results to replicate only blobs whose names begin with the specified prefix.
	PrefixMatch []string `pulumi:"prefixMatch"`
}

// Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters.
type ObjectReplicationPolicyFilterResponseOutput struct{ *pulumi.OutputState }

func (ObjectReplicationPolicyFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectReplicationPolicyFilterResponse)(nil)).Elem()
}

func (o ObjectReplicationPolicyFilterResponseOutput) ToObjectReplicationPolicyFilterResponseOutput() ObjectReplicationPolicyFilterResponseOutput {
	return o
}

func (o ObjectReplicationPolicyFilterResponseOutput) ToObjectReplicationPolicyFilterResponseOutputWithContext(ctx context.Context) ObjectReplicationPolicyFilterResponseOutput {
	return o
}

// Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z
func (o ObjectReplicationPolicyFilterResponseOutput) MinCreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectReplicationPolicyFilterResponse) *string { return v.MinCreationTime }).(pulumi.StringPtrOutput)
}

// Optional. Filters the results to replicate only blobs whose names begin with the specified prefix.
func (o ObjectReplicationPolicyFilterResponseOutput) PrefixMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObjectReplicationPolicyFilterResponse) []string { return v.PrefixMatch }).(pulumi.StringArrayOutput)
}

type ObjectReplicationPolicyFilterResponsePtrOutput struct{ *pulumi.OutputState }

func (ObjectReplicationPolicyFilterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectReplicationPolicyFilterResponse)(nil)).Elem()
}

func (o ObjectReplicationPolicyFilterResponsePtrOutput) ToObjectReplicationPolicyFilterResponsePtrOutput() ObjectReplicationPolicyFilterResponsePtrOutput {
	return o
}

func (o ObjectReplicationPolicyFilterResponsePtrOutput) ToObjectReplicationPolicyFilterResponsePtrOutputWithContext(ctx context.Context) ObjectReplicationPolicyFilterResponsePtrOutput {
	return o
}

func (o ObjectReplicationPolicyFilterResponsePtrOutput) Elem() ObjectReplicationPolicyFilterResponseOutput {
	return o.ApplyT(func(v *ObjectReplicationPolicyFilterResponse) ObjectReplicationPolicyFilterResponse {
		if v != nil {
			return *v
		}
		var ret ObjectReplicationPolicyFilterResponse
		return ret
	}).(ObjectReplicationPolicyFilterResponseOutput)
}

// Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z
func (o ObjectReplicationPolicyFilterResponsePtrOutput) MinCreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectReplicationPolicyFilterResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinCreationTime
	}).(pulumi.StringPtrOutput)
}

// Optional. Filters the results to replicate only blobs whose names begin with the specified prefix.
func (o ObjectReplicationPolicyFilterResponsePtrOutput) PrefixMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ObjectReplicationPolicyFilterResponse) []string {
		if v == nil {
			return nil
		}
		return v.PrefixMatch
	}).(pulumi.StringArrayOutput)
}

// The replication policy rule between two containers.
type ObjectReplicationPolicyRule struct {
	// Required. Destination container name.
	DestinationContainer string `pulumi:"destinationContainer"`
	// Optional. An object that defines the filter set.
	Filters *ObjectReplicationPolicyFilter `pulumi:"filters"`
	// Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account.
	RuleId *string `pulumi:"ruleId"`
	// Required. Source container name.
	SourceContainer string `pulumi:"sourceContainer"`
}

// ObjectReplicationPolicyRuleInput is an input type that accepts ObjectReplicationPolicyRuleArgs and ObjectReplicationPolicyRuleOutput values.
// You can construct a concrete instance of `ObjectReplicationPolicyRuleInput` via:
//
//	ObjectReplicationPolicyRuleArgs{...}
type ObjectReplicationPolicyRuleInput interface {
	pulumi.Input

	ToObjectReplicationPolicyRuleOutput() ObjectReplicationPolicyRuleOutput
	ToObjectReplicationPolicyRuleOutputWithContext(context.Context) ObjectReplicationPolicyRuleOutput
}

// The replication policy rule between two containers.
type ObjectReplicationPolicyRuleArgs struct {
	// Required. Destination container name.
	DestinationContainer pulumi.StringInput `pulumi:"destinationContainer"`
	// Optional. An object that defines the filter set.
	Filters ObjectReplicationPolicyFilterPtrInput `pulumi:"filters"`
	// Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account.
	RuleId pulumi.StringPtrInput `pulumi:"ruleId"`
	// Required. Source container name.
	SourceContainer pulumi.StringInput `pulumi:"sourceContainer"`
}

func (ObjectReplicationPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectReplicationPolicyRule)(nil)).Elem()
}

func (i ObjectReplicationPolicyRuleArgs) ToObjectReplicationPolicyRuleOutput() ObjectReplicationPolicyRuleOutput {
	return i.ToObjectReplicationPolicyRuleOutputWithContext(context.Background())
}

func (i ObjectReplicationPolicyRuleArgs) ToObjectReplicationPolicyRuleOutputWithContext(ctx context.Context) ObjectReplicationPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectReplicationPolicyRuleOutput)
}

// ObjectReplicationPolicyRuleArrayInput is an input type that accepts ObjectReplicationPolicyRuleArray and ObjectReplicationPolicyRuleArrayOutput values.
// You can construct a concrete instance of `ObjectReplicationPolicyRuleArrayInput` via:
//
//	ObjectReplicationPolicyRuleArray{ ObjectReplicationPolicyRuleArgs{...} }
type ObjectReplicationPolicyRuleArrayInput interface {
	pulumi.Input

	ToObjectReplicationPolicyRuleArrayOutput() ObjectReplicationPolicyRuleArrayOutput
	ToObjectReplicationPolicyRuleArrayOutputWithContext(context.Context) ObjectReplicationPolicyRuleArrayOutput
}

type ObjectReplicationPolicyRuleArray []ObjectReplicationPolicyRuleInput

func (ObjectReplicationPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectReplicationPolicyRule)(nil)).Elem()
}

func (i ObjectReplicationPolicyRuleArray) ToObjectReplicationPolicyRuleArrayOutput() ObjectReplicationPolicyRuleArrayOutput {
	return i.ToObjectReplicationPolicyRuleArrayOutputWithContext(context.Background())
}

func (i ObjectReplicationPolicyRuleArray) ToObjectReplicationPolicyRuleArrayOutputWithContext(ctx context.Context) ObjectReplicationPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectReplicationPolicyRuleArrayOutput)
}

// The replication policy rule between two containers.
type ObjectReplicationPolicyRuleOutput struct{ *pulumi.OutputState }

func (ObjectReplicationPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectReplicationPolicyRule)(nil)).Elem()
}

func (o ObjectReplicationPolicyRuleOutput) ToObjectReplicationPolicyRuleOutput() ObjectReplicationPolicyRuleOutput {
	return o
}

func (o ObjectReplicationPolicyRuleOutput) ToObjectReplicationPolicyRuleOutputWithContext(ctx context.Context) ObjectReplicationPolicyRuleOutput {
	return o
}

// Required. Destination container name.
func (o ObjectReplicationPolicyRuleOutput) DestinationContainer() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectReplicationPolicyRule) string { return v.DestinationContainer }).(pulumi.StringOutput)
}

// Optional. An object that defines the filter set.
func (o ObjectReplicationPolicyRuleOutput) Filters() ObjectReplicationPolicyFilterPtrOutput {
	return o.ApplyT(func(v ObjectReplicationPolicyRule) *ObjectReplicationPolicyFilter { return v.Filters }).(ObjectReplicationPolicyFilterPtrOutput)
}

// Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account.
func (o ObjectReplicationPolicyRuleOutput) RuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectReplicationPolicyRule) *string { return v.RuleId }).(pulumi.StringPtrOutput)
}

// Required. Source container name.
func (o ObjectReplicationPolicyRuleOutput) SourceContainer() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectReplicationPolicyRule) string { return v.SourceContainer }).(pulumi.StringOutput)
}

type ObjectReplicationPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (ObjectReplicationPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectReplicationPolicyRule)(nil)).Elem()
}

func (o ObjectReplicationPolicyRuleArrayOutput) ToObjectReplicationPolicyRuleArrayOutput() ObjectReplicationPolicyRuleArrayOutput {
	return o
}

func (o ObjectReplicationPolicyRuleArrayOutput) ToObjectReplicationPolicyRuleArrayOutputWithContext(ctx context.Context) ObjectReplicationPolicyRuleArrayOutput {
	return o
}

func (o ObjectReplicationPolicyRuleArrayOutput) Index(i pulumi.IntInput) ObjectReplicationPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectReplicationPolicyRule {
		return vs[0].([]ObjectReplicationPolicyRule)[vs[1].(int)]
	}).(ObjectReplicationPolicyRuleOutput)
}

// The replication policy rule between two containers.
type ObjectReplicationPolicyRuleResponse struct {
	// Required. Destination container name.
	DestinationContainer string `pulumi:"destinationContainer"`
	// Optional. An object that defines the filter set.
	Filters *ObjectReplicationPolicyFilterResponse `pulumi:"filters"`
	// Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account.
	RuleId *string `pulumi:"ruleId"`
	// Required. Source container name.
	SourceContainer string `pulumi:"sourceContainer"`
}

// The replication policy rule between two containers.
type ObjectReplicationPolicyRuleResponseOutput struct{ *pulumi.OutputState }

func (ObjectReplicationPolicyRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectReplicationPolicyRuleResponse)(nil)).Elem()
}

func (o ObjectReplicationPolicyRuleResponseOutput) ToObjectReplicationPolicyRuleResponseOutput() ObjectReplicationPolicyRuleResponseOutput {
	return o
}

func (o ObjectReplicationPolicyRuleResponseOutput) ToObjectReplicationPolicyRuleResponseOutputWithContext(ctx context.Context) ObjectReplicationPolicyRuleResponseOutput {
	return o
}

// Required. Destination container name.
func (o ObjectReplicationPolicyRuleResponseOutput) DestinationContainer() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectReplicationPolicyRuleResponse) string { return v.DestinationContainer }).(pulumi.StringOutput)
}

// Optional. An object that defines the filter set.
func (o ObjectReplicationPolicyRuleResponseOutput) Filters() ObjectReplicationPolicyFilterResponsePtrOutput {
	return o.ApplyT(func(v ObjectReplicationPolicyRuleResponse) *ObjectReplicationPolicyFilterResponse { return v.Filters }).(ObjectReplicationPolicyFilterResponsePtrOutput)
}

// Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account.
func (o ObjectReplicationPolicyRuleResponseOutput) RuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectReplicationPolicyRuleResponse) *string { return v.RuleId }).(pulumi.StringPtrOutput)
}

// Required. Source container name.
func (o ObjectReplicationPolicyRuleResponseOutput) SourceContainer() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectReplicationPolicyRuleResponse) string { return v.SourceContainer }).(pulumi.StringOutput)
}

type ObjectReplicationPolicyRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ObjectReplicationPolicyRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectReplicationPolicyRuleResponse)(nil)).Elem()
}

func (o ObjectReplicationPolicyRuleResponseArrayOutput) ToObjectReplicationPolicyRuleResponseArrayOutput() ObjectReplicationPolicyRuleResponseArrayOutput {
	return o
}

func (o ObjectReplicationPolicyRuleResponseArrayOutput) ToObjectReplicationPolicyRuleResponseArrayOutputWithContext(ctx context.Context) ObjectReplicationPolicyRuleResponseArrayOutput {
	return o
}

func (o ObjectReplicationPolicyRuleResponseArrayOutput) Index(i pulumi.IntInput) ObjectReplicationPolicyRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectReplicationPolicyRuleResponse {
		return vs[0].([]ObjectReplicationPolicyRuleResponse)[vs[1].(int)]
	}).(ObjectReplicationPolicyRuleResponseOutput)
}

type PermissionScope struct {
	// The permissions for the local user. Possible values include: Read (r), Write (w), Delete (d), List (l), and Create (c).
	Permissions string `pulumi:"permissions"`
	// The name of resource, normally the container name or the file share name, used by the local user.
	ResourceName string `pulumi:"resourceName"`
	// The service used by the local user, e.g. blob, file.
	Service string `pulumi:"service"`
}

// PermissionScopeInput is an input type that accepts PermissionScopeArgs and PermissionScopeOutput values.
// You can construct a concrete instance of `PermissionScopeInput` via:
//
//	PermissionScopeArgs{...}
type PermissionScopeInput interface {
	pulumi.Input

	ToPermissionScopeOutput() PermissionScopeOutput
	ToPermissionScopeOutputWithContext(context.Context) PermissionScopeOutput
}

type PermissionScopeArgs struct {
	// The permissions for the local user. Possible values include: Read (r), Write (w), Delete (d), List (l), and Create (c).
	Permissions pulumi.StringInput `pulumi:"permissions"`
	// The name of resource, normally the container name or the file share name, used by the local user.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
	// The service used by the local user, e.g. blob, file.
	Service pulumi.StringInput `pulumi:"service"`
}

func (PermissionScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionScope)(nil)).Elem()
}

func (i PermissionScopeArgs) ToPermissionScopeOutput() PermissionScopeOutput {
	return i.ToPermissionScopeOutputWithContext(context.Background())
}

func (i PermissionScopeArgs) ToPermissionScopeOutputWithContext(ctx context.Context) PermissionScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionScopeOutput)
}

// PermissionScopeArrayInput is an input type that accepts PermissionScopeArray and PermissionScopeArrayOutput values.
// You can construct a concrete instance of `PermissionScopeArrayInput` via:
//
//	PermissionScopeArray{ PermissionScopeArgs{...} }
type PermissionScopeArrayInput interface {
	pulumi.Input

	ToPermissionScopeArrayOutput() PermissionScopeArrayOutput
	ToPermissionScopeArrayOutputWithContext(context.Context) PermissionScopeArrayOutput
}

type PermissionScopeArray []PermissionScopeInput

func (PermissionScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PermissionScope)(nil)).Elem()
}

func (i PermissionScopeArray) ToPermissionScopeArrayOutput() PermissionScopeArrayOutput {
	return i.ToPermissionScopeArrayOutputWithContext(context.Background())
}

func (i PermissionScopeArray) ToPermissionScopeArrayOutputWithContext(ctx context.Context) PermissionScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionScopeArrayOutput)
}

type PermissionScopeOutput struct{ *pulumi.OutputState }

func (PermissionScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionScope)(nil)).Elem()
}

func (o PermissionScopeOutput) ToPermissionScopeOutput() PermissionScopeOutput {
	return o
}

func (o PermissionScopeOutput) ToPermissionScopeOutputWithContext(ctx context.Context) PermissionScopeOutput {
	return o
}

// The permissions for the local user. Possible values include: Read (r), Write (w), Delete (d), List (l), and Create (c).
func (o PermissionScopeOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v PermissionScope) string { return v.Permissions }).(pulumi.StringOutput)
}

// The name of resource, normally the container name or the file share name, used by the local user.
func (o PermissionScopeOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v PermissionScope) string { return v.ResourceName }).(pulumi.StringOutput)
}

// The service used by the local user, e.g. blob, file.
func (o PermissionScopeOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v PermissionScope) string { return v.Service }).(pulumi.StringOutput)
}

type PermissionScopeArrayOutput struct{ *pulumi.OutputState }

func (PermissionScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PermissionScope)(nil)).Elem()
}

func (o PermissionScopeArrayOutput) ToPermissionScopeArrayOutput() PermissionScopeArrayOutput {
	return o
}

func (o PermissionScopeArrayOutput) ToPermissionScopeArrayOutputWithContext(ctx context.Context) PermissionScopeArrayOutput {
	return o
}

func (o PermissionScopeArrayOutput) Index(i pulumi.IntInput) PermissionScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PermissionScope {
		return vs[0].([]PermissionScope)[vs[1].(int)]
	}).(PermissionScopeOutput)
}

type PermissionScopeResponse struct {
	// The permissions for the local user. Possible values include: Read (r), Write (w), Delete (d), List (l), and Create (c).
	Permissions string `pulumi:"permissions"`
	// The name of resource, normally the container name or the file share name, used by the local user.
	ResourceName string `pulumi:"resourceName"`
	// The service used by the local user, e.g. blob, file.
	Service string `pulumi:"service"`
}

type PermissionScopeResponseOutput struct{ *pulumi.OutputState }

func (PermissionScopeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionScopeResponse)(nil)).Elem()
}

func (o PermissionScopeResponseOutput) ToPermissionScopeResponseOutput() PermissionScopeResponseOutput {
	return o
}

func (o PermissionScopeResponseOutput) ToPermissionScopeResponseOutputWithContext(ctx context.Context) PermissionScopeResponseOutput {
	return o
}

// The permissions for the local user. Possible values include: Read (r), Write (w), Delete (d), List (l), and Create (c).
func (o PermissionScopeResponseOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v PermissionScopeResponse) string { return v.Permissions }).(pulumi.StringOutput)
}

// The name of resource, normally the container name or the file share name, used by the local user.
func (o PermissionScopeResponseOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v PermissionScopeResponse) string { return v.ResourceName }).(pulumi.StringOutput)
}

// The service used by the local user, e.g. blob, file.
func (o PermissionScopeResponseOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v PermissionScopeResponse) string { return v.Service }).(pulumi.StringOutput)
}

type PermissionScopeResponseArrayOutput struct{ *pulumi.OutputState }

func (PermissionScopeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PermissionScopeResponse)(nil)).Elem()
}

func (o PermissionScopeResponseArrayOutput) ToPermissionScopeResponseArrayOutput() PermissionScopeResponseArrayOutput {
	return o
}

func (o PermissionScopeResponseArrayOutput) ToPermissionScopeResponseArrayOutputWithContext(ctx context.Context) PermissionScopeResponseArrayOutput {
	return o
}

func (o PermissionScopeResponseArrayOutput) Index(i pulumi.IntInput) PermissionScopeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PermissionScopeResponse {
		return vs[0].([]PermissionScopeResponse)[vs[1].(int)]
	}).(PermissionScopeResponseOutput)
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponse struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The resource of private end point.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// The Private Endpoint resource.
type PrivateEndpointResponse struct {
	// The ARM identifier for Private Endpoint
	Id string `pulumi:"id"`
}

// The Private Endpoint resource.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionState struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionRequired *string `pulumi:"actionRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//	PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionRequired pulumi.StringPtrInput `pulumi:"actionRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateOutput) ActionRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionRequired *string `pulumi:"actionRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Protocol settings for file service
type ProtocolSettings struct {
	// Setting for SMB protocol
	Smb *SmbSetting `pulumi:"smb"`
}

// ProtocolSettingsInput is an input type that accepts ProtocolSettingsArgs and ProtocolSettingsOutput values.
// You can construct a concrete instance of `ProtocolSettingsInput` via:
//
//	ProtocolSettingsArgs{...}
type ProtocolSettingsInput interface {
	pulumi.Input

	ToProtocolSettingsOutput() ProtocolSettingsOutput
	ToProtocolSettingsOutputWithContext(context.Context) ProtocolSettingsOutput
}

// Protocol settings for file service
type ProtocolSettingsArgs struct {
	// Setting for SMB protocol
	Smb SmbSettingPtrInput `pulumi:"smb"`
}

func (ProtocolSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtocolSettings)(nil)).Elem()
}

func (i ProtocolSettingsArgs) ToProtocolSettingsOutput() ProtocolSettingsOutput {
	return i.ToProtocolSettingsOutputWithContext(context.Background())
}

func (i ProtocolSettingsArgs) ToProtocolSettingsOutputWithContext(ctx context.Context) ProtocolSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtocolSettingsOutput)
}

func (i ProtocolSettingsArgs) ToProtocolSettingsPtrOutput() ProtocolSettingsPtrOutput {
	return i.ToProtocolSettingsPtrOutputWithContext(context.Background())
}

func (i ProtocolSettingsArgs) ToProtocolSettingsPtrOutputWithContext(ctx context.Context) ProtocolSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtocolSettingsOutput).ToProtocolSettingsPtrOutputWithContext(ctx)
}

// ProtocolSettingsPtrInput is an input type that accepts ProtocolSettingsArgs, ProtocolSettingsPtr and ProtocolSettingsPtrOutput values.
// You can construct a concrete instance of `ProtocolSettingsPtrInput` via:
//
//	        ProtocolSettingsArgs{...}
//
//	or:
//
//	        nil
type ProtocolSettingsPtrInput interface {
	pulumi.Input

	ToProtocolSettingsPtrOutput() ProtocolSettingsPtrOutput
	ToProtocolSettingsPtrOutputWithContext(context.Context) ProtocolSettingsPtrOutput
}

type protocolSettingsPtrType ProtocolSettingsArgs

func ProtocolSettingsPtr(v *ProtocolSettingsArgs) ProtocolSettingsPtrInput {
	return (*protocolSettingsPtrType)(v)
}

func (*protocolSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtocolSettings)(nil)).Elem()
}

func (i *protocolSettingsPtrType) ToProtocolSettingsPtrOutput() ProtocolSettingsPtrOutput {
	return i.ToProtocolSettingsPtrOutputWithContext(context.Background())
}

func (i *protocolSettingsPtrType) ToProtocolSettingsPtrOutputWithContext(ctx context.Context) ProtocolSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtocolSettingsPtrOutput)
}

// Protocol settings for file service
type ProtocolSettingsOutput struct{ *pulumi.OutputState }

func (ProtocolSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtocolSettings)(nil)).Elem()
}

func (o ProtocolSettingsOutput) ToProtocolSettingsOutput() ProtocolSettingsOutput {
	return o
}

func (o ProtocolSettingsOutput) ToProtocolSettingsOutputWithContext(ctx context.Context) ProtocolSettingsOutput {
	return o
}

func (o ProtocolSettingsOutput) ToProtocolSettingsPtrOutput() ProtocolSettingsPtrOutput {
	return o.ToProtocolSettingsPtrOutputWithContext(context.Background())
}

func (o ProtocolSettingsOutput) ToProtocolSettingsPtrOutputWithContext(ctx context.Context) ProtocolSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProtocolSettings) *ProtocolSettings {
		return &v
	}).(ProtocolSettingsPtrOutput)
}

// Setting for SMB protocol
func (o ProtocolSettingsOutput) Smb() SmbSettingPtrOutput {
	return o.ApplyT(func(v ProtocolSettings) *SmbSetting { return v.Smb }).(SmbSettingPtrOutput)
}

type ProtocolSettingsPtrOutput struct{ *pulumi.OutputState }

func (ProtocolSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtocolSettings)(nil)).Elem()
}

func (o ProtocolSettingsPtrOutput) ToProtocolSettingsPtrOutput() ProtocolSettingsPtrOutput {
	return o
}

func (o ProtocolSettingsPtrOutput) ToProtocolSettingsPtrOutputWithContext(ctx context.Context) ProtocolSettingsPtrOutput {
	return o
}

func (o ProtocolSettingsPtrOutput) Elem() ProtocolSettingsOutput {
	return o.ApplyT(func(v *ProtocolSettings) ProtocolSettings {
		if v != nil {
			return *v
		}
		var ret ProtocolSettings
		return ret
	}).(ProtocolSettingsOutput)
}

// Setting for SMB protocol
func (o ProtocolSettingsPtrOutput) Smb() SmbSettingPtrOutput {
	return o.ApplyT(func(v *ProtocolSettings) *SmbSetting {
		if v == nil {
			return nil
		}
		return v.Smb
	}).(SmbSettingPtrOutput)
}

// Protocol settings for file service
type ProtocolSettingsResponse struct {
	// Setting for SMB protocol
	Smb *SmbSettingResponse `pulumi:"smb"`
}

// Protocol settings for file service
type ProtocolSettingsResponseOutput struct{ *pulumi.OutputState }

func (ProtocolSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtocolSettingsResponse)(nil)).Elem()
}

func (o ProtocolSettingsResponseOutput) ToProtocolSettingsResponseOutput() ProtocolSettingsResponseOutput {
	return o
}

func (o ProtocolSettingsResponseOutput) ToProtocolSettingsResponseOutputWithContext(ctx context.Context) ProtocolSettingsResponseOutput {
	return o
}

// Setting for SMB protocol
func (o ProtocolSettingsResponseOutput) Smb() SmbSettingResponsePtrOutput {
	return o.ApplyT(func(v ProtocolSettingsResponse) *SmbSettingResponse { return v.Smb }).(SmbSettingResponsePtrOutput)
}

type ProtocolSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ProtocolSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtocolSettingsResponse)(nil)).Elem()
}

func (o ProtocolSettingsResponsePtrOutput) ToProtocolSettingsResponsePtrOutput() ProtocolSettingsResponsePtrOutput {
	return o
}

func (o ProtocolSettingsResponsePtrOutput) ToProtocolSettingsResponsePtrOutputWithContext(ctx context.Context) ProtocolSettingsResponsePtrOutput {
	return o
}

func (o ProtocolSettingsResponsePtrOutput) Elem() ProtocolSettingsResponseOutput {
	return o.ApplyT(func(v *ProtocolSettingsResponse) ProtocolSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ProtocolSettingsResponse
		return ret
	}).(ProtocolSettingsResponseOutput)
}

// Setting for SMB protocol
func (o ProtocolSettingsResponsePtrOutput) Smb() SmbSettingResponsePtrOutput {
	return o.ApplyT(func(v *ProtocolSettingsResponse) *SmbSettingResponse {
		if v == nil {
			return nil
		}
		return v.Smb
	}).(SmbSettingResponsePtrOutput)
}

// Resource Access Rule.
type ResourceAccessRule struct {
	// Resource Id
	ResourceId *string `pulumi:"resourceId"`
	// Tenant Id
	TenantId *string `pulumi:"tenantId"`
}

// ResourceAccessRuleInput is an input type that accepts ResourceAccessRuleArgs and ResourceAccessRuleOutput values.
// You can construct a concrete instance of `ResourceAccessRuleInput` via:
//
//	ResourceAccessRuleArgs{...}
type ResourceAccessRuleInput interface {
	pulumi.Input

	ToResourceAccessRuleOutput() ResourceAccessRuleOutput
	ToResourceAccessRuleOutputWithContext(context.Context) ResourceAccessRuleOutput
}

// Resource Access Rule.
type ResourceAccessRuleArgs struct {
	// Resource Id
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Tenant Id
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (ResourceAccessRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceAccessRule)(nil)).Elem()
}

func (i ResourceAccessRuleArgs) ToResourceAccessRuleOutput() ResourceAccessRuleOutput {
	return i.ToResourceAccessRuleOutputWithContext(context.Background())
}

func (i ResourceAccessRuleArgs) ToResourceAccessRuleOutputWithContext(ctx context.Context) ResourceAccessRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceAccessRuleOutput)
}

// ResourceAccessRuleArrayInput is an input type that accepts ResourceAccessRuleArray and ResourceAccessRuleArrayOutput values.
// You can construct a concrete instance of `ResourceAccessRuleArrayInput` via:
//
//	ResourceAccessRuleArray{ ResourceAccessRuleArgs{...} }
type ResourceAccessRuleArrayInput interface {
	pulumi.Input

	ToResourceAccessRuleArrayOutput() ResourceAccessRuleArrayOutput
	ToResourceAccessRuleArrayOutputWithContext(context.Context) ResourceAccessRuleArrayOutput
}

type ResourceAccessRuleArray []ResourceAccessRuleInput

func (ResourceAccessRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceAccessRule)(nil)).Elem()
}

func (i ResourceAccessRuleArray) ToResourceAccessRuleArrayOutput() ResourceAccessRuleArrayOutput {
	return i.ToResourceAccessRuleArrayOutputWithContext(context.Background())
}

func (i ResourceAccessRuleArray) ToResourceAccessRuleArrayOutputWithContext(ctx context.Context) ResourceAccessRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceAccessRuleArrayOutput)
}

// Resource Access Rule.
type ResourceAccessRuleOutput struct{ *pulumi.OutputState }

func (ResourceAccessRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceAccessRule)(nil)).Elem()
}

func (o ResourceAccessRuleOutput) ToResourceAccessRuleOutput() ResourceAccessRuleOutput {
	return o
}

func (o ResourceAccessRuleOutput) ToResourceAccessRuleOutputWithContext(ctx context.Context) ResourceAccessRuleOutput {
	return o
}

// Resource Id
func (o ResourceAccessRuleOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceAccessRule) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Tenant Id
func (o ResourceAccessRuleOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceAccessRule) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type ResourceAccessRuleArrayOutput struct{ *pulumi.OutputState }

func (ResourceAccessRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceAccessRule)(nil)).Elem()
}

func (o ResourceAccessRuleArrayOutput) ToResourceAccessRuleArrayOutput() ResourceAccessRuleArrayOutput {
	return o
}

func (o ResourceAccessRuleArrayOutput) ToResourceAccessRuleArrayOutputWithContext(ctx context.Context) ResourceAccessRuleArrayOutput {
	return o
}

func (o ResourceAccessRuleArrayOutput) Index(i pulumi.IntInput) ResourceAccessRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceAccessRule {
		return vs[0].([]ResourceAccessRule)[vs[1].(int)]
	}).(ResourceAccessRuleOutput)
}

// Resource Access Rule.
type ResourceAccessRuleResponse struct {
	// Resource Id
	ResourceId *string `pulumi:"resourceId"`
	// Tenant Id
	TenantId *string `pulumi:"tenantId"`
}

// Resource Access Rule.
type ResourceAccessRuleResponseOutput struct{ *pulumi.OutputState }

func (ResourceAccessRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceAccessRuleResponse)(nil)).Elem()
}

func (o ResourceAccessRuleResponseOutput) ToResourceAccessRuleResponseOutput() ResourceAccessRuleResponseOutput {
	return o
}

func (o ResourceAccessRuleResponseOutput) ToResourceAccessRuleResponseOutputWithContext(ctx context.Context) ResourceAccessRuleResponseOutput {
	return o
}

// Resource Id
func (o ResourceAccessRuleResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceAccessRuleResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Tenant Id
func (o ResourceAccessRuleResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceAccessRuleResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type ResourceAccessRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceAccessRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceAccessRuleResponse)(nil)).Elem()
}

func (o ResourceAccessRuleResponseArrayOutput) ToResourceAccessRuleResponseArrayOutput() ResourceAccessRuleResponseArrayOutput {
	return o
}

func (o ResourceAccessRuleResponseArrayOutput) ToResourceAccessRuleResponseArrayOutputWithContext(ctx context.Context) ResourceAccessRuleResponseArrayOutput {
	return o
}

func (o ResourceAccessRuleResponseArrayOutput) Index(i pulumi.IntInput) ResourceAccessRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceAccessRuleResponse {
		return vs[0].([]ResourceAccessRuleResponse)[vs[1].(int)]
	}).(ResourceAccessRuleResponseOutput)
}

// The blob service properties for blob restore policy
type RestorePolicyProperties struct {
	// how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.
	Days *int `pulumi:"days"`
	// Blob restore is enabled if set to true.
	Enabled bool `pulumi:"enabled"`
}

// RestorePolicyPropertiesInput is an input type that accepts RestorePolicyPropertiesArgs and RestorePolicyPropertiesOutput values.
// You can construct a concrete instance of `RestorePolicyPropertiesInput` via:
//
//	RestorePolicyPropertiesArgs{...}
type RestorePolicyPropertiesInput interface {
	pulumi.Input

	ToRestorePolicyPropertiesOutput() RestorePolicyPropertiesOutput
	ToRestorePolicyPropertiesOutputWithContext(context.Context) RestorePolicyPropertiesOutput
}

// The blob service properties for blob restore policy
type RestorePolicyPropertiesArgs struct {
	// how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// Blob restore is enabled if set to true.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (RestorePolicyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestorePolicyProperties)(nil)).Elem()
}

func (i RestorePolicyPropertiesArgs) ToRestorePolicyPropertiesOutput() RestorePolicyPropertiesOutput {
	return i.ToRestorePolicyPropertiesOutputWithContext(context.Background())
}

func (i RestorePolicyPropertiesArgs) ToRestorePolicyPropertiesOutputWithContext(ctx context.Context) RestorePolicyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePolicyPropertiesOutput)
}

func (i RestorePolicyPropertiesArgs) ToRestorePolicyPropertiesPtrOutput() RestorePolicyPropertiesPtrOutput {
	return i.ToRestorePolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i RestorePolicyPropertiesArgs) ToRestorePolicyPropertiesPtrOutputWithContext(ctx context.Context) RestorePolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePolicyPropertiesOutput).ToRestorePolicyPropertiesPtrOutputWithContext(ctx)
}

// RestorePolicyPropertiesPtrInput is an input type that accepts RestorePolicyPropertiesArgs, RestorePolicyPropertiesPtr and RestorePolicyPropertiesPtrOutput values.
// You can construct a concrete instance of `RestorePolicyPropertiesPtrInput` via:
//
//	        RestorePolicyPropertiesArgs{...}
//
//	or:
//
//	        nil
type RestorePolicyPropertiesPtrInput interface {
	pulumi.Input

	ToRestorePolicyPropertiesPtrOutput() RestorePolicyPropertiesPtrOutput
	ToRestorePolicyPropertiesPtrOutputWithContext(context.Context) RestorePolicyPropertiesPtrOutput
}

type restorePolicyPropertiesPtrType RestorePolicyPropertiesArgs

func RestorePolicyPropertiesPtr(v *RestorePolicyPropertiesArgs) RestorePolicyPropertiesPtrInput {
	return (*restorePolicyPropertiesPtrType)(v)
}

func (*restorePolicyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RestorePolicyProperties)(nil)).Elem()
}

func (i *restorePolicyPropertiesPtrType) ToRestorePolicyPropertiesPtrOutput() RestorePolicyPropertiesPtrOutput {
	return i.ToRestorePolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i *restorePolicyPropertiesPtrType) ToRestorePolicyPropertiesPtrOutputWithContext(ctx context.Context) RestorePolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePolicyPropertiesPtrOutput)
}

// The blob service properties for blob restore policy
type RestorePolicyPropertiesOutput struct{ *pulumi.OutputState }

func (RestorePolicyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestorePolicyProperties)(nil)).Elem()
}

func (o RestorePolicyPropertiesOutput) ToRestorePolicyPropertiesOutput() RestorePolicyPropertiesOutput {
	return o
}

func (o RestorePolicyPropertiesOutput) ToRestorePolicyPropertiesOutputWithContext(ctx context.Context) RestorePolicyPropertiesOutput {
	return o
}

func (o RestorePolicyPropertiesOutput) ToRestorePolicyPropertiesPtrOutput() RestorePolicyPropertiesPtrOutput {
	return o.ToRestorePolicyPropertiesPtrOutputWithContext(context.Background())
}

func (o RestorePolicyPropertiesOutput) ToRestorePolicyPropertiesPtrOutputWithContext(ctx context.Context) RestorePolicyPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RestorePolicyProperties) *RestorePolicyProperties {
		return &v
	}).(RestorePolicyPropertiesPtrOutput)
}

// how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.
func (o RestorePolicyPropertiesOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RestorePolicyProperties) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Blob restore is enabled if set to true.
func (o RestorePolicyPropertiesOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v RestorePolicyProperties) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type RestorePolicyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RestorePolicyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestorePolicyProperties)(nil)).Elem()
}

func (o RestorePolicyPropertiesPtrOutput) ToRestorePolicyPropertiesPtrOutput() RestorePolicyPropertiesPtrOutput {
	return o
}

func (o RestorePolicyPropertiesPtrOutput) ToRestorePolicyPropertiesPtrOutputWithContext(ctx context.Context) RestorePolicyPropertiesPtrOutput {
	return o
}

func (o RestorePolicyPropertiesPtrOutput) Elem() RestorePolicyPropertiesOutput {
	return o.ApplyT(func(v *RestorePolicyProperties) RestorePolicyProperties {
		if v != nil {
			return *v
		}
		var ret RestorePolicyProperties
		return ret
	}).(RestorePolicyPropertiesOutput)
}

// how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.
func (o RestorePolicyPropertiesPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RestorePolicyProperties) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Blob restore is enabled if set to true.
func (o RestorePolicyPropertiesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RestorePolicyProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The blob service properties for blob restore policy
type RestorePolicyPropertiesResponse struct {
	// how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.
	Days *int `pulumi:"days"`
	// Blob restore is enabled if set to true.
	Enabled bool `pulumi:"enabled"`
	// Deprecated in favor of minRestoreTime property.
	LastEnabledTime string `pulumi:"lastEnabledTime"`
	// Returns the minimum date and time that the restore can be started.
	MinRestoreTime string `pulumi:"minRestoreTime"`
}

// The blob service properties for blob restore policy
type RestorePolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RestorePolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestorePolicyPropertiesResponse)(nil)).Elem()
}

func (o RestorePolicyPropertiesResponseOutput) ToRestorePolicyPropertiesResponseOutput() RestorePolicyPropertiesResponseOutput {
	return o
}

func (o RestorePolicyPropertiesResponseOutput) ToRestorePolicyPropertiesResponseOutputWithContext(ctx context.Context) RestorePolicyPropertiesResponseOutput {
	return o
}

// how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.
func (o RestorePolicyPropertiesResponseOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RestorePolicyPropertiesResponse) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Blob restore is enabled if set to true.
func (o RestorePolicyPropertiesResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v RestorePolicyPropertiesResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Deprecated in favor of minRestoreTime property.
func (o RestorePolicyPropertiesResponseOutput) LastEnabledTime() pulumi.StringOutput {
	return o.ApplyT(func(v RestorePolicyPropertiesResponse) string { return v.LastEnabledTime }).(pulumi.StringOutput)
}

// Returns the minimum date and time that the restore can be started.
func (o RestorePolicyPropertiesResponseOutput) MinRestoreTime() pulumi.StringOutput {
	return o.ApplyT(func(v RestorePolicyPropertiesResponse) string { return v.MinRestoreTime }).(pulumi.StringOutput)
}

type RestorePolicyPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (RestorePolicyPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestorePolicyPropertiesResponse)(nil)).Elem()
}

func (o RestorePolicyPropertiesResponsePtrOutput) ToRestorePolicyPropertiesResponsePtrOutput() RestorePolicyPropertiesResponsePtrOutput {
	return o
}

func (o RestorePolicyPropertiesResponsePtrOutput) ToRestorePolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) RestorePolicyPropertiesResponsePtrOutput {
	return o
}

func (o RestorePolicyPropertiesResponsePtrOutput) Elem() RestorePolicyPropertiesResponseOutput {
	return o.ApplyT(func(v *RestorePolicyPropertiesResponse) RestorePolicyPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret RestorePolicyPropertiesResponse
		return ret
	}).(RestorePolicyPropertiesResponseOutput)
}

// how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.
func (o RestorePolicyPropertiesResponsePtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RestorePolicyPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Blob restore is enabled if set to true.
func (o RestorePolicyPropertiesResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RestorePolicyPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Deprecated in favor of minRestoreTime property.
func (o RestorePolicyPropertiesResponsePtrOutput) LastEnabledTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestorePolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastEnabledTime
	}).(pulumi.StringPtrOutput)
}

// Returns the minimum date and time that the restore can be started.
func (o RestorePolicyPropertiesResponsePtrOutput) MinRestoreTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestorePolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MinRestoreTime
	}).(pulumi.StringPtrOutput)
}

// Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing
type RoutingPreference struct {
	// A boolean flag which indicates whether internet routing storage endpoints are to be published
	PublishInternetEndpoints *bool `pulumi:"publishInternetEndpoints"`
	// A boolean flag which indicates whether microsoft routing storage endpoints are to be published
	PublishMicrosoftEndpoints *bool `pulumi:"publishMicrosoftEndpoints"`
	// Routing Choice defines the kind of network routing opted by the user.
	RoutingChoice *string `pulumi:"routingChoice"`
}

// RoutingPreferenceInput is an input type that accepts RoutingPreferenceArgs and RoutingPreferenceOutput values.
// You can construct a concrete instance of `RoutingPreferenceInput` via:
//
//	RoutingPreferenceArgs{...}
type RoutingPreferenceInput interface {
	pulumi.Input

	ToRoutingPreferenceOutput() RoutingPreferenceOutput
	ToRoutingPreferenceOutputWithContext(context.Context) RoutingPreferenceOutput
}

// Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing
type RoutingPreferenceArgs struct {
	// A boolean flag which indicates whether internet routing storage endpoints are to be published
	PublishInternetEndpoints pulumi.BoolPtrInput `pulumi:"publishInternetEndpoints"`
	// A boolean flag which indicates whether microsoft routing storage endpoints are to be published
	PublishMicrosoftEndpoints pulumi.BoolPtrInput `pulumi:"publishMicrosoftEndpoints"`
	// Routing Choice defines the kind of network routing opted by the user.
	RoutingChoice pulumi.StringPtrInput `pulumi:"routingChoice"`
}

func (RoutingPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPreference)(nil)).Elem()
}

func (i RoutingPreferenceArgs) ToRoutingPreferenceOutput() RoutingPreferenceOutput {
	return i.ToRoutingPreferenceOutputWithContext(context.Background())
}

func (i RoutingPreferenceArgs) ToRoutingPreferenceOutputWithContext(ctx context.Context) RoutingPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPreferenceOutput)
}

func (i RoutingPreferenceArgs) ToRoutingPreferencePtrOutput() RoutingPreferencePtrOutput {
	return i.ToRoutingPreferencePtrOutputWithContext(context.Background())
}

func (i RoutingPreferenceArgs) ToRoutingPreferencePtrOutputWithContext(ctx context.Context) RoutingPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPreferenceOutput).ToRoutingPreferencePtrOutputWithContext(ctx)
}

// RoutingPreferencePtrInput is an input type that accepts RoutingPreferenceArgs, RoutingPreferencePtr and RoutingPreferencePtrOutput values.
// You can construct a concrete instance of `RoutingPreferencePtrInput` via:
//
//	        RoutingPreferenceArgs{...}
//
//	or:
//
//	        nil
type RoutingPreferencePtrInput interface {
	pulumi.Input

	ToRoutingPreferencePtrOutput() RoutingPreferencePtrOutput
	ToRoutingPreferencePtrOutputWithContext(context.Context) RoutingPreferencePtrOutput
}

type routingPreferencePtrType RoutingPreferenceArgs

func RoutingPreferencePtr(v *RoutingPreferenceArgs) RoutingPreferencePtrInput {
	return (*routingPreferencePtrType)(v)
}

func (*routingPreferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingPreference)(nil)).Elem()
}

func (i *routingPreferencePtrType) ToRoutingPreferencePtrOutput() RoutingPreferencePtrOutput {
	return i.ToRoutingPreferencePtrOutputWithContext(context.Background())
}

func (i *routingPreferencePtrType) ToRoutingPreferencePtrOutputWithContext(ctx context.Context) RoutingPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPreferencePtrOutput)
}

// Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing
type RoutingPreferenceOutput struct{ *pulumi.OutputState }

func (RoutingPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPreference)(nil)).Elem()
}

func (o RoutingPreferenceOutput) ToRoutingPreferenceOutput() RoutingPreferenceOutput {
	return o
}

func (o RoutingPreferenceOutput) ToRoutingPreferenceOutputWithContext(ctx context.Context) RoutingPreferenceOutput {
	return o
}

func (o RoutingPreferenceOutput) ToRoutingPreferencePtrOutput() RoutingPreferencePtrOutput {
	return o.ToRoutingPreferencePtrOutputWithContext(context.Background())
}

func (o RoutingPreferenceOutput) ToRoutingPreferencePtrOutputWithContext(ctx context.Context) RoutingPreferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutingPreference) *RoutingPreference {
		return &v
	}).(RoutingPreferencePtrOutput)
}

// A boolean flag which indicates whether internet routing storage endpoints are to be published
func (o RoutingPreferenceOutput) PublishInternetEndpoints() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RoutingPreference) *bool { return v.PublishInternetEndpoints }).(pulumi.BoolPtrOutput)
}

// A boolean flag which indicates whether microsoft routing storage endpoints are to be published
func (o RoutingPreferenceOutput) PublishMicrosoftEndpoints() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RoutingPreference) *bool { return v.PublishMicrosoftEndpoints }).(pulumi.BoolPtrOutput)
}

// Routing Choice defines the kind of network routing opted by the user.
func (o RoutingPreferenceOutput) RoutingChoice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingPreference) *string { return v.RoutingChoice }).(pulumi.StringPtrOutput)
}

type RoutingPreferencePtrOutput struct{ *pulumi.OutputState }

func (RoutingPreferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingPreference)(nil)).Elem()
}

func (o RoutingPreferencePtrOutput) ToRoutingPreferencePtrOutput() RoutingPreferencePtrOutput {
	return o
}

func (o RoutingPreferencePtrOutput) ToRoutingPreferencePtrOutputWithContext(ctx context.Context) RoutingPreferencePtrOutput {
	return o
}

func (o RoutingPreferencePtrOutput) Elem() RoutingPreferenceOutput {
	return o.ApplyT(func(v *RoutingPreference) RoutingPreference {
		if v != nil {
			return *v
		}
		var ret RoutingPreference
		return ret
	}).(RoutingPreferenceOutput)
}

// A boolean flag which indicates whether internet routing storage endpoints are to be published
func (o RoutingPreferencePtrOutput) PublishInternetEndpoints() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RoutingPreference) *bool {
		if v == nil {
			return nil
		}
		return v.PublishInternetEndpoints
	}).(pulumi.BoolPtrOutput)
}

// A boolean flag which indicates whether microsoft routing storage endpoints are to be published
func (o RoutingPreferencePtrOutput) PublishMicrosoftEndpoints() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RoutingPreference) *bool {
		if v == nil {
			return nil
		}
		return v.PublishMicrosoftEndpoints
	}).(pulumi.BoolPtrOutput)
}

// Routing Choice defines the kind of network routing opted by the user.
func (o RoutingPreferencePtrOutput) RoutingChoice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutingPreference) *string {
		if v == nil {
			return nil
		}
		return v.RoutingChoice
	}).(pulumi.StringPtrOutput)
}

// Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing
type RoutingPreferenceResponse struct {
	// A boolean flag which indicates whether internet routing storage endpoints are to be published
	PublishInternetEndpoints *bool `pulumi:"publishInternetEndpoints"`
	// A boolean flag which indicates whether microsoft routing storage endpoints are to be published
	PublishMicrosoftEndpoints *bool `pulumi:"publishMicrosoftEndpoints"`
	// Routing Choice defines the kind of network routing opted by the user.
	RoutingChoice *string `pulumi:"routingChoice"`
}

// Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing
type RoutingPreferenceResponseOutput struct{ *pulumi.OutputState }

func (RoutingPreferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPreferenceResponse)(nil)).Elem()
}

func (o RoutingPreferenceResponseOutput) ToRoutingPreferenceResponseOutput() RoutingPreferenceResponseOutput {
	return o
}

func (o RoutingPreferenceResponseOutput) ToRoutingPreferenceResponseOutputWithContext(ctx context.Context) RoutingPreferenceResponseOutput {
	return o
}

// A boolean flag which indicates whether internet routing storage endpoints are to be published
func (o RoutingPreferenceResponseOutput) PublishInternetEndpoints() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RoutingPreferenceResponse) *bool { return v.PublishInternetEndpoints }).(pulumi.BoolPtrOutput)
}

// A boolean flag which indicates whether microsoft routing storage endpoints are to be published
func (o RoutingPreferenceResponseOutput) PublishMicrosoftEndpoints() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RoutingPreferenceResponse) *bool { return v.PublishMicrosoftEndpoints }).(pulumi.BoolPtrOutput)
}

// Routing Choice defines the kind of network routing opted by the user.
func (o RoutingPreferenceResponseOutput) RoutingChoice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingPreferenceResponse) *string { return v.RoutingChoice }).(pulumi.StringPtrOutput)
}

type RoutingPreferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (RoutingPreferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingPreferenceResponse)(nil)).Elem()
}

func (o RoutingPreferenceResponsePtrOutput) ToRoutingPreferenceResponsePtrOutput() RoutingPreferenceResponsePtrOutput {
	return o
}

func (o RoutingPreferenceResponsePtrOutput) ToRoutingPreferenceResponsePtrOutputWithContext(ctx context.Context) RoutingPreferenceResponsePtrOutput {
	return o
}

func (o RoutingPreferenceResponsePtrOutput) Elem() RoutingPreferenceResponseOutput {
	return o.ApplyT(func(v *RoutingPreferenceResponse) RoutingPreferenceResponse {
		if v != nil {
			return *v
		}
		var ret RoutingPreferenceResponse
		return ret
	}).(RoutingPreferenceResponseOutput)
}

// A boolean flag which indicates whether internet routing storage endpoints are to be published
func (o RoutingPreferenceResponsePtrOutput) PublishInternetEndpoints() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RoutingPreferenceResponse) *bool {
		if v == nil {
			return nil
		}
		return v.PublishInternetEndpoints
	}).(pulumi.BoolPtrOutput)
}

// A boolean flag which indicates whether microsoft routing storage endpoints are to be published
func (o RoutingPreferenceResponsePtrOutput) PublishMicrosoftEndpoints() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RoutingPreferenceResponse) *bool {
		if v == nil {
			return nil
		}
		return v.PublishMicrosoftEndpoints
	}).(pulumi.BoolPtrOutput)
}

// Routing Choice defines the kind of network routing opted by the user.
func (o RoutingPreferenceResponsePtrOutput) RoutingChoice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutingPreferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.RoutingChoice
	}).(pulumi.StringPtrOutput)
}

// SasPolicy assigned to the storage account.
type SasPolicy struct {
	// The SAS expiration action. Can only be Log.
	ExpirationAction string `pulumi:"expirationAction"`
	// The SAS expiration period, DD.HH:MM:SS.
	SasExpirationPeriod string `pulumi:"sasExpirationPeriod"`
}

// Defaults sets the appropriate defaults for SasPolicy
func (val *SasPolicy) Defaults() *SasPolicy {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.ExpirationAction) {
		tmp.ExpirationAction = "Log"
	}
	return &tmp
}

// SasPolicyInput is an input type that accepts SasPolicyArgs and SasPolicyOutput values.
// You can construct a concrete instance of `SasPolicyInput` via:
//
//	SasPolicyArgs{...}
type SasPolicyInput interface {
	pulumi.Input

	ToSasPolicyOutput() SasPolicyOutput
	ToSasPolicyOutputWithContext(context.Context) SasPolicyOutput
}

// SasPolicy assigned to the storage account.
type SasPolicyArgs struct {
	// The SAS expiration action. Can only be Log.
	ExpirationAction pulumi.StringInput `pulumi:"expirationAction"`
	// The SAS expiration period, DD.HH:MM:SS.
	SasExpirationPeriod pulumi.StringInput `pulumi:"sasExpirationPeriod"`
}

// Defaults sets the appropriate defaults for SasPolicyArgs
func (val *SasPolicyArgs) Defaults() *SasPolicyArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.ExpirationAction) {
		tmp.ExpirationAction = pulumi.String("Log")
	}
	return &tmp
}
func (SasPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SasPolicy)(nil)).Elem()
}

func (i SasPolicyArgs) ToSasPolicyOutput() SasPolicyOutput {
	return i.ToSasPolicyOutputWithContext(context.Background())
}

func (i SasPolicyArgs) ToSasPolicyOutputWithContext(ctx context.Context) SasPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasPolicyOutput)
}

func (i SasPolicyArgs) ToSasPolicyPtrOutput() SasPolicyPtrOutput {
	return i.ToSasPolicyPtrOutputWithContext(context.Background())
}

func (i SasPolicyArgs) ToSasPolicyPtrOutputWithContext(ctx context.Context) SasPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasPolicyOutput).ToSasPolicyPtrOutputWithContext(ctx)
}

// SasPolicyPtrInput is an input type that accepts SasPolicyArgs, SasPolicyPtr and SasPolicyPtrOutput values.
// You can construct a concrete instance of `SasPolicyPtrInput` via:
//
//	        SasPolicyArgs{...}
//
//	or:
//
//	        nil
type SasPolicyPtrInput interface {
	pulumi.Input

	ToSasPolicyPtrOutput() SasPolicyPtrOutput
	ToSasPolicyPtrOutputWithContext(context.Context) SasPolicyPtrOutput
}

type sasPolicyPtrType SasPolicyArgs

func SasPolicyPtr(v *SasPolicyArgs) SasPolicyPtrInput {
	return (*sasPolicyPtrType)(v)
}

func (*sasPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SasPolicy)(nil)).Elem()
}

func (i *sasPolicyPtrType) ToSasPolicyPtrOutput() SasPolicyPtrOutput {
	return i.ToSasPolicyPtrOutputWithContext(context.Background())
}

func (i *sasPolicyPtrType) ToSasPolicyPtrOutputWithContext(ctx context.Context) SasPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasPolicyPtrOutput)
}

// SasPolicy assigned to the storage account.
type SasPolicyOutput struct{ *pulumi.OutputState }

func (SasPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SasPolicy)(nil)).Elem()
}

func (o SasPolicyOutput) ToSasPolicyOutput() SasPolicyOutput {
	return o
}

func (o SasPolicyOutput) ToSasPolicyOutputWithContext(ctx context.Context) SasPolicyOutput {
	return o
}

func (o SasPolicyOutput) ToSasPolicyPtrOutput() SasPolicyPtrOutput {
	return o.ToSasPolicyPtrOutputWithContext(context.Background())
}

func (o SasPolicyOutput) ToSasPolicyPtrOutputWithContext(ctx context.Context) SasPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SasPolicy) *SasPolicy {
		return &v
	}).(SasPolicyPtrOutput)
}

// The SAS expiration action. Can only be Log.
func (o SasPolicyOutput) ExpirationAction() pulumi.StringOutput {
	return o.ApplyT(func(v SasPolicy) string { return v.ExpirationAction }).(pulumi.StringOutput)
}

// The SAS expiration period, DD.HH:MM:SS.
func (o SasPolicyOutput) SasExpirationPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v SasPolicy) string { return v.SasExpirationPeriod }).(pulumi.StringOutput)
}

type SasPolicyPtrOutput struct{ *pulumi.OutputState }

func (SasPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SasPolicy)(nil)).Elem()
}

func (o SasPolicyPtrOutput) ToSasPolicyPtrOutput() SasPolicyPtrOutput {
	return o
}

func (o SasPolicyPtrOutput) ToSasPolicyPtrOutputWithContext(ctx context.Context) SasPolicyPtrOutput {
	return o
}

func (o SasPolicyPtrOutput) Elem() SasPolicyOutput {
	return o.ApplyT(func(v *SasPolicy) SasPolicy {
		if v != nil {
			return *v
		}
		var ret SasPolicy
		return ret
	}).(SasPolicyOutput)
}

// The SAS expiration action. Can only be Log.
func (o SasPolicyPtrOutput) ExpirationAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SasPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.ExpirationAction
	}).(pulumi.StringPtrOutput)
}

// The SAS expiration period, DD.HH:MM:SS.
func (o SasPolicyPtrOutput) SasExpirationPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SasPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.SasExpirationPeriod
	}).(pulumi.StringPtrOutput)
}

// SasPolicy assigned to the storage account.
type SasPolicyResponse struct {
	// The SAS expiration action. Can only be Log.
	ExpirationAction string `pulumi:"expirationAction"`
	// The SAS expiration period, DD.HH:MM:SS.
	SasExpirationPeriod string `pulumi:"sasExpirationPeriod"`
}

// Defaults sets the appropriate defaults for SasPolicyResponse
func (val *SasPolicyResponse) Defaults() *SasPolicyResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.ExpirationAction) {
		tmp.ExpirationAction = "Log"
	}
	return &tmp
}

// SasPolicy assigned to the storage account.
type SasPolicyResponseOutput struct{ *pulumi.OutputState }

func (SasPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SasPolicyResponse)(nil)).Elem()
}

func (o SasPolicyResponseOutput) ToSasPolicyResponseOutput() SasPolicyResponseOutput {
	return o
}

func (o SasPolicyResponseOutput) ToSasPolicyResponseOutputWithContext(ctx context.Context) SasPolicyResponseOutput {
	return o
}

// The SAS expiration action. Can only be Log.
func (o SasPolicyResponseOutput) ExpirationAction() pulumi.StringOutput {
	return o.ApplyT(func(v SasPolicyResponse) string { return v.ExpirationAction }).(pulumi.StringOutput)
}

// The SAS expiration period, DD.HH:MM:SS.
func (o SasPolicyResponseOutput) SasExpirationPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v SasPolicyResponse) string { return v.SasExpirationPeriod }).(pulumi.StringOutput)
}

// The SKU of the storage account.
type Sku struct {
	// The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The SKU of the storage account.
type SkuArgs struct {
	// The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

// The SKU of the storage account.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

// The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU of the storage account.
type SkuResponse struct {
	// The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
	Name string `pulumi:"name"`
	// The SKU tier. This is based on the SKU name.
	Tier string `pulumi:"tier"`
}

// The SKU of the storage account.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU tier. This is based on the SKU name.
func (o SkuResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Tier }).(pulumi.StringOutput)
}

// Setting for SMB protocol
type SmbSetting struct {
	// SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'.
	AuthenticationMethods *string `pulumi:"authenticationMethods"`
	// SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'.
	ChannelEncryption *string `pulumi:"channelEncryption"`
	// Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'
	KerberosTicketEncryption *string `pulumi:"kerberosTicketEncryption"`
	// Multichannel setting. Applies to Premium FileStorage only.
	Multichannel *Multichannel `pulumi:"multichannel"`
	// SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'.
	Versions *string `pulumi:"versions"`
}

// SmbSettingInput is an input type that accepts SmbSettingArgs and SmbSettingOutput values.
// You can construct a concrete instance of `SmbSettingInput` via:
//
//	SmbSettingArgs{...}
type SmbSettingInput interface {
	pulumi.Input

	ToSmbSettingOutput() SmbSettingOutput
	ToSmbSettingOutputWithContext(context.Context) SmbSettingOutput
}

// Setting for SMB protocol
type SmbSettingArgs struct {
	// SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'.
	AuthenticationMethods pulumi.StringPtrInput `pulumi:"authenticationMethods"`
	// SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'.
	ChannelEncryption pulumi.StringPtrInput `pulumi:"channelEncryption"`
	// Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'
	KerberosTicketEncryption pulumi.StringPtrInput `pulumi:"kerberosTicketEncryption"`
	// Multichannel setting. Applies to Premium FileStorage only.
	Multichannel MultichannelPtrInput `pulumi:"multichannel"`
	// SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'.
	Versions pulumi.StringPtrInput `pulumi:"versions"`
}

func (SmbSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmbSetting)(nil)).Elem()
}

func (i SmbSettingArgs) ToSmbSettingOutput() SmbSettingOutput {
	return i.ToSmbSettingOutputWithContext(context.Background())
}

func (i SmbSettingArgs) ToSmbSettingOutputWithContext(ctx context.Context) SmbSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmbSettingOutput)
}

func (i SmbSettingArgs) ToSmbSettingPtrOutput() SmbSettingPtrOutput {
	return i.ToSmbSettingPtrOutputWithContext(context.Background())
}

func (i SmbSettingArgs) ToSmbSettingPtrOutputWithContext(ctx context.Context) SmbSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmbSettingOutput).ToSmbSettingPtrOutputWithContext(ctx)
}

// SmbSettingPtrInput is an input type that accepts SmbSettingArgs, SmbSettingPtr and SmbSettingPtrOutput values.
// You can construct a concrete instance of `SmbSettingPtrInput` via:
//
//	        SmbSettingArgs{...}
//
//	or:
//
//	        nil
type SmbSettingPtrInput interface {
	pulumi.Input

	ToSmbSettingPtrOutput() SmbSettingPtrOutput
	ToSmbSettingPtrOutputWithContext(context.Context) SmbSettingPtrOutput
}

type smbSettingPtrType SmbSettingArgs

func SmbSettingPtr(v *SmbSettingArgs) SmbSettingPtrInput {
	return (*smbSettingPtrType)(v)
}

func (*smbSettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SmbSetting)(nil)).Elem()
}

func (i *smbSettingPtrType) ToSmbSettingPtrOutput() SmbSettingPtrOutput {
	return i.ToSmbSettingPtrOutputWithContext(context.Background())
}

func (i *smbSettingPtrType) ToSmbSettingPtrOutputWithContext(ctx context.Context) SmbSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmbSettingPtrOutput)
}

// Setting for SMB protocol
type SmbSettingOutput struct{ *pulumi.OutputState }

func (SmbSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmbSetting)(nil)).Elem()
}

func (o SmbSettingOutput) ToSmbSettingOutput() SmbSettingOutput {
	return o
}

func (o SmbSettingOutput) ToSmbSettingOutputWithContext(ctx context.Context) SmbSettingOutput {
	return o
}

func (o SmbSettingOutput) ToSmbSettingPtrOutput() SmbSettingPtrOutput {
	return o.ToSmbSettingPtrOutputWithContext(context.Background())
}

func (o SmbSettingOutput) ToSmbSettingPtrOutputWithContext(ctx context.Context) SmbSettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SmbSetting) *SmbSetting {
		return &v
	}).(SmbSettingPtrOutput)
}

// SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'.
func (o SmbSettingOutput) AuthenticationMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmbSetting) *string { return v.AuthenticationMethods }).(pulumi.StringPtrOutput)
}

// SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'.
func (o SmbSettingOutput) ChannelEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmbSetting) *string { return v.ChannelEncryption }).(pulumi.StringPtrOutput)
}

// Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'
func (o SmbSettingOutput) KerberosTicketEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmbSetting) *string { return v.KerberosTicketEncryption }).(pulumi.StringPtrOutput)
}

// Multichannel setting. Applies to Premium FileStorage only.
func (o SmbSettingOutput) Multichannel() MultichannelPtrOutput {
	return o.ApplyT(func(v SmbSetting) *Multichannel { return v.Multichannel }).(MultichannelPtrOutput)
}

// SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'.
func (o SmbSettingOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmbSetting) *string { return v.Versions }).(pulumi.StringPtrOutput)
}

type SmbSettingPtrOutput struct{ *pulumi.OutputState }

func (SmbSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmbSetting)(nil)).Elem()
}

func (o SmbSettingPtrOutput) ToSmbSettingPtrOutput() SmbSettingPtrOutput {
	return o
}

func (o SmbSettingPtrOutput) ToSmbSettingPtrOutputWithContext(ctx context.Context) SmbSettingPtrOutput {
	return o
}

func (o SmbSettingPtrOutput) Elem() SmbSettingOutput {
	return o.ApplyT(func(v *SmbSetting) SmbSetting {
		if v != nil {
			return *v
		}
		var ret SmbSetting
		return ret
	}).(SmbSettingOutput)
}

// SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'.
func (o SmbSettingPtrOutput) AuthenticationMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmbSetting) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationMethods
	}).(pulumi.StringPtrOutput)
}

// SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'.
func (o SmbSettingPtrOutput) ChannelEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmbSetting) *string {
		if v == nil {
			return nil
		}
		return v.ChannelEncryption
	}).(pulumi.StringPtrOutput)
}

// Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'
func (o SmbSettingPtrOutput) KerberosTicketEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmbSetting) *string {
		if v == nil {
			return nil
		}
		return v.KerberosTicketEncryption
	}).(pulumi.StringPtrOutput)
}

// Multichannel setting. Applies to Premium FileStorage only.
func (o SmbSettingPtrOutput) Multichannel() MultichannelPtrOutput {
	return o.ApplyT(func(v *SmbSetting) *Multichannel {
		if v == nil {
			return nil
		}
		return v.Multichannel
	}).(MultichannelPtrOutput)
}

// SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'.
func (o SmbSettingPtrOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmbSetting) *string {
		if v == nil {
			return nil
		}
		return v.Versions
	}).(pulumi.StringPtrOutput)
}

// Setting for SMB protocol
type SmbSettingResponse struct {
	// SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'.
	AuthenticationMethods *string `pulumi:"authenticationMethods"`
	// SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'.
	ChannelEncryption *string `pulumi:"channelEncryption"`
	// Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'
	KerberosTicketEncryption *string `pulumi:"kerberosTicketEncryption"`
	// Multichannel setting. Applies to Premium FileStorage only.
	Multichannel *MultichannelResponse `pulumi:"multichannel"`
	// SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'.
	Versions *string `pulumi:"versions"`
}

// Setting for SMB protocol
type SmbSettingResponseOutput struct{ *pulumi.OutputState }

func (SmbSettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmbSettingResponse)(nil)).Elem()
}

func (o SmbSettingResponseOutput) ToSmbSettingResponseOutput() SmbSettingResponseOutput {
	return o
}

func (o SmbSettingResponseOutput) ToSmbSettingResponseOutputWithContext(ctx context.Context) SmbSettingResponseOutput {
	return o
}

// SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'.
func (o SmbSettingResponseOutput) AuthenticationMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmbSettingResponse) *string { return v.AuthenticationMethods }).(pulumi.StringPtrOutput)
}

// SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'.
func (o SmbSettingResponseOutput) ChannelEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmbSettingResponse) *string { return v.ChannelEncryption }).(pulumi.StringPtrOutput)
}

// Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'
func (o SmbSettingResponseOutput) KerberosTicketEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmbSettingResponse) *string { return v.KerberosTicketEncryption }).(pulumi.StringPtrOutput)
}

// Multichannel setting. Applies to Premium FileStorage only.
func (o SmbSettingResponseOutput) Multichannel() MultichannelResponsePtrOutput {
	return o.ApplyT(func(v SmbSettingResponse) *MultichannelResponse { return v.Multichannel }).(MultichannelResponsePtrOutput)
}

// SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'.
func (o SmbSettingResponseOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmbSettingResponse) *string { return v.Versions }).(pulumi.StringPtrOutput)
}

type SmbSettingResponsePtrOutput struct{ *pulumi.OutputState }

func (SmbSettingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmbSettingResponse)(nil)).Elem()
}

func (o SmbSettingResponsePtrOutput) ToSmbSettingResponsePtrOutput() SmbSettingResponsePtrOutput {
	return o
}

func (o SmbSettingResponsePtrOutput) ToSmbSettingResponsePtrOutputWithContext(ctx context.Context) SmbSettingResponsePtrOutput {
	return o
}

func (o SmbSettingResponsePtrOutput) Elem() SmbSettingResponseOutput {
	return o.ApplyT(func(v *SmbSettingResponse) SmbSettingResponse {
		if v != nil {
			return *v
		}
		var ret SmbSettingResponse
		return ret
	}).(SmbSettingResponseOutput)
}

// SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'.
func (o SmbSettingResponsePtrOutput) AuthenticationMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmbSettingResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationMethods
	}).(pulumi.StringPtrOutput)
}

// SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'.
func (o SmbSettingResponsePtrOutput) ChannelEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmbSettingResponse) *string {
		if v == nil {
			return nil
		}
		return v.ChannelEncryption
	}).(pulumi.StringPtrOutput)
}

// Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'
func (o SmbSettingResponsePtrOutput) KerberosTicketEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmbSettingResponse) *string {
		if v == nil {
			return nil
		}
		return v.KerberosTicketEncryption
	}).(pulumi.StringPtrOutput)
}

// Multichannel setting. Applies to Premium FileStorage only.
func (o SmbSettingResponsePtrOutput) Multichannel() MultichannelResponsePtrOutput {
	return o.ApplyT(func(v *SmbSettingResponse) *MultichannelResponse {
		if v == nil {
			return nil
		}
		return v.Multichannel
	}).(MultichannelResponsePtrOutput)
}

// SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'.
func (o SmbSettingResponsePtrOutput) Versions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SmbSettingResponse) *string {
		if v == nil {
			return nil
		}
		return v.Versions
	}).(pulumi.StringPtrOutput)
}

type SshPublicKey struct {
	// Optional. It is used to store the function/usage of the key
	Description *string `pulumi:"description"`
	// Ssh public key base64 encoded. The format should be: '<keyType> <keyData>', e.g. ssh-rsa AAAABBBB
	Key *string `pulumi:"key"`
}

// SshPublicKeyInput is an input type that accepts SshPublicKeyArgs and SshPublicKeyOutput values.
// You can construct a concrete instance of `SshPublicKeyInput` via:
//
//	SshPublicKeyArgs{...}
type SshPublicKeyInput interface {
	pulumi.Input

	ToSshPublicKeyOutput() SshPublicKeyOutput
	ToSshPublicKeyOutputWithContext(context.Context) SshPublicKeyOutput
}

type SshPublicKeyArgs struct {
	// Optional. It is used to store the function/usage of the key
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Ssh public key base64 encoded. The format should be: '<keyType> <keyData>', e.g. ssh-rsa AAAABBBB
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (SshPublicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicKey)(nil)).Elem()
}

func (i SshPublicKeyArgs) ToSshPublicKeyOutput() SshPublicKeyOutput {
	return i.ToSshPublicKeyOutputWithContext(context.Background())
}

func (i SshPublicKeyArgs) ToSshPublicKeyOutputWithContext(ctx context.Context) SshPublicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshPublicKeyOutput)
}

// SshPublicKeyArrayInput is an input type that accepts SshPublicKeyArray and SshPublicKeyArrayOutput values.
// You can construct a concrete instance of `SshPublicKeyArrayInput` via:
//
//	SshPublicKeyArray{ SshPublicKeyArgs{...} }
type SshPublicKeyArrayInput interface {
	pulumi.Input

	ToSshPublicKeyArrayOutput() SshPublicKeyArrayOutput
	ToSshPublicKeyArrayOutputWithContext(context.Context) SshPublicKeyArrayOutput
}

type SshPublicKeyArray []SshPublicKeyInput

func (SshPublicKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshPublicKey)(nil)).Elem()
}

func (i SshPublicKeyArray) ToSshPublicKeyArrayOutput() SshPublicKeyArrayOutput {
	return i.ToSshPublicKeyArrayOutputWithContext(context.Background())
}

func (i SshPublicKeyArray) ToSshPublicKeyArrayOutputWithContext(ctx context.Context) SshPublicKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshPublicKeyArrayOutput)
}

type SshPublicKeyOutput struct{ *pulumi.OutputState }

func (SshPublicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicKey)(nil)).Elem()
}

func (o SshPublicKeyOutput) ToSshPublicKeyOutput() SshPublicKeyOutput {
	return o
}

func (o SshPublicKeyOutput) ToSshPublicKeyOutputWithContext(ctx context.Context) SshPublicKeyOutput {
	return o
}

// Optional. It is used to store the function/usage of the key
func (o SshPublicKeyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshPublicKey) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Ssh public key base64 encoded. The format should be: '<keyType> <keyData>', e.g. ssh-rsa AAAABBBB
func (o SshPublicKeyOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshPublicKey) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type SshPublicKeyArrayOutput struct{ *pulumi.OutputState }

func (SshPublicKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshPublicKey)(nil)).Elem()
}

func (o SshPublicKeyArrayOutput) ToSshPublicKeyArrayOutput() SshPublicKeyArrayOutput {
	return o
}

func (o SshPublicKeyArrayOutput) ToSshPublicKeyArrayOutputWithContext(ctx context.Context) SshPublicKeyArrayOutput {
	return o
}

func (o SshPublicKeyArrayOutput) Index(i pulumi.IntInput) SshPublicKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SshPublicKey {
		return vs[0].([]SshPublicKey)[vs[1].(int)]
	}).(SshPublicKeyOutput)
}

type SshPublicKeyResponse struct {
	// Optional. It is used to store the function/usage of the key
	Description *string `pulumi:"description"`
	// Ssh public key base64 encoded. The format should be: '<keyType> <keyData>', e.g. ssh-rsa AAAABBBB
	Key *string `pulumi:"key"`
}

type SshPublicKeyResponseOutput struct{ *pulumi.OutputState }

func (SshPublicKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicKeyResponse)(nil)).Elem()
}

func (o SshPublicKeyResponseOutput) ToSshPublicKeyResponseOutput() SshPublicKeyResponseOutput {
	return o
}

func (o SshPublicKeyResponseOutput) ToSshPublicKeyResponseOutputWithContext(ctx context.Context) SshPublicKeyResponseOutput {
	return o
}

// Optional. It is used to store the function/usage of the key
func (o SshPublicKeyResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshPublicKeyResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Ssh public key base64 encoded. The format should be: '<keyType> <keyData>', e.g. ssh-rsa AAAABBBB
func (o SshPublicKeyResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshPublicKeyResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type SshPublicKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (SshPublicKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshPublicKeyResponse)(nil)).Elem()
}

func (o SshPublicKeyResponseArrayOutput) ToSshPublicKeyResponseArrayOutput() SshPublicKeyResponseArrayOutput {
	return o
}

func (o SshPublicKeyResponseArrayOutput) ToSshPublicKeyResponseArrayOutputWithContext(ctx context.Context) SshPublicKeyResponseArrayOutput {
	return o
}

func (o SshPublicKeyResponseArrayOutput) Index(i pulumi.IntInput) SshPublicKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SshPublicKeyResponse {
		return vs[0].([]SshPublicKeyResponse)[vs[1].(int)]
	}).(SshPublicKeyResponseOutput)
}

// The URIs that are used to perform a retrieval of a public blob, file, web or dfs object via a internet routing endpoint.
type StorageAccountInternetEndpointsResponse struct {
	// Gets the blob endpoint.
	Blob string `pulumi:"blob"`
	// Gets the dfs endpoint.
	Dfs string `pulumi:"dfs"`
	// Gets the file endpoint.
	File string `pulumi:"file"`
	// Gets the web endpoint.
	Web string `pulumi:"web"`
}

// The URIs that are used to perform a retrieval of a public blob, file, web or dfs object via a internet routing endpoint.
type StorageAccountInternetEndpointsResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountInternetEndpointsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountInternetEndpointsResponse)(nil)).Elem()
}

func (o StorageAccountInternetEndpointsResponseOutput) ToStorageAccountInternetEndpointsResponseOutput() StorageAccountInternetEndpointsResponseOutput {
	return o
}

func (o StorageAccountInternetEndpointsResponseOutput) ToStorageAccountInternetEndpointsResponseOutputWithContext(ctx context.Context) StorageAccountInternetEndpointsResponseOutput {
	return o
}

// Gets the blob endpoint.
func (o StorageAccountInternetEndpointsResponseOutput) Blob() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountInternetEndpointsResponse) string { return v.Blob }).(pulumi.StringOutput)
}

// Gets the dfs endpoint.
func (o StorageAccountInternetEndpointsResponseOutput) Dfs() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountInternetEndpointsResponse) string { return v.Dfs }).(pulumi.StringOutput)
}

// Gets the file endpoint.
func (o StorageAccountInternetEndpointsResponseOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountInternetEndpointsResponse) string { return v.File }).(pulumi.StringOutput)
}

// Gets the web endpoint.
func (o StorageAccountInternetEndpointsResponseOutput) Web() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountInternetEndpointsResponse) string { return v.Web }).(pulumi.StringOutput)
}

type StorageAccountInternetEndpointsResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageAccountInternetEndpointsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountInternetEndpointsResponse)(nil)).Elem()
}

func (o StorageAccountInternetEndpointsResponsePtrOutput) ToStorageAccountInternetEndpointsResponsePtrOutput() StorageAccountInternetEndpointsResponsePtrOutput {
	return o
}

func (o StorageAccountInternetEndpointsResponsePtrOutput) ToStorageAccountInternetEndpointsResponsePtrOutputWithContext(ctx context.Context) StorageAccountInternetEndpointsResponsePtrOutput {
	return o
}

func (o StorageAccountInternetEndpointsResponsePtrOutput) Elem() StorageAccountInternetEndpointsResponseOutput {
	return o.ApplyT(func(v *StorageAccountInternetEndpointsResponse) StorageAccountInternetEndpointsResponse {
		if v != nil {
			return *v
		}
		var ret StorageAccountInternetEndpointsResponse
		return ret
	}).(StorageAccountInternetEndpointsResponseOutput)
}

// Gets the blob endpoint.
func (o StorageAccountInternetEndpointsResponsePtrOutput) Blob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountInternetEndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Blob
	}).(pulumi.StringPtrOutput)
}

// Gets the dfs endpoint.
func (o StorageAccountInternetEndpointsResponsePtrOutput) Dfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountInternetEndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Dfs
	}).(pulumi.StringPtrOutput)
}

// Gets the file endpoint.
func (o StorageAccountInternetEndpointsResponsePtrOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountInternetEndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.File
	}).(pulumi.StringPtrOutput)
}

// Gets the web endpoint.
func (o StorageAccountInternetEndpointsResponsePtrOutput) Web() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountInternetEndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Web
	}).(pulumi.StringPtrOutput)
}

// An access key for the storage account.
type StorageAccountKeyResponse struct {
	// Creation time of the key, in round trip date format.
	CreationTime string `pulumi:"creationTime"`
	// Name of the key.
	KeyName string `pulumi:"keyName"`
	// Permissions for the key -- read-only or full permissions.
	Permissions string `pulumi:"permissions"`
	// Base 64-encoded value of the key.
	Value string `pulumi:"value"`
}

// An access key for the storage account.
type StorageAccountKeyResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountKeyResponse)(nil)).Elem()
}

func (o StorageAccountKeyResponseOutput) ToStorageAccountKeyResponseOutput() StorageAccountKeyResponseOutput {
	return o
}

func (o StorageAccountKeyResponseOutput) ToStorageAccountKeyResponseOutputWithContext(ctx context.Context) StorageAccountKeyResponseOutput {
	return o
}

// Creation time of the key, in round trip date format.
func (o StorageAccountKeyResponseOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountKeyResponse) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Name of the key.
func (o StorageAccountKeyResponseOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountKeyResponse) string { return v.KeyName }).(pulumi.StringOutput)
}

// Permissions for the key -- read-only or full permissions.
func (o StorageAccountKeyResponseOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountKeyResponse) string { return v.Permissions }).(pulumi.StringOutput)
}

// Base 64-encoded value of the key.
func (o StorageAccountKeyResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountKeyResponse) string { return v.Value }).(pulumi.StringOutput)
}

type StorageAccountKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (StorageAccountKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountKeyResponse)(nil)).Elem()
}

func (o StorageAccountKeyResponseArrayOutput) ToStorageAccountKeyResponseArrayOutput() StorageAccountKeyResponseArrayOutput {
	return o
}

func (o StorageAccountKeyResponseArrayOutput) ToStorageAccountKeyResponseArrayOutputWithContext(ctx context.Context) StorageAccountKeyResponseArrayOutput {
	return o
}

func (o StorageAccountKeyResponseArrayOutput) Index(i pulumi.IntInput) StorageAccountKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageAccountKeyResponse {
		return vs[0].([]StorageAccountKeyResponse)[vs[1].(int)]
	}).(StorageAccountKeyResponseOutput)
}

// The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object via a microsoft routing endpoint.
type StorageAccountMicrosoftEndpointsResponse struct {
	// Gets the blob endpoint.
	Blob string `pulumi:"blob"`
	// Gets the dfs endpoint.
	Dfs string `pulumi:"dfs"`
	// Gets the file endpoint.
	File string `pulumi:"file"`
	// Gets the queue endpoint.
	Queue string `pulumi:"queue"`
	// Gets the table endpoint.
	Table string `pulumi:"table"`
	// Gets the web endpoint.
	Web string `pulumi:"web"`
}

// The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object via a microsoft routing endpoint.
type StorageAccountMicrosoftEndpointsResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountMicrosoftEndpointsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountMicrosoftEndpointsResponse)(nil)).Elem()
}

func (o StorageAccountMicrosoftEndpointsResponseOutput) ToStorageAccountMicrosoftEndpointsResponseOutput() StorageAccountMicrosoftEndpointsResponseOutput {
	return o
}

func (o StorageAccountMicrosoftEndpointsResponseOutput) ToStorageAccountMicrosoftEndpointsResponseOutputWithContext(ctx context.Context) StorageAccountMicrosoftEndpointsResponseOutput {
	return o
}

// Gets the blob endpoint.
func (o StorageAccountMicrosoftEndpointsResponseOutput) Blob() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountMicrosoftEndpointsResponse) string { return v.Blob }).(pulumi.StringOutput)
}

// Gets the dfs endpoint.
func (o StorageAccountMicrosoftEndpointsResponseOutput) Dfs() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountMicrosoftEndpointsResponse) string { return v.Dfs }).(pulumi.StringOutput)
}

// Gets the file endpoint.
func (o StorageAccountMicrosoftEndpointsResponseOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountMicrosoftEndpointsResponse) string { return v.File }).(pulumi.StringOutput)
}

// Gets the queue endpoint.
func (o StorageAccountMicrosoftEndpointsResponseOutput) Queue() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountMicrosoftEndpointsResponse) string { return v.Queue }).(pulumi.StringOutput)
}

// Gets the table endpoint.
func (o StorageAccountMicrosoftEndpointsResponseOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountMicrosoftEndpointsResponse) string { return v.Table }).(pulumi.StringOutput)
}

// Gets the web endpoint.
func (o StorageAccountMicrosoftEndpointsResponseOutput) Web() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountMicrosoftEndpointsResponse) string { return v.Web }).(pulumi.StringOutput)
}

type StorageAccountMicrosoftEndpointsResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageAccountMicrosoftEndpointsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountMicrosoftEndpointsResponse)(nil)).Elem()
}

func (o StorageAccountMicrosoftEndpointsResponsePtrOutput) ToStorageAccountMicrosoftEndpointsResponsePtrOutput() StorageAccountMicrosoftEndpointsResponsePtrOutput {
	return o
}

func (o StorageAccountMicrosoftEndpointsResponsePtrOutput) ToStorageAccountMicrosoftEndpointsResponsePtrOutputWithContext(ctx context.Context) StorageAccountMicrosoftEndpointsResponsePtrOutput {
	return o
}

func (o StorageAccountMicrosoftEndpointsResponsePtrOutput) Elem() StorageAccountMicrosoftEndpointsResponseOutput {
	return o.ApplyT(func(v *StorageAccountMicrosoftEndpointsResponse) StorageAccountMicrosoftEndpointsResponse {
		if v != nil {
			return *v
		}
		var ret StorageAccountMicrosoftEndpointsResponse
		return ret
	}).(StorageAccountMicrosoftEndpointsResponseOutput)
}

// Gets the blob endpoint.
func (o StorageAccountMicrosoftEndpointsResponsePtrOutput) Blob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountMicrosoftEndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Blob
	}).(pulumi.StringPtrOutput)
}

// Gets the dfs endpoint.
func (o StorageAccountMicrosoftEndpointsResponsePtrOutput) Dfs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountMicrosoftEndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Dfs
	}).(pulumi.StringPtrOutput)
}

// Gets the file endpoint.
func (o StorageAccountMicrosoftEndpointsResponsePtrOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountMicrosoftEndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.File
	}).(pulumi.StringPtrOutput)
}

// Gets the queue endpoint.
func (o StorageAccountMicrosoftEndpointsResponsePtrOutput) Queue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountMicrosoftEndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Queue
	}).(pulumi.StringPtrOutput)
}

// Gets the table endpoint.
func (o StorageAccountMicrosoftEndpointsResponsePtrOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountMicrosoftEndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Table
	}).(pulumi.StringPtrOutput)
}

// Gets the web endpoint.
func (o StorageAccountMicrosoftEndpointsResponsePtrOutput) Web() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountMicrosoftEndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Web
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Blob index tag based filtering for blob objects
type TagFilter struct {
	// This is the filter tag name, it can have 1 - 128 characters
	Name string `pulumi:"name"`
	// This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported
	Op string `pulumi:"op"`
	// This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters
	Value string `pulumi:"value"`
}

// TagFilterInput is an input type that accepts TagFilterArgs and TagFilterOutput values.
// You can construct a concrete instance of `TagFilterInput` via:
//
//	TagFilterArgs{...}
type TagFilterInput interface {
	pulumi.Input

	ToTagFilterOutput() TagFilterOutput
	ToTagFilterOutputWithContext(context.Context) TagFilterOutput
}

// Blob index tag based filtering for blob objects
type TagFilterArgs struct {
	// This is the filter tag name, it can have 1 - 128 characters
	Name pulumi.StringInput `pulumi:"name"`
	// This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported
	Op pulumi.StringInput `pulumi:"op"`
	// This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters
	Value pulumi.StringInput `pulumi:"value"`
}

func (TagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagFilter)(nil)).Elem()
}

func (i TagFilterArgs) ToTagFilterOutput() TagFilterOutput {
	return i.ToTagFilterOutputWithContext(context.Background())
}

func (i TagFilterArgs) ToTagFilterOutputWithContext(ctx context.Context) TagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagFilterOutput)
}

// TagFilterArrayInput is an input type that accepts TagFilterArray and TagFilterArrayOutput values.
// You can construct a concrete instance of `TagFilterArrayInput` via:
//
//	TagFilterArray{ TagFilterArgs{...} }
type TagFilterArrayInput interface {
	pulumi.Input

	ToTagFilterArrayOutput() TagFilterArrayOutput
	ToTagFilterArrayOutputWithContext(context.Context) TagFilterArrayOutput
}

type TagFilterArray []TagFilterInput

func (TagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagFilter)(nil)).Elem()
}

func (i TagFilterArray) ToTagFilterArrayOutput() TagFilterArrayOutput {
	return i.ToTagFilterArrayOutputWithContext(context.Background())
}

func (i TagFilterArray) ToTagFilterArrayOutputWithContext(ctx context.Context) TagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagFilterArrayOutput)
}

// Blob index tag based filtering for blob objects
type TagFilterOutput struct{ *pulumi.OutputState }

func (TagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagFilter)(nil)).Elem()
}

func (o TagFilterOutput) ToTagFilterOutput() TagFilterOutput {
	return o
}

func (o TagFilterOutput) ToTagFilterOutputWithContext(ctx context.Context) TagFilterOutput {
	return o
}

// This is the filter tag name, it can have 1 - 128 characters
func (o TagFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TagFilter) string { return v.Name }).(pulumi.StringOutput)
}

// This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported
func (o TagFilterOutput) Op() pulumi.StringOutput {
	return o.ApplyT(func(v TagFilter) string { return v.Op }).(pulumi.StringOutput)
}

// This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters
func (o TagFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TagFilter) string { return v.Value }).(pulumi.StringOutput)
}

type TagFilterArrayOutput struct{ *pulumi.OutputState }

func (TagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagFilter)(nil)).Elem()
}

func (o TagFilterArrayOutput) ToTagFilterArrayOutput() TagFilterArrayOutput {
	return o
}

func (o TagFilterArrayOutput) ToTagFilterArrayOutputWithContext(ctx context.Context) TagFilterArrayOutput {
	return o
}

func (o TagFilterArrayOutput) Index(i pulumi.IntInput) TagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagFilter {
		return vs[0].([]TagFilter)[vs[1].(int)]
	}).(TagFilterOutput)
}

// Blob index tag based filtering for blob objects
type TagFilterResponse struct {
	// This is the filter tag name, it can have 1 - 128 characters
	Name string `pulumi:"name"`
	// This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported
	Op string `pulumi:"op"`
	// This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters
	Value string `pulumi:"value"`
}

// Blob index tag based filtering for blob objects
type TagFilterResponseOutput struct{ *pulumi.OutputState }

func (TagFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagFilterResponse)(nil)).Elem()
}

func (o TagFilterResponseOutput) ToTagFilterResponseOutput() TagFilterResponseOutput {
	return o
}

func (o TagFilterResponseOutput) ToTagFilterResponseOutputWithContext(ctx context.Context) TagFilterResponseOutput {
	return o
}

// This is the filter tag name, it can have 1 - 128 characters
func (o TagFilterResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TagFilterResponse) string { return v.Name }).(pulumi.StringOutput)
}

// This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported
func (o TagFilterResponseOutput) Op() pulumi.StringOutput {
	return o.ApplyT(func(v TagFilterResponse) string { return v.Op }).(pulumi.StringOutput)
}

// This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters
func (o TagFilterResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TagFilterResponse) string { return v.Value }).(pulumi.StringOutput)
}

type TagFilterResponseArrayOutput struct{ *pulumi.OutputState }

func (TagFilterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagFilterResponse)(nil)).Elem()
}

func (o TagFilterResponseArrayOutput) ToTagFilterResponseArrayOutput() TagFilterResponseArrayOutput {
	return o
}

func (o TagFilterResponseArrayOutput) ToTagFilterResponseArrayOutputWithContext(ctx context.Context) TagFilterResponseArrayOutput {
	return o
}

func (o TagFilterResponseArrayOutput) Index(i pulumi.IntInput) TagFilterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagFilterResponse {
		return vs[0].([]TagFilterResponse)[vs[1].(int)]
	}).(TagFilterResponseOutput)
}

// A tag of the LegalHold of a blob container.
type TagPropertyResponse struct {
	// Returns the Object ID of the user who added the tag.
	ObjectIdentifier string `pulumi:"objectIdentifier"`
	// The tag value.
	Tag string `pulumi:"tag"`
	// Returns the Tenant ID that issued the token for the user who added the tag.
	TenantId string `pulumi:"tenantId"`
	// Returns the date and time the tag was added.
	Timestamp string `pulumi:"timestamp"`
	// Returns the User Principal Name of the user who added the tag.
	Upn string `pulumi:"upn"`
}

// A tag of the LegalHold of a blob container.
type TagPropertyResponseOutput struct{ *pulumi.OutputState }

func (TagPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagPropertyResponse)(nil)).Elem()
}

func (o TagPropertyResponseOutput) ToTagPropertyResponseOutput() TagPropertyResponseOutput {
	return o
}

func (o TagPropertyResponseOutput) ToTagPropertyResponseOutputWithContext(ctx context.Context) TagPropertyResponseOutput {
	return o
}

// Returns the Object ID of the user who added the tag.
func (o TagPropertyResponseOutput) ObjectIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v TagPropertyResponse) string { return v.ObjectIdentifier }).(pulumi.StringOutput)
}

// The tag value.
func (o TagPropertyResponseOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v TagPropertyResponse) string { return v.Tag }).(pulumi.StringOutput)
}

// Returns the Tenant ID that issued the token for the user who added the tag.
func (o TagPropertyResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v TagPropertyResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Returns the date and time the tag was added.
func (o TagPropertyResponseOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v TagPropertyResponse) string { return v.Timestamp }).(pulumi.StringOutput)
}

// Returns the User Principal Name of the user who added the tag.
func (o TagPropertyResponseOutput) Upn() pulumi.StringOutput {
	return o.ApplyT(func(v TagPropertyResponse) string { return v.Upn }).(pulumi.StringOutput)
}

type TagPropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (TagPropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagPropertyResponse)(nil)).Elem()
}

func (o TagPropertyResponseArrayOutput) ToTagPropertyResponseArrayOutput() TagPropertyResponseArrayOutput {
	return o
}

func (o TagPropertyResponseArrayOutput) ToTagPropertyResponseArrayOutputWithContext(ctx context.Context) TagPropertyResponseArrayOutput {
	return o
}

func (o TagPropertyResponseArrayOutput) Index(i pulumi.IntInput) TagPropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagPropertyResponse {
		return vs[0].([]TagPropertyResponse)[vs[1].(int)]
	}).(TagPropertyResponseOutput)
}

// An update history of the ImmutabilityPolicy of a blob container.
type UpdateHistoryPropertyResponse struct {
	// The immutability period for the blobs in the container since the policy creation, in days.
	ImmutabilityPeriodSinceCreationInDays int `pulumi:"immutabilityPeriodSinceCreationInDays"`
	// Returns the Object ID of the user who updated the ImmutabilityPolicy.
	ObjectIdentifier string `pulumi:"objectIdentifier"`
	// Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.
	TenantId string `pulumi:"tenantId"`
	// Returns the date and time the ImmutabilityPolicy was updated.
	Timestamp string `pulumi:"timestamp"`
	// The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.
	Update string `pulumi:"update"`
	// Returns the User Principal Name of the user who updated the ImmutabilityPolicy.
	Upn string `pulumi:"upn"`
}

// An update history of the ImmutabilityPolicy of a blob container.
type UpdateHistoryPropertyResponseOutput struct{ *pulumi.OutputState }

func (UpdateHistoryPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateHistoryPropertyResponse)(nil)).Elem()
}

func (o UpdateHistoryPropertyResponseOutput) ToUpdateHistoryPropertyResponseOutput() UpdateHistoryPropertyResponseOutput {
	return o
}

func (o UpdateHistoryPropertyResponseOutput) ToUpdateHistoryPropertyResponseOutputWithContext(ctx context.Context) UpdateHistoryPropertyResponseOutput {
	return o
}

// The immutability period for the blobs in the container since the policy creation, in days.
func (o UpdateHistoryPropertyResponseOutput) ImmutabilityPeriodSinceCreationInDays() pulumi.IntOutput {
	return o.ApplyT(func(v UpdateHistoryPropertyResponse) int { return v.ImmutabilityPeriodSinceCreationInDays }).(pulumi.IntOutput)
}

// Returns the Object ID of the user who updated the ImmutabilityPolicy.
func (o UpdateHistoryPropertyResponseOutput) ObjectIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateHistoryPropertyResponse) string { return v.ObjectIdentifier }).(pulumi.StringOutput)
}

// Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.
func (o UpdateHistoryPropertyResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateHistoryPropertyResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Returns the date and time the ImmutabilityPolicy was updated.
func (o UpdateHistoryPropertyResponseOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateHistoryPropertyResponse) string { return v.Timestamp }).(pulumi.StringOutput)
}

// The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.
func (o UpdateHistoryPropertyResponseOutput) Update() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateHistoryPropertyResponse) string { return v.Update }).(pulumi.StringOutput)
}

// Returns the User Principal Name of the user who updated the ImmutabilityPolicy.
func (o UpdateHistoryPropertyResponseOutput) Upn() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateHistoryPropertyResponse) string { return v.Upn }).(pulumi.StringOutput)
}

type UpdateHistoryPropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (UpdateHistoryPropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UpdateHistoryPropertyResponse)(nil)).Elem()
}

func (o UpdateHistoryPropertyResponseArrayOutput) ToUpdateHistoryPropertyResponseArrayOutput() UpdateHistoryPropertyResponseArrayOutput {
	return o
}

func (o UpdateHistoryPropertyResponseArrayOutput) ToUpdateHistoryPropertyResponseArrayOutputWithContext(ctx context.Context) UpdateHistoryPropertyResponseArrayOutput {
	return o
}

func (o UpdateHistoryPropertyResponseArrayOutput) Index(i pulumi.IntInput) UpdateHistoryPropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UpdateHistoryPropertyResponse {
		return vs[0].([]UpdateHistoryPropertyResponse)[vs[1].(int)]
	}).(UpdateHistoryPropertyResponseOutput)
}

// UserAssignedIdentity for the resource.
type UserAssignedIdentityResponse struct {
	// The client ID of the identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the identity.
	PrincipalId string `pulumi:"principalId"`
}

// UserAssignedIdentity for the resource.
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

// Virtual Network rule.
type VirtualNetworkRule struct {
	// The action of virtual network rule.
	Action *Action `pulumi:"action"`
	// Gets the state of virtual network rule.
	State *string `pulumi:"state"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	VirtualNetworkResourceId string `pulumi:"virtualNetworkResourceId"`
}

// Defaults sets the appropriate defaults for VirtualNetworkRule
func (val *VirtualNetworkRule) Defaults() *VirtualNetworkRule {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Action) {
		action_ := Action("Allow")
		tmp.Action = &action_
	}
	return &tmp
}

// VirtualNetworkRuleInput is an input type that accepts VirtualNetworkRuleArgs and VirtualNetworkRuleOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleInput` via:
//
//	VirtualNetworkRuleArgs{...}
type VirtualNetworkRuleInput interface {
	pulumi.Input

	ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput
	ToVirtualNetworkRuleOutputWithContext(context.Context) VirtualNetworkRuleOutput
}

// Virtual Network rule.
type VirtualNetworkRuleArgs struct {
	// The action of virtual network rule.
	Action ActionPtrInput `pulumi:"action"`
	// Gets the state of virtual network rule.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	VirtualNetworkResourceId pulumi.StringInput `pulumi:"virtualNetworkResourceId"`
}

// Defaults sets the appropriate defaults for VirtualNetworkRuleArgs
func (val *VirtualNetworkRuleArgs) Defaults() *VirtualNetworkRuleArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Action) {
		tmp.Action = Action("Allow")
	}
	return &tmp
}
func (VirtualNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRule)(nil)).Elem()
}

func (i VirtualNetworkRuleArgs) ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput {
	return i.ToVirtualNetworkRuleOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleArgs) ToVirtualNetworkRuleOutputWithContext(ctx context.Context) VirtualNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleOutput)
}

// VirtualNetworkRuleArrayInput is an input type that accepts VirtualNetworkRuleArray and VirtualNetworkRuleArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleArrayInput` via:
//
//	VirtualNetworkRuleArray{ VirtualNetworkRuleArgs{...} }
type VirtualNetworkRuleArrayInput interface {
	pulumi.Input

	ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput
	ToVirtualNetworkRuleArrayOutputWithContext(context.Context) VirtualNetworkRuleArrayOutput
}

type VirtualNetworkRuleArray []VirtualNetworkRuleInput

func (VirtualNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRule)(nil)).Elem()
}

func (i VirtualNetworkRuleArray) ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput {
	return i.ToVirtualNetworkRuleArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleArray) ToVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleArrayOutput)
}

// Virtual Network rule.
type VirtualNetworkRuleOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRule)(nil)).Elem()
}

func (o VirtualNetworkRuleOutput) ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput {
	return o
}

func (o VirtualNetworkRuleOutput) ToVirtualNetworkRuleOutputWithContext(ctx context.Context) VirtualNetworkRuleOutput {
	return o
}

// The action of virtual network rule.
func (o VirtualNetworkRuleOutput) Action() ActionPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRule) *Action { return v.Action }).(ActionPtrOutput)
}

// Gets the state of virtual network rule.
func (o VirtualNetworkRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
func (o VirtualNetworkRuleOutput) VirtualNetworkResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkRule) string { return v.VirtualNetworkResourceId }).(pulumi.StringOutput)
}

type VirtualNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRule)(nil)).Elem()
}

func (o VirtualNetworkRuleArrayOutput) ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput {
	return o
}

func (o VirtualNetworkRuleArrayOutput) ToVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleArrayOutput {
	return o
}

func (o VirtualNetworkRuleArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRule {
		return vs[0].([]VirtualNetworkRule)[vs[1].(int)]
	}).(VirtualNetworkRuleOutput)
}

// Virtual Network rule.
type VirtualNetworkRuleResponse struct {
	// The action of virtual network rule.
	Action *string `pulumi:"action"`
	// Gets the state of virtual network rule.
	State *string `pulumi:"state"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	VirtualNetworkResourceId string `pulumi:"virtualNetworkResourceId"`
}

// Defaults sets the appropriate defaults for VirtualNetworkRuleResponse
func (val *VirtualNetworkRuleResponse) Defaults() *VirtualNetworkRuleResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Action) {
		action_ := "Allow"
		tmp.Action = &action_
	}
	return &tmp
}

// Virtual Network rule.
type VirtualNetworkRuleResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleResponseOutput) ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput {
	return o
}

func (o VirtualNetworkRuleResponseOutput) ToVirtualNetworkRuleResponseOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseOutput {
	return o
}

// The action of virtual network rule.
func (o VirtualNetworkRuleResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Gets the state of virtual network rule.
func (o VirtualNetworkRuleResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
func (o VirtualNetworkRuleResponseOutput) VirtualNetworkResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) string { return v.VirtualNetworkResourceId }).(pulumi.StringOutput)
}

type VirtualNetworkRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleResponseArrayOutput) ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleResponseArrayOutput) ToVirtualNetworkRuleResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRuleResponse {
		return vs[0].([]VirtualNetworkRuleResponse)[vs[1].(int)]
	}).(VirtualNetworkRuleResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ActiveDirectoryPropertiesOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ActiveDirectoryPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFilesIdentityBasedAuthenticationOutput{})
	pulumi.RegisterOutputType(AzureFilesIdentityBasedAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(AzureFilesIdentityBasedAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(AzureFilesIdentityBasedAuthenticationResponsePtrOutput{})
	pulumi.RegisterOutputType(BlobInventoryPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(BlobInventoryPolicyDefinitionResponseOutput{})
	pulumi.RegisterOutputType(BlobInventoryPolicyFilterOutput{})
	pulumi.RegisterOutputType(BlobInventoryPolicyFilterResponseOutput{})
	pulumi.RegisterOutputType(BlobInventoryPolicyRuleOutput{})
	pulumi.RegisterOutputType(BlobInventoryPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(BlobInventoryPolicyRuleResponseOutput{})
	pulumi.RegisterOutputType(BlobInventoryPolicyRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(BlobInventoryPolicySchemaOutput{})
	pulumi.RegisterOutputType(BlobInventoryPolicySchemaResponseOutput{})
	pulumi.RegisterOutputType(BlobRestoreParametersResponseOutput{})
	pulumi.RegisterOutputType(BlobRestoreRangeResponseOutput{})
	pulumi.RegisterOutputType(BlobRestoreRangeResponseArrayOutput{})
	pulumi.RegisterOutputType(BlobRestoreStatusResponseOutput{})
	pulumi.RegisterOutputType(ChangeFeedOutput{})
	pulumi.RegisterOutputType(ChangeFeedPtrOutput{})
	pulumi.RegisterOutputType(ChangeFeedResponseOutput{})
	pulumi.RegisterOutputType(ChangeFeedResponsePtrOutput{})
	pulumi.RegisterOutputType(CorsRuleOutput{})
	pulumi.RegisterOutputType(CorsRuleArrayOutput{})
	pulumi.RegisterOutputType(CorsRuleResponseOutput{})
	pulumi.RegisterOutputType(CorsRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(CorsRulesOutput{})
	pulumi.RegisterOutputType(CorsRulesPtrOutput{})
	pulumi.RegisterOutputType(CorsRulesResponseOutput{})
	pulumi.RegisterOutputType(CorsRulesResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomDomainOutput{})
	pulumi.RegisterOutputType(CustomDomainPtrOutput{})
	pulumi.RegisterOutputType(CustomDomainResponseOutput{})
	pulumi.RegisterOutputType(DateAfterCreationOutput{})
	pulumi.RegisterOutputType(DateAfterCreationPtrOutput{})
	pulumi.RegisterOutputType(DateAfterCreationResponseOutput{})
	pulumi.RegisterOutputType(DateAfterCreationResponsePtrOutput{})
	pulumi.RegisterOutputType(DateAfterModificationOutput{})
	pulumi.RegisterOutputType(DateAfterModificationPtrOutput{})
	pulumi.RegisterOutputType(DateAfterModificationResponseOutput{})
	pulumi.RegisterOutputType(DateAfterModificationResponsePtrOutput{})
	pulumi.RegisterOutputType(DeleteRetentionPolicyOutput{})
	pulumi.RegisterOutputType(DeleteRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(DeleteRetentionPolicyResponseOutput{})
	pulumi.RegisterOutputType(DeleteRetentionPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionOutput{})
	pulumi.RegisterOutputType(EncryptionPtrOutput{})
	pulumi.RegisterOutputType(EncryptionIdentityOutput{})
	pulumi.RegisterOutputType(EncryptionIdentityPtrOutput{})
	pulumi.RegisterOutputType(EncryptionIdentityResponseOutput{})
	pulumi.RegisterOutputType(EncryptionIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionResponseOutput{})
	pulumi.RegisterOutputType(EncryptionScopeKeyVaultPropertiesOutput{})
	pulumi.RegisterOutputType(EncryptionScopeKeyVaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionScopeKeyVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EncryptionScopeKeyVaultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionServiceOutput{})
	pulumi.RegisterOutputType(EncryptionServicePtrOutput{})
	pulumi.RegisterOutputType(EncryptionServiceResponseOutput{})
	pulumi.RegisterOutputType(EncryptionServiceResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionServicesOutput{})
	pulumi.RegisterOutputType(EncryptionServicesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionServicesResponseOutput{})
	pulumi.RegisterOutputType(EncryptionServicesResponsePtrOutput{})
	pulumi.RegisterOutputType(EndpointsResponseOutput{})
	pulumi.RegisterOutputType(ExtendedLocationOutput{})
	pulumi.RegisterOutputType(ExtendedLocationPtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponseOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponsePtrOutput{})
	pulumi.RegisterOutputType(GeoReplicationStatsResponseOutput{})
	pulumi.RegisterOutputType(IPRuleOutput{})
	pulumi.RegisterOutputType(IPRuleArrayOutput{})
	pulumi.RegisterOutputType(IPRuleResponseOutput{})
	pulumi.RegisterOutputType(IPRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ImmutabilityPolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(KeyCreationTimeResponseOutput{})
	pulumi.RegisterOutputType(KeyPolicyOutput{})
	pulumi.RegisterOutputType(KeyPolicyPtrOutput{})
	pulumi.RegisterOutputType(KeyPolicyResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LastAccessTimeTrackingPolicyOutput{})
	pulumi.RegisterOutputType(LastAccessTimeTrackingPolicyPtrOutput{})
	pulumi.RegisterOutputType(LastAccessTimeTrackingPolicyResponseOutput{})
	pulumi.RegisterOutputType(LastAccessTimeTrackingPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(LegalHoldPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManagementPolicyActionOutput{})
	pulumi.RegisterOutputType(ManagementPolicyActionResponseOutput{})
	pulumi.RegisterOutputType(ManagementPolicyBaseBlobOutput{})
	pulumi.RegisterOutputType(ManagementPolicyBaseBlobPtrOutput{})
	pulumi.RegisterOutputType(ManagementPolicyBaseBlobResponseOutput{})
	pulumi.RegisterOutputType(ManagementPolicyBaseBlobResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagementPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(ManagementPolicyDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ManagementPolicyFilterOutput{})
	pulumi.RegisterOutputType(ManagementPolicyFilterPtrOutput{})
	pulumi.RegisterOutputType(ManagementPolicyFilterResponseOutput{})
	pulumi.RegisterOutputType(ManagementPolicyFilterResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagementPolicyRuleOutput{})
	pulumi.RegisterOutputType(ManagementPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(ManagementPolicyRuleResponseOutput{})
	pulumi.RegisterOutputType(ManagementPolicyRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagementPolicySchemaOutput{})
	pulumi.RegisterOutputType(ManagementPolicySchemaResponseOutput{})
	pulumi.RegisterOutputType(ManagementPolicySnapShotOutput{})
	pulumi.RegisterOutputType(ManagementPolicySnapShotPtrOutput{})
	pulumi.RegisterOutputType(ManagementPolicySnapShotResponseOutput{})
	pulumi.RegisterOutputType(ManagementPolicySnapShotResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagementPolicyVersionOutput{})
	pulumi.RegisterOutputType(ManagementPolicyVersionPtrOutput{})
	pulumi.RegisterOutputType(ManagementPolicyVersionResponseOutput{})
	pulumi.RegisterOutputType(ManagementPolicyVersionResponsePtrOutput{})
	pulumi.RegisterOutputType(MultichannelOutput{})
	pulumi.RegisterOutputType(MultichannelPtrOutput{})
	pulumi.RegisterOutputType(MultichannelResponseOutput{})
	pulumi.RegisterOutputType(MultichannelResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetPtrOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetResponseOutput{})
	pulumi.RegisterOutputType(ObjectReplicationPolicyFilterOutput{})
	pulumi.RegisterOutputType(ObjectReplicationPolicyFilterPtrOutput{})
	pulumi.RegisterOutputType(ObjectReplicationPolicyFilterResponseOutput{})
	pulumi.RegisterOutputType(ObjectReplicationPolicyFilterResponsePtrOutput{})
	pulumi.RegisterOutputType(ObjectReplicationPolicyRuleOutput{})
	pulumi.RegisterOutputType(ObjectReplicationPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(ObjectReplicationPolicyRuleResponseOutput{})
	pulumi.RegisterOutputType(ObjectReplicationPolicyRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(PermissionScopeOutput{})
	pulumi.RegisterOutputType(PermissionScopeArrayOutput{})
	pulumi.RegisterOutputType(PermissionScopeResponseOutput{})
	pulumi.RegisterOutputType(PermissionScopeResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(ProtocolSettingsOutput{})
	pulumi.RegisterOutputType(ProtocolSettingsPtrOutput{})
	pulumi.RegisterOutputType(ProtocolSettingsResponseOutput{})
	pulumi.RegisterOutputType(ProtocolSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceAccessRuleOutput{})
	pulumi.RegisterOutputType(ResourceAccessRuleArrayOutput{})
	pulumi.RegisterOutputType(ResourceAccessRuleResponseOutput{})
	pulumi.RegisterOutputType(ResourceAccessRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RestorePolicyPropertiesOutput{})
	pulumi.RegisterOutputType(RestorePolicyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RestorePolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RestorePolicyPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(RoutingPreferenceOutput{})
	pulumi.RegisterOutputType(RoutingPreferencePtrOutput{})
	pulumi.RegisterOutputType(RoutingPreferenceResponseOutput{})
	pulumi.RegisterOutputType(RoutingPreferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(SasPolicyOutput{})
	pulumi.RegisterOutputType(SasPolicyPtrOutput{})
	pulumi.RegisterOutputType(SasPolicyResponseOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SmbSettingOutput{})
	pulumi.RegisterOutputType(SmbSettingPtrOutput{})
	pulumi.RegisterOutputType(SmbSettingResponseOutput{})
	pulumi.RegisterOutputType(SmbSettingResponsePtrOutput{})
	pulumi.RegisterOutputType(SshPublicKeyOutput{})
	pulumi.RegisterOutputType(SshPublicKeyArrayOutput{})
	pulumi.RegisterOutputType(SshPublicKeyResponseOutput{})
	pulumi.RegisterOutputType(SshPublicKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(StorageAccountInternetEndpointsResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountInternetEndpointsResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountKeyResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(StorageAccountMicrosoftEndpointsResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountMicrosoftEndpointsResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TagFilterOutput{})
	pulumi.RegisterOutputType(TagFilterArrayOutput{})
	pulumi.RegisterOutputType(TagFilterResponseOutput{})
	pulumi.RegisterOutputType(TagFilterResponseArrayOutput{})
	pulumi.RegisterOutputType(TagPropertyResponseOutput{})
	pulumi.RegisterOutputType(TagPropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(UpdateHistoryPropertyResponseOutput{})
	pulumi.RegisterOutputType(UpdateHistoryPropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleResponseArrayOutput{})
}
