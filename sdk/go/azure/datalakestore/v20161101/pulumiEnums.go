// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20161101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The type of encryption configuration being used. Currently the only supported types are 'UserManaged' and 'ServiceManaged'.
type EncryptionConfigType string

const (
	EncryptionConfigTypeUserManaged    = EncryptionConfigType("UserManaged")
	EncryptionConfigTypeServiceManaged = EncryptionConfigType("ServiceManaged")
)

func (EncryptionConfigType) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionConfigType)(nil)).Elem()
}

func (e EncryptionConfigType) ToEncryptionConfigTypeOutput() EncryptionConfigTypeOutput {
	return pulumi.ToOutput(e).(EncryptionConfigTypeOutput)
}

func (e EncryptionConfigType) ToEncryptionConfigTypeOutputWithContext(ctx context.Context) EncryptionConfigTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionConfigTypeOutput)
}

func (e EncryptionConfigType) ToEncryptionConfigTypePtrOutput() EncryptionConfigTypePtrOutput {
	return e.ToEncryptionConfigTypePtrOutputWithContext(context.Background())
}

func (e EncryptionConfigType) ToEncryptionConfigTypePtrOutputWithContext(ctx context.Context) EncryptionConfigTypePtrOutput {
	return EncryptionConfigType(e).ToEncryptionConfigTypeOutputWithContext(ctx).ToEncryptionConfigTypePtrOutputWithContext(ctx)
}

func (e EncryptionConfigType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionConfigType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionConfigType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionConfigType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionConfigTypeOutput struct{ *pulumi.OutputState }

func (EncryptionConfigTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionConfigType)(nil)).Elem()
}

func (o EncryptionConfigTypeOutput) ToEncryptionConfigTypeOutput() EncryptionConfigTypeOutput {
	return o
}

func (o EncryptionConfigTypeOutput) ToEncryptionConfigTypeOutputWithContext(ctx context.Context) EncryptionConfigTypeOutput {
	return o
}

func (o EncryptionConfigTypeOutput) ToEncryptionConfigTypePtrOutput() EncryptionConfigTypePtrOutput {
	return o.ToEncryptionConfigTypePtrOutputWithContext(context.Background())
}

func (o EncryptionConfigTypeOutput) ToEncryptionConfigTypePtrOutputWithContext(ctx context.Context) EncryptionConfigTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionConfigType) *EncryptionConfigType {
		return &v
	}).(EncryptionConfigTypePtrOutput)
}

func (o EncryptionConfigTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionConfigTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionConfigType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionConfigTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionConfigTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionConfigType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionConfigTypePtrOutput struct{ *pulumi.OutputState }

func (EncryptionConfigTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionConfigType)(nil)).Elem()
}

func (o EncryptionConfigTypePtrOutput) ToEncryptionConfigTypePtrOutput() EncryptionConfigTypePtrOutput {
	return o
}

func (o EncryptionConfigTypePtrOutput) ToEncryptionConfigTypePtrOutputWithContext(ctx context.Context) EncryptionConfigTypePtrOutput {
	return o
}

func (o EncryptionConfigTypePtrOutput) Elem() EncryptionConfigTypeOutput {
	return o.ApplyT(func(v *EncryptionConfigType) EncryptionConfigType {
		if v != nil {
			return *v
		}
		var ret EncryptionConfigType
		return ret
	}).(EncryptionConfigTypeOutput)
}

func (o EncryptionConfigTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionConfigTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionConfigType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionConfigTypeInput is an input type that accepts EncryptionConfigTypeArgs and EncryptionConfigTypeOutput values.
// You can construct a concrete instance of `EncryptionConfigTypeInput` via:
//
//	EncryptionConfigTypeArgs{...}
type EncryptionConfigTypeInput interface {
	pulumi.Input

	ToEncryptionConfigTypeOutput() EncryptionConfigTypeOutput
	ToEncryptionConfigTypeOutputWithContext(context.Context) EncryptionConfigTypeOutput
}

var encryptionConfigTypePtrType = reflect.TypeOf((**EncryptionConfigType)(nil)).Elem()

type EncryptionConfigTypePtrInput interface {
	pulumi.Input

	ToEncryptionConfigTypePtrOutput() EncryptionConfigTypePtrOutput
	ToEncryptionConfigTypePtrOutputWithContext(context.Context) EncryptionConfigTypePtrOutput
}

type encryptionConfigTypePtr string

func EncryptionConfigTypePtr(v string) EncryptionConfigTypePtrInput {
	return (*encryptionConfigTypePtr)(&v)
}

func (*encryptionConfigTypePtr) ElementType() reflect.Type {
	return encryptionConfigTypePtrType
}

func (in *encryptionConfigTypePtr) ToEncryptionConfigTypePtrOutput() EncryptionConfigTypePtrOutput {
	return pulumi.ToOutput(in).(EncryptionConfigTypePtrOutput)
}

func (in *encryptionConfigTypePtr) ToEncryptionConfigTypePtrOutputWithContext(ctx context.Context) EncryptionConfigTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionConfigTypePtrOutput)
}

// The type of encryption being used. Currently the only supported type is 'SystemAssigned'.
type EncryptionIdentityType string

const (
	EncryptionIdentityTypeSystemAssigned = EncryptionIdentityType("SystemAssigned")
)

func (EncryptionIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionIdentityType)(nil)).Elem()
}

func (e EncryptionIdentityType) ToEncryptionIdentityTypeOutput() EncryptionIdentityTypeOutput {
	return pulumi.ToOutput(e).(EncryptionIdentityTypeOutput)
}

func (e EncryptionIdentityType) ToEncryptionIdentityTypeOutputWithContext(ctx context.Context) EncryptionIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionIdentityTypeOutput)
}

func (e EncryptionIdentityType) ToEncryptionIdentityTypePtrOutput() EncryptionIdentityTypePtrOutput {
	return e.ToEncryptionIdentityTypePtrOutputWithContext(context.Background())
}

func (e EncryptionIdentityType) ToEncryptionIdentityTypePtrOutputWithContext(ctx context.Context) EncryptionIdentityTypePtrOutput {
	return EncryptionIdentityType(e).ToEncryptionIdentityTypeOutputWithContext(ctx).ToEncryptionIdentityTypePtrOutputWithContext(ctx)
}

func (e EncryptionIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionIdentityTypeOutput struct{ *pulumi.OutputState }

func (EncryptionIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionIdentityType)(nil)).Elem()
}

func (o EncryptionIdentityTypeOutput) ToEncryptionIdentityTypeOutput() EncryptionIdentityTypeOutput {
	return o
}

func (o EncryptionIdentityTypeOutput) ToEncryptionIdentityTypeOutputWithContext(ctx context.Context) EncryptionIdentityTypeOutput {
	return o
}

func (o EncryptionIdentityTypeOutput) ToEncryptionIdentityTypePtrOutput() EncryptionIdentityTypePtrOutput {
	return o.ToEncryptionIdentityTypePtrOutputWithContext(context.Background())
}

func (o EncryptionIdentityTypeOutput) ToEncryptionIdentityTypePtrOutputWithContext(ctx context.Context) EncryptionIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionIdentityType) *EncryptionIdentityType {
		return &v
	}).(EncryptionIdentityTypePtrOutput)
}

func (o EncryptionIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (EncryptionIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionIdentityType)(nil)).Elem()
}

func (o EncryptionIdentityTypePtrOutput) ToEncryptionIdentityTypePtrOutput() EncryptionIdentityTypePtrOutput {
	return o
}

func (o EncryptionIdentityTypePtrOutput) ToEncryptionIdentityTypePtrOutputWithContext(ctx context.Context) EncryptionIdentityTypePtrOutput {
	return o
}

func (o EncryptionIdentityTypePtrOutput) Elem() EncryptionIdentityTypeOutput {
	return o.ApplyT(func(v *EncryptionIdentityType) EncryptionIdentityType {
		if v != nil {
			return *v
		}
		var ret EncryptionIdentityType
		return ret
	}).(EncryptionIdentityTypeOutput)
}

func (o EncryptionIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionIdentityTypeInput is an input type that accepts EncryptionIdentityTypeArgs and EncryptionIdentityTypeOutput values.
// You can construct a concrete instance of `EncryptionIdentityTypeInput` via:
//
//	EncryptionIdentityTypeArgs{...}
type EncryptionIdentityTypeInput interface {
	pulumi.Input

	ToEncryptionIdentityTypeOutput() EncryptionIdentityTypeOutput
	ToEncryptionIdentityTypeOutputWithContext(context.Context) EncryptionIdentityTypeOutput
}

var encryptionIdentityTypePtrType = reflect.TypeOf((**EncryptionIdentityType)(nil)).Elem()

type EncryptionIdentityTypePtrInput interface {
	pulumi.Input

	ToEncryptionIdentityTypePtrOutput() EncryptionIdentityTypePtrOutput
	ToEncryptionIdentityTypePtrOutputWithContext(context.Context) EncryptionIdentityTypePtrOutput
}

type encryptionIdentityTypePtr string

func EncryptionIdentityTypePtr(v string) EncryptionIdentityTypePtrInput {
	return (*encryptionIdentityTypePtr)(&v)
}

func (*encryptionIdentityTypePtr) ElementType() reflect.Type {
	return encryptionIdentityTypePtrType
}

func (in *encryptionIdentityTypePtr) ToEncryptionIdentityTypePtrOutput() EncryptionIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(EncryptionIdentityTypePtrOutput)
}

func (in *encryptionIdentityTypePtr) ToEncryptionIdentityTypePtrOutputWithContext(ctx context.Context) EncryptionIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionIdentityTypePtrOutput)
}

// The current state of encryption for this Data Lake Store account.
type EncryptionState string

const (
	EncryptionStateEnabled  = EncryptionState("Enabled")
	EncryptionStateDisabled = EncryptionState("Disabled")
)

func (EncryptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionState)(nil)).Elem()
}

func (e EncryptionState) ToEncryptionStateOutput() EncryptionStateOutput {
	return pulumi.ToOutput(e).(EncryptionStateOutput)
}

func (e EncryptionState) ToEncryptionStateOutputWithContext(ctx context.Context) EncryptionStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionStateOutput)
}

func (e EncryptionState) ToEncryptionStatePtrOutput() EncryptionStatePtrOutput {
	return e.ToEncryptionStatePtrOutputWithContext(context.Background())
}

func (e EncryptionState) ToEncryptionStatePtrOutputWithContext(ctx context.Context) EncryptionStatePtrOutput {
	return EncryptionState(e).ToEncryptionStateOutputWithContext(ctx).ToEncryptionStatePtrOutputWithContext(ctx)
}

func (e EncryptionState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionStateOutput struct{ *pulumi.OutputState }

func (EncryptionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionState)(nil)).Elem()
}

func (o EncryptionStateOutput) ToEncryptionStateOutput() EncryptionStateOutput {
	return o
}

func (o EncryptionStateOutput) ToEncryptionStateOutputWithContext(ctx context.Context) EncryptionStateOutput {
	return o
}

func (o EncryptionStateOutput) ToEncryptionStatePtrOutput() EncryptionStatePtrOutput {
	return o.ToEncryptionStatePtrOutputWithContext(context.Background())
}

func (o EncryptionStateOutput) ToEncryptionStatePtrOutputWithContext(ctx context.Context) EncryptionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionState) *EncryptionState {
		return &v
	}).(EncryptionStatePtrOutput)
}

func (o EncryptionStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionStatePtrOutput struct{ *pulumi.OutputState }

func (EncryptionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionState)(nil)).Elem()
}

func (o EncryptionStatePtrOutput) ToEncryptionStatePtrOutput() EncryptionStatePtrOutput {
	return o
}

func (o EncryptionStatePtrOutput) ToEncryptionStatePtrOutputWithContext(ctx context.Context) EncryptionStatePtrOutput {
	return o
}

func (o EncryptionStatePtrOutput) Elem() EncryptionStateOutput {
	return o.ApplyT(func(v *EncryptionState) EncryptionState {
		if v != nil {
			return *v
		}
		var ret EncryptionState
		return ret
	}).(EncryptionStateOutput)
}

func (o EncryptionStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionStateInput is an input type that accepts EncryptionStateArgs and EncryptionStateOutput values.
// You can construct a concrete instance of `EncryptionStateInput` via:
//
//	EncryptionStateArgs{...}
type EncryptionStateInput interface {
	pulumi.Input

	ToEncryptionStateOutput() EncryptionStateOutput
	ToEncryptionStateOutputWithContext(context.Context) EncryptionStateOutput
}

var encryptionStatePtrType = reflect.TypeOf((**EncryptionState)(nil)).Elem()

type EncryptionStatePtrInput interface {
	pulumi.Input

	ToEncryptionStatePtrOutput() EncryptionStatePtrOutput
	ToEncryptionStatePtrOutputWithContext(context.Context) EncryptionStatePtrOutput
}

type encryptionStatePtr string

func EncryptionStatePtr(v string) EncryptionStatePtrInput {
	return (*encryptionStatePtr)(&v)
}

func (*encryptionStatePtr) ElementType() reflect.Type {
	return encryptionStatePtrType
}

func (in *encryptionStatePtr) ToEncryptionStatePtrOutput() EncryptionStatePtrOutput {
	return pulumi.ToOutput(in).(EncryptionStatePtrOutput)
}

func (in *encryptionStatePtr) ToEncryptionStatePtrOutputWithContext(ctx context.Context) EncryptionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionStatePtrOutput)
}

// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
type FirewallAllowAzureIpsState string

const (
	FirewallAllowAzureIpsStateEnabled  = FirewallAllowAzureIpsState("Enabled")
	FirewallAllowAzureIpsStateDisabled = FirewallAllowAzureIpsState("Disabled")
)

func (FirewallAllowAzureIpsState) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAllowAzureIpsState)(nil)).Elem()
}

func (e FirewallAllowAzureIpsState) ToFirewallAllowAzureIpsStateOutput() FirewallAllowAzureIpsStateOutput {
	return pulumi.ToOutput(e).(FirewallAllowAzureIpsStateOutput)
}

func (e FirewallAllowAzureIpsState) ToFirewallAllowAzureIpsStateOutputWithContext(ctx context.Context) FirewallAllowAzureIpsStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FirewallAllowAzureIpsStateOutput)
}

func (e FirewallAllowAzureIpsState) ToFirewallAllowAzureIpsStatePtrOutput() FirewallAllowAzureIpsStatePtrOutput {
	return e.ToFirewallAllowAzureIpsStatePtrOutputWithContext(context.Background())
}

func (e FirewallAllowAzureIpsState) ToFirewallAllowAzureIpsStatePtrOutputWithContext(ctx context.Context) FirewallAllowAzureIpsStatePtrOutput {
	return FirewallAllowAzureIpsState(e).ToFirewallAllowAzureIpsStateOutputWithContext(ctx).ToFirewallAllowAzureIpsStatePtrOutputWithContext(ctx)
}

func (e FirewallAllowAzureIpsState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallAllowAzureIpsState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallAllowAzureIpsState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FirewallAllowAzureIpsState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FirewallAllowAzureIpsStateOutput struct{ *pulumi.OutputState }

func (FirewallAllowAzureIpsStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallAllowAzureIpsState)(nil)).Elem()
}

func (o FirewallAllowAzureIpsStateOutput) ToFirewallAllowAzureIpsStateOutput() FirewallAllowAzureIpsStateOutput {
	return o
}

func (o FirewallAllowAzureIpsStateOutput) ToFirewallAllowAzureIpsStateOutputWithContext(ctx context.Context) FirewallAllowAzureIpsStateOutput {
	return o
}

func (o FirewallAllowAzureIpsStateOutput) ToFirewallAllowAzureIpsStatePtrOutput() FirewallAllowAzureIpsStatePtrOutput {
	return o.ToFirewallAllowAzureIpsStatePtrOutputWithContext(context.Background())
}

func (o FirewallAllowAzureIpsStateOutput) ToFirewallAllowAzureIpsStatePtrOutputWithContext(ctx context.Context) FirewallAllowAzureIpsStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallAllowAzureIpsState) *FirewallAllowAzureIpsState {
		return &v
	}).(FirewallAllowAzureIpsStatePtrOutput)
}

func (o FirewallAllowAzureIpsStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallAllowAzureIpsStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallAllowAzureIpsState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallAllowAzureIpsStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallAllowAzureIpsStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallAllowAzureIpsState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallAllowAzureIpsStatePtrOutput struct{ *pulumi.OutputState }

func (FirewallAllowAzureIpsStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallAllowAzureIpsState)(nil)).Elem()
}

func (o FirewallAllowAzureIpsStatePtrOutput) ToFirewallAllowAzureIpsStatePtrOutput() FirewallAllowAzureIpsStatePtrOutput {
	return o
}

func (o FirewallAllowAzureIpsStatePtrOutput) ToFirewallAllowAzureIpsStatePtrOutputWithContext(ctx context.Context) FirewallAllowAzureIpsStatePtrOutput {
	return o
}

func (o FirewallAllowAzureIpsStatePtrOutput) Elem() FirewallAllowAzureIpsStateOutput {
	return o.ApplyT(func(v *FirewallAllowAzureIpsState) FirewallAllowAzureIpsState {
		if v != nil {
			return *v
		}
		var ret FirewallAllowAzureIpsState
		return ret
	}).(FirewallAllowAzureIpsStateOutput)
}

func (o FirewallAllowAzureIpsStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallAllowAzureIpsStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallAllowAzureIpsState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FirewallAllowAzureIpsStateInput is an input type that accepts FirewallAllowAzureIpsStateArgs and FirewallAllowAzureIpsStateOutput values.
// You can construct a concrete instance of `FirewallAllowAzureIpsStateInput` via:
//
//	FirewallAllowAzureIpsStateArgs{...}
type FirewallAllowAzureIpsStateInput interface {
	pulumi.Input

	ToFirewallAllowAzureIpsStateOutput() FirewallAllowAzureIpsStateOutput
	ToFirewallAllowAzureIpsStateOutputWithContext(context.Context) FirewallAllowAzureIpsStateOutput
}

var firewallAllowAzureIpsStatePtrType = reflect.TypeOf((**FirewallAllowAzureIpsState)(nil)).Elem()

type FirewallAllowAzureIpsStatePtrInput interface {
	pulumi.Input

	ToFirewallAllowAzureIpsStatePtrOutput() FirewallAllowAzureIpsStatePtrOutput
	ToFirewallAllowAzureIpsStatePtrOutputWithContext(context.Context) FirewallAllowAzureIpsStatePtrOutput
}

type firewallAllowAzureIpsStatePtr string

func FirewallAllowAzureIpsStatePtr(v string) FirewallAllowAzureIpsStatePtrInput {
	return (*firewallAllowAzureIpsStatePtr)(&v)
}

func (*firewallAllowAzureIpsStatePtr) ElementType() reflect.Type {
	return firewallAllowAzureIpsStatePtrType
}

func (in *firewallAllowAzureIpsStatePtr) ToFirewallAllowAzureIpsStatePtrOutput() FirewallAllowAzureIpsStatePtrOutput {
	return pulumi.ToOutput(in).(FirewallAllowAzureIpsStatePtrOutput)
}

func (in *firewallAllowAzureIpsStatePtr) ToFirewallAllowAzureIpsStatePtrOutputWithContext(ctx context.Context) FirewallAllowAzureIpsStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FirewallAllowAzureIpsStatePtrOutput)
}

// The current state of the IP address firewall for this Data Lake Store account.
type FirewallState string

const (
	FirewallStateEnabled  = FirewallState("Enabled")
	FirewallStateDisabled = FirewallState("Disabled")
)

func (FirewallState) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallState)(nil)).Elem()
}

func (e FirewallState) ToFirewallStateOutput() FirewallStateOutput {
	return pulumi.ToOutput(e).(FirewallStateOutput)
}

func (e FirewallState) ToFirewallStateOutputWithContext(ctx context.Context) FirewallStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FirewallStateOutput)
}

func (e FirewallState) ToFirewallStatePtrOutput() FirewallStatePtrOutput {
	return e.ToFirewallStatePtrOutputWithContext(context.Background())
}

func (e FirewallState) ToFirewallStatePtrOutputWithContext(ctx context.Context) FirewallStatePtrOutput {
	return FirewallState(e).ToFirewallStateOutputWithContext(ctx).ToFirewallStatePtrOutputWithContext(ctx)
}

func (e FirewallState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FirewallState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FirewallStateOutput struct{ *pulumi.OutputState }

func (FirewallStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallState)(nil)).Elem()
}

func (o FirewallStateOutput) ToFirewallStateOutput() FirewallStateOutput {
	return o
}

func (o FirewallStateOutput) ToFirewallStateOutputWithContext(ctx context.Context) FirewallStateOutput {
	return o
}

func (o FirewallStateOutput) ToFirewallStatePtrOutput() FirewallStatePtrOutput {
	return o.ToFirewallStatePtrOutputWithContext(context.Background())
}

func (o FirewallStateOutput) ToFirewallStatePtrOutputWithContext(ctx context.Context) FirewallStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallState) *FirewallState {
		return &v
	}).(FirewallStatePtrOutput)
}

func (o FirewallStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallStatePtrOutput struct{ *pulumi.OutputState }

func (FirewallStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallState)(nil)).Elem()
}

func (o FirewallStatePtrOutput) ToFirewallStatePtrOutput() FirewallStatePtrOutput {
	return o
}

func (o FirewallStatePtrOutput) ToFirewallStatePtrOutputWithContext(ctx context.Context) FirewallStatePtrOutput {
	return o
}

func (o FirewallStatePtrOutput) Elem() FirewallStateOutput {
	return o.ApplyT(func(v *FirewallState) FirewallState {
		if v != nil {
			return *v
		}
		var ret FirewallState
		return ret
	}).(FirewallStateOutput)
}

func (o FirewallStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FirewallStateInput is an input type that accepts FirewallStateArgs and FirewallStateOutput values.
// You can construct a concrete instance of `FirewallStateInput` via:
//
//	FirewallStateArgs{...}
type FirewallStateInput interface {
	pulumi.Input

	ToFirewallStateOutput() FirewallStateOutput
	ToFirewallStateOutputWithContext(context.Context) FirewallStateOutput
}

var firewallStatePtrType = reflect.TypeOf((**FirewallState)(nil)).Elem()

type FirewallStatePtrInput interface {
	pulumi.Input

	ToFirewallStatePtrOutput() FirewallStatePtrOutput
	ToFirewallStatePtrOutputWithContext(context.Context) FirewallStatePtrOutput
}

type firewallStatePtr string

func FirewallStatePtr(v string) FirewallStatePtrInput {
	return (*firewallStatePtr)(&v)
}

func (*firewallStatePtr) ElementType() reflect.Type {
	return firewallStatePtrType
}

func (in *firewallStatePtr) ToFirewallStatePtrOutput() FirewallStatePtrOutput {
	return pulumi.ToOutput(in).(FirewallStatePtrOutput)
}

func (in *firewallStatePtr) ToFirewallStatePtrOutputWithContext(ctx context.Context) FirewallStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FirewallStatePtrOutput)
}

// The commitment tier to use for next month.
type TierType string

const (
	TierTypeConsumption       = TierType("Consumption")
	TierType_Commitment_1TB   = TierType("Commitment_1TB")
	TierType_Commitment_10TB  = TierType("Commitment_10TB")
	TierType_Commitment_100TB = TierType("Commitment_100TB")
	TierType_Commitment_500TB = TierType("Commitment_500TB")
	TierType_Commitment_1PB   = TierType("Commitment_1PB")
	TierType_Commitment_5PB   = TierType("Commitment_5PB")
)

func (TierType) ElementType() reflect.Type {
	return reflect.TypeOf((*TierType)(nil)).Elem()
}

func (e TierType) ToTierTypeOutput() TierTypeOutput {
	return pulumi.ToOutput(e).(TierTypeOutput)
}

func (e TierType) ToTierTypeOutputWithContext(ctx context.Context) TierTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TierTypeOutput)
}

func (e TierType) ToTierTypePtrOutput() TierTypePtrOutput {
	return e.ToTierTypePtrOutputWithContext(context.Background())
}

func (e TierType) ToTierTypePtrOutputWithContext(ctx context.Context) TierTypePtrOutput {
	return TierType(e).ToTierTypeOutputWithContext(ctx).ToTierTypePtrOutputWithContext(ctx)
}

func (e TierType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TierType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TierType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TierType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TierTypeOutput struct{ *pulumi.OutputState }

func (TierTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TierType)(nil)).Elem()
}

func (o TierTypeOutput) ToTierTypeOutput() TierTypeOutput {
	return o
}

func (o TierTypeOutput) ToTierTypeOutputWithContext(ctx context.Context) TierTypeOutput {
	return o
}

func (o TierTypeOutput) ToTierTypePtrOutput() TierTypePtrOutput {
	return o.ToTierTypePtrOutputWithContext(context.Background())
}

func (o TierTypeOutput) ToTierTypePtrOutputWithContext(ctx context.Context) TierTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TierType) *TierType {
		return &v
	}).(TierTypePtrOutput)
}

func (o TierTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TierTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TierType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TierTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TierTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TierType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TierTypePtrOutput struct{ *pulumi.OutputState }

func (TierTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TierType)(nil)).Elem()
}

func (o TierTypePtrOutput) ToTierTypePtrOutput() TierTypePtrOutput {
	return o
}

func (o TierTypePtrOutput) ToTierTypePtrOutputWithContext(ctx context.Context) TierTypePtrOutput {
	return o
}

func (o TierTypePtrOutput) Elem() TierTypeOutput {
	return o.ApplyT(func(v *TierType) TierType {
		if v != nil {
			return *v
		}
		var ret TierType
		return ret
	}).(TierTypeOutput)
}

func (o TierTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TierTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TierType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TierTypeInput is an input type that accepts TierTypeArgs and TierTypeOutput values.
// You can construct a concrete instance of `TierTypeInput` via:
//
//	TierTypeArgs{...}
type TierTypeInput interface {
	pulumi.Input

	ToTierTypeOutput() TierTypeOutput
	ToTierTypeOutputWithContext(context.Context) TierTypeOutput
}

var tierTypePtrType = reflect.TypeOf((**TierType)(nil)).Elem()

type TierTypePtrInput interface {
	pulumi.Input

	ToTierTypePtrOutput() TierTypePtrOutput
	ToTierTypePtrOutputWithContext(context.Context) TierTypePtrOutput
}

type tierTypePtr string

func TierTypePtr(v string) TierTypePtrInput {
	return (*tierTypePtr)(&v)
}

func (*tierTypePtr) ElementType() reflect.Type {
	return tierTypePtrType
}

func (in *tierTypePtr) ToTierTypePtrOutput() TierTypePtrOutput {
	return pulumi.ToOutput(in).(TierTypePtrOutput)
}

func (in *tierTypePtr) ToTierTypePtrOutputWithContext(ctx context.Context) TierTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TierTypePtrOutput)
}

// The current state of the trusted identity provider feature for this Data Lake Store account.
type TrustedIdProviderStateEnum string

const (
	TrustedIdProviderStateEnumEnabled  = TrustedIdProviderStateEnum("Enabled")
	TrustedIdProviderStateEnumDisabled = TrustedIdProviderStateEnum("Disabled")
)

func (TrustedIdProviderStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustedIdProviderStateEnum)(nil)).Elem()
}

func (e TrustedIdProviderStateEnum) ToTrustedIdProviderStateEnumOutput() TrustedIdProviderStateEnumOutput {
	return pulumi.ToOutput(e).(TrustedIdProviderStateEnumOutput)
}

func (e TrustedIdProviderStateEnum) ToTrustedIdProviderStateEnumOutputWithContext(ctx context.Context) TrustedIdProviderStateEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TrustedIdProviderStateEnumOutput)
}

func (e TrustedIdProviderStateEnum) ToTrustedIdProviderStateEnumPtrOutput() TrustedIdProviderStateEnumPtrOutput {
	return e.ToTrustedIdProviderStateEnumPtrOutputWithContext(context.Background())
}

func (e TrustedIdProviderStateEnum) ToTrustedIdProviderStateEnumPtrOutputWithContext(ctx context.Context) TrustedIdProviderStateEnumPtrOutput {
	return TrustedIdProviderStateEnum(e).ToTrustedIdProviderStateEnumOutputWithContext(ctx).ToTrustedIdProviderStateEnumPtrOutputWithContext(ctx)
}

func (e TrustedIdProviderStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TrustedIdProviderStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TrustedIdProviderStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TrustedIdProviderStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TrustedIdProviderStateEnumOutput struct{ *pulumi.OutputState }

func (TrustedIdProviderStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustedIdProviderStateEnum)(nil)).Elem()
}

func (o TrustedIdProviderStateEnumOutput) ToTrustedIdProviderStateEnumOutput() TrustedIdProviderStateEnumOutput {
	return o
}

func (o TrustedIdProviderStateEnumOutput) ToTrustedIdProviderStateEnumOutputWithContext(ctx context.Context) TrustedIdProviderStateEnumOutput {
	return o
}

func (o TrustedIdProviderStateEnumOutput) ToTrustedIdProviderStateEnumPtrOutput() TrustedIdProviderStateEnumPtrOutput {
	return o.ToTrustedIdProviderStateEnumPtrOutputWithContext(context.Background())
}

func (o TrustedIdProviderStateEnumOutput) ToTrustedIdProviderStateEnumPtrOutputWithContext(ctx context.Context) TrustedIdProviderStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrustedIdProviderStateEnum) *TrustedIdProviderStateEnum {
		return &v
	}).(TrustedIdProviderStateEnumPtrOutput)
}

func (o TrustedIdProviderStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TrustedIdProviderStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TrustedIdProviderStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TrustedIdProviderStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TrustedIdProviderStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TrustedIdProviderStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TrustedIdProviderStateEnumPtrOutput struct{ *pulumi.OutputState }

func (TrustedIdProviderStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrustedIdProviderStateEnum)(nil)).Elem()
}

func (o TrustedIdProviderStateEnumPtrOutput) ToTrustedIdProviderStateEnumPtrOutput() TrustedIdProviderStateEnumPtrOutput {
	return o
}

func (o TrustedIdProviderStateEnumPtrOutput) ToTrustedIdProviderStateEnumPtrOutputWithContext(ctx context.Context) TrustedIdProviderStateEnumPtrOutput {
	return o
}

func (o TrustedIdProviderStateEnumPtrOutput) Elem() TrustedIdProviderStateEnumOutput {
	return o.ApplyT(func(v *TrustedIdProviderStateEnum) TrustedIdProviderStateEnum {
		if v != nil {
			return *v
		}
		var ret TrustedIdProviderStateEnum
		return ret
	}).(TrustedIdProviderStateEnumOutput)
}

func (o TrustedIdProviderStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TrustedIdProviderStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TrustedIdProviderStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TrustedIdProviderStateEnumInput is an input type that accepts TrustedIdProviderStateEnumArgs and TrustedIdProviderStateEnumOutput values.
// You can construct a concrete instance of `TrustedIdProviderStateEnumInput` via:
//
//	TrustedIdProviderStateEnumArgs{...}
type TrustedIdProviderStateEnumInput interface {
	pulumi.Input

	ToTrustedIdProviderStateEnumOutput() TrustedIdProviderStateEnumOutput
	ToTrustedIdProviderStateEnumOutputWithContext(context.Context) TrustedIdProviderStateEnumOutput
}

var trustedIdProviderStateEnumPtrType = reflect.TypeOf((**TrustedIdProviderStateEnum)(nil)).Elem()

type TrustedIdProviderStateEnumPtrInput interface {
	pulumi.Input

	ToTrustedIdProviderStateEnumPtrOutput() TrustedIdProviderStateEnumPtrOutput
	ToTrustedIdProviderStateEnumPtrOutputWithContext(context.Context) TrustedIdProviderStateEnumPtrOutput
}

type trustedIdProviderStateEnumPtr string

func TrustedIdProviderStateEnumPtr(v string) TrustedIdProviderStateEnumPtrInput {
	return (*trustedIdProviderStateEnumPtr)(&v)
}

func (*trustedIdProviderStateEnumPtr) ElementType() reflect.Type {
	return trustedIdProviderStateEnumPtrType
}

func (in *trustedIdProviderStateEnumPtr) ToTrustedIdProviderStateEnumPtrOutput() TrustedIdProviderStateEnumPtrOutput {
	return pulumi.ToOutput(in).(TrustedIdProviderStateEnumPtrOutput)
}

func (in *trustedIdProviderStateEnumPtr) ToTrustedIdProviderStateEnumPtrOutputWithContext(ctx context.Context) TrustedIdProviderStateEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TrustedIdProviderStateEnumPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(EncryptionConfigTypeOutput{})
	pulumi.RegisterOutputType(EncryptionConfigTypePtrOutput{})
	pulumi.RegisterOutputType(EncryptionIdentityTypeOutput{})
	pulumi.RegisterOutputType(EncryptionIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(EncryptionStateOutput{})
	pulumi.RegisterOutputType(EncryptionStatePtrOutput{})
	pulumi.RegisterOutputType(FirewallAllowAzureIpsStateOutput{})
	pulumi.RegisterOutputType(FirewallAllowAzureIpsStatePtrOutput{})
	pulumi.RegisterOutputType(FirewallStateOutput{})
	pulumi.RegisterOutputType(FirewallStatePtrOutput{})
	pulumi.RegisterOutputType(TierTypeOutput{})
	pulumi.RegisterOutputType(TierTypePtrOutput{})
	pulumi.RegisterOutputType(TrustedIdProviderStateEnumOutput{})
	pulumi.RegisterOutputType(TrustedIdProviderStateEnumPtrOutput{})
}
