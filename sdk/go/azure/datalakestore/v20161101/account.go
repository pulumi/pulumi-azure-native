// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20161101

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Data Lake Store account information.
type Account struct {
	pulumi.CustomResourceState

	// The unique identifier associated with this Data Lake Store account.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// The account creation time.
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// The commitment tier in use for the current month.
	CurrentTier pulumi.StringOutput `pulumi:"currentTier"`
	// The default owner group for all new folders and files created in the Data Lake Store account.
	DefaultGroup pulumi.StringOutput `pulumi:"defaultGroup"`
	// The Key Vault encryption configuration.
	EncryptionConfig EncryptionConfigResponseOutput `pulumi:"encryptionConfig"`
	// The current state of encryption provisioning for this Data Lake Store account.
	EncryptionProvisioningState pulumi.StringOutput `pulumi:"encryptionProvisioningState"`
	// The current state of encryption for this Data Lake Store account.
	EncryptionState pulumi.StringOutput `pulumi:"encryptionState"`
	// The full CName endpoint for this account.
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
	FirewallAllowAzureIps pulumi.StringOutput `pulumi:"firewallAllowAzureIps"`
	// The list of firewall rules associated with this Data Lake Store account.
	FirewallRules FirewallRuleResponseArrayOutput `pulumi:"firewallRules"`
	// The current state of the IP address firewall for this Data Lake Store account.
	FirewallState pulumi.StringOutput `pulumi:"firewallState"`
	// The Key Vault encryption identity, if any.
	Identity EncryptionIdentityResponseOutput `pulumi:"identity"`
	// The account last modified time.
	LastModifiedTime pulumi.StringOutput `pulumi:"lastModifiedTime"`
	// The resource location.
	Location pulumi.StringOutput `pulumi:"location"`
	// The resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The commitment tier to use for next month.
	NewTier pulumi.StringOutput `pulumi:"newTier"`
	// The provisioning status of the Data Lake Store account.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The state of the Data Lake Store account.
	State pulumi.StringOutput `pulumi:"state"`
	// The resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The current state of the trusted identity provider feature for this Data Lake Store account.
	TrustedIdProviderState pulumi.StringOutput `pulumi:"trustedIdProviderState"`
	// The list of trusted identity providers associated with this Data Lake Store account.
	TrustedIdProviders TrustedIdProviderResponseArrayOutput `pulumi:"trustedIdProviders"`
	// The resource type.
	Type pulumi.StringOutput `pulumi:"type"`
	// The list of virtual network rules associated with this Data Lake Store account.
	VirtualNetworkRules VirtualNetworkRuleResponseArrayOutput `pulumi:"virtualNetworkRules"`
}

// NewAccount registers a new resource with the given unique name, arguments, and options.
func NewAccount(ctx *pulumi.Context,
	name string, args *AccountArgs, opts ...pulumi.ResourceOption) (*Account, error) {
	if args == nil || args.AccountName == nil {
		return nil, errors.New("missing required argument 'AccountName'")
	}
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &AccountArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:datalakestore/latest:Account"),
		},
	})
	opts = append(opts, aliases)
	var resource Account
	err := ctx.RegisterResource("azure-nextgen:datalakestore/v20161101:Account", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccount gets an existing Account resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountState, opts ...pulumi.ResourceOption) (*Account, error) {
	var resource Account
	err := ctx.ReadResource("azure-nextgen:datalakestore/v20161101:Account", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Account resources.
type accountState struct {
	// The unique identifier associated with this Data Lake Store account.
	AccountId *string `pulumi:"accountId"`
	// The account creation time.
	CreationTime *string `pulumi:"creationTime"`
	// The commitment tier in use for the current month.
	CurrentTier *string `pulumi:"currentTier"`
	// The default owner group for all new folders and files created in the Data Lake Store account.
	DefaultGroup *string `pulumi:"defaultGroup"`
	// The Key Vault encryption configuration.
	EncryptionConfig *EncryptionConfigResponse `pulumi:"encryptionConfig"`
	// The current state of encryption provisioning for this Data Lake Store account.
	EncryptionProvisioningState *string `pulumi:"encryptionProvisioningState"`
	// The current state of encryption for this Data Lake Store account.
	EncryptionState *string `pulumi:"encryptionState"`
	// The full CName endpoint for this account.
	Endpoint *string `pulumi:"endpoint"`
	// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
	FirewallAllowAzureIps *string `pulumi:"firewallAllowAzureIps"`
	// The list of firewall rules associated with this Data Lake Store account.
	FirewallRules []FirewallRuleResponse `pulumi:"firewallRules"`
	// The current state of the IP address firewall for this Data Lake Store account.
	FirewallState *string `pulumi:"firewallState"`
	// The Key Vault encryption identity, if any.
	Identity *EncryptionIdentityResponse `pulumi:"identity"`
	// The account last modified time.
	LastModifiedTime *string `pulumi:"lastModifiedTime"`
	// The resource location.
	Location *string `pulumi:"location"`
	// The resource name.
	Name *string `pulumi:"name"`
	// The commitment tier to use for next month.
	NewTier *string `pulumi:"newTier"`
	// The provisioning status of the Data Lake Store account.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The state of the Data Lake Store account.
	State *string `pulumi:"state"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The current state of the trusted identity provider feature for this Data Lake Store account.
	TrustedIdProviderState *string `pulumi:"trustedIdProviderState"`
	// The list of trusted identity providers associated with this Data Lake Store account.
	TrustedIdProviders []TrustedIdProviderResponse `pulumi:"trustedIdProviders"`
	// The resource type.
	Type *string `pulumi:"type"`
	// The list of virtual network rules associated with this Data Lake Store account.
	VirtualNetworkRules []VirtualNetworkRuleResponse `pulumi:"virtualNetworkRules"`
}

type AccountState struct {
	// The unique identifier associated with this Data Lake Store account.
	AccountId pulumi.StringPtrInput
	// The account creation time.
	CreationTime pulumi.StringPtrInput
	// The commitment tier in use for the current month.
	CurrentTier pulumi.StringPtrInput
	// The default owner group for all new folders and files created in the Data Lake Store account.
	DefaultGroup pulumi.StringPtrInput
	// The Key Vault encryption configuration.
	EncryptionConfig EncryptionConfigResponsePtrInput
	// The current state of encryption provisioning for this Data Lake Store account.
	EncryptionProvisioningState pulumi.StringPtrInput
	// The current state of encryption for this Data Lake Store account.
	EncryptionState pulumi.StringPtrInput
	// The full CName endpoint for this account.
	Endpoint pulumi.StringPtrInput
	// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
	FirewallAllowAzureIps pulumi.StringPtrInput
	// The list of firewall rules associated with this Data Lake Store account.
	FirewallRules FirewallRuleResponseArrayInput
	// The current state of the IP address firewall for this Data Lake Store account.
	FirewallState pulumi.StringPtrInput
	// The Key Vault encryption identity, if any.
	Identity EncryptionIdentityResponsePtrInput
	// The account last modified time.
	LastModifiedTime pulumi.StringPtrInput
	// The resource location.
	Location pulumi.StringPtrInput
	// The resource name.
	Name pulumi.StringPtrInput
	// The commitment tier to use for next month.
	NewTier pulumi.StringPtrInput
	// The provisioning status of the Data Lake Store account.
	ProvisioningState pulumi.StringPtrInput
	// The state of the Data Lake Store account.
	State pulumi.StringPtrInput
	// The resource tags.
	Tags pulumi.StringMapInput
	// The current state of the trusted identity provider feature for this Data Lake Store account.
	TrustedIdProviderState pulumi.StringPtrInput
	// The list of trusted identity providers associated with this Data Lake Store account.
	TrustedIdProviders TrustedIdProviderResponseArrayInput
	// The resource type.
	Type pulumi.StringPtrInput
	// The list of virtual network rules associated with this Data Lake Store account.
	VirtualNetworkRules VirtualNetworkRuleResponseArrayInput
}

func (AccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountState)(nil)).Elem()
}

type accountArgs struct {
	// The name of the Data Lake Store account.
	AccountName string `pulumi:"accountName"`
	// The default owner group for all new folders and files created in the Data Lake Store account.
	DefaultGroup *string `pulumi:"defaultGroup"`
	// The Key Vault encryption configuration.
	EncryptionConfig *EncryptionConfig `pulumi:"encryptionConfig"`
	// The current state of encryption for this Data Lake Store account.
	EncryptionState *string `pulumi:"encryptionState"`
	// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
	FirewallAllowAzureIps *string `pulumi:"firewallAllowAzureIps"`
	// The list of firewall rules associated with this Data Lake Store account.
	FirewallRules []CreateFirewallRuleWithAccountParameters `pulumi:"firewallRules"`
	// The current state of the IP address firewall for this Data Lake Store account.
	FirewallState *string `pulumi:"firewallState"`
	// The Key Vault encryption identity, if any.
	Identity *EncryptionIdentity `pulumi:"identity"`
	// The resource location.
	Location string `pulumi:"location"`
	// The commitment tier to use for next month.
	NewTier *string `pulumi:"newTier"`
	// The name of the Azure resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The current state of the trusted identity provider feature for this Data Lake Store account.
	TrustedIdProviderState *string `pulumi:"trustedIdProviderState"`
	// The list of trusted identity providers associated with this Data Lake Store account.
	TrustedIdProviders []CreateTrustedIdProviderWithAccountParameters `pulumi:"trustedIdProviders"`
	// The list of virtual network rules associated with this Data Lake Store account.
	VirtualNetworkRules []CreateVirtualNetworkRuleWithAccountParameters `pulumi:"virtualNetworkRules"`
}

// The set of arguments for constructing a Account resource.
type AccountArgs struct {
	// The name of the Data Lake Store account.
	AccountName pulumi.StringInput
	// The default owner group for all new folders and files created in the Data Lake Store account.
	DefaultGroup pulumi.StringPtrInput
	// The Key Vault encryption configuration.
	EncryptionConfig EncryptionConfigPtrInput
	// The current state of encryption for this Data Lake Store account.
	EncryptionState pulumi.StringPtrInput
	// The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
	FirewallAllowAzureIps pulumi.StringPtrInput
	// The list of firewall rules associated with this Data Lake Store account.
	FirewallRules CreateFirewallRuleWithAccountParametersArrayInput
	// The current state of the IP address firewall for this Data Lake Store account.
	FirewallState pulumi.StringPtrInput
	// The Key Vault encryption identity, if any.
	Identity EncryptionIdentityPtrInput
	// The resource location.
	Location pulumi.StringInput
	// The commitment tier to use for next month.
	NewTier pulumi.StringPtrInput
	// The name of the Azure resource group.
	ResourceGroupName pulumi.StringInput
	// The resource tags.
	Tags pulumi.StringMapInput
	// The current state of the trusted identity provider feature for this Data Lake Store account.
	TrustedIdProviderState pulumi.StringPtrInput
	// The list of trusted identity providers associated with this Data Lake Store account.
	TrustedIdProviders CreateTrustedIdProviderWithAccountParametersArrayInput
	// The list of virtual network rules associated with this Data Lake Store account.
	VirtualNetworkRules CreateVirtualNetworkRuleWithAccountParametersArrayInput
}

func (AccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountArgs)(nil)).Elem()
}
