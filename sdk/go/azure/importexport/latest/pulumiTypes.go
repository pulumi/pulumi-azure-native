// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// BitLocker recovery key or password to the specified drive
type DriveBitLockerKeyResponse struct {
	// BitLocker recovery key or password
	BitLockerKey *string `pulumi:"bitLockerKey"`
	// Drive ID
	DriveId *string `pulumi:"driveId"`
}

// DriveBitLockerKeyResponseInput is an input type that accepts DriveBitLockerKeyResponseArgs and DriveBitLockerKeyResponseOutput values.
// You can construct a concrete instance of `DriveBitLockerKeyResponseInput` via:
//
//          DriveBitLockerKeyResponseArgs{...}
type DriveBitLockerKeyResponseInput interface {
	pulumi.Input

	ToDriveBitLockerKeyResponseOutput() DriveBitLockerKeyResponseOutput
	ToDriveBitLockerKeyResponseOutputWithContext(context.Context) DriveBitLockerKeyResponseOutput
}

// BitLocker recovery key or password to the specified drive
type DriveBitLockerKeyResponseArgs struct {
	// BitLocker recovery key or password
	BitLockerKey pulumi.StringPtrInput `pulumi:"bitLockerKey"`
	// Drive ID
	DriveId pulumi.StringPtrInput `pulumi:"driveId"`
}

func (DriveBitLockerKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DriveBitLockerKeyResponse)(nil)).Elem()
}

func (i DriveBitLockerKeyResponseArgs) ToDriveBitLockerKeyResponseOutput() DriveBitLockerKeyResponseOutput {
	return i.ToDriveBitLockerKeyResponseOutputWithContext(context.Background())
}

func (i DriveBitLockerKeyResponseArgs) ToDriveBitLockerKeyResponseOutputWithContext(ctx context.Context) DriveBitLockerKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DriveBitLockerKeyResponseOutput)
}

// DriveBitLockerKeyResponseArrayInput is an input type that accepts DriveBitLockerKeyResponseArray and DriveBitLockerKeyResponseArrayOutput values.
// You can construct a concrete instance of `DriveBitLockerKeyResponseArrayInput` via:
//
//          DriveBitLockerKeyResponseArray{ DriveBitLockerKeyResponseArgs{...} }
type DriveBitLockerKeyResponseArrayInput interface {
	pulumi.Input

	ToDriveBitLockerKeyResponseArrayOutput() DriveBitLockerKeyResponseArrayOutput
	ToDriveBitLockerKeyResponseArrayOutputWithContext(context.Context) DriveBitLockerKeyResponseArrayOutput
}

type DriveBitLockerKeyResponseArray []DriveBitLockerKeyResponseInput

func (DriveBitLockerKeyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DriveBitLockerKeyResponse)(nil)).Elem()
}

func (i DriveBitLockerKeyResponseArray) ToDriveBitLockerKeyResponseArrayOutput() DriveBitLockerKeyResponseArrayOutput {
	return i.ToDriveBitLockerKeyResponseArrayOutputWithContext(context.Background())
}

func (i DriveBitLockerKeyResponseArray) ToDriveBitLockerKeyResponseArrayOutputWithContext(ctx context.Context) DriveBitLockerKeyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DriveBitLockerKeyResponseArrayOutput)
}

// BitLocker recovery key or password to the specified drive
type DriveBitLockerKeyResponseOutput struct{ *pulumi.OutputState }

func (DriveBitLockerKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DriveBitLockerKeyResponse)(nil)).Elem()
}

func (o DriveBitLockerKeyResponseOutput) ToDriveBitLockerKeyResponseOutput() DriveBitLockerKeyResponseOutput {
	return o
}

func (o DriveBitLockerKeyResponseOutput) ToDriveBitLockerKeyResponseOutputWithContext(ctx context.Context) DriveBitLockerKeyResponseOutput {
	return o
}

// BitLocker recovery key or password
func (o DriveBitLockerKeyResponseOutput) BitLockerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveBitLockerKeyResponse) *string { return v.BitLockerKey }).(pulumi.StringPtrOutput)
}

// Drive ID
func (o DriveBitLockerKeyResponseOutput) DriveId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveBitLockerKeyResponse) *string { return v.DriveId }).(pulumi.StringPtrOutput)
}

type DriveBitLockerKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (DriveBitLockerKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DriveBitLockerKeyResponse)(nil)).Elem()
}

func (o DriveBitLockerKeyResponseArrayOutput) ToDriveBitLockerKeyResponseArrayOutput() DriveBitLockerKeyResponseArrayOutput {
	return o
}

func (o DriveBitLockerKeyResponseArrayOutput) ToDriveBitLockerKeyResponseArrayOutputWithContext(ctx context.Context) DriveBitLockerKeyResponseArrayOutput {
	return o
}

func (o DriveBitLockerKeyResponseArrayOutput) Index(i pulumi.IntInput) DriveBitLockerKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DriveBitLockerKeyResponse {
		return vs[0].([]DriveBitLockerKeyResponse)[vs[1].(int)]
	}).(DriveBitLockerKeyResponseOutput)
}

// Provides information about the drive's status
type DriveStatus struct {
	// The BitLocker key used to encrypt the drive.
	BitLockerKey *string `pulumi:"bitLockerKey"`
	// Bytes successfully transferred for the drive.
	BytesSucceeded *int `pulumi:"bytesSucceeded"`
	// Detailed status about the data transfer process. This field is not returned in the response until the drive is in the Transferring state.
	CopyStatus *string `pulumi:"copyStatus"`
	// The drive header hash value.
	DriveHeaderHash *string `pulumi:"driveHeaderHash"`
	// The drive's hardware serial number, without spaces.
	DriveId *string `pulumi:"driveId"`
	// A URI that points to the blob containing the error log for the data transfer operation.
	ErrorLogUri *string `pulumi:"errorLogUri"`
	// The relative path of the manifest file on the drive.
	ManifestFile *string `pulumi:"manifestFile"`
	// The Base16-encoded MD5 hash of the manifest file on the drive.
	ManifestHash *string `pulumi:"manifestHash"`
	// A URI that points to the blob containing the drive manifest file.
	ManifestUri *string `pulumi:"manifestUri"`
	// Percentage completed for the drive.
	PercentComplete *int `pulumi:"percentComplete"`
	// The drive's current state.
	State *string `pulumi:"state"`
	// A URI that points to the blob containing the verbose log for the data transfer operation.
	VerboseLogUri *string `pulumi:"verboseLogUri"`
}

// DriveStatusInput is an input type that accepts DriveStatusArgs and DriveStatusOutput values.
// You can construct a concrete instance of `DriveStatusInput` via:
//
//          DriveStatusArgs{...}
type DriveStatusInput interface {
	pulumi.Input

	ToDriveStatusOutput() DriveStatusOutput
	ToDriveStatusOutputWithContext(context.Context) DriveStatusOutput
}

// Provides information about the drive's status
type DriveStatusArgs struct {
	// The BitLocker key used to encrypt the drive.
	BitLockerKey pulumi.StringPtrInput `pulumi:"bitLockerKey"`
	// Bytes successfully transferred for the drive.
	BytesSucceeded pulumi.IntPtrInput `pulumi:"bytesSucceeded"`
	// Detailed status about the data transfer process. This field is not returned in the response until the drive is in the Transferring state.
	CopyStatus pulumi.StringPtrInput `pulumi:"copyStatus"`
	// The drive header hash value.
	DriveHeaderHash pulumi.StringPtrInput `pulumi:"driveHeaderHash"`
	// The drive's hardware serial number, without spaces.
	DriveId pulumi.StringPtrInput `pulumi:"driveId"`
	// A URI that points to the blob containing the error log for the data transfer operation.
	ErrorLogUri pulumi.StringPtrInput `pulumi:"errorLogUri"`
	// The relative path of the manifest file on the drive.
	ManifestFile pulumi.StringPtrInput `pulumi:"manifestFile"`
	// The Base16-encoded MD5 hash of the manifest file on the drive.
	ManifestHash pulumi.StringPtrInput `pulumi:"manifestHash"`
	// A URI that points to the blob containing the drive manifest file.
	ManifestUri pulumi.StringPtrInput `pulumi:"manifestUri"`
	// Percentage completed for the drive.
	PercentComplete pulumi.IntPtrInput `pulumi:"percentComplete"`
	// The drive's current state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A URI that points to the blob containing the verbose log for the data transfer operation.
	VerboseLogUri pulumi.StringPtrInput `pulumi:"verboseLogUri"`
}

func (DriveStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DriveStatus)(nil)).Elem()
}

func (i DriveStatusArgs) ToDriveStatusOutput() DriveStatusOutput {
	return i.ToDriveStatusOutputWithContext(context.Background())
}

func (i DriveStatusArgs) ToDriveStatusOutputWithContext(ctx context.Context) DriveStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DriveStatusOutput)
}

// DriveStatusArrayInput is an input type that accepts DriveStatusArray and DriveStatusArrayOutput values.
// You can construct a concrete instance of `DriveStatusArrayInput` via:
//
//          DriveStatusArray{ DriveStatusArgs{...} }
type DriveStatusArrayInput interface {
	pulumi.Input

	ToDriveStatusArrayOutput() DriveStatusArrayOutput
	ToDriveStatusArrayOutputWithContext(context.Context) DriveStatusArrayOutput
}

type DriveStatusArray []DriveStatusInput

func (DriveStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DriveStatus)(nil)).Elem()
}

func (i DriveStatusArray) ToDriveStatusArrayOutput() DriveStatusArrayOutput {
	return i.ToDriveStatusArrayOutputWithContext(context.Background())
}

func (i DriveStatusArray) ToDriveStatusArrayOutputWithContext(ctx context.Context) DriveStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DriveStatusArrayOutput)
}

// Provides information about the drive's status
type DriveStatusOutput struct{ *pulumi.OutputState }

func (DriveStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DriveStatus)(nil)).Elem()
}

func (o DriveStatusOutput) ToDriveStatusOutput() DriveStatusOutput {
	return o
}

func (o DriveStatusOutput) ToDriveStatusOutputWithContext(ctx context.Context) DriveStatusOutput {
	return o
}

// The BitLocker key used to encrypt the drive.
func (o DriveStatusOutput) BitLockerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatus) *string { return v.BitLockerKey }).(pulumi.StringPtrOutput)
}

// Bytes successfully transferred for the drive.
func (o DriveStatusOutput) BytesSucceeded() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DriveStatus) *int { return v.BytesSucceeded }).(pulumi.IntPtrOutput)
}

// Detailed status about the data transfer process. This field is not returned in the response until the drive is in the Transferring state.
func (o DriveStatusOutput) CopyStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatus) *string { return v.CopyStatus }).(pulumi.StringPtrOutput)
}

// The drive header hash value.
func (o DriveStatusOutput) DriveHeaderHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatus) *string { return v.DriveHeaderHash }).(pulumi.StringPtrOutput)
}

// The drive's hardware serial number, without spaces.
func (o DriveStatusOutput) DriveId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatus) *string { return v.DriveId }).(pulumi.StringPtrOutput)
}

// A URI that points to the blob containing the error log for the data transfer operation.
func (o DriveStatusOutput) ErrorLogUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatus) *string { return v.ErrorLogUri }).(pulumi.StringPtrOutput)
}

// The relative path of the manifest file on the drive.
func (o DriveStatusOutput) ManifestFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatus) *string { return v.ManifestFile }).(pulumi.StringPtrOutput)
}

// The Base16-encoded MD5 hash of the manifest file on the drive.
func (o DriveStatusOutput) ManifestHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatus) *string { return v.ManifestHash }).(pulumi.StringPtrOutput)
}

// A URI that points to the blob containing the drive manifest file.
func (o DriveStatusOutput) ManifestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatus) *string { return v.ManifestUri }).(pulumi.StringPtrOutput)
}

// Percentage completed for the drive.
func (o DriveStatusOutput) PercentComplete() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DriveStatus) *int { return v.PercentComplete }).(pulumi.IntPtrOutput)
}

// The drive's current state.
func (o DriveStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

// A URI that points to the blob containing the verbose log for the data transfer operation.
func (o DriveStatusOutput) VerboseLogUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatus) *string { return v.VerboseLogUri }).(pulumi.StringPtrOutput)
}

type DriveStatusArrayOutput struct{ *pulumi.OutputState }

func (DriveStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DriveStatus)(nil)).Elem()
}

func (o DriveStatusArrayOutput) ToDriveStatusArrayOutput() DriveStatusArrayOutput {
	return o
}

func (o DriveStatusArrayOutput) ToDriveStatusArrayOutputWithContext(ctx context.Context) DriveStatusArrayOutput {
	return o
}

func (o DriveStatusArrayOutput) Index(i pulumi.IntInput) DriveStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DriveStatus {
		return vs[0].([]DriveStatus)[vs[1].(int)]
	}).(DriveStatusOutput)
}

// Provides information about the drive's status
type DriveStatusResponse struct {
	// The BitLocker key used to encrypt the drive.
	BitLockerKey *string `pulumi:"bitLockerKey"`
	// Bytes successfully transferred for the drive.
	BytesSucceeded *int `pulumi:"bytesSucceeded"`
	// Detailed status about the data transfer process. This field is not returned in the response until the drive is in the Transferring state.
	CopyStatus *string `pulumi:"copyStatus"`
	// The drive header hash value.
	DriveHeaderHash *string `pulumi:"driveHeaderHash"`
	// The drive's hardware serial number, without spaces.
	DriveId *string `pulumi:"driveId"`
	// A URI that points to the blob containing the error log for the data transfer operation.
	ErrorLogUri *string `pulumi:"errorLogUri"`
	// The relative path of the manifest file on the drive.
	ManifestFile *string `pulumi:"manifestFile"`
	// The Base16-encoded MD5 hash of the manifest file on the drive.
	ManifestHash *string `pulumi:"manifestHash"`
	// A URI that points to the blob containing the drive manifest file.
	ManifestUri *string `pulumi:"manifestUri"`
	// Percentage completed for the drive.
	PercentComplete *int `pulumi:"percentComplete"`
	// The drive's current state.
	State *string `pulumi:"state"`
	// A URI that points to the blob containing the verbose log for the data transfer operation.
	VerboseLogUri *string `pulumi:"verboseLogUri"`
}

// DriveStatusResponseInput is an input type that accepts DriveStatusResponseArgs and DriveStatusResponseOutput values.
// You can construct a concrete instance of `DriveStatusResponseInput` via:
//
//          DriveStatusResponseArgs{...}
type DriveStatusResponseInput interface {
	pulumi.Input

	ToDriveStatusResponseOutput() DriveStatusResponseOutput
	ToDriveStatusResponseOutputWithContext(context.Context) DriveStatusResponseOutput
}

// Provides information about the drive's status
type DriveStatusResponseArgs struct {
	// The BitLocker key used to encrypt the drive.
	BitLockerKey pulumi.StringPtrInput `pulumi:"bitLockerKey"`
	// Bytes successfully transferred for the drive.
	BytesSucceeded pulumi.IntPtrInput `pulumi:"bytesSucceeded"`
	// Detailed status about the data transfer process. This field is not returned in the response until the drive is in the Transferring state.
	CopyStatus pulumi.StringPtrInput `pulumi:"copyStatus"`
	// The drive header hash value.
	DriveHeaderHash pulumi.StringPtrInput `pulumi:"driveHeaderHash"`
	// The drive's hardware serial number, without spaces.
	DriveId pulumi.StringPtrInput `pulumi:"driveId"`
	// A URI that points to the blob containing the error log for the data transfer operation.
	ErrorLogUri pulumi.StringPtrInput `pulumi:"errorLogUri"`
	// The relative path of the manifest file on the drive.
	ManifestFile pulumi.StringPtrInput `pulumi:"manifestFile"`
	// The Base16-encoded MD5 hash of the manifest file on the drive.
	ManifestHash pulumi.StringPtrInput `pulumi:"manifestHash"`
	// A URI that points to the blob containing the drive manifest file.
	ManifestUri pulumi.StringPtrInput `pulumi:"manifestUri"`
	// Percentage completed for the drive.
	PercentComplete pulumi.IntPtrInput `pulumi:"percentComplete"`
	// The drive's current state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A URI that points to the blob containing the verbose log for the data transfer operation.
	VerboseLogUri pulumi.StringPtrInput `pulumi:"verboseLogUri"`
}

func (DriveStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DriveStatusResponse)(nil)).Elem()
}

func (i DriveStatusResponseArgs) ToDriveStatusResponseOutput() DriveStatusResponseOutput {
	return i.ToDriveStatusResponseOutputWithContext(context.Background())
}

func (i DriveStatusResponseArgs) ToDriveStatusResponseOutputWithContext(ctx context.Context) DriveStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DriveStatusResponseOutput)
}

// DriveStatusResponseArrayInput is an input type that accepts DriveStatusResponseArray and DriveStatusResponseArrayOutput values.
// You can construct a concrete instance of `DriveStatusResponseArrayInput` via:
//
//          DriveStatusResponseArray{ DriveStatusResponseArgs{...} }
type DriveStatusResponseArrayInput interface {
	pulumi.Input

	ToDriveStatusResponseArrayOutput() DriveStatusResponseArrayOutput
	ToDriveStatusResponseArrayOutputWithContext(context.Context) DriveStatusResponseArrayOutput
}

type DriveStatusResponseArray []DriveStatusResponseInput

func (DriveStatusResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DriveStatusResponse)(nil)).Elem()
}

func (i DriveStatusResponseArray) ToDriveStatusResponseArrayOutput() DriveStatusResponseArrayOutput {
	return i.ToDriveStatusResponseArrayOutputWithContext(context.Background())
}

func (i DriveStatusResponseArray) ToDriveStatusResponseArrayOutputWithContext(ctx context.Context) DriveStatusResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DriveStatusResponseArrayOutput)
}

// Provides information about the drive's status
type DriveStatusResponseOutput struct{ *pulumi.OutputState }

func (DriveStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DriveStatusResponse)(nil)).Elem()
}

func (o DriveStatusResponseOutput) ToDriveStatusResponseOutput() DriveStatusResponseOutput {
	return o
}

func (o DriveStatusResponseOutput) ToDriveStatusResponseOutputWithContext(ctx context.Context) DriveStatusResponseOutput {
	return o
}

// The BitLocker key used to encrypt the drive.
func (o DriveStatusResponseOutput) BitLockerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatusResponse) *string { return v.BitLockerKey }).(pulumi.StringPtrOutput)
}

// Bytes successfully transferred for the drive.
func (o DriveStatusResponseOutput) BytesSucceeded() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DriveStatusResponse) *int { return v.BytesSucceeded }).(pulumi.IntPtrOutput)
}

// Detailed status about the data transfer process. This field is not returned in the response until the drive is in the Transferring state.
func (o DriveStatusResponseOutput) CopyStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatusResponse) *string { return v.CopyStatus }).(pulumi.StringPtrOutput)
}

// The drive header hash value.
func (o DriveStatusResponseOutput) DriveHeaderHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatusResponse) *string { return v.DriveHeaderHash }).(pulumi.StringPtrOutput)
}

// The drive's hardware serial number, without spaces.
func (o DriveStatusResponseOutput) DriveId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatusResponse) *string { return v.DriveId }).(pulumi.StringPtrOutput)
}

// A URI that points to the blob containing the error log for the data transfer operation.
func (o DriveStatusResponseOutput) ErrorLogUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatusResponse) *string { return v.ErrorLogUri }).(pulumi.StringPtrOutput)
}

// The relative path of the manifest file on the drive.
func (o DriveStatusResponseOutput) ManifestFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatusResponse) *string { return v.ManifestFile }).(pulumi.StringPtrOutput)
}

// The Base16-encoded MD5 hash of the manifest file on the drive.
func (o DriveStatusResponseOutput) ManifestHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatusResponse) *string { return v.ManifestHash }).(pulumi.StringPtrOutput)
}

// A URI that points to the blob containing the drive manifest file.
func (o DriveStatusResponseOutput) ManifestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatusResponse) *string { return v.ManifestUri }).(pulumi.StringPtrOutput)
}

// Percentage completed for the drive.
func (o DriveStatusResponseOutput) PercentComplete() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DriveStatusResponse) *int { return v.PercentComplete }).(pulumi.IntPtrOutput)
}

// The drive's current state.
func (o DriveStatusResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatusResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// A URI that points to the blob containing the verbose log for the data transfer operation.
func (o DriveStatusResponseOutput) VerboseLogUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DriveStatusResponse) *string { return v.VerboseLogUri }).(pulumi.StringPtrOutput)
}

type DriveStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (DriveStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DriveStatusResponse)(nil)).Elem()
}

func (o DriveStatusResponseArrayOutput) ToDriveStatusResponseArrayOutput() DriveStatusResponseArrayOutput {
	return o
}

func (o DriveStatusResponseArrayOutput) ToDriveStatusResponseArrayOutputWithContext(ctx context.Context) DriveStatusResponseArrayOutput {
	return o
}

func (o DriveStatusResponseArrayOutput) Index(i pulumi.IntInput) DriveStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DriveStatusResponse {
		return vs[0].([]DriveStatusResponse)[vs[1].(int)]
	}).(DriveStatusResponseOutput)
}

// Specifies the encryption key properties
type EncryptionKeyDetails struct {
	// The type of kek encryption key
	KekType *string `pulumi:"kekType"`
	// Specifies the url for kek encryption key.
	KekUrl *string `pulumi:"kekUrl"`
	// Specifies the keyvault resource id for kek encryption key.
	KekVaultResourceID *string `pulumi:"kekVaultResourceID"`
}

// EncryptionKeyDetailsInput is an input type that accepts EncryptionKeyDetailsArgs and EncryptionKeyDetailsOutput values.
// You can construct a concrete instance of `EncryptionKeyDetailsInput` via:
//
//          EncryptionKeyDetailsArgs{...}
type EncryptionKeyDetailsInput interface {
	pulumi.Input

	ToEncryptionKeyDetailsOutput() EncryptionKeyDetailsOutput
	ToEncryptionKeyDetailsOutputWithContext(context.Context) EncryptionKeyDetailsOutput
}

// Specifies the encryption key properties
type EncryptionKeyDetailsArgs struct {
	// The type of kek encryption key
	KekType pulumi.StringPtrInput `pulumi:"kekType"`
	// Specifies the url for kek encryption key.
	KekUrl pulumi.StringPtrInput `pulumi:"kekUrl"`
	// Specifies the keyvault resource id for kek encryption key.
	KekVaultResourceID pulumi.StringPtrInput `pulumi:"kekVaultResourceID"`
}

func (EncryptionKeyDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeyDetails)(nil)).Elem()
}

func (i EncryptionKeyDetailsArgs) ToEncryptionKeyDetailsOutput() EncryptionKeyDetailsOutput {
	return i.ToEncryptionKeyDetailsOutputWithContext(context.Background())
}

func (i EncryptionKeyDetailsArgs) ToEncryptionKeyDetailsOutputWithContext(ctx context.Context) EncryptionKeyDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyDetailsOutput)
}

func (i EncryptionKeyDetailsArgs) ToEncryptionKeyDetailsPtrOutput() EncryptionKeyDetailsPtrOutput {
	return i.ToEncryptionKeyDetailsPtrOutputWithContext(context.Background())
}

func (i EncryptionKeyDetailsArgs) ToEncryptionKeyDetailsPtrOutputWithContext(ctx context.Context) EncryptionKeyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyDetailsOutput).ToEncryptionKeyDetailsPtrOutputWithContext(ctx)
}

// EncryptionKeyDetailsPtrInput is an input type that accepts EncryptionKeyDetailsArgs, EncryptionKeyDetailsPtr and EncryptionKeyDetailsPtrOutput values.
// You can construct a concrete instance of `EncryptionKeyDetailsPtrInput` via:
//
//          EncryptionKeyDetailsArgs{...}
//
//  or:
//
//          nil
type EncryptionKeyDetailsPtrInput interface {
	pulumi.Input

	ToEncryptionKeyDetailsPtrOutput() EncryptionKeyDetailsPtrOutput
	ToEncryptionKeyDetailsPtrOutputWithContext(context.Context) EncryptionKeyDetailsPtrOutput
}

type encryptionKeyDetailsPtrType EncryptionKeyDetailsArgs

func EncryptionKeyDetailsPtr(v *EncryptionKeyDetailsArgs) EncryptionKeyDetailsPtrInput {
	return (*encryptionKeyDetailsPtrType)(v)
}

func (*encryptionKeyDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKeyDetails)(nil)).Elem()
}

func (i *encryptionKeyDetailsPtrType) ToEncryptionKeyDetailsPtrOutput() EncryptionKeyDetailsPtrOutput {
	return i.ToEncryptionKeyDetailsPtrOutputWithContext(context.Background())
}

func (i *encryptionKeyDetailsPtrType) ToEncryptionKeyDetailsPtrOutputWithContext(ctx context.Context) EncryptionKeyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyDetailsPtrOutput)
}

// Specifies the encryption key properties
type EncryptionKeyDetailsOutput struct{ *pulumi.OutputState }

func (EncryptionKeyDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeyDetails)(nil)).Elem()
}

func (o EncryptionKeyDetailsOutput) ToEncryptionKeyDetailsOutput() EncryptionKeyDetailsOutput {
	return o
}

func (o EncryptionKeyDetailsOutput) ToEncryptionKeyDetailsOutputWithContext(ctx context.Context) EncryptionKeyDetailsOutput {
	return o
}

func (o EncryptionKeyDetailsOutput) ToEncryptionKeyDetailsPtrOutput() EncryptionKeyDetailsPtrOutput {
	return o.ToEncryptionKeyDetailsPtrOutputWithContext(context.Background())
}

func (o EncryptionKeyDetailsOutput) ToEncryptionKeyDetailsPtrOutputWithContext(ctx context.Context) EncryptionKeyDetailsPtrOutput {
	return o.ApplyT(func(v EncryptionKeyDetails) *EncryptionKeyDetails {
		return &v
	}).(EncryptionKeyDetailsPtrOutput)
}

// The type of kek encryption key
func (o EncryptionKeyDetailsOutput) KekType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyDetails) *string { return v.KekType }).(pulumi.StringPtrOutput)
}

// Specifies the url for kek encryption key.
func (o EncryptionKeyDetailsOutput) KekUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyDetails) *string { return v.KekUrl }).(pulumi.StringPtrOutput)
}

// Specifies the keyvault resource id for kek encryption key.
func (o EncryptionKeyDetailsOutput) KekVaultResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyDetails) *string { return v.KekVaultResourceID }).(pulumi.StringPtrOutput)
}

type EncryptionKeyDetailsPtrOutput struct{ *pulumi.OutputState }

func (EncryptionKeyDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKeyDetails)(nil)).Elem()
}

func (o EncryptionKeyDetailsPtrOutput) ToEncryptionKeyDetailsPtrOutput() EncryptionKeyDetailsPtrOutput {
	return o
}

func (o EncryptionKeyDetailsPtrOutput) ToEncryptionKeyDetailsPtrOutputWithContext(ctx context.Context) EncryptionKeyDetailsPtrOutput {
	return o
}

func (o EncryptionKeyDetailsPtrOutput) Elem() EncryptionKeyDetailsOutput {
	return o.ApplyT(func(v *EncryptionKeyDetails) EncryptionKeyDetails { return *v }).(EncryptionKeyDetailsOutput)
}

// The type of kek encryption key
func (o EncryptionKeyDetailsPtrOutput) KekType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyDetails) *string {
		if v == nil {
			return nil
		}
		return v.KekType
	}).(pulumi.StringPtrOutput)
}

// Specifies the url for kek encryption key.
func (o EncryptionKeyDetailsPtrOutput) KekUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyDetails) *string {
		if v == nil {
			return nil
		}
		return v.KekUrl
	}).(pulumi.StringPtrOutput)
}

// Specifies the keyvault resource id for kek encryption key.
func (o EncryptionKeyDetailsPtrOutput) KekVaultResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyDetails) *string {
		if v == nil {
			return nil
		}
		return v.KekVaultResourceID
	}).(pulumi.StringPtrOutput)
}

// Specifies the encryption key properties
type EncryptionKeyDetailsResponse struct {
	// The type of kek encryption key
	KekType *string `pulumi:"kekType"`
	// Specifies the url for kek encryption key.
	KekUrl *string `pulumi:"kekUrl"`
	// Specifies the keyvault resource id for kek encryption key.
	KekVaultResourceID *string `pulumi:"kekVaultResourceID"`
}

// EncryptionKeyDetailsResponseInput is an input type that accepts EncryptionKeyDetailsResponseArgs and EncryptionKeyDetailsResponseOutput values.
// You can construct a concrete instance of `EncryptionKeyDetailsResponseInput` via:
//
//          EncryptionKeyDetailsResponseArgs{...}
type EncryptionKeyDetailsResponseInput interface {
	pulumi.Input

	ToEncryptionKeyDetailsResponseOutput() EncryptionKeyDetailsResponseOutput
	ToEncryptionKeyDetailsResponseOutputWithContext(context.Context) EncryptionKeyDetailsResponseOutput
}

// Specifies the encryption key properties
type EncryptionKeyDetailsResponseArgs struct {
	// The type of kek encryption key
	KekType pulumi.StringPtrInput `pulumi:"kekType"`
	// Specifies the url for kek encryption key.
	KekUrl pulumi.StringPtrInput `pulumi:"kekUrl"`
	// Specifies the keyvault resource id for kek encryption key.
	KekVaultResourceID pulumi.StringPtrInput `pulumi:"kekVaultResourceID"`
}

func (EncryptionKeyDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeyDetailsResponse)(nil)).Elem()
}

func (i EncryptionKeyDetailsResponseArgs) ToEncryptionKeyDetailsResponseOutput() EncryptionKeyDetailsResponseOutput {
	return i.ToEncryptionKeyDetailsResponseOutputWithContext(context.Background())
}

func (i EncryptionKeyDetailsResponseArgs) ToEncryptionKeyDetailsResponseOutputWithContext(ctx context.Context) EncryptionKeyDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyDetailsResponseOutput)
}

func (i EncryptionKeyDetailsResponseArgs) ToEncryptionKeyDetailsResponsePtrOutput() EncryptionKeyDetailsResponsePtrOutput {
	return i.ToEncryptionKeyDetailsResponsePtrOutputWithContext(context.Background())
}

func (i EncryptionKeyDetailsResponseArgs) ToEncryptionKeyDetailsResponsePtrOutputWithContext(ctx context.Context) EncryptionKeyDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyDetailsResponseOutput).ToEncryptionKeyDetailsResponsePtrOutputWithContext(ctx)
}

// EncryptionKeyDetailsResponsePtrInput is an input type that accepts EncryptionKeyDetailsResponseArgs, EncryptionKeyDetailsResponsePtr and EncryptionKeyDetailsResponsePtrOutput values.
// You can construct a concrete instance of `EncryptionKeyDetailsResponsePtrInput` via:
//
//          EncryptionKeyDetailsResponseArgs{...}
//
//  or:
//
//          nil
type EncryptionKeyDetailsResponsePtrInput interface {
	pulumi.Input

	ToEncryptionKeyDetailsResponsePtrOutput() EncryptionKeyDetailsResponsePtrOutput
	ToEncryptionKeyDetailsResponsePtrOutputWithContext(context.Context) EncryptionKeyDetailsResponsePtrOutput
}

type encryptionKeyDetailsResponsePtrType EncryptionKeyDetailsResponseArgs

func EncryptionKeyDetailsResponsePtr(v *EncryptionKeyDetailsResponseArgs) EncryptionKeyDetailsResponsePtrInput {
	return (*encryptionKeyDetailsResponsePtrType)(v)
}

func (*encryptionKeyDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKeyDetailsResponse)(nil)).Elem()
}

func (i *encryptionKeyDetailsResponsePtrType) ToEncryptionKeyDetailsResponsePtrOutput() EncryptionKeyDetailsResponsePtrOutput {
	return i.ToEncryptionKeyDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *encryptionKeyDetailsResponsePtrType) ToEncryptionKeyDetailsResponsePtrOutputWithContext(ctx context.Context) EncryptionKeyDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyDetailsResponsePtrOutput)
}

// Specifies the encryption key properties
type EncryptionKeyDetailsResponseOutput struct{ *pulumi.OutputState }

func (EncryptionKeyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeyDetailsResponse)(nil)).Elem()
}

func (o EncryptionKeyDetailsResponseOutput) ToEncryptionKeyDetailsResponseOutput() EncryptionKeyDetailsResponseOutput {
	return o
}

func (o EncryptionKeyDetailsResponseOutput) ToEncryptionKeyDetailsResponseOutputWithContext(ctx context.Context) EncryptionKeyDetailsResponseOutput {
	return o
}

func (o EncryptionKeyDetailsResponseOutput) ToEncryptionKeyDetailsResponsePtrOutput() EncryptionKeyDetailsResponsePtrOutput {
	return o.ToEncryptionKeyDetailsResponsePtrOutputWithContext(context.Background())
}

func (o EncryptionKeyDetailsResponseOutput) ToEncryptionKeyDetailsResponsePtrOutputWithContext(ctx context.Context) EncryptionKeyDetailsResponsePtrOutput {
	return o.ApplyT(func(v EncryptionKeyDetailsResponse) *EncryptionKeyDetailsResponse {
		return &v
	}).(EncryptionKeyDetailsResponsePtrOutput)
}

// The type of kek encryption key
func (o EncryptionKeyDetailsResponseOutput) KekType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyDetailsResponse) *string { return v.KekType }).(pulumi.StringPtrOutput)
}

// Specifies the url for kek encryption key.
func (o EncryptionKeyDetailsResponseOutput) KekUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyDetailsResponse) *string { return v.KekUrl }).(pulumi.StringPtrOutput)
}

// Specifies the keyvault resource id for kek encryption key.
func (o EncryptionKeyDetailsResponseOutput) KekVaultResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyDetailsResponse) *string { return v.KekVaultResourceID }).(pulumi.StringPtrOutput)
}

type EncryptionKeyDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionKeyDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKeyDetailsResponse)(nil)).Elem()
}

func (o EncryptionKeyDetailsResponsePtrOutput) ToEncryptionKeyDetailsResponsePtrOutput() EncryptionKeyDetailsResponsePtrOutput {
	return o
}

func (o EncryptionKeyDetailsResponsePtrOutput) ToEncryptionKeyDetailsResponsePtrOutputWithContext(ctx context.Context) EncryptionKeyDetailsResponsePtrOutput {
	return o
}

func (o EncryptionKeyDetailsResponsePtrOutput) Elem() EncryptionKeyDetailsResponseOutput {
	return o.ApplyT(func(v *EncryptionKeyDetailsResponse) EncryptionKeyDetailsResponse { return *v }).(EncryptionKeyDetailsResponseOutput)
}

// The type of kek encryption key
func (o EncryptionKeyDetailsResponsePtrOutput) KekType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.KekType
	}).(pulumi.StringPtrOutput)
}

// Specifies the url for kek encryption key.
func (o EncryptionKeyDetailsResponsePtrOutput) KekUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.KekUrl
	}).(pulumi.StringPtrOutput)
}

// Specifies the keyvault resource id for kek encryption key.
func (o EncryptionKeyDetailsResponsePtrOutput) KekVaultResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.KekVaultResourceID
	}).(pulumi.StringPtrOutput)
}

// A property containing information about the blobs to be exported for an export job. This property is required for export jobs, but must not be specified for import jobs.
type Export struct {
	// The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root.
	BlobListBlobPath *string `pulumi:"blobListBlobPath"`
	// A collection of blob-path strings.
	BlobPath []string `pulumi:"blobPath"`
	// A collection of blob-prefix strings.
	BlobPathPrefix []string `pulumi:"blobPathPrefix"`
}

// ExportInput is an input type that accepts ExportArgs and ExportOutput values.
// You can construct a concrete instance of `ExportInput` via:
//
//          ExportArgs{...}
type ExportInput interface {
	pulumi.Input

	ToExportOutput() ExportOutput
	ToExportOutputWithContext(context.Context) ExportOutput
}

// A property containing information about the blobs to be exported for an export job. This property is required for export jobs, but must not be specified for import jobs.
type ExportArgs struct {
	// The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root.
	BlobListBlobPath pulumi.StringPtrInput `pulumi:"blobListBlobPath"`
	// A collection of blob-path strings.
	BlobPath pulumi.StringArrayInput `pulumi:"blobPath"`
	// A collection of blob-prefix strings.
	BlobPathPrefix pulumi.StringArrayInput `pulumi:"blobPathPrefix"`
}

func (ExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Export)(nil)).Elem()
}

func (i ExportArgs) ToExportOutput() ExportOutput {
	return i.ToExportOutputWithContext(context.Background())
}

func (i ExportArgs) ToExportOutputWithContext(ctx context.Context) ExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportOutput)
}

func (i ExportArgs) ToExportPtrOutput() ExportPtrOutput {
	return i.ToExportPtrOutputWithContext(context.Background())
}

func (i ExportArgs) ToExportPtrOutputWithContext(ctx context.Context) ExportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportOutput).ToExportPtrOutputWithContext(ctx)
}

// ExportPtrInput is an input type that accepts ExportArgs, ExportPtr and ExportPtrOutput values.
// You can construct a concrete instance of `ExportPtrInput` via:
//
//          ExportArgs{...}
//
//  or:
//
//          nil
type ExportPtrInput interface {
	pulumi.Input

	ToExportPtrOutput() ExportPtrOutput
	ToExportPtrOutputWithContext(context.Context) ExportPtrOutput
}

type exportPtrType ExportArgs

func ExportPtr(v *ExportArgs) ExportPtrInput {
	return (*exportPtrType)(v)
}

func (*exportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Export)(nil)).Elem()
}

func (i *exportPtrType) ToExportPtrOutput() ExportPtrOutput {
	return i.ToExportPtrOutputWithContext(context.Background())
}

func (i *exportPtrType) ToExportPtrOutputWithContext(ctx context.Context) ExportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportPtrOutput)
}

// A property containing information about the blobs to be exported for an export job. This property is required for export jobs, but must not be specified for import jobs.
type ExportOutput struct{ *pulumi.OutputState }

func (ExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Export)(nil)).Elem()
}

func (o ExportOutput) ToExportOutput() ExportOutput {
	return o
}

func (o ExportOutput) ToExportOutputWithContext(ctx context.Context) ExportOutput {
	return o
}

func (o ExportOutput) ToExportPtrOutput() ExportPtrOutput {
	return o.ToExportPtrOutputWithContext(context.Background())
}

func (o ExportOutput) ToExportPtrOutputWithContext(ctx context.Context) ExportPtrOutput {
	return o.ApplyT(func(v Export) *Export {
		return &v
	}).(ExportPtrOutput)
}

// The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root.
func (o ExportOutput) BlobListBlobPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Export) *string { return v.BlobListBlobPath }).(pulumi.StringPtrOutput)
}

// A collection of blob-path strings.
func (o ExportOutput) BlobPath() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Export) []string { return v.BlobPath }).(pulumi.StringArrayOutput)
}

// A collection of blob-prefix strings.
func (o ExportOutput) BlobPathPrefix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Export) []string { return v.BlobPathPrefix }).(pulumi.StringArrayOutput)
}

type ExportPtrOutput struct{ *pulumi.OutputState }

func (ExportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Export)(nil)).Elem()
}

func (o ExportPtrOutput) ToExportPtrOutput() ExportPtrOutput {
	return o
}

func (o ExportPtrOutput) ToExportPtrOutputWithContext(ctx context.Context) ExportPtrOutput {
	return o
}

func (o ExportPtrOutput) Elem() ExportOutput {
	return o.ApplyT(func(v *Export) Export { return *v }).(ExportOutput)
}

// The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root.
func (o ExportPtrOutput) BlobListBlobPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Export) *string {
		if v == nil {
			return nil
		}
		return v.BlobListBlobPath
	}).(pulumi.StringPtrOutput)
}

// A collection of blob-path strings.
func (o ExportPtrOutput) BlobPath() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Export) []string {
		if v == nil {
			return nil
		}
		return v.BlobPath
	}).(pulumi.StringArrayOutput)
}

// A collection of blob-prefix strings.
func (o ExportPtrOutput) BlobPathPrefix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Export) []string {
		if v == nil {
			return nil
		}
		return v.BlobPathPrefix
	}).(pulumi.StringArrayOutput)
}

// A property containing information about the blobs to be exported for an export job. This property is required for export jobs, but must not be specified for import jobs.
type ExportResponse struct {
	// The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root.
	BlobListBlobPath *string `pulumi:"blobListBlobPath"`
	// A collection of blob-path strings.
	BlobPath []string `pulumi:"blobPath"`
	// A collection of blob-prefix strings.
	BlobPathPrefix []string `pulumi:"blobPathPrefix"`
}

// ExportResponseInput is an input type that accepts ExportResponseArgs and ExportResponseOutput values.
// You can construct a concrete instance of `ExportResponseInput` via:
//
//          ExportResponseArgs{...}
type ExportResponseInput interface {
	pulumi.Input

	ToExportResponseOutput() ExportResponseOutput
	ToExportResponseOutputWithContext(context.Context) ExportResponseOutput
}

// A property containing information about the blobs to be exported for an export job. This property is required for export jobs, but must not be specified for import jobs.
type ExportResponseArgs struct {
	// The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root.
	BlobListBlobPath pulumi.StringPtrInput `pulumi:"blobListBlobPath"`
	// A collection of blob-path strings.
	BlobPath pulumi.StringArrayInput `pulumi:"blobPath"`
	// A collection of blob-prefix strings.
	BlobPathPrefix pulumi.StringArrayInput `pulumi:"blobPathPrefix"`
}

func (ExportResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportResponse)(nil)).Elem()
}

func (i ExportResponseArgs) ToExportResponseOutput() ExportResponseOutput {
	return i.ToExportResponseOutputWithContext(context.Background())
}

func (i ExportResponseArgs) ToExportResponseOutputWithContext(ctx context.Context) ExportResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportResponseOutput)
}

func (i ExportResponseArgs) ToExportResponsePtrOutput() ExportResponsePtrOutput {
	return i.ToExportResponsePtrOutputWithContext(context.Background())
}

func (i ExportResponseArgs) ToExportResponsePtrOutputWithContext(ctx context.Context) ExportResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportResponseOutput).ToExportResponsePtrOutputWithContext(ctx)
}

// ExportResponsePtrInput is an input type that accepts ExportResponseArgs, ExportResponsePtr and ExportResponsePtrOutput values.
// You can construct a concrete instance of `ExportResponsePtrInput` via:
//
//          ExportResponseArgs{...}
//
//  or:
//
//          nil
type ExportResponsePtrInput interface {
	pulumi.Input

	ToExportResponsePtrOutput() ExportResponsePtrOutput
	ToExportResponsePtrOutputWithContext(context.Context) ExportResponsePtrOutput
}

type exportResponsePtrType ExportResponseArgs

func ExportResponsePtr(v *ExportResponseArgs) ExportResponsePtrInput {
	return (*exportResponsePtrType)(v)
}

func (*exportResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExportResponse)(nil)).Elem()
}

func (i *exportResponsePtrType) ToExportResponsePtrOutput() ExportResponsePtrOutput {
	return i.ToExportResponsePtrOutputWithContext(context.Background())
}

func (i *exportResponsePtrType) ToExportResponsePtrOutputWithContext(ctx context.Context) ExportResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportResponsePtrOutput)
}

// A property containing information about the blobs to be exported for an export job. This property is required for export jobs, but must not be specified for import jobs.
type ExportResponseOutput struct{ *pulumi.OutputState }

func (ExportResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportResponse)(nil)).Elem()
}

func (o ExportResponseOutput) ToExportResponseOutput() ExportResponseOutput {
	return o
}

func (o ExportResponseOutput) ToExportResponseOutputWithContext(ctx context.Context) ExportResponseOutput {
	return o
}

func (o ExportResponseOutput) ToExportResponsePtrOutput() ExportResponsePtrOutput {
	return o.ToExportResponsePtrOutputWithContext(context.Background())
}

func (o ExportResponseOutput) ToExportResponsePtrOutputWithContext(ctx context.Context) ExportResponsePtrOutput {
	return o.ApplyT(func(v ExportResponse) *ExportResponse {
		return &v
	}).(ExportResponsePtrOutput)
}

// The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root.
func (o ExportResponseOutput) BlobListBlobPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExportResponse) *string { return v.BlobListBlobPath }).(pulumi.StringPtrOutput)
}

// A collection of blob-path strings.
func (o ExportResponseOutput) BlobPath() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExportResponse) []string { return v.BlobPath }).(pulumi.StringArrayOutput)
}

// A collection of blob-prefix strings.
func (o ExportResponseOutput) BlobPathPrefix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExportResponse) []string { return v.BlobPathPrefix }).(pulumi.StringArrayOutput)
}

type ExportResponsePtrOutput struct{ *pulumi.OutputState }

func (ExportResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExportResponse)(nil)).Elem()
}

func (o ExportResponsePtrOutput) ToExportResponsePtrOutput() ExportResponsePtrOutput {
	return o
}

func (o ExportResponsePtrOutput) ToExportResponsePtrOutputWithContext(ctx context.Context) ExportResponsePtrOutput {
	return o
}

func (o ExportResponsePtrOutput) Elem() ExportResponseOutput {
	return o.ApplyT(func(v *ExportResponse) ExportResponse { return *v }).(ExportResponseOutput)
}

// The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root.
func (o ExportResponsePtrOutput) BlobListBlobPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExportResponse) *string {
		if v == nil {
			return nil
		}
		return v.BlobListBlobPath
	}).(pulumi.StringPtrOutput)
}

// A collection of blob-path strings.
func (o ExportResponsePtrOutput) BlobPath() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExportResponse) []string {
		if v == nil {
			return nil
		}
		return v.BlobPath
	}).(pulumi.StringArrayOutput)
}

// A collection of blob-prefix strings.
func (o ExportResponsePtrOutput) BlobPathPrefix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExportResponse) []string {
		if v == nil {
			return nil
		}
		return v.BlobPathPrefix
	}).(pulumi.StringArrayOutput)
}

// Specifies the identity properties.
type IdentityDetailsResponse struct {
	// Specifies the principal id for the identity for the job.
	PrincipalId string `pulumi:"principalId"`
	// Specifies the tenant id for the identity for the job.
	TenantId string `pulumi:"tenantId"`
	// The type of identity
	Type *string `pulumi:"type"`
}

// IdentityDetailsResponseInput is an input type that accepts IdentityDetailsResponseArgs and IdentityDetailsResponseOutput values.
// You can construct a concrete instance of `IdentityDetailsResponseInput` via:
//
//          IdentityDetailsResponseArgs{...}
type IdentityDetailsResponseInput interface {
	pulumi.Input

	ToIdentityDetailsResponseOutput() IdentityDetailsResponseOutput
	ToIdentityDetailsResponseOutputWithContext(context.Context) IdentityDetailsResponseOutput
}

// Specifies the identity properties.
type IdentityDetailsResponseArgs struct {
	// Specifies the principal id for the identity for the job.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// Specifies the tenant id for the identity for the job.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of identity
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityDetailsResponse)(nil)).Elem()
}

func (i IdentityDetailsResponseArgs) ToIdentityDetailsResponseOutput() IdentityDetailsResponseOutput {
	return i.ToIdentityDetailsResponseOutputWithContext(context.Background())
}

func (i IdentityDetailsResponseArgs) ToIdentityDetailsResponseOutputWithContext(ctx context.Context) IdentityDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityDetailsResponseOutput)
}

func (i IdentityDetailsResponseArgs) ToIdentityDetailsResponsePtrOutput() IdentityDetailsResponsePtrOutput {
	return i.ToIdentityDetailsResponsePtrOutputWithContext(context.Background())
}

func (i IdentityDetailsResponseArgs) ToIdentityDetailsResponsePtrOutputWithContext(ctx context.Context) IdentityDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityDetailsResponseOutput).ToIdentityDetailsResponsePtrOutputWithContext(ctx)
}

// IdentityDetailsResponsePtrInput is an input type that accepts IdentityDetailsResponseArgs, IdentityDetailsResponsePtr and IdentityDetailsResponsePtrOutput values.
// You can construct a concrete instance of `IdentityDetailsResponsePtrInput` via:
//
//          IdentityDetailsResponseArgs{...}
//
//  or:
//
//          nil
type IdentityDetailsResponsePtrInput interface {
	pulumi.Input

	ToIdentityDetailsResponsePtrOutput() IdentityDetailsResponsePtrOutput
	ToIdentityDetailsResponsePtrOutputWithContext(context.Context) IdentityDetailsResponsePtrOutput
}

type identityDetailsResponsePtrType IdentityDetailsResponseArgs

func IdentityDetailsResponsePtr(v *IdentityDetailsResponseArgs) IdentityDetailsResponsePtrInput {
	return (*identityDetailsResponsePtrType)(v)
}

func (*identityDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityDetailsResponse)(nil)).Elem()
}

func (i *identityDetailsResponsePtrType) ToIdentityDetailsResponsePtrOutput() IdentityDetailsResponsePtrOutput {
	return i.ToIdentityDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *identityDetailsResponsePtrType) ToIdentityDetailsResponsePtrOutputWithContext(ctx context.Context) IdentityDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityDetailsResponsePtrOutput)
}

// Specifies the identity properties.
type IdentityDetailsResponseOutput struct{ *pulumi.OutputState }

func (IdentityDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityDetailsResponse)(nil)).Elem()
}

func (o IdentityDetailsResponseOutput) ToIdentityDetailsResponseOutput() IdentityDetailsResponseOutput {
	return o
}

func (o IdentityDetailsResponseOutput) ToIdentityDetailsResponseOutputWithContext(ctx context.Context) IdentityDetailsResponseOutput {
	return o
}

func (o IdentityDetailsResponseOutput) ToIdentityDetailsResponsePtrOutput() IdentityDetailsResponsePtrOutput {
	return o.ToIdentityDetailsResponsePtrOutputWithContext(context.Background())
}

func (o IdentityDetailsResponseOutput) ToIdentityDetailsResponsePtrOutputWithContext(ctx context.Context) IdentityDetailsResponsePtrOutput {
	return o.ApplyT(func(v IdentityDetailsResponse) *IdentityDetailsResponse {
		return &v
	}).(IdentityDetailsResponsePtrOutput)
}

// Specifies the principal id for the identity for the job.
func (o IdentityDetailsResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityDetailsResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Specifies the tenant id for the identity for the job.
func (o IdentityDetailsResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityDetailsResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity
func (o IdentityDetailsResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityDetailsResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityDetailsResponse)(nil)).Elem()
}

func (o IdentityDetailsResponsePtrOutput) ToIdentityDetailsResponsePtrOutput() IdentityDetailsResponsePtrOutput {
	return o
}

func (o IdentityDetailsResponsePtrOutput) ToIdentityDetailsResponsePtrOutputWithContext(ctx context.Context) IdentityDetailsResponsePtrOutput {
	return o
}

func (o IdentityDetailsResponsePtrOutput) Elem() IdentityDetailsResponseOutput {
	return o.ApplyT(func(v *IdentityDetailsResponse) IdentityDetailsResponse { return *v }).(IdentityDetailsResponseOutput)
}

// Specifies the principal id for the identity for the job.
func (o IdentityDetailsResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Specifies the tenant id for the identity for the job.
func (o IdentityDetailsResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity
func (o IdentityDetailsResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Specifies the job properties
type JobDetails struct {
	// Default value is false. Indicates whether the manifest files on the drives should be copied to block blobs.
	BackupDriveManifest *bool `pulumi:"backupDriveManifest"`
	// Indicates whether a request has been submitted to cancel the job.
	CancelRequested *bool `pulumi:"cancelRequested"`
	// Contains information about the package being shipped by the customer to the Microsoft data center.
	DeliveryPackage *PackageInformation `pulumi:"deliveryPackage"`
	// The virtual blob directory to which the copy logs and backups of drive manifest files (if enabled) will be stored.
	DiagnosticsPath *string `pulumi:"diagnosticsPath"`
	// List of up to ten drives that comprise the job. The drive list is a required element for an import job; it is not specified for export jobs.
	DriveList []DriveStatus `pulumi:"driveList"`
	// Contains information about the encryption key.
	EncryptionKey *EncryptionKeyDetails `pulumi:"encryptionKey"`
	// A property containing information about the blobs to be exported for an export job. This property is included for export jobs only.
	Export *Export `pulumi:"export"`
	// A blob path that points to a block blob containing a list of blob names that were not exported due to insufficient drive space. If all blobs were exported successfully, then this element is not included in the response.
	IncompleteBlobListUri *string `pulumi:"incompleteBlobListUri"`
	// The type of job
	JobType *string `pulumi:"jobType"`
	// Default value is Error. Indicates whether error logging or verbose logging will be enabled.
	LogLevel *string `pulumi:"logLevel"`
	// Overall percentage completed for the job.
	PercentComplete *int `pulumi:"percentComplete"`
	// Specifies the provisioning state of the job.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Specifies the return address information for the job.
	ReturnAddress *ReturnAddress `pulumi:"returnAddress"`
	// Contains information about the package being shipped from the Microsoft data center to the customer to return the drives. The format is the same as the deliveryPackage property above. This property is not included if the drives have not yet been returned.
	ReturnPackage *PackageInformation `pulumi:"returnPackage"`
	// Specifies the return carrier and customer's account with the carrier.
	ReturnShipping *ReturnShipping `pulumi:"returnShipping"`
	// Contains information about the Microsoft datacenter to which the drives should be shipped.
	ShippingInformation *ShippingInformation `pulumi:"shippingInformation"`
	// Current state of the job.
	State *string `pulumi:"state"`
	// The resource identifier of the storage account where data will be imported to or exported from.
	StorageAccountId *string `pulumi:"storageAccountId"`
}

// JobDetailsInput is an input type that accepts JobDetailsArgs and JobDetailsOutput values.
// You can construct a concrete instance of `JobDetailsInput` via:
//
//          JobDetailsArgs{...}
type JobDetailsInput interface {
	pulumi.Input

	ToJobDetailsOutput() JobDetailsOutput
	ToJobDetailsOutputWithContext(context.Context) JobDetailsOutput
}

// Specifies the job properties
type JobDetailsArgs struct {
	// Default value is false. Indicates whether the manifest files on the drives should be copied to block blobs.
	BackupDriveManifest pulumi.BoolPtrInput `pulumi:"backupDriveManifest"`
	// Indicates whether a request has been submitted to cancel the job.
	CancelRequested pulumi.BoolPtrInput `pulumi:"cancelRequested"`
	// Contains information about the package being shipped by the customer to the Microsoft data center.
	DeliveryPackage PackageInformationPtrInput `pulumi:"deliveryPackage"`
	// The virtual blob directory to which the copy logs and backups of drive manifest files (if enabled) will be stored.
	DiagnosticsPath pulumi.StringPtrInput `pulumi:"diagnosticsPath"`
	// List of up to ten drives that comprise the job. The drive list is a required element for an import job; it is not specified for export jobs.
	DriveList DriveStatusArrayInput `pulumi:"driveList"`
	// Contains information about the encryption key.
	EncryptionKey EncryptionKeyDetailsPtrInput `pulumi:"encryptionKey"`
	// A property containing information about the blobs to be exported for an export job. This property is included for export jobs only.
	Export ExportPtrInput `pulumi:"export"`
	// A blob path that points to a block blob containing a list of blob names that were not exported due to insufficient drive space. If all blobs were exported successfully, then this element is not included in the response.
	IncompleteBlobListUri pulumi.StringPtrInput `pulumi:"incompleteBlobListUri"`
	// The type of job
	JobType pulumi.StringPtrInput `pulumi:"jobType"`
	// Default value is Error. Indicates whether error logging or verbose logging will be enabled.
	LogLevel pulumi.StringPtrInput `pulumi:"logLevel"`
	// Overall percentage completed for the job.
	PercentComplete pulumi.IntPtrInput `pulumi:"percentComplete"`
	// Specifies the provisioning state of the job.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Specifies the return address information for the job.
	ReturnAddress ReturnAddressPtrInput `pulumi:"returnAddress"`
	// Contains information about the package being shipped from the Microsoft data center to the customer to return the drives. The format is the same as the deliveryPackage property above. This property is not included if the drives have not yet been returned.
	ReturnPackage PackageInformationPtrInput `pulumi:"returnPackage"`
	// Specifies the return carrier and customer's account with the carrier.
	ReturnShipping ReturnShippingPtrInput `pulumi:"returnShipping"`
	// Contains information about the Microsoft datacenter to which the drives should be shipped.
	ShippingInformation ShippingInformationPtrInput `pulumi:"shippingInformation"`
	// Current state of the job.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The resource identifier of the storage account where data will be imported to or exported from.
	StorageAccountId pulumi.StringPtrInput `pulumi:"storageAccountId"`
}

func (JobDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDetails)(nil)).Elem()
}

func (i JobDetailsArgs) ToJobDetailsOutput() JobDetailsOutput {
	return i.ToJobDetailsOutputWithContext(context.Background())
}

func (i JobDetailsArgs) ToJobDetailsOutputWithContext(ctx context.Context) JobDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDetailsOutput)
}

func (i JobDetailsArgs) ToJobDetailsPtrOutput() JobDetailsPtrOutput {
	return i.ToJobDetailsPtrOutputWithContext(context.Background())
}

func (i JobDetailsArgs) ToJobDetailsPtrOutputWithContext(ctx context.Context) JobDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDetailsOutput).ToJobDetailsPtrOutputWithContext(ctx)
}

// JobDetailsPtrInput is an input type that accepts JobDetailsArgs, JobDetailsPtr and JobDetailsPtrOutput values.
// You can construct a concrete instance of `JobDetailsPtrInput` via:
//
//          JobDetailsArgs{...}
//
//  or:
//
//          nil
type JobDetailsPtrInput interface {
	pulumi.Input

	ToJobDetailsPtrOutput() JobDetailsPtrOutput
	ToJobDetailsPtrOutputWithContext(context.Context) JobDetailsPtrOutput
}

type jobDetailsPtrType JobDetailsArgs

func JobDetailsPtr(v *JobDetailsArgs) JobDetailsPtrInput {
	return (*jobDetailsPtrType)(v)
}

func (*jobDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDetails)(nil)).Elem()
}

func (i *jobDetailsPtrType) ToJobDetailsPtrOutput() JobDetailsPtrOutput {
	return i.ToJobDetailsPtrOutputWithContext(context.Background())
}

func (i *jobDetailsPtrType) ToJobDetailsPtrOutputWithContext(ctx context.Context) JobDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDetailsPtrOutput)
}

// Specifies the job properties
type JobDetailsOutput struct{ *pulumi.OutputState }

func (JobDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDetails)(nil)).Elem()
}

func (o JobDetailsOutput) ToJobDetailsOutput() JobDetailsOutput {
	return o
}

func (o JobDetailsOutput) ToJobDetailsOutputWithContext(ctx context.Context) JobDetailsOutput {
	return o
}

func (o JobDetailsOutput) ToJobDetailsPtrOutput() JobDetailsPtrOutput {
	return o.ToJobDetailsPtrOutputWithContext(context.Background())
}

func (o JobDetailsOutput) ToJobDetailsPtrOutputWithContext(ctx context.Context) JobDetailsPtrOutput {
	return o.ApplyT(func(v JobDetails) *JobDetails {
		return &v
	}).(JobDetailsPtrOutput)
}

// Default value is false. Indicates whether the manifest files on the drives should be copied to block blobs.
func (o JobDetailsOutput) BackupDriveManifest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobDetails) *bool { return v.BackupDriveManifest }).(pulumi.BoolPtrOutput)
}

// Indicates whether a request has been submitted to cancel the job.
func (o JobDetailsOutput) CancelRequested() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobDetails) *bool { return v.CancelRequested }).(pulumi.BoolPtrOutput)
}

// Contains information about the package being shipped by the customer to the Microsoft data center.
func (o JobDetailsOutput) DeliveryPackage() PackageInformationPtrOutput {
	return o.ApplyT(func(v JobDetails) *PackageInformation { return v.DeliveryPackage }).(PackageInformationPtrOutput)
}

// The virtual blob directory to which the copy logs and backups of drive manifest files (if enabled) will be stored.
func (o JobDetailsOutput) DiagnosticsPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDetails) *string { return v.DiagnosticsPath }).(pulumi.StringPtrOutput)
}

// List of up to ten drives that comprise the job. The drive list is a required element for an import job; it is not specified for export jobs.
func (o JobDetailsOutput) DriveList() DriveStatusArrayOutput {
	return o.ApplyT(func(v JobDetails) []DriveStatus { return v.DriveList }).(DriveStatusArrayOutput)
}

// Contains information about the encryption key.
func (o JobDetailsOutput) EncryptionKey() EncryptionKeyDetailsPtrOutput {
	return o.ApplyT(func(v JobDetails) *EncryptionKeyDetails { return v.EncryptionKey }).(EncryptionKeyDetailsPtrOutput)
}

// A property containing information about the blobs to be exported for an export job. This property is included for export jobs only.
func (o JobDetailsOutput) Export() ExportPtrOutput {
	return o.ApplyT(func(v JobDetails) *Export { return v.Export }).(ExportPtrOutput)
}

// A blob path that points to a block blob containing a list of blob names that were not exported due to insufficient drive space. If all blobs were exported successfully, then this element is not included in the response.
func (o JobDetailsOutput) IncompleteBlobListUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDetails) *string { return v.IncompleteBlobListUri }).(pulumi.StringPtrOutput)
}

// The type of job
func (o JobDetailsOutput) JobType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDetails) *string { return v.JobType }).(pulumi.StringPtrOutput)
}

// Default value is Error. Indicates whether error logging or verbose logging will be enabled.
func (o JobDetailsOutput) LogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDetails) *string { return v.LogLevel }).(pulumi.StringPtrOutput)
}

// Overall percentage completed for the job.
func (o JobDetailsOutput) PercentComplete() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobDetails) *int { return v.PercentComplete }).(pulumi.IntPtrOutput)
}

// Specifies the provisioning state of the job.
func (o JobDetailsOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDetails) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Specifies the return address information for the job.
func (o JobDetailsOutput) ReturnAddress() ReturnAddressPtrOutput {
	return o.ApplyT(func(v JobDetails) *ReturnAddress { return v.ReturnAddress }).(ReturnAddressPtrOutput)
}

// Contains information about the package being shipped from the Microsoft data center to the customer to return the drives. The format is the same as the deliveryPackage property above. This property is not included if the drives have not yet been returned.
func (o JobDetailsOutput) ReturnPackage() PackageInformationPtrOutput {
	return o.ApplyT(func(v JobDetails) *PackageInformation { return v.ReturnPackage }).(PackageInformationPtrOutput)
}

// Specifies the return carrier and customer's account with the carrier.
func (o JobDetailsOutput) ReturnShipping() ReturnShippingPtrOutput {
	return o.ApplyT(func(v JobDetails) *ReturnShipping { return v.ReturnShipping }).(ReturnShippingPtrOutput)
}

// Contains information about the Microsoft datacenter to which the drives should be shipped.
func (o JobDetailsOutput) ShippingInformation() ShippingInformationPtrOutput {
	return o.ApplyT(func(v JobDetails) *ShippingInformation { return v.ShippingInformation }).(ShippingInformationPtrOutput)
}

// Current state of the job.
func (o JobDetailsOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDetails) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The resource identifier of the storage account where data will be imported to or exported from.
func (o JobDetailsOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDetails) *string { return v.StorageAccountId }).(pulumi.StringPtrOutput)
}

type JobDetailsPtrOutput struct{ *pulumi.OutputState }

func (JobDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDetails)(nil)).Elem()
}

func (o JobDetailsPtrOutput) ToJobDetailsPtrOutput() JobDetailsPtrOutput {
	return o
}

func (o JobDetailsPtrOutput) ToJobDetailsPtrOutputWithContext(ctx context.Context) JobDetailsPtrOutput {
	return o
}

func (o JobDetailsPtrOutput) Elem() JobDetailsOutput {
	return o.ApplyT(func(v *JobDetails) JobDetails { return *v }).(JobDetailsOutput)
}

// Default value is false. Indicates whether the manifest files on the drives should be copied to block blobs.
func (o JobDetailsPtrOutput) BackupDriveManifest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JobDetails) *bool {
		if v == nil {
			return nil
		}
		return v.BackupDriveManifest
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether a request has been submitted to cancel the job.
func (o JobDetailsPtrOutput) CancelRequested() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JobDetails) *bool {
		if v == nil {
			return nil
		}
		return v.CancelRequested
	}).(pulumi.BoolPtrOutput)
}

// Contains information about the package being shipped by the customer to the Microsoft data center.
func (o JobDetailsPtrOutput) DeliveryPackage() PackageInformationPtrOutput {
	return o.ApplyT(func(v *JobDetails) *PackageInformation {
		if v == nil {
			return nil
		}
		return v.DeliveryPackage
	}).(PackageInformationPtrOutput)
}

// The virtual blob directory to which the copy logs and backups of drive manifest files (if enabled) will be stored.
func (o JobDetailsPtrOutput) DiagnosticsPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDetails) *string {
		if v == nil {
			return nil
		}
		return v.DiagnosticsPath
	}).(pulumi.StringPtrOutput)
}

// List of up to ten drives that comprise the job. The drive list is a required element for an import job; it is not specified for export jobs.
func (o JobDetailsPtrOutput) DriveList() DriveStatusArrayOutput {
	return o.ApplyT(func(v *JobDetails) []DriveStatus {
		if v == nil {
			return nil
		}
		return v.DriveList
	}).(DriveStatusArrayOutput)
}

// Contains information about the encryption key.
func (o JobDetailsPtrOutput) EncryptionKey() EncryptionKeyDetailsPtrOutput {
	return o.ApplyT(func(v *JobDetails) *EncryptionKeyDetails {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(EncryptionKeyDetailsPtrOutput)
}

// A property containing information about the blobs to be exported for an export job. This property is included for export jobs only.
func (o JobDetailsPtrOutput) Export() ExportPtrOutput {
	return o.ApplyT(func(v *JobDetails) *Export {
		if v == nil {
			return nil
		}
		return v.Export
	}).(ExportPtrOutput)
}

// A blob path that points to a block blob containing a list of blob names that were not exported due to insufficient drive space. If all blobs were exported successfully, then this element is not included in the response.
func (o JobDetailsPtrOutput) IncompleteBlobListUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDetails) *string {
		if v == nil {
			return nil
		}
		return v.IncompleteBlobListUri
	}).(pulumi.StringPtrOutput)
}

// The type of job
func (o JobDetailsPtrOutput) JobType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDetails) *string {
		if v == nil {
			return nil
		}
		return v.JobType
	}).(pulumi.StringPtrOutput)
}

// Default value is Error. Indicates whether error logging or verbose logging will be enabled.
func (o JobDetailsPtrOutput) LogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDetails) *string {
		if v == nil {
			return nil
		}
		return v.LogLevel
	}).(pulumi.StringPtrOutput)
}

// Overall percentage completed for the job.
func (o JobDetailsPtrOutput) PercentComplete() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobDetails) *int {
		if v == nil {
			return nil
		}
		return v.PercentComplete
	}).(pulumi.IntPtrOutput)
}

// Specifies the provisioning state of the job.
func (o JobDetailsPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDetails) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Specifies the return address information for the job.
func (o JobDetailsPtrOutput) ReturnAddress() ReturnAddressPtrOutput {
	return o.ApplyT(func(v *JobDetails) *ReturnAddress {
		if v == nil {
			return nil
		}
		return v.ReturnAddress
	}).(ReturnAddressPtrOutput)
}

// Contains information about the package being shipped from the Microsoft data center to the customer to return the drives. The format is the same as the deliveryPackage property above. This property is not included if the drives have not yet been returned.
func (o JobDetailsPtrOutput) ReturnPackage() PackageInformationPtrOutput {
	return o.ApplyT(func(v *JobDetails) *PackageInformation {
		if v == nil {
			return nil
		}
		return v.ReturnPackage
	}).(PackageInformationPtrOutput)
}

// Specifies the return carrier and customer's account with the carrier.
func (o JobDetailsPtrOutput) ReturnShipping() ReturnShippingPtrOutput {
	return o.ApplyT(func(v *JobDetails) *ReturnShipping {
		if v == nil {
			return nil
		}
		return v.ReturnShipping
	}).(ReturnShippingPtrOutput)
}

// Contains information about the Microsoft datacenter to which the drives should be shipped.
func (o JobDetailsPtrOutput) ShippingInformation() ShippingInformationPtrOutput {
	return o.ApplyT(func(v *JobDetails) *ShippingInformation {
		if v == nil {
			return nil
		}
		return v.ShippingInformation
	}).(ShippingInformationPtrOutput)
}

// Current state of the job.
func (o JobDetailsPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDetails) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The resource identifier of the storage account where data will be imported to or exported from.
func (o JobDetailsPtrOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDetails) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountId
	}).(pulumi.StringPtrOutput)
}

// Specifies the job properties
type JobDetailsResponse struct {
	// Default value is false. Indicates whether the manifest files on the drives should be copied to block blobs.
	BackupDriveManifest *bool `pulumi:"backupDriveManifest"`
	// Indicates whether a request has been submitted to cancel the job.
	CancelRequested *bool `pulumi:"cancelRequested"`
	// Contains information about the package being shipped by the customer to the Microsoft data center.
	DeliveryPackage *PackageInformationResponse `pulumi:"deliveryPackage"`
	// The virtual blob directory to which the copy logs and backups of drive manifest files (if enabled) will be stored.
	DiagnosticsPath *string `pulumi:"diagnosticsPath"`
	// List of up to ten drives that comprise the job. The drive list is a required element for an import job; it is not specified for export jobs.
	DriveList []DriveStatusResponse `pulumi:"driveList"`
	// Contains information about the encryption key.
	EncryptionKey *EncryptionKeyDetailsResponse `pulumi:"encryptionKey"`
	// A property containing information about the blobs to be exported for an export job. This property is included for export jobs only.
	Export *ExportResponse `pulumi:"export"`
	// A blob path that points to a block blob containing a list of blob names that were not exported due to insufficient drive space. If all blobs were exported successfully, then this element is not included in the response.
	IncompleteBlobListUri *string `pulumi:"incompleteBlobListUri"`
	// The type of job
	JobType *string `pulumi:"jobType"`
	// Default value is Error. Indicates whether error logging or verbose logging will be enabled.
	LogLevel *string `pulumi:"logLevel"`
	// Overall percentage completed for the job.
	PercentComplete *int `pulumi:"percentComplete"`
	// Specifies the provisioning state of the job.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Specifies the return address information for the job.
	ReturnAddress *ReturnAddressResponse `pulumi:"returnAddress"`
	// Contains information about the package being shipped from the Microsoft data center to the customer to return the drives. The format is the same as the deliveryPackage property above. This property is not included if the drives have not yet been returned.
	ReturnPackage *PackageInformationResponse `pulumi:"returnPackage"`
	// Specifies the return carrier and customer's account with the carrier.
	ReturnShipping *ReturnShippingResponse `pulumi:"returnShipping"`
	// Contains information about the Microsoft datacenter to which the drives should be shipped.
	ShippingInformation *ShippingInformationResponse `pulumi:"shippingInformation"`
	// Current state of the job.
	State *string `pulumi:"state"`
	// The resource identifier of the storage account where data will be imported to or exported from.
	StorageAccountId *string `pulumi:"storageAccountId"`
}

// JobDetailsResponseInput is an input type that accepts JobDetailsResponseArgs and JobDetailsResponseOutput values.
// You can construct a concrete instance of `JobDetailsResponseInput` via:
//
//          JobDetailsResponseArgs{...}
type JobDetailsResponseInput interface {
	pulumi.Input

	ToJobDetailsResponseOutput() JobDetailsResponseOutput
	ToJobDetailsResponseOutputWithContext(context.Context) JobDetailsResponseOutput
}

// Specifies the job properties
type JobDetailsResponseArgs struct {
	// Default value is false. Indicates whether the manifest files on the drives should be copied to block blobs.
	BackupDriveManifest pulumi.BoolPtrInput `pulumi:"backupDriveManifest"`
	// Indicates whether a request has been submitted to cancel the job.
	CancelRequested pulumi.BoolPtrInput `pulumi:"cancelRequested"`
	// Contains information about the package being shipped by the customer to the Microsoft data center.
	DeliveryPackage PackageInformationResponsePtrInput `pulumi:"deliveryPackage"`
	// The virtual blob directory to which the copy logs and backups of drive manifest files (if enabled) will be stored.
	DiagnosticsPath pulumi.StringPtrInput `pulumi:"diagnosticsPath"`
	// List of up to ten drives that comprise the job. The drive list is a required element for an import job; it is not specified for export jobs.
	DriveList DriveStatusResponseArrayInput `pulumi:"driveList"`
	// Contains information about the encryption key.
	EncryptionKey EncryptionKeyDetailsResponsePtrInput `pulumi:"encryptionKey"`
	// A property containing information about the blobs to be exported for an export job. This property is included for export jobs only.
	Export ExportResponsePtrInput `pulumi:"export"`
	// A blob path that points to a block blob containing a list of blob names that were not exported due to insufficient drive space. If all blobs were exported successfully, then this element is not included in the response.
	IncompleteBlobListUri pulumi.StringPtrInput `pulumi:"incompleteBlobListUri"`
	// The type of job
	JobType pulumi.StringPtrInput `pulumi:"jobType"`
	// Default value is Error. Indicates whether error logging or verbose logging will be enabled.
	LogLevel pulumi.StringPtrInput `pulumi:"logLevel"`
	// Overall percentage completed for the job.
	PercentComplete pulumi.IntPtrInput `pulumi:"percentComplete"`
	// Specifies the provisioning state of the job.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Specifies the return address information for the job.
	ReturnAddress ReturnAddressResponsePtrInput `pulumi:"returnAddress"`
	// Contains information about the package being shipped from the Microsoft data center to the customer to return the drives. The format is the same as the deliveryPackage property above. This property is not included if the drives have not yet been returned.
	ReturnPackage PackageInformationResponsePtrInput `pulumi:"returnPackage"`
	// Specifies the return carrier and customer's account with the carrier.
	ReturnShipping ReturnShippingResponsePtrInput `pulumi:"returnShipping"`
	// Contains information about the Microsoft datacenter to which the drives should be shipped.
	ShippingInformation ShippingInformationResponsePtrInput `pulumi:"shippingInformation"`
	// Current state of the job.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The resource identifier of the storage account where data will be imported to or exported from.
	StorageAccountId pulumi.StringPtrInput `pulumi:"storageAccountId"`
}

func (JobDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDetailsResponse)(nil)).Elem()
}

func (i JobDetailsResponseArgs) ToJobDetailsResponseOutput() JobDetailsResponseOutput {
	return i.ToJobDetailsResponseOutputWithContext(context.Background())
}

func (i JobDetailsResponseArgs) ToJobDetailsResponseOutputWithContext(ctx context.Context) JobDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDetailsResponseOutput)
}

func (i JobDetailsResponseArgs) ToJobDetailsResponsePtrOutput() JobDetailsResponsePtrOutput {
	return i.ToJobDetailsResponsePtrOutputWithContext(context.Background())
}

func (i JobDetailsResponseArgs) ToJobDetailsResponsePtrOutputWithContext(ctx context.Context) JobDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDetailsResponseOutput).ToJobDetailsResponsePtrOutputWithContext(ctx)
}

// JobDetailsResponsePtrInput is an input type that accepts JobDetailsResponseArgs, JobDetailsResponsePtr and JobDetailsResponsePtrOutput values.
// You can construct a concrete instance of `JobDetailsResponsePtrInput` via:
//
//          JobDetailsResponseArgs{...}
//
//  or:
//
//          nil
type JobDetailsResponsePtrInput interface {
	pulumi.Input

	ToJobDetailsResponsePtrOutput() JobDetailsResponsePtrOutput
	ToJobDetailsResponsePtrOutputWithContext(context.Context) JobDetailsResponsePtrOutput
}

type jobDetailsResponsePtrType JobDetailsResponseArgs

func JobDetailsResponsePtr(v *JobDetailsResponseArgs) JobDetailsResponsePtrInput {
	return (*jobDetailsResponsePtrType)(v)
}

func (*jobDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDetailsResponse)(nil)).Elem()
}

func (i *jobDetailsResponsePtrType) ToJobDetailsResponsePtrOutput() JobDetailsResponsePtrOutput {
	return i.ToJobDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *jobDetailsResponsePtrType) ToJobDetailsResponsePtrOutputWithContext(ctx context.Context) JobDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDetailsResponsePtrOutput)
}

// Specifies the job properties
type JobDetailsResponseOutput struct{ *pulumi.OutputState }

func (JobDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDetailsResponse)(nil)).Elem()
}

func (o JobDetailsResponseOutput) ToJobDetailsResponseOutput() JobDetailsResponseOutput {
	return o
}

func (o JobDetailsResponseOutput) ToJobDetailsResponseOutputWithContext(ctx context.Context) JobDetailsResponseOutput {
	return o
}

func (o JobDetailsResponseOutput) ToJobDetailsResponsePtrOutput() JobDetailsResponsePtrOutput {
	return o.ToJobDetailsResponsePtrOutputWithContext(context.Background())
}

func (o JobDetailsResponseOutput) ToJobDetailsResponsePtrOutputWithContext(ctx context.Context) JobDetailsResponsePtrOutput {
	return o.ApplyT(func(v JobDetailsResponse) *JobDetailsResponse {
		return &v
	}).(JobDetailsResponsePtrOutput)
}

// Default value is false. Indicates whether the manifest files on the drives should be copied to block blobs.
func (o JobDetailsResponseOutput) BackupDriveManifest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobDetailsResponse) *bool { return v.BackupDriveManifest }).(pulumi.BoolPtrOutput)
}

// Indicates whether a request has been submitted to cancel the job.
func (o JobDetailsResponseOutput) CancelRequested() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobDetailsResponse) *bool { return v.CancelRequested }).(pulumi.BoolPtrOutput)
}

// Contains information about the package being shipped by the customer to the Microsoft data center.
func (o JobDetailsResponseOutput) DeliveryPackage() PackageInformationResponsePtrOutput {
	return o.ApplyT(func(v JobDetailsResponse) *PackageInformationResponse { return v.DeliveryPackage }).(PackageInformationResponsePtrOutput)
}

// The virtual blob directory to which the copy logs and backups of drive manifest files (if enabled) will be stored.
func (o JobDetailsResponseOutput) DiagnosticsPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDetailsResponse) *string { return v.DiagnosticsPath }).(pulumi.StringPtrOutput)
}

// List of up to ten drives that comprise the job. The drive list is a required element for an import job; it is not specified for export jobs.
func (o JobDetailsResponseOutput) DriveList() DriveStatusResponseArrayOutput {
	return o.ApplyT(func(v JobDetailsResponse) []DriveStatusResponse { return v.DriveList }).(DriveStatusResponseArrayOutput)
}

// Contains information about the encryption key.
func (o JobDetailsResponseOutput) EncryptionKey() EncryptionKeyDetailsResponsePtrOutput {
	return o.ApplyT(func(v JobDetailsResponse) *EncryptionKeyDetailsResponse { return v.EncryptionKey }).(EncryptionKeyDetailsResponsePtrOutput)
}

// A property containing information about the blobs to be exported for an export job. This property is included for export jobs only.
func (o JobDetailsResponseOutput) Export() ExportResponsePtrOutput {
	return o.ApplyT(func(v JobDetailsResponse) *ExportResponse { return v.Export }).(ExportResponsePtrOutput)
}

// A blob path that points to a block blob containing a list of blob names that were not exported due to insufficient drive space. If all blobs were exported successfully, then this element is not included in the response.
func (o JobDetailsResponseOutput) IncompleteBlobListUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDetailsResponse) *string { return v.IncompleteBlobListUri }).(pulumi.StringPtrOutput)
}

// The type of job
func (o JobDetailsResponseOutput) JobType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDetailsResponse) *string { return v.JobType }).(pulumi.StringPtrOutput)
}

// Default value is Error. Indicates whether error logging or verbose logging will be enabled.
func (o JobDetailsResponseOutput) LogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDetailsResponse) *string { return v.LogLevel }).(pulumi.StringPtrOutput)
}

// Overall percentage completed for the job.
func (o JobDetailsResponseOutput) PercentComplete() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobDetailsResponse) *int { return v.PercentComplete }).(pulumi.IntPtrOutput)
}

// Specifies the provisioning state of the job.
func (o JobDetailsResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDetailsResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Specifies the return address information for the job.
func (o JobDetailsResponseOutput) ReturnAddress() ReturnAddressResponsePtrOutput {
	return o.ApplyT(func(v JobDetailsResponse) *ReturnAddressResponse { return v.ReturnAddress }).(ReturnAddressResponsePtrOutput)
}

// Contains information about the package being shipped from the Microsoft data center to the customer to return the drives. The format is the same as the deliveryPackage property above. This property is not included if the drives have not yet been returned.
func (o JobDetailsResponseOutput) ReturnPackage() PackageInformationResponsePtrOutput {
	return o.ApplyT(func(v JobDetailsResponse) *PackageInformationResponse { return v.ReturnPackage }).(PackageInformationResponsePtrOutput)
}

// Specifies the return carrier and customer's account with the carrier.
func (o JobDetailsResponseOutput) ReturnShipping() ReturnShippingResponsePtrOutput {
	return o.ApplyT(func(v JobDetailsResponse) *ReturnShippingResponse { return v.ReturnShipping }).(ReturnShippingResponsePtrOutput)
}

// Contains information about the Microsoft datacenter to which the drives should be shipped.
func (o JobDetailsResponseOutput) ShippingInformation() ShippingInformationResponsePtrOutput {
	return o.ApplyT(func(v JobDetailsResponse) *ShippingInformationResponse { return v.ShippingInformation }).(ShippingInformationResponsePtrOutput)
}

// Current state of the job.
func (o JobDetailsResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDetailsResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The resource identifier of the storage account where data will be imported to or exported from.
func (o JobDetailsResponseOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDetailsResponse) *string { return v.StorageAccountId }).(pulumi.StringPtrOutput)
}

type JobDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (JobDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDetailsResponse)(nil)).Elem()
}

func (o JobDetailsResponsePtrOutput) ToJobDetailsResponsePtrOutput() JobDetailsResponsePtrOutput {
	return o
}

func (o JobDetailsResponsePtrOutput) ToJobDetailsResponsePtrOutputWithContext(ctx context.Context) JobDetailsResponsePtrOutput {
	return o
}

func (o JobDetailsResponsePtrOutput) Elem() JobDetailsResponseOutput {
	return o.ApplyT(func(v *JobDetailsResponse) JobDetailsResponse { return *v }).(JobDetailsResponseOutput)
}

// Default value is false. Indicates whether the manifest files on the drives should be copied to block blobs.
func (o JobDetailsResponsePtrOutput) BackupDriveManifest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JobDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.BackupDriveManifest
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether a request has been submitted to cancel the job.
func (o JobDetailsResponsePtrOutput) CancelRequested() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JobDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CancelRequested
	}).(pulumi.BoolPtrOutput)
}

// Contains information about the package being shipped by the customer to the Microsoft data center.
func (o JobDetailsResponsePtrOutput) DeliveryPackage() PackageInformationResponsePtrOutput {
	return o.ApplyT(func(v *JobDetailsResponse) *PackageInformationResponse {
		if v == nil {
			return nil
		}
		return v.DeliveryPackage
	}).(PackageInformationResponsePtrOutput)
}

// The virtual blob directory to which the copy logs and backups of drive manifest files (if enabled) will be stored.
func (o JobDetailsResponsePtrOutput) DiagnosticsPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiagnosticsPath
	}).(pulumi.StringPtrOutput)
}

// List of up to ten drives that comprise the job. The drive list is a required element for an import job; it is not specified for export jobs.
func (o JobDetailsResponsePtrOutput) DriveList() DriveStatusResponseArrayOutput {
	return o.ApplyT(func(v *JobDetailsResponse) []DriveStatusResponse {
		if v == nil {
			return nil
		}
		return v.DriveList
	}).(DriveStatusResponseArrayOutput)
}

// Contains information about the encryption key.
func (o JobDetailsResponsePtrOutput) EncryptionKey() EncryptionKeyDetailsResponsePtrOutput {
	return o.ApplyT(func(v *JobDetailsResponse) *EncryptionKeyDetailsResponse {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(EncryptionKeyDetailsResponsePtrOutput)
}

// A property containing information about the blobs to be exported for an export job. This property is included for export jobs only.
func (o JobDetailsResponsePtrOutput) Export() ExportResponsePtrOutput {
	return o.ApplyT(func(v *JobDetailsResponse) *ExportResponse {
		if v == nil {
			return nil
		}
		return v.Export
	}).(ExportResponsePtrOutput)
}

// A blob path that points to a block blob containing a list of blob names that were not exported due to insufficient drive space. If all blobs were exported successfully, then this element is not included in the response.
func (o JobDetailsResponsePtrOutput) IncompleteBlobListUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.IncompleteBlobListUri
	}).(pulumi.StringPtrOutput)
}

// The type of job
func (o JobDetailsResponsePtrOutput) JobType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.JobType
	}).(pulumi.StringPtrOutput)
}

// Default value is Error. Indicates whether error logging or verbose logging will be enabled.
func (o JobDetailsResponsePtrOutput) LogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LogLevel
	}).(pulumi.StringPtrOutput)
}

// Overall percentage completed for the job.
func (o JobDetailsResponsePtrOutput) PercentComplete() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.PercentComplete
	}).(pulumi.IntPtrOutput)
}

// Specifies the provisioning state of the job.
func (o JobDetailsResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Specifies the return address information for the job.
func (o JobDetailsResponsePtrOutput) ReturnAddress() ReturnAddressResponsePtrOutput {
	return o.ApplyT(func(v *JobDetailsResponse) *ReturnAddressResponse {
		if v == nil {
			return nil
		}
		return v.ReturnAddress
	}).(ReturnAddressResponsePtrOutput)
}

// Contains information about the package being shipped from the Microsoft data center to the customer to return the drives. The format is the same as the deliveryPackage property above. This property is not included if the drives have not yet been returned.
func (o JobDetailsResponsePtrOutput) ReturnPackage() PackageInformationResponsePtrOutput {
	return o.ApplyT(func(v *JobDetailsResponse) *PackageInformationResponse {
		if v == nil {
			return nil
		}
		return v.ReturnPackage
	}).(PackageInformationResponsePtrOutput)
}

// Specifies the return carrier and customer's account with the carrier.
func (o JobDetailsResponsePtrOutput) ReturnShipping() ReturnShippingResponsePtrOutput {
	return o.ApplyT(func(v *JobDetailsResponse) *ReturnShippingResponse {
		if v == nil {
			return nil
		}
		return v.ReturnShipping
	}).(ReturnShippingResponsePtrOutput)
}

// Contains information about the Microsoft datacenter to which the drives should be shipped.
func (o JobDetailsResponsePtrOutput) ShippingInformation() ShippingInformationResponsePtrOutput {
	return o.ApplyT(func(v *JobDetailsResponse) *ShippingInformationResponse {
		if v == nil {
			return nil
		}
		return v.ShippingInformation
	}).(ShippingInformationResponsePtrOutput)
}

// Current state of the job.
func (o JobDetailsResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The resource identifier of the storage account where data will be imported to or exported from.
func (o JobDetailsResponsePtrOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountId
	}).(pulumi.StringPtrOutput)
}

// Contains information about the package being shipped by the customer to the Microsoft data center.
type PackageInformation struct {
	// The name of the carrier that is used to ship the import or export drives.
	CarrierName string `pulumi:"carrierName"`
	// The number of drives included in the package.
	DriveCount int `pulumi:"driveCount"`
	// The date when the package is shipped.
	ShipDate string `pulumi:"shipDate"`
	// The tracking number of the package.
	TrackingNumber string `pulumi:"trackingNumber"`
}

// PackageInformationInput is an input type that accepts PackageInformationArgs and PackageInformationOutput values.
// You can construct a concrete instance of `PackageInformationInput` via:
//
//          PackageInformationArgs{...}
type PackageInformationInput interface {
	pulumi.Input

	ToPackageInformationOutput() PackageInformationOutput
	ToPackageInformationOutputWithContext(context.Context) PackageInformationOutput
}

// Contains information about the package being shipped by the customer to the Microsoft data center.
type PackageInformationArgs struct {
	// The name of the carrier that is used to ship the import or export drives.
	CarrierName pulumi.StringInput `pulumi:"carrierName"`
	// The number of drives included in the package.
	DriveCount pulumi.IntInput `pulumi:"driveCount"`
	// The date when the package is shipped.
	ShipDate pulumi.StringInput `pulumi:"shipDate"`
	// The tracking number of the package.
	TrackingNumber pulumi.StringInput `pulumi:"trackingNumber"`
}

func (PackageInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageInformation)(nil)).Elem()
}

func (i PackageInformationArgs) ToPackageInformationOutput() PackageInformationOutput {
	return i.ToPackageInformationOutputWithContext(context.Background())
}

func (i PackageInformationArgs) ToPackageInformationOutputWithContext(ctx context.Context) PackageInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageInformationOutput)
}

func (i PackageInformationArgs) ToPackageInformationPtrOutput() PackageInformationPtrOutput {
	return i.ToPackageInformationPtrOutputWithContext(context.Background())
}

func (i PackageInformationArgs) ToPackageInformationPtrOutputWithContext(ctx context.Context) PackageInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageInformationOutput).ToPackageInformationPtrOutputWithContext(ctx)
}

// PackageInformationPtrInput is an input type that accepts PackageInformationArgs, PackageInformationPtr and PackageInformationPtrOutput values.
// You can construct a concrete instance of `PackageInformationPtrInput` via:
//
//          PackageInformationArgs{...}
//
//  or:
//
//          nil
type PackageInformationPtrInput interface {
	pulumi.Input

	ToPackageInformationPtrOutput() PackageInformationPtrOutput
	ToPackageInformationPtrOutputWithContext(context.Context) PackageInformationPtrOutput
}

type packageInformationPtrType PackageInformationArgs

func PackageInformationPtr(v *PackageInformationArgs) PackageInformationPtrInput {
	return (*packageInformationPtrType)(v)
}

func (*packageInformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageInformation)(nil)).Elem()
}

func (i *packageInformationPtrType) ToPackageInformationPtrOutput() PackageInformationPtrOutput {
	return i.ToPackageInformationPtrOutputWithContext(context.Background())
}

func (i *packageInformationPtrType) ToPackageInformationPtrOutputWithContext(ctx context.Context) PackageInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageInformationPtrOutput)
}

// Contains information about the package being shipped by the customer to the Microsoft data center.
type PackageInformationOutput struct{ *pulumi.OutputState }

func (PackageInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageInformation)(nil)).Elem()
}

func (o PackageInformationOutput) ToPackageInformationOutput() PackageInformationOutput {
	return o
}

func (o PackageInformationOutput) ToPackageInformationOutputWithContext(ctx context.Context) PackageInformationOutput {
	return o
}

func (o PackageInformationOutput) ToPackageInformationPtrOutput() PackageInformationPtrOutput {
	return o.ToPackageInformationPtrOutputWithContext(context.Background())
}

func (o PackageInformationOutput) ToPackageInformationPtrOutputWithContext(ctx context.Context) PackageInformationPtrOutput {
	return o.ApplyT(func(v PackageInformation) *PackageInformation {
		return &v
	}).(PackageInformationPtrOutput)
}

// The name of the carrier that is used to ship the import or export drives.
func (o PackageInformationOutput) CarrierName() pulumi.StringOutput {
	return o.ApplyT(func(v PackageInformation) string { return v.CarrierName }).(pulumi.StringOutput)
}

// The number of drives included in the package.
func (o PackageInformationOutput) DriveCount() pulumi.IntOutput {
	return o.ApplyT(func(v PackageInformation) int { return v.DriveCount }).(pulumi.IntOutput)
}

// The date when the package is shipped.
func (o PackageInformationOutput) ShipDate() pulumi.StringOutput {
	return o.ApplyT(func(v PackageInformation) string { return v.ShipDate }).(pulumi.StringOutput)
}

// The tracking number of the package.
func (o PackageInformationOutput) TrackingNumber() pulumi.StringOutput {
	return o.ApplyT(func(v PackageInformation) string { return v.TrackingNumber }).(pulumi.StringOutput)
}

type PackageInformationPtrOutput struct{ *pulumi.OutputState }

func (PackageInformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageInformation)(nil)).Elem()
}

func (o PackageInformationPtrOutput) ToPackageInformationPtrOutput() PackageInformationPtrOutput {
	return o
}

func (o PackageInformationPtrOutput) ToPackageInformationPtrOutputWithContext(ctx context.Context) PackageInformationPtrOutput {
	return o
}

func (o PackageInformationPtrOutput) Elem() PackageInformationOutput {
	return o.ApplyT(func(v *PackageInformation) PackageInformation { return *v }).(PackageInformationOutput)
}

// The name of the carrier that is used to ship the import or export drives.
func (o PackageInformationPtrOutput) CarrierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageInformation) *string {
		if v == nil {
			return nil
		}
		return &v.CarrierName
	}).(pulumi.StringPtrOutput)
}

// The number of drives included in the package.
func (o PackageInformationPtrOutput) DriveCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PackageInformation) *int {
		if v == nil {
			return nil
		}
		return &v.DriveCount
	}).(pulumi.IntPtrOutput)
}

// The date when the package is shipped.
func (o PackageInformationPtrOutput) ShipDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageInformation) *string {
		if v == nil {
			return nil
		}
		return &v.ShipDate
	}).(pulumi.StringPtrOutput)
}

// The tracking number of the package.
func (o PackageInformationPtrOutput) TrackingNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageInformation) *string {
		if v == nil {
			return nil
		}
		return &v.TrackingNumber
	}).(pulumi.StringPtrOutput)
}

// Contains information about the package being shipped by the customer to the Microsoft data center.
type PackageInformationResponse struct {
	// The name of the carrier that is used to ship the import or export drives.
	CarrierName string `pulumi:"carrierName"`
	// The number of drives included in the package.
	DriveCount int `pulumi:"driveCount"`
	// The date when the package is shipped.
	ShipDate string `pulumi:"shipDate"`
	// The tracking number of the package.
	TrackingNumber string `pulumi:"trackingNumber"`
}

// PackageInformationResponseInput is an input type that accepts PackageInformationResponseArgs and PackageInformationResponseOutput values.
// You can construct a concrete instance of `PackageInformationResponseInput` via:
//
//          PackageInformationResponseArgs{...}
type PackageInformationResponseInput interface {
	pulumi.Input

	ToPackageInformationResponseOutput() PackageInformationResponseOutput
	ToPackageInformationResponseOutputWithContext(context.Context) PackageInformationResponseOutput
}

// Contains information about the package being shipped by the customer to the Microsoft data center.
type PackageInformationResponseArgs struct {
	// The name of the carrier that is used to ship the import or export drives.
	CarrierName pulumi.StringInput `pulumi:"carrierName"`
	// The number of drives included in the package.
	DriveCount pulumi.IntInput `pulumi:"driveCount"`
	// The date when the package is shipped.
	ShipDate pulumi.StringInput `pulumi:"shipDate"`
	// The tracking number of the package.
	TrackingNumber pulumi.StringInput `pulumi:"trackingNumber"`
}

func (PackageInformationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageInformationResponse)(nil)).Elem()
}

func (i PackageInformationResponseArgs) ToPackageInformationResponseOutput() PackageInformationResponseOutput {
	return i.ToPackageInformationResponseOutputWithContext(context.Background())
}

func (i PackageInformationResponseArgs) ToPackageInformationResponseOutputWithContext(ctx context.Context) PackageInformationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageInformationResponseOutput)
}

func (i PackageInformationResponseArgs) ToPackageInformationResponsePtrOutput() PackageInformationResponsePtrOutput {
	return i.ToPackageInformationResponsePtrOutputWithContext(context.Background())
}

func (i PackageInformationResponseArgs) ToPackageInformationResponsePtrOutputWithContext(ctx context.Context) PackageInformationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageInformationResponseOutput).ToPackageInformationResponsePtrOutputWithContext(ctx)
}

// PackageInformationResponsePtrInput is an input type that accepts PackageInformationResponseArgs, PackageInformationResponsePtr and PackageInformationResponsePtrOutput values.
// You can construct a concrete instance of `PackageInformationResponsePtrInput` via:
//
//          PackageInformationResponseArgs{...}
//
//  or:
//
//          nil
type PackageInformationResponsePtrInput interface {
	pulumi.Input

	ToPackageInformationResponsePtrOutput() PackageInformationResponsePtrOutput
	ToPackageInformationResponsePtrOutputWithContext(context.Context) PackageInformationResponsePtrOutput
}

type packageInformationResponsePtrType PackageInformationResponseArgs

func PackageInformationResponsePtr(v *PackageInformationResponseArgs) PackageInformationResponsePtrInput {
	return (*packageInformationResponsePtrType)(v)
}

func (*packageInformationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageInformationResponse)(nil)).Elem()
}

func (i *packageInformationResponsePtrType) ToPackageInformationResponsePtrOutput() PackageInformationResponsePtrOutput {
	return i.ToPackageInformationResponsePtrOutputWithContext(context.Background())
}

func (i *packageInformationResponsePtrType) ToPackageInformationResponsePtrOutputWithContext(ctx context.Context) PackageInformationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageInformationResponsePtrOutput)
}

// Contains information about the package being shipped by the customer to the Microsoft data center.
type PackageInformationResponseOutput struct{ *pulumi.OutputState }

func (PackageInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageInformationResponse)(nil)).Elem()
}

func (o PackageInformationResponseOutput) ToPackageInformationResponseOutput() PackageInformationResponseOutput {
	return o
}

func (o PackageInformationResponseOutput) ToPackageInformationResponseOutputWithContext(ctx context.Context) PackageInformationResponseOutput {
	return o
}

func (o PackageInformationResponseOutput) ToPackageInformationResponsePtrOutput() PackageInformationResponsePtrOutput {
	return o.ToPackageInformationResponsePtrOutputWithContext(context.Background())
}

func (o PackageInformationResponseOutput) ToPackageInformationResponsePtrOutputWithContext(ctx context.Context) PackageInformationResponsePtrOutput {
	return o.ApplyT(func(v PackageInformationResponse) *PackageInformationResponse {
		return &v
	}).(PackageInformationResponsePtrOutput)
}

// The name of the carrier that is used to ship the import or export drives.
func (o PackageInformationResponseOutput) CarrierName() pulumi.StringOutput {
	return o.ApplyT(func(v PackageInformationResponse) string { return v.CarrierName }).(pulumi.StringOutput)
}

// The number of drives included in the package.
func (o PackageInformationResponseOutput) DriveCount() pulumi.IntOutput {
	return o.ApplyT(func(v PackageInformationResponse) int { return v.DriveCount }).(pulumi.IntOutput)
}

// The date when the package is shipped.
func (o PackageInformationResponseOutput) ShipDate() pulumi.StringOutput {
	return o.ApplyT(func(v PackageInformationResponse) string { return v.ShipDate }).(pulumi.StringOutput)
}

// The tracking number of the package.
func (o PackageInformationResponseOutput) TrackingNumber() pulumi.StringOutput {
	return o.ApplyT(func(v PackageInformationResponse) string { return v.TrackingNumber }).(pulumi.StringOutput)
}

type PackageInformationResponsePtrOutput struct{ *pulumi.OutputState }

func (PackageInformationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageInformationResponse)(nil)).Elem()
}

func (o PackageInformationResponsePtrOutput) ToPackageInformationResponsePtrOutput() PackageInformationResponsePtrOutput {
	return o
}

func (o PackageInformationResponsePtrOutput) ToPackageInformationResponsePtrOutputWithContext(ctx context.Context) PackageInformationResponsePtrOutput {
	return o
}

func (o PackageInformationResponsePtrOutput) Elem() PackageInformationResponseOutput {
	return o.ApplyT(func(v *PackageInformationResponse) PackageInformationResponse { return *v }).(PackageInformationResponseOutput)
}

// The name of the carrier that is used to ship the import or export drives.
func (o PackageInformationResponsePtrOutput) CarrierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CarrierName
	}).(pulumi.StringPtrOutput)
}

// The number of drives included in the package.
func (o PackageInformationResponsePtrOutput) DriveCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PackageInformationResponse) *int {
		if v == nil {
			return nil
		}
		return &v.DriveCount
	}).(pulumi.IntPtrOutput)
}

// The date when the package is shipped.
func (o PackageInformationResponsePtrOutput) ShipDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ShipDate
	}).(pulumi.StringPtrOutput)
}

// The tracking number of the package.
func (o PackageInformationResponsePtrOutput) TrackingNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TrackingNumber
	}).(pulumi.StringPtrOutput)
}

// Specifies the return address information for the job.
type ReturnAddress struct {
	// The city name to use when returning the drives.
	City string `pulumi:"city"`
	// The country or region to use when returning the drives.
	CountryOrRegion string `pulumi:"countryOrRegion"`
	// Email address of the recipient of the returned drives.
	Email string `pulumi:"email"`
	// Phone number of the recipient of the returned drives.
	Phone string `pulumi:"phone"`
	// The postal code to use when returning the drives.
	PostalCode string `pulumi:"postalCode"`
	// The name of the recipient who will receive the hard drives when they are returned.
	RecipientName string `pulumi:"recipientName"`
	// The state or province to use when returning the drives.
	StateOrProvince *string `pulumi:"stateOrProvince"`
	// The first line of the street address to use when returning the drives.
	StreetAddress1 string `pulumi:"streetAddress1"`
	// The second line of the street address to use when returning the drives.
	StreetAddress2 *string `pulumi:"streetAddress2"`
}

// ReturnAddressInput is an input type that accepts ReturnAddressArgs and ReturnAddressOutput values.
// You can construct a concrete instance of `ReturnAddressInput` via:
//
//          ReturnAddressArgs{...}
type ReturnAddressInput interface {
	pulumi.Input

	ToReturnAddressOutput() ReturnAddressOutput
	ToReturnAddressOutputWithContext(context.Context) ReturnAddressOutput
}

// Specifies the return address information for the job.
type ReturnAddressArgs struct {
	// The city name to use when returning the drives.
	City pulumi.StringInput `pulumi:"city"`
	// The country or region to use when returning the drives.
	CountryOrRegion pulumi.StringInput `pulumi:"countryOrRegion"`
	// Email address of the recipient of the returned drives.
	Email pulumi.StringInput `pulumi:"email"`
	// Phone number of the recipient of the returned drives.
	Phone pulumi.StringInput `pulumi:"phone"`
	// The postal code to use when returning the drives.
	PostalCode pulumi.StringInput `pulumi:"postalCode"`
	// The name of the recipient who will receive the hard drives when they are returned.
	RecipientName pulumi.StringInput `pulumi:"recipientName"`
	// The state or province to use when returning the drives.
	StateOrProvince pulumi.StringPtrInput `pulumi:"stateOrProvince"`
	// The first line of the street address to use when returning the drives.
	StreetAddress1 pulumi.StringInput `pulumi:"streetAddress1"`
	// The second line of the street address to use when returning the drives.
	StreetAddress2 pulumi.StringPtrInput `pulumi:"streetAddress2"`
}

func (ReturnAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReturnAddress)(nil)).Elem()
}

func (i ReturnAddressArgs) ToReturnAddressOutput() ReturnAddressOutput {
	return i.ToReturnAddressOutputWithContext(context.Background())
}

func (i ReturnAddressArgs) ToReturnAddressOutputWithContext(ctx context.Context) ReturnAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReturnAddressOutput)
}

func (i ReturnAddressArgs) ToReturnAddressPtrOutput() ReturnAddressPtrOutput {
	return i.ToReturnAddressPtrOutputWithContext(context.Background())
}

func (i ReturnAddressArgs) ToReturnAddressPtrOutputWithContext(ctx context.Context) ReturnAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReturnAddressOutput).ToReturnAddressPtrOutputWithContext(ctx)
}

// ReturnAddressPtrInput is an input type that accepts ReturnAddressArgs, ReturnAddressPtr and ReturnAddressPtrOutput values.
// You can construct a concrete instance of `ReturnAddressPtrInput` via:
//
//          ReturnAddressArgs{...}
//
//  or:
//
//          nil
type ReturnAddressPtrInput interface {
	pulumi.Input

	ToReturnAddressPtrOutput() ReturnAddressPtrOutput
	ToReturnAddressPtrOutputWithContext(context.Context) ReturnAddressPtrOutput
}

type returnAddressPtrType ReturnAddressArgs

func ReturnAddressPtr(v *ReturnAddressArgs) ReturnAddressPtrInput {
	return (*returnAddressPtrType)(v)
}

func (*returnAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReturnAddress)(nil)).Elem()
}

func (i *returnAddressPtrType) ToReturnAddressPtrOutput() ReturnAddressPtrOutput {
	return i.ToReturnAddressPtrOutputWithContext(context.Background())
}

func (i *returnAddressPtrType) ToReturnAddressPtrOutputWithContext(ctx context.Context) ReturnAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReturnAddressPtrOutput)
}

// Specifies the return address information for the job.
type ReturnAddressOutput struct{ *pulumi.OutputState }

func (ReturnAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReturnAddress)(nil)).Elem()
}

func (o ReturnAddressOutput) ToReturnAddressOutput() ReturnAddressOutput {
	return o
}

func (o ReturnAddressOutput) ToReturnAddressOutputWithContext(ctx context.Context) ReturnAddressOutput {
	return o
}

func (o ReturnAddressOutput) ToReturnAddressPtrOutput() ReturnAddressPtrOutput {
	return o.ToReturnAddressPtrOutputWithContext(context.Background())
}

func (o ReturnAddressOutput) ToReturnAddressPtrOutputWithContext(ctx context.Context) ReturnAddressPtrOutput {
	return o.ApplyT(func(v ReturnAddress) *ReturnAddress {
		return &v
	}).(ReturnAddressPtrOutput)
}

// The city name to use when returning the drives.
func (o ReturnAddressOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v ReturnAddress) string { return v.City }).(pulumi.StringOutput)
}

// The country or region to use when returning the drives.
func (o ReturnAddressOutput) CountryOrRegion() pulumi.StringOutput {
	return o.ApplyT(func(v ReturnAddress) string { return v.CountryOrRegion }).(pulumi.StringOutput)
}

// Email address of the recipient of the returned drives.
func (o ReturnAddressOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v ReturnAddress) string { return v.Email }).(pulumi.StringOutput)
}

// Phone number of the recipient of the returned drives.
func (o ReturnAddressOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v ReturnAddress) string { return v.Phone }).(pulumi.StringOutput)
}

// The postal code to use when returning the drives.
func (o ReturnAddressOutput) PostalCode() pulumi.StringOutput {
	return o.ApplyT(func(v ReturnAddress) string { return v.PostalCode }).(pulumi.StringOutput)
}

// The name of the recipient who will receive the hard drives when they are returned.
func (o ReturnAddressOutput) RecipientName() pulumi.StringOutput {
	return o.ApplyT(func(v ReturnAddress) string { return v.RecipientName }).(pulumi.StringOutput)
}

// The state or province to use when returning the drives.
func (o ReturnAddressOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReturnAddress) *string { return v.StateOrProvince }).(pulumi.StringPtrOutput)
}

// The first line of the street address to use when returning the drives.
func (o ReturnAddressOutput) StreetAddress1() pulumi.StringOutput {
	return o.ApplyT(func(v ReturnAddress) string { return v.StreetAddress1 }).(pulumi.StringOutput)
}

// The second line of the street address to use when returning the drives.
func (o ReturnAddressOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReturnAddress) *string { return v.StreetAddress2 }).(pulumi.StringPtrOutput)
}

type ReturnAddressPtrOutput struct{ *pulumi.OutputState }

func (ReturnAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReturnAddress)(nil)).Elem()
}

func (o ReturnAddressPtrOutput) ToReturnAddressPtrOutput() ReturnAddressPtrOutput {
	return o
}

func (o ReturnAddressPtrOutput) ToReturnAddressPtrOutputWithContext(ctx context.Context) ReturnAddressPtrOutput {
	return o
}

func (o ReturnAddressPtrOutput) Elem() ReturnAddressOutput {
	return o.ApplyT(func(v *ReturnAddress) ReturnAddress { return *v }).(ReturnAddressOutput)
}

// The city name to use when returning the drives.
func (o ReturnAddressPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnAddress) *string {
		if v == nil {
			return nil
		}
		return &v.City
	}).(pulumi.StringPtrOutput)
}

// The country or region to use when returning the drives.
func (o ReturnAddressPtrOutput) CountryOrRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnAddress) *string {
		if v == nil {
			return nil
		}
		return &v.CountryOrRegion
	}).(pulumi.StringPtrOutput)
}

// Email address of the recipient of the returned drives.
func (o ReturnAddressPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnAddress) *string {
		if v == nil {
			return nil
		}
		return &v.Email
	}).(pulumi.StringPtrOutput)
}

// Phone number of the recipient of the returned drives.
func (o ReturnAddressPtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnAddress) *string {
		if v == nil {
			return nil
		}
		return &v.Phone
	}).(pulumi.StringPtrOutput)
}

// The postal code to use when returning the drives.
func (o ReturnAddressPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnAddress) *string {
		if v == nil {
			return nil
		}
		return &v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// The name of the recipient who will receive the hard drives when they are returned.
func (o ReturnAddressPtrOutput) RecipientName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnAddress) *string {
		if v == nil {
			return nil
		}
		return &v.RecipientName
	}).(pulumi.StringPtrOutput)
}

// The state or province to use when returning the drives.
func (o ReturnAddressPtrOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnAddress) *string {
		if v == nil {
			return nil
		}
		return v.StateOrProvince
	}).(pulumi.StringPtrOutput)
}

// The first line of the street address to use when returning the drives.
func (o ReturnAddressPtrOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnAddress) *string {
		if v == nil {
			return nil
		}
		return &v.StreetAddress1
	}).(pulumi.StringPtrOutput)
}

// The second line of the street address to use when returning the drives.
func (o ReturnAddressPtrOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnAddress) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress2
	}).(pulumi.StringPtrOutput)
}

// Specifies the return address information for the job.
type ReturnAddressResponse struct {
	// The city name to use when returning the drives.
	City string `pulumi:"city"`
	// The country or region to use when returning the drives.
	CountryOrRegion string `pulumi:"countryOrRegion"`
	// Email address of the recipient of the returned drives.
	Email string `pulumi:"email"`
	// Phone number of the recipient of the returned drives.
	Phone string `pulumi:"phone"`
	// The postal code to use when returning the drives.
	PostalCode string `pulumi:"postalCode"`
	// The name of the recipient who will receive the hard drives when they are returned.
	RecipientName string `pulumi:"recipientName"`
	// The state or province to use when returning the drives.
	StateOrProvince *string `pulumi:"stateOrProvince"`
	// The first line of the street address to use when returning the drives.
	StreetAddress1 string `pulumi:"streetAddress1"`
	// The second line of the street address to use when returning the drives.
	StreetAddress2 *string `pulumi:"streetAddress2"`
}

// ReturnAddressResponseInput is an input type that accepts ReturnAddressResponseArgs and ReturnAddressResponseOutput values.
// You can construct a concrete instance of `ReturnAddressResponseInput` via:
//
//          ReturnAddressResponseArgs{...}
type ReturnAddressResponseInput interface {
	pulumi.Input

	ToReturnAddressResponseOutput() ReturnAddressResponseOutput
	ToReturnAddressResponseOutputWithContext(context.Context) ReturnAddressResponseOutput
}

// Specifies the return address information for the job.
type ReturnAddressResponseArgs struct {
	// The city name to use when returning the drives.
	City pulumi.StringInput `pulumi:"city"`
	// The country or region to use when returning the drives.
	CountryOrRegion pulumi.StringInput `pulumi:"countryOrRegion"`
	// Email address of the recipient of the returned drives.
	Email pulumi.StringInput `pulumi:"email"`
	// Phone number of the recipient of the returned drives.
	Phone pulumi.StringInput `pulumi:"phone"`
	// The postal code to use when returning the drives.
	PostalCode pulumi.StringInput `pulumi:"postalCode"`
	// The name of the recipient who will receive the hard drives when they are returned.
	RecipientName pulumi.StringInput `pulumi:"recipientName"`
	// The state or province to use when returning the drives.
	StateOrProvince pulumi.StringPtrInput `pulumi:"stateOrProvince"`
	// The first line of the street address to use when returning the drives.
	StreetAddress1 pulumi.StringInput `pulumi:"streetAddress1"`
	// The second line of the street address to use when returning the drives.
	StreetAddress2 pulumi.StringPtrInput `pulumi:"streetAddress2"`
}

func (ReturnAddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReturnAddressResponse)(nil)).Elem()
}

func (i ReturnAddressResponseArgs) ToReturnAddressResponseOutput() ReturnAddressResponseOutput {
	return i.ToReturnAddressResponseOutputWithContext(context.Background())
}

func (i ReturnAddressResponseArgs) ToReturnAddressResponseOutputWithContext(ctx context.Context) ReturnAddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReturnAddressResponseOutput)
}

func (i ReturnAddressResponseArgs) ToReturnAddressResponsePtrOutput() ReturnAddressResponsePtrOutput {
	return i.ToReturnAddressResponsePtrOutputWithContext(context.Background())
}

func (i ReturnAddressResponseArgs) ToReturnAddressResponsePtrOutputWithContext(ctx context.Context) ReturnAddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReturnAddressResponseOutput).ToReturnAddressResponsePtrOutputWithContext(ctx)
}

// ReturnAddressResponsePtrInput is an input type that accepts ReturnAddressResponseArgs, ReturnAddressResponsePtr and ReturnAddressResponsePtrOutput values.
// You can construct a concrete instance of `ReturnAddressResponsePtrInput` via:
//
//          ReturnAddressResponseArgs{...}
//
//  or:
//
//          nil
type ReturnAddressResponsePtrInput interface {
	pulumi.Input

	ToReturnAddressResponsePtrOutput() ReturnAddressResponsePtrOutput
	ToReturnAddressResponsePtrOutputWithContext(context.Context) ReturnAddressResponsePtrOutput
}

type returnAddressResponsePtrType ReturnAddressResponseArgs

func ReturnAddressResponsePtr(v *ReturnAddressResponseArgs) ReturnAddressResponsePtrInput {
	return (*returnAddressResponsePtrType)(v)
}

func (*returnAddressResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReturnAddressResponse)(nil)).Elem()
}

func (i *returnAddressResponsePtrType) ToReturnAddressResponsePtrOutput() ReturnAddressResponsePtrOutput {
	return i.ToReturnAddressResponsePtrOutputWithContext(context.Background())
}

func (i *returnAddressResponsePtrType) ToReturnAddressResponsePtrOutputWithContext(ctx context.Context) ReturnAddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReturnAddressResponsePtrOutput)
}

// Specifies the return address information for the job.
type ReturnAddressResponseOutput struct{ *pulumi.OutputState }

func (ReturnAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReturnAddressResponse)(nil)).Elem()
}

func (o ReturnAddressResponseOutput) ToReturnAddressResponseOutput() ReturnAddressResponseOutput {
	return o
}

func (o ReturnAddressResponseOutput) ToReturnAddressResponseOutputWithContext(ctx context.Context) ReturnAddressResponseOutput {
	return o
}

func (o ReturnAddressResponseOutput) ToReturnAddressResponsePtrOutput() ReturnAddressResponsePtrOutput {
	return o.ToReturnAddressResponsePtrOutputWithContext(context.Background())
}

func (o ReturnAddressResponseOutput) ToReturnAddressResponsePtrOutputWithContext(ctx context.Context) ReturnAddressResponsePtrOutput {
	return o.ApplyT(func(v ReturnAddressResponse) *ReturnAddressResponse {
		return &v
	}).(ReturnAddressResponsePtrOutput)
}

// The city name to use when returning the drives.
func (o ReturnAddressResponseOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v ReturnAddressResponse) string { return v.City }).(pulumi.StringOutput)
}

// The country or region to use when returning the drives.
func (o ReturnAddressResponseOutput) CountryOrRegion() pulumi.StringOutput {
	return o.ApplyT(func(v ReturnAddressResponse) string { return v.CountryOrRegion }).(pulumi.StringOutput)
}

// Email address of the recipient of the returned drives.
func (o ReturnAddressResponseOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v ReturnAddressResponse) string { return v.Email }).(pulumi.StringOutput)
}

// Phone number of the recipient of the returned drives.
func (o ReturnAddressResponseOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v ReturnAddressResponse) string { return v.Phone }).(pulumi.StringOutput)
}

// The postal code to use when returning the drives.
func (o ReturnAddressResponseOutput) PostalCode() pulumi.StringOutput {
	return o.ApplyT(func(v ReturnAddressResponse) string { return v.PostalCode }).(pulumi.StringOutput)
}

// The name of the recipient who will receive the hard drives when they are returned.
func (o ReturnAddressResponseOutput) RecipientName() pulumi.StringOutput {
	return o.ApplyT(func(v ReturnAddressResponse) string { return v.RecipientName }).(pulumi.StringOutput)
}

// The state or province to use when returning the drives.
func (o ReturnAddressResponseOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReturnAddressResponse) *string { return v.StateOrProvince }).(pulumi.StringPtrOutput)
}

// The first line of the street address to use when returning the drives.
func (o ReturnAddressResponseOutput) StreetAddress1() pulumi.StringOutput {
	return o.ApplyT(func(v ReturnAddressResponse) string { return v.StreetAddress1 }).(pulumi.StringOutput)
}

// The second line of the street address to use when returning the drives.
func (o ReturnAddressResponseOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReturnAddressResponse) *string { return v.StreetAddress2 }).(pulumi.StringPtrOutput)
}

type ReturnAddressResponsePtrOutput struct{ *pulumi.OutputState }

func (ReturnAddressResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReturnAddressResponse)(nil)).Elem()
}

func (o ReturnAddressResponsePtrOutput) ToReturnAddressResponsePtrOutput() ReturnAddressResponsePtrOutput {
	return o
}

func (o ReturnAddressResponsePtrOutput) ToReturnAddressResponsePtrOutputWithContext(ctx context.Context) ReturnAddressResponsePtrOutput {
	return o
}

func (o ReturnAddressResponsePtrOutput) Elem() ReturnAddressResponseOutput {
	return o.ApplyT(func(v *ReturnAddressResponse) ReturnAddressResponse { return *v }).(ReturnAddressResponseOutput)
}

// The city name to use when returning the drives.
func (o ReturnAddressResponsePtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.City
	}).(pulumi.StringPtrOutput)
}

// The country or region to use when returning the drives.
func (o ReturnAddressResponsePtrOutput) CountryOrRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CountryOrRegion
	}).(pulumi.StringPtrOutput)
}

// Email address of the recipient of the returned drives.
func (o ReturnAddressResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Email
	}).(pulumi.StringPtrOutput)
}

// Phone number of the recipient of the returned drives.
func (o ReturnAddressResponsePtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Phone
	}).(pulumi.StringPtrOutput)
}

// The postal code to use when returning the drives.
func (o ReturnAddressResponsePtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// The name of the recipient who will receive the hard drives when they are returned.
func (o ReturnAddressResponsePtrOutput) RecipientName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RecipientName
	}).(pulumi.StringPtrOutput)
}

// The state or province to use when returning the drives.
func (o ReturnAddressResponsePtrOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.StateOrProvince
	}).(pulumi.StringPtrOutput)
}

// The first line of the street address to use when returning the drives.
func (o ReturnAddressResponsePtrOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StreetAddress1
	}).(pulumi.StringPtrOutput)
}

// The second line of the street address to use when returning the drives.
func (o ReturnAddressResponsePtrOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress2
	}).(pulumi.StringPtrOutput)
}

// Specifies the return carrier and customer's account with the carrier.
type ReturnShipping struct {
	// The customer's account number with the carrier.
	CarrierAccountNumber string `pulumi:"carrierAccountNumber"`
	// The carrier's name.
	CarrierName string `pulumi:"carrierName"`
}

// ReturnShippingInput is an input type that accepts ReturnShippingArgs and ReturnShippingOutput values.
// You can construct a concrete instance of `ReturnShippingInput` via:
//
//          ReturnShippingArgs{...}
type ReturnShippingInput interface {
	pulumi.Input

	ToReturnShippingOutput() ReturnShippingOutput
	ToReturnShippingOutputWithContext(context.Context) ReturnShippingOutput
}

// Specifies the return carrier and customer's account with the carrier.
type ReturnShippingArgs struct {
	// The customer's account number with the carrier.
	CarrierAccountNumber pulumi.StringInput `pulumi:"carrierAccountNumber"`
	// The carrier's name.
	CarrierName pulumi.StringInput `pulumi:"carrierName"`
}

func (ReturnShippingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReturnShipping)(nil)).Elem()
}

func (i ReturnShippingArgs) ToReturnShippingOutput() ReturnShippingOutput {
	return i.ToReturnShippingOutputWithContext(context.Background())
}

func (i ReturnShippingArgs) ToReturnShippingOutputWithContext(ctx context.Context) ReturnShippingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReturnShippingOutput)
}

func (i ReturnShippingArgs) ToReturnShippingPtrOutput() ReturnShippingPtrOutput {
	return i.ToReturnShippingPtrOutputWithContext(context.Background())
}

func (i ReturnShippingArgs) ToReturnShippingPtrOutputWithContext(ctx context.Context) ReturnShippingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReturnShippingOutput).ToReturnShippingPtrOutputWithContext(ctx)
}

// ReturnShippingPtrInput is an input type that accepts ReturnShippingArgs, ReturnShippingPtr and ReturnShippingPtrOutput values.
// You can construct a concrete instance of `ReturnShippingPtrInput` via:
//
//          ReturnShippingArgs{...}
//
//  or:
//
//          nil
type ReturnShippingPtrInput interface {
	pulumi.Input

	ToReturnShippingPtrOutput() ReturnShippingPtrOutput
	ToReturnShippingPtrOutputWithContext(context.Context) ReturnShippingPtrOutput
}

type returnShippingPtrType ReturnShippingArgs

func ReturnShippingPtr(v *ReturnShippingArgs) ReturnShippingPtrInput {
	return (*returnShippingPtrType)(v)
}

func (*returnShippingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReturnShipping)(nil)).Elem()
}

func (i *returnShippingPtrType) ToReturnShippingPtrOutput() ReturnShippingPtrOutput {
	return i.ToReturnShippingPtrOutputWithContext(context.Background())
}

func (i *returnShippingPtrType) ToReturnShippingPtrOutputWithContext(ctx context.Context) ReturnShippingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReturnShippingPtrOutput)
}

// Specifies the return carrier and customer's account with the carrier.
type ReturnShippingOutput struct{ *pulumi.OutputState }

func (ReturnShippingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReturnShipping)(nil)).Elem()
}

func (o ReturnShippingOutput) ToReturnShippingOutput() ReturnShippingOutput {
	return o
}

func (o ReturnShippingOutput) ToReturnShippingOutputWithContext(ctx context.Context) ReturnShippingOutput {
	return o
}

func (o ReturnShippingOutput) ToReturnShippingPtrOutput() ReturnShippingPtrOutput {
	return o.ToReturnShippingPtrOutputWithContext(context.Background())
}

func (o ReturnShippingOutput) ToReturnShippingPtrOutputWithContext(ctx context.Context) ReturnShippingPtrOutput {
	return o.ApplyT(func(v ReturnShipping) *ReturnShipping {
		return &v
	}).(ReturnShippingPtrOutput)
}

// The customer's account number with the carrier.
func (o ReturnShippingOutput) CarrierAccountNumber() pulumi.StringOutput {
	return o.ApplyT(func(v ReturnShipping) string { return v.CarrierAccountNumber }).(pulumi.StringOutput)
}

// The carrier's name.
func (o ReturnShippingOutput) CarrierName() pulumi.StringOutput {
	return o.ApplyT(func(v ReturnShipping) string { return v.CarrierName }).(pulumi.StringOutput)
}

type ReturnShippingPtrOutput struct{ *pulumi.OutputState }

func (ReturnShippingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReturnShipping)(nil)).Elem()
}

func (o ReturnShippingPtrOutput) ToReturnShippingPtrOutput() ReturnShippingPtrOutput {
	return o
}

func (o ReturnShippingPtrOutput) ToReturnShippingPtrOutputWithContext(ctx context.Context) ReturnShippingPtrOutput {
	return o
}

func (o ReturnShippingPtrOutput) Elem() ReturnShippingOutput {
	return o.ApplyT(func(v *ReturnShipping) ReturnShipping { return *v }).(ReturnShippingOutput)
}

// The customer's account number with the carrier.
func (o ReturnShippingPtrOutput) CarrierAccountNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnShipping) *string {
		if v == nil {
			return nil
		}
		return &v.CarrierAccountNumber
	}).(pulumi.StringPtrOutput)
}

// The carrier's name.
func (o ReturnShippingPtrOutput) CarrierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnShipping) *string {
		if v == nil {
			return nil
		}
		return &v.CarrierName
	}).(pulumi.StringPtrOutput)
}

// Specifies the return carrier and customer's account with the carrier.
type ReturnShippingResponse struct {
	// The customer's account number with the carrier.
	CarrierAccountNumber string `pulumi:"carrierAccountNumber"`
	// The carrier's name.
	CarrierName string `pulumi:"carrierName"`
}

// ReturnShippingResponseInput is an input type that accepts ReturnShippingResponseArgs and ReturnShippingResponseOutput values.
// You can construct a concrete instance of `ReturnShippingResponseInput` via:
//
//          ReturnShippingResponseArgs{...}
type ReturnShippingResponseInput interface {
	pulumi.Input

	ToReturnShippingResponseOutput() ReturnShippingResponseOutput
	ToReturnShippingResponseOutputWithContext(context.Context) ReturnShippingResponseOutput
}

// Specifies the return carrier and customer's account with the carrier.
type ReturnShippingResponseArgs struct {
	// The customer's account number with the carrier.
	CarrierAccountNumber pulumi.StringInput `pulumi:"carrierAccountNumber"`
	// The carrier's name.
	CarrierName pulumi.StringInput `pulumi:"carrierName"`
}

func (ReturnShippingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReturnShippingResponse)(nil)).Elem()
}

func (i ReturnShippingResponseArgs) ToReturnShippingResponseOutput() ReturnShippingResponseOutput {
	return i.ToReturnShippingResponseOutputWithContext(context.Background())
}

func (i ReturnShippingResponseArgs) ToReturnShippingResponseOutputWithContext(ctx context.Context) ReturnShippingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReturnShippingResponseOutput)
}

func (i ReturnShippingResponseArgs) ToReturnShippingResponsePtrOutput() ReturnShippingResponsePtrOutput {
	return i.ToReturnShippingResponsePtrOutputWithContext(context.Background())
}

func (i ReturnShippingResponseArgs) ToReturnShippingResponsePtrOutputWithContext(ctx context.Context) ReturnShippingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReturnShippingResponseOutput).ToReturnShippingResponsePtrOutputWithContext(ctx)
}

// ReturnShippingResponsePtrInput is an input type that accepts ReturnShippingResponseArgs, ReturnShippingResponsePtr and ReturnShippingResponsePtrOutput values.
// You can construct a concrete instance of `ReturnShippingResponsePtrInput` via:
//
//          ReturnShippingResponseArgs{...}
//
//  or:
//
//          nil
type ReturnShippingResponsePtrInput interface {
	pulumi.Input

	ToReturnShippingResponsePtrOutput() ReturnShippingResponsePtrOutput
	ToReturnShippingResponsePtrOutputWithContext(context.Context) ReturnShippingResponsePtrOutput
}

type returnShippingResponsePtrType ReturnShippingResponseArgs

func ReturnShippingResponsePtr(v *ReturnShippingResponseArgs) ReturnShippingResponsePtrInput {
	return (*returnShippingResponsePtrType)(v)
}

func (*returnShippingResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReturnShippingResponse)(nil)).Elem()
}

func (i *returnShippingResponsePtrType) ToReturnShippingResponsePtrOutput() ReturnShippingResponsePtrOutput {
	return i.ToReturnShippingResponsePtrOutputWithContext(context.Background())
}

func (i *returnShippingResponsePtrType) ToReturnShippingResponsePtrOutputWithContext(ctx context.Context) ReturnShippingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReturnShippingResponsePtrOutput)
}

// Specifies the return carrier and customer's account with the carrier.
type ReturnShippingResponseOutput struct{ *pulumi.OutputState }

func (ReturnShippingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReturnShippingResponse)(nil)).Elem()
}

func (o ReturnShippingResponseOutput) ToReturnShippingResponseOutput() ReturnShippingResponseOutput {
	return o
}

func (o ReturnShippingResponseOutput) ToReturnShippingResponseOutputWithContext(ctx context.Context) ReturnShippingResponseOutput {
	return o
}

func (o ReturnShippingResponseOutput) ToReturnShippingResponsePtrOutput() ReturnShippingResponsePtrOutput {
	return o.ToReturnShippingResponsePtrOutputWithContext(context.Background())
}

func (o ReturnShippingResponseOutput) ToReturnShippingResponsePtrOutputWithContext(ctx context.Context) ReturnShippingResponsePtrOutput {
	return o.ApplyT(func(v ReturnShippingResponse) *ReturnShippingResponse {
		return &v
	}).(ReturnShippingResponsePtrOutput)
}

// The customer's account number with the carrier.
func (o ReturnShippingResponseOutput) CarrierAccountNumber() pulumi.StringOutput {
	return o.ApplyT(func(v ReturnShippingResponse) string { return v.CarrierAccountNumber }).(pulumi.StringOutput)
}

// The carrier's name.
func (o ReturnShippingResponseOutput) CarrierName() pulumi.StringOutput {
	return o.ApplyT(func(v ReturnShippingResponse) string { return v.CarrierName }).(pulumi.StringOutput)
}

type ReturnShippingResponsePtrOutput struct{ *pulumi.OutputState }

func (ReturnShippingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReturnShippingResponse)(nil)).Elem()
}

func (o ReturnShippingResponsePtrOutput) ToReturnShippingResponsePtrOutput() ReturnShippingResponsePtrOutput {
	return o
}

func (o ReturnShippingResponsePtrOutput) ToReturnShippingResponsePtrOutputWithContext(ctx context.Context) ReturnShippingResponsePtrOutput {
	return o
}

func (o ReturnShippingResponsePtrOutput) Elem() ReturnShippingResponseOutput {
	return o.ApplyT(func(v *ReturnShippingResponse) ReturnShippingResponse { return *v }).(ReturnShippingResponseOutput)
}

// The customer's account number with the carrier.
func (o ReturnShippingResponsePtrOutput) CarrierAccountNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnShippingResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CarrierAccountNumber
	}).(pulumi.StringPtrOutput)
}

// The carrier's name.
func (o ReturnShippingResponsePtrOutput) CarrierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReturnShippingResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CarrierName
	}).(pulumi.StringPtrOutput)
}

// Contains information about the Microsoft datacenter to which the drives should be shipped.
type ShippingInformation struct {
	// The city name to use when returning the drives.
	City string `pulumi:"city"`
	// The country or region to use when returning the drives.
	CountryOrRegion string `pulumi:"countryOrRegion"`
	// Phone number of the recipient of the returned drives.
	Phone *string `pulumi:"phone"`
	// The postal code to use when returning the drives.
	PostalCode string `pulumi:"postalCode"`
	// The name of the recipient who will receive the hard drives when they are returned.
	RecipientName string `pulumi:"recipientName"`
	// The state or province to use when returning the drives.
	StateOrProvince string `pulumi:"stateOrProvince"`
	// The first line of the street address to use when returning the drives.
	StreetAddress1 string `pulumi:"streetAddress1"`
	// The second line of the street address to use when returning the drives.
	StreetAddress2 *string `pulumi:"streetAddress2"`
}

// ShippingInformationInput is an input type that accepts ShippingInformationArgs and ShippingInformationOutput values.
// You can construct a concrete instance of `ShippingInformationInput` via:
//
//          ShippingInformationArgs{...}
type ShippingInformationInput interface {
	pulumi.Input

	ToShippingInformationOutput() ShippingInformationOutput
	ToShippingInformationOutputWithContext(context.Context) ShippingInformationOutput
}

// Contains information about the Microsoft datacenter to which the drives should be shipped.
type ShippingInformationArgs struct {
	// The city name to use when returning the drives.
	City pulumi.StringInput `pulumi:"city"`
	// The country or region to use when returning the drives.
	CountryOrRegion pulumi.StringInput `pulumi:"countryOrRegion"`
	// Phone number of the recipient of the returned drives.
	Phone pulumi.StringPtrInput `pulumi:"phone"`
	// The postal code to use when returning the drives.
	PostalCode pulumi.StringInput `pulumi:"postalCode"`
	// The name of the recipient who will receive the hard drives when they are returned.
	RecipientName pulumi.StringInput `pulumi:"recipientName"`
	// The state or province to use when returning the drives.
	StateOrProvince pulumi.StringInput `pulumi:"stateOrProvince"`
	// The first line of the street address to use when returning the drives.
	StreetAddress1 pulumi.StringInput `pulumi:"streetAddress1"`
	// The second line of the street address to use when returning the drives.
	StreetAddress2 pulumi.StringPtrInput `pulumi:"streetAddress2"`
}

func (ShippingInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingInformation)(nil)).Elem()
}

func (i ShippingInformationArgs) ToShippingInformationOutput() ShippingInformationOutput {
	return i.ToShippingInformationOutputWithContext(context.Background())
}

func (i ShippingInformationArgs) ToShippingInformationOutputWithContext(ctx context.Context) ShippingInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingInformationOutput)
}

func (i ShippingInformationArgs) ToShippingInformationPtrOutput() ShippingInformationPtrOutput {
	return i.ToShippingInformationPtrOutputWithContext(context.Background())
}

func (i ShippingInformationArgs) ToShippingInformationPtrOutputWithContext(ctx context.Context) ShippingInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingInformationOutput).ToShippingInformationPtrOutputWithContext(ctx)
}

// ShippingInformationPtrInput is an input type that accepts ShippingInformationArgs, ShippingInformationPtr and ShippingInformationPtrOutput values.
// You can construct a concrete instance of `ShippingInformationPtrInput` via:
//
//          ShippingInformationArgs{...}
//
//  or:
//
//          nil
type ShippingInformationPtrInput interface {
	pulumi.Input

	ToShippingInformationPtrOutput() ShippingInformationPtrOutput
	ToShippingInformationPtrOutputWithContext(context.Context) ShippingInformationPtrOutput
}

type shippingInformationPtrType ShippingInformationArgs

func ShippingInformationPtr(v *ShippingInformationArgs) ShippingInformationPtrInput {
	return (*shippingInformationPtrType)(v)
}

func (*shippingInformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingInformation)(nil)).Elem()
}

func (i *shippingInformationPtrType) ToShippingInformationPtrOutput() ShippingInformationPtrOutput {
	return i.ToShippingInformationPtrOutputWithContext(context.Background())
}

func (i *shippingInformationPtrType) ToShippingInformationPtrOutputWithContext(ctx context.Context) ShippingInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingInformationPtrOutput)
}

// Contains information about the Microsoft datacenter to which the drives should be shipped.
type ShippingInformationOutput struct{ *pulumi.OutputState }

func (ShippingInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingInformation)(nil)).Elem()
}

func (o ShippingInformationOutput) ToShippingInformationOutput() ShippingInformationOutput {
	return o
}

func (o ShippingInformationOutput) ToShippingInformationOutputWithContext(ctx context.Context) ShippingInformationOutput {
	return o
}

func (o ShippingInformationOutput) ToShippingInformationPtrOutput() ShippingInformationPtrOutput {
	return o.ToShippingInformationPtrOutputWithContext(context.Background())
}

func (o ShippingInformationOutput) ToShippingInformationPtrOutputWithContext(ctx context.Context) ShippingInformationPtrOutput {
	return o.ApplyT(func(v ShippingInformation) *ShippingInformation {
		return &v
	}).(ShippingInformationPtrOutput)
}

// The city name to use when returning the drives.
func (o ShippingInformationOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingInformation) string { return v.City }).(pulumi.StringOutput)
}

// The country or region to use when returning the drives.
func (o ShippingInformationOutput) CountryOrRegion() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingInformation) string { return v.CountryOrRegion }).(pulumi.StringOutput)
}

// Phone number of the recipient of the returned drives.
func (o ShippingInformationOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingInformation) *string { return v.Phone }).(pulumi.StringPtrOutput)
}

// The postal code to use when returning the drives.
func (o ShippingInformationOutput) PostalCode() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingInformation) string { return v.PostalCode }).(pulumi.StringOutput)
}

// The name of the recipient who will receive the hard drives when they are returned.
func (o ShippingInformationOutput) RecipientName() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingInformation) string { return v.RecipientName }).(pulumi.StringOutput)
}

// The state or province to use when returning the drives.
func (o ShippingInformationOutput) StateOrProvince() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingInformation) string { return v.StateOrProvince }).(pulumi.StringOutput)
}

// The first line of the street address to use when returning the drives.
func (o ShippingInformationOutput) StreetAddress1() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingInformation) string { return v.StreetAddress1 }).(pulumi.StringOutput)
}

// The second line of the street address to use when returning the drives.
func (o ShippingInformationOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingInformation) *string { return v.StreetAddress2 }).(pulumi.StringPtrOutput)
}

type ShippingInformationPtrOutput struct{ *pulumi.OutputState }

func (ShippingInformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingInformation)(nil)).Elem()
}

func (o ShippingInformationPtrOutput) ToShippingInformationPtrOutput() ShippingInformationPtrOutput {
	return o
}

func (o ShippingInformationPtrOutput) ToShippingInformationPtrOutputWithContext(ctx context.Context) ShippingInformationPtrOutput {
	return o
}

func (o ShippingInformationPtrOutput) Elem() ShippingInformationOutput {
	return o.ApplyT(func(v *ShippingInformation) ShippingInformation { return *v }).(ShippingInformationOutput)
}

// The city name to use when returning the drives.
func (o ShippingInformationPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingInformation) *string {
		if v == nil {
			return nil
		}
		return &v.City
	}).(pulumi.StringPtrOutput)
}

// The country or region to use when returning the drives.
func (o ShippingInformationPtrOutput) CountryOrRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingInformation) *string {
		if v == nil {
			return nil
		}
		return &v.CountryOrRegion
	}).(pulumi.StringPtrOutput)
}

// Phone number of the recipient of the returned drives.
func (o ShippingInformationPtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingInformation) *string {
		if v == nil {
			return nil
		}
		return v.Phone
	}).(pulumi.StringPtrOutput)
}

// The postal code to use when returning the drives.
func (o ShippingInformationPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingInformation) *string {
		if v == nil {
			return nil
		}
		return &v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// The name of the recipient who will receive the hard drives when they are returned.
func (o ShippingInformationPtrOutput) RecipientName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingInformation) *string {
		if v == nil {
			return nil
		}
		return &v.RecipientName
	}).(pulumi.StringPtrOutput)
}

// The state or province to use when returning the drives.
func (o ShippingInformationPtrOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingInformation) *string {
		if v == nil {
			return nil
		}
		return &v.StateOrProvince
	}).(pulumi.StringPtrOutput)
}

// The first line of the street address to use when returning the drives.
func (o ShippingInformationPtrOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingInformation) *string {
		if v == nil {
			return nil
		}
		return &v.StreetAddress1
	}).(pulumi.StringPtrOutput)
}

// The second line of the street address to use when returning the drives.
func (o ShippingInformationPtrOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingInformation) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress2
	}).(pulumi.StringPtrOutput)
}

// Contains information about the Microsoft datacenter to which the drives should be shipped.
type ShippingInformationResponse struct {
	// Additional shipping information for customer, specific to datacenter to which customer should send their disks.
	AdditionalInformation string `pulumi:"additionalInformation"`
	// The city name to use when returning the drives.
	City string `pulumi:"city"`
	// The country or region to use when returning the drives.
	CountryOrRegion string `pulumi:"countryOrRegion"`
	// Phone number of the recipient of the returned drives.
	Phone *string `pulumi:"phone"`
	// The postal code to use when returning the drives.
	PostalCode string `pulumi:"postalCode"`
	// The name of the recipient who will receive the hard drives when they are returned.
	RecipientName string `pulumi:"recipientName"`
	// The state or province to use when returning the drives.
	StateOrProvince string `pulumi:"stateOrProvince"`
	// The first line of the street address to use when returning the drives.
	StreetAddress1 string `pulumi:"streetAddress1"`
	// The second line of the street address to use when returning the drives.
	StreetAddress2 *string `pulumi:"streetAddress2"`
}

// ShippingInformationResponseInput is an input type that accepts ShippingInformationResponseArgs and ShippingInformationResponseOutput values.
// You can construct a concrete instance of `ShippingInformationResponseInput` via:
//
//          ShippingInformationResponseArgs{...}
type ShippingInformationResponseInput interface {
	pulumi.Input

	ToShippingInformationResponseOutput() ShippingInformationResponseOutput
	ToShippingInformationResponseOutputWithContext(context.Context) ShippingInformationResponseOutput
}

// Contains information about the Microsoft datacenter to which the drives should be shipped.
type ShippingInformationResponseArgs struct {
	// Additional shipping information for customer, specific to datacenter to which customer should send their disks.
	AdditionalInformation pulumi.StringInput `pulumi:"additionalInformation"`
	// The city name to use when returning the drives.
	City pulumi.StringInput `pulumi:"city"`
	// The country or region to use when returning the drives.
	CountryOrRegion pulumi.StringInput `pulumi:"countryOrRegion"`
	// Phone number of the recipient of the returned drives.
	Phone pulumi.StringPtrInput `pulumi:"phone"`
	// The postal code to use when returning the drives.
	PostalCode pulumi.StringInput `pulumi:"postalCode"`
	// The name of the recipient who will receive the hard drives when they are returned.
	RecipientName pulumi.StringInput `pulumi:"recipientName"`
	// The state or province to use when returning the drives.
	StateOrProvince pulumi.StringInput `pulumi:"stateOrProvince"`
	// The first line of the street address to use when returning the drives.
	StreetAddress1 pulumi.StringInput `pulumi:"streetAddress1"`
	// The second line of the street address to use when returning the drives.
	StreetAddress2 pulumi.StringPtrInput `pulumi:"streetAddress2"`
}

func (ShippingInformationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingInformationResponse)(nil)).Elem()
}

func (i ShippingInformationResponseArgs) ToShippingInformationResponseOutput() ShippingInformationResponseOutput {
	return i.ToShippingInformationResponseOutputWithContext(context.Background())
}

func (i ShippingInformationResponseArgs) ToShippingInformationResponseOutputWithContext(ctx context.Context) ShippingInformationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingInformationResponseOutput)
}

func (i ShippingInformationResponseArgs) ToShippingInformationResponsePtrOutput() ShippingInformationResponsePtrOutput {
	return i.ToShippingInformationResponsePtrOutputWithContext(context.Background())
}

func (i ShippingInformationResponseArgs) ToShippingInformationResponsePtrOutputWithContext(ctx context.Context) ShippingInformationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingInformationResponseOutput).ToShippingInformationResponsePtrOutputWithContext(ctx)
}

// ShippingInformationResponsePtrInput is an input type that accepts ShippingInformationResponseArgs, ShippingInformationResponsePtr and ShippingInformationResponsePtrOutput values.
// You can construct a concrete instance of `ShippingInformationResponsePtrInput` via:
//
//          ShippingInformationResponseArgs{...}
//
//  or:
//
//          nil
type ShippingInformationResponsePtrInput interface {
	pulumi.Input

	ToShippingInformationResponsePtrOutput() ShippingInformationResponsePtrOutput
	ToShippingInformationResponsePtrOutputWithContext(context.Context) ShippingInformationResponsePtrOutput
}

type shippingInformationResponsePtrType ShippingInformationResponseArgs

func ShippingInformationResponsePtr(v *ShippingInformationResponseArgs) ShippingInformationResponsePtrInput {
	return (*shippingInformationResponsePtrType)(v)
}

func (*shippingInformationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingInformationResponse)(nil)).Elem()
}

func (i *shippingInformationResponsePtrType) ToShippingInformationResponsePtrOutput() ShippingInformationResponsePtrOutput {
	return i.ToShippingInformationResponsePtrOutputWithContext(context.Background())
}

func (i *shippingInformationResponsePtrType) ToShippingInformationResponsePtrOutputWithContext(ctx context.Context) ShippingInformationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingInformationResponsePtrOutput)
}

// Contains information about the Microsoft datacenter to which the drives should be shipped.
type ShippingInformationResponseOutput struct{ *pulumi.OutputState }

func (ShippingInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingInformationResponse)(nil)).Elem()
}

func (o ShippingInformationResponseOutput) ToShippingInformationResponseOutput() ShippingInformationResponseOutput {
	return o
}

func (o ShippingInformationResponseOutput) ToShippingInformationResponseOutputWithContext(ctx context.Context) ShippingInformationResponseOutput {
	return o
}

func (o ShippingInformationResponseOutput) ToShippingInformationResponsePtrOutput() ShippingInformationResponsePtrOutput {
	return o.ToShippingInformationResponsePtrOutputWithContext(context.Background())
}

func (o ShippingInformationResponseOutput) ToShippingInformationResponsePtrOutputWithContext(ctx context.Context) ShippingInformationResponsePtrOutput {
	return o.ApplyT(func(v ShippingInformationResponse) *ShippingInformationResponse {
		return &v
	}).(ShippingInformationResponsePtrOutput)
}

// Additional shipping information for customer, specific to datacenter to which customer should send their disks.
func (o ShippingInformationResponseOutput) AdditionalInformation() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingInformationResponse) string { return v.AdditionalInformation }).(pulumi.StringOutput)
}

// The city name to use when returning the drives.
func (o ShippingInformationResponseOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingInformationResponse) string { return v.City }).(pulumi.StringOutput)
}

// The country or region to use when returning the drives.
func (o ShippingInformationResponseOutput) CountryOrRegion() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingInformationResponse) string { return v.CountryOrRegion }).(pulumi.StringOutput)
}

// Phone number of the recipient of the returned drives.
func (o ShippingInformationResponseOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingInformationResponse) *string { return v.Phone }).(pulumi.StringPtrOutput)
}

// The postal code to use when returning the drives.
func (o ShippingInformationResponseOutput) PostalCode() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingInformationResponse) string { return v.PostalCode }).(pulumi.StringOutput)
}

// The name of the recipient who will receive the hard drives when they are returned.
func (o ShippingInformationResponseOutput) RecipientName() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingInformationResponse) string { return v.RecipientName }).(pulumi.StringOutput)
}

// The state or province to use when returning the drives.
func (o ShippingInformationResponseOutput) StateOrProvince() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingInformationResponse) string { return v.StateOrProvince }).(pulumi.StringOutput)
}

// The first line of the street address to use when returning the drives.
func (o ShippingInformationResponseOutput) StreetAddress1() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingInformationResponse) string { return v.StreetAddress1 }).(pulumi.StringOutput)
}

// The second line of the street address to use when returning the drives.
func (o ShippingInformationResponseOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingInformationResponse) *string { return v.StreetAddress2 }).(pulumi.StringPtrOutput)
}

type ShippingInformationResponsePtrOutput struct{ *pulumi.OutputState }

func (ShippingInformationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingInformationResponse)(nil)).Elem()
}

func (o ShippingInformationResponsePtrOutput) ToShippingInformationResponsePtrOutput() ShippingInformationResponsePtrOutput {
	return o
}

func (o ShippingInformationResponsePtrOutput) ToShippingInformationResponsePtrOutputWithContext(ctx context.Context) ShippingInformationResponsePtrOutput {
	return o
}

func (o ShippingInformationResponsePtrOutput) Elem() ShippingInformationResponseOutput {
	return o.ApplyT(func(v *ShippingInformationResponse) ShippingInformationResponse { return *v }).(ShippingInformationResponseOutput)
}

// Additional shipping information for customer, specific to datacenter to which customer should send their disks.
func (o ShippingInformationResponsePtrOutput) AdditionalInformation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdditionalInformation
	}).(pulumi.StringPtrOutput)
}

// The city name to use when returning the drives.
func (o ShippingInformationResponsePtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.City
	}).(pulumi.StringPtrOutput)
}

// The country or region to use when returning the drives.
func (o ShippingInformationResponsePtrOutput) CountryOrRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CountryOrRegion
	}).(pulumi.StringPtrOutput)
}

// Phone number of the recipient of the returned drives.
func (o ShippingInformationResponsePtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingInformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Phone
	}).(pulumi.StringPtrOutput)
}

// The postal code to use when returning the drives.
func (o ShippingInformationResponsePtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// The name of the recipient who will receive the hard drives when they are returned.
func (o ShippingInformationResponsePtrOutput) RecipientName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RecipientName
	}).(pulumi.StringPtrOutput)
}

// The state or province to use when returning the drives.
func (o ShippingInformationResponsePtrOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StateOrProvince
	}).(pulumi.StringPtrOutput)
}

// The first line of the street address to use when returning the drives.
func (o ShippingInformationResponsePtrOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StreetAddress1
	}).(pulumi.StringPtrOutput)
}

// The second line of the street address to use when returning the drives.
func (o ShippingInformationResponsePtrOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingInformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress2
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DriveBitLockerKeyResponseOutput{})
	pulumi.RegisterOutputType(DriveBitLockerKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(DriveStatusOutput{})
	pulumi.RegisterOutputType(DriveStatusArrayOutput{})
	pulumi.RegisterOutputType(DriveStatusResponseOutput{})
	pulumi.RegisterOutputType(DriveStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(EncryptionKeyDetailsOutput{})
	pulumi.RegisterOutputType(EncryptionKeyDetailsPtrOutput{})
	pulumi.RegisterOutputType(EncryptionKeyDetailsResponseOutput{})
	pulumi.RegisterOutputType(EncryptionKeyDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(ExportOutput{})
	pulumi.RegisterOutputType(ExportPtrOutput{})
	pulumi.RegisterOutputType(ExportResponseOutput{})
	pulumi.RegisterOutputType(ExportResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentityDetailsResponseOutput{})
	pulumi.RegisterOutputType(IdentityDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(JobDetailsOutput{})
	pulumi.RegisterOutputType(JobDetailsPtrOutput{})
	pulumi.RegisterOutputType(JobDetailsResponseOutput{})
	pulumi.RegisterOutputType(JobDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(PackageInformationOutput{})
	pulumi.RegisterOutputType(PackageInformationPtrOutput{})
	pulumi.RegisterOutputType(PackageInformationResponseOutput{})
	pulumi.RegisterOutputType(PackageInformationResponsePtrOutput{})
	pulumi.RegisterOutputType(ReturnAddressOutput{})
	pulumi.RegisterOutputType(ReturnAddressPtrOutput{})
	pulumi.RegisterOutputType(ReturnAddressResponseOutput{})
	pulumi.RegisterOutputType(ReturnAddressResponsePtrOutput{})
	pulumi.RegisterOutputType(ReturnShippingOutput{})
	pulumi.RegisterOutputType(ReturnShippingPtrOutput{})
	pulumi.RegisterOutputType(ReturnShippingResponseOutput{})
	pulumi.RegisterOutputType(ReturnShippingResponsePtrOutput{})
	pulumi.RegisterOutputType(ShippingInformationOutput{})
	pulumi.RegisterOutputType(ShippingInformationPtrOutput{})
	pulumi.RegisterOutputType(ShippingInformationResponseOutput{})
	pulumi.RegisterOutputType(ShippingInformationResponsePtrOutput{})
}
