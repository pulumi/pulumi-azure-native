// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20161101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DriveState string

const (
	DriveStateSpecified         = DriveState("Specified")
	DriveStateReceived          = DriveState("Received")
	DriveStateNeverReceived     = DriveState("NeverReceived")
	DriveStateTransferring      = DriveState("Transferring")
	DriveStateCompleted         = DriveState("Completed")
	DriveStateCompletedMoreInfo = DriveState("CompletedMoreInfo")
	DriveStateShippedBack       = DriveState("ShippedBack")
)

func (DriveState) ElementType() reflect.Type {
	return reflect.TypeOf((*DriveState)(nil)).Elem()
}

func (e DriveState) ToDriveStateOutput() DriveStateOutput {
	return pulumi.ToOutput(e).(DriveStateOutput)
}

func (e DriveState) ToDriveStateOutputWithContext(ctx context.Context) DriveStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DriveStateOutput)
}

func (e DriveState) ToDriveStatePtrOutput() DriveStatePtrOutput {
	return e.ToDriveStatePtrOutputWithContext(context.Background())
}

func (e DriveState) ToDriveStatePtrOutputWithContext(ctx context.Context) DriveStatePtrOutput {
	return DriveState(e).ToDriveStateOutputWithContext(ctx).ToDriveStatePtrOutputWithContext(ctx)
}

func (e DriveState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DriveState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DriveState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DriveState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DriveStateOutput struct{ *pulumi.OutputState }

func (DriveStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DriveState)(nil)).Elem()
}

func (o DriveStateOutput) ToDriveStateOutput() DriveStateOutput {
	return o
}

func (o DriveStateOutput) ToDriveStateOutputWithContext(ctx context.Context) DriveStateOutput {
	return o
}

func (o DriveStateOutput) ToDriveStatePtrOutput() DriveStatePtrOutput {
	return o.ToDriveStatePtrOutputWithContext(context.Background())
}

func (o DriveStateOutput) ToDriveStatePtrOutputWithContext(ctx context.Context) DriveStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DriveState) *DriveState {
		return &v
	}).(DriveStatePtrOutput)
}

func (o DriveStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DriveStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DriveState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DriveStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DriveStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DriveState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DriveStatePtrOutput struct{ *pulumi.OutputState }

func (DriveStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DriveState)(nil)).Elem()
}

func (o DriveStatePtrOutput) ToDriveStatePtrOutput() DriveStatePtrOutput {
	return o
}

func (o DriveStatePtrOutput) ToDriveStatePtrOutputWithContext(ctx context.Context) DriveStatePtrOutput {
	return o
}

func (o DriveStatePtrOutput) Elem() DriveStateOutput {
	return o.ApplyT(func(v *DriveState) DriveState {
		if v != nil {
			return *v
		}
		var ret DriveState
		return ret
	}).(DriveStateOutput)
}

func (o DriveStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DriveStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DriveState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DriveStateInput is an input type that accepts DriveStateArgs and DriveStateOutput values.
// You can construct a concrete instance of `DriveStateInput` via:
//
//          DriveStateArgs{...}
type DriveStateInput interface {
	pulumi.Input

	ToDriveStateOutput() DriveStateOutput
	ToDriveStateOutputWithContext(context.Context) DriveStateOutput
}

var driveStatePtrType = reflect.TypeOf((**DriveState)(nil)).Elem()

type DriveStatePtrInput interface {
	pulumi.Input

	ToDriveStatePtrOutput() DriveStatePtrOutput
	ToDriveStatePtrOutputWithContext(context.Context) DriveStatePtrOutput
}

type driveStatePtr string

func DriveStatePtr(v string) DriveStatePtrInput {
	return (*driveStatePtr)(&v)
}

func (*driveStatePtr) ElementType() reflect.Type {
	return driveStatePtrType
}

func (in *driveStatePtr) ToDriveStatePtrOutput() DriveStatePtrOutput {
	return pulumi.ToOutput(in).(DriveStatePtrOutput)
}

func (in *driveStatePtr) ToDriveStatePtrOutputWithContext(ctx context.Context) DriveStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DriveStatePtrOutput)
}

type EncryptionKekType string

const (
	EncryptionKekTypeMicrosoftManaged = EncryptionKekType("MicrosoftManaged")
	EncryptionKekTypeCustomerManaged  = EncryptionKekType("CustomerManaged")
)

func (EncryptionKekType) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKekType)(nil)).Elem()
}

func (e EncryptionKekType) ToEncryptionKekTypeOutput() EncryptionKekTypeOutput {
	return pulumi.ToOutput(e).(EncryptionKekTypeOutput)
}

func (e EncryptionKekType) ToEncryptionKekTypeOutputWithContext(ctx context.Context) EncryptionKekTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionKekTypeOutput)
}

func (e EncryptionKekType) ToEncryptionKekTypePtrOutput() EncryptionKekTypePtrOutput {
	return e.ToEncryptionKekTypePtrOutputWithContext(context.Background())
}

func (e EncryptionKekType) ToEncryptionKekTypePtrOutputWithContext(ctx context.Context) EncryptionKekTypePtrOutput {
	return EncryptionKekType(e).ToEncryptionKekTypeOutputWithContext(ctx).ToEncryptionKekTypePtrOutputWithContext(ctx)
}

func (e EncryptionKekType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionKekType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionKekType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionKekType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionKekTypeOutput struct{ *pulumi.OutputState }

func (EncryptionKekTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKekType)(nil)).Elem()
}

func (o EncryptionKekTypeOutput) ToEncryptionKekTypeOutput() EncryptionKekTypeOutput {
	return o
}

func (o EncryptionKekTypeOutput) ToEncryptionKekTypeOutputWithContext(ctx context.Context) EncryptionKekTypeOutput {
	return o
}

func (o EncryptionKekTypeOutput) ToEncryptionKekTypePtrOutput() EncryptionKekTypePtrOutput {
	return o.ToEncryptionKekTypePtrOutputWithContext(context.Background())
}

func (o EncryptionKekTypeOutput) ToEncryptionKekTypePtrOutputWithContext(ctx context.Context) EncryptionKekTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionKekType) *EncryptionKekType {
		return &v
	}).(EncryptionKekTypePtrOutput)
}

func (o EncryptionKekTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionKekTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionKekType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionKekTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionKekTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionKekType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionKekTypePtrOutput struct{ *pulumi.OutputState }

func (EncryptionKekTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKekType)(nil)).Elem()
}

func (o EncryptionKekTypePtrOutput) ToEncryptionKekTypePtrOutput() EncryptionKekTypePtrOutput {
	return o
}

func (o EncryptionKekTypePtrOutput) ToEncryptionKekTypePtrOutputWithContext(ctx context.Context) EncryptionKekTypePtrOutput {
	return o
}

func (o EncryptionKekTypePtrOutput) Elem() EncryptionKekTypeOutput {
	return o.ApplyT(func(v *EncryptionKekType) EncryptionKekType {
		if v != nil {
			return *v
		}
		var ret EncryptionKekType
		return ret
	}).(EncryptionKekTypeOutput)
}

func (o EncryptionKekTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionKekTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionKekType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionKekTypeInput is an input type that accepts EncryptionKekTypeArgs and EncryptionKekTypeOutput values.
// You can construct a concrete instance of `EncryptionKekTypeInput` via:
//
//          EncryptionKekTypeArgs{...}
type EncryptionKekTypeInput interface {
	pulumi.Input

	ToEncryptionKekTypeOutput() EncryptionKekTypeOutput
	ToEncryptionKekTypeOutputWithContext(context.Context) EncryptionKekTypeOutput
}

var encryptionKekTypePtrType = reflect.TypeOf((**EncryptionKekType)(nil)).Elem()

type EncryptionKekTypePtrInput interface {
	pulumi.Input

	ToEncryptionKekTypePtrOutput() EncryptionKekTypePtrOutput
	ToEncryptionKekTypePtrOutputWithContext(context.Context) EncryptionKekTypePtrOutput
}

type encryptionKekTypePtr string

func EncryptionKekTypePtr(v string) EncryptionKekTypePtrInput {
	return (*encryptionKekTypePtr)(&v)
}

func (*encryptionKekTypePtr) ElementType() reflect.Type {
	return encryptionKekTypePtrType
}

func (in *encryptionKekTypePtr) ToEncryptionKekTypePtrOutput() EncryptionKekTypePtrOutput {
	return pulumi.ToOutput(in).(EncryptionKekTypePtrOutput)
}

func (in *encryptionKekTypePtr) ToEncryptionKekTypePtrOutputWithContext(ctx context.Context) EncryptionKekTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionKekTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DriveStateOutput{})
	pulumi.RegisterOutputType(DriveStatePtrOutput{})
	pulumi.RegisterOutputType(EncryptionKekTypeOutput{})
	pulumi.RegisterOutputType(EncryptionKekTypePtrOutput{})
}
