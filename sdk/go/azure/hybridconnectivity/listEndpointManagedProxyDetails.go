// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hybridconnectivity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Managed Proxy
// API Version: 2022-05-01-preview.
func ListEndpointManagedProxyDetails(ctx *pulumi.Context, args *ListEndpointManagedProxyDetailsArgs, opts ...pulumi.InvokeOption) (*ListEndpointManagedProxyDetailsResult, error) {
	var rv ListEndpointManagedProxyDetailsResult
	err := ctx.Invoke("azure-native:hybridconnectivity:listEndpointManagedProxyDetails", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListEndpointManagedProxyDetailsArgs struct {
	// The endpoint name.
	EndpointName string `pulumi:"endpointName"`
	// The target host name.
	Hostname *string `pulumi:"hostname"`
	// The fully qualified Azure Resource manager identifier of the resource to be connected.
	ResourceUri string `pulumi:"resourceUri"`
	// The name of the service.
	Service string `pulumi:"service"`
}

// Managed Proxy
type ListEndpointManagedProxyDetailsResult struct {
	// The expiration time of short lived proxy name in unix epoch.
	ExpiresOn float64 `pulumi:"expiresOn"`
	// The short lived proxy name.
	Proxy string `pulumi:"proxy"`
}

func ListEndpointManagedProxyDetailsOutput(ctx *pulumi.Context, args ListEndpointManagedProxyDetailsOutputArgs, opts ...pulumi.InvokeOption) ListEndpointManagedProxyDetailsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListEndpointManagedProxyDetailsResult, error) {
			args := v.(ListEndpointManagedProxyDetailsArgs)
			r, err := ListEndpointManagedProxyDetails(ctx, &args, opts...)
			var s ListEndpointManagedProxyDetailsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListEndpointManagedProxyDetailsResultOutput)
}

type ListEndpointManagedProxyDetailsOutputArgs struct {
	// The endpoint name.
	EndpointName pulumi.StringInput `pulumi:"endpointName"`
	// The target host name.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// The fully qualified Azure Resource manager identifier of the resource to be connected.
	ResourceUri pulumi.StringInput `pulumi:"resourceUri"`
	// The name of the service.
	Service pulumi.StringInput `pulumi:"service"`
}

func (ListEndpointManagedProxyDetailsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListEndpointManagedProxyDetailsArgs)(nil)).Elem()
}

// Managed Proxy
type ListEndpointManagedProxyDetailsResultOutput struct{ *pulumi.OutputState }

func (ListEndpointManagedProxyDetailsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListEndpointManagedProxyDetailsResult)(nil)).Elem()
}

func (o ListEndpointManagedProxyDetailsResultOutput) ToListEndpointManagedProxyDetailsResultOutput() ListEndpointManagedProxyDetailsResultOutput {
	return o
}

func (o ListEndpointManagedProxyDetailsResultOutput) ToListEndpointManagedProxyDetailsResultOutputWithContext(ctx context.Context) ListEndpointManagedProxyDetailsResultOutput {
	return o
}

// The expiration time of short lived proxy name in unix epoch.
func (o ListEndpointManagedProxyDetailsResultOutput) ExpiresOn() pulumi.Float64Output {
	return o.ApplyT(func(v ListEndpointManagedProxyDetailsResult) float64 { return v.ExpiresOn }).(pulumi.Float64Output)
}

// The short lived proxy name.
func (o ListEndpointManagedProxyDetailsResultOutput) Proxy() pulumi.StringOutput {
	return o.ApplyT(func(v ListEndpointManagedProxyDetailsResult) string { return v.Proxy }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ListEndpointManagedProxyDetailsResultOutput{})
}
