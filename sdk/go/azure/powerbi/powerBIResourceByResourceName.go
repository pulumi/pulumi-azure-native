// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package powerbi

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// API Version: 2020-06-01.
type PowerBIResourceByResourceName struct {
	pulumi.CustomResourceState

	// Specifies the location of the resource.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Specifies the name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the private endpoint connections of the resource.
	PrivateEndpointConnections PrivateEndpointConnectionResponseArrayOutput `pulumi:"privateEndpointConnections"`
	// The system metadata relating to this resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Specifies the tags of the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the tenant id of the resource.
	TenantId pulumi.StringPtrOutput `pulumi:"tenantId"`
	// Specifies the type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewPowerBIResourceByResourceName registers a new resource with the given unique name, arguments, and options.
func NewPowerBIResourceByResourceName(ctx *pulumi.Context,
	name string, args *PowerBIResourceByResourceNameArgs, opts ...pulumi.ResourceOption) (*PowerBIResourceByResourceName, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:powerbi:PowerBIResourceByResourceName"),
		},
		{
			Type: pulumi.String("azure-native:powerbi/v20200601:PowerBIResourceByResourceName"),
		},
		{
			Type: pulumi.String("azure-nextgen:powerbi/v20200601:PowerBIResourceByResourceName"),
		},
	})
	opts = append(opts, aliases)
	var resource PowerBIResourceByResourceName
	err := ctx.RegisterResource("azure-native:powerbi:PowerBIResourceByResourceName", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPowerBIResourceByResourceName gets an existing PowerBIResourceByResourceName resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPowerBIResourceByResourceName(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PowerBIResourceByResourceNameState, opts ...pulumi.ResourceOption) (*PowerBIResourceByResourceName, error) {
	var resource PowerBIResourceByResourceName
	err := ctx.ReadResource("azure-native:powerbi:PowerBIResourceByResourceName", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PowerBIResourceByResourceName resources.
type powerBIResourceByResourceNameState struct {
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// Specifies the name of the resource.
	Name *string `pulumi:"name"`
	// Specifies the private endpoint connections of the resource.
	PrivateEndpointConnections []PrivateEndpointConnectionResponse `pulumi:"privateEndpointConnections"`
	// The system metadata relating to this resource.
	SystemData *SystemDataResponse `pulumi:"systemData"`
	// Specifies the tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the tenant id of the resource.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of the resource.
	Type *string `pulumi:"type"`
}

type PowerBIResourceByResourceNameState struct {
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput
	// Specifies the name of the resource.
	Name pulumi.StringPtrInput
	// Specifies the private endpoint connections of the resource.
	PrivateEndpointConnections PrivateEndpointConnectionResponseArrayInput
	// The system metadata relating to this resource.
	SystemData SystemDataResponsePtrInput
	// Specifies the tags of the resource.
	Tags pulumi.StringMapInput
	// Specifies the tenant id of the resource.
	TenantId pulumi.StringPtrInput
	// Specifies the type of the resource.
	Type pulumi.StringPtrInput
}

func (PowerBIResourceByResourceNameState) ElementType() reflect.Type {
	return reflect.TypeOf((*powerBIResourceByResourceNameState)(nil)).Elem()
}

type powerBIResourceByResourceNameArgs struct {
	// The name of the Azure resource.
	AzureResourceName *string `pulumi:"azureResourceName"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// Specifies the private endpoint connections of the resource.
	PrivateEndpointConnections []PrivateEndpointConnectionType `pulumi:"privateEndpointConnections"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Specifies the tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the tenant id of the resource.
	TenantId *string `pulumi:"tenantId"`
}

// The set of arguments for constructing a PowerBIResourceByResourceName resource.
type PowerBIResourceByResourceNameArgs struct {
	// The name of the Azure resource.
	AzureResourceName pulumi.StringPtrInput
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput
	// Specifies the private endpoint connections of the resource.
	PrivateEndpointConnections PrivateEndpointConnectionTypeArrayInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// Specifies the tags of the resource.
	Tags pulumi.StringMapInput
	// Specifies the tenant id of the resource.
	TenantId pulumi.StringPtrInput
}

func (PowerBIResourceByResourceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*powerBIResourceByResourceNameArgs)(nil)).Elem()
}

type PowerBIResourceByResourceNameInput interface {
	pulumi.Input

	ToPowerBIResourceByResourceNameOutput() PowerBIResourceByResourceNameOutput
	ToPowerBIResourceByResourceNameOutputWithContext(ctx context.Context) PowerBIResourceByResourceNameOutput
}

func (*PowerBIResourceByResourceName) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerBIResourceByResourceName)(nil))
}

func (i *PowerBIResourceByResourceName) ToPowerBIResourceByResourceNameOutput() PowerBIResourceByResourceNameOutput {
	return i.ToPowerBIResourceByResourceNameOutputWithContext(context.Background())
}

func (i *PowerBIResourceByResourceName) ToPowerBIResourceByResourceNameOutputWithContext(ctx context.Context) PowerBIResourceByResourceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerBIResourceByResourceNameOutput)
}

type PowerBIResourceByResourceNameOutput struct {
	*pulumi.OutputState
}

func (PowerBIResourceByResourceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerBIResourceByResourceName)(nil))
}

func (o PowerBIResourceByResourceNameOutput) ToPowerBIResourceByResourceNameOutput() PowerBIResourceByResourceNameOutput {
	return o
}

func (o PowerBIResourceByResourceNameOutput) ToPowerBIResourceByResourceNameOutputWithContext(ctx context.Context) PowerBIResourceByResourceNameOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(PowerBIResourceByResourceNameOutput{})
}
