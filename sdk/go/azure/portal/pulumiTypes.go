// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package portal

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Cloud shell properties for creating a console.
type ConsoleCreateProperties struct {
	// The operating system type of the cloud shell.
	OsType string `pulumi:"osType"`
	// Provisioning state of the console.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Uri of the console.
	Uri *string `pulumi:"uri"`
}

// ConsoleCreatePropertiesInput is an input type that accepts ConsoleCreatePropertiesArgs and ConsoleCreatePropertiesOutput values.
// You can construct a concrete instance of `ConsoleCreatePropertiesInput` via:
//
//          ConsoleCreatePropertiesArgs{...}
type ConsoleCreatePropertiesInput interface {
	pulumi.Input

	ToConsoleCreatePropertiesOutput() ConsoleCreatePropertiesOutput
	ToConsoleCreatePropertiesOutputWithContext(context.Context) ConsoleCreatePropertiesOutput
}

// Cloud shell properties for creating a console.
type ConsoleCreatePropertiesArgs struct {
	// The operating system type of the cloud shell.
	OsType pulumi.StringInput `pulumi:"osType"`
	// Provisioning state of the console.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Uri of the console.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (ConsoleCreatePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsoleCreateProperties)(nil)).Elem()
}

func (i ConsoleCreatePropertiesArgs) ToConsoleCreatePropertiesOutput() ConsoleCreatePropertiesOutput {
	return i.ToConsoleCreatePropertiesOutputWithContext(context.Background())
}

func (i ConsoleCreatePropertiesArgs) ToConsoleCreatePropertiesOutputWithContext(ctx context.Context) ConsoleCreatePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsoleCreatePropertiesOutput)
}

func (i ConsoleCreatePropertiesArgs) ToConsoleCreatePropertiesPtrOutput() ConsoleCreatePropertiesPtrOutput {
	return i.ToConsoleCreatePropertiesPtrOutputWithContext(context.Background())
}

func (i ConsoleCreatePropertiesArgs) ToConsoleCreatePropertiesPtrOutputWithContext(ctx context.Context) ConsoleCreatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsoleCreatePropertiesOutput).ToConsoleCreatePropertiesPtrOutputWithContext(ctx)
}

// ConsoleCreatePropertiesPtrInput is an input type that accepts ConsoleCreatePropertiesArgs, ConsoleCreatePropertiesPtr and ConsoleCreatePropertiesPtrOutput values.
// You can construct a concrete instance of `ConsoleCreatePropertiesPtrInput` via:
//
//          ConsoleCreatePropertiesArgs{...}
//
//  or:
//
//          nil
type ConsoleCreatePropertiesPtrInput interface {
	pulumi.Input

	ToConsoleCreatePropertiesPtrOutput() ConsoleCreatePropertiesPtrOutput
	ToConsoleCreatePropertiesPtrOutputWithContext(context.Context) ConsoleCreatePropertiesPtrOutput
}

type consoleCreatePropertiesPtrType ConsoleCreatePropertiesArgs

func ConsoleCreatePropertiesPtr(v *ConsoleCreatePropertiesArgs) ConsoleCreatePropertiesPtrInput {
	return (*consoleCreatePropertiesPtrType)(v)
}

func (*consoleCreatePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsoleCreateProperties)(nil)).Elem()
}

func (i *consoleCreatePropertiesPtrType) ToConsoleCreatePropertiesPtrOutput() ConsoleCreatePropertiesPtrOutput {
	return i.ToConsoleCreatePropertiesPtrOutputWithContext(context.Background())
}

func (i *consoleCreatePropertiesPtrType) ToConsoleCreatePropertiesPtrOutputWithContext(ctx context.Context) ConsoleCreatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsoleCreatePropertiesPtrOutput)
}

// Cloud shell properties for creating a console.
type ConsoleCreatePropertiesOutput struct{ *pulumi.OutputState }

func (ConsoleCreatePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsoleCreateProperties)(nil)).Elem()
}

func (o ConsoleCreatePropertiesOutput) ToConsoleCreatePropertiesOutput() ConsoleCreatePropertiesOutput {
	return o
}

func (o ConsoleCreatePropertiesOutput) ToConsoleCreatePropertiesOutputWithContext(ctx context.Context) ConsoleCreatePropertiesOutput {
	return o
}

func (o ConsoleCreatePropertiesOutput) ToConsoleCreatePropertiesPtrOutput() ConsoleCreatePropertiesPtrOutput {
	return o.ToConsoleCreatePropertiesPtrOutputWithContext(context.Background())
}

func (o ConsoleCreatePropertiesOutput) ToConsoleCreatePropertiesPtrOutputWithContext(ctx context.Context) ConsoleCreatePropertiesPtrOutput {
	return o.ApplyT(func(v ConsoleCreateProperties) *ConsoleCreateProperties {
		return &v
	}).(ConsoleCreatePropertiesPtrOutput)
}

// The operating system type of the cloud shell.
func (o ConsoleCreatePropertiesOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v ConsoleCreateProperties) string { return v.OsType }).(pulumi.StringOutput)
}

// Provisioning state of the console.
func (o ConsoleCreatePropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsoleCreateProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Uri of the console.
func (o ConsoleCreatePropertiesOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsoleCreateProperties) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type ConsoleCreatePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConsoleCreatePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsoleCreateProperties)(nil)).Elem()
}

func (o ConsoleCreatePropertiesPtrOutput) ToConsoleCreatePropertiesPtrOutput() ConsoleCreatePropertiesPtrOutput {
	return o
}

func (o ConsoleCreatePropertiesPtrOutput) ToConsoleCreatePropertiesPtrOutputWithContext(ctx context.Context) ConsoleCreatePropertiesPtrOutput {
	return o
}

func (o ConsoleCreatePropertiesPtrOutput) Elem() ConsoleCreatePropertiesOutput {
	return o.ApplyT(func(v *ConsoleCreateProperties) ConsoleCreateProperties { return *v }).(ConsoleCreatePropertiesOutput)
}

// The operating system type of the cloud shell.
func (o ConsoleCreatePropertiesPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsoleCreateProperties) *string {
		if v == nil {
			return nil
		}
		return &v.OsType
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the console.
func (o ConsoleCreatePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsoleCreateProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Uri of the console.
func (o ConsoleCreatePropertiesPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsoleCreateProperties) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// Cloud shell console properties.
type ConsolePropertiesResponse struct {
	// The operating system type of the cloud shell.
	OsType string `pulumi:"osType"`
	// Provisioning state of the console.
	ProvisioningState string `pulumi:"provisioningState"`
	// Uri of the console.
	Uri string `pulumi:"uri"`
}

// ConsolePropertiesResponseInput is an input type that accepts ConsolePropertiesResponseArgs and ConsolePropertiesResponseOutput values.
// You can construct a concrete instance of `ConsolePropertiesResponseInput` via:
//
//          ConsolePropertiesResponseArgs{...}
type ConsolePropertiesResponseInput interface {
	pulumi.Input

	ToConsolePropertiesResponseOutput() ConsolePropertiesResponseOutput
	ToConsolePropertiesResponseOutputWithContext(context.Context) ConsolePropertiesResponseOutput
}

// Cloud shell console properties.
type ConsolePropertiesResponseArgs struct {
	// The operating system type of the cloud shell.
	OsType pulumi.StringInput `pulumi:"osType"`
	// Provisioning state of the console.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Uri of the console.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (ConsolePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsolePropertiesResponse)(nil)).Elem()
}

func (i ConsolePropertiesResponseArgs) ToConsolePropertiesResponseOutput() ConsolePropertiesResponseOutput {
	return i.ToConsolePropertiesResponseOutputWithContext(context.Background())
}

func (i ConsolePropertiesResponseArgs) ToConsolePropertiesResponseOutputWithContext(ctx context.Context) ConsolePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsolePropertiesResponseOutput)
}

func (i ConsolePropertiesResponseArgs) ToConsolePropertiesResponsePtrOutput() ConsolePropertiesResponsePtrOutput {
	return i.ToConsolePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ConsolePropertiesResponseArgs) ToConsolePropertiesResponsePtrOutputWithContext(ctx context.Context) ConsolePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsolePropertiesResponseOutput).ToConsolePropertiesResponsePtrOutputWithContext(ctx)
}

// ConsolePropertiesResponsePtrInput is an input type that accepts ConsolePropertiesResponseArgs, ConsolePropertiesResponsePtr and ConsolePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ConsolePropertiesResponsePtrInput` via:
//
//          ConsolePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ConsolePropertiesResponsePtrInput interface {
	pulumi.Input

	ToConsolePropertiesResponsePtrOutput() ConsolePropertiesResponsePtrOutput
	ToConsolePropertiesResponsePtrOutputWithContext(context.Context) ConsolePropertiesResponsePtrOutput
}

type consolePropertiesResponsePtrType ConsolePropertiesResponseArgs

func ConsolePropertiesResponsePtr(v *ConsolePropertiesResponseArgs) ConsolePropertiesResponsePtrInput {
	return (*consolePropertiesResponsePtrType)(v)
}

func (*consolePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsolePropertiesResponse)(nil)).Elem()
}

func (i *consolePropertiesResponsePtrType) ToConsolePropertiesResponsePtrOutput() ConsolePropertiesResponsePtrOutput {
	return i.ToConsolePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *consolePropertiesResponsePtrType) ToConsolePropertiesResponsePtrOutputWithContext(ctx context.Context) ConsolePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsolePropertiesResponsePtrOutput)
}

// Cloud shell console properties.
type ConsolePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConsolePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsolePropertiesResponse)(nil)).Elem()
}

func (o ConsolePropertiesResponseOutput) ToConsolePropertiesResponseOutput() ConsolePropertiesResponseOutput {
	return o
}

func (o ConsolePropertiesResponseOutput) ToConsolePropertiesResponseOutputWithContext(ctx context.Context) ConsolePropertiesResponseOutput {
	return o
}

func (o ConsolePropertiesResponseOutput) ToConsolePropertiesResponsePtrOutput() ConsolePropertiesResponsePtrOutput {
	return o.ToConsolePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ConsolePropertiesResponseOutput) ToConsolePropertiesResponsePtrOutputWithContext(ctx context.Context) ConsolePropertiesResponsePtrOutput {
	return o.ApplyT(func(v ConsolePropertiesResponse) *ConsolePropertiesResponse {
		return &v
	}).(ConsolePropertiesResponsePtrOutput)
}

// The operating system type of the cloud shell.
func (o ConsolePropertiesResponseOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v ConsolePropertiesResponse) string { return v.OsType }).(pulumi.StringOutput)
}

// Provisioning state of the console.
func (o ConsolePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ConsolePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Uri of the console.
func (o ConsolePropertiesResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ConsolePropertiesResponse) string { return v.Uri }).(pulumi.StringOutput)
}

type ConsolePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ConsolePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsolePropertiesResponse)(nil)).Elem()
}

func (o ConsolePropertiesResponsePtrOutput) ToConsolePropertiesResponsePtrOutput() ConsolePropertiesResponsePtrOutput {
	return o
}

func (o ConsolePropertiesResponsePtrOutput) ToConsolePropertiesResponsePtrOutputWithContext(ctx context.Context) ConsolePropertiesResponsePtrOutput {
	return o
}

func (o ConsolePropertiesResponsePtrOutput) Elem() ConsolePropertiesResponseOutput {
	return o.ApplyT(func(v *ConsolePropertiesResponse) ConsolePropertiesResponse { return *v }).(ConsolePropertiesResponseOutput)
}

// The operating system type of the cloud shell.
func (o ConsolePropertiesResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsolePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OsType
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the console.
func (o ConsolePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsolePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Uri of the console.
func (o ConsolePropertiesResponsePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsolePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

// A dashboard lens.
type DashboardLens struct {
	// The dashboard len's metadata.
	Metadata map[string]interface{} `pulumi:"metadata"`
	// The lens order.
	Order int `pulumi:"order"`
	// The dashboard parts.
	Parts []DashboardParts `pulumi:"parts"`
}

// DashboardLensInput is an input type that accepts DashboardLensArgs and DashboardLensOutput values.
// You can construct a concrete instance of `DashboardLensInput` via:
//
//          DashboardLensArgs{...}
type DashboardLensInput interface {
	pulumi.Input

	ToDashboardLensOutput() DashboardLensOutput
	ToDashboardLensOutputWithContext(context.Context) DashboardLensOutput
}

// A dashboard lens.
type DashboardLensArgs struct {
	// The dashboard len's metadata.
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// The lens order.
	Order pulumi.IntInput `pulumi:"order"`
	// The dashboard parts.
	Parts DashboardPartsArrayInput `pulumi:"parts"`
}

func (DashboardLensArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLens)(nil)).Elem()
}

func (i DashboardLensArgs) ToDashboardLensOutput() DashboardLensOutput {
	return i.ToDashboardLensOutputWithContext(context.Background())
}

func (i DashboardLensArgs) ToDashboardLensOutputWithContext(ctx context.Context) DashboardLensOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLensOutput)
}

// DashboardLensArrayInput is an input type that accepts DashboardLensArray and DashboardLensArrayOutput values.
// You can construct a concrete instance of `DashboardLensArrayInput` via:
//
//          DashboardLensArray{ DashboardLensArgs{...} }
type DashboardLensArrayInput interface {
	pulumi.Input

	ToDashboardLensArrayOutput() DashboardLensArrayOutput
	ToDashboardLensArrayOutputWithContext(context.Context) DashboardLensArrayOutput
}

type DashboardLensArray []DashboardLensInput

func (DashboardLensArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardLens)(nil)).Elem()
}

func (i DashboardLensArray) ToDashboardLensArrayOutput() DashboardLensArrayOutput {
	return i.ToDashboardLensArrayOutputWithContext(context.Background())
}

func (i DashboardLensArray) ToDashboardLensArrayOutputWithContext(ctx context.Context) DashboardLensArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLensArrayOutput)
}

// A dashboard lens.
type DashboardLensOutput struct{ *pulumi.OutputState }

func (DashboardLensOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLens)(nil)).Elem()
}

func (o DashboardLensOutput) ToDashboardLensOutput() DashboardLensOutput {
	return o
}

func (o DashboardLensOutput) ToDashboardLensOutputWithContext(ctx context.Context) DashboardLensOutput {
	return o
}

// The dashboard len's metadata.
func (o DashboardLensOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v DashboardLens) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

// The lens order.
func (o DashboardLensOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardLens) int { return v.Order }).(pulumi.IntOutput)
}

// The dashboard parts.
func (o DashboardLensOutput) Parts() DashboardPartsArrayOutput {
	return o.ApplyT(func(v DashboardLens) []DashboardParts { return v.Parts }).(DashboardPartsArrayOutput)
}

type DashboardLensArrayOutput struct{ *pulumi.OutputState }

func (DashboardLensArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardLens)(nil)).Elem()
}

func (o DashboardLensArrayOutput) ToDashboardLensArrayOutput() DashboardLensArrayOutput {
	return o
}

func (o DashboardLensArrayOutput) ToDashboardLensArrayOutputWithContext(ctx context.Context) DashboardLensArrayOutput {
	return o
}

func (o DashboardLensArrayOutput) Index(i pulumi.IntInput) DashboardLensOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardLens {
		return vs[0].([]DashboardLens)[vs[1].(int)]
	}).(DashboardLensOutput)
}

// A dashboard lens.
type DashboardLensResponse struct {
	// The dashboard len's metadata.
	Metadata map[string]interface{} `pulumi:"metadata"`
	// The lens order.
	Order int `pulumi:"order"`
	// The dashboard parts.
	Parts []DashboardPartsResponse `pulumi:"parts"`
}

// DashboardLensResponseInput is an input type that accepts DashboardLensResponseArgs and DashboardLensResponseOutput values.
// You can construct a concrete instance of `DashboardLensResponseInput` via:
//
//          DashboardLensResponseArgs{...}
type DashboardLensResponseInput interface {
	pulumi.Input

	ToDashboardLensResponseOutput() DashboardLensResponseOutput
	ToDashboardLensResponseOutputWithContext(context.Context) DashboardLensResponseOutput
}

// A dashboard lens.
type DashboardLensResponseArgs struct {
	// The dashboard len's metadata.
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// The lens order.
	Order pulumi.IntInput `pulumi:"order"`
	// The dashboard parts.
	Parts DashboardPartsResponseArrayInput `pulumi:"parts"`
}

func (DashboardLensResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLensResponse)(nil)).Elem()
}

func (i DashboardLensResponseArgs) ToDashboardLensResponseOutput() DashboardLensResponseOutput {
	return i.ToDashboardLensResponseOutputWithContext(context.Background())
}

func (i DashboardLensResponseArgs) ToDashboardLensResponseOutputWithContext(ctx context.Context) DashboardLensResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLensResponseOutput)
}

// DashboardLensResponseArrayInput is an input type that accepts DashboardLensResponseArray and DashboardLensResponseArrayOutput values.
// You can construct a concrete instance of `DashboardLensResponseArrayInput` via:
//
//          DashboardLensResponseArray{ DashboardLensResponseArgs{...} }
type DashboardLensResponseArrayInput interface {
	pulumi.Input

	ToDashboardLensResponseArrayOutput() DashboardLensResponseArrayOutput
	ToDashboardLensResponseArrayOutputWithContext(context.Context) DashboardLensResponseArrayOutput
}

type DashboardLensResponseArray []DashboardLensResponseInput

func (DashboardLensResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardLensResponse)(nil)).Elem()
}

func (i DashboardLensResponseArray) ToDashboardLensResponseArrayOutput() DashboardLensResponseArrayOutput {
	return i.ToDashboardLensResponseArrayOutputWithContext(context.Background())
}

func (i DashboardLensResponseArray) ToDashboardLensResponseArrayOutputWithContext(ctx context.Context) DashboardLensResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLensResponseArrayOutput)
}

// A dashboard lens.
type DashboardLensResponseOutput struct{ *pulumi.OutputState }

func (DashboardLensResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLensResponse)(nil)).Elem()
}

func (o DashboardLensResponseOutput) ToDashboardLensResponseOutput() DashboardLensResponseOutput {
	return o
}

func (o DashboardLensResponseOutput) ToDashboardLensResponseOutputWithContext(ctx context.Context) DashboardLensResponseOutput {
	return o
}

// The dashboard len's metadata.
func (o DashboardLensResponseOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v DashboardLensResponse) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

// The lens order.
func (o DashboardLensResponseOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardLensResponse) int { return v.Order }).(pulumi.IntOutput)
}

// The dashboard parts.
func (o DashboardLensResponseOutput) Parts() DashboardPartsResponseArrayOutput {
	return o.ApplyT(func(v DashboardLensResponse) []DashboardPartsResponse { return v.Parts }).(DashboardPartsResponseArrayOutput)
}

type DashboardLensResponseArrayOutput struct{ *pulumi.OutputState }

func (DashboardLensResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardLensResponse)(nil)).Elem()
}

func (o DashboardLensResponseArrayOutput) ToDashboardLensResponseArrayOutput() DashboardLensResponseArrayOutput {
	return o
}

func (o DashboardLensResponseArrayOutput) ToDashboardLensResponseArrayOutputWithContext(ctx context.Context) DashboardLensResponseArrayOutput {
	return o
}

func (o DashboardLensResponseArrayOutput) Index(i pulumi.IntInput) DashboardLensResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardLensResponse {
		return vs[0].([]DashboardLensResponse)[vs[1].(int)]
	}).(DashboardLensResponseOutput)
}

// A dashboard part.
type DashboardParts struct {
	// The dashboard part's metadata.
	Metadata *MarkdownPartMetadata `pulumi:"metadata"`
	// The dashboard's part position.
	Position DashboardPartsPosition `pulumi:"position"`
}

// DashboardPartsInput is an input type that accepts DashboardPartsArgs and DashboardPartsOutput values.
// You can construct a concrete instance of `DashboardPartsInput` via:
//
//          DashboardPartsArgs{...}
type DashboardPartsInput interface {
	pulumi.Input

	ToDashboardPartsOutput() DashboardPartsOutput
	ToDashboardPartsOutputWithContext(context.Context) DashboardPartsOutput
}

// A dashboard part.
type DashboardPartsArgs struct {
	// The dashboard part's metadata.
	Metadata MarkdownPartMetadataPtrInput `pulumi:"metadata"`
	// The dashboard's part position.
	Position DashboardPartsPositionInput `pulumi:"position"`
}

func (DashboardPartsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParts)(nil)).Elem()
}

func (i DashboardPartsArgs) ToDashboardPartsOutput() DashboardPartsOutput {
	return i.ToDashboardPartsOutputWithContext(context.Background())
}

func (i DashboardPartsArgs) ToDashboardPartsOutputWithContext(ctx context.Context) DashboardPartsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPartsOutput)
}

// DashboardPartsArrayInput is an input type that accepts DashboardPartsArray and DashboardPartsArrayOutput values.
// You can construct a concrete instance of `DashboardPartsArrayInput` via:
//
//          DashboardPartsArray{ DashboardPartsArgs{...} }
type DashboardPartsArrayInput interface {
	pulumi.Input

	ToDashboardPartsArrayOutput() DashboardPartsArrayOutput
	ToDashboardPartsArrayOutputWithContext(context.Context) DashboardPartsArrayOutput
}

type DashboardPartsArray []DashboardPartsInput

func (DashboardPartsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardParts)(nil)).Elem()
}

func (i DashboardPartsArray) ToDashboardPartsArrayOutput() DashboardPartsArrayOutput {
	return i.ToDashboardPartsArrayOutputWithContext(context.Background())
}

func (i DashboardPartsArray) ToDashboardPartsArrayOutputWithContext(ctx context.Context) DashboardPartsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPartsArrayOutput)
}

// A dashboard part.
type DashboardPartsOutput struct{ *pulumi.OutputState }

func (DashboardPartsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParts)(nil)).Elem()
}

func (o DashboardPartsOutput) ToDashboardPartsOutput() DashboardPartsOutput {
	return o
}

func (o DashboardPartsOutput) ToDashboardPartsOutputWithContext(ctx context.Context) DashboardPartsOutput {
	return o
}

// The dashboard part's metadata.
func (o DashboardPartsOutput) Metadata() MarkdownPartMetadataPtrOutput {
	return o.ApplyT(func(v DashboardParts) *MarkdownPartMetadata { return v.Metadata }).(MarkdownPartMetadataPtrOutput)
}

// The dashboard's part position.
func (o DashboardPartsOutput) Position() DashboardPartsPositionOutput {
	return o.ApplyT(func(v DashboardParts) DashboardPartsPosition { return v.Position }).(DashboardPartsPositionOutput)
}

type DashboardPartsArrayOutput struct{ *pulumi.OutputState }

func (DashboardPartsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardParts)(nil)).Elem()
}

func (o DashboardPartsArrayOutput) ToDashboardPartsArrayOutput() DashboardPartsArrayOutput {
	return o
}

func (o DashboardPartsArrayOutput) ToDashboardPartsArrayOutputWithContext(ctx context.Context) DashboardPartsArrayOutput {
	return o
}

func (o DashboardPartsArrayOutput) Index(i pulumi.IntInput) DashboardPartsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardParts {
		return vs[0].([]DashboardParts)[vs[1].(int)]
	}).(DashboardPartsOutput)
}

// The dashboard's part position.
type DashboardPartsPosition struct {
	// The dashboard's part column span.
	ColSpan int `pulumi:"colSpan"`
	// The dashboard part's metadata.
	Metadata map[string]interface{} `pulumi:"metadata"`
	// The dashboard's part row span.
	RowSpan int `pulumi:"rowSpan"`
	// The dashboard's part x coordinate.
	X int `pulumi:"x"`
	// The dashboard's part y coordinate.
	Y int `pulumi:"y"`
}

// DashboardPartsPositionInput is an input type that accepts DashboardPartsPositionArgs and DashboardPartsPositionOutput values.
// You can construct a concrete instance of `DashboardPartsPositionInput` via:
//
//          DashboardPartsPositionArgs{...}
type DashboardPartsPositionInput interface {
	pulumi.Input

	ToDashboardPartsPositionOutput() DashboardPartsPositionOutput
	ToDashboardPartsPositionOutputWithContext(context.Context) DashboardPartsPositionOutput
}

// The dashboard's part position.
type DashboardPartsPositionArgs struct {
	// The dashboard's part column span.
	ColSpan pulumi.IntInput `pulumi:"colSpan"`
	// The dashboard part's metadata.
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// The dashboard's part row span.
	RowSpan pulumi.IntInput `pulumi:"rowSpan"`
	// The dashboard's part x coordinate.
	X pulumi.IntInput `pulumi:"x"`
	// The dashboard's part y coordinate.
	Y pulumi.IntInput `pulumi:"y"`
}

func (DashboardPartsPositionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPartsPosition)(nil)).Elem()
}

func (i DashboardPartsPositionArgs) ToDashboardPartsPositionOutput() DashboardPartsPositionOutput {
	return i.ToDashboardPartsPositionOutputWithContext(context.Background())
}

func (i DashboardPartsPositionArgs) ToDashboardPartsPositionOutputWithContext(ctx context.Context) DashboardPartsPositionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPartsPositionOutput)
}

// The dashboard's part position.
type DashboardPartsPositionOutput struct{ *pulumi.OutputState }

func (DashboardPartsPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPartsPosition)(nil)).Elem()
}

func (o DashboardPartsPositionOutput) ToDashboardPartsPositionOutput() DashboardPartsPositionOutput {
	return o
}

func (o DashboardPartsPositionOutput) ToDashboardPartsPositionOutputWithContext(ctx context.Context) DashboardPartsPositionOutput {
	return o
}

// The dashboard's part column span.
func (o DashboardPartsPositionOutput) ColSpan() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardPartsPosition) int { return v.ColSpan }).(pulumi.IntOutput)
}

// The dashboard part's metadata.
func (o DashboardPartsPositionOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v DashboardPartsPosition) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

// The dashboard's part row span.
func (o DashboardPartsPositionOutput) RowSpan() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardPartsPosition) int { return v.RowSpan }).(pulumi.IntOutput)
}

// The dashboard's part x coordinate.
func (o DashboardPartsPositionOutput) X() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardPartsPosition) int { return v.X }).(pulumi.IntOutput)
}

// The dashboard's part y coordinate.
func (o DashboardPartsPositionOutput) Y() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardPartsPosition) int { return v.Y }).(pulumi.IntOutput)
}

// A dashboard part.
type DashboardPartsResponse struct {
	// The dashboard part's metadata.
	Metadata *MarkdownPartMetadataResponse `pulumi:"metadata"`
	// The dashboard's part position.
	Position DashboardPartsResponsePosition `pulumi:"position"`
}

// DashboardPartsResponseInput is an input type that accepts DashboardPartsResponseArgs and DashboardPartsResponseOutput values.
// You can construct a concrete instance of `DashboardPartsResponseInput` via:
//
//          DashboardPartsResponseArgs{...}
type DashboardPartsResponseInput interface {
	pulumi.Input

	ToDashboardPartsResponseOutput() DashboardPartsResponseOutput
	ToDashboardPartsResponseOutputWithContext(context.Context) DashboardPartsResponseOutput
}

// A dashboard part.
type DashboardPartsResponseArgs struct {
	// The dashboard part's metadata.
	Metadata MarkdownPartMetadataResponsePtrInput `pulumi:"metadata"`
	// The dashboard's part position.
	Position DashboardPartsResponsePositionInput `pulumi:"position"`
}

func (DashboardPartsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPartsResponse)(nil)).Elem()
}

func (i DashboardPartsResponseArgs) ToDashboardPartsResponseOutput() DashboardPartsResponseOutput {
	return i.ToDashboardPartsResponseOutputWithContext(context.Background())
}

func (i DashboardPartsResponseArgs) ToDashboardPartsResponseOutputWithContext(ctx context.Context) DashboardPartsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPartsResponseOutput)
}

// DashboardPartsResponseArrayInput is an input type that accepts DashboardPartsResponseArray and DashboardPartsResponseArrayOutput values.
// You can construct a concrete instance of `DashboardPartsResponseArrayInput` via:
//
//          DashboardPartsResponseArray{ DashboardPartsResponseArgs{...} }
type DashboardPartsResponseArrayInput interface {
	pulumi.Input

	ToDashboardPartsResponseArrayOutput() DashboardPartsResponseArrayOutput
	ToDashboardPartsResponseArrayOutputWithContext(context.Context) DashboardPartsResponseArrayOutput
}

type DashboardPartsResponseArray []DashboardPartsResponseInput

func (DashboardPartsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPartsResponse)(nil)).Elem()
}

func (i DashboardPartsResponseArray) ToDashboardPartsResponseArrayOutput() DashboardPartsResponseArrayOutput {
	return i.ToDashboardPartsResponseArrayOutputWithContext(context.Background())
}

func (i DashboardPartsResponseArray) ToDashboardPartsResponseArrayOutputWithContext(ctx context.Context) DashboardPartsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPartsResponseArrayOutput)
}

// A dashboard part.
type DashboardPartsResponseOutput struct{ *pulumi.OutputState }

func (DashboardPartsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPartsResponse)(nil)).Elem()
}

func (o DashboardPartsResponseOutput) ToDashboardPartsResponseOutput() DashboardPartsResponseOutput {
	return o
}

func (o DashboardPartsResponseOutput) ToDashboardPartsResponseOutputWithContext(ctx context.Context) DashboardPartsResponseOutput {
	return o
}

// The dashboard part's metadata.
func (o DashboardPartsResponseOutput) Metadata() MarkdownPartMetadataResponsePtrOutput {
	return o.ApplyT(func(v DashboardPartsResponse) *MarkdownPartMetadataResponse { return v.Metadata }).(MarkdownPartMetadataResponsePtrOutput)
}

// The dashboard's part position.
func (o DashboardPartsResponseOutput) Position() DashboardPartsResponsePositionOutput {
	return o.ApplyT(func(v DashboardPartsResponse) DashboardPartsResponsePosition { return v.Position }).(DashboardPartsResponsePositionOutput)
}

type DashboardPartsResponseArrayOutput struct{ *pulumi.OutputState }

func (DashboardPartsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPartsResponse)(nil)).Elem()
}

func (o DashboardPartsResponseArrayOutput) ToDashboardPartsResponseArrayOutput() DashboardPartsResponseArrayOutput {
	return o
}

func (o DashboardPartsResponseArrayOutput) ToDashboardPartsResponseArrayOutputWithContext(ctx context.Context) DashboardPartsResponseArrayOutput {
	return o
}

func (o DashboardPartsResponseArrayOutput) Index(i pulumi.IntInput) DashboardPartsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPartsResponse {
		return vs[0].([]DashboardPartsResponse)[vs[1].(int)]
	}).(DashboardPartsResponseOutput)
}

// The dashboard's part position.
type DashboardPartsResponsePosition struct {
	// The dashboard's part column span.
	ColSpan int `pulumi:"colSpan"`
	// The dashboard part's metadata.
	Metadata map[string]interface{} `pulumi:"metadata"`
	// The dashboard's part row span.
	RowSpan int `pulumi:"rowSpan"`
	// The dashboard's part x coordinate.
	X int `pulumi:"x"`
	// The dashboard's part y coordinate.
	Y int `pulumi:"y"`
}

// DashboardPartsResponsePositionInput is an input type that accepts DashboardPartsResponsePositionArgs and DashboardPartsResponsePositionOutput values.
// You can construct a concrete instance of `DashboardPartsResponsePositionInput` via:
//
//          DashboardPartsResponsePositionArgs{...}
type DashboardPartsResponsePositionInput interface {
	pulumi.Input

	ToDashboardPartsResponsePositionOutput() DashboardPartsResponsePositionOutput
	ToDashboardPartsResponsePositionOutputWithContext(context.Context) DashboardPartsResponsePositionOutput
}

// The dashboard's part position.
type DashboardPartsResponsePositionArgs struct {
	// The dashboard's part column span.
	ColSpan pulumi.IntInput `pulumi:"colSpan"`
	// The dashboard part's metadata.
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// The dashboard's part row span.
	RowSpan pulumi.IntInput `pulumi:"rowSpan"`
	// The dashboard's part x coordinate.
	X pulumi.IntInput `pulumi:"x"`
	// The dashboard's part y coordinate.
	Y pulumi.IntInput `pulumi:"y"`
}

func (DashboardPartsResponsePositionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPartsResponsePosition)(nil)).Elem()
}

func (i DashboardPartsResponsePositionArgs) ToDashboardPartsResponsePositionOutput() DashboardPartsResponsePositionOutput {
	return i.ToDashboardPartsResponsePositionOutputWithContext(context.Background())
}

func (i DashboardPartsResponsePositionArgs) ToDashboardPartsResponsePositionOutputWithContext(ctx context.Context) DashboardPartsResponsePositionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPartsResponsePositionOutput)
}

// The dashboard's part position.
type DashboardPartsResponsePositionOutput struct{ *pulumi.OutputState }

func (DashboardPartsResponsePositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPartsResponsePosition)(nil)).Elem()
}

func (o DashboardPartsResponsePositionOutput) ToDashboardPartsResponsePositionOutput() DashboardPartsResponsePositionOutput {
	return o
}

func (o DashboardPartsResponsePositionOutput) ToDashboardPartsResponsePositionOutputWithContext(ctx context.Context) DashboardPartsResponsePositionOutput {
	return o
}

// The dashboard's part column span.
func (o DashboardPartsResponsePositionOutput) ColSpan() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardPartsResponsePosition) int { return v.ColSpan }).(pulumi.IntOutput)
}

// The dashboard part's metadata.
func (o DashboardPartsResponsePositionOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v DashboardPartsResponsePosition) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

// The dashboard's part row span.
func (o DashboardPartsResponsePositionOutput) RowSpan() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardPartsResponsePosition) int { return v.RowSpan }).(pulumi.IntOutput)
}

// The dashboard's part x coordinate.
func (o DashboardPartsResponsePositionOutput) X() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardPartsResponsePosition) int { return v.X }).(pulumi.IntOutput)
}

// The dashboard's part y coordinate.
func (o DashboardPartsResponsePositionOutput) Y() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardPartsResponsePosition) int { return v.Y }).(pulumi.IntOutput)
}

// Markdown part metadata.
type MarkdownPartMetadata struct {
	// Input to dashboard part.
	Inputs []interface{} `pulumi:"inputs"`
	// Markdown part settings.
	Settings *MarkdownPartMetadataSettings `pulumi:"settings"`
	// The type of dashboard part.
	// Expected value is 'Extension/HubsExtension/PartType/MarkdownPart'.
	Type string `pulumi:"type"`
}

// MarkdownPartMetadataInput is an input type that accepts MarkdownPartMetadataArgs and MarkdownPartMetadataOutput values.
// You can construct a concrete instance of `MarkdownPartMetadataInput` via:
//
//          MarkdownPartMetadataArgs{...}
type MarkdownPartMetadataInput interface {
	pulumi.Input

	ToMarkdownPartMetadataOutput() MarkdownPartMetadataOutput
	ToMarkdownPartMetadataOutputWithContext(context.Context) MarkdownPartMetadataOutput
}

// Markdown part metadata.
type MarkdownPartMetadataArgs struct {
	// Input to dashboard part.
	Inputs pulumi.ArrayInput `pulumi:"inputs"`
	// Markdown part settings.
	Settings MarkdownPartMetadataSettingsPtrInput `pulumi:"settings"`
	// The type of dashboard part.
	// Expected value is 'Extension/HubsExtension/PartType/MarkdownPart'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MarkdownPartMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MarkdownPartMetadata)(nil)).Elem()
}

func (i MarkdownPartMetadataArgs) ToMarkdownPartMetadataOutput() MarkdownPartMetadataOutput {
	return i.ToMarkdownPartMetadataOutputWithContext(context.Background())
}

func (i MarkdownPartMetadataArgs) ToMarkdownPartMetadataOutputWithContext(ctx context.Context) MarkdownPartMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarkdownPartMetadataOutput)
}

func (i MarkdownPartMetadataArgs) ToMarkdownPartMetadataPtrOutput() MarkdownPartMetadataPtrOutput {
	return i.ToMarkdownPartMetadataPtrOutputWithContext(context.Background())
}

func (i MarkdownPartMetadataArgs) ToMarkdownPartMetadataPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarkdownPartMetadataOutput).ToMarkdownPartMetadataPtrOutputWithContext(ctx)
}

// MarkdownPartMetadataPtrInput is an input type that accepts MarkdownPartMetadataArgs, MarkdownPartMetadataPtr and MarkdownPartMetadataPtrOutput values.
// You can construct a concrete instance of `MarkdownPartMetadataPtrInput` via:
//
//          MarkdownPartMetadataArgs{...}
//
//  or:
//
//          nil
type MarkdownPartMetadataPtrInput interface {
	pulumi.Input

	ToMarkdownPartMetadataPtrOutput() MarkdownPartMetadataPtrOutput
	ToMarkdownPartMetadataPtrOutputWithContext(context.Context) MarkdownPartMetadataPtrOutput
}

type markdownPartMetadataPtrType MarkdownPartMetadataArgs

func MarkdownPartMetadataPtr(v *MarkdownPartMetadataArgs) MarkdownPartMetadataPtrInput {
	return (*markdownPartMetadataPtrType)(v)
}

func (*markdownPartMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MarkdownPartMetadata)(nil)).Elem()
}

func (i *markdownPartMetadataPtrType) ToMarkdownPartMetadataPtrOutput() MarkdownPartMetadataPtrOutput {
	return i.ToMarkdownPartMetadataPtrOutputWithContext(context.Background())
}

func (i *markdownPartMetadataPtrType) ToMarkdownPartMetadataPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarkdownPartMetadataPtrOutput)
}

// Markdown part metadata.
type MarkdownPartMetadataOutput struct{ *pulumi.OutputState }

func (MarkdownPartMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarkdownPartMetadata)(nil)).Elem()
}

func (o MarkdownPartMetadataOutput) ToMarkdownPartMetadataOutput() MarkdownPartMetadataOutput {
	return o
}

func (o MarkdownPartMetadataOutput) ToMarkdownPartMetadataOutputWithContext(ctx context.Context) MarkdownPartMetadataOutput {
	return o
}

func (o MarkdownPartMetadataOutput) ToMarkdownPartMetadataPtrOutput() MarkdownPartMetadataPtrOutput {
	return o.ToMarkdownPartMetadataPtrOutputWithContext(context.Background())
}

func (o MarkdownPartMetadataOutput) ToMarkdownPartMetadataPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataPtrOutput {
	return o.ApplyT(func(v MarkdownPartMetadata) *MarkdownPartMetadata {
		return &v
	}).(MarkdownPartMetadataPtrOutput)
}

// Input to dashboard part.
func (o MarkdownPartMetadataOutput) Inputs() pulumi.ArrayOutput {
	return o.ApplyT(func(v MarkdownPartMetadata) []interface{} { return v.Inputs }).(pulumi.ArrayOutput)
}

// Markdown part settings.
func (o MarkdownPartMetadataOutput) Settings() MarkdownPartMetadataSettingsPtrOutput {
	return o.ApplyT(func(v MarkdownPartMetadata) *MarkdownPartMetadataSettings { return v.Settings }).(MarkdownPartMetadataSettingsPtrOutput)
}

// The type of dashboard part.
// Expected value is 'Extension/HubsExtension/PartType/MarkdownPart'.
func (o MarkdownPartMetadataOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MarkdownPartMetadata) string { return v.Type }).(pulumi.StringOutput)
}

type MarkdownPartMetadataPtrOutput struct{ *pulumi.OutputState }

func (MarkdownPartMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MarkdownPartMetadata)(nil)).Elem()
}

func (o MarkdownPartMetadataPtrOutput) ToMarkdownPartMetadataPtrOutput() MarkdownPartMetadataPtrOutput {
	return o
}

func (o MarkdownPartMetadataPtrOutput) ToMarkdownPartMetadataPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataPtrOutput {
	return o
}

func (o MarkdownPartMetadataPtrOutput) Elem() MarkdownPartMetadataOutput {
	return o.ApplyT(func(v *MarkdownPartMetadata) MarkdownPartMetadata { return *v }).(MarkdownPartMetadataOutput)
}

// Input to dashboard part.
func (o MarkdownPartMetadataPtrOutput) Inputs() pulumi.ArrayOutput {
	return o.ApplyT(func(v *MarkdownPartMetadata) []interface{} {
		if v == nil {
			return nil
		}
		return v.Inputs
	}).(pulumi.ArrayOutput)
}

// Markdown part settings.
func (o MarkdownPartMetadataPtrOutput) Settings() MarkdownPartMetadataSettingsPtrOutput {
	return o.ApplyT(func(v *MarkdownPartMetadata) *MarkdownPartMetadataSettings {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(MarkdownPartMetadataSettingsPtrOutput)
}

// The type of dashboard part.
// Expected value is 'Extension/HubsExtension/PartType/MarkdownPart'.
func (o MarkdownPartMetadataPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MarkdownPartMetadata) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The content of markdown part.
type MarkdownPartMetadataContent struct {
	// The setting of the content of markdown part.
	Settings *MarkdownPartMetadataSettings `pulumi:"settings"`
}

// MarkdownPartMetadataContentInput is an input type that accepts MarkdownPartMetadataContentArgs and MarkdownPartMetadataContentOutput values.
// You can construct a concrete instance of `MarkdownPartMetadataContentInput` via:
//
//          MarkdownPartMetadataContentArgs{...}
type MarkdownPartMetadataContentInput interface {
	pulumi.Input

	ToMarkdownPartMetadataContentOutput() MarkdownPartMetadataContentOutput
	ToMarkdownPartMetadataContentOutputWithContext(context.Context) MarkdownPartMetadataContentOutput
}

// The content of markdown part.
type MarkdownPartMetadataContentArgs struct {
	// The setting of the content of markdown part.
	Settings MarkdownPartMetadataSettingsPtrInput `pulumi:"settings"`
}

func (MarkdownPartMetadataContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MarkdownPartMetadataContent)(nil)).Elem()
}

func (i MarkdownPartMetadataContentArgs) ToMarkdownPartMetadataContentOutput() MarkdownPartMetadataContentOutput {
	return i.ToMarkdownPartMetadataContentOutputWithContext(context.Background())
}

func (i MarkdownPartMetadataContentArgs) ToMarkdownPartMetadataContentOutputWithContext(ctx context.Context) MarkdownPartMetadataContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarkdownPartMetadataContentOutput)
}

func (i MarkdownPartMetadataContentArgs) ToMarkdownPartMetadataContentPtrOutput() MarkdownPartMetadataContentPtrOutput {
	return i.ToMarkdownPartMetadataContentPtrOutputWithContext(context.Background())
}

func (i MarkdownPartMetadataContentArgs) ToMarkdownPartMetadataContentPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarkdownPartMetadataContentOutput).ToMarkdownPartMetadataContentPtrOutputWithContext(ctx)
}

// MarkdownPartMetadataContentPtrInput is an input type that accepts MarkdownPartMetadataContentArgs, MarkdownPartMetadataContentPtr and MarkdownPartMetadataContentPtrOutput values.
// You can construct a concrete instance of `MarkdownPartMetadataContentPtrInput` via:
//
//          MarkdownPartMetadataContentArgs{...}
//
//  or:
//
//          nil
type MarkdownPartMetadataContentPtrInput interface {
	pulumi.Input

	ToMarkdownPartMetadataContentPtrOutput() MarkdownPartMetadataContentPtrOutput
	ToMarkdownPartMetadataContentPtrOutputWithContext(context.Context) MarkdownPartMetadataContentPtrOutput
}

type markdownPartMetadataContentPtrType MarkdownPartMetadataContentArgs

func MarkdownPartMetadataContentPtr(v *MarkdownPartMetadataContentArgs) MarkdownPartMetadataContentPtrInput {
	return (*markdownPartMetadataContentPtrType)(v)
}

func (*markdownPartMetadataContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MarkdownPartMetadataContent)(nil)).Elem()
}

func (i *markdownPartMetadataContentPtrType) ToMarkdownPartMetadataContentPtrOutput() MarkdownPartMetadataContentPtrOutput {
	return i.ToMarkdownPartMetadataContentPtrOutputWithContext(context.Background())
}

func (i *markdownPartMetadataContentPtrType) ToMarkdownPartMetadataContentPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarkdownPartMetadataContentPtrOutput)
}

// The content of markdown part.
type MarkdownPartMetadataContentOutput struct{ *pulumi.OutputState }

func (MarkdownPartMetadataContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarkdownPartMetadataContent)(nil)).Elem()
}

func (o MarkdownPartMetadataContentOutput) ToMarkdownPartMetadataContentOutput() MarkdownPartMetadataContentOutput {
	return o
}

func (o MarkdownPartMetadataContentOutput) ToMarkdownPartMetadataContentOutputWithContext(ctx context.Context) MarkdownPartMetadataContentOutput {
	return o
}

func (o MarkdownPartMetadataContentOutput) ToMarkdownPartMetadataContentPtrOutput() MarkdownPartMetadataContentPtrOutput {
	return o.ToMarkdownPartMetadataContentPtrOutputWithContext(context.Background())
}

func (o MarkdownPartMetadataContentOutput) ToMarkdownPartMetadataContentPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataContentPtrOutput {
	return o.ApplyT(func(v MarkdownPartMetadataContent) *MarkdownPartMetadataContent {
		return &v
	}).(MarkdownPartMetadataContentPtrOutput)
}

// The setting of the content of markdown part.
func (o MarkdownPartMetadataContentOutput) Settings() MarkdownPartMetadataSettingsPtrOutput {
	return o.ApplyT(func(v MarkdownPartMetadataContent) *MarkdownPartMetadataSettings { return v.Settings }).(MarkdownPartMetadataSettingsPtrOutput)
}

type MarkdownPartMetadataContentPtrOutput struct{ *pulumi.OutputState }

func (MarkdownPartMetadataContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MarkdownPartMetadataContent)(nil)).Elem()
}

func (o MarkdownPartMetadataContentPtrOutput) ToMarkdownPartMetadataContentPtrOutput() MarkdownPartMetadataContentPtrOutput {
	return o
}

func (o MarkdownPartMetadataContentPtrOutput) ToMarkdownPartMetadataContentPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataContentPtrOutput {
	return o
}

func (o MarkdownPartMetadataContentPtrOutput) Elem() MarkdownPartMetadataContentOutput {
	return o.ApplyT(func(v *MarkdownPartMetadataContent) MarkdownPartMetadataContent { return *v }).(MarkdownPartMetadataContentOutput)
}

// The setting of the content of markdown part.
func (o MarkdownPartMetadataContentPtrOutput) Settings() MarkdownPartMetadataSettingsPtrOutput {
	return o.ApplyT(func(v *MarkdownPartMetadataContent) *MarkdownPartMetadataSettings {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(MarkdownPartMetadataSettingsPtrOutput)
}

// Markdown part metadata.
type MarkdownPartMetadataResponse struct {
	// Input to dashboard part.
	Inputs []interface{} `pulumi:"inputs"`
	// Markdown part settings.
	Settings *MarkdownPartMetadataResponseSettings `pulumi:"settings"`
	// The type of dashboard part.
	// Expected value is 'Extension/HubsExtension/PartType/MarkdownPart'.
	Type string `pulumi:"type"`
}

// MarkdownPartMetadataResponseInput is an input type that accepts MarkdownPartMetadataResponseArgs and MarkdownPartMetadataResponseOutput values.
// You can construct a concrete instance of `MarkdownPartMetadataResponseInput` via:
//
//          MarkdownPartMetadataResponseArgs{...}
type MarkdownPartMetadataResponseInput interface {
	pulumi.Input

	ToMarkdownPartMetadataResponseOutput() MarkdownPartMetadataResponseOutput
	ToMarkdownPartMetadataResponseOutputWithContext(context.Context) MarkdownPartMetadataResponseOutput
}

// Markdown part metadata.
type MarkdownPartMetadataResponseArgs struct {
	// Input to dashboard part.
	Inputs pulumi.ArrayInput `pulumi:"inputs"`
	// Markdown part settings.
	Settings MarkdownPartMetadataResponseSettingsPtrInput `pulumi:"settings"`
	// The type of dashboard part.
	// Expected value is 'Extension/HubsExtension/PartType/MarkdownPart'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MarkdownPartMetadataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MarkdownPartMetadataResponse)(nil)).Elem()
}

func (i MarkdownPartMetadataResponseArgs) ToMarkdownPartMetadataResponseOutput() MarkdownPartMetadataResponseOutput {
	return i.ToMarkdownPartMetadataResponseOutputWithContext(context.Background())
}

func (i MarkdownPartMetadataResponseArgs) ToMarkdownPartMetadataResponseOutputWithContext(ctx context.Context) MarkdownPartMetadataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarkdownPartMetadataResponseOutput)
}

func (i MarkdownPartMetadataResponseArgs) ToMarkdownPartMetadataResponsePtrOutput() MarkdownPartMetadataResponsePtrOutput {
	return i.ToMarkdownPartMetadataResponsePtrOutputWithContext(context.Background())
}

func (i MarkdownPartMetadataResponseArgs) ToMarkdownPartMetadataResponsePtrOutputWithContext(ctx context.Context) MarkdownPartMetadataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarkdownPartMetadataResponseOutput).ToMarkdownPartMetadataResponsePtrOutputWithContext(ctx)
}

// MarkdownPartMetadataResponsePtrInput is an input type that accepts MarkdownPartMetadataResponseArgs, MarkdownPartMetadataResponsePtr and MarkdownPartMetadataResponsePtrOutput values.
// You can construct a concrete instance of `MarkdownPartMetadataResponsePtrInput` via:
//
//          MarkdownPartMetadataResponseArgs{...}
//
//  or:
//
//          nil
type MarkdownPartMetadataResponsePtrInput interface {
	pulumi.Input

	ToMarkdownPartMetadataResponsePtrOutput() MarkdownPartMetadataResponsePtrOutput
	ToMarkdownPartMetadataResponsePtrOutputWithContext(context.Context) MarkdownPartMetadataResponsePtrOutput
}

type markdownPartMetadataResponsePtrType MarkdownPartMetadataResponseArgs

func MarkdownPartMetadataResponsePtr(v *MarkdownPartMetadataResponseArgs) MarkdownPartMetadataResponsePtrInput {
	return (*markdownPartMetadataResponsePtrType)(v)
}

func (*markdownPartMetadataResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MarkdownPartMetadataResponse)(nil)).Elem()
}

func (i *markdownPartMetadataResponsePtrType) ToMarkdownPartMetadataResponsePtrOutput() MarkdownPartMetadataResponsePtrOutput {
	return i.ToMarkdownPartMetadataResponsePtrOutputWithContext(context.Background())
}

func (i *markdownPartMetadataResponsePtrType) ToMarkdownPartMetadataResponsePtrOutputWithContext(ctx context.Context) MarkdownPartMetadataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarkdownPartMetadataResponsePtrOutput)
}

// Markdown part metadata.
type MarkdownPartMetadataResponseOutput struct{ *pulumi.OutputState }

func (MarkdownPartMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarkdownPartMetadataResponse)(nil)).Elem()
}

func (o MarkdownPartMetadataResponseOutput) ToMarkdownPartMetadataResponseOutput() MarkdownPartMetadataResponseOutput {
	return o
}

func (o MarkdownPartMetadataResponseOutput) ToMarkdownPartMetadataResponseOutputWithContext(ctx context.Context) MarkdownPartMetadataResponseOutput {
	return o
}

func (o MarkdownPartMetadataResponseOutput) ToMarkdownPartMetadataResponsePtrOutput() MarkdownPartMetadataResponsePtrOutput {
	return o.ToMarkdownPartMetadataResponsePtrOutputWithContext(context.Background())
}

func (o MarkdownPartMetadataResponseOutput) ToMarkdownPartMetadataResponsePtrOutputWithContext(ctx context.Context) MarkdownPartMetadataResponsePtrOutput {
	return o.ApplyT(func(v MarkdownPartMetadataResponse) *MarkdownPartMetadataResponse {
		return &v
	}).(MarkdownPartMetadataResponsePtrOutput)
}

// Input to dashboard part.
func (o MarkdownPartMetadataResponseOutput) Inputs() pulumi.ArrayOutput {
	return o.ApplyT(func(v MarkdownPartMetadataResponse) []interface{} { return v.Inputs }).(pulumi.ArrayOutput)
}

// Markdown part settings.
func (o MarkdownPartMetadataResponseOutput) Settings() MarkdownPartMetadataResponseSettingsPtrOutput {
	return o.ApplyT(func(v MarkdownPartMetadataResponse) *MarkdownPartMetadataResponseSettings { return v.Settings }).(MarkdownPartMetadataResponseSettingsPtrOutput)
}

// The type of dashboard part.
// Expected value is 'Extension/HubsExtension/PartType/MarkdownPart'.
func (o MarkdownPartMetadataResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MarkdownPartMetadataResponse) string { return v.Type }).(pulumi.StringOutput)
}

type MarkdownPartMetadataResponsePtrOutput struct{ *pulumi.OutputState }

func (MarkdownPartMetadataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MarkdownPartMetadataResponse)(nil)).Elem()
}

func (o MarkdownPartMetadataResponsePtrOutput) ToMarkdownPartMetadataResponsePtrOutput() MarkdownPartMetadataResponsePtrOutput {
	return o
}

func (o MarkdownPartMetadataResponsePtrOutput) ToMarkdownPartMetadataResponsePtrOutputWithContext(ctx context.Context) MarkdownPartMetadataResponsePtrOutput {
	return o
}

func (o MarkdownPartMetadataResponsePtrOutput) Elem() MarkdownPartMetadataResponseOutput {
	return o.ApplyT(func(v *MarkdownPartMetadataResponse) MarkdownPartMetadataResponse { return *v }).(MarkdownPartMetadataResponseOutput)
}

// Input to dashboard part.
func (o MarkdownPartMetadataResponsePtrOutput) Inputs() pulumi.ArrayOutput {
	return o.ApplyT(func(v *MarkdownPartMetadataResponse) []interface{} {
		if v == nil {
			return nil
		}
		return v.Inputs
	}).(pulumi.ArrayOutput)
}

// Markdown part settings.
func (o MarkdownPartMetadataResponsePtrOutput) Settings() MarkdownPartMetadataResponseSettingsPtrOutput {
	return o.ApplyT(func(v *MarkdownPartMetadataResponse) *MarkdownPartMetadataResponseSettings {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(MarkdownPartMetadataResponseSettingsPtrOutput)
}

// The type of dashboard part.
// Expected value is 'Extension/HubsExtension/PartType/MarkdownPart'.
func (o MarkdownPartMetadataResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MarkdownPartMetadataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The content of markdown part.
type MarkdownPartMetadataResponseContent struct {
	// The setting of the content of markdown part.
	Settings *MarkdownPartMetadataResponseSettings `pulumi:"settings"`
}

// MarkdownPartMetadataResponseContentInput is an input type that accepts MarkdownPartMetadataResponseContentArgs and MarkdownPartMetadataResponseContentOutput values.
// You can construct a concrete instance of `MarkdownPartMetadataResponseContentInput` via:
//
//          MarkdownPartMetadataResponseContentArgs{...}
type MarkdownPartMetadataResponseContentInput interface {
	pulumi.Input

	ToMarkdownPartMetadataResponseContentOutput() MarkdownPartMetadataResponseContentOutput
	ToMarkdownPartMetadataResponseContentOutputWithContext(context.Context) MarkdownPartMetadataResponseContentOutput
}

// The content of markdown part.
type MarkdownPartMetadataResponseContentArgs struct {
	// The setting of the content of markdown part.
	Settings MarkdownPartMetadataResponseSettingsPtrInput `pulumi:"settings"`
}

func (MarkdownPartMetadataResponseContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MarkdownPartMetadataResponseContent)(nil)).Elem()
}

func (i MarkdownPartMetadataResponseContentArgs) ToMarkdownPartMetadataResponseContentOutput() MarkdownPartMetadataResponseContentOutput {
	return i.ToMarkdownPartMetadataResponseContentOutputWithContext(context.Background())
}

func (i MarkdownPartMetadataResponseContentArgs) ToMarkdownPartMetadataResponseContentOutputWithContext(ctx context.Context) MarkdownPartMetadataResponseContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarkdownPartMetadataResponseContentOutput)
}

func (i MarkdownPartMetadataResponseContentArgs) ToMarkdownPartMetadataResponseContentPtrOutput() MarkdownPartMetadataResponseContentPtrOutput {
	return i.ToMarkdownPartMetadataResponseContentPtrOutputWithContext(context.Background())
}

func (i MarkdownPartMetadataResponseContentArgs) ToMarkdownPartMetadataResponseContentPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataResponseContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarkdownPartMetadataResponseContentOutput).ToMarkdownPartMetadataResponseContentPtrOutputWithContext(ctx)
}

// MarkdownPartMetadataResponseContentPtrInput is an input type that accepts MarkdownPartMetadataResponseContentArgs, MarkdownPartMetadataResponseContentPtr and MarkdownPartMetadataResponseContentPtrOutput values.
// You can construct a concrete instance of `MarkdownPartMetadataResponseContentPtrInput` via:
//
//          MarkdownPartMetadataResponseContentArgs{...}
//
//  or:
//
//          nil
type MarkdownPartMetadataResponseContentPtrInput interface {
	pulumi.Input

	ToMarkdownPartMetadataResponseContentPtrOutput() MarkdownPartMetadataResponseContentPtrOutput
	ToMarkdownPartMetadataResponseContentPtrOutputWithContext(context.Context) MarkdownPartMetadataResponseContentPtrOutput
}

type markdownPartMetadataResponseContentPtrType MarkdownPartMetadataResponseContentArgs

func MarkdownPartMetadataResponseContentPtr(v *MarkdownPartMetadataResponseContentArgs) MarkdownPartMetadataResponseContentPtrInput {
	return (*markdownPartMetadataResponseContentPtrType)(v)
}

func (*markdownPartMetadataResponseContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MarkdownPartMetadataResponseContent)(nil)).Elem()
}

func (i *markdownPartMetadataResponseContentPtrType) ToMarkdownPartMetadataResponseContentPtrOutput() MarkdownPartMetadataResponseContentPtrOutput {
	return i.ToMarkdownPartMetadataResponseContentPtrOutputWithContext(context.Background())
}

func (i *markdownPartMetadataResponseContentPtrType) ToMarkdownPartMetadataResponseContentPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataResponseContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarkdownPartMetadataResponseContentPtrOutput)
}

// The content of markdown part.
type MarkdownPartMetadataResponseContentOutput struct{ *pulumi.OutputState }

func (MarkdownPartMetadataResponseContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarkdownPartMetadataResponseContent)(nil)).Elem()
}

func (o MarkdownPartMetadataResponseContentOutput) ToMarkdownPartMetadataResponseContentOutput() MarkdownPartMetadataResponseContentOutput {
	return o
}

func (o MarkdownPartMetadataResponseContentOutput) ToMarkdownPartMetadataResponseContentOutputWithContext(ctx context.Context) MarkdownPartMetadataResponseContentOutput {
	return o
}

func (o MarkdownPartMetadataResponseContentOutput) ToMarkdownPartMetadataResponseContentPtrOutput() MarkdownPartMetadataResponseContentPtrOutput {
	return o.ToMarkdownPartMetadataResponseContentPtrOutputWithContext(context.Background())
}

func (o MarkdownPartMetadataResponseContentOutput) ToMarkdownPartMetadataResponseContentPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataResponseContentPtrOutput {
	return o.ApplyT(func(v MarkdownPartMetadataResponseContent) *MarkdownPartMetadataResponseContent {
		return &v
	}).(MarkdownPartMetadataResponseContentPtrOutput)
}

// The setting of the content of markdown part.
func (o MarkdownPartMetadataResponseContentOutput) Settings() MarkdownPartMetadataResponseSettingsPtrOutput {
	return o.ApplyT(func(v MarkdownPartMetadataResponseContent) *MarkdownPartMetadataResponseSettings { return v.Settings }).(MarkdownPartMetadataResponseSettingsPtrOutput)
}

type MarkdownPartMetadataResponseContentPtrOutput struct{ *pulumi.OutputState }

func (MarkdownPartMetadataResponseContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MarkdownPartMetadataResponseContent)(nil)).Elem()
}

func (o MarkdownPartMetadataResponseContentPtrOutput) ToMarkdownPartMetadataResponseContentPtrOutput() MarkdownPartMetadataResponseContentPtrOutput {
	return o
}

func (o MarkdownPartMetadataResponseContentPtrOutput) ToMarkdownPartMetadataResponseContentPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataResponseContentPtrOutput {
	return o
}

func (o MarkdownPartMetadataResponseContentPtrOutput) Elem() MarkdownPartMetadataResponseContentOutput {
	return o.ApplyT(func(v *MarkdownPartMetadataResponseContent) MarkdownPartMetadataResponseContent { return *v }).(MarkdownPartMetadataResponseContentOutput)
}

// The setting of the content of markdown part.
func (o MarkdownPartMetadataResponseContentPtrOutput) Settings() MarkdownPartMetadataResponseSettingsPtrOutput {
	return o.ApplyT(func(v *MarkdownPartMetadataResponseContent) *MarkdownPartMetadataResponseSettings {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(MarkdownPartMetadataResponseSettingsPtrOutput)
}

// Markdown part settings.
type MarkdownPartMetadataResponseSettings struct {
	// The content of markdown part.
	Content *MarkdownPartMetadataResponseContent `pulumi:"content"`
}

// MarkdownPartMetadataResponseSettingsInput is an input type that accepts MarkdownPartMetadataResponseSettingsArgs and MarkdownPartMetadataResponseSettingsOutput values.
// You can construct a concrete instance of `MarkdownPartMetadataResponseSettingsInput` via:
//
//          MarkdownPartMetadataResponseSettingsArgs{...}
type MarkdownPartMetadataResponseSettingsInput interface {
	pulumi.Input

	ToMarkdownPartMetadataResponseSettingsOutput() MarkdownPartMetadataResponseSettingsOutput
	ToMarkdownPartMetadataResponseSettingsOutputWithContext(context.Context) MarkdownPartMetadataResponseSettingsOutput
}

// Markdown part settings.
type MarkdownPartMetadataResponseSettingsArgs struct {
	// The content of markdown part.
	Content MarkdownPartMetadataResponseContentPtrInput `pulumi:"content"`
}

func (MarkdownPartMetadataResponseSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MarkdownPartMetadataResponseSettings)(nil)).Elem()
}

func (i MarkdownPartMetadataResponseSettingsArgs) ToMarkdownPartMetadataResponseSettingsOutput() MarkdownPartMetadataResponseSettingsOutput {
	return i.ToMarkdownPartMetadataResponseSettingsOutputWithContext(context.Background())
}

func (i MarkdownPartMetadataResponseSettingsArgs) ToMarkdownPartMetadataResponseSettingsOutputWithContext(ctx context.Context) MarkdownPartMetadataResponseSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarkdownPartMetadataResponseSettingsOutput)
}

func (i MarkdownPartMetadataResponseSettingsArgs) ToMarkdownPartMetadataResponseSettingsPtrOutput() MarkdownPartMetadataResponseSettingsPtrOutput {
	return i.ToMarkdownPartMetadataResponseSettingsPtrOutputWithContext(context.Background())
}

func (i MarkdownPartMetadataResponseSettingsArgs) ToMarkdownPartMetadataResponseSettingsPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataResponseSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarkdownPartMetadataResponseSettingsOutput).ToMarkdownPartMetadataResponseSettingsPtrOutputWithContext(ctx)
}

// MarkdownPartMetadataResponseSettingsPtrInput is an input type that accepts MarkdownPartMetadataResponseSettingsArgs, MarkdownPartMetadataResponseSettingsPtr and MarkdownPartMetadataResponseSettingsPtrOutput values.
// You can construct a concrete instance of `MarkdownPartMetadataResponseSettingsPtrInput` via:
//
//          MarkdownPartMetadataResponseSettingsArgs{...}
//
//  or:
//
//          nil
type MarkdownPartMetadataResponseSettingsPtrInput interface {
	pulumi.Input

	ToMarkdownPartMetadataResponseSettingsPtrOutput() MarkdownPartMetadataResponseSettingsPtrOutput
	ToMarkdownPartMetadataResponseSettingsPtrOutputWithContext(context.Context) MarkdownPartMetadataResponseSettingsPtrOutput
}

type markdownPartMetadataResponseSettingsPtrType MarkdownPartMetadataResponseSettingsArgs

func MarkdownPartMetadataResponseSettingsPtr(v *MarkdownPartMetadataResponseSettingsArgs) MarkdownPartMetadataResponseSettingsPtrInput {
	return (*markdownPartMetadataResponseSettingsPtrType)(v)
}

func (*markdownPartMetadataResponseSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MarkdownPartMetadataResponseSettings)(nil)).Elem()
}

func (i *markdownPartMetadataResponseSettingsPtrType) ToMarkdownPartMetadataResponseSettingsPtrOutput() MarkdownPartMetadataResponseSettingsPtrOutput {
	return i.ToMarkdownPartMetadataResponseSettingsPtrOutputWithContext(context.Background())
}

func (i *markdownPartMetadataResponseSettingsPtrType) ToMarkdownPartMetadataResponseSettingsPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataResponseSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarkdownPartMetadataResponseSettingsPtrOutput)
}

// Markdown part settings.
type MarkdownPartMetadataResponseSettingsOutput struct{ *pulumi.OutputState }

func (MarkdownPartMetadataResponseSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarkdownPartMetadataResponseSettings)(nil)).Elem()
}

func (o MarkdownPartMetadataResponseSettingsOutput) ToMarkdownPartMetadataResponseSettingsOutput() MarkdownPartMetadataResponseSettingsOutput {
	return o
}

func (o MarkdownPartMetadataResponseSettingsOutput) ToMarkdownPartMetadataResponseSettingsOutputWithContext(ctx context.Context) MarkdownPartMetadataResponseSettingsOutput {
	return o
}

func (o MarkdownPartMetadataResponseSettingsOutput) ToMarkdownPartMetadataResponseSettingsPtrOutput() MarkdownPartMetadataResponseSettingsPtrOutput {
	return o.ToMarkdownPartMetadataResponseSettingsPtrOutputWithContext(context.Background())
}

func (o MarkdownPartMetadataResponseSettingsOutput) ToMarkdownPartMetadataResponseSettingsPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataResponseSettingsPtrOutput {
	return o.ApplyT(func(v MarkdownPartMetadataResponseSettings) *MarkdownPartMetadataResponseSettings {
		return &v
	}).(MarkdownPartMetadataResponseSettingsPtrOutput)
}

// The content of markdown part.
func (o MarkdownPartMetadataResponseSettingsOutput) Content() MarkdownPartMetadataResponseContentPtrOutput {
	return o.ApplyT(func(v MarkdownPartMetadataResponseSettings) *MarkdownPartMetadataResponseContent { return v.Content }).(MarkdownPartMetadataResponseContentPtrOutput)
}

type MarkdownPartMetadataResponseSettingsPtrOutput struct{ *pulumi.OutputState }

func (MarkdownPartMetadataResponseSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MarkdownPartMetadataResponseSettings)(nil)).Elem()
}

func (o MarkdownPartMetadataResponseSettingsPtrOutput) ToMarkdownPartMetadataResponseSettingsPtrOutput() MarkdownPartMetadataResponseSettingsPtrOutput {
	return o
}

func (o MarkdownPartMetadataResponseSettingsPtrOutput) ToMarkdownPartMetadataResponseSettingsPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataResponseSettingsPtrOutput {
	return o
}

func (o MarkdownPartMetadataResponseSettingsPtrOutput) Elem() MarkdownPartMetadataResponseSettingsOutput {
	return o.ApplyT(func(v *MarkdownPartMetadataResponseSettings) MarkdownPartMetadataResponseSettings { return *v }).(MarkdownPartMetadataResponseSettingsOutput)
}

// The content of markdown part.
func (o MarkdownPartMetadataResponseSettingsPtrOutput) Content() MarkdownPartMetadataResponseContentPtrOutput {
	return o.ApplyT(func(v *MarkdownPartMetadataResponseSettings) *MarkdownPartMetadataResponseContent {
		if v == nil {
			return nil
		}
		return v.Content
	}).(MarkdownPartMetadataResponseContentPtrOutput)
}

// Markdown part settings.
type MarkdownPartMetadataSettings struct {
	// The content of markdown part.
	Content *MarkdownPartMetadataContent `pulumi:"content"`
}

// MarkdownPartMetadataSettingsInput is an input type that accepts MarkdownPartMetadataSettingsArgs and MarkdownPartMetadataSettingsOutput values.
// You can construct a concrete instance of `MarkdownPartMetadataSettingsInput` via:
//
//          MarkdownPartMetadataSettingsArgs{...}
type MarkdownPartMetadataSettingsInput interface {
	pulumi.Input

	ToMarkdownPartMetadataSettingsOutput() MarkdownPartMetadataSettingsOutput
	ToMarkdownPartMetadataSettingsOutputWithContext(context.Context) MarkdownPartMetadataSettingsOutput
}

// Markdown part settings.
type MarkdownPartMetadataSettingsArgs struct {
	// The content of markdown part.
	Content MarkdownPartMetadataContentPtrInput `pulumi:"content"`
}

func (MarkdownPartMetadataSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MarkdownPartMetadataSettings)(nil)).Elem()
}

func (i MarkdownPartMetadataSettingsArgs) ToMarkdownPartMetadataSettingsOutput() MarkdownPartMetadataSettingsOutput {
	return i.ToMarkdownPartMetadataSettingsOutputWithContext(context.Background())
}

func (i MarkdownPartMetadataSettingsArgs) ToMarkdownPartMetadataSettingsOutputWithContext(ctx context.Context) MarkdownPartMetadataSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarkdownPartMetadataSettingsOutput)
}

func (i MarkdownPartMetadataSettingsArgs) ToMarkdownPartMetadataSettingsPtrOutput() MarkdownPartMetadataSettingsPtrOutput {
	return i.ToMarkdownPartMetadataSettingsPtrOutputWithContext(context.Background())
}

func (i MarkdownPartMetadataSettingsArgs) ToMarkdownPartMetadataSettingsPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarkdownPartMetadataSettingsOutput).ToMarkdownPartMetadataSettingsPtrOutputWithContext(ctx)
}

// MarkdownPartMetadataSettingsPtrInput is an input type that accepts MarkdownPartMetadataSettingsArgs, MarkdownPartMetadataSettingsPtr and MarkdownPartMetadataSettingsPtrOutput values.
// You can construct a concrete instance of `MarkdownPartMetadataSettingsPtrInput` via:
//
//          MarkdownPartMetadataSettingsArgs{...}
//
//  or:
//
//          nil
type MarkdownPartMetadataSettingsPtrInput interface {
	pulumi.Input

	ToMarkdownPartMetadataSettingsPtrOutput() MarkdownPartMetadataSettingsPtrOutput
	ToMarkdownPartMetadataSettingsPtrOutputWithContext(context.Context) MarkdownPartMetadataSettingsPtrOutput
}

type markdownPartMetadataSettingsPtrType MarkdownPartMetadataSettingsArgs

func MarkdownPartMetadataSettingsPtr(v *MarkdownPartMetadataSettingsArgs) MarkdownPartMetadataSettingsPtrInput {
	return (*markdownPartMetadataSettingsPtrType)(v)
}

func (*markdownPartMetadataSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MarkdownPartMetadataSettings)(nil)).Elem()
}

func (i *markdownPartMetadataSettingsPtrType) ToMarkdownPartMetadataSettingsPtrOutput() MarkdownPartMetadataSettingsPtrOutput {
	return i.ToMarkdownPartMetadataSettingsPtrOutputWithContext(context.Background())
}

func (i *markdownPartMetadataSettingsPtrType) ToMarkdownPartMetadataSettingsPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MarkdownPartMetadataSettingsPtrOutput)
}

// Markdown part settings.
type MarkdownPartMetadataSettingsOutput struct{ *pulumi.OutputState }

func (MarkdownPartMetadataSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarkdownPartMetadataSettings)(nil)).Elem()
}

func (o MarkdownPartMetadataSettingsOutput) ToMarkdownPartMetadataSettingsOutput() MarkdownPartMetadataSettingsOutput {
	return o
}

func (o MarkdownPartMetadataSettingsOutput) ToMarkdownPartMetadataSettingsOutputWithContext(ctx context.Context) MarkdownPartMetadataSettingsOutput {
	return o
}

func (o MarkdownPartMetadataSettingsOutput) ToMarkdownPartMetadataSettingsPtrOutput() MarkdownPartMetadataSettingsPtrOutput {
	return o.ToMarkdownPartMetadataSettingsPtrOutputWithContext(context.Background())
}

func (o MarkdownPartMetadataSettingsOutput) ToMarkdownPartMetadataSettingsPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataSettingsPtrOutput {
	return o.ApplyT(func(v MarkdownPartMetadataSettings) *MarkdownPartMetadataSettings {
		return &v
	}).(MarkdownPartMetadataSettingsPtrOutput)
}

// The content of markdown part.
func (o MarkdownPartMetadataSettingsOutput) Content() MarkdownPartMetadataContentPtrOutput {
	return o.ApplyT(func(v MarkdownPartMetadataSettings) *MarkdownPartMetadataContent { return v.Content }).(MarkdownPartMetadataContentPtrOutput)
}

type MarkdownPartMetadataSettingsPtrOutput struct{ *pulumi.OutputState }

func (MarkdownPartMetadataSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MarkdownPartMetadataSettings)(nil)).Elem()
}

func (o MarkdownPartMetadataSettingsPtrOutput) ToMarkdownPartMetadataSettingsPtrOutput() MarkdownPartMetadataSettingsPtrOutput {
	return o
}

func (o MarkdownPartMetadataSettingsPtrOutput) ToMarkdownPartMetadataSettingsPtrOutputWithContext(ctx context.Context) MarkdownPartMetadataSettingsPtrOutput {
	return o
}

func (o MarkdownPartMetadataSettingsPtrOutput) Elem() MarkdownPartMetadataSettingsOutput {
	return o.ApplyT(func(v *MarkdownPartMetadataSettings) MarkdownPartMetadataSettings { return *v }).(MarkdownPartMetadataSettingsOutput)
}

// The content of markdown part.
func (o MarkdownPartMetadataSettingsPtrOutput) Content() MarkdownPartMetadataContentPtrOutput {
	return o.ApplyT(func(v *MarkdownPartMetadataSettings) *MarkdownPartMetadataContent {
		if v == nil {
			return nil
		}
		return v.Content
	}).(MarkdownPartMetadataContentPtrOutput)
}

// The storage profile of the user settings.
type StorageProfile struct {
	// Size of file share
	DiskSizeInGB *int `pulumi:"diskSizeInGB"`
	// Name of the mounted file share. 63 characters or less, lowercase alphabet, numbers, and -
	FileShareName *string `pulumi:"fileShareName"`
	// Full resource ID of storage account.
	StorageAccountResourceId *string `pulumi:"storageAccountResourceId"`
}

// StorageProfileInput is an input type that accepts StorageProfileArgs and StorageProfileOutput values.
// You can construct a concrete instance of `StorageProfileInput` via:
//
//          StorageProfileArgs{...}
type StorageProfileInput interface {
	pulumi.Input

	ToStorageProfileOutput() StorageProfileOutput
	ToStorageProfileOutputWithContext(context.Context) StorageProfileOutput
}

// The storage profile of the user settings.
type StorageProfileArgs struct {
	// Size of file share
	DiskSizeInGB pulumi.IntPtrInput `pulumi:"diskSizeInGB"`
	// Name of the mounted file share. 63 characters or less, lowercase alphabet, numbers, and -
	FileShareName pulumi.StringPtrInput `pulumi:"fileShareName"`
	// Full resource ID of storage account.
	StorageAccountResourceId pulumi.StringPtrInput `pulumi:"storageAccountResourceId"`
}

func (StorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfile)(nil)).Elem()
}

func (i StorageProfileArgs) ToStorageProfileOutput() StorageProfileOutput {
	return i.ToStorageProfileOutputWithContext(context.Background())
}

func (i StorageProfileArgs) ToStorageProfileOutputWithContext(ctx context.Context) StorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileOutput)
}

func (i StorageProfileArgs) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return i.ToStorageProfilePtrOutputWithContext(context.Background())
}

func (i StorageProfileArgs) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileOutput).ToStorageProfilePtrOutputWithContext(ctx)
}

// StorageProfilePtrInput is an input type that accepts StorageProfileArgs, StorageProfilePtr and StorageProfilePtrOutput values.
// You can construct a concrete instance of `StorageProfilePtrInput` via:
//
//          StorageProfileArgs{...}
//
//  or:
//
//          nil
type StorageProfilePtrInput interface {
	pulumi.Input

	ToStorageProfilePtrOutput() StorageProfilePtrOutput
	ToStorageProfilePtrOutputWithContext(context.Context) StorageProfilePtrOutput
}

type storageProfilePtrType StorageProfileArgs

func StorageProfilePtr(v *StorageProfileArgs) StorageProfilePtrInput {
	return (*storageProfilePtrType)(v)
}

func (*storageProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfile)(nil)).Elem()
}

func (i *storageProfilePtrType) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return i.ToStorageProfilePtrOutputWithContext(context.Background())
}

func (i *storageProfilePtrType) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfilePtrOutput)
}

// The storage profile of the user settings.
type StorageProfileOutput struct{ *pulumi.OutputState }

func (StorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfile)(nil)).Elem()
}

func (o StorageProfileOutput) ToStorageProfileOutput() StorageProfileOutput {
	return o
}

func (o StorageProfileOutput) ToStorageProfileOutputWithContext(ctx context.Context) StorageProfileOutput {
	return o
}

func (o StorageProfileOutput) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return o.ToStorageProfilePtrOutputWithContext(context.Background())
}

func (o StorageProfileOutput) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return o.ApplyT(func(v StorageProfile) *StorageProfile {
		return &v
	}).(StorageProfilePtrOutput)
}

// Size of file share
func (o StorageProfileOutput) DiskSizeInGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageProfile) *int { return v.DiskSizeInGB }).(pulumi.IntPtrOutput)
}

// Name of the mounted file share. 63 characters or less, lowercase alphabet, numbers, and -
func (o StorageProfileOutput) FileShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageProfile) *string { return v.FileShareName }).(pulumi.StringPtrOutput)
}

// Full resource ID of storage account.
func (o StorageProfileOutput) StorageAccountResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageProfile) *string { return v.StorageAccountResourceId }).(pulumi.StringPtrOutput)
}

type StorageProfilePtrOutput struct{ *pulumi.OutputState }

func (StorageProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfile)(nil)).Elem()
}

func (o StorageProfilePtrOutput) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return o
}

func (o StorageProfilePtrOutput) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return o
}

func (o StorageProfilePtrOutput) Elem() StorageProfileOutput {
	return o.ApplyT(func(v *StorageProfile) StorageProfile { return *v }).(StorageProfileOutput)
}

// Size of file share
func (o StorageProfilePtrOutput) DiskSizeInGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageProfile) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeInGB
	}).(pulumi.IntPtrOutput)
}

// Name of the mounted file share. 63 characters or less, lowercase alphabet, numbers, and -
func (o StorageProfilePtrOutput) FileShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageProfile) *string {
		if v == nil {
			return nil
		}
		return v.FileShareName
	}).(pulumi.StringPtrOutput)
}

// Full resource ID of storage account.
func (o StorageProfilePtrOutput) StorageAccountResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageProfile) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountResourceId
	}).(pulumi.StringPtrOutput)
}

// The storage profile of the user settings.
type StorageProfileResponse struct {
	// Size of file share
	DiskSizeInGB *int `pulumi:"diskSizeInGB"`
	// Name of the mounted file share. 63 characters or less, lowercase alphabet, numbers, and -
	FileShareName *string `pulumi:"fileShareName"`
	// Full resource ID of storage account.
	StorageAccountResourceId *string `pulumi:"storageAccountResourceId"`
}

// StorageProfileResponseInput is an input type that accepts StorageProfileResponseArgs and StorageProfileResponseOutput values.
// You can construct a concrete instance of `StorageProfileResponseInput` via:
//
//          StorageProfileResponseArgs{...}
type StorageProfileResponseInput interface {
	pulumi.Input

	ToStorageProfileResponseOutput() StorageProfileResponseOutput
	ToStorageProfileResponseOutputWithContext(context.Context) StorageProfileResponseOutput
}

// The storage profile of the user settings.
type StorageProfileResponseArgs struct {
	// Size of file share
	DiskSizeInGB pulumi.IntPtrInput `pulumi:"diskSizeInGB"`
	// Name of the mounted file share. 63 characters or less, lowercase alphabet, numbers, and -
	FileShareName pulumi.StringPtrInput `pulumi:"fileShareName"`
	// Full resource ID of storage account.
	StorageAccountResourceId pulumi.StringPtrInput `pulumi:"storageAccountResourceId"`
}

func (StorageProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfileResponse)(nil)).Elem()
}

func (i StorageProfileResponseArgs) ToStorageProfileResponseOutput() StorageProfileResponseOutput {
	return i.ToStorageProfileResponseOutputWithContext(context.Background())
}

func (i StorageProfileResponseArgs) ToStorageProfileResponseOutputWithContext(ctx context.Context) StorageProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileResponseOutput)
}

func (i StorageProfileResponseArgs) ToStorageProfileResponsePtrOutput() StorageProfileResponsePtrOutput {
	return i.ToStorageProfileResponsePtrOutputWithContext(context.Background())
}

func (i StorageProfileResponseArgs) ToStorageProfileResponsePtrOutputWithContext(ctx context.Context) StorageProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileResponseOutput).ToStorageProfileResponsePtrOutputWithContext(ctx)
}

// StorageProfileResponsePtrInput is an input type that accepts StorageProfileResponseArgs, StorageProfileResponsePtr and StorageProfileResponsePtrOutput values.
// You can construct a concrete instance of `StorageProfileResponsePtrInput` via:
//
//          StorageProfileResponseArgs{...}
//
//  or:
//
//          nil
type StorageProfileResponsePtrInput interface {
	pulumi.Input

	ToStorageProfileResponsePtrOutput() StorageProfileResponsePtrOutput
	ToStorageProfileResponsePtrOutputWithContext(context.Context) StorageProfileResponsePtrOutput
}

type storageProfileResponsePtrType StorageProfileResponseArgs

func StorageProfileResponsePtr(v *StorageProfileResponseArgs) StorageProfileResponsePtrInput {
	return (*storageProfileResponsePtrType)(v)
}

func (*storageProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfileResponse)(nil)).Elem()
}

func (i *storageProfileResponsePtrType) ToStorageProfileResponsePtrOutput() StorageProfileResponsePtrOutput {
	return i.ToStorageProfileResponsePtrOutputWithContext(context.Background())
}

func (i *storageProfileResponsePtrType) ToStorageProfileResponsePtrOutputWithContext(ctx context.Context) StorageProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileResponsePtrOutput)
}

// The storage profile of the user settings.
type StorageProfileResponseOutput struct{ *pulumi.OutputState }

func (StorageProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfileResponse)(nil)).Elem()
}

func (o StorageProfileResponseOutput) ToStorageProfileResponseOutput() StorageProfileResponseOutput {
	return o
}

func (o StorageProfileResponseOutput) ToStorageProfileResponseOutputWithContext(ctx context.Context) StorageProfileResponseOutput {
	return o
}

func (o StorageProfileResponseOutput) ToStorageProfileResponsePtrOutput() StorageProfileResponsePtrOutput {
	return o.ToStorageProfileResponsePtrOutputWithContext(context.Background())
}

func (o StorageProfileResponseOutput) ToStorageProfileResponsePtrOutputWithContext(ctx context.Context) StorageProfileResponsePtrOutput {
	return o.ApplyT(func(v StorageProfileResponse) *StorageProfileResponse {
		return &v
	}).(StorageProfileResponsePtrOutput)
}

// Size of file share
func (o StorageProfileResponseOutput) DiskSizeInGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageProfileResponse) *int { return v.DiskSizeInGB }).(pulumi.IntPtrOutput)
}

// Name of the mounted file share. 63 characters or less, lowercase alphabet, numbers, and -
func (o StorageProfileResponseOutput) FileShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageProfileResponse) *string { return v.FileShareName }).(pulumi.StringPtrOutput)
}

// Full resource ID of storage account.
func (o StorageProfileResponseOutput) StorageAccountResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageProfileResponse) *string { return v.StorageAccountResourceId }).(pulumi.StringPtrOutput)
}

type StorageProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfileResponse)(nil)).Elem()
}

func (o StorageProfileResponsePtrOutput) ToStorageProfileResponsePtrOutput() StorageProfileResponsePtrOutput {
	return o
}

func (o StorageProfileResponsePtrOutput) ToStorageProfileResponsePtrOutputWithContext(ctx context.Context) StorageProfileResponsePtrOutput {
	return o
}

func (o StorageProfileResponsePtrOutput) Elem() StorageProfileResponseOutput {
	return o.ApplyT(func(v *StorageProfileResponse) StorageProfileResponse { return *v }).(StorageProfileResponseOutput)
}

// Size of file share
func (o StorageProfileResponsePtrOutput) DiskSizeInGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeInGB
	}).(pulumi.IntPtrOutput)
}

// Name of the mounted file share. 63 characters or less, lowercase alphabet, numbers, and -
func (o StorageProfileResponsePtrOutput) FileShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.FileShareName
	}).(pulumi.StringPtrOutput)
}

// Full resource ID of storage account.
func (o StorageProfileResponsePtrOutput) StorageAccountResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountResourceId
	}).(pulumi.StringPtrOutput)
}

// Settings for terminal appearance.
type TerminalSettings struct {
	// Size of terminal font.
	FontSize *string `pulumi:"fontSize"`
	// Style of terminal font.
	FontStyle *string `pulumi:"fontStyle"`
}

// TerminalSettingsInput is an input type that accepts TerminalSettingsArgs and TerminalSettingsOutput values.
// You can construct a concrete instance of `TerminalSettingsInput` via:
//
//          TerminalSettingsArgs{...}
type TerminalSettingsInput interface {
	pulumi.Input

	ToTerminalSettingsOutput() TerminalSettingsOutput
	ToTerminalSettingsOutputWithContext(context.Context) TerminalSettingsOutput
}

// Settings for terminal appearance.
type TerminalSettingsArgs struct {
	// Size of terminal font.
	FontSize pulumi.StringPtrInput `pulumi:"fontSize"`
	// Style of terminal font.
	FontStyle pulumi.StringPtrInput `pulumi:"fontStyle"`
}

func (TerminalSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TerminalSettings)(nil)).Elem()
}

func (i TerminalSettingsArgs) ToTerminalSettingsOutput() TerminalSettingsOutput {
	return i.ToTerminalSettingsOutputWithContext(context.Background())
}

func (i TerminalSettingsArgs) ToTerminalSettingsOutputWithContext(ctx context.Context) TerminalSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerminalSettingsOutput)
}

func (i TerminalSettingsArgs) ToTerminalSettingsPtrOutput() TerminalSettingsPtrOutput {
	return i.ToTerminalSettingsPtrOutputWithContext(context.Background())
}

func (i TerminalSettingsArgs) ToTerminalSettingsPtrOutputWithContext(ctx context.Context) TerminalSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerminalSettingsOutput).ToTerminalSettingsPtrOutputWithContext(ctx)
}

// TerminalSettingsPtrInput is an input type that accepts TerminalSettingsArgs, TerminalSettingsPtr and TerminalSettingsPtrOutput values.
// You can construct a concrete instance of `TerminalSettingsPtrInput` via:
//
//          TerminalSettingsArgs{...}
//
//  or:
//
//          nil
type TerminalSettingsPtrInput interface {
	pulumi.Input

	ToTerminalSettingsPtrOutput() TerminalSettingsPtrOutput
	ToTerminalSettingsPtrOutputWithContext(context.Context) TerminalSettingsPtrOutput
}

type terminalSettingsPtrType TerminalSettingsArgs

func TerminalSettingsPtr(v *TerminalSettingsArgs) TerminalSettingsPtrInput {
	return (*terminalSettingsPtrType)(v)
}

func (*terminalSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TerminalSettings)(nil)).Elem()
}

func (i *terminalSettingsPtrType) ToTerminalSettingsPtrOutput() TerminalSettingsPtrOutput {
	return i.ToTerminalSettingsPtrOutputWithContext(context.Background())
}

func (i *terminalSettingsPtrType) ToTerminalSettingsPtrOutputWithContext(ctx context.Context) TerminalSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerminalSettingsPtrOutput)
}

// Settings for terminal appearance.
type TerminalSettingsOutput struct{ *pulumi.OutputState }

func (TerminalSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TerminalSettings)(nil)).Elem()
}

func (o TerminalSettingsOutput) ToTerminalSettingsOutput() TerminalSettingsOutput {
	return o
}

func (o TerminalSettingsOutput) ToTerminalSettingsOutputWithContext(ctx context.Context) TerminalSettingsOutput {
	return o
}

func (o TerminalSettingsOutput) ToTerminalSettingsPtrOutput() TerminalSettingsPtrOutput {
	return o.ToTerminalSettingsPtrOutputWithContext(context.Background())
}

func (o TerminalSettingsOutput) ToTerminalSettingsPtrOutputWithContext(ctx context.Context) TerminalSettingsPtrOutput {
	return o.ApplyT(func(v TerminalSettings) *TerminalSettings {
		return &v
	}).(TerminalSettingsPtrOutput)
}

// Size of terminal font.
func (o TerminalSettingsOutput) FontSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TerminalSettings) *string { return v.FontSize }).(pulumi.StringPtrOutput)
}

// Style of terminal font.
func (o TerminalSettingsOutput) FontStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TerminalSettings) *string { return v.FontStyle }).(pulumi.StringPtrOutput)
}

type TerminalSettingsPtrOutput struct{ *pulumi.OutputState }

func (TerminalSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TerminalSettings)(nil)).Elem()
}

func (o TerminalSettingsPtrOutput) ToTerminalSettingsPtrOutput() TerminalSettingsPtrOutput {
	return o
}

func (o TerminalSettingsPtrOutput) ToTerminalSettingsPtrOutputWithContext(ctx context.Context) TerminalSettingsPtrOutput {
	return o
}

func (o TerminalSettingsPtrOutput) Elem() TerminalSettingsOutput {
	return o.ApplyT(func(v *TerminalSettings) TerminalSettings { return *v }).(TerminalSettingsOutput)
}

// Size of terminal font.
func (o TerminalSettingsPtrOutput) FontSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TerminalSettings) *string {
		if v == nil {
			return nil
		}
		return v.FontSize
	}).(pulumi.StringPtrOutput)
}

// Style of terminal font.
func (o TerminalSettingsPtrOutput) FontStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TerminalSettings) *string {
		if v == nil {
			return nil
		}
		return v.FontStyle
	}).(pulumi.StringPtrOutput)
}

// Settings for terminal appearance.
type TerminalSettingsResponse struct {
	// Size of terminal font.
	FontSize *string `pulumi:"fontSize"`
	// Style of terminal font.
	FontStyle *string `pulumi:"fontStyle"`
}

// TerminalSettingsResponseInput is an input type that accepts TerminalSettingsResponseArgs and TerminalSettingsResponseOutput values.
// You can construct a concrete instance of `TerminalSettingsResponseInput` via:
//
//          TerminalSettingsResponseArgs{...}
type TerminalSettingsResponseInput interface {
	pulumi.Input

	ToTerminalSettingsResponseOutput() TerminalSettingsResponseOutput
	ToTerminalSettingsResponseOutputWithContext(context.Context) TerminalSettingsResponseOutput
}

// Settings for terminal appearance.
type TerminalSettingsResponseArgs struct {
	// Size of terminal font.
	FontSize pulumi.StringPtrInput `pulumi:"fontSize"`
	// Style of terminal font.
	FontStyle pulumi.StringPtrInput `pulumi:"fontStyle"`
}

func (TerminalSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TerminalSettingsResponse)(nil)).Elem()
}

func (i TerminalSettingsResponseArgs) ToTerminalSettingsResponseOutput() TerminalSettingsResponseOutput {
	return i.ToTerminalSettingsResponseOutputWithContext(context.Background())
}

func (i TerminalSettingsResponseArgs) ToTerminalSettingsResponseOutputWithContext(ctx context.Context) TerminalSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerminalSettingsResponseOutput)
}

func (i TerminalSettingsResponseArgs) ToTerminalSettingsResponsePtrOutput() TerminalSettingsResponsePtrOutput {
	return i.ToTerminalSettingsResponsePtrOutputWithContext(context.Background())
}

func (i TerminalSettingsResponseArgs) ToTerminalSettingsResponsePtrOutputWithContext(ctx context.Context) TerminalSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerminalSettingsResponseOutput).ToTerminalSettingsResponsePtrOutputWithContext(ctx)
}

// TerminalSettingsResponsePtrInput is an input type that accepts TerminalSettingsResponseArgs, TerminalSettingsResponsePtr and TerminalSettingsResponsePtrOutput values.
// You can construct a concrete instance of `TerminalSettingsResponsePtrInput` via:
//
//          TerminalSettingsResponseArgs{...}
//
//  or:
//
//          nil
type TerminalSettingsResponsePtrInput interface {
	pulumi.Input

	ToTerminalSettingsResponsePtrOutput() TerminalSettingsResponsePtrOutput
	ToTerminalSettingsResponsePtrOutputWithContext(context.Context) TerminalSettingsResponsePtrOutput
}

type terminalSettingsResponsePtrType TerminalSettingsResponseArgs

func TerminalSettingsResponsePtr(v *TerminalSettingsResponseArgs) TerminalSettingsResponsePtrInput {
	return (*terminalSettingsResponsePtrType)(v)
}

func (*terminalSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TerminalSettingsResponse)(nil)).Elem()
}

func (i *terminalSettingsResponsePtrType) ToTerminalSettingsResponsePtrOutput() TerminalSettingsResponsePtrOutput {
	return i.ToTerminalSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *terminalSettingsResponsePtrType) ToTerminalSettingsResponsePtrOutputWithContext(ctx context.Context) TerminalSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerminalSettingsResponsePtrOutput)
}

// Settings for terminal appearance.
type TerminalSettingsResponseOutput struct{ *pulumi.OutputState }

func (TerminalSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TerminalSettingsResponse)(nil)).Elem()
}

func (o TerminalSettingsResponseOutput) ToTerminalSettingsResponseOutput() TerminalSettingsResponseOutput {
	return o
}

func (o TerminalSettingsResponseOutput) ToTerminalSettingsResponseOutputWithContext(ctx context.Context) TerminalSettingsResponseOutput {
	return o
}

func (o TerminalSettingsResponseOutput) ToTerminalSettingsResponsePtrOutput() TerminalSettingsResponsePtrOutput {
	return o.ToTerminalSettingsResponsePtrOutputWithContext(context.Background())
}

func (o TerminalSettingsResponseOutput) ToTerminalSettingsResponsePtrOutputWithContext(ctx context.Context) TerminalSettingsResponsePtrOutput {
	return o.ApplyT(func(v TerminalSettingsResponse) *TerminalSettingsResponse {
		return &v
	}).(TerminalSettingsResponsePtrOutput)
}

// Size of terminal font.
func (o TerminalSettingsResponseOutput) FontSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TerminalSettingsResponse) *string { return v.FontSize }).(pulumi.StringPtrOutput)
}

// Style of terminal font.
func (o TerminalSettingsResponseOutput) FontStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TerminalSettingsResponse) *string { return v.FontStyle }).(pulumi.StringPtrOutput)
}

type TerminalSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (TerminalSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TerminalSettingsResponse)(nil)).Elem()
}

func (o TerminalSettingsResponsePtrOutput) ToTerminalSettingsResponsePtrOutput() TerminalSettingsResponsePtrOutput {
	return o
}

func (o TerminalSettingsResponsePtrOutput) ToTerminalSettingsResponsePtrOutputWithContext(ctx context.Context) TerminalSettingsResponsePtrOutput {
	return o
}

func (o TerminalSettingsResponsePtrOutput) Elem() TerminalSettingsResponseOutput {
	return o.ApplyT(func(v *TerminalSettingsResponse) TerminalSettingsResponse { return *v }).(TerminalSettingsResponseOutput)
}

// Size of terminal font.
func (o TerminalSettingsResponsePtrOutput) FontSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TerminalSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.FontSize
	}).(pulumi.StringPtrOutput)
}

// Style of terminal font.
func (o TerminalSettingsResponsePtrOutput) FontStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TerminalSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.FontStyle
	}).(pulumi.StringPtrOutput)
}

// The cloud shell user settings properties.
type UserProperties struct {
	// The preferred location of the cloud shell.
	PreferredLocation string `pulumi:"preferredLocation"`
	// The operating system type of the cloud shell. Deprecated, use preferredShellType.
	PreferredOsType string `pulumi:"preferredOsType"`
	// The shell type of the cloud shell.
	PreferredShellType string `pulumi:"preferredShellType"`
	// The storage profile of the user settings.
	StorageProfile StorageProfile `pulumi:"storageProfile"`
	// Settings for terminal appearance.
	TerminalSettings TerminalSettings `pulumi:"terminalSettings"`
}

// UserPropertiesInput is an input type that accepts UserPropertiesArgs and UserPropertiesOutput values.
// You can construct a concrete instance of `UserPropertiesInput` via:
//
//          UserPropertiesArgs{...}
type UserPropertiesInput interface {
	pulumi.Input

	ToUserPropertiesOutput() UserPropertiesOutput
	ToUserPropertiesOutputWithContext(context.Context) UserPropertiesOutput
}

// The cloud shell user settings properties.
type UserPropertiesArgs struct {
	// The preferred location of the cloud shell.
	PreferredLocation pulumi.StringInput `pulumi:"preferredLocation"`
	// The operating system type of the cloud shell. Deprecated, use preferredShellType.
	PreferredOsType pulumi.StringInput `pulumi:"preferredOsType"`
	// The shell type of the cloud shell.
	PreferredShellType pulumi.StringInput `pulumi:"preferredShellType"`
	// The storage profile of the user settings.
	StorageProfile StorageProfileInput `pulumi:"storageProfile"`
	// Settings for terminal appearance.
	TerminalSettings TerminalSettingsInput `pulumi:"terminalSettings"`
}

func (UserPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProperties)(nil)).Elem()
}

func (i UserPropertiesArgs) ToUserPropertiesOutput() UserPropertiesOutput {
	return i.ToUserPropertiesOutputWithContext(context.Background())
}

func (i UserPropertiesArgs) ToUserPropertiesOutputWithContext(ctx context.Context) UserPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPropertiesOutput)
}

func (i UserPropertiesArgs) ToUserPropertiesPtrOutput() UserPropertiesPtrOutput {
	return i.ToUserPropertiesPtrOutputWithContext(context.Background())
}

func (i UserPropertiesArgs) ToUserPropertiesPtrOutputWithContext(ctx context.Context) UserPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPropertiesOutput).ToUserPropertiesPtrOutputWithContext(ctx)
}

// UserPropertiesPtrInput is an input type that accepts UserPropertiesArgs, UserPropertiesPtr and UserPropertiesPtrOutput values.
// You can construct a concrete instance of `UserPropertiesPtrInput` via:
//
//          UserPropertiesArgs{...}
//
//  or:
//
//          nil
type UserPropertiesPtrInput interface {
	pulumi.Input

	ToUserPropertiesPtrOutput() UserPropertiesPtrOutput
	ToUserPropertiesPtrOutputWithContext(context.Context) UserPropertiesPtrOutput
}

type userPropertiesPtrType UserPropertiesArgs

func UserPropertiesPtr(v *UserPropertiesArgs) UserPropertiesPtrInput {
	return (*userPropertiesPtrType)(v)
}

func (*userPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProperties)(nil)).Elem()
}

func (i *userPropertiesPtrType) ToUserPropertiesPtrOutput() UserPropertiesPtrOutput {
	return i.ToUserPropertiesPtrOutputWithContext(context.Background())
}

func (i *userPropertiesPtrType) ToUserPropertiesPtrOutputWithContext(ctx context.Context) UserPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPropertiesPtrOutput)
}

// The cloud shell user settings properties.
type UserPropertiesOutput struct{ *pulumi.OutputState }

func (UserPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProperties)(nil)).Elem()
}

func (o UserPropertiesOutput) ToUserPropertiesOutput() UserPropertiesOutput {
	return o
}

func (o UserPropertiesOutput) ToUserPropertiesOutputWithContext(ctx context.Context) UserPropertiesOutput {
	return o
}

func (o UserPropertiesOutput) ToUserPropertiesPtrOutput() UserPropertiesPtrOutput {
	return o.ToUserPropertiesPtrOutputWithContext(context.Background())
}

func (o UserPropertiesOutput) ToUserPropertiesPtrOutputWithContext(ctx context.Context) UserPropertiesPtrOutput {
	return o.ApplyT(func(v UserProperties) *UserProperties {
		return &v
	}).(UserPropertiesPtrOutput)
}

// The preferred location of the cloud shell.
func (o UserPropertiesOutput) PreferredLocation() pulumi.StringOutput {
	return o.ApplyT(func(v UserProperties) string { return v.PreferredLocation }).(pulumi.StringOutput)
}

// The operating system type of the cloud shell. Deprecated, use preferredShellType.
func (o UserPropertiesOutput) PreferredOsType() pulumi.StringOutput {
	return o.ApplyT(func(v UserProperties) string { return v.PreferredOsType }).(pulumi.StringOutput)
}

// The shell type of the cloud shell.
func (o UserPropertiesOutput) PreferredShellType() pulumi.StringOutput {
	return o.ApplyT(func(v UserProperties) string { return v.PreferredShellType }).(pulumi.StringOutput)
}

// The storage profile of the user settings.
func (o UserPropertiesOutput) StorageProfile() StorageProfileOutput {
	return o.ApplyT(func(v UserProperties) StorageProfile { return v.StorageProfile }).(StorageProfileOutput)
}

// Settings for terminal appearance.
func (o UserPropertiesOutput) TerminalSettings() TerminalSettingsOutput {
	return o.ApplyT(func(v UserProperties) TerminalSettings { return v.TerminalSettings }).(TerminalSettingsOutput)
}

type UserPropertiesPtrOutput struct{ *pulumi.OutputState }

func (UserPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProperties)(nil)).Elem()
}

func (o UserPropertiesPtrOutput) ToUserPropertiesPtrOutput() UserPropertiesPtrOutput {
	return o
}

func (o UserPropertiesPtrOutput) ToUserPropertiesPtrOutputWithContext(ctx context.Context) UserPropertiesPtrOutput {
	return o
}

func (o UserPropertiesPtrOutput) Elem() UserPropertiesOutput {
	return o.ApplyT(func(v *UserProperties) UserProperties { return *v }).(UserPropertiesOutput)
}

// The preferred location of the cloud shell.
func (o UserPropertiesPtrOutput) PreferredLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserProperties) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredLocation
	}).(pulumi.StringPtrOutput)
}

// The operating system type of the cloud shell. Deprecated, use preferredShellType.
func (o UserPropertiesPtrOutput) PreferredOsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserProperties) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredOsType
	}).(pulumi.StringPtrOutput)
}

// The shell type of the cloud shell.
func (o UserPropertiesPtrOutput) PreferredShellType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserProperties) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredShellType
	}).(pulumi.StringPtrOutput)
}

// The storage profile of the user settings.
func (o UserPropertiesPtrOutput) StorageProfile() StorageProfilePtrOutput {
	return o.ApplyT(func(v *UserProperties) *StorageProfile {
		if v == nil {
			return nil
		}
		return &v.StorageProfile
	}).(StorageProfilePtrOutput)
}

// Settings for terminal appearance.
func (o UserPropertiesPtrOutput) TerminalSettings() TerminalSettingsPtrOutput {
	return o.ApplyT(func(v *UserProperties) *TerminalSettings {
		if v == nil {
			return nil
		}
		return &v.TerminalSettings
	}).(TerminalSettingsPtrOutput)
}

// The cloud shell user settings properties.
type UserPropertiesResponse struct {
	// The preferred location of the cloud shell.
	PreferredLocation string `pulumi:"preferredLocation"`
	// The operating system type of the cloud shell. Deprecated, use preferredShellType.
	PreferredOsType string `pulumi:"preferredOsType"`
	// The shell type of the cloud shell.
	PreferredShellType string `pulumi:"preferredShellType"`
	// The storage profile of the user settings.
	StorageProfile StorageProfileResponse `pulumi:"storageProfile"`
	// Settings for terminal appearance.
	TerminalSettings TerminalSettingsResponse `pulumi:"terminalSettings"`
}

// UserPropertiesResponseInput is an input type that accepts UserPropertiesResponseArgs and UserPropertiesResponseOutput values.
// You can construct a concrete instance of `UserPropertiesResponseInput` via:
//
//          UserPropertiesResponseArgs{...}
type UserPropertiesResponseInput interface {
	pulumi.Input

	ToUserPropertiesResponseOutput() UserPropertiesResponseOutput
	ToUserPropertiesResponseOutputWithContext(context.Context) UserPropertiesResponseOutput
}

// The cloud shell user settings properties.
type UserPropertiesResponseArgs struct {
	// The preferred location of the cloud shell.
	PreferredLocation pulumi.StringInput `pulumi:"preferredLocation"`
	// The operating system type of the cloud shell. Deprecated, use preferredShellType.
	PreferredOsType pulumi.StringInput `pulumi:"preferredOsType"`
	// The shell type of the cloud shell.
	PreferredShellType pulumi.StringInput `pulumi:"preferredShellType"`
	// The storage profile of the user settings.
	StorageProfile StorageProfileResponseInput `pulumi:"storageProfile"`
	// Settings for terminal appearance.
	TerminalSettings TerminalSettingsResponseInput `pulumi:"terminalSettings"`
}

func (UserPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPropertiesResponse)(nil)).Elem()
}

func (i UserPropertiesResponseArgs) ToUserPropertiesResponseOutput() UserPropertiesResponseOutput {
	return i.ToUserPropertiesResponseOutputWithContext(context.Background())
}

func (i UserPropertiesResponseArgs) ToUserPropertiesResponseOutputWithContext(ctx context.Context) UserPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPropertiesResponseOutput)
}

func (i UserPropertiesResponseArgs) ToUserPropertiesResponsePtrOutput() UserPropertiesResponsePtrOutput {
	return i.ToUserPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i UserPropertiesResponseArgs) ToUserPropertiesResponsePtrOutputWithContext(ctx context.Context) UserPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPropertiesResponseOutput).ToUserPropertiesResponsePtrOutputWithContext(ctx)
}

// UserPropertiesResponsePtrInput is an input type that accepts UserPropertiesResponseArgs, UserPropertiesResponsePtr and UserPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `UserPropertiesResponsePtrInput` via:
//
//          UserPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type UserPropertiesResponsePtrInput interface {
	pulumi.Input

	ToUserPropertiesResponsePtrOutput() UserPropertiesResponsePtrOutput
	ToUserPropertiesResponsePtrOutputWithContext(context.Context) UserPropertiesResponsePtrOutput
}

type userPropertiesResponsePtrType UserPropertiesResponseArgs

func UserPropertiesResponsePtr(v *UserPropertiesResponseArgs) UserPropertiesResponsePtrInput {
	return (*userPropertiesResponsePtrType)(v)
}

func (*userPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPropertiesResponse)(nil)).Elem()
}

func (i *userPropertiesResponsePtrType) ToUserPropertiesResponsePtrOutput() UserPropertiesResponsePtrOutput {
	return i.ToUserPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *userPropertiesResponsePtrType) ToUserPropertiesResponsePtrOutputWithContext(ctx context.Context) UserPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPropertiesResponsePtrOutput)
}

// The cloud shell user settings properties.
type UserPropertiesResponseOutput struct{ *pulumi.OutputState }

func (UserPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPropertiesResponse)(nil)).Elem()
}

func (o UserPropertiesResponseOutput) ToUserPropertiesResponseOutput() UserPropertiesResponseOutput {
	return o
}

func (o UserPropertiesResponseOutput) ToUserPropertiesResponseOutputWithContext(ctx context.Context) UserPropertiesResponseOutput {
	return o
}

func (o UserPropertiesResponseOutput) ToUserPropertiesResponsePtrOutput() UserPropertiesResponsePtrOutput {
	return o.ToUserPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o UserPropertiesResponseOutput) ToUserPropertiesResponsePtrOutputWithContext(ctx context.Context) UserPropertiesResponsePtrOutput {
	return o.ApplyT(func(v UserPropertiesResponse) *UserPropertiesResponse {
		return &v
	}).(UserPropertiesResponsePtrOutput)
}

// The preferred location of the cloud shell.
func (o UserPropertiesResponseOutput) PreferredLocation() pulumi.StringOutput {
	return o.ApplyT(func(v UserPropertiesResponse) string { return v.PreferredLocation }).(pulumi.StringOutput)
}

// The operating system type of the cloud shell. Deprecated, use preferredShellType.
func (o UserPropertiesResponseOutput) PreferredOsType() pulumi.StringOutput {
	return o.ApplyT(func(v UserPropertiesResponse) string { return v.PreferredOsType }).(pulumi.StringOutput)
}

// The shell type of the cloud shell.
func (o UserPropertiesResponseOutput) PreferredShellType() pulumi.StringOutput {
	return o.ApplyT(func(v UserPropertiesResponse) string { return v.PreferredShellType }).(pulumi.StringOutput)
}

// The storage profile of the user settings.
func (o UserPropertiesResponseOutput) StorageProfile() StorageProfileResponseOutput {
	return o.ApplyT(func(v UserPropertiesResponse) StorageProfileResponse { return v.StorageProfile }).(StorageProfileResponseOutput)
}

// Settings for terminal appearance.
func (o UserPropertiesResponseOutput) TerminalSettings() TerminalSettingsResponseOutput {
	return o.ApplyT(func(v UserPropertiesResponse) TerminalSettingsResponse { return v.TerminalSettings }).(TerminalSettingsResponseOutput)
}

type UserPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (UserPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPropertiesResponse)(nil)).Elem()
}

func (o UserPropertiesResponsePtrOutput) ToUserPropertiesResponsePtrOutput() UserPropertiesResponsePtrOutput {
	return o
}

func (o UserPropertiesResponsePtrOutput) ToUserPropertiesResponsePtrOutputWithContext(ctx context.Context) UserPropertiesResponsePtrOutput {
	return o
}

func (o UserPropertiesResponsePtrOutput) Elem() UserPropertiesResponseOutput {
	return o.ApplyT(func(v *UserPropertiesResponse) UserPropertiesResponse { return *v }).(UserPropertiesResponseOutput)
}

// The preferred location of the cloud shell.
func (o UserPropertiesResponsePtrOutput) PreferredLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredLocation
	}).(pulumi.StringPtrOutput)
}

// The operating system type of the cloud shell. Deprecated, use preferredShellType.
func (o UserPropertiesResponsePtrOutput) PreferredOsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredOsType
	}).(pulumi.StringPtrOutput)
}

// The shell type of the cloud shell.
func (o UserPropertiesResponsePtrOutput) PreferredShellType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredShellType
	}).(pulumi.StringPtrOutput)
}

// The storage profile of the user settings.
func (o UserPropertiesResponsePtrOutput) StorageProfile() StorageProfileResponsePtrOutput {
	return o.ApplyT(func(v *UserPropertiesResponse) *StorageProfileResponse {
		if v == nil {
			return nil
		}
		return &v.StorageProfile
	}).(StorageProfileResponsePtrOutput)
}

// Settings for terminal appearance.
func (o UserPropertiesResponsePtrOutput) TerminalSettings() TerminalSettingsResponsePtrOutput {
	return o.ApplyT(func(v *UserPropertiesResponse) *TerminalSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.TerminalSettings
	}).(TerminalSettingsResponsePtrOutput)
}

// Violation information.
type ViolationResponse struct {
	// Error message.
	ErrorMessage string `pulumi:"errorMessage"`
	// Id of the item that violates tenant configuration.
	Id string `pulumi:"id"`
	// Id of the user who owns violated item.
	UserId string `pulumi:"userId"`
}

// ViolationResponseInput is an input type that accepts ViolationResponseArgs and ViolationResponseOutput values.
// You can construct a concrete instance of `ViolationResponseInput` via:
//
//          ViolationResponseArgs{...}
type ViolationResponseInput interface {
	pulumi.Input

	ToViolationResponseOutput() ViolationResponseOutput
	ToViolationResponseOutputWithContext(context.Context) ViolationResponseOutput
}

// Violation information.
type ViolationResponseArgs struct {
	// Error message.
	ErrorMessage pulumi.StringInput `pulumi:"errorMessage"`
	// Id of the item that violates tenant configuration.
	Id pulumi.StringInput `pulumi:"id"`
	// Id of the user who owns violated item.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (ViolationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ViolationResponse)(nil)).Elem()
}

func (i ViolationResponseArgs) ToViolationResponseOutput() ViolationResponseOutput {
	return i.ToViolationResponseOutputWithContext(context.Background())
}

func (i ViolationResponseArgs) ToViolationResponseOutputWithContext(ctx context.Context) ViolationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ViolationResponseOutput)
}

// ViolationResponseArrayInput is an input type that accepts ViolationResponseArray and ViolationResponseArrayOutput values.
// You can construct a concrete instance of `ViolationResponseArrayInput` via:
//
//          ViolationResponseArray{ ViolationResponseArgs{...} }
type ViolationResponseArrayInput interface {
	pulumi.Input

	ToViolationResponseArrayOutput() ViolationResponseArrayOutput
	ToViolationResponseArrayOutputWithContext(context.Context) ViolationResponseArrayOutput
}

type ViolationResponseArray []ViolationResponseInput

func (ViolationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ViolationResponse)(nil)).Elem()
}

func (i ViolationResponseArray) ToViolationResponseArrayOutput() ViolationResponseArrayOutput {
	return i.ToViolationResponseArrayOutputWithContext(context.Background())
}

func (i ViolationResponseArray) ToViolationResponseArrayOutputWithContext(ctx context.Context) ViolationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ViolationResponseArrayOutput)
}

// Violation information.
type ViolationResponseOutput struct{ *pulumi.OutputState }

func (ViolationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ViolationResponse)(nil)).Elem()
}

func (o ViolationResponseOutput) ToViolationResponseOutput() ViolationResponseOutput {
	return o
}

func (o ViolationResponseOutput) ToViolationResponseOutputWithContext(ctx context.Context) ViolationResponseOutput {
	return o
}

// Error message.
func (o ViolationResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v ViolationResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// Id of the item that violates tenant configuration.
func (o ViolationResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ViolationResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Id of the user who owns violated item.
func (o ViolationResponseOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v ViolationResponse) string { return v.UserId }).(pulumi.StringOutput)
}

type ViolationResponseArrayOutput struct{ *pulumi.OutputState }

func (ViolationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ViolationResponse)(nil)).Elem()
}

func (o ViolationResponseArrayOutput) ToViolationResponseArrayOutput() ViolationResponseArrayOutput {
	return o
}

func (o ViolationResponseArrayOutput) ToViolationResponseArrayOutputWithContext(ctx context.Context) ViolationResponseArrayOutput {
	return o
}

func (o ViolationResponseArrayOutput) Index(i pulumi.IntInput) ViolationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ViolationResponse {
		return vs[0].([]ViolationResponse)[vs[1].(int)]
	}).(ViolationResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ConsoleCreatePropertiesOutput{})
	pulumi.RegisterOutputType(ConsoleCreatePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConsolePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConsolePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DashboardLensOutput{})
	pulumi.RegisterOutputType(DashboardLensArrayOutput{})
	pulumi.RegisterOutputType(DashboardLensResponseOutput{})
	pulumi.RegisterOutputType(DashboardLensResponseArrayOutput{})
	pulumi.RegisterOutputType(DashboardPartsOutput{})
	pulumi.RegisterOutputType(DashboardPartsArrayOutput{})
	pulumi.RegisterOutputType(DashboardPartsPositionOutput{})
	pulumi.RegisterOutputType(DashboardPartsResponseOutput{})
	pulumi.RegisterOutputType(DashboardPartsResponseArrayOutput{})
	pulumi.RegisterOutputType(DashboardPartsResponsePositionOutput{})
	pulumi.RegisterOutputType(MarkdownPartMetadataOutput{})
	pulumi.RegisterOutputType(MarkdownPartMetadataPtrOutput{})
	pulumi.RegisterOutputType(MarkdownPartMetadataContentOutput{})
	pulumi.RegisterOutputType(MarkdownPartMetadataContentPtrOutput{})
	pulumi.RegisterOutputType(MarkdownPartMetadataResponseOutput{})
	pulumi.RegisterOutputType(MarkdownPartMetadataResponsePtrOutput{})
	pulumi.RegisterOutputType(MarkdownPartMetadataResponseContentOutput{})
	pulumi.RegisterOutputType(MarkdownPartMetadataResponseContentPtrOutput{})
	pulumi.RegisterOutputType(MarkdownPartMetadataResponseSettingsOutput{})
	pulumi.RegisterOutputType(MarkdownPartMetadataResponseSettingsPtrOutput{})
	pulumi.RegisterOutputType(MarkdownPartMetadataSettingsOutput{})
	pulumi.RegisterOutputType(MarkdownPartMetadataSettingsPtrOutput{})
	pulumi.RegisterOutputType(StorageProfileOutput{})
	pulumi.RegisterOutputType(StorageProfilePtrOutput{})
	pulumi.RegisterOutputType(StorageProfileResponseOutput{})
	pulumi.RegisterOutputType(StorageProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(TerminalSettingsOutput{})
	pulumi.RegisterOutputType(TerminalSettingsPtrOutput{})
	pulumi.RegisterOutputType(TerminalSettingsResponseOutput{})
	pulumi.RegisterOutputType(TerminalSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(UserPropertiesOutput{})
	pulumi.RegisterOutputType(UserPropertiesPtrOutput{})
	pulumi.RegisterOutputType(UserPropertiesResponseOutput{})
	pulumi.RegisterOutputType(UserPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ViolationResponseOutput{})
	pulumi.RegisterOutputType(ViolationResponseArrayOutput{})
}
