// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Media Services account.
func LookupMediaService(ctx *pulumi.Context, args *LookupMediaServiceArgs, opts ...pulumi.InvokeOption) (*LookupMediaServiceResult, error) {
	var rv LookupMediaServiceResult
	err := ctx.Invoke("azure-native:media/v20211101:getMediaService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMediaServiceArgs struct {
	// The Media Services account name.
	AccountName string `pulumi:"accountName"`
	// The name of the resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A Media Services account.
type LookupMediaServiceResult struct {
	// The account encryption properties.
	Encryption *AccountEncryptionResponse `pulumi:"encryption"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The Managed Identity for the Media Services account.
	Identity *MediaServiceIdentityResponse `pulumi:"identity"`
	// The Key Delivery properties for Media Services account.
	KeyDelivery *KeyDeliveryResponse `pulumi:"keyDelivery"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The Media Services account ID.
	MediaServiceId string `pulumi:"mediaServiceId"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The Private Endpoint Connections created for the Media Service account.
	PrivateEndpointConnections []PrivateEndpointConnectionResponse `pulumi:"privateEndpointConnections"`
	// Provisioning state of the Media Services account.
	ProvisioningState string `pulumi:"provisioningState"`
	// Whether or not public network access is allowed for resources under the Media Services account.
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// The storage accounts for this resource.
	StorageAccounts       []StorageAccountResponse `pulumi:"storageAccounts"`
	StorageAuthentication *string                  `pulumi:"storageAuthentication"`
	// The system metadata relating to this resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupMediaServiceOutput(ctx *pulumi.Context, args LookupMediaServiceOutputArgs, opts ...pulumi.InvokeOption) LookupMediaServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMediaServiceResult, error) {
			args := v.(LookupMediaServiceArgs)
			r, err := LookupMediaService(ctx, &args, opts...)
			var s LookupMediaServiceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMediaServiceResultOutput)
}

type LookupMediaServiceOutputArgs struct {
	// The Media Services account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupMediaServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMediaServiceArgs)(nil)).Elem()
}

// A Media Services account.
type LookupMediaServiceResultOutput struct{ *pulumi.OutputState }

func (LookupMediaServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMediaServiceResult)(nil)).Elem()
}

func (o LookupMediaServiceResultOutput) ToLookupMediaServiceResultOutput() LookupMediaServiceResultOutput {
	return o
}

func (o LookupMediaServiceResultOutput) ToLookupMediaServiceResultOutputWithContext(ctx context.Context) LookupMediaServiceResultOutput {
	return o
}

// The account encryption properties.
func (o LookupMediaServiceResultOutput) Encryption() AccountEncryptionResponsePtrOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) *AccountEncryptionResponse { return v.Encryption }).(AccountEncryptionResponsePtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupMediaServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Managed Identity for the Media Services account.
func (o LookupMediaServiceResultOutput) Identity() MediaServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) *MediaServiceIdentityResponse { return v.Identity }).(MediaServiceIdentityResponsePtrOutput)
}

// The Key Delivery properties for Media Services account.
func (o LookupMediaServiceResultOutput) KeyDelivery() KeyDeliveryResponsePtrOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) *KeyDeliveryResponse { return v.KeyDelivery }).(KeyDeliveryResponsePtrOutput)
}

// The geo-location where the resource lives
func (o LookupMediaServiceResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) string { return v.Location }).(pulumi.StringOutput)
}

// The Media Services account ID.
func (o LookupMediaServiceResultOutput) MediaServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) string { return v.MediaServiceId }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupMediaServiceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) string { return v.Name }).(pulumi.StringOutput)
}

// The Private Endpoint Connections created for the Media Service account.
func (o LookupMediaServiceResultOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) []PrivateEndpointConnectionResponse {
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionResponseArrayOutput)
}

// Provisioning state of the Media Services account.
func (o LookupMediaServiceResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Whether or not public network access is allowed for resources under the Media Services account.
func (o LookupMediaServiceResultOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// The storage accounts for this resource.
func (o LookupMediaServiceResultOutput) StorageAccounts() StorageAccountResponseArrayOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) []StorageAccountResponse { return v.StorageAccounts }).(StorageAccountResponseArrayOutput)
}

func (o LookupMediaServiceResultOutput) StorageAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) *string { return v.StorageAuthentication }).(pulumi.StringPtrOutput)
}

// The system metadata relating to this resource.
func (o LookupMediaServiceResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupMediaServiceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupMediaServiceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMediaServiceResultOutput{})
}
