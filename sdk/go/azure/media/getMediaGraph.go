// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package media

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Media Graph.
// API Version: 2020-02-01-preview.
func LookupMediaGraph(ctx *pulumi.Context, args *LookupMediaGraphArgs, opts ...pulumi.InvokeOption) (*LookupMediaGraphResult, error) {
	var rv LookupMediaGraphResult
	err := ctx.Invoke("azure-native:media:getMediaGraph", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMediaGraphArgs struct {
	// The Media Services account name.
	AccountName string `pulumi:"accountName"`
	// The Media Graph name.
	MediaGraphName string `pulumi:"mediaGraphName"`
	// The name of the resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The Media Graph.
type LookupMediaGraphResult struct {
	// Date the Media Graph was created.
	Created string `pulumi:"created"`
	// Media Graph description.
	Description *string `pulumi:"description"`
	// Fully qualified resource ID for the resource.
	Id string `pulumi:"id"`
	// Date the Media Graph was last modified.
	LastModified string `pulumi:"lastModified"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// Media Graph sinks.
	Sinks []MediaGraphAssetSinkResponse `pulumi:"sinks"`
	// Media Graph sources.
	Sources []MediaGraphRtspSourceResponse `pulumi:"sources"`
	// Media Graph state which indicates the resource allocation status for running the media graph pipeline.
	State string `pulumi:"state"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

func LookupMediaGraphOutput(ctx *pulumi.Context, args LookupMediaGraphOutputArgs, opts ...pulumi.InvokeOption) LookupMediaGraphResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMediaGraphResult, error) {
			args := v.(LookupMediaGraphArgs)
			r, err := LookupMediaGraph(ctx, &args, opts...)
			var s LookupMediaGraphResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMediaGraphResultOutput)
}

type LookupMediaGraphOutputArgs struct {
	// The Media Services account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The Media Graph name.
	MediaGraphName pulumi.StringInput `pulumi:"mediaGraphName"`
	// The name of the resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupMediaGraphOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMediaGraphArgs)(nil)).Elem()
}

// The Media Graph.
type LookupMediaGraphResultOutput struct{ *pulumi.OutputState }

func (LookupMediaGraphResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMediaGraphResult)(nil)).Elem()
}

func (o LookupMediaGraphResultOutput) ToLookupMediaGraphResultOutput() LookupMediaGraphResultOutput {
	return o
}

func (o LookupMediaGraphResultOutput) ToLookupMediaGraphResultOutputWithContext(ctx context.Context) LookupMediaGraphResultOutput {
	return o
}

// Date the Media Graph was created.
func (o LookupMediaGraphResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMediaGraphResult) string { return v.Created }).(pulumi.StringOutput)
}

// Media Graph description.
func (o LookupMediaGraphResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaGraphResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource.
func (o LookupMediaGraphResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMediaGraphResult) string { return v.Id }).(pulumi.StringOutput)
}

// Date the Media Graph was last modified.
func (o LookupMediaGraphResultOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMediaGraphResult) string { return v.LastModified }).(pulumi.StringOutput)
}

// The name of the resource.
func (o LookupMediaGraphResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMediaGraphResult) string { return v.Name }).(pulumi.StringOutput)
}

// Media Graph sinks.
func (o LookupMediaGraphResultOutput) Sinks() MediaGraphAssetSinkResponseArrayOutput {
	return o.ApplyT(func(v LookupMediaGraphResult) []MediaGraphAssetSinkResponse { return v.Sinks }).(MediaGraphAssetSinkResponseArrayOutput)
}

// Media Graph sources.
func (o LookupMediaGraphResultOutput) Sources() MediaGraphRtspSourceResponseArrayOutput {
	return o.ApplyT(func(v LookupMediaGraphResult) []MediaGraphRtspSourceResponse { return v.Sources }).(MediaGraphRtspSourceResponseArrayOutput)
}

// Media Graph state which indicates the resource allocation status for running the media graph pipeline.
func (o LookupMediaGraphResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMediaGraphResult) string { return v.State }).(pulumi.StringOutput)
}

// The type of the resource.
func (o LookupMediaGraphResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMediaGraphResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMediaGraphResultOutput{})
}
