// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210601

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An Asset.
func LookupAsset(ctx *pulumi.Context, args *LookupAssetArgs, opts ...pulumi.InvokeOption) (*LookupAssetResult, error) {
	var rv LookupAssetResult
	err := ctx.Invoke("azure-native:media/v20210601:getAsset", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAssetArgs struct {
	// The Media Services account name.
	AccountName string `pulumi:"accountName"`
	// The Asset name.
	AssetName string `pulumi:"assetName"`
	// The name of the resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// An Asset.
type LookupAssetResult struct {
	// The alternate ID of the Asset.
	AlternateId *string `pulumi:"alternateId"`
	// The Asset ID.
	AssetId string `pulumi:"assetId"`
	// The name of the asset blob container.
	Container *string `pulumi:"container"`
	// The creation date of the Asset.
	Created string `pulumi:"created"`
	// The Asset description.
	Description *string `pulumi:"description"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The last modified date of the Asset.
	LastModified string `pulumi:"lastModified"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The name of the storage account.
	StorageAccountName *string `pulumi:"storageAccountName"`
	// The Asset encryption format. One of None or MediaStorageEncryption.
	StorageEncryptionFormat string `pulumi:"storageEncryptionFormat"`
	// The system metadata relating to this resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupAssetOutput(ctx *pulumi.Context, args LookupAssetOutputArgs, opts ...pulumi.InvokeOption) LookupAssetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAssetResult, error) {
			args := v.(LookupAssetArgs)
			r, err := LookupAsset(ctx, &args, opts...)
			var s LookupAssetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAssetResultOutput)
}

type LookupAssetOutputArgs struct {
	// The Media Services account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The Asset name.
	AssetName pulumi.StringInput `pulumi:"assetName"`
	// The name of the resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAssetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssetArgs)(nil)).Elem()
}

// An Asset.
type LookupAssetResultOutput struct{ *pulumi.OutputState }

func (LookupAssetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAssetResult)(nil)).Elem()
}

func (o LookupAssetResultOutput) ToLookupAssetResultOutput() LookupAssetResultOutput {
	return o
}

func (o LookupAssetResultOutput) ToLookupAssetResultOutputWithContext(ctx context.Context) LookupAssetResultOutput {
	return o
}

// The alternate ID of the Asset.
func (o LookupAssetResultOutput) AlternateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssetResult) *string { return v.AlternateId }).(pulumi.StringPtrOutput)
}

// The Asset ID.
func (o LookupAssetResultOutput) AssetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssetResult) string { return v.AssetId }).(pulumi.StringOutput)
}

// The name of the asset blob container.
func (o LookupAssetResultOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssetResult) *string { return v.Container }).(pulumi.StringPtrOutput)
}

// The creation date of the Asset.
func (o LookupAssetResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssetResult) string { return v.Created }).(pulumi.StringOutput)
}

// The Asset description.
func (o LookupAssetResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssetResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupAssetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssetResult) string { return v.Id }).(pulumi.StringOutput)
}

// The last modified date of the Asset.
func (o LookupAssetResultOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssetResult) string { return v.LastModified }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupAssetResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssetResult) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the storage account.
func (o LookupAssetResultOutput) StorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAssetResult) *string { return v.StorageAccountName }).(pulumi.StringPtrOutput)
}

// The Asset encryption format. One of None or MediaStorageEncryption.
func (o LookupAssetResultOutput) StorageEncryptionFormat() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssetResult) string { return v.StorageEncryptionFormat }).(pulumi.StringOutput)
}

// The system metadata relating to this resource.
func (o LookupAssetResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupAssetResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupAssetResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAssetResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAssetResultOutput{})
}
