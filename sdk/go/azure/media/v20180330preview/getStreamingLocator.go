// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180330preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Streaming Locator resource
func LookupStreamingLocator(ctx *pulumi.Context, args *LookupStreamingLocatorArgs, opts ...pulumi.InvokeOption) (*LookupStreamingLocatorResult, error) {
	var rv LookupStreamingLocatorResult
	err := ctx.Invoke("azure-native:media/v20180330preview:getStreamingLocator", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStreamingLocatorArgs struct {
	// The Media Services account name.
	AccountName string `pulumi:"accountName"`
	// The name of the resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The Streaming Locator name.
	StreamingLocatorName string `pulumi:"streamingLocatorName"`
}

// A Streaming Locator resource
type LookupStreamingLocatorResult struct {
	// Asset Name
	AssetName string `pulumi:"assetName"`
	// ContentKeys used by this Streaming Locator
	ContentKeys []StreamingLocatorUserDefinedContentKeyResponse `pulumi:"contentKeys"`
	// Creation time of Streaming Locator
	Created string `pulumi:"created"`
	// Default ContentKeyPolicy used by this Streaming Locator
	DefaultContentKeyPolicyName *string `pulumi:"defaultContentKeyPolicyName"`
	// EndTime of Streaming Locator
	EndTime *string `pulumi:"endTime"`
	// Fully qualified resource ID for the resource.
	Id string `pulumi:"id"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// StartTime of Streaming Locator
	StartTime *string `pulumi:"startTime"`
	// StreamingLocatorId of Streaming Locator
	StreamingLocatorId *string `pulumi:"streamingLocatorId"`
	// Streaming policy name used by this streaming locator. Either specify the name of streaming policy you created or use one of the predefined streaming polices. The predefined streaming policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_SecureStreaming' and 'Predefined_SecureStreamingWithFairPlay'
	StreamingPolicyName string `pulumi:"streamingPolicyName"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

func LookupStreamingLocatorOutput(ctx *pulumi.Context, args LookupStreamingLocatorOutputArgs, opts ...pulumi.InvokeOption) LookupStreamingLocatorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStreamingLocatorResult, error) {
			args := v.(LookupStreamingLocatorArgs)
			r, err := LookupStreamingLocator(ctx, &args, opts...)
			var s LookupStreamingLocatorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStreamingLocatorResultOutput)
}

type LookupStreamingLocatorOutputArgs struct {
	// The Media Services account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The Streaming Locator name.
	StreamingLocatorName pulumi.StringInput `pulumi:"streamingLocatorName"`
}

func (LookupStreamingLocatorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamingLocatorArgs)(nil)).Elem()
}

// A Streaming Locator resource
type LookupStreamingLocatorResultOutput struct{ *pulumi.OutputState }

func (LookupStreamingLocatorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamingLocatorResult)(nil)).Elem()
}

func (o LookupStreamingLocatorResultOutput) ToLookupStreamingLocatorResultOutput() LookupStreamingLocatorResultOutput {
	return o
}

func (o LookupStreamingLocatorResultOutput) ToLookupStreamingLocatorResultOutputWithContext(ctx context.Context) LookupStreamingLocatorResultOutput {
	return o
}

// Asset Name
func (o LookupStreamingLocatorResultOutput) AssetName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamingLocatorResult) string { return v.AssetName }).(pulumi.StringOutput)
}

// ContentKeys used by this Streaming Locator
func (o LookupStreamingLocatorResultOutput) ContentKeys() StreamingLocatorUserDefinedContentKeyResponseArrayOutput {
	return o.ApplyT(func(v LookupStreamingLocatorResult) []StreamingLocatorUserDefinedContentKeyResponse {
		return v.ContentKeys
	}).(StreamingLocatorUserDefinedContentKeyResponseArrayOutput)
}

// Creation time of Streaming Locator
func (o LookupStreamingLocatorResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamingLocatorResult) string { return v.Created }).(pulumi.StringOutput)
}

// Default ContentKeyPolicy used by this Streaming Locator
func (o LookupStreamingLocatorResultOutput) DefaultContentKeyPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStreamingLocatorResult) *string { return v.DefaultContentKeyPolicyName }).(pulumi.StringPtrOutput)
}

// EndTime of Streaming Locator
func (o LookupStreamingLocatorResultOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStreamingLocatorResult) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource.
func (o LookupStreamingLocatorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamingLocatorResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource.
func (o LookupStreamingLocatorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamingLocatorResult) string { return v.Name }).(pulumi.StringOutput)
}

// StartTime of Streaming Locator
func (o LookupStreamingLocatorResultOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStreamingLocatorResult) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// StreamingLocatorId of Streaming Locator
func (o LookupStreamingLocatorResultOutput) StreamingLocatorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStreamingLocatorResult) *string { return v.StreamingLocatorId }).(pulumi.StringPtrOutput)
}

// Streaming policy name used by this streaming locator. Either specify the name of streaming policy you created or use one of the predefined streaming polices. The predefined streaming policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_SecureStreaming' and 'Predefined_SecureStreamingWithFairPlay'
func (o LookupStreamingLocatorResultOutput) StreamingPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamingLocatorResult) string { return v.StreamingPolicyName }).(pulumi.StringOutput)
}

// The type of the resource.
func (o LookupStreamingLocatorResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamingLocatorResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStreamingLocatorResultOutput{})
}
