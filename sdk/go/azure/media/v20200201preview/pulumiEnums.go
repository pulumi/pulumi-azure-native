// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Underlying RTSP transport. This can be used to enable or disable HTTP tunneling.
type MediaGraphRtspTransport pulumi.String

const (
	// HTTP/HTTPS transport. This should be used when HTTP tunneling is desired.
	MediaGraphRtspTransportHttp = MediaGraphRtspTransport("Http")
	// TCP transport. This should be used when HTTP tunneling is not desired.
	MediaGraphRtspTransportTcp = MediaGraphRtspTransport("Tcp")
)

func (MediaGraphRtspTransport) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e MediaGraphRtspTransport) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MediaGraphRtspTransport) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MediaGraphRtspTransport) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MediaGraphRtspTransport) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
