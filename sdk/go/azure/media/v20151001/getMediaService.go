// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20151001

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The properties of a Media Service resource.
func LookupMediaService(ctx *pulumi.Context, args *LookupMediaServiceArgs, opts ...pulumi.InvokeOption) (*LookupMediaServiceResult, error) {
	var rv LookupMediaServiceResult
	err := ctx.Invoke("azure-native:media/v20151001:getMediaService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMediaServiceArgs struct {
	// Name of the Media Service.
	MediaServiceName string `pulumi:"mediaServiceName"`
	// Name of the resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The properties of a Media Service resource.
type LookupMediaServiceResult struct {
	// Read-only property that lists the Media Services REST API endpoints for this resource. If supplied on a PUT or PATCH, the value will be ignored.
	ApiEndpoints []ApiEndpointResponse `pulumi:"apiEndpoints"`
	// The id of the resource.
	Id string `pulumi:"id"`
	// The geographic location of the resource. This must be one of the supported and registered Azure Geo Regions (for example, West US, East US, Southeast Asia, and so forth).
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The storage accounts for this resource.
	StorageAccounts []StorageAccountResponse `pulumi:"storageAccounts"`
	// Tags to help categorize the resource in the Azure portal.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource
	Type string `pulumi:"type"`
}

func LookupMediaServiceOutput(ctx *pulumi.Context, args LookupMediaServiceOutputArgs, opts ...pulumi.InvokeOption) LookupMediaServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMediaServiceResult, error) {
			args := v.(LookupMediaServiceArgs)
			r, err := LookupMediaService(ctx, &args, opts...)
			var s LookupMediaServiceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMediaServiceResultOutput)
}

type LookupMediaServiceOutputArgs struct {
	// Name of the Media Service.
	MediaServiceName pulumi.StringInput `pulumi:"mediaServiceName"`
	// Name of the resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupMediaServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMediaServiceArgs)(nil)).Elem()
}

// The properties of a Media Service resource.
type LookupMediaServiceResultOutput struct{ *pulumi.OutputState }

func (LookupMediaServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMediaServiceResult)(nil)).Elem()
}

func (o LookupMediaServiceResultOutput) ToLookupMediaServiceResultOutput() LookupMediaServiceResultOutput {
	return o
}

func (o LookupMediaServiceResultOutput) ToLookupMediaServiceResultOutputWithContext(ctx context.Context) LookupMediaServiceResultOutput {
	return o
}

// Read-only property that lists the Media Services REST API endpoints for this resource. If supplied on a PUT or PATCH, the value will be ignored.
func (o LookupMediaServiceResultOutput) ApiEndpoints() ApiEndpointResponseArrayOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) []ApiEndpointResponse { return v.ApiEndpoints }).(ApiEndpointResponseArrayOutput)
}

// The id of the resource.
func (o LookupMediaServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geographic location of the resource. This must be one of the supported and registered Azure Geo Regions (for example, West US, East US, Southeast Asia, and so forth).
func (o LookupMediaServiceResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o LookupMediaServiceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) string { return v.Name }).(pulumi.StringOutput)
}

// The storage accounts for this resource.
func (o LookupMediaServiceResultOutput) StorageAccounts() StorageAccountResponseArrayOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) []StorageAccountResponse { return v.StorageAccounts }).(StorageAccountResponseArrayOutput)
}

// Tags to help categorize the resource in the Azure portal.
func (o LookupMediaServiceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource
func (o LookupMediaServiceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMediaServiceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMediaServiceResultOutput{})
}
