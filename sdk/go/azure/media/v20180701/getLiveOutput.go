// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180701

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Live Output.
func LookupLiveOutput(ctx *pulumi.Context, args *LookupLiveOutputArgs, opts ...pulumi.InvokeOption) (*LookupLiveOutputResult, error) {
	var rv LookupLiveOutputResult
	err := ctx.Invoke("azure-native:media/v20180701:getLiveOutput", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLiveOutputArgs struct {
	// The Media Services account name.
	AccountName string `pulumi:"accountName"`
	// The name of the Live Event.
	LiveEventName string `pulumi:"liveEventName"`
	// The name of the Live Output.
	LiveOutputName string `pulumi:"liveOutputName"`
	// The name of the resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The Live Output.
type LookupLiveOutputResult struct {
	// ISO 8601 timespan duration of the archive window length. This is duration that customer want to retain the recorded content.
	ArchiveWindowLength string `pulumi:"archiveWindowLength"`
	// The asset name.
	AssetName string `pulumi:"assetName"`
	// The exact time the Live Output was created.
	Created string `pulumi:"created"`
	// The description of the Live Output.
	Description *string `pulumi:"description"`
	// The HLS configuration.
	Hls *HlsResponse `pulumi:"hls"`
	// Fully qualified resource ID for the resource.
	Id string `pulumi:"id"`
	// The exact time the Live Output was last modified.
	LastModified string `pulumi:"lastModified"`
	// The manifest file name.  If not provided, the service will generate one automatically.
	ManifestName *string `pulumi:"manifestName"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The output snapshot time.
	OutputSnapTime *float64 `pulumi:"outputSnapTime"`
	// The provisioning state of the Live Output.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource state of the Live Output.
	ResourceState string `pulumi:"resourceState"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

func LookupLiveOutputOutput(ctx *pulumi.Context, args LookupLiveOutputOutputArgs, opts ...pulumi.InvokeOption) LookupLiveOutputResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLiveOutputResult, error) {
			args := v.(LookupLiveOutputArgs)
			r, err := LookupLiveOutput(ctx, &args, opts...)
			var s LookupLiveOutputResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLiveOutputResultOutput)
}

type LookupLiveOutputOutputArgs struct {
	// The Media Services account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the Live Event.
	LiveEventName pulumi.StringInput `pulumi:"liveEventName"`
	// The name of the Live Output.
	LiveOutputName pulumi.StringInput `pulumi:"liveOutputName"`
	// The name of the resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupLiveOutputOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLiveOutputArgs)(nil)).Elem()
}

// The Live Output.
type LookupLiveOutputResultOutput struct{ *pulumi.OutputState }

func (LookupLiveOutputResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLiveOutputResult)(nil)).Elem()
}

func (o LookupLiveOutputResultOutput) ToLookupLiveOutputResultOutput() LookupLiveOutputResultOutput {
	return o
}

func (o LookupLiveOutputResultOutput) ToLookupLiveOutputResultOutputWithContext(ctx context.Context) LookupLiveOutputResultOutput {
	return o
}

// ISO 8601 timespan duration of the archive window length. This is duration that customer want to retain the recorded content.
func (o LookupLiveOutputResultOutput) ArchiveWindowLength() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLiveOutputResult) string { return v.ArchiveWindowLength }).(pulumi.StringOutput)
}

// The asset name.
func (o LookupLiveOutputResultOutput) AssetName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLiveOutputResult) string { return v.AssetName }).(pulumi.StringOutput)
}

// The exact time the Live Output was created.
func (o LookupLiveOutputResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLiveOutputResult) string { return v.Created }).(pulumi.StringOutput)
}

// The description of the Live Output.
func (o LookupLiveOutputResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLiveOutputResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The HLS configuration.
func (o LookupLiveOutputResultOutput) Hls() HlsResponsePtrOutput {
	return o.ApplyT(func(v LookupLiveOutputResult) *HlsResponse { return v.Hls }).(HlsResponsePtrOutput)
}

// Fully qualified resource ID for the resource.
func (o LookupLiveOutputResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLiveOutputResult) string { return v.Id }).(pulumi.StringOutput)
}

// The exact time the Live Output was last modified.
func (o LookupLiveOutputResultOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLiveOutputResult) string { return v.LastModified }).(pulumi.StringOutput)
}

// The manifest file name.  If not provided, the service will generate one automatically.
func (o LookupLiveOutputResultOutput) ManifestName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLiveOutputResult) *string { return v.ManifestName }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o LookupLiveOutputResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLiveOutputResult) string { return v.Name }).(pulumi.StringOutput)
}

// The output snapshot time.
func (o LookupLiveOutputResultOutput) OutputSnapTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupLiveOutputResult) *float64 { return v.OutputSnapTime }).(pulumi.Float64PtrOutput)
}

// The provisioning state of the Live Output.
func (o LookupLiveOutputResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLiveOutputResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource state of the Live Output.
func (o LookupLiveOutputResultOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLiveOutputResult) string { return v.ResourceState }).(pulumi.StringOutput)
}

// The type of the resource.
func (o LookupLiveOutputResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLiveOutputResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLiveOutputResultOutput{})
}
