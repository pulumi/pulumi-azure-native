// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210930preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Azure resources returned by the resource action to get a list of assigned resources.
func ListUserAssignedIdentityAssociatedResources(ctx *pulumi.Context, args *ListUserAssignedIdentityAssociatedResourcesArgs, opts ...pulumi.InvokeOption) (*ListUserAssignedIdentityAssociatedResourcesResult, error) {
	var rv ListUserAssignedIdentityAssociatedResourcesResult
	err := ctx.Invoke("azure-native:managedidentity/v20210930preview:listUserAssignedIdentityAssociatedResources", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListUserAssignedIdentityAssociatedResourcesArgs struct {
	// OData filter expression to apply to the query.
	Filter *string `pulumi:"filter"`
	// OData orderBy expression to apply to the query.
	Orderby *string `pulumi:"orderby"`
	// The name of the Resource Group to which the identity belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the identity resource.
	ResourceName string `pulumi:"resourceName"`
	// Number of records to skip.
	Skip *int `pulumi:"skip"`
	// A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.
	Skiptoken *string `pulumi:"skiptoken"`
	// Number of records to return.
	Top *int `pulumi:"top"`
}

// Azure resources returned by the resource action to get a list of assigned resources.
type ListUserAssignedIdentityAssociatedResourcesResult struct {
	// The url to get the next page of results, if any.
	NextLink string `pulumi:"nextLink"`
	// Total number of Azure resources assigned to the identity.
	TotalCount float64 `pulumi:"totalCount"`
	// The collection of Azure resources returned by the resource action to get a list of assigned resources.
	Value []AzureResourceResponse `pulumi:"value"`
}

func ListUserAssignedIdentityAssociatedResourcesOutput(ctx *pulumi.Context, args ListUserAssignedIdentityAssociatedResourcesOutputArgs, opts ...pulumi.InvokeOption) ListUserAssignedIdentityAssociatedResourcesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListUserAssignedIdentityAssociatedResourcesResult, error) {
			args := v.(ListUserAssignedIdentityAssociatedResourcesArgs)
			r, err := ListUserAssignedIdentityAssociatedResources(ctx, &args, opts...)
			var s ListUserAssignedIdentityAssociatedResourcesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListUserAssignedIdentityAssociatedResourcesResultOutput)
}

type ListUserAssignedIdentityAssociatedResourcesOutputArgs struct {
	// OData filter expression to apply to the query.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// OData orderBy expression to apply to the query.
	Orderby pulumi.StringPtrInput `pulumi:"orderby"`
	// The name of the Resource Group to which the identity belongs.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the identity resource.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
	// Number of records to skip.
	Skip pulumi.IntPtrInput `pulumi:"skip"`
	// A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.
	Skiptoken pulumi.StringPtrInput `pulumi:"skiptoken"`
	// Number of records to return.
	Top pulumi.IntPtrInput `pulumi:"top"`
}

func (ListUserAssignedIdentityAssociatedResourcesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListUserAssignedIdentityAssociatedResourcesArgs)(nil)).Elem()
}

// Azure resources returned by the resource action to get a list of assigned resources.
type ListUserAssignedIdentityAssociatedResourcesResultOutput struct{ *pulumi.OutputState }

func (ListUserAssignedIdentityAssociatedResourcesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListUserAssignedIdentityAssociatedResourcesResult)(nil)).Elem()
}

func (o ListUserAssignedIdentityAssociatedResourcesResultOutput) ToListUserAssignedIdentityAssociatedResourcesResultOutput() ListUserAssignedIdentityAssociatedResourcesResultOutput {
	return o
}

func (o ListUserAssignedIdentityAssociatedResourcesResultOutput) ToListUserAssignedIdentityAssociatedResourcesResultOutputWithContext(ctx context.Context) ListUserAssignedIdentityAssociatedResourcesResultOutput {
	return o
}

// The url to get the next page of results, if any.
func (o ListUserAssignedIdentityAssociatedResourcesResultOutput) NextLink() pulumi.StringOutput {
	return o.ApplyT(func(v ListUserAssignedIdentityAssociatedResourcesResult) string { return v.NextLink }).(pulumi.StringOutput)
}

// Total number of Azure resources assigned to the identity.
func (o ListUserAssignedIdentityAssociatedResourcesResultOutput) TotalCount() pulumi.Float64Output {
	return o.ApplyT(func(v ListUserAssignedIdentityAssociatedResourcesResult) float64 { return v.TotalCount }).(pulumi.Float64Output)
}

// The collection of Azure resources returned by the resource action to get a list of assigned resources.
func (o ListUserAssignedIdentityAssociatedResourcesResultOutput) Value() AzureResourceResponseArrayOutput {
	return o.ApplyT(func(v ListUserAssignedIdentityAssociatedResourcesResult) []AzureResourceResponse { return v.Value }).(AzureResourceResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListUserAssignedIdentityAssociatedResourcesResultOutput{})
}
