// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Friendly RuleSet name mapping to the any RuleSet or secret related information.
func LookupRuleSet(ctx *pulumi.Context, args *LookupRuleSetArgs, opts ...pulumi.InvokeOption) (*LookupRuleSetResult, error) {
	var rv LookupRuleSetResult
	err := ctx.Invoke("azure-native:cdn/v20200901:getRuleSet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRuleSetArgs struct {
	// Name of the CDN profile which is unique within the resource group.
	ProfileName string `pulumi:"profileName"`
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the rule set under the profile which is unique globally.
	RuleSetName string `pulumi:"ruleSetName"`
}

// Friendly RuleSet name mapping to the any RuleSet or secret related information.
type LookupRuleSetResult struct {
	DeploymentStatus string `pulumi:"deploymentStatus"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// Provisioning status
	ProvisioningState string `pulumi:"provisioningState"`
	// Read only system data
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupRuleSetOutput(ctx *pulumi.Context, args LookupRuleSetOutputArgs, opts ...pulumi.InvokeOption) LookupRuleSetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRuleSetResult, error) {
			args := v.(LookupRuleSetArgs)
			r, err := LookupRuleSet(ctx, &args, opts...)
			var s LookupRuleSetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRuleSetResultOutput)
}

type LookupRuleSetOutputArgs struct {
	// Name of the CDN profile which is unique within the resource group.
	ProfileName pulumi.StringInput `pulumi:"profileName"`
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of the rule set under the profile which is unique globally.
	RuleSetName pulumi.StringInput `pulumi:"ruleSetName"`
}

func (LookupRuleSetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRuleSetArgs)(nil)).Elem()
}

// Friendly RuleSet name mapping to the any RuleSet or secret related information.
type LookupRuleSetResultOutput struct{ *pulumi.OutputState }

func (LookupRuleSetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRuleSetResult)(nil)).Elem()
}

func (o LookupRuleSetResultOutput) ToLookupRuleSetResultOutput() LookupRuleSetResultOutput {
	return o
}

func (o LookupRuleSetResultOutput) ToLookupRuleSetResultOutputWithContext(ctx context.Context) LookupRuleSetResultOutput {
	return o
}

func (o LookupRuleSetResultOutput) DeploymentStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleSetResult) string { return v.DeploymentStatus }).(pulumi.StringOutput)
}

// Resource ID.
func (o LookupRuleSetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleSetResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupRuleSetResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleSetResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning status
func (o LookupRuleSetResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleSetResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Read only system data
func (o LookupRuleSetResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupRuleSetResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource type.
func (o LookupRuleSetResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleSetResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRuleSetResultOutput{})
}
