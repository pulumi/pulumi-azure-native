// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20171012

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GeoFilterActions string

const (
	GeoFilterActionsBlock = GeoFilterActions("Block")
	GeoFilterActionsAllow = GeoFilterActions("Allow")
)

func (GeoFilterActions) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilterActions)(nil)).Elem()
}

func (e GeoFilterActions) ToGeoFilterActionsOutput() GeoFilterActionsOutput {
	return pulumi.ToOutput(e).(GeoFilterActionsOutput)
}

func (e GeoFilterActions) ToGeoFilterActionsOutputWithContext(ctx context.Context) GeoFilterActionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GeoFilterActionsOutput)
}

func (e GeoFilterActions) ToGeoFilterActionsPtrOutput() GeoFilterActionsPtrOutput {
	return e.ToGeoFilterActionsPtrOutputWithContext(context.Background())
}

func (e GeoFilterActions) ToGeoFilterActionsPtrOutputWithContext(ctx context.Context) GeoFilterActionsPtrOutput {
	return GeoFilterActions(e).ToGeoFilterActionsOutputWithContext(ctx).ToGeoFilterActionsPtrOutputWithContext(ctx)
}

func (e GeoFilterActions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GeoFilterActions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GeoFilterActions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GeoFilterActions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GeoFilterActionsOutput struct{ *pulumi.OutputState }

func (GeoFilterActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilterActions)(nil)).Elem()
}

func (o GeoFilterActionsOutput) ToGeoFilterActionsOutput() GeoFilterActionsOutput {
	return o
}

func (o GeoFilterActionsOutput) ToGeoFilterActionsOutputWithContext(ctx context.Context) GeoFilterActionsOutput {
	return o
}

func (o GeoFilterActionsOutput) ToGeoFilterActionsPtrOutput() GeoFilterActionsPtrOutput {
	return o.ToGeoFilterActionsPtrOutputWithContext(context.Background())
}

func (o GeoFilterActionsOutput) ToGeoFilterActionsPtrOutputWithContext(ctx context.Context) GeoFilterActionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GeoFilterActions) *GeoFilterActions {
		return &v
	}).(GeoFilterActionsPtrOutput)
}

func (o GeoFilterActionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GeoFilterActionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GeoFilterActions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GeoFilterActionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GeoFilterActionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GeoFilterActions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GeoFilterActionsPtrOutput struct{ *pulumi.OutputState }

func (GeoFilterActionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GeoFilterActions)(nil)).Elem()
}

func (o GeoFilterActionsPtrOutput) ToGeoFilterActionsPtrOutput() GeoFilterActionsPtrOutput {
	return o
}

func (o GeoFilterActionsPtrOutput) ToGeoFilterActionsPtrOutputWithContext(ctx context.Context) GeoFilterActionsPtrOutput {
	return o
}

func (o GeoFilterActionsPtrOutput) Elem() GeoFilterActionsOutput {
	return o.ApplyT(func(v *GeoFilterActions) GeoFilterActions {
		if v != nil {
			return *v
		}
		var ret GeoFilterActions
		return ret
	}).(GeoFilterActionsOutput)
}

func (o GeoFilterActionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GeoFilterActionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GeoFilterActions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GeoFilterActionsInput is an input type that accepts GeoFilterActionsArgs and GeoFilterActionsOutput values.
// You can construct a concrete instance of `GeoFilterActionsInput` via:
//
//          GeoFilterActionsArgs{...}
type GeoFilterActionsInput interface {
	pulumi.Input

	ToGeoFilterActionsOutput() GeoFilterActionsOutput
	ToGeoFilterActionsOutputWithContext(context.Context) GeoFilterActionsOutput
}

var geoFilterActionsPtrType = reflect.TypeOf((**GeoFilterActions)(nil)).Elem()

type GeoFilterActionsPtrInput interface {
	pulumi.Input

	ToGeoFilterActionsPtrOutput() GeoFilterActionsPtrOutput
	ToGeoFilterActionsPtrOutputWithContext(context.Context) GeoFilterActionsPtrOutput
}

type geoFilterActionsPtr string

func GeoFilterActionsPtr(v string) GeoFilterActionsPtrInput {
	return (*geoFilterActionsPtr)(&v)
}

func (*geoFilterActionsPtr) ElementType() reflect.Type {
	return geoFilterActionsPtrType
}

func (in *geoFilterActionsPtr) ToGeoFilterActionsPtrOutput() GeoFilterActionsPtrOutput {
	return pulumi.ToOutput(in).(GeoFilterActionsPtrOutput)
}

func (in *geoFilterActionsPtr) ToGeoFilterActionsPtrOutputWithContext(ctx context.Context) GeoFilterActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GeoFilterActionsPtrOutput)
}

type OptimizationType string

const (
	OptimizationTypeGeneralWebDelivery          = OptimizationType("GeneralWebDelivery")
	OptimizationTypeGeneralMediaStreaming       = OptimizationType("GeneralMediaStreaming")
	OptimizationTypeVideoOnDemandMediaStreaming = OptimizationType("VideoOnDemandMediaStreaming")
	OptimizationTypeLargeFileDownload           = OptimizationType("LargeFileDownload")
	OptimizationTypeDynamicSiteAcceleration     = OptimizationType("DynamicSiteAcceleration")
)

func (OptimizationType) ElementType() reflect.Type {
	return reflect.TypeOf((*OptimizationType)(nil)).Elem()
}

func (e OptimizationType) ToOptimizationTypeOutput() OptimizationTypeOutput {
	return pulumi.ToOutput(e).(OptimizationTypeOutput)
}

func (e OptimizationType) ToOptimizationTypeOutputWithContext(ctx context.Context) OptimizationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OptimizationTypeOutput)
}

func (e OptimizationType) ToOptimizationTypePtrOutput() OptimizationTypePtrOutput {
	return e.ToOptimizationTypePtrOutputWithContext(context.Background())
}

func (e OptimizationType) ToOptimizationTypePtrOutputWithContext(ctx context.Context) OptimizationTypePtrOutput {
	return OptimizationType(e).ToOptimizationTypeOutputWithContext(ctx).ToOptimizationTypePtrOutputWithContext(ctx)
}

func (e OptimizationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OptimizationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OptimizationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OptimizationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OptimizationTypeOutput struct{ *pulumi.OutputState }

func (OptimizationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptimizationType)(nil)).Elem()
}

func (o OptimizationTypeOutput) ToOptimizationTypeOutput() OptimizationTypeOutput {
	return o
}

func (o OptimizationTypeOutput) ToOptimizationTypeOutputWithContext(ctx context.Context) OptimizationTypeOutput {
	return o
}

func (o OptimizationTypeOutput) ToOptimizationTypePtrOutput() OptimizationTypePtrOutput {
	return o.ToOptimizationTypePtrOutputWithContext(context.Background())
}

func (o OptimizationTypeOutput) ToOptimizationTypePtrOutputWithContext(ctx context.Context) OptimizationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OptimizationType) *OptimizationType {
		return &v
	}).(OptimizationTypePtrOutput)
}

func (o OptimizationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OptimizationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OptimizationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OptimizationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OptimizationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OptimizationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OptimizationTypePtrOutput struct{ *pulumi.OutputState }

func (OptimizationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OptimizationType)(nil)).Elem()
}

func (o OptimizationTypePtrOutput) ToOptimizationTypePtrOutput() OptimizationTypePtrOutput {
	return o
}

func (o OptimizationTypePtrOutput) ToOptimizationTypePtrOutputWithContext(ctx context.Context) OptimizationTypePtrOutput {
	return o
}

func (o OptimizationTypePtrOutput) Elem() OptimizationTypeOutput {
	return o.ApplyT(func(v *OptimizationType) OptimizationType {
		if v != nil {
			return *v
		}
		var ret OptimizationType
		return ret
	}).(OptimizationTypeOutput)
}

func (o OptimizationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OptimizationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OptimizationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OptimizationTypeInput is an input type that accepts OptimizationTypeArgs and OptimizationTypeOutput values.
// You can construct a concrete instance of `OptimizationTypeInput` via:
//
//          OptimizationTypeArgs{...}
type OptimizationTypeInput interface {
	pulumi.Input

	ToOptimizationTypeOutput() OptimizationTypeOutput
	ToOptimizationTypeOutputWithContext(context.Context) OptimizationTypeOutput
}

var optimizationTypePtrType = reflect.TypeOf((**OptimizationType)(nil)).Elem()

type OptimizationTypePtrInput interface {
	pulumi.Input

	ToOptimizationTypePtrOutput() OptimizationTypePtrOutput
	ToOptimizationTypePtrOutputWithContext(context.Context) OptimizationTypePtrOutput
}

type optimizationTypePtr string

func OptimizationTypePtr(v string) OptimizationTypePtrInput {
	return (*optimizationTypePtr)(&v)
}

func (*optimizationTypePtr) ElementType() reflect.Type {
	return optimizationTypePtrType
}

func (in *optimizationTypePtr) ToOptimizationTypePtrOutput() OptimizationTypePtrOutput {
	return pulumi.ToOutput(in).(OptimizationTypePtrOutput)
}

func (in *optimizationTypePtr) ToOptimizationTypePtrOutputWithContext(ctx context.Context) OptimizationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OptimizationTypePtrOutput)
}

type QueryStringCachingBehavior string

const (
	QueryStringCachingBehaviorIgnoreQueryString = QueryStringCachingBehavior("IgnoreQueryString")
	QueryStringCachingBehaviorBypassCaching     = QueryStringCachingBehavior("BypassCaching")
	QueryStringCachingBehaviorUseQueryString    = QueryStringCachingBehavior("UseQueryString")
	QueryStringCachingBehaviorNotSet            = QueryStringCachingBehavior("NotSet")
)

func (QueryStringCachingBehavior) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryStringCachingBehavior)(nil)).Elem()
}

func (e QueryStringCachingBehavior) ToQueryStringCachingBehaviorOutput() QueryStringCachingBehaviorOutput {
	return pulumi.ToOutput(e).(QueryStringCachingBehaviorOutput)
}

func (e QueryStringCachingBehavior) ToQueryStringCachingBehaviorOutputWithContext(ctx context.Context) QueryStringCachingBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(QueryStringCachingBehaviorOutput)
}

func (e QueryStringCachingBehavior) ToQueryStringCachingBehaviorPtrOutput() QueryStringCachingBehaviorPtrOutput {
	return e.ToQueryStringCachingBehaviorPtrOutputWithContext(context.Background())
}

func (e QueryStringCachingBehavior) ToQueryStringCachingBehaviorPtrOutputWithContext(ctx context.Context) QueryStringCachingBehaviorPtrOutput {
	return QueryStringCachingBehavior(e).ToQueryStringCachingBehaviorOutputWithContext(ctx).ToQueryStringCachingBehaviorPtrOutputWithContext(ctx)
}

func (e QueryStringCachingBehavior) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e QueryStringCachingBehavior) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e QueryStringCachingBehavior) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e QueryStringCachingBehavior) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type QueryStringCachingBehaviorOutput struct{ *pulumi.OutputState }

func (QueryStringCachingBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryStringCachingBehavior)(nil)).Elem()
}

func (o QueryStringCachingBehaviorOutput) ToQueryStringCachingBehaviorOutput() QueryStringCachingBehaviorOutput {
	return o
}

func (o QueryStringCachingBehaviorOutput) ToQueryStringCachingBehaviorOutputWithContext(ctx context.Context) QueryStringCachingBehaviorOutput {
	return o
}

func (o QueryStringCachingBehaviorOutput) ToQueryStringCachingBehaviorPtrOutput() QueryStringCachingBehaviorPtrOutput {
	return o.ToQueryStringCachingBehaviorPtrOutputWithContext(context.Background())
}

func (o QueryStringCachingBehaviorOutput) ToQueryStringCachingBehaviorPtrOutputWithContext(ctx context.Context) QueryStringCachingBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueryStringCachingBehavior) *QueryStringCachingBehavior {
		return &v
	}).(QueryStringCachingBehaviorPtrOutput)
}

func (o QueryStringCachingBehaviorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o QueryStringCachingBehaviorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QueryStringCachingBehavior) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o QueryStringCachingBehaviorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QueryStringCachingBehaviorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QueryStringCachingBehavior) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type QueryStringCachingBehaviorPtrOutput struct{ *pulumi.OutputState }

func (QueryStringCachingBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueryStringCachingBehavior)(nil)).Elem()
}

func (o QueryStringCachingBehaviorPtrOutput) ToQueryStringCachingBehaviorPtrOutput() QueryStringCachingBehaviorPtrOutput {
	return o
}

func (o QueryStringCachingBehaviorPtrOutput) ToQueryStringCachingBehaviorPtrOutputWithContext(ctx context.Context) QueryStringCachingBehaviorPtrOutput {
	return o
}

func (o QueryStringCachingBehaviorPtrOutput) Elem() QueryStringCachingBehaviorOutput {
	return o.ApplyT(func(v *QueryStringCachingBehavior) QueryStringCachingBehavior {
		if v != nil {
			return *v
		}
		var ret QueryStringCachingBehavior
		return ret
	}).(QueryStringCachingBehaviorOutput)
}

func (o QueryStringCachingBehaviorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QueryStringCachingBehaviorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *QueryStringCachingBehavior) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// QueryStringCachingBehaviorInput is an input type that accepts QueryStringCachingBehaviorArgs and QueryStringCachingBehaviorOutput values.
// You can construct a concrete instance of `QueryStringCachingBehaviorInput` via:
//
//          QueryStringCachingBehaviorArgs{...}
type QueryStringCachingBehaviorInput interface {
	pulumi.Input

	ToQueryStringCachingBehaviorOutput() QueryStringCachingBehaviorOutput
	ToQueryStringCachingBehaviorOutputWithContext(context.Context) QueryStringCachingBehaviorOutput
}

var queryStringCachingBehaviorPtrType = reflect.TypeOf((**QueryStringCachingBehavior)(nil)).Elem()

type QueryStringCachingBehaviorPtrInput interface {
	pulumi.Input

	ToQueryStringCachingBehaviorPtrOutput() QueryStringCachingBehaviorPtrOutput
	ToQueryStringCachingBehaviorPtrOutputWithContext(context.Context) QueryStringCachingBehaviorPtrOutput
}

type queryStringCachingBehaviorPtr string

func QueryStringCachingBehaviorPtr(v string) QueryStringCachingBehaviorPtrInput {
	return (*queryStringCachingBehaviorPtr)(&v)
}

func (*queryStringCachingBehaviorPtr) ElementType() reflect.Type {
	return queryStringCachingBehaviorPtrType
}

func (in *queryStringCachingBehaviorPtr) ToQueryStringCachingBehaviorPtrOutput() QueryStringCachingBehaviorPtrOutput {
	return pulumi.ToOutput(in).(QueryStringCachingBehaviorPtrOutput)
}

func (in *queryStringCachingBehaviorPtr) ToQueryStringCachingBehaviorPtrOutputWithContext(ctx context.Context) QueryStringCachingBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(QueryStringCachingBehaviorPtrOutput)
}

type SkuName string

const (
	SkuName_Standard_Verizon   = SkuName("Standard_Verizon")
	SkuName_Premium_Verizon    = SkuName("Premium_Verizon")
	SkuName_Custom_Verizon     = SkuName("Custom_Verizon")
	SkuName_Standard_Akamai    = SkuName("Standard_Akamai")
	SkuName_Standard_ChinaCdn  = SkuName("Standard_ChinaCdn")
	SkuName_Premium_ChinaCdn   = SkuName("Premium_ChinaCdn")
	SkuName_Standard_Microsoft = SkuName("Standard_Microsoft")
)

func (SkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (e SkuName) ToSkuNameOutput() SkuNameOutput {
	return pulumi.ToOutput(e).(SkuNameOutput)
}

func (e SkuName) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuNameOutput)
}

func (e SkuName) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return e.ToSkuNamePtrOutputWithContext(context.Background())
}

func (e SkuName) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return SkuName(e).ToSkuNameOutputWithContext(ctx).ToSkuNamePtrOutputWithContext(ctx)
}

func (e SkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuNameOutput struct{ *pulumi.OutputState }

func (SkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (o SkuNameOutput) ToSkuNameOutput() SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o.ToSkuNamePtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuName) *SkuName {
		return &v
	}).(SkuNamePtrOutput)
}

func (o SkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuNamePtrOutput struct{ *pulumi.OutputState }

func (SkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuName)(nil)).Elem()
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) Elem() SkuNameOutput {
	return o.ApplyT(func(v *SkuName) SkuName {
		if v != nil {
			return *v
		}
		var ret SkuName
		return ret
	}).(SkuNameOutput)
}

func (o SkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuNameInput is an input type that accepts SkuNameArgs and SkuNameOutput values.
// You can construct a concrete instance of `SkuNameInput` via:
//
//          SkuNameArgs{...}
type SkuNameInput interface {
	pulumi.Input

	ToSkuNameOutput() SkuNameOutput
	ToSkuNameOutputWithContext(context.Context) SkuNameOutput
}

var skuNamePtrType = reflect.TypeOf((**SkuName)(nil)).Elem()

type SkuNamePtrInput interface {
	pulumi.Input

	ToSkuNamePtrOutput() SkuNamePtrOutput
	ToSkuNamePtrOutputWithContext(context.Context) SkuNamePtrOutput
}

type skuNamePtr string

func SkuNamePtr(v string) SkuNamePtrInput {
	return (*skuNamePtr)(&v)
}

func (*skuNamePtr) ElementType() reflect.Type {
	return skuNamePtrType
}

func (in *skuNamePtr) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return pulumi.ToOutput(in).(SkuNamePtrOutput)
}

func (in *skuNamePtr) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuNamePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GeoFilterActionsOutput{})
	pulumi.RegisterOutputType(GeoFilterActionsPtrOutput{})
	pulumi.RegisterOutputType(OptimizationTypeOutput{})
	pulumi.RegisterOutputType(OptimizationTypePtrOutput{})
	pulumi.RegisterOutputType(QueryStringCachingBehaviorOutput{})
	pulumi.RegisterOutputType(QueryStringCachingBehaviorPtrOutput{})
	pulumi.RegisterOutputType(SkuNameOutput{})
	pulumi.RegisterOutputType(SkuNamePtrOutput{})
}
