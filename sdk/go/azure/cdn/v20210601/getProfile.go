// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210601

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A profile is a logical grouping of endpoints that share the same settings.
func LookupProfile(ctx *pulumi.Context, args *LookupProfileArgs, opts ...pulumi.InvokeOption) (*LookupProfileResult, error) {
	var rv LookupProfileResult
	err := ctx.Invoke("azure-native:cdn/v20210601:getProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupProfileArgs struct {
	// Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.
	ProfileName string `pulumi:"profileName"`
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A profile is a logical grouping of endpoints that share the same settings.
type LookupProfileResult struct {
	// The Id of the frontdoor.
	FrontDoorId string `pulumi:"frontDoorId"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Kind of the profile. Used by portal to differentiate traditional CDN profile and new AFD profile.
	Kind string `pulumi:"kind"`
	// Resource location.
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns.
	OriginResponseTimeoutSeconds *int `pulumi:"originResponseTimeoutSeconds"`
	// Provisioning status of the profile.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource status of the profile.
	ResourceState string `pulumi:"resourceState"`
	// The pricing tier (defines Azure Front Door Standard or Premium or a CDN provider, feature list and rate) of the profile.
	Sku SkuResponse `pulumi:"sku"`
	// Read only system data
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupProfileOutput(ctx *pulumi.Context, args LookupProfileOutputArgs, opts ...pulumi.InvokeOption) LookupProfileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProfileResult, error) {
			args := v.(LookupProfileArgs)
			r, err := LookupProfile(ctx, &args, opts...)
			var s LookupProfileResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProfileResultOutput)
}

type LookupProfileOutputArgs struct {
	// Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.
	ProfileName pulumi.StringInput `pulumi:"profileName"`
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProfileArgs)(nil)).Elem()
}

// A profile is a logical grouping of endpoints that share the same settings.
type LookupProfileResultOutput struct{ *pulumi.OutputState }

func (LookupProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProfileResult)(nil)).Elem()
}

func (o LookupProfileResultOutput) ToLookupProfileResultOutput() LookupProfileResultOutput {
	return o
}

func (o LookupProfileResultOutput) ToLookupProfileResultOutputWithContext(ctx context.Context) LookupProfileResultOutput {
	return o
}

// The Id of the frontdoor.
func (o LookupProfileResultOutput) FrontDoorId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.FrontDoorId }).(pulumi.StringOutput)
}

// Resource ID.
func (o LookupProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of the profile. Used by portal to differentiate traditional CDN profile and new AFD profile.
func (o LookupProfileResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.Kind }).(pulumi.StringOutput)
}

// Resource location.
func (o LookupProfileResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupProfileResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.Name }).(pulumi.StringOutput)
}

// Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns.
func (o LookupProfileResultOutput) OriginResponseTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupProfileResult) *int { return v.OriginResponseTimeoutSeconds }).(pulumi.IntPtrOutput)
}

// Provisioning status of the profile.
func (o LookupProfileResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource status of the profile.
func (o LookupProfileResultOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.ResourceState }).(pulumi.StringOutput)
}

// The pricing tier (defines Azure Front Door Standard or Premium or a CDN provider, feature list and rate) of the profile.
func (o LookupProfileResultOutput) Sku() SkuResponseOutput {
	return o.ApplyT(func(v LookupProfileResult) SkuResponse { return v.Sku }).(SkuResponseOutput)
}

// Read only system data
func (o LookupProfileResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupProfileResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupProfileResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupProfileResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o LookupProfileResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfileResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProfileResultOutput{})
}
