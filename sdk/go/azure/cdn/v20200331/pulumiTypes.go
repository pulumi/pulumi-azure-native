// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200331

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParameters struct {
	// Caching behavior for the requests
	CacheBehavior string `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration *string `pulumi:"cacheDuration"`
	// The level at which the content needs to be cached.
	CacheType string `pulumi:"cacheType"`
	OdataType string `pulumi:"odataType"`
}

// CacheExpirationActionParametersInput is an input type that accepts CacheExpirationActionParametersArgs and CacheExpirationActionParametersOutput values.
// You can construct a concrete instance of `CacheExpirationActionParametersInput` via:
//
//          CacheExpirationActionParametersArgs{...}
type CacheExpirationActionParametersInput interface {
	pulumi.Input

	ToCacheExpirationActionParametersOutput() CacheExpirationActionParametersOutput
	ToCacheExpirationActionParametersOutputWithContext(context.Context) CacheExpirationActionParametersOutput
}

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParametersArgs struct {
	// Caching behavior for the requests
	CacheBehavior pulumi.StringInput `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration pulumi.StringPtrInput `pulumi:"cacheDuration"`
	// The level at which the content needs to be cached.
	CacheType pulumi.StringInput `pulumi:"cacheType"`
	OdataType pulumi.StringInput `pulumi:"odataType"`
}

func (CacheExpirationActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheExpirationActionParameters)(nil)).Elem()
}

func (i CacheExpirationActionParametersArgs) ToCacheExpirationActionParametersOutput() CacheExpirationActionParametersOutput {
	return i.ToCacheExpirationActionParametersOutputWithContext(context.Background())
}

func (i CacheExpirationActionParametersArgs) ToCacheExpirationActionParametersOutputWithContext(ctx context.Context) CacheExpirationActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheExpirationActionParametersOutput)
}

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParametersOutput struct{ *pulumi.OutputState }

func (CacheExpirationActionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheExpirationActionParameters)(nil)).Elem()
}

func (o CacheExpirationActionParametersOutput) ToCacheExpirationActionParametersOutput() CacheExpirationActionParametersOutput {
	return o
}

func (o CacheExpirationActionParametersOutput) ToCacheExpirationActionParametersOutputWithContext(ctx context.Context) CacheExpirationActionParametersOutput {
	return o
}

// Caching behavior for the requests
func (o CacheExpirationActionParametersOutput) CacheBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v CacheExpirationActionParameters) string { return v.CacheBehavior }).(pulumi.StringOutput)
}

// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
func (o CacheExpirationActionParametersOutput) CacheDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheExpirationActionParameters) *string { return v.CacheDuration }).(pulumi.StringPtrOutput)
}

// The level at which the content needs to be cached.
func (o CacheExpirationActionParametersOutput) CacheType() pulumi.StringOutput {
	return o.ApplyT(func(v CacheExpirationActionParameters) string { return v.CacheType }).(pulumi.StringOutput)
}

func (o CacheExpirationActionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v CacheExpirationActionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParametersInvokeResponse struct {
	// Caching behavior for the requests
	CacheBehavior string `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration *string `pulumi:"cacheDuration"`
	// The level at which the content needs to be cached.
	CacheType string `pulumi:"cacheType"`
	OdataType string `pulumi:"odataType"`
}

// CacheExpirationActionParametersInvokeResponseInput is an input type that accepts CacheExpirationActionParametersInvokeResponseArgs and CacheExpirationActionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `CacheExpirationActionParametersInvokeResponseInput` via:
//
//          CacheExpirationActionParametersInvokeResponseArgs{...}
type CacheExpirationActionParametersInvokeResponseInput interface {
	pulumi.Input

	ToCacheExpirationActionParametersInvokeResponseOutput() CacheExpirationActionParametersInvokeResponseOutput
	ToCacheExpirationActionParametersInvokeResponseOutputWithContext(context.Context) CacheExpirationActionParametersInvokeResponseOutput
}

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParametersInvokeResponseArgs struct {
	// Caching behavior for the requests
	CacheBehavior pulumi.StringInput `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration pulumi.StringPtrInput `pulumi:"cacheDuration"`
	// The level at which the content needs to be cached.
	CacheType pulumi.StringInput `pulumi:"cacheType"`
	OdataType pulumi.StringInput `pulumi:"odataType"`
}

func (CacheExpirationActionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheExpirationActionParametersInvokeResponse)(nil)).Elem()
}

func (i CacheExpirationActionParametersInvokeResponseArgs) ToCacheExpirationActionParametersInvokeResponseOutput() CacheExpirationActionParametersInvokeResponseOutput {
	return i.ToCacheExpirationActionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i CacheExpirationActionParametersInvokeResponseArgs) ToCacheExpirationActionParametersInvokeResponseOutputWithContext(ctx context.Context) CacheExpirationActionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheExpirationActionParametersInvokeResponseOutput)
}

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (CacheExpirationActionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheExpirationActionParametersInvokeResponse)(nil)).Elem()
}

func (o CacheExpirationActionParametersInvokeResponseOutput) ToCacheExpirationActionParametersInvokeResponseOutput() CacheExpirationActionParametersInvokeResponseOutput {
	return o
}

func (o CacheExpirationActionParametersInvokeResponseOutput) ToCacheExpirationActionParametersInvokeResponseOutputWithContext(ctx context.Context) CacheExpirationActionParametersInvokeResponseOutput {
	return o
}

// Caching behavior for the requests
func (o CacheExpirationActionParametersInvokeResponseOutput) CacheBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v CacheExpirationActionParametersInvokeResponse) string { return v.CacheBehavior }).(pulumi.StringOutput)
}

// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
func (o CacheExpirationActionParametersInvokeResponseOutput) CacheDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheExpirationActionParametersInvokeResponse) *string { return v.CacheDuration }).(pulumi.StringPtrOutput)
}

// The level at which the content needs to be cached.
func (o CacheExpirationActionParametersInvokeResponseOutput) CacheType() pulumi.StringOutput {
	return o.ApplyT(func(v CacheExpirationActionParametersInvokeResponse) string { return v.CacheType }).(pulumi.StringOutput)
}

func (o CacheExpirationActionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v CacheExpirationActionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParametersResponse struct {
	// Caching behavior for the requests
	CacheBehavior string `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration *string `pulumi:"cacheDuration"`
	// The level at which the content needs to be cached.
	CacheType string `pulumi:"cacheType"`
	OdataType string `pulumi:"odataType"`
}

// CacheExpirationActionParametersResponseInput is an input type that accepts CacheExpirationActionParametersResponseArgs and CacheExpirationActionParametersResponseOutput values.
// You can construct a concrete instance of `CacheExpirationActionParametersResponseInput` via:
//
//          CacheExpirationActionParametersResponseArgs{...}
type CacheExpirationActionParametersResponseInput interface {
	pulumi.Input

	ToCacheExpirationActionParametersResponseOutput() CacheExpirationActionParametersResponseOutput
	ToCacheExpirationActionParametersResponseOutputWithContext(context.Context) CacheExpirationActionParametersResponseOutput
}

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParametersResponseArgs struct {
	// Caching behavior for the requests
	CacheBehavior pulumi.StringInput `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration pulumi.StringPtrInput `pulumi:"cacheDuration"`
	// The level at which the content needs to be cached.
	CacheType pulumi.StringInput `pulumi:"cacheType"`
	OdataType pulumi.StringInput `pulumi:"odataType"`
}

func (CacheExpirationActionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheExpirationActionParametersResponse)(nil)).Elem()
}

func (i CacheExpirationActionParametersResponseArgs) ToCacheExpirationActionParametersResponseOutput() CacheExpirationActionParametersResponseOutput {
	return i.ToCacheExpirationActionParametersResponseOutputWithContext(context.Background())
}

func (i CacheExpirationActionParametersResponseArgs) ToCacheExpirationActionParametersResponseOutputWithContext(ctx context.Context) CacheExpirationActionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheExpirationActionParametersResponseOutput)
}

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParametersResponseOutput struct{ *pulumi.OutputState }

func (CacheExpirationActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheExpirationActionParametersResponse)(nil)).Elem()
}

func (o CacheExpirationActionParametersResponseOutput) ToCacheExpirationActionParametersResponseOutput() CacheExpirationActionParametersResponseOutput {
	return o
}

func (o CacheExpirationActionParametersResponseOutput) ToCacheExpirationActionParametersResponseOutputWithContext(ctx context.Context) CacheExpirationActionParametersResponseOutput {
	return o
}

// Caching behavior for the requests
func (o CacheExpirationActionParametersResponseOutput) CacheBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v CacheExpirationActionParametersResponse) string { return v.CacheBehavior }).(pulumi.StringOutput)
}

// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
func (o CacheExpirationActionParametersResponseOutput) CacheDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheExpirationActionParametersResponse) *string { return v.CacheDuration }).(pulumi.StringPtrOutput)
}

// The level at which the content needs to be cached.
func (o CacheExpirationActionParametersResponseOutput) CacheType() pulumi.StringOutput {
	return o.ApplyT(func(v CacheExpirationActionParametersResponse) string { return v.CacheType }).(pulumi.StringOutput)
}

func (o CacheExpirationActionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v CacheExpirationActionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParameters struct {
	OdataType string `pulumi:"odataType"`
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
	// Caching behavior for the requests
	QueryStringBehavior string `pulumi:"queryStringBehavior"`
}

// CacheKeyQueryStringActionParametersInput is an input type that accepts CacheKeyQueryStringActionParametersArgs and CacheKeyQueryStringActionParametersOutput values.
// You can construct a concrete instance of `CacheKeyQueryStringActionParametersInput` via:
//
//          CacheKeyQueryStringActionParametersArgs{...}
type CacheKeyQueryStringActionParametersInput interface {
	pulumi.Input

	ToCacheKeyQueryStringActionParametersOutput() CacheKeyQueryStringActionParametersOutput
	ToCacheKeyQueryStringActionParametersOutputWithContext(context.Context) CacheKeyQueryStringActionParametersOutput
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParametersArgs struct {
	OdataType pulumi.StringInput `pulumi:"odataType"`
	// query parameters to include or exclude (comma separated).
	QueryParameters pulumi.StringPtrInput `pulumi:"queryParameters"`
	// Caching behavior for the requests
	QueryStringBehavior pulumi.StringInput `pulumi:"queryStringBehavior"`
}

func (CacheKeyQueryStringActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheKeyQueryStringActionParameters)(nil)).Elem()
}

func (i CacheKeyQueryStringActionParametersArgs) ToCacheKeyQueryStringActionParametersOutput() CacheKeyQueryStringActionParametersOutput {
	return i.ToCacheKeyQueryStringActionParametersOutputWithContext(context.Background())
}

func (i CacheKeyQueryStringActionParametersArgs) ToCacheKeyQueryStringActionParametersOutputWithContext(ctx context.Context) CacheKeyQueryStringActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheKeyQueryStringActionParametersOutput)
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParametersOutput struct{ *pulumi.OutputState }

func (CacheKeyQueryStringActionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheKeyQueryStringActionParameters)(nil)).Elem()
}

func (o CacheKeyQueryStringActionParametersOutput) ToCacheKeyQueryStringActionParametersOutput() CacheKeyQueryStringActionParametersOutput {
	return o
}

func (o CacheKeyQueryStringActionParametersOutput) ToCacheKeyQueryStringActionParametersOutputWithContext(ctx context.Context) CacheKeyQueryStringActionParametersOutput {
	return o
}

func (o CacheKeyQueryStringActionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v CacheKeyQueryStringActionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// query parameters to include or exclude (comma separated).
func (o CacheKeyQueryStringActionParametersOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheKeyQueryStringActionParameters) *string { return v.QueryParameters }).(pulumi.StringPtrOutput)
}

// Caching behavior for the requests
func (o CacheKeyQueryStringActionParametersOutput) QueryStringBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v CacheKeyQueryStringActionParameters) string { return v.QueryStringBehavior }).(pulumi.StringOutput)
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParametersInvokeResponse struct {
	OdataType string `pulumi:"odataType"`
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
	// Caching behavior for the requests
	QueryStringBehavior string `pulumi:"queryStringBehavior"`
}

// CacheKeyQueryStringActionParametersInvokeResponseInput is an input type that accepts CacheKeyQueryStringActionParametersInvokeResponseArgs and CacheKeyQueryStringActionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `CacheKeyQueryStringActionParametersInvokeResponseInput` via:
//
//          CacheKeyQueryStringActionParametersInvokeResponseArgs{...}
type CacheKeyQueryStringActionParametersInvokeResponseInput interface {
	pulumi.Input

	ToCacheKeyQueryStringActionParametersInvokeResponseOutput() CacheKeyQueryStringActionParametersInvokeResponseOutput
	ToCacheKeyQueryStringActionParametersInvokeResponseOutputWithContext(context.Context) CacheKeyQueryStringActionParametersInvokeResponseOutput
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParametersInvokeResponseArgs struct {
	OdataType pulumi.StringInput `pulumi:"odataType"`
	// query parameters to include or exclude (comma separated).
	QueryParameters pulumi.StringPtrInput `pulumi:"queryParameters"`
	// Caching behavior for the requests
	QueryStringBehavior pulumi.StringInput `pulumi:"queryStringBehavior"`
}

func (CacheKeyQueryStringActionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheKeyQueryStringActionParametersInvokeResponse)(nil)).Elem()
}

func (i CacheKeyQueryStringActionParametersInvokeResponseArgs) ToCacheKeyQueryStringActionParametersInvokeResponseOutput() CacheKeyQueryStringActionParametersInvokeResponseOutput {
	return i.ToCacheKeyQueryStringActionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i CacheKeyQueryStringActionParametersInvokeResponseArgs) ToCacheKeyQueryStringActionParametersInvokeResponseOutputWithContext(ctx context.Context) CacheKeyQueryStringActionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheKeyQueryStringActionParametersInvokeResponseOutput)
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (CacheKeyQueryStringActionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheKeyQueryStringActionParametersInvokeResponse)(nil)).Elem()
}

func (o CacheKeyQueryStringActionParametersInvokeResponseOutput) ToCacheKeyQueryStringActionParametersInvokeResponseOutput() CacheKeyQueryStringActionParametersInvokeResponseOutput {
	return o
}

func (o CacheKeyQueryStringActionParametersInvokeResponseOutput) ToCacheKeyQueryStringActionParametersInvokeResponseOutputWithContext(ctx context.Context) CacheKeyQueryStringActionParametersInvokeResponseOutput {
	return o
}

func (o CacheKeyQueryStringActionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v CacheKeyQueryStringActionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// query parameters to include or exclude (comma separated).
func (o CacheKeyQueryStringActionParametersInvokeResponseOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheKeyQueryStringActionParametersInvokeResponse) *string { return v.QueryParameters }).(pulumi.StringPtrOutput)
}

// Caching behavior for the requests
func (o CacheKeyQueryStringActionParametersInvokeResponseOutput) QueryStringBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v CacheKeyQueryStringActionParametersInvokeResponse) string { return v.QueryStringBehavior }).(pulumi.StringOutput)
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParametersResponse struct {
	OdataType string `pulumi:"odataType"`
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
	// Caching behavior for the requests
	QueryStringBehavior string `pulumi:"queryStringBehavior"`
}

// CacheKeyQueryStringActionParametersResponseInput is an input type that accepts CacheKeyQueryStringActionParametersResponseArgs and CacheKeyQueryStringActionParametersResponseOutput values.
// You can construct a concrete instance of `CacheKeyQueryStringActionParametersResponseInput` via:
//
//          CacheKeyQueryStringActionParametersResponseArgs{...}
type CacheKeyQueryStringActionParametersResponseInput interface {
	pulumi.Input

	ToCacheKeyQueryStringActionParametersResponseOutput() CacheKeyQueryStringActionParametersResponseOutput
	ToCacheKeyQueryStringActionParametersResponseOutputWithContext(context.Context) CacheKeyQueryStringActionParametersResponseOutput
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParametersResponseArgs struct {
	OdataType pulumi.StringInput `pulumi:"odataType"`
	// query parameters to include or exclude (comma separated).
	QueryParameters pulumi.StringPtrInput `pulumi:"queryParameters"`
	// Caching behavior for the requests
	QueryStringBehavior pulumi.StringInput `pulumi:"queryStringBehavior"`
}

func (CacheKeyQueryStringActionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheKeyQueryStringActionParametersResponse)(nil)).Elem()
}

func (i CacheKeyQueryStringActionParametersResponseArgs) ToCacheKeyQueryStringActionParametersResponseOutput() CacheKeyQueryStringActionParametersResponseOutput {
	return i.ToCacheKeyQueryStringActionParametersResponseOutputWithContext(context.Background())
}

func (i CacheKeyQueryStringActionParametersResponseArgs) ToCacheKeyQueryStringActionParametersResponseOutputWithContext(ctx context.Context) CacheKeyQueryStringActionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheKeyQueryStringActionParametersResponseOutput)
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParametersResponseOutput struct{ *pulumi.OutputState }

func (CacheKeyQueryStringActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheKeyQueryStringActionParametersResponse)(nil)).Elem()
}

func (o CacheKeyQueryStringActionParametersResponseOutput) ToCacheKeyQueryStringActionParametersResponseOutput() CacheKeyQueryStringActionParametersResponseOutput {
	return o
}

func (o CacheKeyQueryStringActionParametersResponseOutput) ToCacheKeyQueryStringActionParametersResponseOutputWithContext(ctx context.Context) CacheKeyQueryStringActionParametersResponseOutput {
	return o
}

func (o CacheKeyQueryStringActionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v CacheKeyQueryStringActionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// query parameters to include or exclude (comma separated).
func (o CacheKeyQueryStringActionParametersResponseOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheKeyQueryStringActionParametersResponse) *string { return v.QueryParameters }).(pulumi.StringPtrOutput)
}

// Caching behavior for the requests
func (o CacheKeyQueryStringActionParametersResponseOutput) QueryStringBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v CacheKeyQueryStringActionParametersResponse) string { return v.QueryStringBehavior }).(pulumi.StringOutput)
}

// Defines the ARM Resource ID for the linked endpoints
type CdnEndpointInvokeResponse struct {
	// ARM Resource ID string.
	Id *string `pulumi:"id"`
}

// CdnEndpointInvokeResponseInput is an input type that accepts CdnEndpointInvokeResponseArgs and CdnEndpointInvokeResponseOutput values.
// You can construct a concrete instance of `CdnEndpointInvokeResponseInput` via:
//
//          CdnEndpointInvokeResponseArgs{...}
type CdnEndpointInvokeResponseInput interface {
	pulumi.Input

	ToCdnEndpointInvokeResponseOutput() CdnEndpointInvokeResponseOutput
	ToCdnEndpointInvokeResponseOutputWithContext(context.Context) CdnEndpointInvokeResponseOutput
}

// Defines the ARM Resource ID for the linked endpoints
type CdnEndpointInvokeResponseArgs struct {
	// ARM Resource ID string.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (CdnEndpointInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CdnEndpointInvokeResponse)(nil)).Elem()
}

func (i CdnEndpointInvokeResponseArgs) ToCdnEndpointInvokeResponseOutput() CdnEndpointInvokeResponseOutput {
	return i.ToCdnEndpointInvokeResponseOutputWithContext(context.Background())
}

func (i CdnEndpointInvokeResponseArgs) ToCdnEndpointInvokeResponseOutputWithContext(ctx context.Context) CdnEndpointInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CdnEndpointInvokeResponseOutput)
}

// CdnEndpointInvokeResponseArrayInput is an input type that accepts CdnEndpointInvokeResponseArray and CdnEndpointInvokeResponseArrayOutput values.
// You can construct a concrete instance of `CdnEndpointInvokeResponseArrayInput` via:
//
//          CdnEndpointInvokeResponseArray{ CdnEndpointInvokeResponseArgs{...} }
type CdnEndpointInvokeResponseArrayInput interface {
	pulumi.Input

	ToCdnEndpointInvokeResponseArrayOutput() CdnEndpointInvokeResponseArrayOutput
	ToCdnEndpointInvokeResponseArrayOutputWithContext(context.Context) CdnEndpointInvokeResponseArrayOutput
}

type CdnEndpointInvokeResponseArray []CdnEndpointInvokeResponseInput

func (CdnEndpointInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CdnEndpointInvokeResponse)(nil)).Elem()
}

func (i CdnEndpointInvokeResponseArray) ToCdnEndpointInvokeResponseArrayOutput() CdnEndpointInvokeResponseArrayOutput {
	return i.ToCdnEndpointInvokeResponseArrayOutputWithContext(context.Background())
}

func (i CdnEndpointInvokeResponseArray) ToCdnEndpointInvokeResponseArrayOutputWithContext(ctx context.Context) CdnEndpointInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CdnEndpointInvokeResponseArrayOutput)
}

// Defines the ARM Resource ID for the linked endpoints
type CdnEndpointInvokeResponseOutput struct{ *pulumi.OutputState }

func (CdnEndpointInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CdnEndpointInvokeResponse)(nil)).Elem()
}

func (o CdnEndpointInvokeResponseOutput) ToCdnEndpointInvokeResponseOutput() CdnEndpointInvokeResponseOutput {
	return o
}

func (o CdnEndpointInvokeResponseOutput) ToCdnEndpointInvokeResponseOutputWithContext(ctx context.Context) CdnEndpointInvokeResponseOutput {
	return o
}

// ARM Resource ID string.
func (o CdnEndpointInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CdnEndpointInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type CdnEndpointInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (CdnEndpointInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CdnEndpointInvokeResponse)(nil)).Elem()
}

func (o CdnEndpointInvokeResponseArrayOutput) ToCdnEndpointInvokeResponseArrayOutput() CdnEndpointInvokeResponseArrayOutput {
	return o
}

func (o CdnEndpointInvokeResponseArrayOutput) ToCdnEndpointInvokeResponseArrayOutputWithContext(ctx context.Context) CdnEndpointInvokeResponseArrayOutput {
	return o
}

func (o CdnEndpointInvokeResponseArrayOutput) Index(i pulumi.IntInput) CdnEndpointInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CdnEndpointInvokeResponse {
		return vs[0].([]CdnEndpointInvokeResponse)[vs[1].(int)]
	}).(CdnEndpointInvokeResponseOutput)
}

// Defines the ARM Resource ID for the linked endpoints
type CdnEndpointResponse struct {
	// ARM Resource ID string.
	Id *string `pulumi:"id"`
}

// CdnEndpointResponseInput is an input type that accepts CdnEndpointResponseArgs and CdnEndpointResponseOutput values.
// You can construct a concrete instance of `CdnEndpointResponseInput` via:
//
//          CdnEndpointResponseArgs{...}
type CdnEndpointResponseInput interface {
	pulumi.Input

	ToCdnEndpointResponseOutput() CdnEndpointResponseOutput
	ToCdnEndpointResponseOutputWithContext(context.Context) CdnEndpointResponseOutput
}

// Defines the ARM Resource ID for the linked endpoints
type CdnEndpointResponseArgs struct {
	// ARM Resource ID string.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (CdnEndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CdnEndpointResponse)(nil)).Elem()
}

func (i CdnEndpointResponseArgs) ToCdnEndpointResponseOutput() CdnEndpointResponseOutput {
	return i.ToCdnEndpointResponseOutputWithContext(context.Background())
}

func (i CdnEndpointResponseArgs) ToCdnEndpointResponseOutputWithContext(ctx context.Context) CdnEndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CdnEndpointResponseOutput)
}

// CdnEndpointResponseArrayInput is an input type that accepts CdnEndpointResponseArray and CdnEndpointResponseArrayOutput values.
// You can construct a concrete instance of `CdnEndpointResponseArrayInput` via:
//
//          CdnEndpointResponseArray{ CdnEndpointResponseArgs{...} }
type CdnEndpointResponseArrayInput interface {
	pulumi.Input

	ToCdnEndpointResponseArrayOutput() CdnEndpointResponseArrayOutput
	ToCdnEndpointResponseArrayOutputWithContext(context.Context) CdnEndpointResponseArrayOutput
}

type CdnEndpointResponseArray []CdnEndpointResponseInput

func (CdnEndpointResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CdnEndpointResponse)(nil)).Elem()
}

func (i CdnEndpointResponseArray) ToCdnEndpointResponseArrayOutput() CdnEndpointResponseArrayOutput {
	return i.ToCdnEndpointResponseArrayOutputWithContext(context.Background())
}

func (i CdnEndpointResponseArray) ToCdnEndpointResponseArrayOutputWithContext(ctx context.Context) CdnEndpointResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CdnEndpointResponseArrayOutput)
}

// Defines the ARM Resource ID for the linked endpoints
type CdnEndpointResponseOutput struct{ *pulumi.OutputState }

func (CdnEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CdnEndpointResponse)(nil)).Elem()
}

func (o CdnEndpointResponseOutput) ToCdnEndpointResponseOutput() CdnEndpointResponseOutput {
	return o
}

func (o CdnEndpointResponseOutput) ToCdnEndpointResponseOutputWithContext(ctx context.Context) CdnEndpointResponseOutput {
	return o
}

// ARM Resource ID string.
func (o CdnEndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CdnEndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type CdnEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (CdnEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CdnEndpointResponse)(nil)).Elem()
}

func (o CdnEndpointResponseArrayOutput) ToCdnEndpointResponseArrayOutput() CdnEndpointResponseArrayOutput {
	return o
}

func (o CdnEndpointResponseArrayOutput) ToCdnEndpointResponseArrayOutputWithContext(ctx context.Context) CdnEndpointResponseArrayOutput {
	return o
}

func (o CdnEndpointResponseArrayOutput) Index(i pulumi.IntInput) CdnEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CdnEndpointResponse {
		return vs[0].([]CdnEndpointResponse)[vs[1].(int)]
	}).(CdnEndpointResponseOutput)
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Cookies to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// CookiesMatchConditionParametersInput is an input type that accepts CookiesMatchConditionParametersArgs and CookiesMatchConditionParametersOutput values.
// You can construct a concrete instance of `CookiesMatchConditionParametersInput` via:
//
//          CookiesMatchConditionParametersArgs{...}
type CookiesMatchConditionParametersInput interface {
	pulumi.Input

	ToCookiesMatchConditionParametersOutput() CookiesMatchConditionParametersOutput
	ToCookiesMatchConditionParametersOutputWithContext(context.Context) CookiesMatchConditionParametersOutput
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Name of Cookies to be matched
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (CookiesMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CookiesMatchConditionParameters)(nil)).Elem()
}

func (i CookiesMatchConditionParametersArgs) ToCookiesMatchConditionParametersOutput() CookiesMatchConditionParametersOutput {
	return i.ToCookiesMatchConditionParametersOutputWithContext(context.Background())
}

func (i CookiesMatchConditionParametersArgs) ToCookiesMatchConditionParametersOutputWithContext(ctx context.Context) CookiesMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CookiesMatchConditionParametersOutput)
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (CookiesMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CookiesMatchConditionParameters)(nil)).Elem()
}

func (o CookiesMatchConditionParametersOutput) ToCookiesMatchConditionParametersOutput() CookiesMatchConditionParametersOutput {
	return o
}

func (o CookiesMatchConditionParametersOutput) ToCookiesMatchConditionParametersOutputWithContext(ctx context.Context) CookiesMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o CookiesMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CookiesMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o CookiesMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CookiesMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o CookiesMatchConditionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v CookiesMatchConditionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o CookiesMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v CookiesMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// Name of Cookies to be matched
func (o CookiesMatchConditionParametersOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CookiesMatchConditionParameters) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o CookiesMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CookiesMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParametersInvokeResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Cookies to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// CookiesMatchConditionParametersInvokeResponseInput is an input type that accepts CookiesMatchConditionParametersInvokeResponseArgs and CookiesMatchConditionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `CookiesMatchConditionParametersInvokeResponseInput` via:
//
//          CookiesMatchConditionParametersInvokeResponseArgs{...}
type CookiesMatchConditionParametersInvokeResponseInput interface {
	pulumi.Input

	ToCookiesMatchConditionParametersInvokeResponseOutput() CookiesMatchConditionParametersInvokeResponseOutput
	ToCookiesMatchConditionParametersInvokeResponseOutputWithContext(context.Context) CookiesMatchConditionParametersInvokeResponseOutput
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParametersInvokeResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Name of Cookies to be matched
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (CookiesMatchConditionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CookiesMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (i CookiesMatchConditionParametersInvokeResponseArgs) ToCookiesMatchConditionParametersInvokeResponseOutput() CookiesMatchConditionParametersInvokeResponseOutput {
	return i.ToCookiesMatchConditionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i CookiesMatchConditionParametersInvokeResponseArgs) ToCookiesMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) CookiesMatchConditionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CookiesMatchConditionParametersInvokeResponseOutput)
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (CookiesMatchConditionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CookiesMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (o CookiesMatchConditionParametersInvokeResponseOutput) ToCookiesMatchConditionParametersInvokeResponseOutput() CookiesMatchConditionParametersInvokeResponseOutput {
	return o
}

func (o CookiesMatchConditionParametersInvokeResponseOutput) ToCookiesMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) CookiesMatchConditionParametersInvokeResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o CookiesMatchConditionParametersInvokeResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersInvokeResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o CookiesMatchConditionParametersInvokeResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersInvokeResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o CookiesMatchConditionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o CookiesMatchConditionParametersInvokeResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersInvokeResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Name of Cookies to be matched
func (o CookiesMatchConditionParametersInvokeResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersInvokeResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o CookiesMatchConditionParametersInvokeResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersInvokeResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Cookies to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// CookiesMatchConditionParametersResponseInput is an input type that accepts CookiesMatchConditionParametersResponseArgs and CookiesMatchConditionParametersResponseOutput values.
// You can construct a concrete instance of `CookiesMatchConditionParametersResponseInput` via:
//
//          CookiesMatchConditionParametersResponseArgs{...}
type CookiesMatchConditionParametersResponseInput interface {
	pulumi.Input

	ToCookiesMatchConditionParametersResponseOutput() CookiesMatchConditionParametersResponseOutput
	ToCookiesMatchConditionParametersResponseOutputWithContext(context.Context) CookiesMatchConditionParametersResponseOutput
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParametersResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Name of Cookies to be matched
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (CookiesMatchConditionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CookiesMatchConditionParametersResponse)(nil)).Elem()
}

func (i CookiesMatchConditionParametersResponseArgs) ToCookiesMatchConditionParametersResponseOutput() CookiesMatchConditionParametersResponseOutput {
	return i.ToCookiesMatchConditionParametersResponseOutputWithContext(context.Background())
}

func (i CookiesMatchConditionParametersResponseArgs) ToCookiesMatchConditionParametersResponseOutputWithContext(ctx context.Context) CookiesMatchConditionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CookiesMatchConditionParametersResponseOutput)
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (CookiesMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CookiesMatchConditionParametersResponse)(nil)).Elem()
}

func (o CookiesMatchConditionParametersResponseOutput) ToCookiesMatchConditionParametersResponseOutput() CookiesMatchConditionParametersResponseOutput {
	return o
}

func (o CookiesMatchConditionParametersResponseOutput) ToCookiesMatchConditionParametersResponseOutputWithContext(ctx context.Context) CookiesMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o CookiesMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o CookiesMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o CookiesMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o CookiesMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Name of Cookies to be matched
func (o CookiesMatchConditionParametersResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o CookiesMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRule struct {
	// Describes what action to be applied when rule matches
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchCondition `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name string `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority int `pulumi:"priority"`
}

// CustomRuleInput is an input type that accepts CustomRuleArgs and CustomRuleOutput values.
// You can construct a concrete instance of `CustomRuleInput` via:
//
//          CustomRuleArgs{...}
type CustomRuleInput interface {
	pulumi.Input

	ToCustomRuleOutput() CustomRuleOutput
	ToCustomRuleOutputWithContext(context.Context) CustomRuleOutput
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleArgs struct {
	// Describes what action to be applied when rule matches
	Action pulumi.StringInput `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions MatchConditionArrayInput `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name pulumi.StringInput `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (CustomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRule)(nil)).Elem()
}

func (i CustomRuleArgs) ToCustomRuleOutput() CustomRuleOutput {
	return i.ToCustomRuleOutputWithContext(context.Background())
}

func (i CustomRuleArgs) ToCustomRuleOutputWithContext(ctx context.Context) CustomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleOutput)
}

// CustomRuleArrayInput is an input type that accepts CustomRuleArray and CustomRuleArrayOutput values.
// You can construct a concrete instance of `CustomRuleArrayInput` via:
//
//          CustomRuleArray{ CustomRuleArgs{...} }
type CustomRuleArrayInput interface {
	pulumi.Input

	ToCustomRuleArrayOutput() CustomRuleArrayOutput
	ToCustomRuleArrayOutputWithContext(context.Context) CustomRuleArrayOutput
}

type CustomRuleArray []CustomRuleInput

func (CustomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRule)(nil)).Elem()
}

func (i CustomRuleArray) ToCustomRuleArrayOutput() CustomRuleArrayOutput {
	return i.ToCustomRuleArrayOutputWithContext(context.Background())
}

func (i CustomRuleArray) ToCustomRuleArrayOutputWithContext(ctx context.Context) CustomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleArrayOutput)
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleOutput struct{ *pulumi.OutputState }

func (CustomRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRule)(nil)).Elem()
}

func (o CustomRuleOutput) ToCustomRuleOutput() CustomRuleOutput {
	return o
}

func (o CustomRuleOutput) ToCustomRuleOutputWithContext(ctx context.Context) CustomRuleOutput {
	return o
}

// Describes what action to be applied when rule matches
func (o CustomRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRule) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o CustomRuleOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRule) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o CustomRuleOutput) MatchConditions() MatchConditionArrayOutput {
	return o.ApplyT(func(v CustomRule) []MatchCondition { return v.MatchConditions }).(MatchConditionArrayOutput)
}

// Defines the name of the custom rule
func (o CustomRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRule) string { return v.Name }).(pulumi.StringOutput)
}

// Defines in what order this rule be evaluated in the overall list of custom rules
func (o CustomRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v CustomRule) int { return v.Priority }).(pulumi.IntOutput)
}

type CustomRuleArrayOutput struct{ *pulumi.OutputState }

func (CustomRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRule)(nil)).Elem()
}

func (o CustomRuleArrayOutput) ToCustomRuleArrayOutput() CustomRuleArrayOutput {
	return o
}

func (o CustomRuleArrayOutput) ToCustomRuleArrayOutputWithContext(ctx context.Context) CustomRuleArrayOutput {
	return o
}

func (o CustomRuleArrayOutput) Index(i pulumi.IntInput) CustomRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomRule {
		return vs[0].([]CustomRule)[vs[1].(int)]
	}).(CustomRuleOutput)
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleInvokeResponse struct {
	// Describes what action to be applied when rule matches
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchConditionInvokeResponse `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name string `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority int `pulumi:"priority"`
}

// CustomRuleInvokeResponseInput is an input type that accepts CustomRuleInvokeResponseArgs and CustomRuleInvokeResponseOutput values.
// You can construct a concrete instance of `CustomRuleInvokeResponseInput` via:
//
//          CustomRuleInvokeResponseArgs{...}
type CustomRuleInvokeResponseInput interface {
	pulumi.Input

	ToCustomRuleInvokeResponseOutput() CustomRuleInvokeResponseOutput
	ToCustomRuleInvokeResponseOutputWithContext(context.Context) CustomRuleInvokeResponseOutput
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleInvokeResponseArgs struct {
	// Describes what action to be applied when rule matches
	Action pulumi.StringInput `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions MatchConditionInvokeResponseArrayInput `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name pulumi.StringInput `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (CustomRuleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleInvokeResponse)(nil)).Elem()
}

func (i CustomRuleInvokeResponseArgs) ToCustomRuleInvokeResponseOutput() CustomRuleInvokeResponseOutput {
	return i.ToCustomRuleInvokeResponseOutputWithContext(context.Background())
}

func (i CustomRuleInvokeResponseArgs) ToCustomRuleInvokeResponseOutputWithContext(ctx context.Context) CustomRuleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleInvokeResponseOutput)
}

// CustomRuleInvokeResponseArrayInput is an input type that accepts CustomRuleInvokeResponseArray and CustomRuleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `CustomRuleInvokeResponseArrayInput` via:
//
//          CustomRuleInvokeResponseArray{ CustomRuleInvokeResponseArgs{...} }
type CustomRuleInvokeResponseArrayInput interface {
	pulumi.Input

	ToCustomRuleInvokeResponseArrayOutput() CustomRuleInvokeResponseArrayOutput
	ToCustomRuleInvokeResponseArrayOutputWithContext(context.Context) CustomRuleInvokeResponseArrayOutput
}

type CustomRuleInvokeResponseArray []CustomRuleInvokeResponseInput

func (CustomRuleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRuleInvokeResponse)(nil)).Elem()
}

func (i CustomRuleInvokeResponseArray) ToCustomRuleInvokeResponseArrayOutput() CustomRuleInvokeResponseArrayOutput {
	return i.ToCustomRuleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i CustomRuleInvokeResponseArray) ToCustomRuleInvokeResponseArrayOutputWithContext(ctx context.Context) CustomRuleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleInvokeResponseArrayOutput)
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleInvokeResponseOutput struct{ *pulumi.OutputState }

func (CustomRuleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleInvokeResponse)(nil)).Elem()
}

func (o CustomRuleInvokeResponseOutput) ToCustomRuleInvokeResponseOutput() CustomRuleInvokeResponseOutput {
	return o
}

func (o CustomRuleInvokeResponseOutput) ToCustomRuleInvokeResponseOutputWithContext(ctx context.Context) CustomRuleInvokeResponseOutput {
	return o
}

// Describes what action to be applied when rule matches
func (o CustomRuleInvokeResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRuleInvokeResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o CustomRuleInvokeResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRuleInvokeResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o CustomRuleInvokeResponseOutput) MatchConditions() MatchConditionInvokeResponseArrayOutput {
	return o.ApplyT(func(v CustomRuleInvokeResponse) []MatchConditionInvokeResponse { return v.MatchConditions }).(MatchConditionInvokeResponseArrayOutput)
}

// Defines the name of the custom rule
func (o CustomRuleInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRuleInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines in what order this rule be evaluated in the overall list of custom rules
func (o CustomRuleInvokeResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v CustomRuleInvokeResponse) int { return v.Priority }).(pulumi.IntOutput)
}

type CustomRuleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (CustomRuleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRuleInvokeResponse)(nil)).Elem()
}

func (o CustomRuleInvokeResponseArrayOutput) ToCustomRuleInvokeResponseArrayOutput() CustomRuleInvokeResponseArrayOutput {
	return o
}

func (o CustomRuleInvokeResponseArrayOutput) ToCustomRuleInvokeResponseArrayOutputWithContext(ctx context.Context) CustomRuleInvokeResponseArrayOutput {
	return o
}

func (o CustomRuleInvokeResponseArrayOutput) Index(i pulumi.IntInput) CustomRuleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomRuleInvokeResponse {
		return vs[0].([]CustomRuleInvokeResponse)[vs[1].(int)]
	}).(CustomRuleInvokeResponseOutput)
}

// Defines contents of custom rules
type CustomRuleList struct {
	// List of rules
	Rules []CustomRule `pulumi:"rules"`
}

// CustomRuleListInput is an input type that accepts CustomRuleListArgs and CustomRuleListOutput values.
// You can construct a concrete instance of `CustomRuleListInput` via:
//
//          CustomRuleListArgs{...}
type CustomRuleListInput interface {
	pulumi.Input

	ToCustomRuleListOutput() CustomRuleListOutput
	ToCustomRuleListOutputWithContext(context.Context) CustomRuleListOutput
}

// Defines contents of custom rules
type CustomRuleListArgs struct {
	// List of rules
	Rules CustomRuleArrayInput `pulumi:"rules"`
}

func (CustomRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleList)(nil)).Elem()
}

func (i CustomRuleListArgs) ToCustomRuleListOutput() CustomRuleListOutput {
	return i.ToCustomRuleListOutputWithContext(context.Background())
}

func (i CustomRuleListArgs) ToCustomRuleListOutputWithContext(ctx context.Context) CustomRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListOutput)
}

func (i CustomRuleListArgs) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return i.ToCustomRuleListPtrOutputWithContext(context.Background())
}

func (i CustomRuleListArgs) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListOutput).ToCustomRuleListPtrOutputWithContext(ctx)
}

// CustomRuleListPtrInput is an input type that accepts CustomRuleListArgs, CustomRuleListPtr and CustomRuleListPtrOutput values.
// You can construct a concrete instance of `CustomRuleListPtrInput` via:
//
//          CustomRuleListArgs{...}
//
//  or:
//
//          nil
type CustomRuleListPtrInput interface {
	pulumi.Input

	ToCustomRuleListPtrOutput() CustomRuleListPtrOutput
	ToCustomRuleListPtrOutputWithContext(context.Context) CustomRuleListPtrOutput
}

type customRuleListPtrType CustomRuleListArgs

func CustomRuleListPtr(v *CustomRuleListArgs) CustomRuleListPtrInput {
	return (*customRuleListPtrType)(v)
}

func (*customRuleListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleList)(nil)).Elem()
}

func (i *customRuleListPtrType) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return i.ToCustomRuleListPtrOutputWithContext(context.Background())
}

func (i *customRuleListPtrType) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListPtrOutput)
}

// Defines contents of custom rules
type CustomRuleListOutput struct{ *pulumi.OutputState }

func (CustomRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleList)(nil)).Elem()
}

func (o CustomRuleListOutput) ToCustomRuleListOutput() CustomRuleListOutput {
	return o
}

func (o CustomRuleListOutput) ToCustomRuleListOutputWithContext(ctx context.Context) CustomRuleListOutput {
	return o
}

func (o CustomRuleListOutput) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return o.ToCustomRuleListPtrOutputWithContext(context.Background())
}

func (o CustomRuleListOutput) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return o.ApplyT(func(v CustomRuleList) *CustomRuleList {
		return &v
	}).(CustomRuleListPtrOutput)
}

// List of rules
func (o CustomRuleListOutput) Rules() CustomRuleArrayOutput {
	return o.ApplyT(func(v CustomRuleList) []CustomRule { return v.Rules }).(CustomRuleArrayOutput)
}

type CustomRuleListPtrOutput struct{ *pulumi.OutputState }

func (CustomRuleListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleList)(nil)).Elem()
}

func (o CustomRuleListPtrOutput) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return o
}

func (o CustomRuleListPtrOutput) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return o
}

func (o CustomRuleListPtrOutput) Elem() CustomRuleListOutput {
	return o.ApplyT(func(v *CustomRuleList) CustomRuleList { return *v }).(CustomRuleListOutput)
}

// List of rules
func (o CustomRuleListPtrOutput) Rules() CustomRuleArrayOutput {
	return o.ApplyT(func(v *CustomRuleList) []CustomRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(CustomRuleArrayOutput)
}

// Defines contents of custom rules
type CustomRuleListInvokeResponse struct {
	// List of rules
	Rules []CustomRuleInvokeResponse `pulumi:"rules"`
}

// CustomRuleListInvokeResponseInput is an input type that accepts CustomRuleListInvokeResponseArgs and CustomRuleListInvokeResponseOutput values.
// You can construct a concrete instance of `CustomRuleListInvokeResponseInput` via:
//
//          CustomRuleListInvokeResponseArgs{...}
type CustomRuleListInvokeResponseInput interface {
	pulumi.Input

	ToCustomRuleListInvokeResponseOutput() CustomRuleListInvokeResponseOutput
	ToCustomRuleListInvokeResponseOutputWithContext(context.Context) CustomRuleListInvokeResponseOutput
}

// Defines contents of custom rules
type CustomRuleListInvokeResponseArgs struct {
	// List of rules
	Rules CustomRuleInvokeResponseArrayInput `pulumi:"rules"`
}

func (CustomRuleListInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleListInvokeResponse)(nil)).Elem()
}

func (i CustomRuleListInvokeResponseArgs) ToCustomRuleListInvokeResponseOutput() CustomRuleListInvokeResponseOutput {
	return i.ToCustomRuleListInvokeResponseOutputWithContext(context.Background())
}

func (i CustomRuleListInvokeResponseArgs) ToCustomRuleListInvokeResponseOutputWithContext(ctx context.Context) CustomRuleListInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListInvokeResponseOutput)
}

// Defines contents of custom rules
type CustomRuleListInvokeResponseOutput struct{ *pulumi.OutputState }

func (CustomRuleListInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleListInvokeResponse)(nil)).Elem()
}

func (o CustomRuleListInvokeResponseOutput) ToCustomRuleListInvokeResponseOutput() CustomRuleListInvokeResponseOutput {
	return o
}

func (o CustomRuleListInvokeResponseOutput) ToCustomRuleListInvokeResponseOutputWithContext(ctx context.Context) CustomRuleListInvokeResponseOutput {
	return o
}

// List of rules
func (o CustomRuleListInvokeResponseOutput) Rules() CustomRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v CustomRuleListInvokeResponse) []CustomRuleInvokeResponse { return v.Rules }).(CustomRuleInvokeResponseArrayOutput)
}

// Defines contents of custom rules
type CustomRuleListResponse struct {
	// List of rules
	Rules []CustomRuleResponse `pulumi:"rules"`
}

// CustomRuleListResponseInput is an input type that accepts CustomRuleListResponseArgs and CustomRuleListResponseOutput values.
// You can construct a concrete instance of `CustomRuleListResponseInput` via:
//
//          CustomRuleListResponseArgs{...}
type CustomRuleListResponseInput interface {
	pulumi.Input

	ToCustomRuleListResponseOutput() CustomRuleListResponseOutput
	ToCustomRuleListResponseOutputWithContext(context.Context) CustomRuleListResponseOutput
}

// Defines contents of custom rules
type CustomRuleListResponseArgs struct {
	// List of rules
	Rules CustomRuleResponseArrayInput `pulumi:"rules"`
}

func (CustomRuleListResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleListResponse)(nil)).Elem()
}

func (i CustomRuleListResponseArgs) ToCustomRuleListResponseOutput() CustomRuleListResponseOutput {
	return i.ToCustomRuleListResponseOutputWithContext(context.Background())
}

func (i CustomRuleListResponseArgs) ToCustomRuleListResponseOutputWithContext(ctx context.Context) CustomRuleListResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListResponseOutput)
}

func (i CustomRuleListResponseArgs) ToCustomRuleListResponsePtrOutput() CustomRuleListResponsePtrOutput {
	return i.ToCustomRuleListResponsePtrOutputWithContext(context.Background())
}

func (i CustomRuleListResponseArgs) ToCustomRuleListResponsePtrOutputWithContext(ctx context.Context) CustomRuleListResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListResponseOutput).ToCustomRuleListResponsePtrOutputWithContext(ctx)
}

// CustomRuleListResponsePtrInput is an input type that accepts CustomRuleListResponseArgs, CustomRuleListResponsePtr and CustomRuleListResponsePtrOutput values.
// You can construct a concrete instance of `CustomRuleListResponsePtrInput` via:
//
//          CustomRuleListResponseArgs{...}
//
//  or:
//
//          nil
type CustomRuleListResponsePtrInput interface {
	pulumi.Input

	ToCustomRuleListResponsePtrOutput() CustomRuleListResponsePtrOutput
	ToCustomRuleListResponsePtrOutputWithContext(context.Context) CustomRuleListResponsePtrOutput
}

type customRuleListResponsePtrType CustomRuleListResponseArgs

func CustomRuleListResponsePtr(v *CustomRuleListResponseArgs) CustomRuleListResponsePtrInput {
	return (*customRuleListResponsePtrType)(v)
}

func (*customRuleListResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleListResponse)(nil)).Elem()
}

func (i *customRuleListResponsePtrType) ToCustomRuleListResponsePtrOutput() CustomRuleListResponsePtrOutput {
	return i.ToCustomRuleListResponsePtrOutputWithContext(context.Background())
}

func (i *customRuleListResponsePtrType) ToCustomRuleListResponsePtrOutputWithContext(ctx context.Context) CustomRuleListResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListResponsePtrOutput)
}

// Defines contents of custom rules
type CustomRuleListResponseOutput struct{ *pulumi.OutputState }

func (CustomRuleListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleListResponse)(nil)).Elem()
}

func (o CustomRuleListResponseOutput) ToCustomRuleListResponseOutput() CustomRuleListResponseOutput {
	return o
}

func (o CustomRuleListResponseOutput) ToCustomRuleListResponseOutputWithContext(ctx context.Context) CustomRuleListResponseOutput {
	return o
}

func (o CustomRuleListResponseOutput) ToCustomRuleListResponsePtrOutput() CustomRuleListResponsePtrOutput {
	return o.ToCustomRuleListResponsePtrOutputWithContext(context.Background())
}

func (o CustomRuleListResponseOutput) ToCustomRuleListResponsePtrOutputWithContext(ctx context.Context) CustomRuleListResponsePtrOutput {
	return o.ApplyT(func(v CustomRuleListResponse) *CustomRuleListResponse {
		return &v
	}).(CustomRuleListResponsePtrOutput)
}

// List of rules
func (o CustomRuleListResponseOutput) Rules() CustomRuleResponseArrayOutput {
	return o.ApplyT(func(v CustomRuleListResponse) []CustomRuleResponse { return v.Rules }).(CustomRuleResponseArrayOutput)
}

type CustomRuleListResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomRuleListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleListResponse)(nil)).Elem()
}

func (o CustomRuleListResponsePtrOutput) ToCustomRuleListResponsePtrOutput() CustomRuleListResponsePtrOutput {
	return o
}

func (o CustomRuleListResponsePtrOutput) ToCustomRuleListResponsePtrOutputWithContext(ctx context.Context) CustomRuleListResponsePtrOutput {
	return o
}

func (o CustomRuleListResponsePtrOutput) Elem() CustomRuleListResponseOutput {
	return o.ApplyT(func(v *CustomRuleListResponse) CustomRuleListResponse { return *v }).(CustomRuleListResponseOutput)
}

// List of rules
func (o CustomRuleListResponsePtrOutput) Rules() CustomRuleResponseArrayOutput {
	return o.ApplyT(func(v *CustomRuleListResponse) []CustomRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(CustomRuleResponseArrayOutput)
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleResponse struct {
	// Describes what action to be applied when rule matches
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchConditionResponse `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name string `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority int `pulumi:"priority"`
}

// CustomRuleResponseInput is an input type that accepts CustomRuleResponseArgs and CustomRuleResponseOutput values.
// You can construct a concrete instance of `CustomRuleResponseInput` via:
//
//          CustomRuleResponseArgs{...}
type CustomRuleResponseInput interface {
	pulumi.Input

	ToCustomRuleResponseOutput() CustomRuleResponseOutput
	ToCustomRuleResponseOutputWithContext(context.Context) CustomRuleResponseOutput
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleResponseArgs struct {
	// Describes what action to be applied when rule matches
	Action pulumi.StringInput `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions MatchConditionResponseArrayInput `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name pulumi.StringInput `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (CustomRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleResponse)(nil)).Elem()
}

func (i CustomRuleResponseArgs) ToCustomRuleResponseOutput() CustomRuleResponseOutput {
	return i.ToCustomRuleResponseOutputWithContext(context.Background())
}

func (i CustomRuleResponseArgs) ToCustomRuleResponseOutputWithContext(ctx context.Context) CustomRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleResponseOutput)
}

// CustomRuleResponseArrayInput is an input type that accepts CustomRuleResponseArray and CustomRuleResponseArrayOutput values.
// You can construct a concrete instance of `CustomRuleResponseArrayInput` via:
//
//          CustomRuleResponseArray{ CustomRuleResponseArgs{...} }
type CustomRuleResponseArrayInput interface {
	pulumi.Input

	ToCustomRuleResponseArrayOutput() CustomRuleResponseArrayOutput
	ToCustomRuleResponseArrayOutputWithContext(context.Context) CustomRuleResponseArrayOutput
}

type CustomRuleResponseArray []CustomRuleResponseInput

func (CustomRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRuleResponse)(nil)).Elem()
}

func (i CustomRuleResponseArray) ToCustomRuleResponseArrayOutput() CustomRuleResponseArrayOutput {
	return i.ToCustomRuleResponseArrayOutputWithContext(context.Background())
}

func (i CustomRuleResponseArray) ToCustomRuleResponseArrayOutputWithContext(ctx context.Context) CustomRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleResponseArrayOutput)
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleResponseOutput struct{ *pulumi.OutputState }

func (CustomRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleResponse)(nil)).Elem()
}

func (o CustomRuleResponseOutput) ToCustomRuleResponseOutput() CustomRuleResponseOutput {
	return o
}

func (o CustomRuleResponseOutput) ToCustomRuleResponseOutputWithContext(ctx context.Context) CustomRuleResponseOutput {
	return o
}

// Describes what action to be applied when rule matches
func (o CustomRuleResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRuleResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o CustomRuleResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRuleResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o CustomRuleResponseOutput) MatchConditions() MatchConditionResponseArrayOutput {
	return o.ApplyT(func(v CustomRuleResponse) []MatchConditionResponse { return v.MatchConditions }).(MatchConditionResponseArrayOutput)
}

// Defines the name of the custom rule
func (o CustomRuleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRuleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines in what order this rule be evaluated in the overall list of custom rules
func (o CustomRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v CustomRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

type CustomRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (CustomRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRuleResponse)(nil)).Elem()
}

func (o CustomRuleResponseArrayOutput) ToCustomRuleResponseArrayOutput() CustomRuleResponseArrayOutput {
	return o
}

func (o CustomRuleResponseArrayOutput) ToCustomRuleResponseArrayOutputWithContext(ctx context.Context) CustomRuleResponseArrayOutput {
	return o
}

func (o CustomRuleResponseArrayOutput) Index(i pulumi.IntInput) CustomRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomRuleResponse {
		return vs[0].([]CustomRuleResponse)[vs[1].(int)]
	}).(CustomRuleResponseOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOrigin struct {
	// Origin is enabled for load balancing or not. By default, origin is always enabled.
	Enabled *bool `pulumi:"enabled"`
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
	HostName string `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535.
	HttpPort *int `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535.
	HttpsPort *int `pulumi:"httpsPort"`
	// Origin name which must be unique within the endpoint.
	Name string `pulumi:"name"`
	// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
	OriginHostHeader *string `pulumi:"originHostHeader"`
	// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
	Priority *int `pulumi:"priority"`
	// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
	Weight *int `pulumi:"weight"`
}

// DeepCreatedOriginInput is an input type that accepts DeepCreatedOriginArgs and DeepCreatedOriginOutput values.
// You can construct a concrete instance of `DeepCreatedOriginInput` via:
//
//          DeepCreatedOriginArgs{...}
type DeepCreatedOriginInput interface {
	pulumi.Input

	ToDeepCreatedOriginOutput() DeepCreatedOriginOutput
	ToDeepCreatedOriginOutputWithContext(context.Context) DeepCreatedOriginOutput
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginArgs struct {
	// Origin is enabled for load balancing or not. By default, origin is always enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535.
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535.
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// Origin name which must be unique within the endpoint.
	Name pulumi.StringInput `pulumi:"name"`
	// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
	OriginHostHeader pulumi.StringPtrInput `pulumi:"originHostHeader"`
	// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (DeepCreatedOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOrigin)(nil)).Elem()
}

func (i DeepCreatedOriginArgs) ToDeepCreatedOriginOutput() DeepCreatedOriginOutput {
	return i.ToDeepCreatedOriginOutputWithContext(context.Background())
}

func (i DeepCreatedOriginArgs) ToDeepCreatedOriginOutputWithContext(ctx context.Context) DeepCreatedOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginOutput)
}

// DeepCreatedOriginArrayInput is an input type that accepts DeepCreatedOriginArray and DeepCreatedOriginArrayOutput values.
// You can construct a concrete instance of `DeepCreatedOriginArrayInput` via:
//
//          DeepCreatedOriginArray{ DeepCreatedOriginArgs{...} }
type DeepCreatedOriginArrayInput interface {
	pulumi.Input

	ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput
	ToDeepCreatedOriginArrayOutputWithContext(context.Context) DeepCreatedOriginArrayOutput
}

type DeepCreatedOriginArray []DeepCreatedOriginInput

func (DeepCreatedOriginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOrigin)(nil)).Elem()
}

func (i DeepCreatedOriginArray) ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput {
	return i.ToDeepCreatedOriginArrayOutputWithContext(context.Background())
}

func (i DeepCreatedOriginArray) ToDeepCreatedOriginArrayOutputWithContext(ctx context.Context) DeepCreatedOriginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginArrayOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOrigin)(nil)).Elem()
}

func (o DeepCreatedOriginOutput) ToDeepCreatedOriginOutput() DeepCreatedOriginOutput {
	return o
}

func (o DeepCreatedOriginOutput) ToDeepCreatedOriginOutputWithContext(ctx context.Context) DeepCreatedOriginOutput {
	return o
}

// Origin is enabled for load balancing or not. By default, origin is always enabled.
func (o DeepCreatedOriginOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
func (o DeepCreatedOriginOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) string { return v.HostName }).(pulumi.StringOutput)
}

// The value of the HTTP port. Must be between 1 and 65535.
func (o DeepCreatedOriginOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The value of the HTTPS port. Must be between 1 and 65535.
func (o DeepCreatedOriginOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Origin name which must be unique within the endpoint.
func (o DeepCreatedOriginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) string { return v.Name }).(pulumi.StringOutput)
}

// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
func (o DeepCreatedOriginOutput) OriginHostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *string { return v.OriginHostHeader }).(pulumi.StringPtrOutput)
}

// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
func (o DeepCreatedOriginOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
func (o DeepCreatedOriginOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type DeepCreatedOriginArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOrigin)(nil)).Elem()
}

func (o DeepCreatedOriginArrayOutput) ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput {
	return o
}

func (o DeepCreatedOriginArrayOutput) ToDeepCreatedOriginArrayOutputWithContext(ctx context.Context) DeepCreatedOriginArrayOutput {
	return o
}

func (o DeepCreatedOriginArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOrigin {
		return vs[0].([]DeepCreatedOrigin)[vs[1].(int)]
	}).(DeepCreatedOriginOutput)
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroup struct {
	// Health probe settings to the origin that is used to determine the health of the origin.
	HealthProbeSettings *HealthProbeParameters `pulumi:"healthProbeSettings"`
	// Origin group name which must be unique within the endpoint.
	Name string `pulumi:"name"`
	// The source of the content being delivered via CDN within given origin group.
	Origins []ResourceReference `pulumi:"origins"`
	// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
	ResponseBasedOriginErrorDetectionSettings *ResponseBasedOriginErrorDetectionParameters `pulumi:"responseBasedOriginErrorDetectionSettings"`
	// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
	TrafficRestorationTimeToHealedOrNewEndpointsInMinutes *int `pulumi:"trafficRestorationTimeToHealedOrNewEndpointsInMinutes"`
}

// DeepCreatedOriginGroupInput is an input type that accepts DeepCreatedOriginGroupArgs and DeepCreatedOriginGroupOutput values.
// You can construct a concrete instance of `DeepCreatedOriginGroupInput` via:
//
//          DeepCreatedOriginGroupArgs{...}
type DeepCreatedOriginGroupInput interface {
	pulumi.Input

	ToDeepCreatedOriginGroupOutput() DeepCreatedOriginGroupOutput
	ToDeepCreatedOriginGroupOutputWithContext(context.Context) DeepCreatedOriginGroupOutput
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupArgs struct {
	// Health probe settings to the origin that is used to determine the health of the origin.
	HealthProbeSettings HealthProbeParametersPtrInput `pulumi:"healthProbeSettings"`
	// Origin group name which must be unique within the endpoint.
	Name pulumi.StringInput `pulumi:"name"`
	// The source of the content being delivered via CDN within given origin group.
	Origins ResourceReferenceArrayInput `pulumi:"origins"`
	// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
	ResponseBasedOriginErrorDetectionSettings ResponseBasedOriginErrorDetectionParametersPtrInput `pulumi:"responseBasedOriginErrorDetectionSettings"`
	// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
	TrafficRestorationTimeToHealedOrNewEndpointsInMinutes pulumi.IntPtrInput `pulumi:"trafficRestorationTimeToHealedOrNewEndpointsInMinutes"`
}

func (DeepCreatedOriginGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginGroup)(nil)).Elem()
}

func (i DeepCreatedOriginGroupArgs) ToDeepCreatedOriginGroupOutput() DeepCreatedOriginGroupOutput {
	return i.ToDeepCreatedOriginGroupOutputWithContext(context.Background())
}

func (i DeepCreatedOriginGroupArgs) ToDeepCreatedOriginGroupOutputWithContext(ctx context.Context) DeepCreatedOriginGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginGroupOutput)
}

// DeepCreatedOriginGroupArrayInput is an input type that accepts DeepCreatedOriginGroupArray and DeepCreatedOriginGroupArrayOutput values.
// You can construct a concrete instance of `DeepCreatedOriginGroupArrayInput` via:
//
//          DeepCreatedOriginGroupArray{ DeepCreatedOriginGroupArgs{...} }
type DeepCreatedOriginGroupArrayInput interface {
	pulumi.Input

	ToDeepCreatedOriginGroupArrayOutput() DeepCreatedOriginGroupArrayOutput
	ToDeepCreatedOriginGroupArrayOutputWithContext(context.Context) DeepCreatedOriginGroupArrayOutput
}

type DeepCreatedOriginGroupArray []DeepCreatedOriginGroupInput

func (DeepCreatedOriginGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginGroup)(nil)).Elem()
}

func (i DeepCreatedOriginGroupArray) ToDeepCreatedOriginGroupArrayOutput() DeepCreatedOriginGroupArrayOutput {
	return i.ToDeepCreatedOriginGroupArrayOutputWithContext(context.Background())
}

func (i DeepCreatedOriginGroupArray) ToDeepCreatedOriginGroupArrayOutputWithContext(ctx context.Context) DeepCreatedOriginGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginGroupArrayOutput)
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginGroup)(nil)).Elem()
}

func (o DeepCreatedOriginGroupOutput) ToDeepCreatedOriginGroupOutput() DeepCreatedOriginGroupOutput {
	return o
}

func (o DeepCreatedOriginGroupOutput) ToDeepCreatedOriginGroupOutputWithContext(ctx context.Context) DeepCreatedOriginGroupOutput {
	return o
}

// Health probe settings to the origin that is used to determine the health of the origin.
func (o DeepCreatedOriginGroupOutput) HealthProbeSettings() HealthProbeParametersPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroup) *HealthProbeParameters { return v.HealthProbeSettings }).(HealthProbeParametersPtrOutput)
}

// Origin group name which must be unique within the endpoint.
func (o DeepCreatedOriginGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The source of the content being delivered via CDN within given origin group.
func (o DeepCreatedOriginGroupOutput) Origins() ResourceReferenceArrayOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroup) []ResourceReference { return v.Origins }).(ResourceReferenceArrayOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
func (o DeepCreatedOriginGroupOutput) ResponseBasedOriginErrorDetectionSettings() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroup) *ResponseBasedOriginErrorDetectionParameters {
		return v.ResponseBasedOriginErrorDetectionSettings
	}).(ResponseBasedOriginErrorDetectionParametersPtrOutput)
}

// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
func (o DeepCreatedOriginGroupOutput) TrafficRestorationTimeToHealedOrNewEndpointsInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroup) *int { return v.TrafficRestorationTimeToHealedOrNewEndpointsInMinutes }).(pulumi.IntPtrOutput)
}

type DeepCreatedOriginGroupArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginGroup)(nil)).Elem()
}

func (o DeepCreatedOriginGroupArrayOutput) ToDeepCreatedOriginGroupArrayOutput() DeepCreatedOriginGroupArrayOutput {
	return o
}

func (o DeepCreatedOriginGroupArrayOutput) ToDeepCreatedOriginGroupArrayOutputWithContext(ctx context.Context) DeepCreatedOriginGroupArrayOutput {
	return o
}

func (o DeepCreatedOriginGroupArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOriginGroup {
		return vs[0].([]DeepCreatedOriginGroup)[vs[1].(int)]
	}).(DeepCreatedOriginGroupOutput)
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupInvokeResponse struct {
	// Health probe settings to the origin that is used to determine the health of the origin.
	HealthProbeSettings *HealthProbeParametersInvokeResponse `pulumi:"healthProbeSettings"`
	// Origin group name which must be unique within the endpoint.
	Name string `pulumi:"name"`
	// The source of the content being delivered via CDN within given origin group.
	Origins []ResourceReferenceInvokeResponse `pulumi:"origins"`
	// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
	ResponseBasedOriginErrorDetectionSettings *ResponseBasedOriginErrorDetectionParametersInvokeResponse `pulumi:"responseBasedOriginErrorDetectionSettings"`
	// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
	TrafficRestorationTimeToHealedOrNewEndpointsInMinutes *int `pulumi:"trafficRestorationTimeToHealedOrNewEndpointsInMinutes"`
}

// DeepCreatedOriginGroupInvokeResponseInput is an input type that accepts DeepCreatedOriginGroupInvokeResponseArgs and DeepCreatedOriginGroupInvokeResponseOutput values.
// You can construct a concrete instance of `DeepCreatedOriginGroupInvokeResponseInput` via:
//
//          DeepCreatedOriginGroupInvokeResponseArgs{...}
type DeepCreatedOriginGroupInvokeResponseInput interface {
	pulumi.Input

	ToDeepCreatedOriginGroupInvokeResponseOutput() DeepCreatedOriginGroupInvokeResponseOutput
	ToDeepCreatedOriginGroupInvokeResponseOutputWithContext(context.Context) DeepCreatedOriginGroupInvokeResponseOutput
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupInvokeResponseArgs struct {
	// Health probe settings to the origin that is used to determine the health of the origin.
	HealthProbeSettings HealthProbeParametersInvokeResponsePtrInput `pulumi:"healthProbeSettings"`
	// Origin group name which must be unique within the endpoint.
	Name pulumi.StringInput `pulumi:"name"`
	// The source of the content being delivered via CDN within given origin group.
	Origins ResourceReferenceInvokeResponseArrayInput `pulumi:"origins"`
	// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
	ResponseBasedOriginErrorDetectionSettings ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrInput `pulumi:"responseBasedOriginErrorDetectionSettings"`
	// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
	TrafficRestorationTimeToHealedOrNewEndpointsInMinutes pulumi.IntPtrInput `pulumi:"trafficRestorationTimeToHealedOrNewEndpointsInMinutes"`
}

func (DeepCreatedOriginGroupInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginGroupInvokeResponse)(nil)).Elem()
}

func (i DeepCreatedOriginGroupInvokeResponseArgs) ToDeepCreatedOriginGroupInvokeResponseOutput() DeepCreatedOriginGroupInvokeResponseOutput {
	return i.ToDeepCreatedOriginGroupInvokeResponseOutputWithContext(context.Background())
}

func (i DeepCreatedOriginGroupInvokeResponseArgs) ToDeepCreatedOriginGroupInvokeResponseOutputWithContext(ctx context.Context) DeepCreatedOriginGroupInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginGroupInvokeResponseOutput)
}

// DeepCreatedOriginGroupInvokeResponseArrayInput is an input type that accepts DeepCreatedOriginGroupInvokeResponseArray and DeepCreatedOriginGroupInvokeResponseArrayOutput values.
// You can construct a concrete instance of `DeepCreatedOriginGroupInvokeResponseArrayInput` via:
//
//          DeepCreatedOriginGroupInvokeResponseArray{ DeepCreatedOriginGroupInvokeResponseArgs{...} }
type DeepCreatedOriginGroupInvokeResponseArrayInput interface {
	pulumi.Input

	ToDeepCreatedOriginGroupInvokeResponseArrayOutput() DeepCreatedOriginGroupInvokeResponseArrayOutput
	ToDeepCreatedOriginGroupInvokeResponseArrayOutputWithContext(context.Context) DeepCreatedOriginGroupInvokeResponseArrayOutput
}

type DeepCreatedOriginGroupInvokeResponseArray []DeepCreatedOriginGroupInvokeResponseInput

func (DeepCreatedOriginGroupInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginGroupInvokeResponse)(nil)).Elem()
}

func (i DeepCreatedOriginGroupInvokeResponseArray) ToDeepCreatedOriginGroupInvokeResponseArrayOutput() DeepCreatedOriginGroupInvokeResponseArrayOutput {
	return i.ToDeepCreatedOriginGroupInvokeResponseArrayOutputWithContext(context.Background())
}

func (i DeepCreatedOriginGroupInvokeResponseArray) ToDeepCreatedOriginGroupInvokeResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginGroupInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginGroupInvokeResponseArrayOutput)
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginGroupInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginGroupInvokeResponse)(nil)).Elem()
}

func (o DeepCreatedOriginGroupInvokeResponseOutput) ToDeepCreatedOriginGroupInvokeResponseOutput() DeepCreatedOriginGroupInvokeResponseOutput {
	return o
}

func (o DeepCreatedOriginGroupInvokeResponseOutput) ToDeepCreatedOriginGroupInvokeResponseOutputWithContext(ctx context.Context) DeepCreatedOriginGroupInvokeResponseOutput {
	return o
}

// Health probe settings to the origin that is used to determine the health of the origin.
func (o DeepCreatedOriginGroupInvokeResponseOutput) HealthProbeSettings() HealthProbeParametersInvokeResponsePtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupInvokeResponse) *HealthProbeParametersInvokeResponse {
		return v.HealthProbeSettings
	}).(HealthProbeParametersInvokeResponsePtrOutput)
}

// Origin group name which must be unique within the endpoint.
func (o DeepCreatedOriginGroupInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The source of the content being delivered via CDN within given origin group.
func (o DeepCreatedOriginGroupInvokeResponseOutput) Origins() ResourceReferenceInvokeResponseArrayOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupInvokeResponse) []ResourceReferenceInvokeResponse { return v.Origins }).(ResourceReferenceInvokeResponseArrayOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
func (o DeepCreatedOriginGroupInvokeResponseOutput) ResponseBasedOriginErrorDetectionSettings() ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupInvokeResponse) *ResponseBasedOriginErrorDetectionParametersInvokeResponse {
		return v.ResponseBasedOriginErrorDetectionSettings
	}).(ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput)
}

// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
func (o DeepCreatedOriginGroupInvokeResponseOutput) TrafficRestorationTimeToHealedOrNewEndpointsInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupInvokeResponse) *int {
		return v.TrafficRestorationTimeToHealedOrNewEndpointsInMinutes
	}).(pulumi.IntPtrOutput)
}

type DeepCreatedOriginGroupInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginGroupInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginGroupInvokeResponse)(nil)).Elem()
}

func (o DeepCreatedOriginGroupInvokeResponseArrayOutput) ToDeepCreatedOriginGroupInvokeResponseArrayOutput() DeepCreatedOriginGroupInvokeResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginGroupInvokeResponseArrayOutput) ToDeepCreatedOriginGroupInvokeResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginGroupInvokeResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginGroupInvokeResponseArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginGroupInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOriginGroupInvokeResponse {
		return vs[0].([]DeepCreatedOriginGroupInvokeResponse)[vs[1].(int)]
	}).(DeepCreatedOriginGroupInvokeResponseOutput)
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupResponse struct {
	// Health probe settings to the origin that is used to determine the health of the origin.
	HealthProbeSettings *HealthProbeParametersResponse `pulumi:"healthProbeSettings"`
	// Origin group name which must be unique within the endpoint.
	Name string `pulumi:"name"`
	// The source of the content being delivered via CDN within given origin group.
	Origins []ResourceReferenceResponse `pulumi:"origins"`
	// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
	ResponseBasedOriginErrorDetectionSettings *ResponseBasedOriginErrorDetectionParametersResponse `pulumi:"responseBasedOriginErrorDetectionSettings"`
	// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
	TrafficRestorationTimeToHealedOrNewEndpointsInMinutes *int `pulumi:"trafficRestorationTimeToHealedOrNewEndpointsInMinutes"`
}

// DeepCreatedOriginGroupResponseInput is an input type that accepts DeepCreatedOriginGroupResponseArgs and DeepCreatedOriginGroupResponseOutput values.
// You can construct a concrete instance of `DeepCreatedOriginGroupResponseInput` via:
//
//          DeepCreatedOriginGroupResponseArgs{...}
type DeepCreatedOriginGroupResponseInput interface {
	pulumi.Input

	ToDeepCreatedOriginGroupResponseOutput() DeepCreatedOriginGroupResponseOutput
	ToDeepCreatedOriginGroupResponseOutputWithContext(context.Context) DeepCreatedOriginGroupResponseOutput
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupResponseArgs struct {
	// Health probe settings to the origin that is used to determine the health of the origin.
	HealthProbeSettings HealthProbeParametersResponsePtrInput `pulumi:"healthProbeSettings"`
	// Origin group name which must be unique within the endpoint.
	Name pulumi.StringInput `pulumi:"name"`
	// The source of the content being delivered via CDN within given origin group.
	Origins ResourceReferenceResponseArrayInput `pulumi:"origins"`
	// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
	ResponseBasedOriginErrorDetectionSettings ResponseBasedOriginErrorDetectionParametersResponsePtrInput `pulumi:"responseBasedOriginErrorDetectionSettings"`
	// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
	TrafficRestorationTimeToHealedOrNewEndpointsInMinutes pulumi.IntPtrInput `pulumi:"trafficRestorationTimeToHealedOrNewEndpointsInMinutes"`
}

func (DeepCreatedOriginGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginGroupResponse)(nil)).Elem()
}

func (i DeepCreatedOriginGroupResponseArgs) ToDeepCreatedOriginGroupResponseOutput() DeepCreatedOriginGroupResponseOutput {
	return i.ToDeepCreatedOriginGroupResponseOutputWithContext(context.Background())
}

func (i DeepCreatedOriginGroupResponseArgs) ToDeepCreatedOriginGroupResponseOutputWithContext(ctx context.Context) DeepCreatedOriginGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginGroupResponseOutput)
}

// DeepCreatedOriginGroupResponseArrayInput is an input type that accepts DeepCreatedOriginGroupResponseArray and DeepCreatedOriginGroupResponseArrayOutput values.
// You can construct a concrete instance of `DeepCreatedOriginGroupResponseArrayInput` via:
//
//          DeepCreatedOriginGroupResponseArray{ DeepCreatedOriginGroupResponseArgs{...} }
type DeepCreatedOriginGroupResponseArrayInput interface {
	pulumi.Input

	ToDeepCreatedOriginGroupResponseArrayOutput() DeepCreatedOriginGroupResponseArrayOutput
	ToDeepCreatedOriginGroupResponseArrayOutputWithContext(context.Context) DeepCreatedOriginGroupResponseArrayOutput
}

type DeepCreatedOriginGroupResponseArray []DeepCreatedOriginGroupResponseInput

func (DeepCreatedOriginGroupResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginGroupResponse)(nil)).Elem()
}

func (i DeepCreatedOriginGroupResponseArray) ToDeepCreatedOriginGroupResponseArrayOutput() DeepCreatedOriginGroupResponseArrayOutput {
	return i.ToDeepCreatedOriginGroupResponseArrayOutputWithContext(context.Background())
}

func (i DeepCreatedOriginGroupResponseArray) ToDeepCreatedOriginGroupResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginGroupResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginGroupResponseArrayOutput)
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupResponseOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginGroupResponse)(nil)).Elem()
}

func (o DeepCreatedOriginGroupResponseOutput) ToDeepCreatedOriginGroupResponseOutput() DeepCreatedOriginGroupResponseOutput {
	return o
}

func (o DeepCreatedOriginGroupResponseOutput) ToDeepCreatedOriginGroupResponseOutputWithContext(ctx context.Context) DeepCreatedOriginGroupResponseOutput {
	return o
}

// Health probe settings to the origin that is used to determine the health of the origin.
func (o DeepCreatedOriginGroupResponseOutput) HealthProbeSettings() HealthProbeParametersResponsePtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) *HealthProbeParametersResponse { return v.HealthProbeSettings }).(HealthProbeParametersResponsePtrOutput)
}

// Origin group name which must be unique within the endpoint.
func (o DeepCreatedOriginGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The source of the content being delivered via CDN within given origin group.
func (o DeepCreatedOriginGroupResponseOutput) Origins() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) []ResourceReferenceResponse { return v.Origins }).(ResourceReferenceResponseArrayOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
func (o DeepCreatedOriginGroupResponseOutput) ResponseBasedOriginErrorDetectionSettings() ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) *ResponseBasedOriginErrorDetectionParametersResponse {
		return v.ResponseBasedOriginErrorDetectionSettings
	}).(ResponseBasedOriginErrorDetectionParametersResponsePtrOutput)
}

// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
func (o DeepCreatedOriginGroupResponseOutput) TrafficRestorationTimeToHealedOrNewEndpointsInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) *int {
		return v.TrafficRestorationTimeToHealedOrNewEndpointsInMinutes
	}).(pulumi.IntPtrOutput)
}

type DeepCreatedOriginGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginGroupResponse)(nil)).Elem()
}

func (o DeepCreatedOriginGroupResponseArrayOutput) ToDeepCreatedOriginGroupResponseArrayOutput() DeepCreatedOriginGroupResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginGroupResponseArrayOutput) ToDeepCreatedOriginGroupResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginGroupResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginGroupResponseArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOriginGroupResponse {
		return vs[0].([]DeepCreatedOriginGroupResponse)[vs[1].(int)]
	}).(DeepCreatedOriginGroupResponseOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginInvokeResponse struct {
	// Origin is enabled for load balancing or not. By default, origin is always enabled.
	Enabled *bool `pulumi:"enabled"`
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
	HostName string `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535.
	HttpPort *int `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535.
	HttpsPort *int `pulumi:"httpsPort"`
	// Origin name which must be unique within the endpoint.
	Name string `pulumi:"name"`
	// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
	OriginHostHeader *string `pulumi:"originHostHeader"`
	// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
	Priority *int `pulumi:"priority"`
	// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
	Weight *int `pulumi:"weight"`
}

// DeepCreatedOriginInvokeResponseInput is an input type that accepts DeepCreatedOriginInvokeResponseArgs and DeepCreatedOriginInvokeResponseOutput values.
// You can construct a concrete instance of `DeepCreatedOriginInvokeResponseInput` via:
//
//          DeepCreatedOriginInvokeResponseArgs{...}
type DeepCreatedOriginInvokeResponseInput interface {
	pulumi.Input

	ToDeepCreatedOriginInvokeResponseOutput() DeepCreatedOriginInvokeResponseOutput
	ToDeepCreatedOriginInvokeResponseOutputWithContext(context.Context) DeepCreatedOriginInvokeResponseOutput
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginInvokeResponseArgs struct {
	// Origin is enabled for load balancing or not. By default, origin is always enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535.
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535.
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// Origin name which must be unique within the endpoint.
	Name pulumi.StringInput `pulumi:"name"`
	// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
	OriginHostHeader pulumi.StringPtrInput `pulumi:"originHostHeader"`
	// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (DeepCreatedOriginInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginInvokeResponse)(nil)).Elem()
}

func (i DeepCreatedOriginInvokeResponseArgs) ToDeepCreatedOriginInvokeResponseOutput() DeepCreatedOriginInvokeResponseOutput {
	return i.ToDeepCreatedOriginInvokeResponseOutputWithContext(context.Background())
}

func (i DeepCreatedOriginInvokeResponseArgs) ToDeepCreatedOriginInvokeResponseOutputWithContext(ctx context.Context) DeepCreatedOriginInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginInvokeResponseOutput)
}

// DeepCreatedOriginInvokeResponseArrayInput is an input type that accepts DeepCreatedOriginInvokeResponseArray and DeepCreatedOriginInvokeResponseArrayOutput values.
// You can construct a concrete instance of `DeepCreatedOriginInvokeResponseArrayInput` via:
//
//          DeepCreatedOriginInvokeResponseArray{ DeepCreatedOriginInvokeResponseArgs{...} }
type DeepCreatedOriginInvokeResponseArrayInput interface {
	pulumi.Input

	ToDeepCreatedOriginInvokeResponseArrayOutput() DeepCreatedOriginInvokeResponseArrayOutput
	ToDeepCreatedOriginInvokeResponseArrayOutputWithContext(context.Context) DeepCreatedOriginInvokeResponseArrayOutput
}

type DeepCreatedOriginInvokeResponseArray []DeepCreatedOriginInvokeResponseInput

func (DeepCreatedOriginInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginInvokeResponse)(nil)).Elem()
}

func (i DeepCreatedOriginInvokeResponseArray) ToDeepCreatedOriginInvokeResponseArrayOutput() DeepCreatedOriginInvokeResponseArrayOutput {
	return i.ToDeepCreatedOriginInvokeResponseArrayOutputWithContext(context.Background())
}

func (i DeepCreatedOriginInvokeResponseArray) ToDeepCreatedOriginInvokeResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginInvokeResponseArrayOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginInvokeResponse)(nil)).Elem()
}

func (o DeepCreatedOriginInvokeResponseOutput) ToDeepCreatedOriginInvokeResponseOutput() DeepCreatedOriginInvokeResponseOutput {
	return o
}

func (o DeepCreatedOriginInvokeResponseOutput) ToDeepCreatedOriginInvokeResponseOutputWithContext(ctx context.Context) DeepCreatedOriginInvokeResponseOutput {
	return o
}

// Origin is enabled for load balancing or not. By default, origin is always enabled.
func (o DeepCreatedOriginInvokeResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginInvokeResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
func (o DeepCreatedOriginInvokeResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginInvokeResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// The value of the HTTP port. Must be between 1 and 65535.
func (o DeepCreatedOriginInvokeResponseOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginInvokeResponse) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The value of the HTTPS port. Must be between 1 and 65535.
func (o DeepCreatedOriginInvokeResponseOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginInvokeResponse) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Origin name which must be unique within the endpoint.
func (o DeepCreatedOriginInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
func (o DeepCreatedOriginInvokeResponseOutput) OriginHostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginInvokeResponse) *string { return v.OriginHostHeader }).(pulumi.StringPtrOutput)
}

// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
func (o DeepCreatedOriginInvokeResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginInvokeResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
func (o DeepCreatedOriginInvokeResponseOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginInvokeResponse) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type DeepCreatedOriginInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginInvokeResponse)(nil)).Elem()
}

func (o DeepCreatedOriginInvokeResponseArrayOutput) ToDeepCreatedOriginInvokeResponseArrayOutput() DeepCreatedOriginInvokeResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginInvokeResponseArrayOutput) ToDeepCreatedOriginInvokeResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginInvokeResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginInvokeResponseArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOriginInvokeResponse {
		return vs[0].([]DeepCreatedOriginInvokeResponse)[vs[1].(int)]
	}).(DeepCreatedOriginInvokeResponseOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginResponse struct {
	// Origin is enabled for load balancing or not. By default, origin is always enabled.
	Enabled *bool `pulumi:"enabled"`
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
	HostName string `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535.
	HttpPort *int `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535.
	HttpsPort *int `pulumi:"httpsPort"`
	// Origin name which must be unique within the endpoint.
	Name string `pulumi:"name"`
	// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
	OriginHostHeader *string `pulumi:"originHostHeader"`
	// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
	Priority *int `pulumi:"priority"`
	// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
	Weight *int `pulumi:"weight"`
}

// DeepCreatedOriginResponseInput is an input type that accepts DeepCreatedOriginResponseArgs and DeepCreatedOriginResponseOutput values.
// You can construct a concrete instance of `DeepCreatedOriginResponseInput` via:
//
//          DeepCreatedOriginResponseArgs{...}
type DeepCreatedOriginResponseInput interface {
	pulumi.Input

	ToDeepCreatedOriginResponseOutput() DeepCreatedOriginResponseOutput
	ToDeepCreatedOriginResponseOutputWithContext(context.Context) DeepCreatedOriginResponseOutput
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginResponseArgs struct {
	// Origin is enabled for load balancing or not. By default, origin is always enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535.
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535.
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// Origin name which must be unique within the endpoint.
	Name pulumi.StringInput `pulumi:"name"`
	// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
	OriginHostHeader pulumi.StringPtrInput `pulumi:"originHostHeader"`
	// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (DeepCreatedOriginResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginResponse)(nil)).Elem()
}

func (i DeepCreatedOriginResponseArgs) ToDeepCreatedOriginResponseOutput() DeepCreatedOriginResponseOutput {
	return i.ToDeepCreatedOriginResponseOutputWithContext(context.Background())
}

func (i DeepCreatedOriginResponseArgs) ToDeepCreatedOriginResponseOutputWithContext(ctx context.Context) DeepCreatedOriginResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginResponseOutput)
}

// DeepCreatedOriginResponseArrayInput is an input type that accepts DeepCreatedOriginResponseArray and DeepCreatedOriginResponseArrayOutput values.
// You can construct a concrete instance of `DeepCreatedOriginResponseArrayInput` via:
//
//          DeepCreatedOriginResponseArray{ DeepCreatedOriginResponseArgs{...} }
type DeepCreatedOriginResponseArrayInput interface {
	pulumi.Input

	ToDeepCreatedOriginResponseArrayOutput() DeepCreatedOriginResponseArrayOutput
	ToDeepCreatedOriginResponseArrayOutputWithContext(context.Context) DeepCreatedOriginResponseArrayOutput
}

type DeepCreatedOriginResponseArray []DeepCreatedOriginResponseInput

func (DeepCreatedOriginResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginResponse)(nil)).Elem()
}

func (i DeepCreatedOriginResponseArray) ToDeepCreatedOriginResponseArrayOutput() DeepCreatedOriginResponseArrayOutput {
	return i.ToDeepCreatedOriginResponseArrayOutputWithContext(context.Background())
}

func (i DeepCreatedOriginResponseArray) ToDeepCreatedOriginResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginResponseArrayOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginResponseOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginResponse)(nil)).Elem()
}

func (o DeepCreatedOriginResponseOutput) ToDeepCreatedOriginResponseOutput() DeepCreatedOriginResponseOutput {
	return o
}

func (o DeepCreatedOriginResponseOutput) ToDeepCreatedOriginResponseOutputWithContext(ctx context.Context) DeepCreatedOriginResponseOutput {
	return o
}

// Origin is enabled for load balancing or not. By default, origin is always enabled.
func (o DeepCreatedOriginResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
func (o DeepCreatedOriginResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// The value of the HTTP port. Must be between 1 and 65535.
func (o DeepCreatedOriginResponseOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The value of the HTTPS port. Must be between 1 and 65535.
func (o DeepCreatedOriginResponseOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Origin name which must be unique within the endpoint.
func (o DeepCreatedOriginResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
func (o DeepCreatedOriginResponseOutput) OriginHostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *string { return v.OriginHostHeader }).(pulumi.StringPtrOutput)
}

// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
func (o DeepCreatedOriginResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
func (o DeepCreatedOriginResponseOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type DeepCreatedOriginResponseArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginResponse)(nil)).Elem()
}

func (o DeepCreatedOriginResponseArrayOutput) ToDeepCreatedOriginResponseArrayOutput() DeepCreatedOriginResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginResponseArrayOutput) ToDeepCreatedOriginResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginResponseArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOriginResponse {
		return vs[0].([]DeepCreatedOriginResponse)[vs[1].(int)]
	}).(DeepCreatedOriginResponseOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRule struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions []interface{} `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions []interface{} `pulumi:"conditions"`
	// Name of the rule
	Name *string `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order int `pulumi:"order"`
}

// DeliveryRuleInput is an input type that accepts DeliveryRuleArgs and DeliveryRuleOutput values.
// You can construct a concrete instance of `DeliveryRuleInput` via:
//
//          DeliveryRuleArgs{...}
type DeliveryRuleInput interface {
	pulumi.Input

	ToDeliveryRuleOutput() DeliveryRuleOutput
	ToDeliveryRuleOutputWithContext(context.Context) DeliveryRuleOutput
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleArgs struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions pulumi.ArrayInput `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions pulumi.ArrayInput `pulumi:"conditions"`
	// Name of the rule
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order pulumi.IntInput `pulumi:"order"`
}

func (DeliveryRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRule)(nil)).Elem()
}

func (i DeliveryRuleArgs) ToDeliveryRuleOutput() DeliveryRuleOutput {
	return i.ToDeliveryRuleOutputWithContext(context.Background())
}

func (i DeliveryRuleArgs) ToDeliveryRuleOutputWithContext(ctx context.Context) DeliveryRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleOutput)
}

// DeliveryRuleArrayInput is an input type that accepts DeliveryRuleArray and DeliveryRuleArrayOutput values.
// You can construct a concrete instance of `DeliveryRuleArrayInput` via:
//
//          DeliveryRuleArray{ DeliveryRuleArgs{...} }
type DeliveryRuleArrayInput interface {
	pulumi.Input

	ToDeliveryRuleArrayOutput() DeliveryRuleArrayOutput
	ToDeliveryRuleArrayOutputWithContext(context.Context) DeliveryRuleArrayOutput
}

type DeliveryRuleArray []DeliveryRuleInput

func (DeliveryRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRule)(nil)).Elem()
}

func (i DeliveryRuleArray) ToDeliveryRuleArrayOutput() DeliveryRuleArrayOutput {
	return i.ToDeliveryRuleArrayOutputWithContext(context.Background())
}

func (i DeliveryRuleArray) ToDeliveryRuleArrayOutputWithContext(ctx context.Context) DeliveryRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleArrayOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleOutput struct{ *pulumi.OutputState }

func (DeliveryRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRule)(nil)).Elem()
}

func (o DeliveryRuleOutput) ToDeliveryRuleOutput() DeliveryRuleOutput {
	return o
}

func (o DeliveryRuleOutput) ToDeliveryRuleOutputWithContext(ctx context.Context) DeliveryRuleOutput {
	return o
}

// A list of actions that are executed when all the conditions of a rule are satisfied.
func (o DeliveryRuleOutput) Actions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRule) []interface{} { return v.Actions }).(pulumi.ArrayOutput)
}

// A list of conditions that must be matched for the actions to be executed
func (o DeliveryRuleOutput) Conditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRule) []interface{} { return v.Conditions }).(pulumi.ArrayOutput)
}

// Name of the rule
func (o DeliveryRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
func (o DeliveryRuleOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v DeliveryRule) int { return v.Order }).(pulumi.IntOutput)
}

type DeliveryRuleArrayOutput struct{ *pulumi.OutputState }

func (DeliveryRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRule)(nil)).Elem()
}

func (o DeliveryRuleArrayOutput) ToDeliveryRuleArrayOutput() DeliveryRuleArrayOutput {
	return o
}

func (o DeliveryRuleArrayOutput) ToDeliveryRuleArrayOutputWithContext(ctx context.Context) DeliveryRuleArrayOutput {
	return o
}

func (o DeliveryRuleArrayOutput) Index(i pulumi.IntInput) DeliveryRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryRule {
		return vs[0].([]DeliveryRule)[vs[1].(int)]
	}).(DeliveryRuleOutput)
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheExpiration'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheExpirationActionParameters `pulumi:"parameters"`
}

// DeliveryRuleCacheExpirationActionInput is an input type that accepts DeliveryRuleCacheExpirationActionArgs and DeliveryRuleCacheExpirationActionOutput values.
// You can construct a concrete instance of `DeliveryRuleCacheExpirationActionInput` via:
//
//          DeliveryRuleCacheExpirationActionArgs{...}
type DeliveryRuleCacheExpirationActionInput interface {
	pulumi.Input

	ToDeliveryRuleCacheExpirationActionOutput() DeliveryRuleCacheExpirationActionOutput
	ToDeliveryRuleCacheExpirationActionOutputWithContext(context.Context) DeliveryRuleCacheExpirationActionOutput
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationActionArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheExpiration'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheExpirationActionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleCacheExpirationActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheExpirationAction)(nil)).Elem()
}

func (i DeliveryRuleCacheExpirationActionArgs) ToDeliveryRuleCacheExpirationActionOutput() DeliveryRuleCacheExpirationActionOutput {
	return i.ToDeliveryRuleCacheExpirationActionOutputWithContext(context.Background())
}

func (i DeliveryRuleCacheExpirationActionArgs) ToDeliveryRuleCacheExpirationActionOutputWithContext(ctx context.Context) DeliveryRuleCacheExpirationActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleCacheExpirationActionOutput)
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationActionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleCacheExpirationActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheExpirationAction)(nil)).Elem()
}

func (o DeliveryRuleCacheExpirationActionOutput) ToDeliveryRuleCacheExpirationActionOutput() DeliveryRuleCacheExpirationActionOutput {
	return o
}

func (o DeliveryRuleCacheExpirationActionOutput) ToDeliveryRuleCacheExpirationActionOutputWithContext(ctx context.Context) DeliveryRuleCacheExpirationActionOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'CacheExpiration'.
func (o DeliveryRuleCacheExpirationActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCacheExpirationAction) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleCacheExpirationActionOutput) Parameters() CacheExpirationActionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleCacheExpirationAction) CacheExpirationActionParameters { return v.Parameters }).(CacheExpirationActionParametersOutput)
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationActionInvokeResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheExpiration'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheExpirationActionParametersInvokeResponse `pulumi:"parameters"`
}

// DeliveryRuleCacheExpirationActionInvokeResponseInput is an input type that accepts DeliveryRuleCacheExpirationActionInvokeResponseArgs and DeliveryRuleCacheExpirationActionInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleCacheExpirationActionInvokeResponseInput` via:
//
//          DeliveryRuleCacheExpirationActionInvokeResponseArgs{...}
type DeliveryRuleCacheExpirationActionInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRuleCacheExpirationActionInvokeResponseOutput() DeliveryRuleCacheExpirationActionInvokeResponseOutput
	ToDeliveryRuleCacheExpirationActionInvokeResponseOutputWithContext(context.Context) DeliveryRuleCacheExpirationActionInvokeResponseOutput
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationActionInvokeResponseArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheExpiration'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheExpirationActionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleCacheExpirationActionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheExpirationActionInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleCacheExpirationActionInvokeResponseArgs) ToDeliveryRuleCacheExpirationActionInvokeResponseOutput() DeliveryRuleCacheExpirationActionInvokeResponseOutput {
	return i.ToDeliveryRuleCacheExpirationActionInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleCacheExpirationActionInvokeResponseArgs) ToDeliveryRuleCacheExpirationActionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleCacheExpirationActionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleCacheExpirationActionInvokeResponseOutput)
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationActionInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleCacheExpirationActionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheExpirationActionInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleCacheExpirationActionInvokeResponseOutput) ToDeliveryRuleCacheExpirationActionInvokeResponseOutput() DeliveryRuleCacheExpirationActionInvokeResponseOutput {
	return o
}

func (o DeliveryRuleCacheExpirationActionInvokeResponseOutput) ToDeliveryRuleCacheExpirationActionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleCacheExpirationActionInvokeResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'CacheExpiration'.
func (o DeliveryRuleCacheExpirationActionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCacheExpirationActionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleCacheExpirationActionInvokeResponseOutput) Parameters() CacheExpirationActionParametersInvokeResponseOutput {
	return o.ApplyT(func(v DeliveryRuleCacheExpirationActionInvokeResponse) CacheExpirationActionParametersInvokeResponse {
		return v.Parameters
	}).(CacheExpirationActionParametersInvokeResponseOutput)
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheExpiration'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheExpirationActionParametersResponse `pulumi:"parameters"`
}

// DeliveryRuleCacheExpirationActionResponseInput is an input type that accepts DeliveryRuleCacheExpirationActionResponseArgs and DeliveryRuleCacheExpirationActionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleCacheExpirationActionResponseInput` via:
//
//          DeliveryRuleCacheExpirationActionResponseArgs{...}
type DeliveryRuleCacheExpirationActionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleCacheExpirationActionResponseOutput() DeliveryRuleCacheExpirationActionResponseOutput
	ToDeliveryRuleCacheExpirationActionResponseOutputWithContext(context.Context) DeliveryRuleCacheExpirationActionResponseOutput
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationActionResponseArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheExpiration'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheExpirationActionParametersResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleCacheExpirationActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheExpirationActionResponse)(nil)).Elem()
}

func (i DeliveryRuleCacheExpirationActionResponseArgs) ToDeliveryRuleCacheExpirationActionResponseOutput() DeliveryRuleCacheExpirationActionResponseOutput {
	return i.ToDeliveryRuleCacheExpirationActionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleCacheExpirationActionResponseArgs) ToDeliveryRuleCacheExpirationActionResponseOutputWithContext(ctx context.Context) DeliveryRuleCacheExpirationActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleCacheExpirationActionResponseOutput)
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationActionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleCacheExpirationActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheExpirationActionResponse)(nil)).Elem()
}

func (o DeliveryRuleCacheExpirationActionResponseOutput) ToDeliveryRuleCacheExpirationActionResponseOutput() DeliveryRuleCacheExpirationActionResponseOutput {
	return o
}

func (o DeliveryRuleCacheExpirationActionResponseOutput) ToDeliveryRuleCacheExpirationActionResponseOutputWithContext(ctx context.Context) DeliveryRuleCacheExpirationActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'CacheExpiration'.
func (o DeliveryRuleCacheExpirationActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCacheExpirationActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleCacheExpirationActionResponseOutput) Parameters() CacheExpirationActionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleCacheExpirationActionResponse) CacheExpirationActionParametersResponse {
		return v.Parameters
	}).(CacheExpirationActionParametersResponseOutput)
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheKeyQueryString'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheKeyQueryStringActionParameters `pulumi:"parameters"`
}

// DeliveryRuleCacheKeyQueryStringActionInput is an input type that accepts DeliveryRuleCacheKeyQueryStringActionArgs and DeliveryRuleCacheKeyQueryStringActionOutput values.
// You can construct a concrete instance of `DeliveryRuleCacheKeyQueryStringActionInput` via:
//
//          DeliveryRuleCacheKeyQueryStringActionArgs{...}
type DeliveryRuleCacheKeyQueryStringActionInput interface {
	pulumi.Input

	ToDeliveryRuleCacheKeyQueryStringActionOutput() DeliveryRuleCacheKeyQueryStringActionOutput
	ToDeliveryRuleCacheKeyQueryStringActionOutputWithContext(context.Context) DeliveryRuleCacheKeyQueryStringActionOutput
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringActionArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheKeyQueryString'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheKeyQueryStringActionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleCacheKeyQueryStringActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheKeyQueryStringAction)(nil)).Elem()
}

func (i DeliveryRuleCacheKeyQueryStringActionArgs) ToDeliveryRuleCacheKeyQueryStringActionOutput() DeliveryRuleCacheKeyQueryStringActionOutput {
	return i.ToDeliveryRuleCacheKeyQueryStringActionOutputWithContext(context.Background())
}

func (i DeliveryRuleCacheKeyQueryStringActionArgs) ToDeliveryRuleCacheKeyQueryStringActionOutputWithContext(ctx context.Context) DeliveryRuleCacheKeyQueryStringActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleCacheKeyQueryStringActionOutput)
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringActionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleCacheKeyQueryStringActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheKeyQueryStringAction)(nil)).Elem()
}

func (o DeliveryRuleCacheKeyQueryStringActionOutput) ToDeliveryRuleCacheKeyQueryStringActionOutput() DeliveryRuleCacheKeyQueryStringActionOutput {
	return o
}

func (o DeliveryRuleCacheKeyQueryStringActionOutput) ToDeliveryRuleCacheKeyQueryStringActionOutputWithContext(ctx context.Context) DeliveryRuleCacheKeyQueryStringActionOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'CacheKeyQueryString'.
func (o DeliveryRuleCacheKeyQueryStringActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCacheKeyQueryStringAction) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleCacheKeyQueryStringActionOutput) Parameters() CacheKeyQueryStringActionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleCacheKeyQueryStringAction) CacheKeyQueryStringActionParameters { return v.Parameters }).(CacheKeyQueryStringActionParametersOutput)
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringActionInvokeResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheKeyQueryString'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheKeyQueryStringActionParametersInvokeResponse `pulumi:"parameters"`
}

// DeliveryRuleCacheKeyQueryStringActionInvokeResponseInput is an input type that accepts DeliveryRuleCacheKeyQueryStringActionInvokeResponseArgs and DeliveryRuleCacheKeyQueryStringActionInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleCacheKeyQueryStringActionInvokeResponseInput` via:
//
//          DeliveryRuleCacheKeyQueryStringActionInvokeResponseArgs{...}
type DeliveryRuleCacheKeyQueryStringActionInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRuleCacheKeyQueryStringActionInvokeResponseOutput() DeliveryRuleCacheKeyQueryStringActionInvokeResponseOutput
	ToDeliveryRuleCacheKeyQueryStringActionInvokeResponseOutputWithContext(context.Context) DeliveryRuleCacheKeyQueryStringActionInvokeResponseOutput
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringActionInvokeResponseArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheKeyQueryString'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheKeyQueryStringActionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleCacheKeyQueryStringActionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheKeyQueryStringActionInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleCacheKeyQueryStringActionInvokeResponseArgs) ToDeliveryRuleCacheKeyQueryStringActionInvokeResponseOutput() DeliveryRuleCacheKeyQueryStringActionInvokeResponseOutput {
	return i.ToDeliveryRuleCacheKeyQueryStringActionInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleCacheKeyQueryStringActionInvokeResponseArgs) ToDeliveryRuleCacheKeyQueryStringActionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleCacheKeyQueryStringActionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleCacheKeyQueryStringActionInvokeResponseOutput)
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringActionInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleCacheKeyQueryStringActionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheKeyQueryStringActionInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleCacheKeyQueryStringActionInvokeResponseOutput) ToDeliveryRuleCacheKeyQueryStringActionInvokeResponseOutput() DeliveryRuleCacheKeyQueryStringActionInvokeResponseOutput {
	return o
}

func (o DeliveryRuleCacheKeyQueryStringActionInvokeResponseOutput) ToDeliveryRuleCacheKeyQueryStringActionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleCacheKeyQueryStringActionInvokeResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'CacheKeyQueryString'.
func (o DeliveryRuleCacheKeyQueryStringActionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCacheKeyQueryStringActionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleCacheKeyQueryStringActionInvokeResponseOutput) Parameters() CacheKeyQueryStringActionParametersInvokeResponseOutput {
	return o.ApplyT(func(v DeliveryRuleCacheKeyQueryStringActionInvokeResponse) CacheKeyQueryStringActionParametersInvokeResponse {
		return v.Parameters
	}).(CacheKeyQueryStringActionParametersInvokeResponseOutput)
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheKeyQueryString'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheKeyQueryStringActionParametersResponse `pulumi:"parameters"`
}

// DeliveryRuleCacheKeyQueryStringActionResponseInput is an input type that accepts DeliveryRuleCacheKeyQueryStringActionResponseArgs and DeliveryRuleCacheKeyQueryStringActionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleCacheKeyQueryStringActionResponseInput` via:
//
//          DeliveryRuleCacheKeyQueryStringActionResponseArgs{...}
type DeliveryRuleCacheKeyQueryStringActionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleCacheKeyQueryStringActionResponseOutput() DeliveryRuleCacheKeyQueryStringActionResponseOutput
	ToDeliveryRuleCacheKeyQueryStringActionResponseOutputWithContext(context.Context) DeliveryRuleCacheKeyQueryStringActionResponseOutput
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringActionResponseArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheKeyQueryString'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheKeyQueryStringActionParametersResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleCacheKeyQueryStringActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheKeyQueryStringActionResponse)(nil)).Elem()
}

func (i DeliveryRuleCacheKeyQueryStringActionResponseArgs) ToDeliveryRuleCacheKeyQueryStringActionResponseOutput() DeliveryRuleCacheKeyQueryStringActionResponseOutput {
	return i.ToDeliveryRuleCacheKeyQueryStringActionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleCacheKeyQueryStringActionResponseArgs) ToDeliveryRuleCacheKeyQueryStringActionResponseOutputWithContext(ctx context.Context) DeliveryRuleCacheKeyQueryStringActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleCacheKeyQueryStringActionResponseOutput)
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringActionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleCacheKeyQueryStringActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheKeyQueryStringActionResponse)(nil)).Elem()
}

func (o DeliveryRuleCacheKeyQueryStringActionResponseOutput) ToDeliveryRuleCacheKeyQueryStringActionResponseOutput() DeliveryRuleCacheKeyQueryStringActionResponseOutput {
	return o
}

func (o DeliveryRuleCacheKeyQueryStringActionResponseOutput) ToDeliveryRuleCacheKeyQueryStringActionResponseOutputWithContext(ctx context.Context) DeliveryRuleCacheKeyQueryStringActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'CacheKeyQueryString'.
func (o DeliveryRuleCacheKeyQueryStringActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCacheKeyQueryStringActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleCacheKeyQueryStringActionResponseOutput) Parameters() CacheKeyQueryStringActionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleCacheKeyQueryStringActionResponse) CacheKeyQueryStringActionParametersResponse {
		return v.Parameters
	}).(CacheKeyQueryStringActionParametersResponseOutput)
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'Cookies'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters CookiesMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleCookiesConditionInput is an input type that accepts DeliveryRuleCookiesConditionArgs and DeliveryRuleCookiesConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleCookiesConditionInput` via:
//
//          DeliveryRuleCookiesConditionArgs{...}
type DeliveryRuleCookiesConditionInput interface {
	pulumi.Input

	ToDeliveryRuleCookiesConditionOutput() DeliveryRuleCookiesConditionOutput
	ToDeliveryRuleCookiesConditionOutputWithContext(context.Context) DeliveryRuleCookiesConditionOutput
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'Cookies'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters CookiesMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleCookiesConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCookiesCondition)(nil)).Elem()
}

func (i DeliveryRuleCookiesConditionArgs) ToDeliveryRuleCookiesConditionOutput() DeliveryRuleCookiesConditionOutput {
	return i.ToDeliveryRuleCookiesConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleCookiesConditionArgs) ToDeliveryRuleCookiesConditionOutputWithContext(ctx context.Context) DeliveryRuleCookiesConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleCookiesConditionOutput)
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleCookiesConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCookiesCondition)(nil)).Elem()
}

func (o DeliveryRuleCookiesConditionOutput) ToDeliveryRuleCookiesConditionOutput() DeliveryRuleCookiesConditionOutput {
	return o
}

func (o DeliveryRuleCookiesConditionOutput) ToDeliveryRuleCookiesConditionOutputWithContext(ctx context.Context) DeliveryRuleCookiesConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'Cookies'.
func (o DeliveryRuleCookiesConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCookiesCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleCookiesConditionOutput) Parameters() CookiesMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleCookiesCondition) CookiesMatchConditionParameters { return v.Parameters }).(CookiesMatchConditionParametersOutput)
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesConditionInvokeResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'Cookies'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters CookiesMatchConditionParametersInvokeResponse `pulumi:"parameters"`
}

// DeliveryRuleCookiesConditionInvokeResponseInput is an input type that accepts DeliveryRuleCookiesConditionInvokeResponseArgs and DeliveryRuleCookiesConditionInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleCookiesConditionInvokeResponseInput` via:
//
//          DeliveryRuleCookiesConditionInvokeResponseArgs{...}
type DeliveryRuleCookiesConditionInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRuleCookiesConditionInvokeResponseOutput() DeliveryRuleCookiesConditionInvokeResponseOutput
	ToDeliveryRuleCookiesConditionInvokeResponseOutputWithContext(context.Context) DeliveryRuleCookiesConditionInvokeResponseOutput
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesConditionInvokeResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'Cookies'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters CookiesMatchConditionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleCookiesConditionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCookiesConditionInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleCookiesConditionInvokeResponseArgs) ToDeliveryRuleCookiesConditionInvokeResponseOutput() DeliveryRuleCookiesConditionInvokeResponseOutput {
	return i.ToDeliveryRuleCookiesConditionInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleCookiesConditionInvokeResponseArgs) ToDeliveryRuleCookiesConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleCookiesConditionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleCookiesConditionInvokeResponseOutput)
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesConditionInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleCookiesConditionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCookiesConditionInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleCookiesConditionInvokeResponseOutput) ToDeliveryRuleCookiesConditionInvokeResponseOutput() DeliveryRuleCookiesConditionInvokeResponseOutput {
	return o
}

func (o DeliveryRuleCookiesConditionInvokeResponseOutput) ToDeliveryRuleCookiesConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleCookiesConditionInvokeResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'Cookies'.
func (o DeliveryRuleCookiesConditionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCookiesConditionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleCookiesConditionInvokeResponseOutput) Parameters() CookiesMatchConditionParametersInvokeResponseOutput {
	return o.ApplyT(func(v DeliveryRuleCookiesConditionInvokeResponse) CookiesMatchConditionParametersInvokeResponse {
		return v.Parameters
	}).(CookiesMatchConditionParametersInvokeResponseOutput)
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'Cookies'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters CookiesMatchConditionParametersResponse `pulumi:"parameters"`
}

// DeliveryRuleCookiesConditionResponseInput is an input type that accepts DeliveryRuleCookiesConditionResponseArgs and DeliveryRuleCookiesConditionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleCookiesConditionResponseInput` via:
//
//          DeliveryRuleCookiesConditionResponseArgs{...}
type DeliveryRuleCookiesConditionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleCookiesConditionResponseOutput() DeliveryRuleCookiesConditionResponseOutput
	ToDeliveryRuleCookiesConditionResponseOutputWithContext(context.Context) DeliveryRuleCookiesConditionResponseOutput
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesConditionResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'Cookies'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters CookiesMatchConditionParametersResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleCookiesConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCookiesConditionResponse)(nil)).Elem()
}

func (i DeliveryRuleCookiesConditionResponseArgs) ToDeliveryRuleCookiesConditionResponseOutput() DeliveryRuleCookiesConditionResponseOutput {
	return i.ToDeliveryRuleCookiesConditionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleCookiesConditionResponseArgs) ToDeliveryRuleCookiesConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleCookiesConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleCookiesConditionResponseOutput)
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleCookiesConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCookiesConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleCookiesConditionResponseOutput) ToDeliveryRuleCookiesConditionResponseOutput() DeliveryRuleCookiesConditionResponseOutput {
	return o
}

func (o DeliveryRuleCookiesConditionResponseOutput) ToDeliveryRuleCookiesConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleCookiesConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'Cookies'.
func (o DeliveryRuleCookiesConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCookiesConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleCookiesConditionResponseOutput) Parameters() CookiesMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleCookiesConditionResponse) CookiesMatchConditionParametersResponse {
		return v.Parameters
	}).(CookiesMatchConditionParametersResponseOutput)
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'HttpVersion'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HttpVersionMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleHttpVersionConditionInput is an input type that accepts DeliveryRuleHttpVersionConditionArgs and DeliveryRuleHttpVersionConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleHttpVersionConditionInput` via:
//
//          DeliveryRuleHttpVersionConditionArgs{...}
type DeliveryRuleHttpVersionConditionInput interface {
	pulumi.Input

	ToDeliveryRuleHttpVersionConditionOutput() DeliveryRuleHttpVersionConditionOutput
	ToDeliveryRuleHttpVersionConditionOutputWithContext(context.Context) DeliveryRuleHttpVersionConditionOutput
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'HttpVersion'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HttpVersionMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleHttpVersionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleHttpVersionCondition)(nil)).Elem()
}

func (i DeliveryRuleHttpVersionConditionArgs) ToDeliveryRuleHttpVersionConditionOutput() DeliveryRuleHttpVersionConditionOutput {
	return i.ToDeliveryRuleHttpVersionConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleHttpVersionConditionArgs) ToDeliveryRuleHttpVersionConditionOutputWithContext(ctx context.Context) DeliveryRuleHttpVersionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleHttpVersionConditionOutput)
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleHttpVersionConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleHttpVersionCondition)(nil)).Elem()
}

func (o DeliveryRuleHttpVersionConditionOutput) ToDeliveryRuleHttpVersionConditionOutput() DeliveryRuleHttpVersionConditionOutput {
	return o
}

func (o DeliveryRuleHttpVersionConditionOutput) ToDeliveryRuleHttpVersionConditionOutputWithContext(ctx context.Context) DeliveryRuleHttpVersionConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'HttpVersion'.
func (o DeliveryRuleHttpVersionConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleHttpVersionCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleHttpVersionConditionOutput) Parameters() HttpVersionMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleHttpVersionCondition) HttpVersionMatchConditionParameters { return v.Parameters }).(HttpVersionMatchConditionParametersOutput)
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionConditionInvokeResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'HttpVersion'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HttpVersionMatchConditionParametersInvokeResponse `pulumi:"parameters"`
}

// DeliveryRuleHttpVersionConditionInvokeResponseInput is an input type that accepts DeliveryRuleHttpVersionConditionInvokeResponseArgs and DeliveryRuleHttpVersionConditionInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleHttpVersionConditionInvokeResponseInput` via:
//
//          DeliveryRuleHttpVersionConditionInvokeResponseArgs{...}
type DeliveryRuleHttpVersionConditionInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRuleHttpVersionConditionInvokeResponseOutput() DeliveryRuleHttpVersionConditionInvokeResponseOutput
	ToDeliveryRuleHttpVersionConditionInvokeResponseOutputWithContext(context.Context) DeliveryRuleHttpVersionConditionInvokeResponseOutput
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionConditionInvokeResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'HttpVersion'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HttpVersionMatchConditionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleHttpVersionConditionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleHttpVersionConditionInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleHttpVersionConditionInvokeResponseArgs) ToDeliveryRuleHttpVersionConditionInvokeResponseOutput() DeliveryRuleHttpVersionConditionInvokeResponseOutput {
	return i.ToDeliveryRuleHttpVersionConditionInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleHttpVersionConditionInvokeResponseArgs) ToDeliveryRuleHttpVersionConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleHttpVersionConditionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleHttpVersionConditionInvokeResponseOutput)
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionConditionInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleHttpVersionConditionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleHttpVersionConditionInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleHttpVersionConditionInvokeResponseOutput) ToDeliveryRuleHttpVersionConditionInvokeResponseOutput() DeliveryRuleHttpVersionConditionInvokeResponseOutput {
	return o
}

func (o DeliveryRuleHttpVersionConditionInvokeResponseOutput) ToDeliveryRuleHttpVersionConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleHttpVersionConditionInvokeResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'HttpVersion'.
func (o DeliveryRuleHttpVersionConditionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleHttpVersionConditionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleHttpVersionConditionInvokeResponseOutput) Parameters() HttpVersionMatchConditionParametersInvokeResponseOutput {
	return o.ApplyT(func(v DeliveryRuleHttpVersionConditionInvokeResponse) HttpVersionMatchConditionParametersInvokeResponse {
		return v.Parameters
	}).(HttpVersionMatchConditionParametersInvokeResponseOutput)
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'HttpVersion'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HttpVersionMatchConditionParametersResponse `pulumi:"parameters"`
}

// DeliveryRuleHttpVersionConditionResponseInput is an input type that accepts DeliveryRuleHttpVersionConditionResponseArgs and DeliveryRuleHttpVersionConditionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleHttpVersionConditionResponseInput` via:
//
//          DeliveryRuleHttpVersionConditionResponseArgs{...}
type DeliveryRuleHttpVersionConditionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleHttpVersionConditionResponseOutput() DeliveryRuleHttpVersionConditionResponseOutput
	ToDeliveryRuleHttpVersionConditionResponseOutputWithContext(context.Context) DeliveryRuleHttpVersionConditionResponseOutput
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionConditionResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'HttpVersion'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HttpVersionMatchConditionParametersResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleHttpVersionConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleHttpVersionConditionResponse)(nil)).Elem()
}

func (i DeliveryRuleHttpVersionConditionResponseArgs) ToDeliveryRuleHttpVersionConditionResponseOutput() DeliveryRuleHttpVersionConditionResponseOutput {
	return i.ToDeliveryRuleHttpVersionConditionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleHttpVersionConditionResponseArgs) ToDeliveryRuleHttpVersionConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleHttpVersionConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleHttpVersionConditionResponseOutput)
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleHttpVersionConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleHttpVersionConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleHttpVersionConditionResponseOutput) ToDeliveryRuleHttpVersionConditionResponseOutput() DeliveryRuleHttpVersionConditionResponseOutput {
	return o
}

func (o DeliveryRuleHttpVersionConditionResponseOutput) ToDeliveryRuleHttpVersionConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleHttpVersionConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'HttpVersion'.
func (o DeliveryRuleHttpVersionConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleHttpVersionConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleHttpVersionConditionResponseOutput) Parameters() HttpVersionMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleHttpVersionConditionResponse) HttpVersionMatchConditionParametersResponse {
		return v.Parameters
	}).(HttpVersionMatchConditionParametersResponseOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleInvokeResponse struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions []interface{} `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions []interface{} `pulumi:"conditions"`
	// Name of the rule
	Name *string `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order int `pulumi:"order"`
}

// DeliveryRuleInvokeResponseInput is an input type that accepts DeliveryRuleInvokeResponseArgs and DeliveryRuleInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleInvokeResponseInput` via:
//
//          DeliveryRuleInvokeResponseArgs{...}
type DeliveryRuleInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRuleInvokeResponseOutput() DeliveryRuleInvokeResponseOutput
	ToDeliveryRuleInvokeResponseOutputWithContext(context.Context) DeliveryRuleInvokeResponseOutput
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleInvokeResponseArgs struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions pulumi.ArrayInput `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions pulumi.ArrayInput `pulumi:"conditions"`
	// Name of the rule
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order pulumi.IntInput `pulumi:"order"`
}

func (DeliveryRuleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleInvokeResponseArgs) ToDeliveryRuleInvokeResponseOutput() DeliveryRuleInvokeResponseOutput {
	return i.ToDeliveryRuleInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleInvokeResponseArgs) ToDeliveryRuleInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleInvokeResponseOutput)
}

// DeliveryRuleInvokeResponseArrayInput is an input type that accepts DeliveryRuleInvokeResponseArray and DeliveryRuleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `DeliveryRuleInvokeResponseArrayInput` via:
//
//          DeliveryRuleInvokeResponseArray{ DeliveryRuleInvokeResponseArgs{...} }
type DeliveryRuleInvokeResponseArrayInput interface {
	pulumi.Input

	ToDeliveryRuleInvokeResponseArrayOutput() DeliveryRuleInvokeResponseArrayOutput
	ToDeliveryRuleInvokeResponseArrayOutputWithContext(context.Context) DeliveryRuleInvokeResponseArrayOutput
}

type DeliveryRuleInvokeResponseArray []DeliveryRuleInvokeResponseInput

func (DeliveryRuleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRuleInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleInvokeResponseArray) ToDeliveryRuleInvokeResponseArrayOutput() DeliveryRuleInvokeResponseArrayOutput {
	return i.ToDeliveryRuleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i DeliveryRuleInvokeResponseArray) ToDeliveryRuleInvokeResponseArrayOutputWithContext(ctx context.Context) DeliveryRuleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleInvokeResponseArrayOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleInvokeResponseOutput) ToDeliveryRuleInvokeResponseOutput() DeliveryRuleInvokeResponseOutput {
	return o
}

func (o DeliveryRuleInvokeResponseOutput) ToDeliveryRuleInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleInvokeResponseOutput {
	return o
}

// A list of actions that are executed when all the conditions of a rule are satisfied.
func (o DeliveryRuleInvokeResponseOutput) Actions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRuleInvokeResponse) []interface{} { return v.Actions }).(pulumi.ArrayOutput)
}

// A list of conditions that must be matched for the actions to be executed
func (o DeliveryRuleInvokeResponseOutput) Conditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRuleInvokeResponse) []interface{} { return v.Conditions }).(pulumi.ArrayOutput)
}

// Name of the rule
func (o DeliveryRuleInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryRuleInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
func (o DeliveryRuleInvokeResponseOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v DeliveryRuleInvokeResponse) int { return v.Order }).(pulumi.IntOutput)
}

type DeliveryRuleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (DeliveryRuleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRuleInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleInvokeResponseArrayOutput) ToDeliveryRuleInvokeResponseArrayOutput() DeliveryRuleInvokeResponseArrayOutput {
	return o
}

func (o DeliveryRuleInvokeResponseArrayOutput) ToDeliveryRuleInvokeResponseArrayOutputWithContext(ctx context.Context) DeliveryRuleInvokeResponseArrayOutput {
	return o
}

func (o DeliveryRuleInvokeResponseArrayOutput) Index(i pulumi.IntInput) DeliveryRuleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryRuleInvokeResponse {
		return vs[0].([]DeliveryRuleInvokeResponse)[vs[1].(int)]
	}).(DeliveryRuleInvokeResponseOutput)
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'IsDevice'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters IsDeviceMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleIsDeviceConditionInput is an input type that accepts DeliveryRuleIsDeviceConditionArgs and DeliveryRuleIsDeviceConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleIsDeviceConditionInput` via:
//
//          DeliveryRuleIsDeviceConditionArgs{...}
type DeliveryRuleIsDeviceConditionInput interface {
	pulumi.Input

	ToDeliveryRuleIsDeviceConditionOutput() DeliveryRuleIsDeviceConditionOutput
	ToDeliveryRuleIsDeviceConditionOutputWithContext(context.Context) DeliveryRuleIsDeviceConditionOutput
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'IsDevice'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters IsDeviceMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleIsDeviceConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleIsDeviceCondition)(nil)).Elem()
}

func (i DeliveryRuleIsDeviceConditionArgs) ToDeliveryRuleIsDeviceConditionOutput() DeliveryRuleIsDeviceConditionOutput {
	return i.ToDeliveryRuleIsDeviceConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleIsDeviceConditionArgs) ToDeliveryRuleIsDeviceConditionOutputWithContext(ctx context.Context) DeliveryRuleIsDeviceConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleIsDeviceConditionOutput)
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleIsDeviceConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleIsDeviceCondition)(nil)).Elem()
}

func (o DeliveryRuleIsDeviceConditionOutput) ToDeliveryRuleIsDeviceConditionOutput() DeliveryRuleIsDeviceConditionOutput {
	return o
}

func (o DeliveryRuleIsDeviceConditionOutput) ToDeliveryRuleIsDeviceConditionOutputWithContext(ctx context.Context) DeliveryRuleIsDeviceConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'IsDevice'.
func (o DeliveryRuleIsDeviceConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleIsDeviceCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleIsDeviceConditionOutput) Parameters() IsDeviceMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleIsDeviceCondition) IsDeviceMatchConditionParameters { return v.Parameters }).(IsDeviceMatchConditionParametersOutput)
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceConditionInvokeResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'IsDevice'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters IsDeviceMatchConditionParametersInvokeResponse `pulumi:"parameters"`
}

// DeliveryRuleIsDeviceConditionInvokeResponseInput is an input type that accepts DeliveryRuleIsDeviceConditionInvokeResponseArgs and DeliveryRuleIsDeviceConditionInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleIsDeviceConditionInvokeResponseInput` via:
//
//          DeliveryRuleIsDeviceConditionInvokeResponseArgs{...}
type DeliveryRuleIsDeviceConditionInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRuleIsDeviceConditionInvokeResponseOutput() DeliveryRuleIsDeviceConditionInvokeResponseOutput
	ToDeliveryRuleIsDeviceConditionInvokeResponseOutputWithContext(context.Context) DeliveryRuleIsDeviceConditionInvokeResponseOutput
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceConditionInvokeResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'IsDevice'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters IsDeviceMatchConditionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleIsDeviceConditionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleIsDeviceConditionInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleIsDeviceConditionInvokeResponseArgs) ToDeliveryRuleIsDeviceConditionInvokeResponseOutput() DeliveryRuleIsDeviceConditionInvokeResponseOutput {
	return i.ToDeliveryRuleIsDeviceConditionInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleIsDeviceConditionInvokeResponseArgs) ToDeliveryRuleIsDeviceConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleIsDeviceConditionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleIsDeviceConditionInvokeResponseOutput)
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceConditionInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleIsDeviceConditionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleIsDeviceConditionInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleIsDeviceConditionInvokeResponseOutput) ToDeliveryRuleIsDeviceConditionInvokeResponseOutput() DeliveryRuleIsDeviceConditionInvokeResponseOutput {
	return o
}

func (o DeliveryRuleIsDeviceConditionInvokeResponseOutput) ToDeliveryRuleIsDeviceConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleIsDeviceConditionInvokeResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'IsDevice'.
func (o DeliveryRuleIsDeviceConditionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleIsDeviceConditionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleIsDeviceConditionInvokeResponseOutput) Parameters() IsDeviceMatchConditionParametersInvokeResponseOutput {
	return o.ApplyT(func(v DeliveryRuleIsDeviceConditionInvokeResponse) IsDeviceMatchConditionParametersInvokeResponse {
		return v.Parameters
	}).(IsDeviceMatchConditionParametersInvokeResponseOutput)
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'IsDevice'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters IsDeviceMatchConditionParametersResponse `pulumi:"parameters"`
}

// DeliveryRuleIsDeviceConditionResponseInput is an input type that accepts DeliveryRuleIsDeviceConditionResponseArgs and DeliveryRuleIsDeviceConditionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleIsDeviceConditionResponseInput` via:
//
//          DeliveryRuleIsDeviceConditionResponseArgs{...}
type DeliveryRuleIsDeviceConditionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleIsDeviceConditionResponseOutput() DeliveryRuleIsDeviceConditionResponseOutput
	ToDeliveryRuleIsDeviceConditionResponseOutputWithContext(context.Context) DeliveryRuleIsDeviceConditionResponseOutput
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceConditionResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'IsDevice'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters IsDeviceMatchConditionParametersResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleIsDeviceConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleIsDeviceConditionResponse)(nil)).Elem()
}

func (i DeliveryRuleIsDeviceConditionResponseArgs) ToDeliveryRuleIsDeviceConditionResponseOutput() DeliveryRuleIsDeviceConditionResponseOutput {
	return i.ToDeliveryRuleIsDeviceConditionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleIsDeviceConditionResponseArgs) ToDeliveryRuleIsDeviceConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleIsDeviceConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleIsDeviceConditionResponseOutput)
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleIsDeviceConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleIsDeviceConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleIsDeviceConditionResponseOutput) ToDeliveryRuleIsDeviceConditionResponseOutput() DeliveryRuleIsDeviceConditionResponseOutput {
	return o
}

func (o DeliveryRuleIsDeviceConditionResponseOutput) ToDeliveryRuleIsDeviceConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleIsDeviceConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'IsDevice'.
func (o DeliveryRuleIsDeviceConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleIsDeviceConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleIsDeviceConditionResponseOutput) Parameters() IsDeviceMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleIsDeviceConditionResponse) IsDeviceMatchConditionParametersResponse {
		return v.Parameters
	}).(IsDeviceMatchConditionParametersResponseOutput)
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'PostArgs'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters PostArgsMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRulePostArgsConditionInput is an input type that accepts DeliveryRulePostArgsConditionArgs and DeliveryRulePostArgsConditionOutput values.
// You can construct a concrete instance of `DeliveryRulePostArgsConditionInput` via:
//
//          DeliveryRulePostArgsConditionArgs{...}
type DeliveryRulePostArgsConditionInput interface {
	pulumi.Input

	ToDeliveryRulePostArgsConditionOutput() DeliveryRulePostArgsConditionOutput
	ToDeliveryRulePostArgsConditionOutputWithContext(context.Context) DeliveryRulePostArgsConditionOutput
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'PostArgs'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters PostArgsMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRulePostArgsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRulePostArgsCondition)(nil)).Elem()
}

func (i DeliveryRulePostArgsConditionArgs) ToDeliveryRulePostArgsConditionOutput() DeliveryRulePostArgsConditionOutput {
	return i.ToDeliveryRulePostArgsConditionOutputWithContext(context.Background())
}

func (i DeliveryRulePostArgsConditionArgs) ToDeliveryRulePostArgsConditionOutputWithContext(ctx context.Context) DeliveryRulePostArgsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRulePostArgsConditionOutput)
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRulePostArgsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRulePostArgsCondition)(nil)).Elem()
}

func (o DeliveryRulePostArgsConditionOutput) ToDeliveryRulePostArgsConditionOutput() DeliveryRulePostArgsConditionOutput {
	return o
}

func (o DeliveryRulePostArgsConditionOutput) ToDeliveryRulePostArgsConditionOutputWithContext(ctx context.Context) DeliveryRulePostArgsConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'PostArgs'.
func (o DeliveryRulePostArgsConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRulePostArgsCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRulePostArgsConditionOutput) Parameters() PostArgsMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRulePostArgsCondition) PostArgsMatchConditionParameters { return v.Parameters }).(PostArgsMatchConditionParametersOutput)
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsConditionInvokeResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'PostArgs'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters PostArgsMatchConditionParametersInvokeResponse `pulumi:"parameters"`
}

// DeliveryRulePostArgsConditionInvokeResponseInput is an input type that accepts DeliveryRulePostArgsConditionInvokeResponseArgs and DeliveryRulePostArgsConditionInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRulePostArgsConditionInvokeResponseInput` via:
//
//          DeliveryRulePostArgsConditionInvokeResponseArgs{...}
type DeliveryRulePostArgsConditionInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRulePostArgsConditionInvokeResponseOutput() DeliveryRulePostArgsConditionInvokeResponseOutput
	ToDeliveryRulePostArgsConditionInvokeResponseOutputWithContext(context.Context) DeliveryRulePostArgsConditionInvokeResponseOutput
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsConditionInvokeResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'PostArgs'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters PostArgsMatchConditionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (DeliveryRulePostArgsConditionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRulePostArgsConditionInvokeResponse)(nil)).Elem()
}

func (i DeliveryRulePostArgsConditionInvokeResponseArgs) ToDeliveryRulePostArgsConditionInvokeResponseOutput() DeliveryRulePostArgsConditionInvokeResponseOutput {
	return i.ToDeliveryRulePostArgsConditionInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRulePostArgsConditionInvokeResponseArgs) ToDeliveryRulePostArgsConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRulePostArgsConditionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRulePostArgsConditionInvokeResponseOutput)
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsConditionInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRulePostArgsConditionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRulePostArgsConditionInvokeResponse)(nil)).Elem()
}

func (o DeliveryRulePostArgsConditionInvokeResponseOutput) ToDeliveryRulePostArgsConditionInvokeResponseOutput() DeliveryRulePostArgsConditionInvokeResponseOutput {
	return o
}

func (o DeliveryRulePostArgsConditionInvokeResponseOutput) ToDeliveryRulePostArgsConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRulePostArgsConditionInvokeResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'PostArgs'.
func (o DeliveryRulePostArgsConditionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRulePostArgsConditionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRulePostArgsConditionInvokeResponseOutput) Parameters() PostArgsMatchConditionParametersInvokeResponseOutput {
	return o.ApplyT(func(v DeliveryRulePostArgsConditionInvokeResponse) PostArgsMatchConditionParametersInvokeResponse {
		return v.Parameters
	}).(PostArgsMatchConditionParametersInvokeResponseOutput)
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'PostArgs'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters PostArgsMatchConditionParametersResponse `pulumi:"parameters"`
}

// DeliveryRulePostArgsConditionResponseInput is an input type that accepts DeliveryRulePostArgsConditionResponseArgs and DeliveryRulePostArgsConditionResponseOutput values.
// You can construct a concrete instance of `DeliveryRulePostArgsConditionResponseInput` via:
//
//          DeliveryRulePostArgsConditionResponseArgs{...}
type DeliveryRulePostArgsConditionResponseInput interface {
	pulumi.Input

	ToDeliveryRulePostArgsConditionResponseOutput() DeliveryRulePostArgsConditionResponseOutput
	ToDeliveryRulePostArgsConditionResponseOutputWithContext(context.Context) DeliveryRulePostArgsConditionResponseOutput
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsConditionResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'PostArgs'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters PostArgsMatchConditionParametersResponseInput `pulumi:"parameters"`
}

func (DeliveryRulePostArgsConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRulePostArgsConditionResponse)(nil)).Elem()
}

func (i DeliveryRulePostArgsConditionResponseArgs) ToDeliveryRulePostArgsConditionResponseOutput() DeliveryRulePostArgsConditionResponseOutput {
	return i.ToDeliveryRulePostArgsConditionResponseOutputWithContext(context.Background())
}

func (i DeliveryRulePostArgsConditionResponseArgs) ToDeliveryRulePostArgsConditionResponseOutputWithContext(ctx context.Context) DeliveryRulePostArgsConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRulePostArgsConditionResponseOutput)
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRulePostArgsConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRulePostArgsConditionResponse)(nil)).Elem()
}

func (o DeliveryRulePostArgsConditionResponseOutput) ToDeliveryRulePostArgsConditionResponseOutput() DeliveryRulePostArgsConditionResponseOutput {
	return o
}

func (o DeliveryRulePostArgsConditionResponseOutput) ToDeliveryRulePostArgsConditionResponseOutputWithContext(ctx context.Context) DeliveryRulePostArgsConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'PostArgs'.
func (o DeliveryRulePostArgsConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRulePostArgsConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRulePostArgsConditionResponseOutput) Parameters() PostArgsMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRulePostArgsConditionResponse) PostArgsMatchConditionParametersResponse {
		return v.Parameters
	}).(PostArgsMatchConditionParametersResponseOutput)
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'QueryString'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters QueryStringMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleQueryStringConditionInput is an input type that accepts DeliveryRuleQueryStringConditionArgs and DeliveryRuleQueryStringConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleQueryStringConditionInput` via:
//
//          DeliveryRuleQueryStringConditionArgs{...}
type DeliveryRuleQueryStringConditionInput interface {
	pulumi.Input

	ToDeliveryRuleQueryStringConditionOutput() DeliveryRuleQueryStringConditionOutput
	ToDeliveryRuleQueryStringConditionOutputWithContext(context.Context) DeliveryRuleQueryStringConditionOutput
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'QueryString'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters QueryStringMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleQueryStringConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleQueryStringCondition)(nil)).Elem()
}

func (i DeliveryRuleQueryStringConditionArgs) ToDeliveryRuleQueryStringConditionOutput() DeliveryRuleQueryStringConditionOutput {
	return i.ToDeliveryRuleQueryStringConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleQueryStringConditionArgs) ToDeliveryRuleQueryStringConditionOutputWithContext(ctx context.Context) DeliveryRuleQueryStringConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleQueryStringConditionOutput)
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleQueryStringConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleQueryStringCondition)(nil)).Elem()
}

func (o DeliveryRuleQueryStringConditionOutput) ToDeliveryRuleQueryStringConditionOutput() DeliveryRuleQueryStringConditionOutput {
	return o
}

func (o DeliveryRuleQueryStringConditionOutput) ToDeliveryRuleQueryStringConditionOutputWithContext(ctx context.Context) DeliveryRuleQueryStringConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'QueryString'.
func (o DeliveryRuleQueryStringConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleQueryStringCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleQueryStringConditionOutput) Parameters() QueryStringMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleQueryStringCondition) QueryStringMatchConditionParameters { return v.Parameters }).(QueryStringMatchConditionParametersOutput)
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringConditionInvokeResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'QueryString'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters QueryStringMatchConditionParametersInvokeResponse `pulumi:"parameters"`
}

// DeliveryRuleQueryStringConditionInvokeResponseInput is an input type that accepts DeliveryRuleQueryStringConditionInvokeResponseArgs and DeliveryRuleQueryStringConditionInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleQueryStringConditionInvokeResponseInput` via:
//
//          DeliveryRuleQueryStringConditionInvokeResponseArgs{...}
type DeliveryRuleQueryStringConditionInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRuleQueryStringConditionInvokeResponseOutput() DeliveryRuleQueryStringConditionInvokeResponseOutput
	ToDeliveryRuleQueryStringConditionInvokeResponseOutputWithContext(context.Context) DeliveryRuleQueryStringConditionInvokeResponseOutput
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringConditionInvokeResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'QueryString'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters QueryStringMatchConditionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleQueryStringConditionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleQueryStringConditionInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleQueryStringConditionInvokeResponseArgs) ToDeliveryRuleQueryStringConditionInvokeResponseOutput() DeliveryRuleQueryStringConditionInvokeResponseOutput {
	return i.ToDeliveryRuleQueryStringConditionInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleQueryStringConditionInvokeResponseArgs) ToDeliveryRuleQueryStringConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleQueryStringConditionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleQueryStringConditionInvokeResponseOutput)
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringConditionInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleQueryStringConditionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleQueryStringConditionInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleQueryStringConditionInvokeResponseOutput) ToDeliveryRuleQueryStringConditionInvokeResponseOutput() DeliveryRuleQueryStringConditionInvokeResponseOutput {
	return o
}

func (o DeliveryRuleQueryStringConditionInvokeResponseOutput) ToDeliveryRuleQueryStringConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleQueryStringConditionInvokeResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'QueryString'.
func (o DeliveryRuleQueryStringConditionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleQueryStringConditionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleQueryStringConditionInvokeResponseOutput) Parameters() QueryStringMatchConditionParametersInvokeResponseOutput {
	return o.ApplyT(func(v DeliveryRuleQueryStringConditionInvokeResponse) QueryStringMatchConditionParametersInvokeResponse {
		return v.Parameters
	}).(QueryStringMatchConditionParametersInvokeResponseOutput)
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'QueryString'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters QueryStringMatchConditionParametersResponse `pulumi:"parameters"`
}

// DeliveryRuleQueryStringConditionResponseInput is an input type that accepts DeliveryRuleQueryStringConditionResponseArgs and DeliveryRuleQueryStringConditionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleQueryStringConditionResponseInput` via:
//
//          DeliveryRuleQueryStringConditionResponseArgs{...}
type DeliveryRuleQueryStringConditionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleQueryStringConditionResponseOutput() DeliveryRuleQueryStringConditionResponseOutput
	ToDeliveryRuleQueryStringConditionResponseOutputWithContext(context.Context) DeliveryRuleQueryStringConditionResponseOutput
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringConditionResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'QueryString'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters QueryStringMatchConditionParametersResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleQueryStringConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleQueryStringConditionResponse)(nil)).Elem()
}

func (i DeliveryRuleQueryStringConditionResponseArgs) ToDeliveryRuleQueryStringConditionResponseOutput() DeliveryRuleQueryStringConditionResponseOutput {
	return i.ToDeliveryRuleQueryStringConditionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleQueryStringConditionResponseArgs) ToDeliveryRuleQueryStringConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleQueryStringConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleQueryStringConditionResponseOutput)
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleQueryStringConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleQueryStringConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleQueryStringConditionResponseOutput) ToDeliveryRuleQueryStringConditionResponseOutput() DeliveryRuleQueryStringConditionResponseOutput {
	return o
}

func (o DeliveryRuleQueryStringConditionResponseOutput) ToDeliveryRuleQueryStringConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleQueryStringConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'QueryString'.
func (o DeliveryRuleQueryStringConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleQueryStringConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleQueryStringConditionResponseOutput) Parameters() QueryStringMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleQueryStringConditionResponse) QueryStringMatchConditionParametersResponse {
		return v.Parameters
	}).(QueryStringMatchConditionParametersResponseOutput)
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RemoteAddress'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RemoteAddressMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleRemoteAddressConditionInput is an input type that accepts DeliveryRuleRemoteAddressConditionArgs and DeliveryRuleRemoteAddressConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleRemoteAddressConditionInput` via:
//
//          DeliveryRuleRemoteAddressConditionArgs{...}
type DeliveryRuleRemoteAddressConditionInput interface {
	pulumi.Input

	ToDeliveryRuleRemoteAddressConditionOutput() DeliveryRuleRemoteAddressConditionOutput
	ToDeliveryRuleRemoteAddressConditionOutputWithContext(context.Context) DeliveryRuleRemoteAddressConditionOutput
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RemoteAddress'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RemoteAddressMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleRemoteAddressConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRemoteAddressCondition)(nil)).Elem()
}

func (i DeliveryRuleRemoteAddressConditionArgs) ToDeliveryRuleRemoteAddressConditionOutput() DeliveryRuleRemoteAddressConditionOutput {
	return i.ToDeliveryRuleRemoteAddressConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleRemoteAddressConditionArgs) ToDeliveryRuleRemoteAddressConditionOutputWithContext(ctx context.Context) DeliveryRuleRemoteAddressConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRemoteAddressConditionOutput)
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRemoteAddressConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRemoteAddressCondition)(nil)).Elem()
}

func (o DeliveryRuleRemoteAddressConditionOutput) ToDeliveryRuleRemoteAddressConditionOutput() DeliveryRuleRemoteAddressConditionOutput {
	return o
}

func (o DeliveryRuleRemoteAddressConditionOutput) ToDeliveryRuleRemoteAddressConditionOutputWithContext(ctx context.Context) DeliveryRuleRemoteAddressConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RemoteAddress'.
func (o DeliveryRuleRemoteAddressConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRemoteAddressCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRemoteAddressConditionOutput) Parameters() RemoteAddressMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleRemoteAddressCondition) RemoteAddressMatchConditionParameters { return v.Parameters }).(RemoteAddressMatchConditionParametersOutput)
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressConditionInvokeResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RemoteAddress'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RemoteAddressMatchConditionParametersInvokeResponse `pulumi:"parameters"`
}

// DeliveryRuleRemoteAddressConditionInvokeResponseInput is an input type that accepts DeliveryRuleRemoteAddressConditionInvokeResponseArgs and DeliveryRuleRemoteAddressConditionInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleRemoteAddressConditionInvokeResponseInput` via:
//
//          DeliveryRuleRemoteAddressConditionInvokeResponseArgs{...}
type DeliveryRuleRemoteAddressConditionInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRuleRemoteAddressConditionInvokeResponseOutput() DeliveryRuleRemoteAddressConditionInvokeResponseOutput
	ToDeliveryRuleRemoteAddressConditionInvokeResponseOutputWithContext(context.Context) DeliveryRuleRemoteAddressConditionInvokeResponseOutput
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressConditionInvokeResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RemoteAddress'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RemoteAddressMatchConditionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleRemoteAddressConditionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRemoteAddressConditionInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleRemoteAddressConditionInvokeResponseArgs) ToDeliveryRuleRemoteAddressConditionInvokeResponseOutput() DeliveryRuleRemoteAddressConditionInvokeResponseOutput {
	return i.ToDeliveryRuleRemoteAddressConditionInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleRemoteAddressConditionInvokeResponseArgs) ToDeliveryRuleRemoteAddressConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleRemoteAddressConditionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRemoteAddressConditionInvokeResponseOutput)
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressConditionInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRemoteAddressConditionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRemoteAddressConditionInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleRemoteAddressConditionInvokeResponseOutput) ToDeliveryRuleRemoteAddressConditionInvokeResponseOutput() DeliveryRuleRemoteAddressConditionInvokeResponseOutput {
	return o
}

func (o DeliveryRuleRemoteAddressConditionInvokeResponseOutput) ToDeliveryRuleRemoteAddressConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleRemoteAddressConditionInvokeResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RemoteAddress'.
func (o DeliveryRuleRemoteAddressConditionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRemoteAddressConditionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRemoteAddressConditionInvokeResponseOutput) Parameters() RemoteAddressMatchConditionParametersInvokeResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRemoteAddressConditionInvokeResponse) RemoteAddressMatchConditionParametersInvokeResponse {
		return v.Parameters
	}).(RemoteAddressMatchConditionParametersInvokeResponseOutput)
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RemoteAddress'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RemoteAddressMatchConditionParametersResponse `pulumi:"parameters"`
}

// DeliveryRuleRemoteAddressConditionResponseInput is an input type that accepts DeliveryRuleRemoteAddressConditionResponseArgs and DeliveryRuleRemoteAddressConditionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleRemoteAddressConditionResponseInput` via:
//
//          DeliveryRuleRemoteAddressConditionResponseArgs{...}
type DeliveryRuleRemoteAddressConditionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleRemoteAddressConditionResponseOutput() DeliveryRuleRemoteAddressConditionResponseOutput
	ToDeliveryRuleRemoteAddressConditionResponseOutputWithContext(context.Context) DeliveryRuleRemoteAddressConditionResponseOutput
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressConditionResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RemoteAddress'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RemoteAddressMatchConditionParametersResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleRemoteAddressConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRemoteAddressConditionResponse)(nil)).Elem()
}

func (i DeliveryRuleRemoteAddressConditionResponseArgs) ToDeliveryRuleRemoteAddressConditionResponseOutput() DeliveryRuleRemoteAddressConditionResponseOutput {
	return i.ToDeliveryRuleRemoteAddressConditionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleRemoteAddressConditionResponseArgs) ToDeliveryRuleRemoteAddressConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRemoteAddressConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRemoteAddressConditionResponseOutput)
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRemoteAddressConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRemoteAddressConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleRemoteAddressConditionResponseOutput) ToDeliveryRuleRemoteAddressConditionResponseOutput() DeliveryRuleRemoteAddressConditionResponseOutput {
	return o
}

func (o DeliveryRuleRemoteAddressConditionResponseOutput) ToDeliveryRuleRemoteAddressConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRemoteAddressConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RemoteAddress'.
func (o DeliveryRuleRemoteAddressConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRemoteAddressConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRemoteAddressConditionResponseOutput) Parameters() RemoteAddressMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRemoteAddressConditionResponse) RemoteAddressMatchConditionParametersResponse {
		return v.Parameters
	}).(RemoteAddressMatchConditionParametersResponseOutput)
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestBody'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestBodyMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleRequestBodyConditionInput is an input type that accepts DeliveryRuleRequestBodyConditionArgs and DeliveryRuleRequestBodyConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestBodyConditionInput` via:
//
//          DeliveryRuleRequestBodyConditionArgs{...}
type DeliveryRuleRequestBodyConditionInput interface {
	pulumi.Input

	ToDeliveryRuleRequestBodyConditionOutput() DeliveryRuleRequestBodyConditionOutput
	ToDeliveryRuleRequestBodyConditionOutputWithContext(context.Context) DeliveryRuleRequestBodyConditionOutput
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestBody'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestBodyMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestBodyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestBodyCondition)(nil)).Elem()
}

func (i DeliveryRuleRequestBodyConditionArgs) ToDeliveryRuleRequestBodyConditionOutput() DeliveryRuleRequestBodyConditionOutput {
	return i.ToDeliveryRuleRequestBodyConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestBodyConditionArgs) ToDeliveryRuleRequestBodyConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestBodyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestBodyConditionOutput)
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestBodyConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestBodyCondition)(nil)).Elem()
}

func (o DeliveryRuleRequestBodyConditionOutput) ToDeliveryRuleRequestBodyConditionOutput() DeliveryRuleRequestBodyConditionOutput {
	return o
}

func (o DeliveryRuleRequestBodyConditionOutput) ToDeliveryRuleRequestBodyConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestBodyConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestBody'.
func (o DeliveryRuleRequestBodyConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestBodyCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestBodyConditionOutput) Parameters() RequestBodyMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleRequestBodyCondition) RequestBodyMatchConditionParameters { return v.Parameters }).(RequestBodyMatchConditionParametersOutput)
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyConditionInvokeResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestBody'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestBodyMatchConditionParametersInvokeResponse `pulumi:"parameters"`
}

// DeliveryRuleRequestBodyConditionInvokeResponseInput is an input type that accepts DeliveryRuleRequestBodyConditionInvokeResponseArgs and DeliveryRuleRequestBodyConditionInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestBodyConditionInvokeResponseInput` via:
//
//          DeliveryRuleRequestBodyConditionInvokeResponseArgs{...}
type DeliveryRuleRequestBodyConditionInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRuleRequestBodyConditionInvokeResponseOutput() DeliveryRuleRequestBodyConditionInvokeResponseOutput
	ToDeliveryRuleRequestBodyConditionInvokeResponseOutputWithContext(context.Context) DeliveryRuleRequestBodyConditionInvokeResponseOutput
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyConditionInvokeResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestBody'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestBodyMatchConditionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestBodyConditionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestBodyConditionInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleRequestBodyConditionInvokeResponseArgs) ToDeliveryRuleRequestBodyConditionInvokeResponseOutput() DeliveryRuleRequestBodyConditionInvokeResponseOutput {
	return i.ToDeliveryRuleRequestBodyConditionInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestBodyConditionInvokeResponseArgs) ToDeliveryRuleRequestBodyConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestBodyConditionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestBodyConditionInvokeResponseOutput)
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyConditionInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestBodyConditionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestBodyConditionInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestBodyConditionInvokeResponseOutput) ToDeliveryRuleRequestBodyConditionInvokeResponseOutput() DeliveryRuleRequestBodyConditionInvokeResponseOutput {
	return o
}

func (o DeliveryRuleRequestBodyConditionInvokeResponseOutput) ToDeliveryRuleRequestBodyConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestBodyConditionInvokeResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestBody'.
func (o DeliveryRuleRequestBodyConditionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestBodyConditionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestBodyConditionInvokeResponseOutput) Parameters() RequestBodyMatchConditionParametersInvokeResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestBodyConditionInvokeResponse) RequestBodyMatchConditionParametersInvokeResponse {
		return v.Parameters
	}).(RequestBodyMatchConditionParametersInvokeResponseOutput)
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestBody'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestBodyMatchConditionParametersResponse `pulumi:"parameters"`
}

// DeliveryRuleRequestBodyConditionResponseInput is an input type that accepts DeliveryRuleRequestBodyConditionResponseArgs and DeliveryRuleRequestBodyConditionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestBodyConditionResponseInput` via:
//
//          DeliveryRuleRequestBodyConditionResponseArgs{...}
type DeliveryRuleRequestBodyConditionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleRequestBodyConditionResponseOutput() DeliveryRuleRequestBodyConditionResponseOutput
	ToDeliveryRuleRequestBodyConditionResponseOutputWithContext(context.Context) DeliveryRuleRequestBodyConditionResponseOutput
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyConditionResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestBody'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestBodyMatchConditionParametersResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestBodyConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestBodyConditionResponse)(nil)).Elem()
}

func (i DeliveryRuleRequestBodyConditionResponseArgs) ToDeliveryRuleRequestBodyConditionResponseOutput() DeliveryRuleRequestBodyConditionResponseOutput {
	return i.ToDeliveryRuleRequestBodyConditionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestBodyConditionResponseArgs) ToDeliveryRuleRequestBodyConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestBodyConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestBodyConditionResponseOutput)
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestBodyConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestBodyConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestBodyConditionResponseOutput) ToDeliveryRuleRequestBodyConditionResponseOutput() DeliveryRuleRequestBodyConditionResponseOutput {
	return o
}

func (o DeliveryRuleRequestBodyConditionResponseOutput) ToDeliveryRuleRequestBodyConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestBodyConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestBody'.
func (o DeliveryRuleRequestBodyConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestBodyConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestBodyConditionResponseOutput) Parameters() RequestBodyMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestBodyConditionResponse) RequestBodyMatchConditionParametersResponse {
		return v.Parameters
	}).(RequestBodyMatchConditionParametersResponseOutput)
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyRequestHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParameters `pulumi:"parameters"`
}

// DeliveryRuleRequestHeaderActionInput is an input type that accepts DeliveryRuleRequestHeaderActionArgs and DeliveryRuleRequestHeaderActionOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestHeaderActionInput` via:
//
//          DeliveryRuleRequestHeaderActionArgs{...}
type DeliveryRuleRequestHeaderActionInput interface {
	pulumi.Input

	ToDeliveryRuleRequestHeaderActionOutput() DeliveryRuleRequestHeaderActionOutput
	ToDeliveryRuleRequestHeaderActionOutputWithContext(context.Context) DeliveryRuleRequestHeaderActionOutput
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderActionArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyRequestHeader'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestHeaderActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderAction)(nil)).Elem()
}

func (i DeliveryRuleRequestHeaderActionArgs) ToDeliveryRuleRequestHeaderActionOutput() DeliveryRuleRequestHeaderActionOutput {
	return i.ToDeliveryRuleRequestHeaderActionOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestHeaderActionArgs) ToDeliveryRuleRequestHeaderActionOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestHeaderActionOutput)
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderActionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestHeaderActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderAction)(nil)).Elem()
}

func (o DeliveryRuleRequestHeaderActionOutput) ToDeliveryRuleRequestHeaderActionOutput() DeliveryRuleRequestHeaderActionOutput {
	return o
}

func (o DeliveryRuleRequestHeaderActionOutput) ToDeliveryRuleRequestHeaderActionOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderActionOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'ModifyRequestHeader'.
func (o DeliveryRuleRequestHeaderActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderAction) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleRequestHeaderActionOutput) Parameters() HeaderActionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderAction) HeaderActionParameters { return v.Parameters }).(HeaderActionParametersOutput)
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderActionInvokeResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyRequestHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersInvokeResponse `pulumi:"parameters"`
}

// DeliveryRuleRequestHeaderActionInvokeResponseInput is an input type that accepts DeliveryRuleRequestHeaderActionInvokeResponseArgs and DeliveryRuleRequestHeaderActionInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestHeaderActionInvokeResponseInput` via:
//
//          DeliveryRuleRequestHeaderActionInvokeResponseArgs{...}
type DeliveryRuleRequestHeaderActionInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRuleRequestHeaderActionInvokeResponseOutput() DeliveryRuleRequestHeaderActionInvokeResponseOutput
	ToDeliveryRuleRequestHeaderActionInvokeResponseOutputWithContext(context.Context) DeliveryRuleRequestHeaderActionInvokeResponseOutput
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderActionInvokeResponseArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyRequestHeader'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestHeaderActionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderActionInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleRequestHeaderActionInvokeResponseArgs) ToDeliveryRuleRequestHeaderActionInvokeResponseOutput() DeliveryRuleRequestHeaderActionInvokeResponseOutput {
	return i.ToDeliveryRuleRequestHeaderActionInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestHeaderActionInvokeResponseArgs) ToDeliveryRuleRequestHeaderActionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderActionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestHeaderActionInvokeResponseOutput)
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderActionInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestHeaderActionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderActionInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestHeaderActionInvokeResponseOutput) ToDeliveryRuleRequestHeaderActionInvokeResponseOutput() DeliveryRuleRequestHeaderActionInvokeResponseOutput {
	return o
}

func (o DeliveryRuleRequestHeaderActionInvokeResponseOutput) ToDeliveryRuleRequestHeaderActionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderActionInvokeResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'ModifyRequestHeader'.
func (o DeliveryRuleRequestHeaderActionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderActionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleRequestHeaderActionInvokeResponseOutput) Parameters() HeaderActionParametersInvokeResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderActionInvokeResponse) HeaderActionParametersInvokeResponse {
		return v.Parameters
	}).(HeaderActionParametersInvokeResponseOutput)
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyRequestHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersResponse `pulumi:"parameters"`
}

// DeliveryRuleRequestHeaderActionResponseInput is an input type that accepts DeliveryRuleRequestHeaderActionResponseArgs and DeliveryRuleRequestHeaderActionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestHeaderActionResponseInput` via:
//
//          DeliveryRuleRequestHeaderActionResponseArgs{...}
type DeliveryRuleRequestHeaderActionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleRequestHeaderActionResponseOutput() DeliveryRuleRequestHeaderActionResponseOutput
	ToDeliveryRuleRequestHeaderActionResponseOutputWithContext(context.Context) DeliveryRuleRequestHeaderActionResponseOutput
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderActionResponseArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyRequestHeader'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestHeaderActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderActionResponse)(nil)).Elem()
}

func (i DeliveryRuleRequestHeaderActionResponseArgs) ToDeliveryRuleRequestHeaderActionResponseOutput() DeliveryRuleRequestHeaderActionResponseOutput {
	return i.ToDeliveryRuleRequestHeaderActionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestHeaderActionResponseArgs) ToDeliveryRuleRequestHeaderActionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestHeaderActionResponseOutput)
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderActionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestHeaderActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderActionResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestHeaderActionResponseOutput) ToDeliveryRuleRequestHeaderActionResponseOutput() DeliveryRuleRequestHeaderActionResponseOutput {
	return o
}

func (o DeliveryRuleRequestHeaderActionResponseOutput) ToDeliveryRuleRequestHeaderActionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'ModifyRequestHeader'.
func (o DeliveryRuleRequestHeaderActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleRequestHeaderActionResponseOutput) Parameters() HeaderActionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderActionResponse) HeaderActionParametersResponse { return v.Parameters }).(HeaderActionParametersResponseOutput)
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestHeaderMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleRequestHeaderConditionInput is an input type that accepts DeliveryRuleRequestHeaderConditionArgs and DeliveryRuleRequestHeaderConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestHeaderConditionInput` via:
//
//          DeliveryRuleRequestHeaderConditionArgs{...}
type DeliveryRuleRequestHeaderConditionInput interface {
	pulumi.Input

	ToDeliveryRuleRequestHeaderConditionOutput() DeliveryRuleRequestHeaderConditionOutput
	ToDeliveryRuleRequestHeaderConditionOutputWithContext(context.Context) DeliveryRuleRequestHeaderConditionOutput
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestHeader'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestHeaderMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestHeaderConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderCondition)(nil)).Elem()
}

func (i DeliveryRuleRequestHeaderConditionArgs) ToDeliveryRuleRequestHeaderConditionOutput() DeliveryRuleRequestHeaderConditionOutput {
	return i.ToDeliveryRuleRequestHeaderConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestHeaderConditionArgs) ToDeliveryRuleRequestHeaderConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestHeaderConditionOutput)
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestHeaderConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderCondition)(nil)).Elem()
}

func (o DeliveryRuleRequestHeaderConditionOutput) ToDeliveryRuleRequestHeaderConditionOutput() DeliveryRuleRequestHeaderConditionOutput {
	return o
}

func (o DeliveryRuleRequestHeaderConditionOutput) ToDeliveryRuleRequestHeaderConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestHeader'.
func (o DeliveryRuleRequestHeaderConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestHeaderConditionOutput) Parameters() RequestHeaderMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderCondition) RequestHeaderMatchConditionParameters { return v.Parameters }).(RequestHeaderMatchConditionParametersOutput)
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderConditionInvokeResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestHeaderMatchConditionParametersInvokeResponse `pulumi:"parameters"`
}

// DeliveryRuleRequestHeaderConditionInvokeResponseInput is an input type that accepts DeliveryRuleRequestHeaderConditionInvokeResponseArgs and DeliveryRuleRequestHeaderConditionInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestHeaderConditionInvokeResponseInput` via:
//
//          DeliveryRuleRequestHeaderConditionInvokeResponseArgs{...}
type DeliveryRuleRequestHeaderConditionInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRuleRequestHeaderConditionInvokeResponseOutput() DeliveryRuleRequestHeaderConditionInvokeResponseOutput
	ToDeliveryRuleRequestHeaderConditionInvokeResponseOutputWithContext(context.Context) DeliveryRuleRequestHeaderConditionInvokeResponseOutput
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderConditionInvokeResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestHeader'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestHeaderMatchConditionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestHeaderConditionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderConditionInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleRequestHeaderConditionInvokeResponseArgs) ToDeliveryRuleRequestHeaderConditionInvokeResponseOutput() DeliveryRuleRequestHeaderConditionInvokeResponseOutput {
	return i.ToDeliveryRuleRequestHeaderConditionInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestHeaderConditionInvokeResponseArgs) ToDeliveryRuleRequestHeaderConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderConditionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestHeaderConditionInvokeResponseOutput)
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderConditionInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestHeaderConditionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderConditionInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestHeaderConditionInvokeResponseOutput) ToDeliveryRuleRequestHeaderConditionInvokeResponseOutput() DeliveryRuleRequestHeaderConditionInvokeResponseOutput {
	return o
}

func (o DeliveryRuleRequestHeaderConditionInvokeResponseOutput) ToDeliveryRuleRequestHeaderConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderConditionInvokeResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestHeader'.
func (o DeliveryRuleRequestHeaderConditionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderConditionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestHeaderConditionInvokeResponseOutput) Parameters() RequestHeaderMatchConditionParametersInvokeResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderConditionInvokeResponse) RequestHeaderMatchConditionParametersInvokeResponse {
		return v.Parameters
	}).(RequestHeaderMatchConditionParametersInvokeResponseOutput)
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestHeaderMatchConditionParametersResponse `pulumi:"parameters"`
}

// DeliveryRuleRequestHeaderConditionResponseInput is an input type that accepts DeliveryRuleRequestHeaderConditionResponseArgs and DeliveryRuleRequestHeaderConditionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestHeaderConditionResponseInput` via:
//
//          DeliveryRuleRequestHeaderConditionResponseArgs{...}
type DeliveryRuleRequestHeaderConditionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleRequestHeaderConditionResponseOutput() DeliveryRuleRequestHeaderConditionResponseOutput
	ToDeliveryRuleRequestHeaderConditionResponseOutputWithContext(context.Context) DeliveryRuleRequestHeaderConditionResponseOutput
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderConditionResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestHeader'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestHeaderMatchConditionParametersResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestHeaderConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderConditionResponse)(nil)).Elem()
}

func (i DeliveryRuleRequestHeaderConditionResponseArgs) ToDeliveryRuleRequestHeaderConditionResponseOutput() DeliveryRuleRequestHeaderConditionResponseOutput {
	return i.ToDeliveryRuleRequestHeaderConditionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestHeaderConditionResponseArgs) ToDeliveryRuleRequestHeaderConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestHeaderConditionResponseOutput)
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestHeaderConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestHeaderConditionResponseOutput) ToDeliveryRuleRequestHeaderConditionResponseOutput() DeliveryRuleRequestHeaderConditionResponseOutput {
	return o
}

func (o DeliveryRuleRequestHeaderConditionResponseOutput) ToDeliveryRuleRequestHeaderConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestHeader'.
func (o DeliveryRuleRequestHeaderConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestHeaderConditionResponseOutput) Parameters() RequestHeaderMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderConditionResponse) RequestHeaderMatchConditionParametersResponse {
		return v.Parameters
	}).(RequestHeaderMatchConditionParametersResponseOutput)
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestMethod'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestMethodMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleRequestMethodConditionInput is an input type that accepts DeliveryRuleRequestMethodConditionArgs and DeliveryRuleRequestMethodConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestMethodConditionInput` via:
//
//          DeliveryRuleRequestMethodConditionArgs{...}
type DeliveryRuleRequestMethodConditionInput interface {
	pulumi.Input

	ToDeliveryRuleRequestMethodConditionOutput() DeliveryRuleRequestMethodConditionOutput
	ToDeliveryRuleRequestMethodConditionOutputWithContext(context.Context) DeliveryRuleRequestMethodConditionOutput
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestMethod'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestMethodMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestMethodConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestMethodCondition)(nil)).Elem()
}

func (i DeliveryRuleRequestMethodConditionArgs) ToDeliveryRuleRequestMethodConditionOutput() DeliveryRuleRequestMethodConditionOutput {
	return i.ToDeliveryRuleRequestMethodConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestMethodConditionArgs) ToDeliveryRuleRequestMethodConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestMethodConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestMethodConditionOutput)
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestMethodConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestMethodCondition)(nil)).Elem()
}

func (o DeliveryRuleRequestMethodConditionOutput) ToDeliveryRuleRequestMethodConditionOutput() DeliveryRuleRequestMethodConditionOutput {
	return o
}

func (o DeliveryRuleRequestMethodConditionOutput) ToDeliveryRuleRequestMethodConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestMethodConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestMethod'.
func (o DeliveryRuleRequestMethodConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestMethodCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestMethodConditionOutput) Parameters() RequestMethodMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleRequestMethodCondition) RequestMethodMatchConditionParameters { return v.Parameters }).(RequestMethodMatchConditionParametersOutput)
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodConditionInvokeResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestMethod'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestMethodMatchConditionParametersInvokeResponse `pulumi:"parameters"`
}

// DeliveryRuleRequestMethodConditionInvokeResponseInput is an input type that accepts DeliveryRuleRequestMethodConditionInvokeResponseArgs and DeliveryRuleRequestMethodConditionInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestMethodConditionInvokeResponseInput` via:
//
//          DeliveryRuleRequestMethodConditionInvokeResponseArgs{...}
type DeliveryRuleRequestMethodConditionInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRuleRequestMethodConditionInvokeResponseOutput() DeliveryRuleRequestMethodConditionInvokeResponseOutput
	ToDeliveryRuleRequestMethodConditionInvokeResponseOutputWithContext(context.Context) DeliveryRuleRequestMethodConditionInvokeResponseOutput
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodConditionInvokeResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestMethod'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestMethodMatchConditionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestMethodConditionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestMethodConditionInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleRequestMethodConditionInvokeResponseArgs) ToDeliveryRuleRequestMethodConditionInvokeResponseOutput() DeliveryRuleRequestMethodConditionInvokeResponseOutput {
	return i.ToDeliveryRuleRequestMethodConditionInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestMethodConditionInvokeResponseArgs) ToDeliveryRuleRequestMethodConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestMethodConditionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestMethodConditionInvokeResponseOutput)
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodConditionInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestMethodConditionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestMethodConditionInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestMethodConditionInvokeResponseOutput) ToDeliveryRuleRequestMethodConditionInvokeResponseOutput() DeliveryRuleRequestMethodConditionInvokeResponseOutput {
	return o
}

func (o DeliveryRuleRequestMethodConditionInvokeResponseOutput) ToDeliveryRuleRequestMethodConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestMethodConditionInvokeResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestMethod'.
func (o DeliveryRuleRequestMethodConditionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestMethodConditionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestMethodConditionInvokeResponseOutput) Parameters() RequestMethodMatchConditionParametersInvokeResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestMethodConditionInvokeResponse) RequestMethodMatchConditionParametersInvokeResponse {
		return v.Parameters
	}).(RequestMethodMatchConditionParametersInvokeResponseOutput)
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestMethod'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestMethodMatchConditionParametersResponse `pulumi:"parameters"`
}

// DeliveryRuleRequestMethodConditionResponseInput is an input type that accepts DeliveryRuleRequestMethodConditionResponseArgs and DeliveryRuleRequestMethodConditionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestMethodConditionResponseInput` via:
//
//          DeliveryRuleRequestMethodConditionResponseArgs{...}
type DeliveryRuleRequestMethodConditionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleRequestMethodConditionResponseOutput() DeliveryRuleRequestMethodConditionResponseOutput
	ToDeliveryRuleRequestMethodConditionResponseOutputWithContext(context.Context) DeliveryRuleRequestMethodConditionResponseOutput
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodConditionResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestMethod'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestMethodMatchConditionParametersResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestMethodConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestMethodConditionResponse)(nil)).Elem()
}

func (i DeliveryRuleRequestMethodConditionResponseArgs) ToDeliveryRuleRequestMethodConditionResponseOutput() DeliveryRuleRequestMethodConditionResponseOutput {
	return i.ToDeliveryRuleRequestMethodConditionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestMethodConditionResponseArgs) ToDeliveryRuleRequestMethodConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestMethodConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestMethodConditionResponseOutput)
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestMethodConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestMethodConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestMethodConditionResponseOutput) ToDeliveryRuleRequestMethodConditionResponseOutput() DeliveryRuleRequestMethodConditionResponseOutput {
	return o
}

func (o DeliveryRuleRequestMethodConditionResponseOutput) ToDeliveryRuleRequestMethodConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestMethodConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestMethod'.
func (o DeliveryRuleRequestMethodConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestMethodConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestMethodConditionResponseOutput) Parameters() RequestMethodMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestMethodConditionResponse) RequestMethodMatchConditionParametersResponse {
		return v.Parameters
	}).(RequestMethodMatchConditionParametersResponseOutput)
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestScheme'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestSchemeMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleRequestSchemeConditionInput is an input type that accepts DeliveryRuleRequestSchemeConditionArgs and DeliveryRuleRequestSchemeConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestSchemeConditionInput` via:
//
//          DeliveryRuleRequestSchemeConditionArgs{...}
type DeliveryRuleRequestSchemeConditionInput interface {
	pulumi.Input

	ToDeliveryRuleRequestSchemeConditionOutput() DeliveryRuleRequestSchemeConditionOutput
	ToDeliveryRuleRequestSchemeConditionOutputWithContext(context.Context) DeliveryRuleRequestSchemeConditionOutput
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestScheme'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestSchemeMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestSchemeConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestSchemeCondition)(nil)).Elem()
}

func (i DeliveryRuleRequestSchemeConditionArgs) ToDeliveryRuleRequestSchemeConditionOutput() DeliveryRuleRequestSchemeConditionOutput {
	return i.ToDeliveryRuleRequestSchemeConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestSchemeConditionArgs) ToDeliveryRuleRequestSchemeConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestSchemeConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestSchemeConditionOutput)
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestSchemeConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestSchemeCondition)(nil)).Elem()
}

func (o DeliveryRuleRequestSchemeConditionOutput) ToDeliveryRuleRequestSchemeConditionOutput() DeliveryRuleRequestSchemeConditionOutput {
	return o
}

func (o DeliveryRuleRequestSchemeConditionOutput) ToDeliveryRuleRequestSchemeConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestSchemeConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestScheme'.
func (o DeliveryRuleRequestSchemeConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestSchemeCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestSchemeConditionOutput) Parameters() RequestSchemeMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleRequestSchemeCondition) RequestSchemeMatchConditionParameters { return v.Parameters }).(RequestSchemeMatchConditionParametersOutput)
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeConditionInvokeResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestScheme'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestSchemeMatchConditionParametersInvokeResponse `pulumi:"parameters"`
}

// DeliveryRuleRequestSchemeConditionInvokeResponseInput is an input type that accepts DeliveryRuleRequestSchemeConditionInvokeResponseArgs and DeliveryRuleRequestSchemeConditionInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestSchemeConditionInvokeResponseInput` via:
//
//          DeliveryRuleRequestSchemeConditionInvokeResponseArgs{...}
type DeliveryRuleRequestSchemeConditionInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRuleRequestSchemeConditionInvokeResponseOutput() DeliveryRuleRequestSchemeConditionInvokeResponseOutput
	ToDeliveryRuleRequestSchemeConditionInvokeResponseOutputWithContext(context.Context) DeliveryRuleRequestSchemeConditionInvokeResponseOutput
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeConditionInvokeResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestScheme'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestSchemeMatchConditionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestSchemeConditionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestSchemeConditionInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleRequestSchemeConditionInvokeResponseArgs) ToDeliveryRuleRequestSchemeConditionInvokeResponseOutput() DeliveryRuleRequestSchemeConditionInvokeResponseOutput {
	return i.ToDeliveryRuleRequestSchemeConditionInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestSchemeConditionInvokeResponseArgs) ToDeliveryRuleRequestSchemeConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestSchemeConditionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestSchemeConditionInvokeResponseOutput)
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeConditionInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestSchemeConditionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestSchemeConditionInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestSchemeConditionInvokeResponseOutput) ToDeliveryRuleRequestSchemeConditionInvokeResponseOutput() DeliveryRuleRequestSchemeConditionInvokeResponseOutput {
	return o
}

func (o DeliveryRuleRequestSchemeConditionInvokeResponseOutput) ToDeliveryRuleRequestSchemeConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestSchemeConditionInvokeResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestScheme'.
func (o DeliveryRuleRequestSchemeConditionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestSchemeConditionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestSchemeConditionInvokeResponseOutput) Parameters() RequestSchemeMatchConditionParametersInvokeResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestSchemeConditionInvokeResponse) RequestSchemeMatchConditionParametersInvokeResponse {
		return v.Parameters
	}).(RequestSchemeMatchConditionParametersInvokeResponseOutput)
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestScheme'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestSchemeMatchConditionParametersResponse `pulumi:"parameters"`
}

// DeliveryRuleRequestSchemeConditionResponseInput is an input type that accepts DeliveryRuleRequestSchemeConditionResponseArgs and DeliveryRuleRequestSchemeConditionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestSchemeConditionResponseInput` via:
//
//          DeliveryRuleRequestSchemeConditionResponseArgs{...}
type DeliveryRuleRequestSchemeConditionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleRequestSchemeConditionResponseOutput() DeliveryRuleRequestSchemeConditionResponseOutput
	ToDeliveryRuleRequestSchemeConditionResponseOutputWithContext(context.Context) DeliveryRuleRequestSchemeConditionResponseOutput
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeConditionResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestScheme'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestSchemeMatchConditionParametersResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestSchemeConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestSchemeConditionResponse)(nil)).Elem()
}

func (i DeliveryRuleRequestSchemeConditionResponseArgs) ToDeliveryRuleRequestSchemeConditionResponseOutput() DeliveryRuleRequestSchemeConditionResponseOutput {
	return i.ToDeliveryRuleRequestSchemeConditionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestSchemeConditionResponseArgs) ToDeliveryRuleRequestSchemeConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestSchemeConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestSchemeConditionResponseOutput)
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestSchemeConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestSchemeConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestSchemeConditionResponseOutput) ToDeliveryRuleRequestSchemeConditionResponseOutput() DeliveryRuleRequestSchemeConditionResponseOutput {
	return o
}

func (o DeliveryRuleRequestSchemeConditionResponseOutput) ToDeliveryRuleRequestSchemeConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestSchemeConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestScheme'.
func (o DeliveryRuleRequestSchemeConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestSchemeConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestSchemeConditionResponseOutput) Parameters() RequestSchemeMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestSchemeConditionResponse) RequestSchemeMatchConditionParametersResponse {
		return v.Parameters
	}).(RequestSchemeMatchConditionParametersResponseOutput)
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestUri'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestUriMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleRequestUriConditionInput is an input type that accepts DeliveryRuleRequestUriConditionArgs and DeliveryRuleRequestUriConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestUriConditionInput` via:
//
//          DeliveryRuleRequestUriConditionArgs{...}
type DeliveryRuleRequestUriConditionInput interface {
	pulumi.Input

	ToDeliveryRuleRequestUriConditionOutput() DeliveryRuleRequestUriConditionOutput
	ToDeliveryRuleRequestUriConditionOutputWithContext(context.Context) DeliveryRuleRequestUriConditionOutput
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestUri'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestUriMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestUriConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestUriCondition)(nil)).Elem()
}

func (i DeliveryRuleRequestUriConditionArgs) ToDeliveryRuleRequestUriConditionOutput() DeliveryRuleRequestUriConditionOutput {
	return i.ToDeliveryRuleRequestUriConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestUriConditionArgs) ToDeliveryRuleRequestUriConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestUriConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestUriConditionOutput)
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestUriConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestUriCondition)(nil)).Elem()
}

func (o DeliveryRuleRequestUriConditionOutput) ToDeliveryRuleRequestUriConditionOutput() DeliveryRuleRequestUriConditionOutput {
	return o
}

func (o DeliveryRuleRequestUriConditionOutput) ToDeliveryRuleRequestUriConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestUriConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestUri'.
func (o DeliveryRuleRequestUriConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestUriCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestUriConditionOutput) Parameters() RequestUriMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleRequestUriCondition) RequestUriMatchConditionParameters { return v.Parameters }).(RequestUriMatchConditionParametersOutput)
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriConditionInvokeResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestUri'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestUriMatchConditionParametersInvokeResponse `pulumi:"parameters"`
}

// DeliveryRuleRequestUriConditionInvokeResponseInput is an input type that accepts DeliveryRuleRequestUriConditionInvokeResponseArgs and DeliveryRuleRequestUriConditionInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestUriConditionInvokeResponseInput` via:
//
//          DeliveryRuleRequestUriConditionInvokeResponseArgs{...}
type DeliveryRuleRequestUriConditionInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRuleRequestUriConditionInvokeResponseOutput() DeliveryRuleRequestUriConditionInvokeResponseOutput
	ToDeliveryRuleRequestUriConditionInvokeResponseOutputWithContext(context.Context) DeliveryRuleRequestUriConditionInvokeResponseOutput
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriConditionInvokeResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestUri'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestUriMatchConditionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestUriConditionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestUriConditionInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleRequestUriConditionInvokeResponseArgs) ToDeliveryRuleRequestUriConditionInvokeResponseOutput() DeliveryRuleRequestUriConditionInvokeResponseOutput {
	return i.ToDeliveryRuleRequestUriConditionInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestUriConditionInvokeResponseArgs) ToDeliveryRuleRequestUriConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestUriConditionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestUriConditionInvokeResponseOutput)
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriConditionInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestUriConditionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestUriConditionInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestUriConditionInvokeResponseOutput) ToDeliveryRuleRequestUriConditionInvokeResponseOutput() DeliveryRuleRequestUriConditionInvokeResponseOutput {
	return o
}

func (o DeliveryRuleRequestUriConditionInvokeResponseOutput) ToDeliveryRuleRequestUriConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestUriConditionInvokeResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestUri'.
func (o DeliveryRuleRequestUriConditionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestUriConditionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestUriConditionInvokeResponseOutput) Parameters() RequestUriMatchConditionParametersInvokeResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestUriConditionInvokeResponse) RequestUriMatchConditionParametersInvokeResponse {
		return v.Parameters
	}).(RequestUriMatchConditionParametersInvokeResponseOutput)
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestUri'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestUriMatchConditionParametersResponse `pulumi:"parameters"`
}

// DeliveryRuleRequestUriConditionResponseInput is an input type that accepts DeliveryRuleRequestUriConditionResponseArgs and DeliveryRuleRequestUriConditionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestUriConditionResponseInput` via:
//
//          DeliveryRuleRequestUriConditionResponseArgs{...}
type DeliveryRuleRequestUriConditionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleRequestUriConditionResponseOutput() DeliveryRuleRequestUriConditionResponseOutput
	ToDeliveryRuleRequestUriConditionResponseOutputWithContext(context.Context) DeliveryRuleRequestUriConditionResponseOutput
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriConditionResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestUri'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestUriMatchConditionParametersResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestUriConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestUriConditionResponse)(nil)).Elem()
}

func (i DeliveryRuleRequestUriConditionResponseArgs) ToDeliveryRuleRequestUriConditionResponseOutput() DeliveryRuleRequestUriConditionResponseOutput {
	return i.ToDeliveryRuleRequestUriConditionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestUriConditionResponseArgs) ToDeliveryRuleRequestUriConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestUriConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestUriConditionResponseOutput)
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestUriConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestUriConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestUriConditionResponseOutput) ToDeliveryRuleRequestUriConditionResponseOutput() DeliveryRuleRequestUriConditionResponseOutput {
	return o
}

func (o DeliveryRuleRequestUriConditionResponseOutput) ToDeliveryRuleRequestUriConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestUriConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'RequestUri'.
func (o DeliveryRuleRequestUriConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestUriConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestUriConditionResponseOutput) Parameters() RequestUriMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestUriConditionResponse) RequestUriMatchConditionParametersResponse {
		return v.Parameters
	}).(RequestUriMatchConditionParametersResponseOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleResponse struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions []interface{} `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions []interface{} `pulumi:"conditions"`
	// Name of the rule
	Name *string `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order int `pulumi:"order"`
}

// DeliveryRuleResponseInput is an input type that accepts DeliveryRuleResponseArgs and DeliveryRuleResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleResponseInput` via:
//
//          DeliveryRuleResponseArgs{...}
type DeliveryRuleResponseInput interface {
	pulumi.Input

	ToDeliveryRuleResponseOutput() DeliveryRuleResponseOutput
	ToDeliveryRuleResponseOutputWithContext(context.Context) DeliveryRuleResponseOutput
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleResponseArgs struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions pulumi.ArrayInput `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions pulumi.ArrayInput `pulumi:"conditions"`
	// Name of the rule
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order pulumi.IntInput `pulumi:"order"`
}

func (DeliveryRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponse)(nil)).Elem()
}

func (i DeliveryRuleResponseArgs) ToDeliveryRuleResponseOutput() DeliveryRuleResponseOutput {
	return i.ToDeliveryRuleResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleResponseArgs) ToDeliveryRuleResponseOutputWithContext(ctx context.Context) DeliveryRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleResponseOutput)
}

// DeliveryRuleResponseArrayInput is an input type that accepts DeliveryRuleResponseArray and DeliveryRuleResponseArrayOutput values.
// You can construct a concrete instance of `DeliveryRuleResponseArrayInput` via:
//
//          DeliveryRuleResponseArray{ DeliveryRuleResponseArgs{...} }
type DeliveryRuleResponseArrayInput interface {
	pulumi.Input

	ToDeliveryRuleResponseArrayOutput() DeliveryRuleResponseArrayOutput
	ToDeliveryRuleResponseArrayOutputWithContext(context.Context) DeliveryRuleResponseArrayOutput
}

type DeliveryRuleResponseArray []DeliveryRuleResponseInput

func (DeliveryRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRuleResponse)(nil)).Elem()
}

func (i DeliveryRuleResponseArray) ToDeliveryRuleResponseArrayOutput() DeliveryRuleResponseArrayOutput {
	return i.ToDeliveryRuleResponseArrayOutputWithContext(context.Background())
}

func (i DeliveryRuleResponseArray) ToDeliveryRuleResponseArrayOutputWithContext(ctx context.Context) DeliveryRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleResponseArrayOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponse)(nil)).Elem()
}

func (o DeliveryRuleResponseOutput) ToDeliveryRuleResponseOutput() DeliveryRuleResponseOutput {
	return o
}

func (o DeliveryRuleResponseOutput) ToDeliveryRuleResponseOutputWithContext(ctx context.Context) DeliveryRuleResponseOutput {
	return o
}

// A list of actions that are executed when all the conditions of a rule are satisfied.
func (o DeliveryRuleResponseOutput) Actions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) []interface{} { return v.Actions }).(pulumi.ArrayOutput)
}

// A list of conditions that must be matched for the actions to be executed
func (o DeliveryRuleResponseOutput) Conditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) []interface{} { return v.Conditions }).(pulumi.ArrayOutput)
}

// Name of the rule
func (o DeliveryRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
func (o DeliveryRuleResponseOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) int { return v.Order }).(pulumi.IntOutput)
}

type DeliveryRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (DeliveryRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRuleResponse)(nil)).Elem()
}

func (o DeliveryRuleResponseArrayOutput) ToDeliveryRuleResponseArrayOutput() DeliveryRuleResponseArrayOutput {
	return o
}

func (o DeliveryRuleResponseArrayOutput) ToDeliveryRuleResponseArrayOutputWithContext(ctx context.Context) DeliveryRuleResponseArrayOutput {
	return o
}

func (o DeliveryRuleResponseArrayOutput) Index(i pulumi.IntInput) DeliveryRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryRuleResponse {
		return vs[0].([]DeliveryRuleResponse)[vs[1].(int)]
	}).(DeliveryRuleResponseOutput)
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyResponseHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParameters `pulumi:"parameters"`
}

// DeliveryRuleResponseHeaderActionInput is an input type that accepts DeliveryRuleResponseHeaderActionArgs and DeliveryRuleResponseHeaderActionOutput values.
// You can construct a concrete instance of `DeliveryRuleResponseHeaderActionInput` via:
//
//          DeliveryRuleResponseHeaderActionArgs{...}
type DeliveryRuleResponseHeaderActionInput interface {
	pulumi.Input

	ToDeliveryRuleResponseHeaderActionOutput() DeliveryRuleResponseHeaderActionOutput
	ToDeliveryRuleResponseHeaderActionOutputWithContext(context.Context) DeliveryRuleResponseHeaderActionOutput
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderActionArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyResponseHeader'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleResponseHeaderActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponseHeaderAction)(nil)).Elem()
}

func (i DeliveryRuleResponseHeaderActionArgs) ToDeliveryRuleResponseHeaderActionOutput() DeliveryRuleResponseHeaderActionOutput {
	return i.ToDeliveryRuleResponseHeaderActionOutputWithContext(context.Background())
}

func (i DeliveryRuleResponseHeaderActionArgs) ToDeliveryRuleResponseHeaderActionOutputWithContext(ctx context.Context) DeliveryRuleResponseHeaderActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleResponseHeaderActionOutput)
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderActionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleResponseHeaderActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponseHeaderAction)(nil)).Elem()
}

func (o DeliveryRuleResponseHeaderActionOutput) ToDeliveryRuleResponseHeaderActionOutput() DeliveryRuleResponseHeaderActionOutput {
	return o
}

func (o DeliveryRuleResponseHeaderActionOutput) ToDeliveryRuleResponseHeaderActionOutputWithContext(ctx context.Context) DeliveryRuleResponseHeaderActionOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'ModifyResponseHeader'.
func (o DeliveryRuleResponseHeaderActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleResponseHeaderAction) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleResponseHeaderActionOutput) Parameters() HeaderActionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleResponseHeaderAction) HeaderActionParameters { return v.Parameters }).(HeaderActionParametersOutput)
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderActionInvokeResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyResponseHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersInvokeResponse `pulumi:"parameters"`
}

// DeliveryRuleResponseHeaderActionInvokeResponseInput is an input type that accepts DeliveryRuleResponseHeaderActionInvokeResponseArgs and DeliveryRuleResponseHeaderActionInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleResponseHeaderActionInvokeResponseInput` via:
//
//          DeliveryRuleResponseHeaderActionInvokeResponseArgs{...}
type DeliveryRuleResponseHeaderActionInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRuleResponseHeaderActionInvokeResponseOutput() DeliveryRuleResponseHeaderActionInvokeResponseOutput
	ToDeliveryRuleResponseHeaderActionInvokeResponseOutputWithContext(context.Context) DeliveryRuleResponseHeaderActionInvokeResponseOutput
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderActionInvokeResponseArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyResponseHeader'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleResponseHeaderActionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponseHeaderActionInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleResponseHeaderActionInvokeResponseArgs) ToDeliveryRuleResponseHeaderActionInvokeResponseOutput() DeliveryRuleResponseHeaderActionInvokeResponseOutput {
	return i.ToDeliveryRuleResponseHeaderActionInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleResponseHeaderActionInvokeResponseArgs) ToDeliveryRuleResponseHeaderActionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleResponseHeaderActionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleResponseHeaderActionInvokeResponseOutput)
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderActionInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleResponseHeaderActionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponseHeaderActionInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleResponseHeaderActionInvokeResponseOutput) ToDeliveryRuleResponseHeaderActionInvokeResponseOutput() DeliveryRuleResponseHeaderActionInvokeResponseOutput {
	return o
}

func (o DeliveryRuleResponseHeaderActionInvokeResponseOutput) ToDeliveryRuleResponseHeaderActionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleResponseHeaderActionInvokeResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'ModifyResponseHeader'.
func (o DeliveryRuleResponseHeaderActionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleResponseHeaderActionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleResponseHeaderActionInvokeResponseOutput) Parameters() HeaderActionParametersInvokeResponseOutput {
	return o.ApplyT(func(v DeliveryRuleResponseHeaderActionInvokeResponse) HeaderActionParametersInvokeResponse {
		return v.Parameters
	}).(HeaderActionParametersInvokeResponseOutput)
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyResponseHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersResponse `pulumi:"parameters"`
}

// DeliveryRuleResponseHeaderActionResponseInput is an input type that accepts DeliveryRuleResponseHeaderActionResponseArgs and DeliveryRuleResponseHeaderActionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleResponseHeaderActionResponseInput` via:
//
//          DeliveryRuleResponseHeaderActionResponseArgs{...}
type DeliveryRuleResponseHeaderActionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleResponseHeaderActionResponseOutput() DeliveryRuleResponseHeaderActionResponseOutput
	ToDeliveryRuleResponseHeaderActionResponseOutputWithContext(context.Context) DeliveryRuleResponseHeaderActionResponseOutput
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderActionResponseArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyResponseHeader'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleResponseHeaderActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponseHeaderActionResponse)(nil)).Elem()
}

func (i DeliveryRuleResponseHeaderActionResponseArgs) ToDeliveryRuleResponseHeaderActionResponseOutput() DeliveryRuleResponseHeaderActionResponseOutput {
	return i.ToDeliveryRuleResponseHeaderActionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleResponseHeaderActionResponseArgs) ToDeliveryRuleResponseHeaderActionResponseOutputWithContext(ctx context.Context) DeliveryRuleResponseHeaderActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleResponseHeaderActionResponseOutput)
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderActionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleResponseHeaderActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponseHeaderActionResponse)(nil)).Elem()
}

func (o DeliveryRuleResponseHeaderActionResponseOutput) ToDeliveryRuleResponseHeaderActionResponseOutput() DeliveryRuleResponseHeaderActionResponseOutput {
	return o
}

func (o DeliveryRuleResponseHeaderActionResponseOutput) ToDeliveryRuleResponseHeaderActionResponseOutputWithContext(ctx context.Context) DeliveryRuleResponseHeaderActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'ModifyResponseHeader'.
func (o DeliveryRuleResponseHeaderActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleResponseHeaderActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleResponseHeaderActionResponseOutput) Parameters() HeaderActionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleResponseHeaderActionResponse) HeaderActionParametersResponse { return v.Parameters }).(HeaderActionParametersResponseOutput)
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileExtension'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileExtensionMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleUrlFileExtensionConditionInput is an input type that accepts DeliveryRuleUrlFileExtensionConditionArgs and DeliveryRuleUrlFileExtensionConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleUrlFileExtensionConditionInput` via:
//
//          DeliveryRuleUrlFileExtensionConditionArgs{...}
type DeliveryRuleUrlFileExtensionConditionInput interface {
	pulumi.Input

	ToDeliveryRuleUrlFileExtensionConditionOutput() DeliveryRuleUrlFileExtensionConditionOutput
	ToDeliveryRuleUrlFileExtensionConditionOutputWithContext(context.Context) DeliveryRuleUrlFileExtensionConditionOutput
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileExtension'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileExtensionMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleUrlFileExtensionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileExtensionCondition)(nil)).Elem()
}

func (i DeliveryRuleUrlFileExtensionConditionArgs) ToDeliveryRuleUrlFileExtensionConditionOutput() DeliveryRuleUrlFileExtensionConditionOutput {
	return i.ToDeliveryRuleUrlFileExtensionConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleUrlFileExtensionConditionArgs) ToDeliveryRuleUrlFileExtensionConditionOutputWithContext(ctx context.Context) DeliveryRuleUrlFileExtensionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleUrlFileExtensionConditionOutput)
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleUrlFileExtensionConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileExtensionCondition)(nil)).Elem()
}

func (o DeliveryRuleUrlFileExtensionConditionOutput) ToDeliveryRuleUrlFileExtensionConditionOutput() DeliveryRuleUrlFileExtensionConditionOutput {
	return o
}

func (o DeliveryRuleUrlFileExtensionConditionOutput) ToDeliveryRuleUrlFileExtensionConditionOutputWithContext(ctx context.Context) DeliveryRuleUrlFileExtensionConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'UrlFileExtension'.
func (o DeliveryRuleUrlFileExtensionConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileExtensionCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleUrlFileExtensionConditionOutput) Parameters() UrlFileExtensionMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileExtensionCondition) UrlFileExtensionMatchConditionParameters {
		return v.Parameters
	}).(UrlFileExtensionMatchConditionParametersOutput)
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionConditionInvokeResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileExtension'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileExtensionMatchConditionParametersInvokeResponse `pulumi:"parameters"`
}

// DeliveryRuleUrlFileExtensionConditionInvokeResponseInput is an input type that accepts DeliveryRuleUrlFileExtensionConditionInvokeResponseArgs and DeliveryRuleUrlFileExtensionConditionInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleUrlFileExtensionConditionInvokeResponseInput` via:
//
//          DeliveryRuleUrlFileExtensionConditionInvokeResponseArgs{...}
type DeliveryRuleUrlFileExtensionConditionInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRuleUrlFileExtensionConditionInvokeResponseOutput() DeliveryRuleUrlFileExtensionConditionInvokeResponseOutput
	ToDeliveryRuleUrlFileExtensionConditionInvokeResponseOutputWithContext(context.Context) DeliveryRuleUrlFileExtensionConditionInvokeResponseOutput
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionConditionInvokeResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileExtension'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileExtensionMatchConditionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleUrlFileExtensionConditionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileExtensionConditionInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleUrlFileExtensionConditionInvokeResponseArgs) ToDeliveryRuleUrlFileExtensionConditionInvokeResponseOutput() DeliveryRuleUrlFileExtensionConditionInvokeResponseOutput {
	return i.ToDeliveryRuleUrlFileExtensionConditionInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleUrlFileExtensionConditionInvokeResponseArgs) ToDeliveryRuleUrlFileExtensionConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleUrlFileExtensionConditionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleUrlFileExtensionConditionInvokeResponseOutput)
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionConditionInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleUrlFileExtensionConditionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileExtensionConditionInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleUrlFileExtensionConditionInvokeResponseOutput) ToDeliveryRuleUrlFileExtensionConditionInvokeResponseOutput() DeliveryRuleUrlFileExtensionConditionInvokeResponseOutput {
	return o
}

func (o DeliveryRuleUrlFileExtensionConditionInvokeResponseOutput) ToDeliveryRuleUrlFileExtensionConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleUrlFileExtensionConditionInvokeResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'UrlFileExtension'.
func (o DeliveryRuleUrlFileExtensionConditionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileExtensionConditionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleUrlFileExtensionConditionInvokeResponseOutput) Parameters() UrlFileExtensionMatchConditionParametersInvokeResponseOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileExtensionConditionInvokeResponse) UrlFileExtensionMatchConditionParametersInvokeResponse {
		return v.Parameters
	}).(UrlFileExtensionMatchConditionParametersInvokeResponseOutput)
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileExtension'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileExtensionMatchConditionParametersResponse `pulumi:"parameters"`
}

// DeliveryRuleUrlFileExtensionConditionResponseInput is an input type that accepts DeliveryRuleUrlFileExtensionConditionResponseArgs and DeliveryRuleUrlFileExtensionConditionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleUrlFileExtensionConditionResponseInput` via:
//
//          DeliveryRuleUrlFileExtensionConditionResponseArgs{...}
type DeliveryRuleUrlFileExtensionConditionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleUrlFileExtensionConditionResponseOutput() DeliveryRuleUrlFileExtensionConditionResponseOutput
	ToDeliveryRuleUrlFileExtensionConditionResponseOutputWithContext(context.Context) DeliveryRuleUrlFileExtensionConditionResponseOutput
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionConditionResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileExtension'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileExtensionMatchConditionParametersResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleUrlFileExtensionConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileExtensionConditionResponse)(nil)).Elem()
}

func (i DeliveryRuleUrlFileExtensionConditionResponseArgs) ToDeliveryRuleUrlFileExtensionConditionResponseOutput() DeliveryRuleUrlFileExtensionConditionResponseOutput {
	return i.ToDeliveryRuleUrlFileExtensionConditionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleUrlFileExtensionConditionResponseArgs) ToDeliveryRuleUrlFileExtensionConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleUrlFileExtensionConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleUrlFileExtensionConditionResponseOutput)
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleUrlFileExtensionConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileExtensionConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleUrlFileExtensionConditionResponseOutput) ToDeliveryRuleUrlFileExtensionConditionResponseOutput() DeliveryRuleUrlFileExtensionConditionResponseOutput {
	return o
}

func (o DeliveryRuleUrlFileExtensionConditionResponseOutput) ToDeliveryRuleUrlFileExtensionConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleUrlFileExtensionConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'UrlFileExtension'.
func (o DeliveryRuleUrlFileExtensionConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileExtensionConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleUrlFileExtensionConditionResponseOutput) Parameters() UrlFileExtensionMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileExtensionConditionResponse) UrlFileExtensionMatchConditionParametersResponse {
		return v.Parameters
	}).(UrlFileExtensionMatchConditionParametersResponseOutput)
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileName'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileNameMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleUrlFileNameConditionInput is an input type that accepts DeliveryRuleUrlFileNameConditionArgs and DeliveryRuleUrlFileNameConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleUrlFileNameConditionInput` via:
//
//          DeliveryRuleUrlFileNameConditionArgs{...}
type DeliveryRuleUrlFileNameConditionInput interface {
	pulumi.Input

	ToDeliveryRuleUrlFileNameConditionOutput() DeliveryRuleUrlFileNameConditionOutput
	ToDeliveryRuleUrlFileNameConditionOutputWithContext(context.Context) DeliveryRuleUrlFileNameConditionOutput
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileName'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileNameMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleUrlFileNameConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileNameCondition)(nil)).Elem()
}

func (i DeliveryRuleUrlFileNameConditionArgs) ToDeliveryRuleUrlFileNameConditionOutput() DeliveryRuleUrlFileNameConditionOutput {
	return i.ToDeliveryRuleUrlFileNameConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleUrlFileNameConditionArgs) ToDeliveryRuleUrlFileNameConditionOutputWithContext(ctx context.Context) DeliveryRuleUrlFileNameConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleUrlFileNameConditionOutput)
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleUrlFileNameConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileNameCondition)(nil)).Elem()
}

func (o DeliveryRuleUrlFileNameConditionOutput) ToDeliveryRuleUrlFileNameConditionOutput() DeliveryRuleUrlFileNameConditionOutput {
	return o
}

func (o DeliveryRuleUrlFileNameConditionOutput) ToDeliveryRuleUrlFileNameConditionOutputWithContext(ctx context.Context) DeliveryRuleUrlFileNameConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'UrlFileName'.
func (o DeliveryRuleUrlFileNameConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileNameCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleUrlFileNameConditionOutput) Parameters() UrlFileNameMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileNameCondition) UrlFileNameMatchConditionParameters { return v.Parameters }).(UrlFileNameMatchConditionParametersOutput)
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameConditionInvokeResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileName'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileNameMatchConditionParametersInvokeResponse `pulumi:"parameters"`
}

// DeliveryRuleUrlFileNameConditionInvokeResponseInput is an input type that accepts DeliveryRuleUrlFileNameConditionInvokeResponseArgs and DeliveryRuleUrlFileNameConditionInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleUrlFileNameConditionInvokeResponseInput` via:
//
//          DeliveryRuleUrlFileNameConditionInvokeResponseArgs{...}
type DeliveryRuleUrlFileNameConditionInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRuleUrlFileNameConditionInvokeResponseOutput() DeliveryRuleUrlFileNameConditionInvokeResponseOutput
	ToDeliveryRuleUrlFileNameConditionInvokeResponseOutputWithContext(context.Context) DeliveryRuleUrlFileNameConditionInvokeResponseOutput
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameConditionInvokeResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileName'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileNameMatchConditionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleUrlFileNameConditionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileNameConditionInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleUrlFileNameConditionInvokeResponseArgs) ToDeliveryRuleUrlFileNameConditionInvokeResponseOutput() DeliveryRuleUrlFileNameConditionInvokeResponseOutput {
	return i.ToDeliveryRuleUrlFileNameConditionInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleUrlFileNameConditionInvokeResponseArgs) ToDeliveryRuleUrlFileNameConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleUrlFileNameConditionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleUrlFileNameConditionInvokeResponseOutput)
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameConditionInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleUrlFileNameConditionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileNameConditionInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleUrlFileNameConditionInvokeResponseOutput) ToDeliveryRuleUrlFileNameConditionInvokeResponseOutput() DeliveryRuleUrlFileNameConditionInvokeResponseOutput {
	return o
}

func (o DeliveryRuleUrlFileNameConditionInvokeResponseOutput) ToDeliveryRuleUrlFileNameConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleUrlFileNameConditionInvokeResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'UrlFileName'.
func (o DeliveryRuleUrlFileNameConditionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileNameConditionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleUrlFileNameConditionInvokeResponseOutput) Parameters() UrlFileNameMatchConditionParametersInvokeResponseOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileNameConditionInvokeResponse) UrlFileNameMatchConditionParametersInvokeResponse {
		return v.Parameters
	}).(UrlFileNameMatchConditionParametersInvokeResponseOutput)
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileName'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileNameMatchConditionParametersResponse `pulumi:"parameters"`
}

// DeliveryRuleUrlFileNameConditionResponseInput is an input type that accepts DeliveryRuleUrlFileNameConditionResponseArgs and DeliveryRuleUrlFileNameConditionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleUrlFileNameConditionResponseInput` via:
//
//          DeliveryRuleUrlFileNameConditionResponseArgs{...}
type DeliveryRuleUrlFileNameConditionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleUrlFileNameConditionResponseOutput() DeliveryRuleUrlFileNameConditionResponseOutput
	ToDeliveryRuleUrlFileNameConditionResponseOutputWithContext(context.Context) DeliveryRuleUrlFileNameConditionResponseOutput
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameConditionResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileName'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileNameMatchConditionParametersResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleUrlFileNameConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileNameConditionResponse)(nil)).Elem()
}

func (i DeliveryRuleUrlFileNameConditionResponseArgs) ToDeliveryRuleUrlFileNameConditionResponseOutput() DeliveryRuleUrlFileNameConditionResponseOutput {
	return i.ToDeliveryRuleUrlFileNameConditionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleUrlFileNameConditionResponseArgs) ToDeliveryRuleUrlFileNameConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleUrlFileNameConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleUrlFileNameConditionResponseOutput)
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleUrlFileNameConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileNameConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleUrlFileNameConditionResponseOutput) ToDeliveryRuleUrlFileNameConditionResponseOutput() DeliveryRuleUrlFileNameConditionResponseOutput {
	return o
}

func (o DeliveryRuleUrlFileNameConditionResponseOutput) ToDeliveryRuleUrlFileNameConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleUrlFileNameConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'UrlFileName'.
func (o DeliveryRuleUrlFileNameConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileNameConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleUrlFileNameConditionResponseOutput) Parameters() UrlFileNameMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileNameConditionResponse) UrlFileNameMatchConditionParametersResponse {
		return v.Parameters
	}).(UrlFileNameMatchConditionParametersResponseOutput)
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlPath'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlPathMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleUrlPathConditionInput is an input type that accepts DeliveryRuleUrlPathConditionArgs and DeliveryRuleUrlPathConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleUrlPathConditionInput` via:
//
//          DeliveryRuleUrlPathConditionArgs{...}
type DeliveryRuleUrlPathConditionInput interface {
	pulumi.Input

	ToDeliveryRuleUrlPathConditionOutput() DeliveryRuleUrlPathConditionOutput
	ToDeliveryRuleUrlPathConditionOutputWithContext(context.Context) DeliveryRuleUrlPathConditionOutput
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathConditionArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlPath'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlPathMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleUrlPathConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlPathCondition)(nil)).Elem()
}

func (i DeliveryRuleUrlPathConditionArgs) ToDeliveryRuleUrlPathConditionOutput() DeliveryRuleUrlPathConditionOutput {
	return i.ToDeliveryRuleUrlPathConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleUrlPathConditionArgs) ToDeliveryRuleUrlPathConditionOutputWithContext(ctx context.Context) DeliveryRuleUrlPathConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleUrlPathConditionOutput)
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleUrlPathConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlPathCondition)(nil)).Elem()
}

func (o DeliveryRuleUrlPathConditionOutput) ToDeliveryRuleUrlPathConditionOutput() DeliveryRuleUrlPathConditionOutput {
	return o
}

func (o DeliveryRuleUrlPathConditionOutput) ToDeliveryRuleUrlPathConditionOutputWithContext(ctx context.Context) DeliveryRuleUrlPathConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'UrlPath'.
func (o DeliveryRuleUrlPathConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleUrlPathCondition) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleUrlPathConditionOutput) Parameters() UrlPathMatchConditionParametersOutput {
	return o.ApplyT(func(v DeliveryRuleUrlPathCondition) UrlPathMatchConditionParameters { return v.Parameters }).(UrlPathMatchConditionParametersOutput)
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathConditionInvokeResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlPath'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlPathMatchConditionParametersInvokeResponse `pulumi:"parameters"`
}

// DeliveryRuleUrlPathConditionInvokeResponseInput is an input type that accepts DeliveryRuleUrlPathConditionInvokeResponseArgs and DeliveryRuleUrlPathConditionInvokeResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleUrlPathConditionInvokeResponseInput` via:
//
//          DeliveryRuleUrlPathConditionInvokeResponseArgs{...}
type DeliveryRuleUrlPathConditionInvokeResponseInput interface {
	pulumi.Input

	ToDeliveryRuleUrlPathConditionInvokeResponseOutput() DeliveryRuleUrlPathConditionInvokeResponseOutput
	ToDeliveryRuleUrlPathConditionInvokeResponseOutputWithContext(context.Context) DeliveryRuleUrlPathConditionInvokeResponseOutput
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathConditionInvokeResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlPath'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlPathMatchConditionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleUrlPathConditionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlPathConditionInvokeResponse)(nil)).Elem()
}

func (i DeliveryRuleUrlPathConditionInvokeResponseArgs) ToDeliveryRuleUrlPathConditionInvokeResponseOutput() DeliveryRuleUrlPathConditionInvokeResponseOutput {
	return i.ToDeliveryRuleUrlPathConditionInvokeResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleUrlPathConditionInvokeResponseArgs) ToDeliveryRuleUrlPathConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleUrlPathConditionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleUrlPathConditionInvokeResponseOutput)
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathConditionInvokeResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleUrlPathConditionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlPathConditionInvokeResponse)(nil)).Elem()
}

func (o DeliveryRuleUrlPathConditionInvokeResponseOutput) ToDeliveryRuleUrlPathConditionInvokeResponseOutput() DeliveryRuleUrlPathConditionInvokeResponseOutput {
	return o
}

func (o DeliveryRuleUrlPathConditionInvokeResponseOutput) ToDeliveryRuleUrlPathConditionInvokeResponseOutputWithContext(ctx context.Context) DeliveryRuleUrlPathConditionInvokeResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'UrlPath'.
func (o DeliveryRuleUrlPathConditionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleUrlPathConditionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleUrlPathConditionInvokeResponseOutput) Parameters() UrlPathMatchConditionParametersInvokeResponseOutput {
	return o.ApplyT(func(v DeliveryRuleUrlPathConditionInvokeResponse) UrlPathMatchConditionParametersInvokeResponse {
		return v.Parameters
	}).(UrlPathMatchConditionParametersInvokeResponseOutput)
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlPath'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlPathMatchConditionParametersResponse `pulumi:"parameters"`
}

// DeliveryRuleUrlPathConditionResponseInput is an input type that accepts DeliveryRuleUrlPathConditionResponseArgs and DeliveryRuleUrlPathConditionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleUrlPathConditionResponseInput` via:
//
//          DeliveryRuleUrlPathConditionResponseArgs{...}
type DeliveryRuleUrlPathConditionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleUrlPathConditionResponseOutput() DeliveryRuleUrlPathConditionResponseOutput
	ToDeliveryRuleUrlPathConditionResponseOutputWithContext(context.Context) DeliveryRuleUrlPathConditionResponseOutput
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathConditionResponseArgs struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlPath'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlPathMatchConditionParametersResponseInput `pulumi:"parameters"`
}

func (DeliveryRuleUrlPathConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlPathConditionResponse)(nil)).Elem()
}

func (i DeliveryRuleUrlPathConditionResponseArgs) ToDeliveryRuleUrlPathConditionResponseOutput() DeliveryRuleUrlPathConditionResponseOutput {
	return i.ToDeliveryRuleUrlPathConditionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleUrlPathConditionResponseArgs) ToDeliveryRuleUrlPathConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleUrlPathConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleUrlPathConditionResponseOutput)
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleUrlPathConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlPathConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleUrlPathConditionResponseOutput) ToDeliveryRuleUrlPathConditionResponseOutput() DeliveryRuleUrlPathConditionResponseOutput {
	return o
}

func (o DeliveryRuleUrlPathConditionResponseOutput) ToDeliveryRuleUrlPathConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleUrlPathConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
// Expected value is 'UrlPath'.
func (o DeliveryRuleUrlPathConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleUrlPathConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleUrlPathConditionResponseOutput) Parameters() UrlPathMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleUrlPathConditionResponse) UrlPathMatchConditionParametersResponse {
		return v.Parameters
	}).(UrlPathMatchConditionParametersResponseOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersDeliveryPolicy struct {
	// User-friendly description of the policy.
	Description *string `pulumi:"description"`
	// A list of the delivery rules.
	Rules []DeliveryRule `pulumi:"rules"`
}

// EndpointPropertiesUpdateParametersDeliveryPolicyInput is an input type that accepts EndpointPropertiesUpdateParametersDeliveryPolicyArgs and EndpointPropertiesUpdateParametersDeliveryPolicyOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersDeliveryPolicyInput` via:
//
//          EndpointPropertiesUpdateParametersDeliveryPolicyArgs{...}
type EndpointPropertiesUpdateParametersDeliveryPolicyInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersDeliveryPolicyOutput() EndpointPropertiesUpdateParametersDeliveryPolicyOutput
	ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyOutput
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersDeliveryPolicyArgs struct {
	// User-friendly description of the policy.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A list of the delivery rules.
	Rules DeliveryRuleArrayInput `pulumi:"rules"`
}

func (EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutput() EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return i.ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersDeliveryPolicyOutput)
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersDeliveryPolicyOutput).ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx)
}

// EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput is an input type that accepts EndpointPropertiesUpdateParametersDeliveryPolicyArgs, EndpointPropertiesUpdateParametersDeliveryPolicyPtr and EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput` via:
//
//          EndpointPropertiesUpdateParametersDeliveryPolicyArgs{...}
//
//  or:
//
//          nil
type EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput
	ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput
}

type endpointPropertiesUpdateParametersDeliveryPolicyPtrType EndpointPropertiesUpdateParametersDeliveryPolicyArgs

func EndpointPropertiesUpdateParametersDeliveryPolicyPtr(v *EndpointPropertiesUpdateParametersDeliveryPolicyArgs) EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput {
	return (*endpointPropertiesUpdateParametersDeliveryPolicyPtrType)(v)
}

func (*endpointPropertiesUpdateParametersDeliveryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (i *endpointPropertiesUpdateParametersDeliveryPolicyPtrType) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (i *endpointPropertiesUpdateParametersDeliveryPolicyPtrType) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersDeliveryPolicyOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutput() EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o.ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersDeliveryPolicy) *EndpointPropertiesUpdateParametersDeliveryPolicy {
		return &v
	}).(EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersDeliveryPolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) Rules() DeliveryRuleArrayOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersDeliveryPolicy) []DeliveryRule { return v.Rules }).(DeliveryRuleArrayOutput)
}

type EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) Elem() EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersDeliveryPolicy) EndpointPropertiesUpdateParametersDeliveryPolicy {
		return *v
	}).(EndpointPropertiesUpdateParametersDeliveryPolicyOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersDeliveryPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) Rules() DeliveryRuleArrayOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersDeliveryPolicy) []DeliveryRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(DeliveryRuleArrayOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicy struct {
	// User-friendly description of the policy.
	Description *string `pulumi:"description"`
	// A list of the delivery rules.
	Rules []DeliveryRuleInvokeResponse `pulumi:"rules"`
}

// EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyInput is an input type that accepts EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyArgs and EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyInput` via:
//
//          EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyArgs{...}
type EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutput() EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutput
	ToEndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutputWithContext(context.Context) EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutput
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyArgs struct {
	// User-friendly description of the policy.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A list of the delivery rules.
	Rules DeliveryRuleInvokeResponseArrayInput `pulumi:"rules"`
}

func (EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicy)(nil)).Elem()
}

func (i EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutput() EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutput {
	return i.ToEndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutput() EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutput {
	return o
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutput) Rules() DeliveryRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicy) []DeliveryRuleInvokeResponse {
		return v.Rules
	}).(DeliveryRuleInvokeResponseArrayOutput)
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkInput is an input type that accepts EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkArgs and EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkInput` via:
//
//          EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkArgs{...}
type EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutput
	ToEndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutputWithContext(context.Context) EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutput
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutput {
	return i.ToEndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutput)
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutput {
	return o
}

// Resource ID.
func (o EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLink) *string {
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersResponseDeliveryPolicy struct {
	// User-friendly description of the policy.
	Description *string `pulumi:"description"`
	// A list of the delivery rules.
	Rules []DeliveryRuleResponse `pulumi:"rules"`
}

// EndpointPropertiesUpdateParametersResponseDeliveryPolicyInput is an input type that accepts EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs and EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersResponseDeliveryPolicyInput` via:
//
//          EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs{...}
type EndpointPropertiesUpdateParametersResponseDeliveryPolicyInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput
	ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutputWithContext(context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs struct {
	// User-friendly description of the policy.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A list of the delivery rules.
	Rules DeliveryRuleResponseArrayInput `pulumi:"rules"`
}

func (EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersResponseDeliveryPolicy)(nil)).Elem()
}

func (i EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return i.ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput)
}

func (i EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput).ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(ctx)
}

// EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrInput is an input type that accepts EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs, EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtr and EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrInput` via:
//
//          EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs{...}
//
//  or:
//
//          nil
type EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput
	ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput
}

type endpointPropertiesUpdateParametersResponseDeliveryPolicyPtrType EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs

func EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtr(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs) EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrInput {
	return (*endpointPropertiesUpdateParametersResponseDeliveryPolicyPtrType)(v)
}

func (*endpointPropertiesUpdateParametersResponseDeliveryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersResponseDeliveryPolicy)(nil)).Elem()
}

func (i *endpointPropertiesUpdateParametersResponseDeliveryPolicyPtrType) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (i *endpointPropertiesUpdateParametersResponseDeliveryPolicyPtrType) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersResponseDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o.ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseDeliveryPolicy) *EndpointPropertiesUpdateParametersResponseDeliveryPolicy {
		return &v
	}).(EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseDeliveryPolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) Rules() DeliveryRuleResponseArrayOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseDeliveryPolicy) []DeliveryRuleResponse {
		return v.Rules
	}).(DeliveryRuleResponseArrayOutput)
}

type EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersResponseDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) Elem() EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicy) EndpointPropertiesUpdateParametersResponseDeliveryPolicy {
		return *v
	}).(EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) Rules() DeliveryRuleResponseArrayOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicy) []DeliveryRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(DeliveryRuleResponseArrayOutput)
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkInput is an input type that accepts EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs and EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkInput` via:
//
//          EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs{...}
type EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput
	ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutputWithContext(context.Context) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return i.ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput)
}

func (i EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput).ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx)
}

// EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrInput is an input type that accepts EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs, EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtr and EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrInput` via:
//
//          EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs{...}
//
//  or:
//
//          nil
type EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput
	ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Context) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput
}

type endpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrType EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs

func EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtr(v *EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrInput {
	return (*endpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrType)(v)
}

func (*endpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i *endpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrType) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i *endpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrType) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput)
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink) *EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink {
		return &v
	}).(EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput)
}

// Resource ID.
func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink) *string {
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) Elem() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink {
		return *v
	}).(EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput)
}

// Resource ID.
func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkInput is an input type that accepts EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs and EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkInput` via:
//
//          EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs{...}
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput
	ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return i.ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput)
}

func (i EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput).ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx)
}

// EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrInput is an input type that accepts EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs, EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtr and EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrInput` via:
//
//          EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs{...}
//
//  or:
//
//          nil
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput
	ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput
}

type endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs

func EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtr(v *EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrInput {
	return (*endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType)(v)
}

func (*endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i *endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i *endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink) *EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink {
		return &v
	}).(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

// Resource ID.
func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) Elem() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink {
		return *v
	}).(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput)
}

// Resource ID.
func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilter struct {
	// Action of the geo filter, i.e. allow or block access.
	Action string `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes []string `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath string `pulumi:"relativePath"`
}

// GeoFilterInput is an input type that accepts GeoFilterArgs and GeoFilterOutput values.
// You can construct a concrete instance of `GeoFilterInput` via:
//
//          GeoFilterArgs{...}
type GeoFilterInput interface {
	pulumi.Input

	ToGeoFilterOutput() GeoFilterOutput
	ToGeoFilterOutputWithContext(context.Context) GeoFilterOutput
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterArgs struct {
	// Action of the geo filter, i.e. allow or block access.
	Action GeoFilterActions `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes pulumi.StringArrayInput `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath pulumi.StringInput `pulumi:"relativePath"`
}

func (GeoFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilter)(nil)).Elem()
}

func (i GeoFilterArgs) ToGeoFilterOutput() GeoFilterOutput {
	return i.ToGeoFilterOutputWithContext(context.Background())
}

func (i GeoFilterArgs) ToGeoFilterOutputWithContext(ctx context.Context) GeoFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterOutput)
}

// GeoFilterArrayInput is an input type that accepts GeoFilterArray and GeoFilterArrayOutput values.
// You can construct a concrete instance of `GeoFilterArrayInput` via:
//
//          GeoFilterArray{ GeoFilterArgs{...} }
type GeoFilterArrayInput interface {
	pulumi.Input

	ToGeoFilterArrayOutput() GeoFilterArrayOutput
	ToGeoFilterArrayOutputWithContext(context.Context) GeoFilterArrayOutput
}

type GeoFilterArray []GeoFilterInput

func (GeoFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilter)(nil)).Elem()
}

func (i GeoFilterArray) ToGeoFilterArrayOutput() GeoFilterArrayOutput {
	return i.ToGeoFilterArrayOutputWithContext(context.Background())
}

func (i GeoFilterArray) ToGeoFilterArrayOutputWithContext(ctx context.Context) GeoFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterArrayOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterOutput struct{ *pulumi.OutputState }

func (GeoFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilter)(nil)).Elem()
}

func (o GeoFilterOutput) ToGeoFilterOutput() GeoFilterOutput {
	return o
}

func (o GeoFilterOutput) ToGeoFilterOutputWithContext(ctx context.Context) GeoFilterOutput {
	return o
}

// Action of the geo filter, i.e. allow or block access.
func (o GeoFilterOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilter) string { return v.Action }).(pulumi.StringOutput)
}

// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
func (o GeoFilterOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GeoFilter) []string { return v.CountryCodes }).(pulumi.StringArrayOutput)
}

// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
func (o GeoFilterOutput) RelativePath() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilter) string { return v.RelativePath }).(pulumi.StringOutput)
}

type GeoFilterArrayOutput struct{ *pulumi.OutputState }

func (GeoFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilter)(nil)).Elem()
}

func (o GeoFilterArrayOutput) ToGeoFilterArrayOutput() GeoFilterArrayOutput {
	return o
}

func (o GeoFilterArrayOutput) ToGeoFilterArrayOutputWithContext(ctx context.Context) GeoFilterArrayOutput {
	return o
}

func (o GeoFilterArrayOutput) Index(i pulumi.IntInput) GeoFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoFilter {
		return vs[0].([]GeoFilter)[vs[1].(int)]
	}).(GeoFilterOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterInvokeResponse struct {
	// Action of the geo filter, i.e. allow or block access.
	Action string `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes []string `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath string `pulumi:"relativePath"`
}

// GeoFilterInvokeResponseInput is an input type that accepts GeoFilterInvokeResponseArgs and GeoFilterInvokeResponseOutput values.
// You can construct a concrete instance of `GeoFilterInvokeResponseInput` via:
//
//          GeoFilterInvokeResponseArgs{...}
type GeoFilterInvokeResponseInput interface {
	pulumi.Input

	ToGeoFilterInvokeResponseOutput() GeoFilterInvokeResponseOutput
	ToGeoFilterInvokeResponseOutputWithContext(context.Context) GeoFilterInvokeResponseOutput
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterInvokeResponseArgs struct {
	// Action of the geo filter, i.e. allow or block access.
	Action pulumi.StringInput `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes pulumi.StringArrayInput `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath pulumi.StringInput `pulumi:"relativePath"`
}

func (GeoFilterInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilterInvokeResponse)(nil)).Elem()
}

func (i GeoFilterInvokeResponseArgs) ToGeoFilterInvokeResponseOutput() GeoFilterInvokeResponseOutput {
	return i.ToGeoFilterInvokeResponseOutputWithContext(context.Background())
}

func (i GeoFilterInvokeResponseArgs) ToGeoFilterInvokeResponseOutputWithContext(ctx context.Context) GeoFilterInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterInvokeResponseOutput)
}

// GeoFilterInvokeResponseArrayInput is an input type that accepts GeoFilterInvokeResponseArray and GeoFilterInvokeResponseArrayOutput values.
// You can construct a concrete instance of `GeoFilterInvokeResponseArrayInput` via:
//
//          GeoFilterInvokeResponseArray{ GeoFilterInvokeResponseArgs{...} }
type GeoFilterInvokeResponseArrayInput interface {
	pulumi.Input

	ToGeoFilterInvokeResponseArrayOutput() GeoFilterInvokeResponseArrayOutput
	ToGeoFilterInvokeResponseArrayOutputWithContext(context.Context) GeoFilterInvokeResponseArrayOutput
}

type GeoFilterInvokeResponseArray []GeoFilterInvokeResponseInput

func (GeoFilterInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilterInvokeResponse)(nil)).Elem()
}

func (i GeoFilterInvokeResponseArray) ToGeoFilterInvokeResponseArrayOutput() GeoFilterInvokeResponseArrayOutput {
	return i.ToGeoFilterInvokeResponseArrayOutputWithContext(context.Background())
}

func (i GeoFilterInvokeResponseArray) ToGeoFilterInvokeResponseArrayOutputWithContext(ctx context.Context) GeoFilterInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterInvokeResponseArrayOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterInvokeResponseOutput struct{ *pulumi.OutputState }

func (GeoFilterInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilterInvokeResponse)(nil)).Elem()
}

func (o GeoFilterInvokeResponseOutput) ToGeoFilterInvokeResponseOutput() GeoFilterInvokeResponseOutput {
	return o
}

func (o GeoFilterInvokeResponseOutput) ToGeoFilterInvokeResponseOutputWithContext(ctx context.Context) GeoFilterInvokeResponseOutput {
	return o
}

// Action of the geo filter, i.e. allow or block access.
func (o GeoFilterInvokeResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilterInvokeResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
func (o GeoFilterInvokeResponseOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GeoFilterInvokeResponse) []string { return v.CountryCodes }).(pulumi.StringArrayOutput)
}

// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
func (o GeoFilterInvokeResponseOutput) RelativePath() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilterInvokeResponse) string { return v.RelativePath }).(pulumi.StringOutput)
}

type GeoFilterInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (GeoFilterInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilterInvokeResponse)(nil)).Elem()
}

func (o GeoFilterInvokeResponseArrayOutput) ToGeoFilterInvokeResponseArrayOutput() GeoFilterInvokeResponseArrayOutput {
	return o
}

func (o GeoFilterInvokeResponseArrayOutput) ToGeoFilterInvokeResponseArrayOutputWithContext(ctx context.Context) GeoFilterInvokeResponseArrayOutput {
	return o
}

func (o GeoFilterInvokeResponseArrayOutput) Index(i pulumi.IntInput) GeoFilterInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoFilterInvokeResponse {
		return vs[0].([]GeoFilterInvokeResponse)[vs[1].(int)]
	}).(GeoFilterInvokeResponseOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterResponse struct {
	// Action of the geo filter, i.e. allow or block access.
	Action string `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes []string `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath string `pulumi:"relativePath"`
}

// GeoFilterResponseInput is an input type that accepts GeoFilterResponseArgs and GeoFilterResponseOutput values.
// You can construct a concrete instance of `GeoFilterResponseInput` via:
//
//          GeoFilterResponseArgs{...}
type GeoFilterResponseInput interface {
	pulumi.Input

	ToGeoFilterResponseOutput() GeoFilterResponseOutput
	ToGeoFilterResponseOutputWithContext(context.Context) GeoFilterResponseOutput
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterResponseArgs struct {
	// Action of the geo filter, i.e. allow or block access.
	Action pulumi.StringInput `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes pulumi.StringArrayInput `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath pulumi.StringInput `pulumi:"relativePath"`
}

func (GeoFilterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilterResponse)(nil)).Elem()
}

func (i GeoFilterResponseArgs) ToGeoFilterResponseOutput() GeoFilterResponseOutput {
	return i.ToGeoFilterResponseOutputWithContext(context.Background())
}

func (i GeoFilterResponseArgs) ToGeoFilterResponseOutputWithContext(ctx context.Context) GeoFilterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterResponseOutput)
}

// GeoFilterResponseArrayInput is an input type that accepts GeoFilterResponseArray and GeoFilterResponseArrayOutput values.
// You can construct a concrete instance of `GeoFilterResponseArrayInput` via:
//
//          GeoFilterResponseArray{ GeoFilterResponseArgs{...} }
type GeoFilterResponseArrayInput interface {
	pulumi.Input

	ToGeoFilterResponseArrayOutput() GeoFilterResponseArrayOutput
	ToGeoFilterResponseArrayOutputWithContext(context.Context) GeoFilterResponseArrayOutput
}

type GeoFilterResponseArray []GeoFilterResponseInput

func (GeoFilterResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilterResponse)(nil)).Elem()
}

func (i GeoFilterResponseArray) ToGeoFilterResponseArrayOutput() GeoFilterResponseArrayOutput {
	return i.ToGeoFilterResponseArrayOutputWithContext(context.Background())
}

func (i GeoFilterResponseArray) ToGeoFilterResponseArrayOutputWithContext(ctx context.Context) GeoFilterResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterResponseArrayOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterResponseOutput struct{ *pulumi.OutputState }

func (GeoFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilterResponse)(nil)).Elem()
}

func (o GeoFilterResponseOutput) ToGeoFilterResponseOutput() GeoFilterResponseOutput {
	return o
}

func (o GeoFilterResponseOutput) ToGeoFilterResponseOutputWithContext(ctx context.Context) GeoFilterResponseOutput {
	return o
}

// Action of the geo filter, i.e. allow or block access.
func (o GeoFilterResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilterResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
func (o GeoFilterResponseOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GeoFilterResponse) []string { return v.CountryCodes }).(pulumi.StringArrayOutput)
}

// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
func (o GeoFilterResponseOutput) RelativePath() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilterResponse) string { return v.RelativePath }).(pulumi.StringOutput)
}

type GeoFilterResponseArrayOutput struct{ *pulumi.OutputState }

func (GeoFilterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilterResponse)(nil)).Elem()
}

func (o GeoFilterResponseArrayOutput) ToGeoFilterResponseArrayOutput() GeoFilterResponseArrayOutput {
	return o
}

func (o GeoFilterResponseArrayOutput) ToGeoFilterResponseArrayOutputWithContext(ctx context.Context) GeoFilterResponseArrayOutput {
	return o
}

func (o GeoFilterResponseArrayOutput) Index(i pulumi.IntInput) GeoFilterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoFilterResponse {
		return vs[0].([]GeoFilterResponse)[vs[1].(int)]
	}).(GeoFilterResponseOutput)
}

// Defines the parameters for the request header action.
type HeaderActionParameters struct {
	// Action to perform
	HeaderAction string `pulumi:"headerAction"`
	// Name of the header to modify
	HeaderName string `pulumi:"headerName"`
	OdataType  string `pulumi:"odataType"`
	// Value for the specified action
	Value *string `pulumi:"value"`
}

// HeaderActionParametersInput is an input type that accepts HeaderActionParametersArgs and HeaderActionParametersOutput values.
// You can construct a concrete instance of `HeaderActionParametersInput` via:
//
//          HeaderActionParametersArgs{...}
type HeaderActionParametersInput interface {
	pulumi.Input

	ToHeaderActionParametersOutput() HeaderActionParametersOutput
	ToHeaderActionParametersOutputWithContext(context.Context) HeaderActionParametersOutput
}

// Defines the parameters for the request header action.
type HeaderActionParametersArgs struct {
	// Action to perform
	HeaderAction pulumi.StringInput `pulumi:"headerAction"`
	// Name of the header to modify
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	OdataType  pulumi.StringInput `pulumi:"odataType"`
	// Value for the specified action
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (HeaderActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderActionParameters)(nil)).Elem()
}

func (i HeaderActionParametersArgs) ToHeaderActionParametersOutput() HeaderActionParametersOutput {
	return i.ToHeaderActionParametersOutputWithContext(context.Background())
}

func (i HeaderActionParametersArgs) ToHeaderActionParametersOutputWithContext(ctx context.Context) HeaderActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeaderActionParametersOutput)
}

// Defines the parameters for the request header action.
type HeaderActionParametersOutput struct{ *pulumi.OutputState }

func (HeaderActionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderActionParameters)(nil)).Elem()
}

func (o HeaderActionParametersOutput) ToHeaderActionParametersOutput() HeaderActionParametersOutput {
	return o
}

func (o HeaderActionParametersOutput) ToHeaderActionParametersOutputWithContext(ctx context.Context) HeaderActionParametersOutput {
	return o
}

// Action to perform
func (o HeaderActionParametersOutput) HeaderAction() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionParameters) string { return v.HeaderAction }).(pulumi.StringOutput)
}

// Name of the header to modify
func (o HeaderActionParametersOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionParameters) string { return v.HeaderName }).(pulumi.StringOutput)
}

func (o HeaderActionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// Value for the specified action
func (o HeaderActionParametersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeaderActionParameters) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Defines the parameters for the request header action.
type HeaderActionParametersInvokeResponse struct {
	// Action to perform
	HeaderAction string `pulumi:"headerAction"`
	// Name of the header to modify
	HeaderName string `pulumi:"headerName"`
	OdataType  string `pulumi:"odataType"`
	// Value for the specified action
	Value *string `pulumi:"value"`
}

// HeaderActionParametersInvokeResponseInput is an input type that accepts HeaderActionParametersInvokeResponseArgs and HeaderActionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `HeaderActionParametersInvokeResponseInput` via:
//
//          HeaderActionParametersInvokeResponseArgs{...}
type HeaderActionParametersInvokeResponseInput interface {
	pulumi.Input

	ToHeaderActionParametersInvokeResponseOutput() HeaderActionParametersInvokeResponseOutput
	ToHeaderActionParametersInvokeResponseOutputWithContext(context.Context) HeaderActionParametersInvokeResponseOutput
}

// Defines the parameters for the request header action.
type HeaderActionParametersInvokeResponseArgs struct {
	// Action to perform
	HeaderAction pulumi.StringInput `pulumi:"headerAction"`
	// Name of the header to modify
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	OdataType  pulumi.StringInput `pulumi:"odataType"`
	// Value for the specified action
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (HeaderActionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderActionParametersInvokeResponse)(nil)).Elem()
}

func (i HeaderActionParametersInvokeResponseArgs) ToHeaderActionParametersInvokeResponseOutput() HeaderActionParametersInvokeResponseOutput {
	return i.ToHeaderActionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i HeaderActionParametersInvokeResponseArgs) ToHeaderActionParametersInvokeResponseOutputWithContext(ctx context.Context) HeaderActionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeaderActionParametersInvokeResponseOutput)
}

// Defines the parameters for the request header action.
type HeaderActionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (HeaderActionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderActionParametersInvokeResponse)(nil)).Elem()
}

func (o HeaderActionParametersInvokeResponseOutput) ToHeaderActionParametersInvokeResponseOutput() HeaderActionParametersInvokeResponseOutput {
	return o
}

func (o HeaderActionParametersInvokeResponseOutput) ToHeaderActionParametersInvokeResponseOutputWithContext(ctx context.Context) HeaderActionParametersInvokeResponseOutput {
	return o
}

// Action to perform
func (o HeaderActionParametersInvokeResponseOutput) HeaderAction() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionParametersInvokeResponse) string { return v.HeaderAction }).(pulumi.StringOutput)
}

// Name of the header to modify
func (o HeaderActionParametersInvokeResponseOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionParametersInvokeResponse) string { return v.HeaderName }).(pulumi.StringOutput)
}

func (o HeaderActionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Value for the specified action
func (o HeaderActionParametersInvokeResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeaderActionParametersInvokeResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Defines the parameters for the request header action.
type HeaderActionParametersResponse struct {
	// Action to perform
	HeaderAction string `pulumi:"headerAction"`
	// Name of the header to modify
	HeaderName string `pulumi:"headerName"`
	OdataType  string `pulumi:"odataType"`
	// Value for the specified action
	Value *string `pulumi:"value"`
}

// HeaderActionParametersResponseInput is an input type that accepts HeaderActionParametersResponseArgs and HeaderActionParametersResponseOutput values.
// You can construct a concrete instance of `HeaderActionParametersResponseInput` via:
//
//          HeaderActionParametersResponseArgs{...}
type HeaderActionParametersResponseInput interface {
	pulumi.Input

	ToHeaderActionParametersResponseOutput() HeaderActionParametersResponseOutput
	ToHeaderActionParametersResponseOutputWithContext(context.Context) HeaderActionParametersResponseOutput
}

// Defines the parameters for the request header action.
type HeaderActionParametersResponseArgs struct {
	// Action to perform
	HeaderAction pulumi.StringInput `pulumi:"headerAction"`
	// Name of the header to modify
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	OdataType  pulumi.StringInput `pulumi:"odataType"`
	// Value for the specified action
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (HeaderActionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderActionParametersResponse)(nil)).Elem()
}

func (i HeaderActionParametersResponseArgs) ToHeaderActionParametersResponseOutput() HeaderActionParametersResponseOutput {
	return i.ToHeaderActionParametersResponseOutputWithContext(context.Background())
}

func (i HeaderActionParametersResponseArgs) ToHeaderActionParametersResponseOutputWithContext(ctx context.Context) HeaderActionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeaderActionParametersResponseOutput)
}

// Defines the parameters for the request header action.
type HeaderActionParametersResponseOutput struct{ *pulumi.OutputState }

func (HeaderActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderActionParametersResponse)(nil)).Elem()
}

func (o HeaderActionParametersResponseOutput) ToHeaderActionParametersResponseOutput() HeaderActionParametersResponseOutput {
	return o
}

func (o HeaderActionParametersResponseOutput) ToHeaderActionParametersResponseOutputWithContext(ctx context.Context) HeaderActionParametersResponseOutput {
	return o
}

// Action to perform
func (o HeaderActionParametersResponseOutput) HeaderAction() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionParametersResponse) string { return v.HeaderAction }).(pulumi.StringOutput)
}

// Name of the header to modify
func (o HeaderActionParametersResponseOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionParametersResponse) string { return v.HeaderName }).(pulumi.StringOutput)
}

func (o HeaderActionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Value for the specified action
func (o HeaderActionParametersResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeaderActionParametersResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParameters struct {
	// The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds *int `pulumi:"probeIntervalInSeconds"`
	// The path relative to the origin that is used to determine the health of the origin.
	ProbePath *string `pulumi:"probePath"`
	// Protocol to use for health probe.
	ProbeProtocol *string `pulumi:"probeProtocol"`
	// The type of health probe request that is made.
	ProbeRequestType *string `pulumi:"probeRequestType"`
}

// HealthProbeParametersInput is an input type that accepts HealthProbeParametersArgs and HealthProbeParametersOutput values.
// You can construct a concrete instance of `HealthProbeParametersInput` via:
//
//          HealthProbeParametersArgs{...}
type HealthProbeParametersInput interface {
	pulumi.Input

	ToHealthProbeParametersOutput() HealthProbeParametersOutput
	ToHealthProbeParametersOutputWithContext(context.Context) HealthProbeParametersOutput
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersArgs struct {
	// The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds pulumi.IntPtrInput `pulumi:"probeIntervalInSeconds"`
	// The path relative to the origin that is used to determine the health of the origin.
	ProbePath pulumi.StringPtrInput `pulumi:"probePath"`
	// Protocol to use for health probe.
	ProbeProtocol ProbeProtocol `pulumi:"probeProtocol"`
	// The type of health probe request that is made.
	ProbeRequestType HealthProbeRequestType `pulumi:"probeRequestType"`
}

func (HealthProbeParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeParameters)(nil)).Elem()
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersOutput() HealthProbeParametersOutput {
	return i.ToHealthProbeParametersOutputWithContext(context.Background())
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersOutputWithContext(ctx context.Context) HealthProbeParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersOutput)
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput {
	return i.ToHealthProbeParametersPtrOutputWithContext(context.Background())
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersPtrOutputWithContext(ctx context.Context) HealthProbeParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersOutput).ToHealthProbeParametersPtrOutputWithContext(ctx)
}

// HealthProbeParametersPtrInput is an input type that accepts HealthProbeParametersArgs, HealthProbeParametersPtr and HealthProbeParametersPtrOutput values.
// You can construct a concrete instance of `HealthProbeParametersPtrInput` via:
//
//          HealthProbeParametersArgs{...}
//
//  or:
//
//          nil
type HealthProbeParametersPtrInput interface {
	pulumi.Input

	ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput
	ToHealthProbeParametersPtrOutputWithContext(context.Context) HealthProbeParametersPtrOutput
}

type healthProbeParametersPtrType HealthProbeParametersArgs

func HealthProbeParametersPtr(v *HealthProbeParametersArgs) HealthProbeParametersPtrInput {
	return (*healthProbeParametersPtrType)(v)
}

func (*healthProbeParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthProbeParameters)(nil)).Elem()
}

func (i *healthProbeParametersPtrType) ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput {
	return i.ToHealthProbeParametersPtrOutputWithContext(context.Background())
}

func (i *healthProbeParametersPtrType) ToHealthProbeParametersPtrOutputWithContext(ctx context.Context) HealthProbeParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersPtrOutput)
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeParameters)(nil)).Elem()
}

func (o HealthProbeParametersOutput) ToHealthProbeParametersOutput() HealthProbeParametersOutput {
	return o
}

func (o HealthProbeParametersOutput) ToHealthProbeParametersOutputWithContext(ctx context.Context) HealthProbeParametersOutput {
	return o
}

func (o HealthProbeParametersOutput) ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput {
	return o.ToHealthProbeParametersPtrOutputWithContext(context.Background())
}

func (o HealthProbeParametersOutput) ToHealthProbeParametersPtrOutputWithContext(ctx context.Context) HealthProbeParametersPtrOutput {
	return o.ApplyT(func(v HealthProbeParameters) *HealthProbeParameters {
		return &v
	}).(HealthProbeParametersPtrOutput)
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthProbeParameters) *int { return v.ProbeIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParameters) *string { return v.ProbePath }).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersOutput) ProbeProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParameters) *string { return v.ProbeProtocol }).(pulumi.StringPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersOutput) ProbeRequestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParameters) *string { return v.ProbeRequestType }).(pulumi.StringPtrOutput)
}

type HealthProbeParametersPtrOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthProbeParameters)(nil)).Elem()
}

func (o HealthProbeParametersPtrOutput) ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput {
	return o
}

func (o HealthProbeParametersPtrOutput) ToHealthProbeParametersPtrOutputWithContext(ctx context.Context) HealthProbeParametersPtrOutput {
	return o
}

func (o HealthProbeParametersPtrOutput) Elem() HealthProbeParametersOutput {
	return o.ApplyT(func(v *HealthProbeParameters) HealthProbeParameters { return *v }).(HealthProbeParametersOutput)
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersPtrOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HealthProbeParameters) *int {
		if v == nil {
			return nil
		}
		return v.ProbeIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersPtrOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParameters) *string {
		if v == nil {
			return nil
		}
		return v.ProbePath
	}).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersPtrOutput) ProbeProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParameters) *string {
		if v == nil {
			return nil
		}
		return v.ProbeProtocol
	}).(pulumi.StringPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersPtrOutput) ProbeRequestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParameters) *string {
		if v == nil {
			return nil
		}
		return v.ProbeRequestType
	}).(pulumi.StringPtrOutput)
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersInvokeResponse struct {
	// The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds *int `pulumi:"probeIntervalInSeconds"`
	// The path relative to the origin that is used to determine the health of the origin.
	ProbePath *string `pulumi:"probePath"`
	// Protocol to use for health probe.
	ProbeProtocol *string `pulumi:"probeProtocol"`
	// The type of health probe request that is made.
	ProbeRequestType *string `pulumi:"probeRequestType"`
}

// HealthProbeParametersInvokeResponseInput is an input type that accepts HealthProbeParametersInvokeResponseArgs and HealthProbeParametersInvokeResponseOutput values.
// You can construct a concrete instance of `HealthProbeParametersInvokeResponseInput` via:
//
//          HealthProbeParametersInvokeResponseArgs{...}
type HealthProbeParametersInvokeResponseInput interface {
	pulumi.Input

	ToHealthProbeParametersInvokeResponseOutput() HealthProbeParametersInvokeResponseOutput
	ToHealthProbeParametersInvokeResponseOutputWithContext(context.Context) HealthProbeParametersInvokeResponseOutput
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersInvokeResponseArgs struct {
	// The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds pulumi.IntPtrInput `pulumi:"probeIntervalInSeconds"`
	// The path relative to the origin that is used to determine the health of the origin.
	ProbePath pulumi.StringPtrInput `pulumi:"probePath"`
	// Protocol to use for health probe.
	ProbeProtocol pulumi.StringPtrInput `pulumi:"probeProtocol"`
	// The type of health probe request that is made.
	ProbeRequestType pulumi.StringPtrInput `pulumi:"probeRequestType"`
}

func (HealthProbeParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeParametersInvokeResponse)(nil)).Elem()
}

func (i HealthProbeParametersInvokeResponseArgs) ToHealthProbeParametersInvokeResponseOutput() HealthProbeParametersInvokeResponseOutput {
	return i.ToHealthProbeParametersInvokeResponseOutputWithContext(context.Background())
}

func (i HealthProbeParametersInvokeResponseArgs) ToHealthProbeParametersInvokeResponseOutputWithContext(ctx context.Context) HealthProbeParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersInvokeResponseOutput)
}

func (i HealthProbeParametersInvokeResponseArgs) ToHealthProbeParametersInvokeResponsePtrOutput() HealthProbeParametersInvokeResponsePtrOutput {
	return i.ToHealthProbeParametersInvokeResponsePtrOutputWithContext(context.Background())
}

func (i HealthProbeParametersInvokeResponseArgs) ToHealthProbeParametersInvokeResponsePtrOutputWithContext(ctx context.Context) HealthProbeParametersInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersInvokeResponseOutput).ToHealthProbeParametersInvokeResponsePtrOutputWithContext(ctx)
}

// HealthProbeParametersInvokeResponsePtrInput is an input type that accepts HealthProbeParametersInvokeResponseArgs, HealthProbeParametersInvokeResponsePtr and HealthProbeParametersInvokeResponsePtrOutput values.
// You can construct a concrete instance of `HealthProbeParametersInvokeResponsePtrInput` via:
//
//          HealthProbeParametersInvokeResponseArgs{...}
//
//  or:
//
//          nil
type HealthProbeParametersInvokeResponsePtrInput interface {
	pulumi.Input

	ToHealthProbeParametersInvokeResponsePtrOutput() HealthProbeParametersInvokeResponsePtrOutput
	ToHealthProbeParametersInvokeResponsePtrOutputWithContext(context.Context) HealthProbeParametersInvokeResponsePtrOutput
}

type healthProbeParametersInvokeResponsePtrType HealthProbeParametersInvokeResponseArgs

func HealthProbeParametersInvokeResponsePtr(v *HealthProbeParametersInvokeResponseArgs) HealthProbeParametersInvokeResponsePtrInput {
	return (*healthProbeParametersInvokeResponsePtrType)(v)
}

func (*healthProbeParametersInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthProbeParametersInvokeResponse)(nil)).Elem()
}

func (i *healthProbeParametersInvokeResponsePtrType) ToHealthProbeParametersInvokeResponsePtrOutput() HealthProbeParametersInvokeResponsePtrOutput {
	return i.ToHealthProbeParametersInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *healthProbeParametersInvokeResponsePtrType) ToHealthProbeParametersInvokeResponsePtrOutputWithContext(ctx context.Context) HealthProbeParametersInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersInvokeResponsePtrOutput)
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeParametersInvokeResponse)(nil)).Elem()
}

func (o HealthProbeParametersInvokeResponseOutput) ToHealthProbeParametersInvokeResponseOutput() HealthProbeParametersInvokeResponseOutput {
	return o
}

func (o HealthProbeParametersInvokeResponseOutput) ToHealthProbeParametersInvokeResponseOutputWithContext(ctx context.Context) HealthProbeParametersInvokeResponseOutput {
	return o
}

func (o HealthProbeParametersInvokeResponseOutput) ToHealthProbeParametersInvokeResponsePtrOutput() HealthProbeParametersInvokeResponsePtrOutput {
	return o.ToHealthProbeParametersInvokeResponsePtrOutputWithContext(context.Background())
}

func (o HealthProbeParametersInvokeResponseOutput) ToHealthProbeParametersInvokeResponsePtrOutputWithContext(ctx context.Context) HealthProbeParametersInvokeResponsePtrOutput {
	return o.ApplyT(func(v HealthProbeParametersInvokeResponse) *HealthProbeParametersInvokeResponse {
		return &v
	}).(HealthProbeParametersInvokeResponsePtrOutput)
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersInvokeResponseOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersInvokeResponse) *int { return v.ProbeIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersInvokeResponseOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersInvokeResponse) *string { return v.ProbePath }).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersInvokeResponseOutput) ProbeProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersInvokeResponse) *string { return v.ProbeProtocol }).(pulumi.StringPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersInvokeResponseOutput) ProbeRequestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersInvokeResponse) *string { return v.ProbeRequestType }).(pulumi.StringPtrOutput)
}

type HealthProbeParametersInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthProbeParametersInvokeResponse)(nil)).Elem()
}

func (o HealthProbeParametersInvokeResponsePtrOutput) ToHealthProbeParametersInvokeResponsePtrOutput() HealthProbeParametersInvokeResponsePtrOutput {
	return o
}

func (o HealthProbeParametersInvokeResponsePtrOutput) ToHealthProbeParametersInvokeResponsePtrOutputWithContext(ctx context.Context) HealthProbeParametersInvokeResponsePtrOutput {
	return o
}

func (o HealthProbeParametersInvokeResponsePtrOutput) Elem() HealthProbeParametersInvokeResponseOutput {
	return o.ApplyT(func(v *HealthProbeParametersInvokeResponse) HealthProbeParametersInvokeResponse { return *v }).(HealthProbeParametersInvokeResponseOutput)
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersInvokeResponsePtrOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.ProbeIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersInvokeResponsePtrOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbePath
	}).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersInvokeResponsePtrOutput) ProbeProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbeProtocol
	}).(pulumi.StringPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersInvokeResponsePtrOutput) ProbeRequestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbeRequestType
	}).(pulumi.StringPtrOutput)
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersResponse struct {
	// The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds *int `pulumi:"probeIntervalInSeconds"`
	// The path relative to the origin that is used to determine the health of the origin.
	ProbePath *string `pulumi:"probePath"`
	// Protocol to use for health probe.
	ProbeProtocol *string `pulumi:"probeProtocol"`
	// The type of health probe request that is made.
	ProbeRequestType *string `pulumi:"probeRequestType"`
}

// HealthProbeParametersResponseInput is an input type that accepts HealthProbeParametersResponseArgs and HealthProbeParametersResponseOutput values.
// You can construct a concrete instance of `HealthProbeParametersResponseInput` via:
//
//          HealthProbeParametersResponseArgs{...}
type HealthProbeParametersResponseInput interface {
	pulumi.Input

	ToHealthProbeParametersResponseOutput() HealthProbeParametersResponseOutput
	ToHealthProbeParametersResponseOutputWithContext(context.Context) HealthProbeParametersResponseOutput
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersResponseArgs struct {
	// The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds pulumi.IntPtrInput `pulumi:"probeIntervalInSeconds"`
	// The path relative to the origin that is used to determine the health of the origin.
	ProbePath pulumi.StringPtrInput `pulumi:"probePath"`
	// Protocol to use for health probe.
	ProbeProtocol pulumi.StringPtrInput `pulumi:"probeProtocol"`
	// The type of health probe request that is made.
	ProbeRequestType pulumi.StringPtrInput `pulumi:"probeRequestType"`
}

func (HealthProbeParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeParametersResponse)(nil)).Elem()
}

func (i HealthProbeParametersResponseArgs) ToHealthProbeParametersResponseOutput() HealthProbeParametersResponseOutput {
	return i.ToHealthProbeParametersResponseOutputWithContext(context.Background())
}

func (i HealthProbeParametersResponseArgs) ToHealthProbeParametersResponseOutputWithContext(ctx context.Context) HealthProbeParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersResponseOutput)
}

func (i HealthProbeParametersResponseArgs) ToHealthProbeParametersResponsePtrOutput() HealthProbeParametersResponsePtrOutput {
	return i.ToHealthProbeParametersResponsePtrOutputWithContext(context.Background())
}

func (i HealthProbeParametersResponseArgs) ToHealthProbeParametersResponsePtrOutputWithContext(ctx context.Context) HealthProbeParametersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersResponseOutput).ToHealthProbeParametersResponsePtrOutputWithContext(ctx)
}

// HealthProbeParametersResponsePtrInput is an input type that accepts HealthProbeParametersResponseArgs, HealthProbeParametersResponsePtr and HealthProbeParametersResponsePtrOutput values.
// You can construct a concrete instance of `HealthProbeParametersResponsePtrInput` via:
//
//          HealthProbeParametersResponseArgs{...}
//
//  or:
//
//          nil
type HealthProbeParametersResponsePtrInput interface {
	pulumi.Input

	ToHealthProbeParametersResponsePtrOutput() HealthProbeParametersResponsePtrOutput
	ToHealthProbeParametersResponsePtrOutputWithContext(context.Context) HealthProbeParametersResponsePtrOutput
}

type healthProbeParametersResponsePtrType HealthProbeParametersResponseArgs

func HealthProbeParametersResponsePtr(v *HealthProbeParametersResponseArgs) HealthProbeParametersResponsePtrInput {
	return (*healthProbeParametersResponsePtrType)(v)
}

func (*healthProbeParametersResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthProbeParametersResponse)(nil)).Elem()
}

func (i *healthProbeParametersResponsePtrType) ToHealthProbeParametersResponsePtrOutput() HealthProbeParametersResponsePtrOutput {
	return i.ToHealthProbeParametersResponsePtrOutputWithContext(context.Background())
}

func (i *healthProbeParametersResponsePtrType) ToHealthProbeParametersResponsePtrOutputWithContext(ctx context.Context) HealthProbeParametersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersResponsePtrOutput)
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersResponseOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeParametersResponse)(nil)).Elem()
}

func (o HealthProbeParametersResponseOutput) ToHealthProbeParametersResponseOutput() HealthProbeParametersResponseOutput {
	return o
}

func (o HealthProbeParametersResponseOutput) ToHealthProbeParametersResponseOutputWithContext(ctx context.Context) HealthProbeParametersResponseOutput {
	return o
}

func (o HealthProbeParametersResponseOutput) ToHealthProbeParametersResponsePtrOutput() HealthProbeParametersResponsePtrOutput {
	return o.ToHealthProbeParametersResponsePtrOutputWithContext(context.Background())
}

func (o HealthProbeParametersResponseOutput) ToHealthProbeParametersResponsePtrOutputWithContext(ctx context.Context) HealthProbeParametersResponsePtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *HealthProbeParametersResponse {
		return &v
	}).(HealthProbeParametersResponsePtrOutput)
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersResponseOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *int { return v.ProbeIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersResponseOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *string { return v.ProbePath }).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersResponseOutput) ProbeProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *string { return v.ProbeProtocol }).(pulumi.StringPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersResponseOutput) ProbeRequestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *string { return v.ProbeRequestType }).(pulumi.StringPtrOutput)
}

type HealthProbeParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthProbeParametersResponse)(nil)).Elem()
}

func (o HealthProbeParametersResponsePtrOutput) ToHealthProbeParametersResponsePtrOutput() HealthProbeParametersResponsePtrOutput {
	return o
}

func (o HealthProbeParametersResponsePtrOutput) ToHealthProbeParametersResponsePtrOutputWithContext(ctx context.Context) HealthProbeParametersResponsePtrOutput {
	return o
}

func (o HealthProbeParametersResponsePtrOutput) Elem() HealthProbeParametersResponseOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) HealthProbeParametersResponse { return *v }).(HealthProbeParametersResponseOutput)
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersResponsePtrOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.ProbeIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersResponsePtrOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbePath
	}).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersResponsePtrOutput) ProbeProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbeProtocol
	}).(pulumi.StringPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersResponsePtrOutput) ProbeRequestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbeRequestType
	}).(pulumi.StringPtrOutput)
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParameters struct {
	// The inclusive start of the http status code range.
	Begin *int `pulumi:"begin"`
	// The inclusive end of the http status code range.
	End *int `pulumi:"end"`
}

// HttpErrorRangeParametersInput is an input type that accepts HttpErrorRangeParametersArgs and HttpErrorRangeParametersOutput values.
// You can construct a concrete instance of `HttpErrorRangeParametersInput` via:
//
//          HttpErrorRangeParametersArgs{...}
type HttpErrorRangeParametersInput interface {
	pulumi.Input

	ToHttpErrorRangeParametersOutput() HttpErrorRangeParametersOutput
	ToHttpErrorRangeParametersOutputWithContext(context.Context) HttpErrorRangeParametersOutput
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersArgs struct {
	// The inclusive start of the http status code range.
	Begin pulumi.IntPtrInput `pulumi:"begin"`
	// The inclusive end of the http status code range.
	End pulumi.IntPtrInput `pulumi:"end"`
}

func (HttpErrorRangeParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpErrorRangeParameters)(nil)).Elem()
}

func (i HttpErrorRangeParametersArgs) ToHttpErrorRangeParametersOutput() HttpErrorRangeParametersOutput {
	return i.ToHttpErrorRangeParametersOutputWithContext(context.Background())
}

func (i HttpErrorRangeParametersArgs) ToHttpErrorRangeParametersOutputWithContext(ctx context.Context) HttpErrorRangeParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpErrorRangeParametersOutput)
}

// HttpErrorRangeParametersArrayInput is an input type that accepts HttpErrorRangeParametersArray and HttpErrorRangeParametersArrayOutput values.
// You can construct a concrete instance of `HttpErrorRangeParametersArrayInput` via:
//
//          HttpErrorRangeParametersArray{ HttpErrorRangeParametersArgs{...} }
type HttpErrorRangeParametersArrayInput interface {
	pulumi.Input

	ToHttpErrorRangeParametersArrayOutput() HttpErrorRangeParametersArrayOutput
	ToHttpErrorRangeParametersArrayOutputWithContext(context.Context) HttpErrorRangeParametersArrayOutput
}

type HttpErrorRangeParametersArray []HttpErrorRangeParametersInput

func (HttpErrorRangeParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpErrorRangeParameters)(nil)).Elem()
}

func (i HttpErrorRangeParametersArray) ToHttpErrorRangeParametersArrayOutput() HttpErrorRangeParametersArrayOutput {
	return i.ToHttpErrorRangeParametersArrayOutputWithContext(context.Background())
}

func (i HttpErrorRangeParametersArray) ToHttpErrorRangeParametersArrayOutputWithContext(ctx context.Context) HttpErrorRangeParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpErrorRangeParametersArrayOutput)
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpErrorRangeParameters)(nil)).Elem()
}

func (o HttpErrorRangeParametersOutput) ToHttpErrorRangeParametersOutput() HttpErrorRangeParametersOutput {
	return o
}

func (o HttpErrorRangeParametersOutput) ToHttpErrorRangeParametersOutputWithContext(ctx context.Context) HttpErrorRangeParametersOutput {
	return o
}

// The inclusive start of the http status code range.
func (o HttpErrorRangeParametersOutput) Begin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParameters) *int { return v.Begin }).(pulumi.IntPtrOutput)
}

// The inclusive end of the http status code range.
func (o HttpErrorRangeParametersOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParameters) *int { return v.End }).(pulumi.IntPtrOutput)
}

type HttpErrorRangeParametersArrayOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpErrorRangeParameters)(nil)).Elem()
}

func (o HttpErrorRangeParametersArrayOutput) ToHttpErrorRangeParametersArrayOutput() HttpErrorRangeParametersArrayOutput {
	return o
}

func (o HttpErrorRangeParametersArrayOutput) ToHttpErrorRangeParametersArrayOutputWithContext(ctx context.Context) HttpErrorRangeParametersArrayOutput {
	return o
}

func (o HttpErrorRangeParametersArrayOutput) Index(i pulumi.IntInput) HttpErrorRangeParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpErrorRangeParameters {
		return vs[0].([]HttpErrorRangeParameters)[vs[1].(int)]
	}).(HttpErrorRangeParametersOutput)
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersInvokeResponse struct {
	// The inclusive start of the http status code range.
	Begin *int `pulumi:"begin"`
	// The inclusive end of the http status code range.
	End *int `pulumi:"end"`
}

// HttpErrorRangeParametersInvokeResponseInput is an input type that accepts HttpErrorRangeParametersInvokeResponseArgs and HttpErrorRangeParametersInvokeResponseOutput values.
// You can construct a concrete instance of `HttpErrorRangeParametersInvokeResponseInput` via:
//
//          HttpErrorRangeParametersInvokeResponseArgs{...}
type HttpErrorRangeParametersInvokeResponseInput interface {
	pulumi.Input

	ToHttpErrorRangeParametersInvokeResponseOutput() HttpErrorRangeParametersInvokeResponseOutput
	ToHttpErrorRangeParametersInvokeResponseOutputWithContext(context.Context) HttpErrorRangeParametersInvokeResponseOutput
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersInvokeResponseArgs struct {
	// The inclusive start of the http status code range.
	Begin pulumi.IntPtrInput `pulumi:"begin"`
	// The inclusive end of the http status code range.
	End pulumi.IntPtrInput `pulumi:"end"`
}

func (HttpErrorRangeParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpErrorRangeParametersInvokeResponse)(nil)).Elem()
}

func (i HttpErrorRangeParametersInvokeResponseArgs) ToHttpErrorRangeParametersInvokeResponseOutput() HttpErrorRangeParametersInvokeResponseOutput {
	return i.ToHttpErrorRangeParametersInvokeResponseOutputWithContext(context.Background())
}

func (i HttpErrorRangeParametersInvokeResponseArgs) ToHttpErrorRangeParametersInvokeResponseOutputWithContext(ctx context.Context) HttpErrorRangeParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpErrorRangeParametersInvokeResponseOutput)
}

// HttpErrorRangeParametersInvokeResponseArrayInput is an input type that accepts HttpErrorRangeParametersInvokeResponseArray and HttpErrorRangeParametersInvokeResponseArrayOutput values.
// You can construct a concrete instance of `HttpErrorRangeParametersInvokeResponseArrayInput` via:
//
//          HttpErrorRangeParametersInvokeResponseArray{ HttpErrorRangeParametersInvokeResponseArgs{...} }
type HttpErrorRangeParametersInvokeResponseArrayInput interface {
	pulumi.Input

	ToHttpErrorRangeParametersInvokeResponseArrayOutput() HttpErrorRangeParametersInvokeResponseArrayOutput
	ToHttpErrorRangeParametersInvokeResponseArrayOutputWithContext(context.Context) HttpErrorRangeParametersInvokeResponseArrayOutput
}

type HttpErrorRangeParametersInvokeResponseArray []HttpErrorRangeParametersInvokeResponseInput

func (HttpErrorRangeParametersInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpErrorRangeParametersInvokeResponse)(nil)).Elem()
}

func (i HttpErrorRangeParametersInvokeResponseArray) ToHttpErrorRangeParametersInvokeResponseArrayOutput() HttpErrorRangeParametersInvokeResponseArrayOutput {
	return i.ToHttpErrorRangeParametersInvokeResponseArrayOutputWithContext(context.Background())
}

func (i HttpErrorRangeParametersInvokeResponseArray) ToHttpErrorRangeParametersInvokeResponseArrayOutputWithContext(ctx context.Context) HttpErrorRangeParametersInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpErrorRangeParametersInvokeResponseArrayOutput)
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpErrorRangeParametersInvokeResponse)(nil)).Elem()
}

func (o HttpErrorRangeParametersInvokeResponseOutput) ToHttpErrorRangeParametersInvokeResponseOutput() HttpErrorRangeParametersInvokeResponseOutput {
	return o
}

func (o HttpErrorRangeParametersInvokeResponseOutput) ToHttpErrorRangeParametersInvokeResponseOutputWithContext(ctx context.Context) HttpErrorRangeParametersInvokeResponseOutput {
	return o
}

// The inclusive start of the http status code range.
func (o HttpErrorRangeParametersInvokeResponseOutput) Begin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParametersInvokeResponse) *int { return v.Begin }).(pulumi.IntPtrOutput)
}

// The inclusive end of the http status code range.
func (o HttpErrorRangeParametersInvokeResponseOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParametersInvokeResponse) *int { return v.End }).(pulumi.IntPtrOutput)
}

type HttpErrorRangeParametersInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpErrorRangeParametersInvokeResponse)(nil)).Elem()
}

func (o HttpErrorRangeParametersInvokeResponseArrayOutput) ToHttpErrorRangeParametersInvokeResponseArrayOutput() HttpErrorRangeParametersInvokeResponseArrayOutput {
	return o
}

func (o HttpErrorRangeParametersInvokeResponseArrayOutput) ToHttpErrorRangeParametersInvokeResponseArrayOutputWithContext(ctx context.Context) HttpErrorRangeParametersInvokeResponseArrayOutput {
	return o
}

func (o HttpErrorRangeParametersInvokeResponseArrayOutput) Index(i pulumi.IntInput) HttpErrorRangeParametersInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpErrorRangeParametersInvokeResponse {
		return vs[0].([]HttpErrorRangeParametersInvokeResponse)[vs[1].(int)]
	}).(HttpErrorRangeParametersInvokeResponseOutput)
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersResponse struct {
	// The inclusive start of the http status code range.
	Begin *int `pulumi:"begin"`
	// The inclusive end of the http status code range.
	End *int `pulumi:"end"`
}

// HttpErrorRangeParametersResponseInput is an input type that accepts HttpErrorRangeParametersResponseArgs and HttpErrorRangeParametersResponseOutput values.
// You can construct a concrete instance of `HttpErrorRangeParametersResponseInput` via:
//
//          HttpErrorRangeParametersResponseArgs{...}
type HttpErrorRangeParametersResponseInput interface {
	pulumi.Input

	ToHttpErrorRangeParametersResponseOutput() HttpErrorRangeParametersResponseOutput
	ToHttpErrorRangeParametersResponseOutputWithContext(context.Context) HttpErrorRangeParametersResponseOutput
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersResponseArgs struct {
	// The inclusive start of the http status code range.
	Begin pulumi.IntPtrInput `pulumi:"begin"`
	// The inclusive end of the http status code range.
	End pulumi.IntPtrInput `pulumi:"end"`
}

func (HttpErrorRangeParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpErrorRangeParametersResponse)(nil)).Elem()
}

func (i HttpErrorRangeParametersResponseArgs) ToHttpErrorRangeParametersResponseOutput() HttpErrorRangeParametersResponseOutput {
	return i.ToHttpErrorRangeParametersResponseOutputWithContext(context.Background())
}

func (i HttpErrorRangeParametersResponseArgs) ToHttpErrorRangeParametersResponseOutputWithContext(ctx context.Context) HttpErrorRangeParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpErrorRangeParametersResponseOutput)
}

// HttpErrorRangeParametersResponseArrayInput is an input type that accepts HttpErrorRangeParametersResponseArray and HttpErrorRangeParametersResponseArrayOutput values.
// You can construct a concrete instance of `HttpErrorRangeParametersResponseArrayInput` via:
//
//          HttpErrorRangeParametersResponseArray{ HttpErrorRangeParametersResponseArgs{...} }
type HttpErrorRangeParametersResponseArrayInput interface {
	pulumi.Input

	ToHttpErrorRangeParametersResponseArrayOutput() HttpErrorRangeParametersResponseArrayOutput
	ToHttpErrorRangeParametersResponseArrayOutputWithContext(context.Context) HttpErrorRangeParametersResponseArrayOutput
}

type HttpErrorRangeParametersResponseArray []HttpErrorRangeParametersResponseInput

func (HttpErrorRangeParametersResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpErrorRangeParametersResponse)(nil)).Elem()
}

func (i HttpErrorRangeParametersResponseArray) ToHttpErrorRangeParametersResponseArrayOutput() HttpErrorRangeParametersResponseArrayOutput {
	return i.ToHttpErrorRangeParametersResponseArrayOutputWithContext(context.Background())
}

func (i HttpErrorRangeParametersResponseArray) ToHttpErrorRangeParametersResponseArrayOutputWithContext(ctx context.Context) HttpErrorRangeParametersResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpErrorRangeParametersResponseArrayOutput)
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersResponseOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpErrorRangeParametersResponse)(nil)).Elem()
}

func (o HttpErrorRangeParametersResponseOutput) ToHttpErrorRangeParametersResponseOutput() HttpErrorRangeParametersResponseOutput {
	return o
}

func (o HttpErrorRangeParametersResponseOutput) ToHttpErrorRangeParametersResponseOutputWithContext(ctx context.Context) HttpErrorRangeParametersResponseOutput {
	return o
}

// The inclusive start of the http status code range.
func (o HttpErrorRangeParametersResponseOutput) Begin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParametersResponse) *int { return v.Begin }).(pulumi.IntPtrOutput)
}

// The inclusive end of the http status code range.
func (o HttpErrorRangeParametersResponseOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParametersResponse) *int { return v.End }).(pulumi.IntPtrOutput)
}

type HttpErrorRangeParametersResponseArrayOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpErrorRangeParametersResponse)(nil)).Elem()
}

func (o HttpErrorRangeParametersResponseArrayOutput) ToHttpErrorRangeParametersResponseArrayOutput() HttpErrorRangeParametersResponseArrayOutput {
	return o
}

func (o HttpErrorRangeParametersResponseArrayOutput) ToHttpErrorRangeParametersResponseArrayOutputWithContext(ctx context.Context) HttpErrorRangeParametersResponseArrayOutput {
	return o
}

func (o HttpErrorRangeParametersResponseArrayOutput) Index(i pulumi.IntInput) HttpErrorRangeParametersResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpErrorRangeParametersResponse {
		return vs[0].([]HttpErrorRangeParametersResponse)[vs[1].(int)]
	}).(HttpErrorRangeParametersResponseOutput)
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// HttpVersionMatchConditionParametersInput is an input type that accepts HttpVersionMatchConditionParametersArgs and HttpVersionMatchConditionParametersOutput values.
// You can construct a concrete instance of `HttpVersionMatchConditionParametersInput` via:
//
//          HttpVersionMatchConditionParametersArgs{...}
type HttpVersionMatchConditionParametersInput interface {
	pulumi.Input

	ToHttpVersionMatchConditionParametersOutput() HttpVersionMatchConditionParametersOutput
	ToHttpVersionMatchConditionParametersOutputWithContext(context.Context) HttpVersionMatchConditionParametersOutput
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (HttpVersionMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpVersionMatchConditionParameters)(nil)).Elem()
}

func (i HttpVersionMatchConditionParametersArgs) ToHttpVersionMatchConditionParametersOutput() HttpVersionMatchConditionParametersOutput {
	return i.ToHttpVersionMatchConditionParametersOutputWithContext(context.Background())
}

func (i HttpVersionMatchConditionParametersArgs) ToHttpVersionMatchConditionParametersOutputWithContext(ctx context.Context) HttpVersionMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpVersionMatchConditionParametersOutput)
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (HttpVersionMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpVersionMatchConditionParameters)(nil)).Elem()
}

func (o HttpVersionMatchConditionParametersOutput) ToHttpVersionMatchConditionParametersOutput() HttpVersionMatchConditionParametersOutput {
	return o
}

func (o HttpVersionMatchConditionParametersOutput) ToHttpVersionMatchConditionParametersOutputWithContext(ctx context.Context) HttpVersionMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o HttpVersionMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o HttpVersionMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o HttpVersionMatchConditionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o HttpVersionMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParametersInvokeResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// HttpVersionMatchConditionParametersInvokeResponseInput is an input type that accepts HttpVersionMatchConditionParametersInvokeResponseArgs and HttpVersionMatchConditionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `HttpVersionMatchConditionParametersInvokeResponseInput` via:
//
//          HttpVersionMatchConditionParametersInvokeResponseArgs{...}
type HttpVersionMatchConditionParametersInvokeResponseInput interface {
	pulumi.Input

	ToHttpVersionMatchConditionParametersInvokeResponseOutput() HttpVersionMatchConditionParametersInvokeResponseOutput
	ToHttpVersionMatchConditionParametersInvokeResponseOutputWithContext(context.Context) HttpVersionMatchConditionParametersInvokeResponseOutput
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParametersInvokeResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (HttpVersionMatchConditionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpVersionMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (i HttpVersionMatchConditionParametersInvokeResponseArgs) ToHttpVersionMatchConditionParametersInvokeResponseOutput() HttpVersionMatchConditionParametersInvokeResponseOutput {
	return i.ToHttpVersionMatchConditionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i HttpVersionMatchConditionParametersInvokeResponseArgs) ToHttpVersionMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) HttpVersionMatchConditionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpVersionMatchConditionParametersInvokeResponseOutput)
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (HttpVersionMatchConditionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpVersionMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (o HttpVersionMatchConditionParametersInvokeResponseOutput) ToHttpVersionMatchConditionParametersInvokeResponseOutput() HttpVersionMatchConditionParametersInvokeResponseOutput {
	return o
}

func (o HttpVersionMatchConditionParametersInvokeResponseOutput) ToHttpVersionMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) HttpVersionMatchConditionParametersInvokeResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o HttpVersionMatchConditionParametersInvokeResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParametersInvokeResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o HttpVersionMatchConditionParametersInvokeResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParametersInvokeResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o HttpVersionMatchConditionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o HttpVersionMatchConditionParametersInvokeResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParametersInvokeResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// HttpVersionMatchConditionParametersResponseInput is an input type that accepts HttpVersionMatchConditionParametersResponseArgs and HttpVersionMatchConditionParametersResponseOutput values.
// You can construct a concrete instance of `HttpVersionMatchConditionParametersResponseInput` via:
//
//          HttpVersionMatchConditionParametersResponseArgs{...}
type HttpVersionMatchConditionParametersResponseInput interface {
	pulumi.Input

	ToHttpVersionMatchConditionParametersResponseOutput() HttpVersionMatchConditionParametersResponseOutput
	ToHttpVersionMatchConditionParametersResponseOutputWithContext(context.Context) HttpVersionMatchConditionParametersResponseOutput
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParametersResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (HttpVersionMatchConditionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpVersionMatchConditionParametersResponse)(nil)).Elem()
}

func (i HttpVersionMatchConditionParametersResponseArgs) ToHttpVersionMatchConditionParametersResponseOutput() HttpVersionMatchConditionParametersResponseOutput {
	return i.ToHttpVersionMatchConditionParametersResponseOutputWithContext(context.Background())
}

func (i HttpVersionMatchConditionParametersResponseArgs) ToHttpVersionMatchConditionParametersResponseOutputWithContext(ctx context.Context) HttpVersionMatchConditionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpVersionMatchConditionParametersResponseOutput)
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (HttpVersionMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpVersionMatchConditionParametersResponse)(nil)).Elem()
}

func (o HttpVersionMatchConditionParametersResponseOutput) ToHttpVersionMatchConditionParametersResponseOutput() HttpVersionMatchConditionParametersResponseOutput {
	return o
}

func (o HttpVersionMatchConditionParametersResponseOutput) ToHttpVersionMatchConditionParametersResponseOutputWithContext(ctx context.Context) HttpVersionMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o HttpVersionMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o HttpVersionMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o HttpVersionMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o HttpVersionMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// IsDeviceMatchConditionParametersInput is an input type that accepts IsDeviceMatchConditionParametersArgs and IsDeviceMatchConditionParametersOutput values.
// You can construct a concrete instance of `IsDeviceMatchConditionParametersInput` via:
//
//          IsDeviceMatchConditionParametersArgs{...}
type IsDeviceMatchConditionParametersInput interface {
	pulumi.Input

	ToIsDeviceMatchConditionParametersOutput() IsDeviceMatchConditionParametersOutput
	ToIsDeviceMatchConditionParametersOutputWithContext(context.Context) IsDeviceMatchConditionParametersOutput
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (IsDeviceMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IsDeviceMatchConditionParameters)(nil)).Elem()
}

func (i IsDeviceMatchConditionParametersArgs) ToIsDeviceMatchConditionParametersOutput() IsDeviceMatchConditionParametersOutput {
	return i.ToIsDeviceMatchConditionParametersOutputWithContext(context.Background())
}

func (i IsDeviceMatchConditionParametersArgs) ToIsDeviceMatchConditionParametersOutputWithContext(ctx context.Context) IsDeviceMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IsDeviceMatchConditionParametersOutput)
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (IsDeviceMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IsDeviceMatchConditionParameters)(nil)).Elem()
}

func (o IsDeviceMatchConditionParametersOutput) ToIsDeviceMatchConditionParametersOutput() IsDeviceMatchConditionParametersOutput {
	return o
}

func (o IsDeviceMatchConditionParametersOutput) ToIsDeviceMatchConditionParametersOutputWithContext(ctx context.Context) IsDeviceMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o IsDeviceMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o IsDeviceMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o IsDeviceMatchConditionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o IsDeviceMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o IsDeviceMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParametersInvokeResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// IsDeviceMatchConditionParametersInvokeResponseInput is an input type that accepts IsDeviceMatchConditionParametersInvokeResponseArgs and IsDeviceMatchConditionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `IsDeviceMatchConditionParametersInvokeResponseInput` via:
//
//          IsDeviceMatchConditionParametersInvokeResponseArgs{...}
type IsDeviceMatchConditionParametersInvokeResponseInput interface {
	pulumi.Input

	ToIsDeviceMatchConditionParametersInvokeResponseOutput() IsDeviceMatchConditionParametersInvokeResponseOutput
	ToIsDeviceMatchConditionParametersInvokeResponseOutputWithContext(context.Context) IsDeviceMatchConditionParametersInvokeResponseOutput
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParametersInvokeResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (IsDeviceMatchConditionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IsDeviceMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (i IsDeviceMatchConditionParametersInvokeResponseArgs) ToIsDeviceMatchConditionParametersInvokeResponseOutput() IsDeviceMatchConditionParametersInvokeResponseOutput {
	return i.ToIsDeviceMatchConditionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i IsDeviceMatchConditionParametersInvokeResponseArgs) ToIsDeviceMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) IsDeviceMatchConditionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IsDeviceMatchConditionParametersInvokeResponseOutput)
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (IsDeviceMatchConditionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IsDeviceMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (o IsDeviceMatchConditionParametersInvokeResponseOutput) ToIsDeviceMatchConditionParametersInvokeResponseOutput() IsDeviceMatchConditionParametersInvokeResponseOutput {
	return o
}

func (o IsDeviceMatchConditionParametersInvokeResponseOutput) ToIsDeviceMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) IsDeviceMatchConditionParametersInvokeResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o IsDeviceMatchConditionParametersInvokeResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersInvokeResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o IsDeviceMatchConditionParametersInvokeResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersInvokeResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o IsDeviceMatchConditionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o IsDeviceMatchConditionParametersInvokeResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersInvokeResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o IsDeviceMatchConditionParametersInvokeResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersInvokeResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// IsDeviceMatchConditionParametersResponseInput is an input type that accepts IsDeviceMatchConditionParametersResponseArgs and IsDeviceMatchConditionParametersResponseOutput values.
// You can construct a concrete instance of `IsDeviceMatchConditionParametersResponseInput` via:
//
//          IsDeviceMatchConditionParametersResponseArgs{...}
type IsDeviceMatchConditionParametersResponseInput interface {
	pulumi.Input

	ToIsDeviceMatchConditionParametersResponseOutput() IsDeviceMatchConditionParametersResponseOutput
	ToIsDeviceMatchConditionParametersResponseOutputWithContext(context.Context) IsDeviceMatchConditionParametersResponseOutput
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParametersResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (IsDeviceMatchConditionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IsDeviceMatchConditionParametersResponse)(nil)).Elem()
}

func (i IsDeviceMatchConditionParametersResponseArgs) ToIsDeviceMatchConditionParametersResponseOutput() IsDeviceMatchConditionParametersResponseOutput {
	return i.ToIsDeviceMatchConditionParametersResponseOutputWithContext(context.Background())
}

func (i IsDeviceMatchConditionParametersResponseArgs) ToIsDeviceMatchConditionParametersResponseOutputWithContext(ctx context.Context) IsDeviceMatchConditionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IsDeviceMatchConditionParametersResponseOutput)
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (IsDeviceMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IsDeviceMatchConditionParametersResponse)(nil)).Elem()
}

func (o IsDeviceMatchConditionParametersResponseOutput) ToIsDeviceMatchConditionParametersResponseOutput() IsDeviceMatchConditionParametersResponseOutput {
	return o
}

func (o IsDeviceMatchConditionParametersResponseOutput) ToIsDeviceMatchConditionParametersResponseOutputWithContext(ctx context.Context) IsDeviceMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o IsDeviceMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o IsDeviceMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o IsDeviceMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o IsDeviceMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o IsDeviceMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Describes the parameters for using a user's KeyVault for URL Signing Key.
type KeyVaultSigningKeyParameters struct {
	OdataType string `pulumi:"odataType"`
	// Resource group of the user's Key Vault containing the secret
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of secret in Key Vault.
	SecretName string `pulumi:"secretName"`
	// The version(GUID) of secret in Key Vault.
	SecretVersion string `pulumi:"secretVersion"`
	// Subscription Id of the user's Key Vault containing the secret
	SubscriptionId string `pulumi:"subscriptionId"`
	// The name of the user's Key Vault containing the secret
	VaultName string `pulumi:"vaultName"`
}

// KeyVaultSigningKeyParametersInput is an input type that accepts KeyVaultSigningKeyParametersArgs and KeyVaultSigningKeyParametersOutput values.
// You can construct a concrete instance of `KeyVaultSigningKeyParametersInput` via:
//
//          KeyVaultSigningKeyParametersArgs{...}
type KeyVaultSigningKeyParametersInput interface {
	pulumi.Input

	ToKeyVaultSigningKeyParametersOutput() KeyVaultSigningKeyParametersOutput
	ToKeyVaultSigningKeyParametersOutputWithContext(context.Context) KeyVaultSigningKeyParametersOutput
}

// Describes the parameters for using a user's KeyVault for URL Signing Key.
type KeyVaultSigningKeyParametersArgs struct {
	OdataType pulumi.StringInput `pulumi:"odataType"`
	// Resource group of the user's Key Vault containing the secret
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of secret in Key Vault.
	SecretName pulumi.StringInput `pulumi:"secretName"`
	// The version(GUID) of secret in Key Vault.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
	// Subscription Id of the user's Key Vault containing the secret
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// The name of the user's Key Vault containing the secret
	VaultName pulumi.StringInput `pulumi:"vaultName"`
}

func (KeyVaultSigningKeyParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSigningKeyParameters)(nil)).Elem()
}

func (i KeyVaultSigningKeyParametersArgs) ToKeyVaultSigningKeyParametersOutput() KeyVaultSigningKeyParametersOutput {
	return i.ToKeyVaultSigningKeyParametersOutputWithContext(context.Background())
}

func (i KeyVaultSigningKeyParametersArgs) ToKeyVaultSigningKeyParametersOutputWithContext(ctx context.Context) KeyVaultSigningKeyParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSigningKeyParametersOutput)
}

// Describes the parameters for using a user's KeyVault for URL Signing Key.
type KeyVaultSigningKeyParametersOutput struct{ *pulumi.OutputState }

func (KeyVaultSigningKeyParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSigningKeyParameters)(nil)).Elem()
}

func (o KeyVaultSigningKeyParametersOutput) ToKeyVaultSigningKeyParametersOutput() KeyVaultSigningKeyParametersOutput {
	return o
}

func (o KeyVaultSigningKeyParametersOutput) ToKeyVaultSigningKeyParametersOutputWithContext(ctx context.Context) KeyVaultSigningKeyParametersOutput {
	return o
}

func (o KeyVaultSigningKeyParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// Resource group of the user's Key Vault containing the secret
func (o KeyVaultSigningKeyParametersOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParameters) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The name of secret in Key Vault.
func (o KeyVaultSigningKeyParametersOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParameters) string { return v.SecretName }).(pulumi.StringOutput)
}

// The version(GUID) of secret in Key Vault.
func (o KeyVaultSigningKeyParametersOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParameters) string { return v.SecretVersion }).(pulumi.StringOutput)
}

// Subscription Id of the user's Key Vault containing the secret
func (o KeyVaultSigningKeyParametersOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParameters) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// The name of the user's Key Vault containing the secret
func (o KeyVaultSigningKeyParametersOutput) VaultName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParameters) string { return v.VaultName }).(pulumi.StringOutput)
}

// Describes the parameters for using a user's KeyVault for URL Signing Key.
type KeyVaultSigningKeyParametersInvokeResponse struct {
	OdataType string `pulumi:"odataType"`
	// Resource group of the user's Key Vault containing the secret
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of secret in Key Vault.
	SecretName string `pulumi:"secretName"`
	// The version(GUID) of secret in Key Vault.
	SecretVersion string `pulumi:"secretVersion"`
	// Subscription Id of the user's Key Vault containing the secret
	SubscriptionId string `pulumi:"subscriptionId"`
	// The name of the user's Key Vault containing the secret
	VaultName string `pulumi:"vaultName"`
}

// KeyVaultSigningKeyParametersInvokeResponseInput is an input type that accepts KeyVaultSigningKeyParametersInvokeResponseArgs and KeyVaultSigningKeyParametersInvokeResponseOutput values.
// You can construct a concrete instance of `KeyVaultSigningKeyParametersInvokeResponseInput` via:
//
//          KeyVaultSigningKeyParametersInvokeResponseArgs{...}
type KeyVaultSigningKeyParametersInvokeResponseInput interface {
	pulumi.Input

	ToKeyVaultSigningKeyParametersInvokeResponseOutput() KeyVaultSigningKeyParametersInvokeResponseOutput
	ToKeyVaultSigningKeyParametersInvokeResponseOutputWithContext(context.Context) KeyVaultSigningKeyParametersInvokeResponseOutput
}

// Describes the parameters for using a user's KeyVault for URL Signing Key.
type KeyVaultSigningKeyParametersInvokeResponseArgs struct {
	OdataType pulumi.StringInput `pulumi:"odataType"`
	// Resource group of the user's Key Vault containing the secret
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of secret in Key Vault.
	SecretName pulumi.StringInput `pulumi:"secretName"`
	// The version(GUID) of secret in Key Vault.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
	// Subscription Id of the user's Key Vault containing the secret
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// The name of the user's Key Vault containing the secret
	VaultName pulumi.StringInput `pulumi:"vaultName"`
}

func (KeyVaultSigningKeyParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSigningKeyParametersInvokeResponse)(nil)).Elem()
}

func (i KeyVaultSigningKeyParametersInvokeResponseArgs) ToKeyVaultSigningKeyParametersInvokeResponseOutput() KeyVaultSigningKeyParametersInvokeResponseOutput {
	return i.ToKeyVaultSigningKeyParametersInvokeResponseOutputWithContext(context.Background())
}

func (i KeyVaultSigningKeyParametersInvokeResponseArgs) ToKeyVaultSigningKeyParametersInvokeResponseOutputWithContext(ctx context.Context) KeyVaultSigningKeyParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSigningKeyParametersInvokeResponseOutput)
}

// Describes the parameters for using a user's KeyVault for URL Signing Key.
type KeyVaultSigningKeyParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultSigningKeyParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSigningKeyParametersInvokeResponse)(nil)).Elem()
}

func (o KeyVaultSigningKeyParametersInvokeResponseOutput) ToKeyVaultSigningKeyParametersInvokeResponseOutput() KeyVaultSigningKeyParametersInvokeResponseOutput {
	return o
}

func (o KeyVaultSigningKeyParametersInvokeResponseOutput) ToKeyVaultSigningKeyParametersInvokeResponseOutputWithContext(ctx context.Context) KeyVaultSigningKeyParametersInvokeResponseOutput {
	return o
}

func (o KeyVaultSigningKeyParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Resource group of the user's Key Vault containing the secret
func (o KeyVaultSigningKeyParametersInvokeResponseOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersInvokeResponse) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The name of secret in Key Vault.
func (o KeyVaultSigningKeyParametersInvokeResponseOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersInvokeResponse) string { return v.SecretName }).(pulumi.StringOutput)
}

// The version(GUID) of secret in Key Vault.
func (o KeyVaultSigningKeyParametersInvokeResponseOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersInvokeResponse) string { return v.SecretVersion }).(pulumi.StringOutput)
}

// Subscription Id of the user's Key Vault containing the secret
func (o KeyVaultSigningKeyParametersInvokeResponseOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersInvokeResponse) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// The name of the user's Key Vault containing the secret
func (o KeyVaultSigningKeyParametersInvokeResponseOutput) VaultName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersInvokeResponse) string { return v.VaultName }).(pulumi.StringOutput)
}

// Describes the parameters for using a user's KeyVault for URL Signing Key.
type KeyVaultSigningKeyParametersResponse struct {
	OdataType string `pulumi:"odataType"`
	// Resource group of the user's Key Vault containing the secret
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of secret in Key Vault.
	SecretName string `pulumi:"secretName"`
	// The version(GUID) of secret in Key Vault.
	SecretVersion string `pulumi:"secretVersion"`
	// Subscription Id of the user's Key Vault containing the secret
	SubscriptionId string `pulumi:"subscriptionId"`
	// The name of the user's Key Vault containing the secret
	VaultName string `pulumi:"vaultName"`
}

// KeyVaultSigningKeyParametersResponseInput is an input type that accepts KeyVaultSigningKeyParametersResponseArgs and KeyVaultSigningKeyParametersResponseOutput values.
// You can construct a concrete instance of `KeyVaultSigningKeyParametersResponseInput` via:
//
//          KeyVaultSigningKeyParametersResponseArgs{...}
type KeyVaultSigningKeyParametersResponseInput interface {
	pulumi.Input

	ToKeyVaultSigningKeyParametersResponseOutput() KeyVaultSigningKeyParametersResponseOutput
	ToKeyVaultSigningKeyParametersResponseOutputWithContext(context.Context) KeyVaultSigningKeyParametersResponseOutput
}

// Describes the parameters for using a user's KeyVault for URL Signing Key.
type KeyVaultSigningKeyParametersResponseArgs struct {
	OdataType pulumi.StringInput `pulumi:"odataType"`
	// Resource group of the user's Key Vault containing the secret
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of secret in Key Vault.
	SecretName pulumi.StringInput `pulumi:"secretName"`
	// The version(GUID) of secret in Key Vault.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
	// Subscription Id of the user's Key Vault containing the secret
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// The name of the user's Key Vault containing the secret
	VaultName pulumi.StringInput `pulumi:"vaultName"`
}

func (KeyVaultSigningKeyParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSigningKeyParametersResponse)(nil)).Elem()
}

func (i KeyVaultSigningKeyParametersResponseArgs) ToKeyVaultSigningKeyParametersResponseOutput() KeyVaultSigningKeyParametersResponseOutput {
	return i.ToKeyVaultSigningKeyParametersResponseOutputWithContext(context.Background())
}

func (i KeyVaultSigningKeyParametersResponseArgs) ToKeyVaultSigningKeyParametersResponseOutputWithContext(ctx context.Context) KeyVaultSigningKeyParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSigningKeyParametersResponseOutput)
}

// Describes the parameters for using a user's KeyVault for URL Signing Key.
type KeyVaultSigningKeyParametersResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultSigningKeyParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSigningKeyParametersResponse)(nil)).Elem()
}

func (o KeyVaultSigningKeyParametersResponseOutput) ToKeyVaultSigningKeyParametersResponseOutput() KeyVaultSigningKeyParametersResponseOutput {
	return o
}

func (o KeyVaultSigningKeyParametersResponseOutput) ToKeyVaultSigningKeyParametersResponseOutputWithContext(ctx context.Context) KeyVaultSigningKeyParametersResponseOutput {
	return o
}

func (o KeyVaultSigningKeyParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Resource group of the user's Key Vault containing the secret
func (o KeyVaultSigningKeyParametersResponseOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersResponse) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The name of secret in Key Vault.
func (o KeyVaultSigningKeyParametersResponseOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersResponse) string { return v.SecretName }).(pulumi.StringOutput)
}

// The version(GUID) of secret in Key Vault.
func (o KeyVaultSigningKeyParametersResponseOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersResponse) string { return v.SecretVersion }).(pulumi.StringOutput)
}

// Subscription Id of the user's Key Vault containing the secret
func (o KeyVaultSigningKeyParametersResponseOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersResponse) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// The name of the user's Key Vault containing the secret
func (o KeyVaultSigningKeyParametersResponseOutput) VaultName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersResponse) string { return v.VaultName }).(pulumi.StringOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverride struct {
	// Describes the managed rule group within the rule set to override
	RuleGroupName string `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules []ManagedRuleOverride `pulumi:"rules"`
}

// ManagedRuleGroupOverrideInput is an input type that accepts ManagedRuleGroupOverrideArgs and ManagedRuleGroupOverrideOutput values.
// You can construct a concrete instance of `ManagedRuleGroupOverrideInput` via:
//
//          ManagedRuleGroupOverrideArgs{...}
type ManagedRuleGroupOverrideInput interface {
	pulumi.Input

	ToManagedRuleGroupOverrideOutput() ManagedRuleGroupOverrideOutput
	ToManagedRuleGroupOverrideOutputWithContext(context.Context) ManagedRuleGroupOverrideOutput
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideArgs struct {
	// Describes the managed rule group within the rule set to override
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules ManagedRuleOverrideArrayInput `pulumi:"rules"`
}

func (ManagedRuleGroupOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverride)(nil)).Elem()
}

func (i ManagedRuleGroupOverrideArgs) ToManagedRuleGroupOverrideOutput() ManagedRuleGroupOverrideOutput {
	return i.ToManagedRuleGroupOverrideOutputWithContext(context.Background())
}

func (i ManagedRuleGroupOverrideArgs) ToManagedRuleGroupOverrideOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleGroupOverrideOutput)
}

// ManagedRuleGroupOverrideArrayInput is an input type that accepts ManagedRuleGroupOverrideArray and ManagedRuleGroupOverrideArrayOutput values.
// You can construct a concrete instance of `ManagedRuleGroupOverrideArrayInput` via:
//
//          ManagedRuleGroupOverrideArray{ ManagedRuleGroupOverrideArgs{...} }
type ManagedRuleGroupOverrideArrayInput interface {
	pulumi.Input

	ToManagedRuleGroupOverrideArrayOutput() ManagedRuleGroupOverrideArrayOutput
	ToManagedRuleGroupOverrideArrayOutputWithContext(context.Context) ManagedRuleGroupOverrideArrayOutput
}

type ManagedRuleGroupOverrideArray []ManagedRuleGroupOverrideInput

func (ManagedRuleGroupOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverride)(nil)).Elem()
}

func (i ManagedRuleGroupOverrideArray) ToManagedRuleGroupOverrideArrayOutput() ManagedRuleGroupOverrideArrayOutput {
	return i.ToManagedRuleGroupOverrideArrayOutputWithContext(context.Background())
}

func (i ManagedRuleGroupOverrideArray) ToManagedRuleGroupOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleGroupOverrideArrayOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverride)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideOutput) ToManagedRuleGroupOverrideOutput() ManagedRuleGroupOverrideOutput {
	return o
}

func (o ManagedRuleGroupOverrideOutput) ToManagedRuleGroupOverrideOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideOutput {
	return o
}

// Describes the managed rule group within the rule set to override
func (o ManagedRuleGroupOverrideOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverride) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
func (o ManagedRuleGroupOverrideOutput) Rules() ManagedRuleOverrideArrayOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverride) []ManagedRuleOverride { return v.Rules }).(ManagedRuleOverrideArrayOutput)
}

type ManagedRuleGroupOverrideArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverride)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideArrayOutput) ToManagedRuleGroupOverrideArrayOutput() ManagedRuleGroupOverrideArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideArrayOutput) ToManagedRuleGroupOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideArrayOutput) Index(i pulumi.IntInput) ManagedRuleGroupOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleGroupOverride {
		return vs[0].([]ManagedRuleGroupOverride)[vs[1].(int)]
	}).(ManagedRuleGroupOverrideOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideInvokeResponse struct {
	// Describes the managed rule group within the rule set to override
	RuleGroupName string `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules []ManagedRuleOverrideInvokeResponse `pulumi:"rules"`
}

// ManagedRuleGroupOverrideInvokeResponseInput is an input type that accepts ManagedRuleGroupOverrideInvokeResponseArgs and ManagedRuleGroupOverrideInvokeResponseOutput values.
// You can construct a concrete instance of `ManagedRuleGroupOverrideInvokeResponseInput` via:
//
//          ManagedRuleGroupOverrideInvokeResponseArgs{...}
type ManagedRuleGroupOverrideInvokeResponseInput interface {
	pulumi.Input

	ToManagedRuleGroupOverrideInvokeResponseOutput() ManagedRuleGroupOverrideInvokeResponseOutput
	ToManagedRuleGroupOverrideInvokeResponseOutputWithContext(context.Context) ManagedRuleGroupOverrideInvokeResponseOutput
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideInvokeResponseArgs struct {
	// Describes the managed rule group within the rule set to override
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules ManagedRuleOverrideInvokeResponseArrayInput `pulumi:"rules"`
}

func (ManagedRuleGroupOverrideInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverrideInvokeResponse)(nil)).Elem()
}

func (i ManagedRuleGroupOverrideInvokeResponseArgs) ToManagedRuleGroupOverrideInvokeResponseOutput() ManagedRuleGroupOverrideInvokeResponseOutput {
	return i.ToManagedRuleGroupOverrideInvokeResponseOutputWithContext(context.Background())
}

func (i ManagedRuleGroupOverrideInvokeResponseArgs) ToManagedRuleGroupOverrideInvokeResponseOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleGroupOverrideInvokeResponseOutput)
}

// ManagedRuleGroupOverrideInvokeResponseArrayInput is an input type that accepts ManagedRuleGroupOverrideInvokeResponseArray and ManagedRuleGroupOverrideInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ManagedRuleGroupOverrideInvokeResponseArrayInput` via:
//
//          ManagedRuleGroupOverrideInvokeResponseArray{ ManagedRuleGroupOverrideInvokeResponseArgs{...} }
type ManagedRuleGroupOverrideInvokeResponseArrayInput interface {
	pulumi.Input

	ToManagedRuleGroupOverrideInvokeResponseArrayOutput() ManagedRuleGroupOverrideInvokeResponseArrayOutput
	ToManagedRuleGroupOverrideInvokeResponseArrayOutputWithContext(context.Context) ManagedRuleGroupOverrideInvokeResponseArrayOutput
}

type ManagedRuleGroupOverrideInvokeResponseArray []ManagedRuleGroupOverrideInvokeResponseInput

func (ManagedRuleGroupOverrideInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverrideInvokeResponse)(nil)).Elem()
}

func (i ManagedRuleGroupOverrideInvokeResponseArray) ToManagedRuleGroupOverrideInvokeResponseArrayOutput() ManagedRuleGroupOverrideInvokeResponseArrayOutput {
	return i.ToManagedRuleGroupOverrideInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ManagedRuleGroupOverrideInvokeResponseArray) ToManagedRuleGroupOverrideInvokeResponseArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleGroupOverrideInvokeResponseArrayOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideInvokeResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverrideInvokeResponse)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideInvokeResponseOutput) ToManagedRuleGroupOverrideInvokeResponseOutput() ManagedRuleGroupOverrideInvokeResponseOutput {
	return o
}

func (o ManagedRuleGroupOverrideInvokeResponseOutput) ToManagedRuleGroupOverrideInvokeResponseOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideInvokeResponseOutput {
	return o
}

// Describes the managed rule group within the rule set to override
func (o ManagedRuleGroupOverrideInvokeResponseOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverrideInvokeResponse) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
func (o ManagedRuleGroupOverrideInvokeResponseOutput) Rules() ManagedRuleOverrideInvokeResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverrideInvokeResponse) []ManagedRuleOverrideInvokeResponse { return v.Rules }).(ManagedRuleOverrideInvokeResponseArrayOutput)
}

type ManagedRuleGroupOverrideInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverrideInvokeResponse)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideInvokeResponseArrayOutput) ToManagedRuleGroupOverrideInvokeResponseArrayOutput() ManagedRuleGroupOverrideInvokeResponseArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideInvokeResponseArrayOutput) ToManagedRuleGroupOverrideInvokeResponseArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideInvokeResponseArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideInvokeResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleGroupOverrideInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleGroupOverrideInvokeResponse {
		return vs[0].([]ManagedRuleGroupOverrideInvokeResponse)[vs[1].(int)]
	}).(ManagedRuleGroupOverrideInvokeResponseOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideResponse struct {
	// Describes the managed rule group within the rule set to override
	RuleGroupName string `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules []ManagedRuleOverrideResponse `pulumi:"rules"`
}

// ManagedRuleGroupOverrideResponseInput is an input type that accepts ManagedRuleGroupOverrideResponseArgs and ManagedRuleGroupOverrideResponseOutput values.
// You can construct a concrete instance of `ManagedRuleGroupOverrideResponseInput` via:
//
//          ManagedRuleGroupOverrideResponseArgs{...}
type ManagedRuleGroupOverrideResponseInput interface {
	pulumi.Input

	ToManagedRuleGroupOverrideResponseOutput() ManagedRuleGroupOverrideResponseOutput
	ToManagedRuleGroupOverrideResponseOutputWithContext(context.Context) ManagedRuleGroupOverrideResponseOutput
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideResponseArgs struct {
	// Describes the managed rule group within the rule set to override
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules ManagedRuleOverrideResponseArrayInput `pulumi:"rules"`
}

func (ManagedRuleGroupOverrideResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverrideResponse)(nil)).Elem()
}

func (i ManagedRuleGroupOverrideResponseArgs) ToManagedRuleGroupOverrideResponseOutput() ManagedRuleGroupOverrideResponseOutput {
	return i.ToManagedRuleGroupOverrideResponseOutputWithContext(context.Background())
}

func (i ManagedRuleGroupOverrideResponseArgs) ToManagedRuleGroupOverrideResponseOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleGroupOverrideResponseOutput)
}

// ManagedRuleGroupOverrideResponseArrayInput is an input type that accepts ManagedRuleGroupOverrideResponseArray and ManagedRuleGroupOverrideResponseArrayOutput values.
// You can construct a concrete instance of `ManagedRuleGroupOverrideResponseArrayInput` via:
//
//          ManagedRuleGroupOverrideResponseArray{ ManagedRuleGroupOverrideResponseArgs{...} }
type ManagedRuleGroupOverrideResponseArrayInput interface {
	pulumi.Input

	ToManagedRuleGroupOverrideResponseArrayOutput() ManagedRuleGroupOverrideResponseArrayOutput
	ToManagedRuleGroupOverrideResponseArrayOutputWithContext(context.Context) ManagedRuleGroupOverrideResponseArrayOutput
}

type ManagedRuleGroupOverrideResponseArray []ManagedRuleGroupOverrideResponseInput

func (ManagedRuleGroupOverrideResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverrideResponse)(nil)).Elem()
}

func (i ManagedRuleGroupOverrideResponseArray) ToManagedRuleGroupOverrideResponseArrayOutput() ManagedRuleGroupOverrideResponseArrayOutput {
	return i.ToManagedRuleGroupOverrideResponseArrayOutputWithContext(context.Background())
}

func (i ManagedRuleGroupOverrideResponseArray) ToManagedRuleGroupOverrideResponseArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleGroupOverrideResponseArrayOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideResponseOutput) ToManagedRuleGroupOverrideResponseOutput() ManagedRuleGroupOverrideResponseOutput {
	return o
}

func (o ManagedRuleGroupOverrideResponseOutput) ToManagedRuleGroupOverrideResponseOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideResponseOutput {
	return o
}

// Describes the managed rule group within the rule set to override
func (o ManagedRuleGroupOverrideResponseOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverrideResponse) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
func (o ManagedRuleGroupOverrideResponseOutput) Rules() ManagedRuleOverrideResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverrideResponse) []ManagedRuleOverrideResponse { return v.Rules }).(ManagedRuleOverrideResponseArrayOutput)
}

type ManagedRuleGroupOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideResponseArrayOutput) ToManagedRuleGroupOverrideResponseArrayOutput() ManagedRuleGroupOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideResponseArrayOutput) ToManagedRuleGroupOverrideResponseArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleGroupOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleGroupOverrideResponse {
		return vs[0].([]ManagedRuleGroupOverrideResponse)[vs[1].(int)]
	}).(ManagedRuleGroupOverrideResponseOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverride struct {
	// Describes the override action to be applied when rule matches.
	Action *string `pulumi:"action"`
	// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// Identifier for the managed rule.
	RuleId string `pulumi:"ruleId"`
}

// ManagedRuleOverrideInput is an input type that accepts ManagedRuleOverrideArgs and ManagedRuleOverrideOutput values.
// You can construct a concrete instance of `ManagedRuleOverrideInput` via:
//
//          ManagedRuleOverrideArgs{...}
type ManagedRuleOverrideInput interface {
	pulumi.Input

	ToManagedRuleOverrideOutput() ManagedRuleOverrideOutput
	ToManagedRuleOverrideOutputWithContext(context.Context) ManagedRuleOverrideOutput
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideArgs struct {
	// Describes the override action to be applied when rule matches.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Identifier for the managed rule.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
}

func (ManagedRuleOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverride)(nil)).Elem()
}

func (i ManagedRuleOverrideArgs) ToManagedRuleOverrideOutput() ManagedRuleOverrideOutput {
	return i.ToManagedRuleOverrideOutputWithContext(context.Background())
}

func (i ManagedRuleOverrideArgs) ToManagedRuleOverrideOutputWithContext(ctx context.Context) ManagedRuleOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleOverrideOutput)
}

// ManagedRuleOverrideArrayInput is an input type that accepts ManagedRuleOverrideArray and ManagedRuleOverrideArrayOutput values.
// You can construct a concrete instance of `ManagedRuleOverrideArrayInput` via:
//
//          ManagedRuleOverrideArray{ ManagedRuleOverrideArgs{...} }
type ManagedRuleOverrideArrayInput interface {
	pulumi.Input

	ToManagedRuleOverrideArrayOutput() ManagedRuleOverrideArrayOutput
	ToManagedRuleOverrideArrayOutputWithContext(context.Context) ManagedRuleOverrideArrayOutput
}

type ManagedRuleOverrideArray []ManagedRuleOverrideInput

func (ManagedRuleOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverride)(nil)).Elem()
}

func (i ManagedRuleOverrideArray) ToManagedRuleOverrideArrayOutput() ManagedRuleOverrideArrayOutput {
	return i.ToManagedRuleOverrideArrayOutputWithContext(context.Background())
}

func (i ManagedRuleOverrideArray) ToManagedRuleOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleOverrideArrayOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverride)(nil)).Elem()
}

func (o ManagedRuleOverrideOutput) ToManagedRuleOverrideOutput() ManagedRuleOverrideOutput {
	return o
}

func (o ManagedRuleOverrideOutput) ToManagedRuleOverrideOutputWithContext(ctx context.Context) ManagedRuleOverrideOutput {
	return o
}

// Describes the override action to be applied when rule matches.
func (o ManagedRuleOverrideOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverride) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
func (o ManagedRuleOverrideOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverride) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Identifier for the managed rule.
func (o ManagedRuleOverrideOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleOverride) string { return v.RuleId }).(pulumi.StringOutput)
}

type ManagedRuleOverrideArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverride)(nil)).Elem()
}

func (o ManagedRuleOverrideArrayOutput) ToManagedRuleOverrideArrayOutput() ManagedRuleOverrideArrayOutput {
	return o
}

func (o ManagedRuleOverrideArrayOutput) ToManagedRuleOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideArrayOutput {
	return o
}

func (o ManagedRuleOverrideArrayOutput) Index(i pulumi.IntInput) ManagedRuleOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleOverride {
		return vs[0].([]ManagedRuleOverride)[vs[1].(int)]
	}).(ManagedRuleOverrideOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideInvokeResponse struct {
	// Describes the override action to be applied when rule matches.
	Action *string `pulumi:"action"`
	// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// Identifier for the managed rule.
	RuleId string `pulumi:"ruleId"`
}

// ManagedRuleOverrideInvokeResponseInput is an input type that accepts ManagedRuleOverrideInvokeResponseArgs and ManagedRuleOverrideInvokeResponseOutput values.
// You can construct a concrete instance of `ManagedRuleOverrideInvokeResponseInput` via:
//
//          ManagedRuleOverrideInvokeResponseArgs{...}
type ManagedRuleOverrideInvokeResponseInput interface {
	pulumi.Input

	ToManagedRuleOverrideInvokeResponseOutput() ManagedRuleOverrideInvokeResponseOutput
	ToManagedRuleOverrideInvokeResponseOutputWithContext(context.Context) ManagedRuleOverrideInvokeResponseOutput
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideInvokeResponseArgs struct {
	// Describes the override action to be applied when rule matches.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Identifier for the managed rule.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
}

func (ManagedRuleOverrideInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverrideInvokeResponse)(nil)).Elem()
}

func (i ManagedRuleOverrideInvokeResponseArgs) ToManagedRuleOverrideInvokeResponseOutput() ManagedRuleOverrideInvokeResponseOutput {
	return i.ToManagedRuleOverrideInvokeResponseOutputWithContext(context.Background())
}

func (i ManagedRuleOverrideInvokeResponseArgs) ToManagedRuleOverrideInvokeResponseOutputWithContext(ctx context.Context) ManagedRuleOverrideInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleOverrideInvokeResponseOutput)
}

// ManagedRuleOverrideInvokeResponseArrayInput is an input type that accepts ManagedRuleOverrideInvokeResponseArray and ManagedRuleOverrideInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ManagedRuleOverrideInvokeResponseArrayInput` via:
//
//          ManagedRuleOverrideInvokeResponseArray{ ManagedRuleOverrideInvokeResponseArgs{...} }
type ManagedRuleOverrideInvokeResponseArrayInput interface {
	pulumi.Input

	ToManagedRuleOverrideInvokeResponseArrayOutput() ManagedRuleOverrideInvokeResponseArrayOutput
	ToManagedRuleOverrideInvokeResponseArrayOutputWithContext(context.Context) ManagedRuleOverrideInvokeResponseArrayOutput
}

type ManagedRuleOverrideInvokeResponseArray []ManagedRuleOverrideInvokeResponseInput

func (ManagedRuleOverrideInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverrideInvokeResponse)(nil)).Elem()
}

func (i ManagedRuleOverrideInvokeResponseArray) ToManagedRuleOverrideInvokeResponseArrayOutput() ManagedRuleOverrideInvokeResponseArrayOutput {
	return i.ToManagedRuleOverrideInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ManagedRuleOverrideInvokeResponseArray) ToManagedRuleOverrideInvokeResponseArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleOverrideInvokeResponseArrayOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideInvokeResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverrideInvokeResponse)(nil)).Elem()
}

func (o ManagedRuleOverrideInvokeResponseOutput) ToManagedRuleOverrideInvokeResponseOutput() ManagedRuleOverrideInvokeResponseOutput {
	return o
}

func (o ManagedRuleOverrideInvokeResponseOutput) ToManagedRuleOverrideInvokeResponseOutputWithContext(ctx context.Context) ManagedRuleOverrideInvokeResponseOutput {
	return o
}

// Describes the override action to be applied when rule matches.
func (o ManagedRuleOverrideInvokeResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverrideInvokeResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
func (o ManagedRuleOverrideInvokeResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverrideInvokeResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Identifier for the managed rule.
func (o ManagedRuleOverrideInvokeResponseOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleOverrideInvokeResponse) string { return v.RuleId }).(pulumi.StringOutput)
}

type ManagedRuleOverrideInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverrideInvokeResponse)(nil)).Elem()
}

func (o ManagedRuleOverrideInvokeResponseArrayOutput) ToManagedRuleOverrideInvokeResponseArrayOutput() ManagedRuleOverrideInvokeResponseArrayOutput {
	return o
}

func (o ManagedRuleOverrideInvokeResponseArrayOutput) ToManagedRuleOverrideInvokeResponseArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideInvokeResponseArrayOutput {
	return o
}

func (o ManagedRuleOverrideInvokeResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleOverrideInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleOverrideInvokeResponse {
		return vs[0].([]ManagedRuleOverrideInvokeResponse)[vs[1].(int)]
	}).(ManagedRuleOverrideInvokeResponseOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideResponse struct {
	// Describes the override action to be applied when rule matches.
	Action *string `pulumi:"action"`
	// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// Identifier for the managed rule.
	RuleId string `pulumi:"ruleId"`
}

// ManagedRuleOverrideResponseInput is an input type that accepts ManagedRuleOverrideResponseArgs and ManagedRuleOverrideResponseOutput values.
// You can construct a concrete instance of `ManagedRuleOverrideResponseInput` via:
//
//          ManagedRuleOverrideResponseArgs{...}
type ManagedRuleOverrideResponseInput interface {
	pulumi.Input

	ToManagedRuleOverrideResponseOutput() ManagedRuleOverrideResponseOutput
	ToManagedRuleOverrideResponseOutputWithContext(context.Context) ManagedRuleOverrideResponseOutput
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideResponseArgs struct {
	// Describes the override action to be applied when rule matches.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Identifier for the managed rule.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
}

func (ManagedRuleOverrideResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverrideResponse)(nil)).Elem()
}

func (i ManagedRuleOverrideResponseArgs) ToManagedRuleOverrideResponseOutput() ManagedRuleOverrideResponseOutput {
	return i.ToManagedRuleOverrideResponseOutputWithContext(context.Background())
}

func (i ManagedRuleOverrideResponseArgs) ToManagedRuleOverrideResponseOutputWithContext(ctx context.Context) ManagedRuleOverrideResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleOverrideResponseOutput)
}

// ManagedRuleOverrideResponseArrayInput is an input type that accepts ManagedRuleOverrideResponseArray and ManagedRuleOverrideResponseArrayOutput values.
// You can construct a concrete instance of `ManagedRuleOverrideResponseArrayInput` via:
//
//          ManagedRuleOverrideResponseArray{ ManagedRuleOverrideResponseArgs{...} }
type ManagedRuleOverrideResponseArrayInput interface {
	pulumi.Input

	ToManagedRuleOverrideResponseArrayOutput() ManagedRuleOverrideResponseArrayOutput
	ToManagedRuleOverrideResponseArrayOutputWithContext(context.Context) ManagedRuleOverrideResponseArrayOutput
}

type ManagedRuleOverrideResponseArray []ManagedRuleOverrideResponseInput

func (ManagedRuleOverrideResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverrideResponse)(nil)).Elem()
}

func (i ManagedRuleOverrideResponseArray) ToManagedRuleOverrideResponseArrayOutput() ManagedRuleOverrideResponseArrayOutput {
	return i.ToManagedRuleOverrideResponseArrayOutputWithContext(context.Background())
}

func (i ManagedRuleOverrideResponseArray) ToManagedRuleOverrideResponseArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleOverrideResponseArrayOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleOverrideResponseOutput) ToManagedRuleOverrideResponseOutput() ManagedRuleOverrideResponseOutput {
	return o
}

func (o ManagedRuleOverrideResponseOutput) ToManagedRuleOverrideResponseOutputWithContext(ctx context.Context) ManagedRuleOverrideResponseOutput {
	return o
}

// Describes the override action to be applied when rule matches.
func (o ManagedRuleOverrideResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverrideResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
func (o ManagedRuleOverrideResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverrideResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Identifier for the managed rule.
func (o ManagedRuleOverrideResponseOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleOverrideResponse) string { return v.RuleId }).(pulumi.StringOutput)
}

type ManagedRuleOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleOverrideResponseArrayOutput) ToManagedRuleOverrideResponseArrayOutput() ManagedRuleOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleOverrideResponseArrayOutput) ToManagedRuleOverrideResponseArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleOverrideResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleOverrideResponse {
		return vs[0].([]ManagedRuleOverrideResponse)[vs[1].(int)]
	}).(ManagedRuleOverrideResponseOutput)
}

// Defines a managed rule set.
type ManagedRuleSet struct {
	// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
	AnomalyScore *int `pulumi:"anomalyScore"`
	// Defines the rule overrides to apply to the rule set.
	RuleGroupOverrides []ManagedRuleGroupOverride `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType string `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// ManagedRuleSetInput is an input type that accepts ManagedRuleSetArgs and ManagedRuleSetOutput values.
// You can construct a concrete instance of `ManagedRuleSetInput` via:
//
//          ManagedRuleSetArgs{...}
type ManagedRuleSetInput interface {
	pulumi.Input

	ToManagedRuleSetOutput() ManagedRuleSetOutput
	ToManagedRuleSetOutputWithContext(context.Context) ManagedRuleSetOutput
}

// Defines a managed rule set.
type ManagedRuleSetArgs struct {
	// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
	AnomalyScore pulumi.IntPtrInput `pulumi:"anomalyScore"`
	// Defines the rule overrides to apply to the rule set.
	RuleGroupOverrides ManagedRuleGroupOverrideArrayInput `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (ManagedRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSet)(nil)).Elem()
}

func (i ManagedRuleSetArgs) ToManagedRuleSetOutput() ManagedRuleSetOutput {
	return i.ToManagedRuleSetOutputWithContext(context.Background())
}

func (i ManagedRuleSetArgs) ToManagedRuleSetOutputWithContext(ctx context.Context) ManagedRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetOutput)
}

// ManagedRuleSetArrayInput is an input type that accepts ManagedRuleSetArray and ManagedRuleSetArrayOutput values.
// You can construct a concrete instance of `ManagedRuleSetArrayInput` via:
//
//          ManagedRuleSetArray{ ManagedRuleSetArgs{...} }
type ManagedRuleSetArrayInput interface {
	pulumi.Input

	ToManagedRuleSetArrayOutput() ManagedRuleSetArrayOutput
	ToManagedRuleSetArrayOutputWithContext(context.Context) ManagedRuleSetArrayOutput
}

type ManagedRuleSetArray []ManagedRuleSetInput

func (ManagedRuleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSet)(nil)).Elem()
}

func (i ManagedRuleSetArray) ToManagedRuleSetArrayOutput() ManagedRuleSetArrayOutput {
	return i.ToManagedRuleSetArrayOutputWithContext(context.Background())
}

func (i ManagedRuleSetArray) ToManagedRuleSetArrayOutputWithContext(ctx context.Context) ManagedRuleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetArrayOutput)
}

// Defines a managed rule set.
type ManagedRuleSetOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSet)(nil)).Elem()
}

func (o ManagedRuleSetOutput) ToManagedRuleSetOutput() ManagedRuleSetOutput {
	return o
}

func (o ManagedRuleSetOutput) ToManagedRuleSetOutputWithContext(ctx context.Context) ManagedRuleSetOutput {
	return o
}

// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
func (o ManagedRuleSetOutput) AnomalyScore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedRuleSet) *int { return v.AnomalyScore }).(pulumi.IntPtrOutput)
}

// Defines the rule overrides to apply to the rule set.
func (o ManagedRuleSetOutput) RuleGroupOverrides() ManagedRuleGroupOverrideArrayOutput {
	return o.ApplyT(func(v ManagedRuleSet) []ManagedRuleGroupOverride { return v.RuleGroupOverrides }).(ManagedRuleGroupOverrideArrayOutput)
}

// Defines the rule set type to use.
func (o ManagedRuleSetOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSet) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// Defines the version of the rule set to use.
func (o ManagedRuleSetOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSet) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ManagedRuleSetArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSet)(nil)).Elem()
}

func (o ManagedRuleSetArrayOutput) ToManagedRuleSetArrayOutput() ManagedRuleSetArrayOutput {
	return o
}

func (o ManagedRuleSetArrayOutput) ToManagedRuleSetArrayOutputWithContext(ctx context.Context) ManagedRuleSetArrayOutput {
	return o
}

func (o ManagedRuleSetArrayOutput) Index(i pulumi.IntInput) ManagedRuleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleSet {
		return vs[0].([]ManagedRuleSet)[vs[1].(int)]
	}).(ManagedRuleSetOutput)
}

// Defines a managed rule set.
type ManagedRuleSetInvokeResponse struct {
	// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
	AnomalyScore *int `pulumi:"anomalyScore"`
	// Defines the rule overrides to apply to the rule set.
	RuleGroupOverrides []ManagedRuleGroupOverrideInvokeResponse `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType string `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// ManagedRuleSetInvokeResponseInput is an input type that accepts ManagedRuleSetInvokeResponseArgs and ManagedRuleSetInvokeResponseOutput values.
// You can construct a concrete instance of `ManagedRuleSetInvokeResponseInput` via:
//
//          ManagedRuleSetInvokeResponseArgs{...}
type ManagedRuleSetInvokeResponseInput interface {
	pulumi.Input

	ToManagedRuleSetInvokeResponseOutput() ManagedRuleSetInvokeResponseOutput
	ToManagedRuleSetInvokeResponseOutputWithContext(context.Context) ManagedRuleSetInvokeResponseOutput
}

// Defines a managed rule set.
type ManagedRuleSetInvokeResponseArgs struct {
	// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
	AnomalyScore pulumi.IntPtrInput `pulumi:"anomalyScore"`
	// Defines the rule overrides to apply to the rule set.
	RuleGroupOverrides ManagedRuleGroupOverrideInvokeResponseArrayInput `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (ManagedRuleSetInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetInvokeResponse)(nil)).Elem()
}

func (i ManagedRuleSetInvokeResponseArgs) ToManagedRuleSetInvokeResponseOutput() ManagedRuleSetInvokeResponseOutput {
	return i.ToManagedRuleSetInvokeResponseOutputWithContext(context.Background())
}

func (i ManagedRuleSetInvokeResponseArgs) ToManagedRuleSetInvokeResponseOutputWithContext(ctx context.Context) ManagedRuleSetInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetInvokeResponseOutput)
}

// ManagedRuleSetInvokeResponseArrayInput is an input type that accepts ManagedRuleSetInvokeResponseArray and ManagedRuleSetInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ManagedRuleSetInvokeResponseArrayInput` via:
//
//          ManagedRuleSetInvokeResponseArray{ ManagedRuleSetInvokeResponseArgs{...} }
type ManagedRuleSetInvokeResponseArrayInput interface {
	pulumi.Input

	ToManagedRuleSetInvokeResponseArrayOutput() ManagedRuleSetInvokeResponseArrayOutput
	ToManagedRuleSetInvokeResponseArrayOutputWithContext(context.Context) ManagedRuleSetInvokeResponseArrayOutput
}

type ManagedRuleSetInvokeResponseArray []ManagedRuleSetInvokeResponseInput

func (ManagedRuleSetInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSetInvokeResponse)(nil)).Elem()
}

func (i ManagedRuleSetInvokeResponseArray) ToManagedRuleSetInvokeResponseArrayOutput() ManagedRuleSetInvokeResponseArrayOutput {
	return i.ToManagedRuleSetInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ManagedRuleSetInvokeResponseArray) ToManagedRuleSetInvokeResponseArrayOutputWithContext(ctx context.Context) ManagedRuleSetInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetInvokeResponseArrayOutput)
}

// Defines a managed rule set.
type ManagedRuleSetInvokeResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetInvokeResponse)(nil)).Elem()
}

func (o ManagedRuleSetInvokeResponseOutput) ToManagedRuleSetInvokeResponseOutput() ManagedRuleSetInvokeResponseOutput {
	return o
}

func (o ManagedRuleSetInvokeResponseOutput) ToManagedRuleSetInvokeResponseOutputWithContext(ctx context.Context) ManagedRuleSetInvokeResponseOutput {
	return o
}

// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
func (o ManagedRuleSetInvokeResponseOutput) AnomalyScore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedRuleSetInvokeResponse) *int { return v.AnomalyScore }).(pulumi.IntPtrOutput)
}

// Defines the rule overrides to apply to the rule set.
func (o ManagedRuleSetInvokeResponseOutput) RuleGroupOverrides() ManagedRuleGroupOverrideInvokeResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetInvokeResponse) []ManagedRuleGroupOverrideInvokeResponse {
		return v.RuleGroupOverrides
	}).(ManagedRuleGroupOverrideInvokeResponseArrayOutput)
}

// Defines the rule set type to use.
func (o ManagedRuleSetInvokeResponseOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSetInvokeResponse) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// Defines the version of the rule set to use.
func (o ManagedRuleSetInvokeResponseOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSetInvokeResponse) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ManagedRuleSetInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSetInvokeResponse)(nil)).Elem()
}

func (o ManagedRuleSetInvokeResponseArrayOutput) ToManagedRuleSetInvokeResponseArrayOutput() ManagedRuleSetInvokeResponseArrayOutput {
	return o
}

func (o ManagedRuleSetInvokeResponseArrayOutput) ToManagedRuleSetInvokeResponseArrayOutputWithContext(ctx context.Context) ManagedRuleSetInvokeResponseArrayOutput {
	return o
}

func (o ManagedRuleSetInvokeResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleSetInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleSetInvokeResponse {
		return vs[0].([]ManagedRuleSetInvokeResponse)[vs[1].(int)]
	}).(ManagedRuleSetInvokeResponseOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetList struct {
	// List of rule sets.
	ManagedRuleSets []ManagedRuleSet `pulumi:"managedRuleSets"`
}

// ManagedRuleSetListInput is an input type that accepts ManagedRuleSetListArgs and ManagedRuleSetListOutput values.
// You can construct a concrete instance of `ManagedRuleSetListInput` via:
//
//          ManagedRuleSetListArgs{...}
type ManagedRuleSetListInput interface {
	pulumi.Input

	ToManagedRuleSetListOutput() ManagedRuleSetListOutput
	ToManagedRuleSetListOutputWithContext(context.Context) ManagedRuleSetListOutput
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListArgs struct {
	// List of rule sets.
	ManagedRuleSets ManagedRuleSetArrayInput `pulumi:"managedRuleSets"`
}

func (ManagedRuleSetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetList)(nil)).Elem()
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListOutput() ManagedRuleSetListOutput {
	return i.ToManagedRuleSetListOutputWithContext(context.Background())
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListOutputWithContext(ctx context.Context) ManagedRuleSetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListOutput)
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return i.ToManagedRuleSetListPtrOutputWithContext(context.Background())
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListOutput).ToManagedRuleSetListPtrOutputWithContext(ctx)
}

// ManagedRuleSetListPtrInput is an input type that accepts ManagedRuleSetListArgs, ManagedRuleSetListPtr and ManagedRuleSetListPtrOutput values.
// You can construct a concrete instance of `ManagedRuleSetListPtrInput` via:
//
//          ManagedRuleSetListArgs{...}
//
//  or:
//
//          nil
type ManagedRuleSetListPtrInput interface {
	pulumi.Input

	ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput
	ToManagedRuleSetListPtrOutputWithContext(context.Context) ManagedRuleSetListPtrOutput
}

type managedRuleSetListPtrType ManagedRuleSetListArgs

func ManagedRuleSetListPtr(v *ManagedRuleSetListArgs) ManagedRuleSetListPtrInput {
	return (*managedRuleSetListPtrType)(v)
}

func (*managedRuleSetListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetList)(nil)).Elem()
}

func (i *managedRuleSetListPtrType) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return i.ToManagedRuleSetListPtrOutputWithContext(context.Background())
}

func (i *managedRuleSetListPtrType) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListPtrOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetList)(nil)).Elem()
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListOutput() ManagedRuleSetListOutput {
	return o
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListOutputWithContext(ctx context.Context) ManagedRuleSetListOutput {
	return o
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return o.ToManagedRuleSetListPtrOutputWithContext(context.Background())
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return o.ApplyT(func(v ManagedRuleSetList) *ManagedRuleSetList {
		return &v
	}).(ManagedRuleSetListPtrOutput)
}

// List of rule sets.
func (o ManagedRuleSetListOutput) ManagedRuleSets() ManagedRuleSetArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetList) []ManagedRuleSet { return v.ManagedRuleSets }).(ManagedRuleSetArrayOutput)
}

type ManagedRuleSetListPtrOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetList)(nil)).Elem()
}

func (o ManagedRuleSetListPtrOutput) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return o
}

func (o ManagedRuleSetListPtrOutput) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return o
}

func (o ManagedRuleSetListPtrOutput) Elem() ManagedRuleSetListOutput {
	return o.ApplyT(func(v *ManagedRuleSetList) ManagedRuleSetList { return *v }).(ManagedRuleSetListOutput)
}

// List of rule sets.
func (o ManagedRuleSetListPtrOutput) ManagedRuleSets() ManagedRuleSetArrayOutput {
	return o.ApplyT(func(v *ManagedRuleSetList) []ManagedRuleSet {
		if v == nil {
			return nil
		}
		return v.ManagedRuleSets
	}).(ManagedRuleSetArrayOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListInvokeResponse struct {
	// List of rule sets.
	ManagedRuleSets []ManagedRuleSetInvokeResponse `pulumi:"managedRuleSets"`
}

// ManagedRuleSetListInvokeResponseInput is an input type that accepts ManagedRuleSetListInvokeResponseArgs and ManagedRuleSetListInvokeResponseOutput values.
// You can construct a concrete instance of `ManagedRuleSetListInvokeResponseInput` via:
//
//          ManagedRuleSetListInvokeResponseArgs{...}
type ManagedRuleSetListInvokeResponseInput interface {
	pulumi.Input

	ToManagedRuleSetListInvokeResponseOutput() ManagedRuleSetListInvokeResponseOutput
	ToManagedRuleSetListInvokeResponseOutputWithContext(context.Context) ManagedRuleSetListInvokeResponseOutput
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListInvokeResponseArgs struct {
	// List of rule sets.
	ManagedRuleSets ManagedRuleSetInvokeResponseArrayInput `pulumi:"managedRuleSets"`
}

func (ManagedRuleSetListInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetListInvokeResponse)(nil)).Elem()
}

func (i ManagedRuleSetListInvokeResponseArgs) ToManagedRuleSetListInvokeResponseOutput() ManagedRuleSetListInvokeResponseOutput {
	return i.ToManagedRuleSetListInvokeResponseOutputWithContext(context.Background())
}

func (i ManagedRuleSetListInvokeResponseArgs) ToManagedRuleSetListInvokeResponseOutputWithContext(ctx context.Context) ManagedRuleSetListInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListInvokeResponseOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListInvokeResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetListInvokeResponse)(nil)).Elem()
}

func (o ManagedRuleSetListInvokeResponseOutput) ToManagedRuleSetListInvokeResponseOutput() ManagedRuleSetListInvokeResponseOutput {
	return o
}

func (o ManagedRuleSetListInvokeResponseOutput) ToManagedRuleSetListInvokeResponseOutputWithContext(ctx context.Context) ManagedRuleSetListInvokeResponseOutput {
	return o
}

// List of rule sets.
func (o ManagedRuleSetListInvokeResponseOutput) ManagedRuleSets() ManagedRuleSetInvokeResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetListInvokeResponse) []ManagedRuleSetInvokeResponse { return v.ManagedRuleSets }).(ManagedRuleSetInvokeResponseArrayOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListResponse struct {
	// List of rule sets.
	ManagedRuleSets []ManagedRuleSetResponse `pulumi:"managedRuleSets"`
}

// ManagedRuleSetListResponseInput is an input type that accepts ManagedRuleSetListResponseArgs and ManagedRuleSetListResponseOutput values.
// You can construct a concrete instance of `ManagedRuleSetListResponseInput` via:
//
//          ManagedRuleSetListResponseArgs{...}
type ManagedRuleSetListResponseInput interface {
	pulumi.Input

	ToManagedRuleSetListResponseOutput() ManagedRuleSetListResponseOutput
	ToManagedRuleSetListResponseOutputWithContext(context.Context) ManagedRuleSetListResponseOutput
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListResponseArgs struct {
	// List of rule sets.
	ManagedRuleSets ManagedRuleSetResponseArrayInput `pulumi:"managedRuleSets"`
}

func (ManagedRuleSetListResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetListResponse)(nil)).Elem()
}

func (i ManagedRuleSetListResponseArgs) ToManagedRuleSetListResponseOutput() ManagedRuleSetListResponseOutput {
	return i.ToManagedRuleSetListResponseOutputWithContext(context.Background())
}

func (i ManagedRuleSetListResponseArgs) ToManagedRuleSetListResponseOutputWithContext(ctx context.Context) ManagedRuleSetListResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListResponseOutput)
}

func (i ManagedRuleSetListResponseArgs) ToManagedRuleSetListResponsePtrOutput() ManagedRuleSetListResponsePtrOutput {
	return i.ToManagedRuleSetListResponsePtrOutputWithContext(context.Background())
}

func (i ManagedRuleSetListResponseArgs) ToManagedRuleSetListResponsePtrOutputWithContext(ctx context.Context) ManagedRuleSetListResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListResponseOutput).ToManagedRuleSetListResponsePtrOutputWithContext(ctx)
}

// ManagedRuleSetListResponsePtrInput is an input type that accepts ManagedRuleSetListResponseArgs, ManagedRuleSetListResponsePtr and ManagedRuleSetListResponsePtrOutput values.
// You can construct a concrete instance of `ManagedRuleSetListResponsePtrInput` via:
//
//          ManagedRuleSetListResponseArgs{...}
//
//  or:
//
//          nil
type ManagedRuleSetListResponsePtrInput interface {
	pulumi.Input

	ToManagedRuleSetListResponsePtrOutput() ManagedRuleSetListResponsePtrOutput
	ToManagedRuleSetListResponsePtrOutputWithContext(context.Context) ManagedRuleSetListResponsePtrOutput
}

type managedRuleSetListResponsePtrType ManagedRuleSetListResponseArgs

func ManagedRuleSetListResponsePtr(v *ManagedRuleSetListResponseArgs) ManagedRuleSetListResponsePtrInput {
	return (*managedRuleSetListResponsePtrType)(v)
}

func (*managedRuleSetListResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetListResponse)(nil)).Elem()
}

func (i *managedRuleSetListResponsePtrType) ToManagedRuleSetListResponsePtrOutput() ManagedRuleSetListResponsePtrOutput {
	return i.ToManagedRuleSetListResponsePtrOutputWithContext(context.Background())
}

func (i *managedRuleSetListResponsePtrType) ToManagedRuleSetListResponsePtrOutputWithContext(ctx context.Context) ManagedRuleSetListResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListResponsePtrOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetListResponse)(nil)).Elem()
}

func (o ManagedRuleSetListResponseOutput) ToManagedRuleSetListResponseOutput() ManagedRuleSetListResponseOutput {
	return o
}

func (o ManagedRuleSetListResponseOutput) ToManagedRuleSetListResponseOutputWithContext(ctx context.Context) ManagedRuleSetListResponseOutput {
	return o
}

func (o ManagedRuleSetListResponseOutput) ToManagedRuleSetListResponsePtrOutput() ManagedRuleSetListResponsePtrOutput {
	return o.ToManagedRuleSetListResponsePtrOutputWithContext(context.Background())
}

func (o ManagedRuleSetListResponseOutput) ToManagedRuleSetListResponsePtrOutputWithContext(ctx context.Context) ManagedRuleSetListResponsePtrOutput {
	return o.ApplyT(func(v ManagedRuleSetListResponse) *ManagedRuleSetListResponse {
		return &v
	}).(ManagedRuleSetListResponsePtrOutput)
}

// List of rule sets.
func (o ManagedRuleSetListResponseOutput) ManagedRuleSets() ManagedRuleSetResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetListResponse) []ManagedRuleSetResponse { return v.ManagedRuleSets }).(ManagedRuleSetResponseArrayOutput)
}

type ManagedRuleSetListResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetListResponse)(nil)).Elem()
}

func (o ManagedRuleSetListResponsePtrOutput) ToManagedRuleSetListResponsePtrOutput() ManagedRuleSetListResponsePtrOutput {
	return o
}

func (o ManagedRuleSetListResponsePtrOutput) ToManagedRuleSetListResponsePtrOutputWithContext(ctx context.Context) ManagedRuleSetListResponsePtrOutput {
	return o
}

func (o ManagedRuleSetListResponsePtrOutput) Elem() ManagedRuleSetListResponseOutput {
	return o.ApplyT(func(v *ManagedRuleSetListResponse) ManagedRuleSetListResponse { return *v }).(ManagedRuleSetListResponseOutput)
}

// List of rule sets.
func (o ManagedRuleSetListResponsePtrOutput) ManagedRuleSets() ManagedRuleSetResponseArrayOutput {
	return o.ApplyT(func(v *ManagedRuleSetListResponse) []ManagedRuleSetResponse {
		if v == nil {
			return nil
		}
		return v.ManagedRuleSets
	}).(ManagedRuleSetResponseArrayOutput)
}

// Defines a managed rule set.
type ManagedRuleSetResponse struct {
	// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
	AnomalyScore *int `pulumi:"anomalyScore"`
	// Defines the rule overrides to apply to the rule set.
	RuleGroupOverrides []ManagedRuleGroupOverrideResponse `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType string `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// ManagedRuleSetResponseInput is an input type that accepts ManagedRuleSetResponseArgs and ManagedRuleSetResponseOutput values.
// You can construct a concrete instance of `ManagedRuleSetResponseInput` via:
//
//          ManagedRuleSetResponseArgs{...}
type ManagedRuleSetResponseInput interface {
	pulumi.Input

	ToManagedRuleSetResponseOutput() ManagedRuleSetResponseOutput
	ToManagedRuleSetResponseOutputWithContext(context.Context) ManagedRuleSetResponseOutput
}

// Defines a managed rule set.
type ManagedRuleSetResponseArgs struct {
	// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
	AnomalyScore pulumi.IntPtrInput `pulumi:"anomalyScore"`
	// Defines the rule overrides to apply to the rule set.
	RuleGroupOverrides ManagedRuleGroupOverrideResponseArrayInput `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (ManagedRuleSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetResponse)(nil)).Elem()
}

func (i ManagedRuleSetResponseArgs) ToManagedRuleSetResponseOutput() ManagedRuleSetResponseOutput {
	return i.ToManagedRuleSetResponseOutputWithContext(context.Background())
}

func (i ManagedRuleSetResponseArgs) ToManagedRuleSetResponseOutputWithContext(ctx context.Context) ManagedRuleSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetResponseOutput)
}

// ManagedRuleSetResponseArrayInput is an input type that accepts ManagedRuleSetResponseArray and ManagedRuleSetResponseArrayOutput values.
// You can construct a concrete instance of `ManagedRuleSetResponseArrayInput` via:
//
//          ManagedRuleSetResponseArray{ ManagedRuleSetResponseArgs{...} }
type ManagedRuleSetResponseArrayInput interface {
	pulumi.Input

	ToManagedRuleSetResponseArrayOutput() ManagedRuleSetResponseArrayOutput
	ToManagedRuleSetResponseArrayOutputWithContext(context.Context) ManagedRuleSetResponseArrayOutput
}

type ManagedRuleSetResponseArray []ManagedRuleSetResponseInput

func (ManagedRuleSetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSetResponse)(nil)).Elem()
}

func (i ManagedRuleSetResponseArray) ToManagedRuleSetResponseArrayOutput() ManagedRuleSetResponseArrayOutput {
	return i.ToManagedRuleSetResponseArrayOutputWithContext(context.Background())
}

func (i ManagedRuleSetResponseArray) ToManagedRuleSetResponseArrayOutputWithContext(ctx context.Context) ManagedRuleSetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetResponseArrayOutput)
}

// Defines a managed rule set.
type ManagedRuleSetResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetResponse)(nil)).Elem()
}

func (o ManagedRuleSetResponseOutput) ToManagedRuleSetResponseOutput() ManagedRuleSetResponseOutput {
	return o
}

func (o ManagedRuleSetResponseOutput) ToManagedRuleSetResponseOutputWithContext(ctx context.Context) ManagedRuleSetResponseOutput {
	return o
}

// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
func (o ManagedRuleSetResponseOutput) AnomalyScore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) *int { return v.AnomalyScore }).(pulumi.IntPtrOutput)
}

// Defines the rule overrides to apply to the rule set.
func (o ManagedRuleSetResponseOutput) RuleGroupOverrides() ManagedRuleGroupOverrideResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) []ManagedRuleGroupOverrideResponse { return v.RuleGroupOverrides }).(ManagedRuleGroupOverrideResponseArrayOutput)
}

// Defines the rule set type to use.
func (o ManagedRuleSetResponseOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// Defines the version of the rule set to use.
func (o ManagedRuleSetResponseOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ManagedRuleSetResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSetResponse)(nil)).Elem()
}

func (o ManagedRuleSetResponseArrayOutput) ToManagedRuleSetResponseArrayOutput() ManagedRuleSetResponseArrayOutput {
	return o
}

func (o ManagedRuleSetResponseArrayOutput) ToManagedRuleSetResponseArrayOutputWithContext(ctx context.Context) ManagedRuleSetResponseArrayOutput {
	return o
}

func (o ManagedRuleSetResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleSetResponse {
		return vs[0].([]ManagedRuleSetResponse)[vs[1].(int)]
	}).(ManagedRuleSetResponseOutput)
}

// Define match conditions
type MatchCondition struct {
	// List of possible match values.
	MatchValue []string `pulumi:"matchValue"`
	// Match variable to compare against.
	MatchVariable string `pulumi:"matchVariable"`
	// Describes if the result of this condition should be negated.
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
	Selector *string `pulumi:"selector"`
	// List of transforms.
	Transforms []string `pulumi:"transforms"`
}

// MatchConditionInput is an input type that accepts MatchConditionArgs and MatchConditionOutput values.
// You can construct a concrete instance of `MatchConditionInput` via:
//
//          MatchConditionArgs{...}
type MatchConditionInput interface {
	pulumi.Input

	ToMatchConditionOutput() MatchConditionOutput
	ToMatchConditionOutputWithContext(context.Context) MatchConditionOutput
}

// Define match conditions
type MatchConditionArgs struct {
	// List of possible match values.
	MatchValue pulumi.StringArrayInput `pulumi:"matchValue"`
	// Match variable to compare against.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// Describes if the result of this condition should be negated.
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms.
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (MatchConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchCondition)(nil)).Elem()
}

func (i MatchConditionArgs) ToMatchConditionOutput() MatchConditionOutput {
	return i.ToMatchConditionOutputWithContext(context.Background())
}

func (i MatchConditionArgs) ToMatchConditionOutputWithContext(ctx context.Context) MatchConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchConditionOutput)
}

// MatchConditionArrayInput is an input type that accepts MatchConditionArray and MatchConditionArrayOutput values.
// You can construct a concrete instance of `MatchConditionArrayInput` via:
//
//          MatchConditionArray{ MatchConditionArgs{...} }
type MatchConditionArrayInput interface {
	pulumi.Input

	ToMatchConditionArrayOutput() MatchConditionArrayOutput
	ToMatchConditionArrayOutputWithContext(context.Context) MatchConditionArrayOutput
}

type MatchConditionArray []MatchConditionInput

func (MatchConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchCondition)(nil)).Elem()
}

func (i MatchConditionArray) ToMatchConditionArrayOutput() MatchConditionArrayOutput {
	return i.ToMatchConditionArrayOutputWithContext(context.Background())
}

func (i MatchConditionArray) ToMatchConditionArrayOutputWithContext(ctx context.Context) MatchConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchConditionArrayOutput)
}

// Define match conditions
type MatchConditionOutput struct{ *pulumi.OutputState }

func (MatchConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchCondition)(nil)).Elem()
}

func (o MatchConditionOutput) ToMatchConditionOutput() MatchConditionOutput {
	return o
}

func (o MatchConditionOutput) ToMatchConditionOutputWithContext(ctx context.Context) MatchConditionOutput {
	return o
}

// List of possible match values.
func (o MatchConditionOutput) MatchValue() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchCondition) []string { return v.MatchValue }).(pulumi.StringArrayOutput)
}

// Match variable to compare against.
func (o MatchConditionOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v MatchCondition) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// Describes if the result of this condition should be negated.
func (o MatchConditionOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MatchCondition) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o MatchConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v MatchCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
func (o MatchConditionOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MatchCondition) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms.
func (o MatchConditionOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchCondition) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type MatchConditionArrayOutput struct{ *pulumi.OutputState }

func (MatchConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchCondition)(nil)).Elem()
}

func (o MatchConditionArrayOutput) ToMatchConditionArrayOutput() MatchConditionArrayOutput {
	return o
}

func (o MatchConditionArrayOutput) ToMatchConditionArrayOutputWithContext(ctx context.Context) MatchConditionArrayOutput {
	return o
}

func (o MatchConditionArrayOutput) Index(i pulumi.IntInput) MatchConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MatchCondition {
		return vs[0].([]MatchCondition)[vs[1].(int)]
	}).(MatchConditionOutput)
}

// Define match conditions
type MatchConditionInvokeResponse struct {
	// List of possible match values.
	MatchValue []string `pulumi:"matchValue"`
	// Match variable to compare against.
	MatchVariable string `pulumi:"matchVariable"`
	// Describes if the result of this condition should be negated.
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
	Selector *string `pulumi:"selector"`
	// List of transforms.
	Transforms []string `pulumi:"transforms"`
}

// MatchConditionInvokeResponseInput is an input type that accepts MatchConditionInvokeResponseArgs and MatchConditionInvokeResponseOutput values.
// You can construct a concrete instance of `MatchConditionInvokeResponseInput` via:
//
//          MatchConditionInvokeResponseArgs{...}
type MatchConditionInvokeResponseInput interface {
	pulumi.Input

	ToMatchConditionInvokeResponseOutput() MatchConditionInvokeResponseOutput
	ToMatchConditionInvokeResponseOutputWithContext(context.Context) MatchConditionInvokeResponseOutput
}

// Define match conditions
type MatchConditionInvokeResponseArgs struct {
	// List of possible match values.
	MatchValue pulumi.StringArrayInput `pulumi:"matchValue"`
	// Match variable to compare against.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// Describes if the result of this condition should be negated.
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms.
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (MatchConditionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchConditionInvokeResponse)(nil)).Elem()
}

func (i MatchConditionInvokeResponseArgs) ToMatchConditionInvokeResponseOutput() MatchConditionInvokeResponseOutput {
	return i.ToMatchConditionInvokeResponseOutputWithContext(context.Background())
}

func (i MatchConditionInvokeResponseArgs) ToMatchConditionInvokeResponseOutputWithContext(ctx context.Context) MatchConditionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchConditionInvokeResponseOutput)
}

// MatchConditionInvokeResponseArrayInput is an input type that accepts MatchConditionInvokeResponseArray and MatchConditionInvokeResponseArrayOutput values.
// You can construct a concrete instance of `MatchConditionInvokeResponseArrayInput` via:
//
//          MatchConditionInvokeResponseArray{ MatchConditionInvokeResponseArgs{...} }
type MatchConditionInvokeResponseArrayInput interface {
	pulumi.Input

	ToMatchConditionInvokeResponseArrayOutput() MatchConditionInvokeResponseArrayOutput
	ToMatchConditionInvokeResponseArrayOutputWithContext(context.Context) MatchConditionInvokeResponseArrayOutput
}

type MatchConditionInvokeResponseArray []MatchConditionInvokeResponseInput

func (MatchConditionInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchConditionInvokeResponse)(nil)).Elem()
}

func (i MatchConditionInvokeResponseArray) ToMatchConditionInvokeResponseArrayOutput() MatchConditionInvokeResponseArrayOutput {
	return i.ToMatchConditionInvokeResponseArrayOutputWithContext(context.Background())
}

func (i MatchConditionInvokeResponseArray) ToMatchConditionInvokeResponseArrayOutputWithContext(ctx context.Context) MatchConditionInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchConditionInvokeResponseArrayOutput)
}

// Define match conditions
type MatchConditionInvokeResponseOutput struct{ *pulumi.OutputState }

func (MatchConditionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchConditionInvokeResponse)(nil)).Elem()
}

func (o MatchConditionInvokeResponseOutput) ToMatchConditionInvokeResponseOutput() MatchConditionInvokeResponseOutput {
	return o
}

func (o MatchConditionInvokeResponseOutput) ToMatchConditionInvokeResponseOutputWithContext(ctx context.Context) MatchConditionInvokeResponseOutput {
	return o
}

// List of possible match values.
func (o MatchConditionInvokeResponseOutput) MatchValue() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchConditionInvokeResponse) []string { return v.MatchValue }).(pulumi.StringArrayOutput)
}

// Match variable to compare against.
func (o MatchConditionInvokeResponseOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v MatchConditionInvokeResponse) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// Describes if the result of this condition should be negated.
func (o MatchConditionInvokeResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MatchConditionInvokeResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o MatchConditionInvokeResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v MatchConditionInvokeResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
func (o MatchConditionInvokeResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MatchConditionInvokeResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms.
func (o MatchConditionInvokeResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchConditionInvokeResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type MatchConditionInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (MatchConditionInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchConditionInvokeResponse)(nil)).Elem()
}

func (o MatchConditionInvokeResponseArrayOutput) ToMatchConditionInvokeResponseArrayOutput() MatchConditionInvokeResponseArrayOutput {
	return o
}

func (o MatchConditionInvokeResponseArrayOutput) ToMatchConditionInvokeResponseArrayOutputWithContext(ctx context.Context) MatchConditionInvokeResponseArrayOutput {
	return o
}

func (o MatchConditionInvokeResponseArrayOutput) Index(i pulumi.IntInput) MatchConditionInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MatchConditionInvokeResponse {
		return vs[0].([]MatchConditionInvokeResponse)[vs[1].(int)]
	}).(MatchConditionInvokeResponseOutput)
}

// Define match conditions
type MatchConditionResponse struct {
	// List of possible match values.
	MatchValue []string `pulumi:"matchValue"`
	// Match variable to compare against.
	MatchVariable string `pulumi:"matchVariable"`
	// Describes if the result of this condition should be negated.
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
	Selector *string `pulumi:"selector"`
	// List of transforms.
	Transforms []string `pulumi:"transforms"`
}

// MatchConditionResponseInput is an input type that accepts MatchConditionResponseArgs and MatchConditionResponseOutput values.
// You can construct a concrete instance of `MatchConditionResponseInput` via:
//
//          MatchConditionResponseArgs{...}
type MatchConditionResponseInput interface {
	pulumi.Input

	ToMatchConditionResponseOutput() MatchConditionResponseOutput
	ToMatchConditionResponseOutputWithContext(context.Context) MatchConditionResponseOutput
}

// Define match conditions
type MatchConditionResponseArgs struct {
	// List of possible match values.
	MatchValue pulumi.StringArrayInput `pulumi:"matchValue"`
	// Match variable to compare against.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// Describes if the result of this condition should be negated.
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms.
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (MatchConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchConditionResponse)(nil)).Elem()
}

func (i MatchConditionResponseArgs) ToMatchConditionResponseOutput() MatchConditionResponseOutput {
	return i.ToMatchConditionResponseOutputWithContext(context.Background())
}

func (i MatchConditionResponseArgs) ToMatchConditionResponseOutputWithContext(ctx context.Context) MatchConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchConditionResponseOutput)
}

// MatchConditionResponseArrayInput is an input type that accepts MatchConditionResponseArray and MatchConditionResponseArrayOutput values.
// You can construct a concrete instance of `MatchConditionResponseArrayInput` via:
//
//          MatchConditionResponseArray{ MatchConditionResponseArgs{...} }
type MatchConditionResponseArrayInput interface {
	pulumi.Input

	ToMatchConditionResponseArrayOutput() MatchConditionResponseArrayOutput
	ToMatchConditionResponseArrayOutputWithContext(context.Context) MatchConditionResponseArrayOutput
}

type MatchConditionResponseArray []MatchConditionResponseInput

func (MatchConditionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchConditionResponse)(nil)).Elem()
}

func (i MatchConditionResponseArray) ToMatchConditionResponseArrayOutput() MatchConditionResponseArrayOutput {
	return i.ToMatchConditionResponseArrayOutputWithContext(context.Background())
}

func (i MatchConditionResponseArray) ToMatchConditionResponseArrayOutputWithContext(ctx context.Context) MatchConditionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchConditionResponseArrayOutput)
}

// Define match conditions
type MatchConditionResponseOutput struct{ *pulumi.OutputState }

func (MatchConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchConditionResponse)(nil)).Elem()
}

func (o MatchConditionResponseOutput) ToMatchConditionResponseOutput() MatchConditionResponseOutput {
	return o
}

func (o MatchConditionResponseOutput) ToMatchConditionResponseOutputWithContext(ctx context.Context) MatchConditionResponseOutput {
	return o
}

// List of possible match values.
func (o MatchConditionResponseOutput) MatchValue() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchConditionResponse) []string { return v.MatchValue }).(pulumi.StringArrayOutput)
}

// Match variable to compare against.
func (o MatchConditionResponseOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v MatchConditionResponse) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// Describes if the result of this condition should be negated.
func (o MatchConditionResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MatchConditionResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o MatchConditionResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v MatchConditionResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
func (o MatchConditionResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MatchConditionResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms.
func (o MatchConditionResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchConditionResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type MatchConditionResponseArrayOutput struct{ *pulumi.OutputState }

func (MatchConditionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchConditionResponse)(nil)).Elem()
}

func (o MatchConditionResponseArrayOutput) ToMatchConditionResponseArrayOutput() MatchConditionResponseArrayOutput {
	return o
}

func (o MatchConditionResponseArrayOutput) ToMatchConditionResponseArrayOutputWithContext(ctx context.Context) MatchConditionResponseArrayOutput {
	return o
}

func (o MatchConditionResponseArrayOutput) Index(i pulumi.IntInput) MatchConditionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MatchConditionResponse {
		return vs[0].([]MatchConditionResponse)[vs[1].(int)]
	}).(MatchConditionResponseOutput)
}

// Defines contents of a web application firewall global configuration
type PolicySettings struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	DefaultCustomBlockResponseBody *string `pulumi:"defaultCustomBlockResponseBody"`
	// If the action type is block, this field defines the default customer overridable http response status code.
	DefaultCustomBlockResponseStatusCode *int `pulumi:"defaultCustomBlockResponseStatusCode"`
	// If action type is redirect, this field represents the default redirect URL for the client.
	DefaultRedirectUrl *string `pulumi:"defaultRedirectUrl"`
	// describes if the policy is in enabled state or disabled state
	EnabledState *string `pulumi:"enabledState"`
	// Describes if it is in detection mode or prevention mode at policy level.
	Mode *string `pulumi:"mode"`
}

// PolicySettingsInput is an input type that accepts PolicySettingsArgs and PolicySettingsOutput values.
// You can construct a concrete instance of `PolicySettingsInput` via:
//
//          PolicySettingsArgs{...}
type PolicySettingsInput interface {
	pulumi.Input

	ToPolicySettingsOutput() PolicySettingsOutput
	ToPolicySettingsOutputWithContext(context.Context) PolicySettingsOutput
}

// Defines contents of a web application firewall global configuration
type PolicySettingsArgs struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	DefaultCustomBlockResponseBody pulumi.StringPtrInput `pulumi:"defaultCustomBlockResponseBody"`
	// If the action type is block, this field defines the default customer overridable http response status code.
	DefaultCustomBlockResponseStatusCode pulumi.IntPtrInput `pulumi:"defaultCustomBlockResponseStatusCode"`
	// If action type is redirect, this field represents the default redirect URL for the client.
	DefaultRedirectUrl pulumi.StringPtrInput `pulumi:"defaultRedirectUrl"`
	// describes if the policy is in enabled state or disabled state
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Describes if it is in detection mode or prevention mode at policy level.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (PolicySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettings)(nil)).Elem()
}

func (i PolicySettingsArgs) ToPolicySettingsOutput() PolicySettingsOutput {
	return i.ToPolicySettingsOutputWithContext(context.Background())
}

func (i PolicySettingsArgs) ToPolicySettingsOutputWithContext(ctx context.Context) PolicySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsOutput)
}

func (i PolicySettingsArgs) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return i.ToPolicySettingsPtrOutputWithContext(context.Background())
}

func (i PolicySettingsArgs) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsOutput).ToPolicySettingsPtrOutputWithContext(ctx)
}

// PolicySettingsPtrInput is an input type that accepts PolicySettingsArgs, PolicySettingsPtr and PolicySettingsPtrOutput values.
// You can construct a concrete instance of `PolicySettingsPtrInput` via:
//
//          PolicySettingsArgs{...}
//
//  or:
//
//          nil
type PolicySettingsPtrInput interface {
	pulumi.Input

	ToPolicySettingsPtrOutput() PolicySettingsPtrOutput
	ToPolicySettingsPtrOutputWithContext(context.Context) PolicySettingsPtrOutput
}

type policySettingsPtrType PolicySettingsArgs

func PolicySettingsPtr(v *PolicySettingsArgs) PolicySettingsPtrInput {
	return (*policySettingsPtrType)(v)
}

func (*policySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettings)(nil)).Elem()
}

func (i *policySettingsPtrType) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return i.ToPolicySettingsPtrOutputWithContext(context.Background())
}

func (i *policySettingsPtrType) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsPtrOutput)
}

// Defines contents of a web application firewall global configuration
type PolicySettingsOutput struct{ *pulumi.OutputState }

func (PolicySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettings)(nil)).Elem()
}

func (o PolicySettingsOutput) ToPolicySettingsOutput() PolicySettingsOutput {
	return o
}

func (o PolicySettingsOutput) ToPolicySettingsOutputWithContext(ctx context.Context) PolicySettingsOutput {
	return o
}

func (o PolicySettingsOutput) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return o.ToPolicySettingsPtrOutputWithContext(context.Background())
}

func (o PolicySettingsOutput) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return o.ApplyT(func(v PolicySettings) *PolicySettings {
		return &v
	}).(PolicySettingsPtrOutput)
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsOutput) DefaultCustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettings) *string { return v.DefaultCustomBlockResponseBody }).(pulumi.StringPtrOutput)
}

// If the action type is block, this field defines the default customer overridable http response status code.
func (o PolicySettingsOutput) DefaultCustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettings) *int { return v.DefaultCustomBlockResponseStatusCode }).(pulumi.IntPtrOutput)
}

// If action type is redirect, this field represents the default redirect URL for the client.
func (o PolicySettingsOutput) DefaultRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettings) *string { return v.DefaultRedirectUrl }).(pulumi.StringPtrOutput)
}

// describes if the policy is in enabled state or disabled state
func (o PolicySettingsOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettings) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o PolicySettingsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettings) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type PolicySettingsPtrOutput struct{ *pulumi.OutputState }

func (PolicySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettings)(nil)).Elem()
}

func (o PolicySettingsPtrOutput) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return o
}

func (o PolicySettingsPtrOutput) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return o
}

func (o PolicySettingsPtrOutput) Elem() PolicySettingsOutput {
	return o.ApplyT(func(v *PolicySettings) PolicySettings { return *v }).(PolicySettingsOutput)
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsPtrOutput) DefaultCustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.DefaultCustomBlockResponseBody
	}).(pulumi.StringPtrOutput)
}

// If the action type is block, this field defines the default customer overridable http response status code.
func (o PolicySettingsPtrOutput) DefaultCustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *int {
		if v == nil {
			return nil
		}
		return v.DefaultCustomBlockResponseStatusCode
	}).(pulumi.IntPtrOutput)
}

// If action type is redirect, this field represents the default redirect URL for the client.
func (o PolicySettingsPtrOutput) DefaultRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.DefaultRedirectUrl
	}).(pulumi.StringPtrOutput)
}

// describes if the policy is in enabled state or disabled state
func (o PolicySettingsPtrOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.EnabledState
	}).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o PolicySettingsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Defines contents of a web application firewall global configuration
type PolicySettingsInvokeResponse struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	DefaultCustomBlockResponseBody *string `pulumi:"defaultCustomBlockResponseBody"`
	// If the action type is block, this field defines the default customer overridable http response status code.
	DefaultCustomBlockResponseStatusCode *int `pulumi:"defaultCustomBlockResponseStatusCode"`
	// If action type is redirect, this field represents the default redirect URL for the client.
	DefaultRedirectUrl *string `pulumi:"defaultRedirectUrl"`
	// describes if the policy is in enabled state or disabled state
	EnabledState *string `pulumi:"enabledState"`
	// Describes if it is in detection mode or prevention mode at policy level.
	Mode *string `pulumi:"mode"`
}

// PolicySettingsInvokeResponseInput is an input type that accepts PolicySettingsInvokeResponseArgs and PolicySettingsInvokeResponseOutput values.
// You can construct a concrete instance of `PolicySettingsInvokeResponseInput` via:
//
//          PolicySettingsInvokeResponseArgs{...}
type PolicySettingsInvokeResponseInput interface {
	pulumi.Input

	ToPolicySettingsInvokeResponseOutput() PolicySettingsInvokeResponseOutput
	ToPolicySettingsInvokeResponseOutputWithContext(context.Context) PolicySettingsInvokeResponseOutput
}

// Defines contents of a web application firewall global configuration
type PolicySettingsInvokeResponseArgs struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	DefaultCustomBlockResponseBody pulumi.StringPtrInput `pulumi:"defaultCustomBlockResponseBody"`
	// If the action type is block, this field defines the default customer overridable http response status code.
	DefaultCustomBlockResponseStatusCode pulumi.IntPtrInput `pulumi:"defaultCustomBlockResponseStatusCode"`
	// If action type is redirect, this field represents the default redirect URL for the client.
	DefaultRedirectUrl pulumi.StringPtrInput `pulumi:"defaultRedirectUrl"`
	// describes if the policy is in enabled state or disabled state
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Describes if it is in detection mode or prevention mode at policy level.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (PolicySettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettingsInvokeResponse)(nil)).Elem()
}

func (i PolicySettingsInvokeResponseArgs) ToPolicySettingsInvokeResponseOutput() PolicySettingsInvokeResponseOutput {
	return i.ToPolicySettingsInvokeResponseOutputWithContext(context.Background())
}

func (i PolicySettingsInvokeResponseArgs) ToPolicySettingsInvokeResponseOutputWithContext(ctx context.Context) PolicySettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsInvokeResponseOutput)
}

// Defines contents of a web application firewall global configuration
type PolicySettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (PolicySettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettingsInvokeResponse)(nil)).Elem()
}

func (o PolicySettingsInvokeResponseOutput) ToPolicySettingsInvokeResponseOutput() PolicySettingsInvokeResponseOutput {
	return o
}

func (o PolicySettingsInvokeResponseOutput) ToPolicySettingsInvokeResponseOutputWithContext(ctx context.Context) PolicySettingsInvokeResponseOutput {
	return o
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsInvokeResponseOutput) DefaultCustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsInvokeResponse) *string { return v.DefaultCustomBlockResponseBody }).(pulumi.StringPtrOutput)
}

// If the action type is block, this field defines the default customer overridable http response status code.
func (o PolicySettingsInvokeResponseOutput) DefaultCustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettingsInvokeResponse) *int { return v.DefaultCustomBlockResponseStatusCode }).(pulumi.IntPtrOutput)
}

// If action type is redirect, this field represents the default redirect URL for the client.
func (o PolicySettingsInvokeResponseOutput) DefaultRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsInvokeResponse) *string { return v.DefaultRedirectUrl }).(pulumi.StringPtrOutput)
}

// describes if the policy is in enabled state or disabled state
func (o PolicySettingsInvokeResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsInvokeResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o PolicySettingsInvokeResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsInvokeResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Defines contents of a web application firewall global configuration
type PolicySettingsResponse struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	DefaultCustomBlockResponseBody *string `pulumi:"defaultCustomBlockResponseBody"`
	// If the action type is block, this field defines the default customer overridable http response status code.
	DefaultCustomBlockResponseStatusCode *int `pulumi:"defaultCustomBlockResponseStatusCode"`
	// If action type is redirect, this field represents the default redirect URL for the client.
	DefaultRedirectUrl *string `pulumi:"defaultRedirectUrl"`
	// describes if the policy is in enabled state or disabled state
	EnabledState *string `pulumi:"enabledState"`
	// Describes if it is in detection mode or prevention mode at policy level.
	Mode *string `pulumi:"mode"`
}

// PolicySettingsResponseInput is an input type that accepts PolicySettingsResponseArgs and PolicySettingsResponseOutput values.
// You can construct a concrete instance of `PolicySettingsResponseInput` via:
//
//          PolicySettingsResponseArgs{...}
type PolicySettingsResponseInput interface {
	pulumi.Input

	ToPolicySettingsResponseOutput() PolicySettingsResponseOutput
	ToPolicySettingsResponseOutputWithContext(context.Context) PolicySettingsResponseOutput
}

// Defines contents of a web application firewall global configuration
type PolicySettingsResponseArgs struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	DefaultCustomBlockResponseBody pulumi.StringPtrInput `pulumi:"defaultCustomBlockResponseBody"`
	// If the action type is block, this field defines the default customer overridable http response status code.
	DefaultCustomBlockResponseStatusCode pulumi.IntPtrInput `pulumi:"defaultCustomBlockResponseStatusCode"`
	// If action type is redirect, this field represents the default redirect URL for the client.
	DefaultRedirectUrl pulumi.StringPtrInput `pulumi:"defaultRedirectUrl"`
	// describes if the policy is in enabled state or disabled state
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Describes if it is in detection mode or prevention mode at policy level.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (PolicySettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettingsResponse)(nil)).Elem()
}

func (i PolicySettingsResponseArgs) ToPolicySettingsResponseOutput() PolicySettingsResponseOutput {
	return i.ToPolicySettingsResponseOutputWithContext(context.Background())
}

func (i PolicySettingsResponseArgs) ToPolicySettingsResponseOutputWithContext(ctx context.Context) PolicySettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsResponseOutput)
}

func (i PolicySettingsResponseArgs) ToPolicySettingsResponsePtrOutput() PolicySettingsResponsePtrOutput {
	return i.ToPolicySettingsResponsePtrOutputWithContext(context.Background())
}

func (i PolicySettingsResponseArgs) ToPolicySettingsResponsePtrOutputWithContext(ctx context.Context) PolicySettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsResponseOutput).ToPolicySettingsResponsePtrOutputWithContext(ctx)
}

// PolicySettingsResponsePtrInput is an input type that accepts PolicySettingsResponseArgs, PolicySettingsResponsePtr and PolicySettingsResponsePtrOutput values.
// You can construct a concrete instance of `PolicySettingsResponsePtrInput` via:
//
//          PolicySettingsResponseArgs{...}
//
//  or:
//
//          nil
type PolicySettingsResponsePtrInput interface {
	pulumi.Input

	ToPolicySettingsResponsePtrOutput() PolicySettingsResponsePtrOutput
	ToPolicySettingsResponsePtrOutputWithContext(context.Context) PolicySettingsResponsePtrOutput
}

type policySettingsResponsePtrType PolicySettingsResponseArgs

func PolicySettingsResponsePtr(v *PolicySettingsResponseArgs) PolicySettingsResponsePtrInput {
	return (*policySettingsResponsePtrType)(v)
}

func (*policySettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettingsResponse)(nil)).Elem()
}

func (i *policySettingsResponsePtrType) ToPolicySettingsResponsePtrOutput() PolicySettingsResponsePtrOutput {
	return i.ToPolicySettingsResponsePtrOutputWithContext(context.Background())
}

func (i *policySettingsResponsePtrType) ToPolicySettingsResponsePtrOutputWithContext(ctx context.Context) PolicySettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsResponsePtrOutput)
}

// Defines contents of a web application firewall global configuration
type PolicySettingsResponseOutput struct{ *pulumi.OutputState }

func (PolicySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettingsResponse)(nil)).Elem()
}

func (o PolicySettingsResponseOutput) ToPolicySettingsResponseOutput() PolicySettingsResponseOutput {
	return o
}

func (o PolicySettingsResponseOutput) ToPolicySettingsResponseOutputWithContext(ctx context.Context) PolicySettingsResponseOutput {
	return o
}

func (o PolicySettingsResponseOutput) ToPolicySettingsResponsePtrOutput() PolicySettingsResponsePtrOutput {
	return o.ToPolicySettingsResponsePtrOutputWithContext(context.Background())
}

func (o PolicySettingsResponseOutput) ToPolicySettingsResponsePtrOutputWithContext(ctx context.Context) PolicySettingsResponsePtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *PolicySettingsResponse {
		return &v
	}).(PolicySettingsResponsePtrOutput)
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsResponseOutput) DefaultCustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.DefaultCustomBlockResponseBody }).(pulumi.StringPtrOutput)
}

// If the action type is block, this field defines the default customer overridable http response status code.
func (o PolicySettingsResponseOutput) DefaultCustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *int { return v.DefaultCustomBlockResponseStatusCode }).(pulumi.IntPtrOutput)
}

// If action type is redirect, this field represents the default redirect URL for the client.
func (o PolicySettingsResponseOutput) DefaultRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.DefaultRedirectUrl }).(pulumi.StringPtrOutput)
}

// describes if the policy is in enabled state or disabled state
func (o PolicySettingsResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o PolicySettingsResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type PolicySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PolicySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettingsResponse)(nil)).Elem()
}

func (o PolicySettingsResponsePtrOutput) ToPolicySettingsResponsePtrOutput() PolicySettingsResponsePtrOutput {
	return o
}

func (o PolicySettingsResponsePtrOutput) ToPolicySettingsResponsePtrOutputWithContext(ctx context.Context) PolicySettingsResponsePtrOutput {
	return o
}

func (o PolicySettingsResponsePtrOutput) Elem() PolicySettingsResponseOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) PolicySettingsResponse { return *v }).(PolicySettingsResponseOutput)
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsResponsePtrOutput) DefaultCustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultCustomBlockResponseBody
	}).(pulumi.StringPtrOutput)
}

// If the action type is block, this field defines the default customer overridable http response status code.
func (o PolicySettingsResponsePtrOutput) DefaultCustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.DefaultCustomBlockResponseStatusCode
	}).(pulumi.IntPtrOutput)
}

// If action type is redirect, this field represents the default redirect URL for the client.
func (o PolicySettingsResponsePtrOutput) DefaultRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultRedirectUrl
	}).(pulumi.StringPtrOutput)
}

// describes if the policy is in enabled state or disabled state
func (o PolicySettingsResponsePtrOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnabledState
	}).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o PolicySettingsResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of PostArg to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// PostArgsMatchConditionParametersInput is an input type that accepts PostArgsMatchConditionParametersArgs and PostArgsMatchConditionParametersOutput values.
// You can construct a concrete instance of `PostArgsMatchConditionParametersInput` via:
//
//          PostArgsMatchConditionParametersArgs{...}
type PostArgsMatchConditionParametersInput interface {
	pulumi.Input

	ToPostArgsMatchConditionParametersOutput() PostArgsMatchConditionParametersOutput
	ToPostArgsMatchConditionParametersOutputWithContext(context.Context) PostArgsMatchConditionParametersOutput
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Name of PostArg to be matched
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (PostArgsMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PostArgsMatchConditionParameters)(nil)).Elem()
}

func (i PostArgsMatchConditionParametersArgs) ToPostArgsMatchConditionParametersOutput() PostArgsMatchConditionParametersOutput {
	return i.ToPostArgsMatchConditionParametersOutputWithContext(context.Background())
}

func (i PostArgsMatchConditionParametersArgs) ToPostArgsMatchConditionParametersOutputWithContext(ctx context.Context) PostArgsMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostArgsMatchConditionParametersOutput)
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (PostArgsMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostArgsMatchConditionParameters)(nil)).Elem()
}

func (o PostArgsMatchConditionParametersOutput) ToPostArgsMatchConditionParametersOutput() PostArgsMatchConditionParametersOutput {
	return o
}

func (o PostArgsMatchConditionParametersOutput) ToPostArgsMatchConditionParametersOutputWithContext(ctx context.Context) PostArgsMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o PostArgsMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o PostArgsMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o PostArgsMatchConditionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o PostArgsMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// Name of PostArg to be matched
func (o PostArgsMatchConditionParametersOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParameters) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o PostArgsMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParametersInvokeResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of PostArg to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// PostArgsMatchConditionParametersInvokeResponseInput is an input type that accepts PostArgsMatchConditionParametersInvokeResponseArgs and PostArgsMatchConditionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `PostArgsMatchConditionParametersInvokeResponseInput` via:
//
//          PostArgsMatchConditionParametersInvokeResponseArgs{...}
type PostArgsMatchConditionParametersInvokeResponseInput interface {
	pulumi.Input

	ToPostArgsMatchConditionParametersInvokeResponseOutput() PostArgsMatchConditionParametersInvokeResponseOutput
	ToPostArgsMatchConditionParametersInvokeResponseOutputWithContext(context.Context) PostArgsMatchConditionParametersInvokeResponseOutput
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParametersInvokeResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Name of PostArg to be matched
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (PostArgsMatchConditionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PostArgsMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (i PostArgsMatchConditionParametersInvokeResponseArgs) ToPostArgsMatchConditionParametersInvokeResponseOutput() PostArgsMatchConditionParametersInvokeResponseOutput {
	return i.ToPostArgsMatchConditionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i PostArgsMatchConditionParametersInvokeResponseArgs) ToPostArgsMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) PostArgsMatchConditionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostArgsMatchConditionParametersInvokeResponseOutput)
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (PostArgsMatchConditionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostArgsMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (o PostArgsMatchConditionParametersInvokeResponseOutput) ToPostArgsMatchConditionParametersInvokeResponseOutput() PostArgsMatchConditionParametersInvokeResponseOutput {
	return o
}

func (o PostArgsMatchConditionParametersInvokeResponseOutput) ToPostArgsMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) PostArgsMatchConditionParametersInvokeResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o PostArgsMatchConditionParametersInvokeResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersInvokeResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o PostArgsMatchConditionParametersInvokeResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersInvokeResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o PostArgsMatchConditionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o PostArgsMatchConditionParametersInvokeResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersInvokeResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Name of PostArg to be matched
func (o PostArgsMatchConditionParametersInvokeResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersInvokeResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o PostArgsMatchConditionParametersInvokeResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersInvokeResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of PostArg to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// PostArgsMatchConditionParametersResponseInput is an input type that accepts PostArgsMatchConditionParametersResponseArgs and PostArgsMatchConditionParametersResponseOutput values.
// You can construct a concrete instance of `PostArgsMatchConditionParametersResponseInput` via:
//
//          PostArgsMatchConditionParametersResponseArgs{...}
type PostArgsMatchConditionParametersResponseInput interface {
	pulumi.Input

	ToPostArgsMatchConditionParametersResponseOutput() PostArgsMatchConditionParametersResponseOutput
	ToPostArgsMatchConditionParametersResponseOutputWithContext(context.Context) PostArgsMatchConditionParametersResponseOutput
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParametersResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Name of PostArg to be matched
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (PostArgsMatchConditionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PostArgsMatchConditionParametersResponse)(nil)).Elem()
}

func (i PostArgsMatchConditionParametersResponseArgs) ToPostArgsMatchConditionParametersResponseOutput() PostArgsMatchConditionParametersResponseOutput {
	return i.ToPostArgsMatchConditionParametersResponseOutputWithContext(context.Background())
}

func (i PostArgsMatchConditionParametersResponseArgs) ToPostArgsMatchConditionParametersResponseOutputWithContext(ctx context.Context) PostArgsMatchConditionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostArgsMatchConditionParametersResponseOutput)
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (PostArgsMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostArgsMatchConditionParametersResponse)(nil)).Elem()
}

func (o PostArgsMatchConditionParametersResponseOutput) ToPostArgsMatchConditionParametersResponseOutput() PostArgsMatchConditionParametersResponseOutput {
	return o
}

func (o PostArgsMatchConditionParametersResponseOutput) ToPostArgsMatchConditionParametersResponseOutputWithContext(ctx context.Context) PostArgsMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o PostArgsMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o PostArgsMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o PostArgsMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o PostArgsMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Name of PostArg to be matched
func (o PostArgsMatchConditionParametersResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o PostArgsMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// QueryStringMatchConditionParametersInput is an input type that accepts QueryStringMatchConditionParametersArgs and QueryStringMatchConditionParametersOutput values.
// You can construct a concrete instance of `QueryStringMatchConditionParametersInput` via:
//
//          QueryStringMatchConditionParametersArgs{...}
type QueryStringMatchConditionParametersInput interface {
	pulumi.Input

	ToQueryStringMatchConditionParametersOutput() QueryStringMatchConditionParametersOutput
	ToQueryStringMatchConditionParametersOutputWithContext(context.Context) QueryStringMatchConditionParametersOutput
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (QueryStringMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryStringMatchConditionParameters)(nil)).Elem()
}

func (i QueryStringMatchConditionParametersArgs) ToQueryStringMatchConditionParametersOutput() QueryStringMatchConditionParametersOutput {
	return i.ToQueryStringMatchConditionParametersOutputWithContext(context.Background())
}

func (i QueryStringMatchConditionParametersArgs) ToQueryStringMatchConditionParametersOutputWithContext(ctx context.Context) QueryStringMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryStringMatchConditionParametersOutput)
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (QueryStringMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryStringMatchConditionParameters)(nil)).Elem()
}

func (o QueryStringMatchConditionParametersOutput) ToQueryStringMatchConditionParametersOutput() QueryStringMatchConditionParametersOutput {
	return o
}

func (o QueryStringMatchConditionParametersOutput) ToQueryStringMatchConditionParametersOutputWithContext(ctx context.Context) QueryStringMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o QueryStringMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o QueryStringMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o QueryStringMatchConditionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o QueryStringMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o QueryStringMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParametersInvokeResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// QueryStringMatchConditionParametersInvokeResponseInput is an input type that accepts QueryStringMatchConditionParametersInvokeResponseArgs and QueryStringMatchConditionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `QueryStringMatchConditionParametersInvokeResponseInput` via:
//
//          QueryStringMatchConditionParametersInvokeResponseArgs{...}
type QueryStringMatchConditionParametersInvokeResponseInput interface {
	pulumi.Input

	ToQueryStringMatchConditionParametersInvokeResponseOutput() QueryStringMatchConditionParametersInvokeResponseOutput
	ToQueryStringMatchConditionParametersInvokeResponseOutputWithContext(context.Context) QueryStringMatchConditionParametersInvokeResponseOutput
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParametersInvokeResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (QueryStringMatchConditionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryStringMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (i QueryStringMatchConditionParametersInvokeResponseArgs) ToQueryStringMatchConditionParametersInvokeResponseOutput() QueryStringMatchConditionParametersInvokeResponseOutput {
	return i.ToQueryStringMatchConditionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i QueryStringMatchConditionParametersInvokeResponseArgs) ToQueryStringMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) QueryStringMatchConditionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryStringMatchConditionParametersInvokeResponseOutput)
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (QueryStringMatchConditionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryStringMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (o QueryStringMatchConditionParametersInvokeResponseOutput) ToQueryStringMatchConditionParametersInvokeResponseOutput() QueryStringMatchConditionParametersInvokeResponseOutput {
	return o
}

func (o QueryStringMatchConditionParametersInvokeResponseOutput) ToQueryStringMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) QueryStringMatchConditionParametersInvokeResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o QueryStringMatchConditionParametersInvokeResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersInvokeResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o QueryStringMatchConditionParametersInvokeResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersInvokeResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o QueryStringMatchConditionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o QueryStringMatchConditionParametersInvokeResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersInvokeResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o QueryStringMatchConditionParametersInvokeResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersInvokeResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// QueryStringMatchConditionParametersResponseInput is an input type that accepts QueryStringMatchConditionParametersResponseArgs and QueryStringMatchConditionParametersResponseOutput values.
// You can construct a concrete instance of `QueryStringMatchConditionParametersResponseInput` via:
//
//          QueryStringMatchConditionParametersResponseArgs{...}
type QueryStringMatchConditionParametersResponseInput interface {
	pulumi.Input

	ToQueryStringMatchConditionParametersResponseOutput() QueryStringMatchConditionParametersResponseOutput
	ToQueryStringMatchConditionParametersResponseOutputWithContext(context.Context) QueryStringMatchConditionParametersResponseOutput
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParametersResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (QueryStringMatchConditionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryStringMatchConditionParametersResponse)(nil)).Elem()
}

func (i QueryStringMatchConditionParametersResponseArgs) ToQueryStringMatchConditionParametersResponseOutput() QueryStringMatchConditionParametersResponseOutput {
	return i.ToQueryStringMatchConditionParametersResponseOutputWithContext(context.Background())
}

func (i QueryStringMatchConditionParametersResponseArgs) ToQueryStringMatchConditionParametersResponseOutputWithContext(ctx context.Context) QueryStringMatchConditionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryStringMatchConditionParametersResponseOutput)
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (QueryStringMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryStringMatchConditionParametersResponse)(nil)).Elem()
}

func (o QueryStringMatchConditionParametersResponseOutput) ToQueryStringMatchConditionParametersResponseOutput() QueryStringMatchConditionParametersResponseOutput {
	return o
}

func (o QueryStringMatchConditionParametersResponseOutput) ToQueryStringMatchConditionParametersResponseOutputWithContext(ctx context.Context) QueryStringMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o QueryStringMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o QueryStringMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o QueryStringMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o QueryStringMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o QueryStringMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRule struct {
	// Describes what action to be applied when rule matches
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchCondition `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name string `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority int `pulumi:"priority"`
	// Defines rate limit duration. Default is 1 minute.
	RateLimitDurationInMinutes int `pulumi:"rateLimitDurationInMinutes"`
	// Defines rate limit threshold.
	RateLimitThreshold int `pulumi:"rateLimitThreshold"`
}

// RateLimitRuleInput is an input type that accepts RateLimitRuleArgs and RateLimitRuleOutput values.
// You can construct a concrete instance of `RateLimitRuleInput` via:
//
//          RateLimitRuleArgs{...}
type RateLimitRuleInput interface {
	pulumi.Input

	ToRateLimitRuleOutput() RateLimitRuleOutput
	ToRateLimitRuleOutputWithContext(context.Context) RateLimitRuleOutput
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleArgs struct {
	// Describes what action to be applied when rule matches
	Action pulumi.StringInput `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions MatchConditionArrayInput `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name pulumi.StringInput `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority pulumi.IntInput `pulumi:"priority"`
	// Defines rate limit duration. Default is 1 minute.
	RateLimitDurationInMinutes pulumi.IntInput `pulumi:"rateLimitDurationInMinutes"`
	// Defines rate limit threshold.
	RateLimitThreshold pulumi.IntInput `pulumi:"rateLimitThreshold"`
}

func (RateLimitRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRule)(nil)).Elem()
}

func (i RateLimitRuleArgs) ToRateLimitRuleOutput() RateLimitRuleOutput {
	return i.ToRateLimitRuleOutputWithContext(context.Background())
}

func (i RateLimitRuleArgs) ToRateLimitRuleOutputWithContext(ctx context.Context) RateLimitRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleOutput)
}

// RateLimitRuleArrayInput is an input type that accepts RateLimitRuleArray and RateLimitRuleArrayOutput values.
// You can construct a concrete instance of `RateLimitRuleArrayInput` via:
//
//          RateLimitRuleArray{ RateLimitRuleArgs{...} }
type RateLimitRuleArrayInput interface {
	pulumi.Input

	ToRateLimitRuleArrayOutput() RateLimitRuleArrayOutput
	ToRateLimitRuleArrayOutputWithContext(context.Context) RateLimitRuleArrayOutput
}

type RateLimitRuleArray []RateLimitRuleInput

func (RateLimitRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RateLimitRule)(nil)).Elem()
}

func (i RateLimitRuleArray) ToRateLimitRuleArrayOutput() RateLimitRuleArrayOutput {
	return i.ToRateLimitRuleArrayOutputWithContext(context.Background())
}

func (i RateLimitRuleArray) ToRateLimitRuleArrayOutputWithContext(ctx context.Context) RateLimitRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleArrayOutput)
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleOutput struct{ *pulumi.OutputState }

func (RateLimitRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRule)(nil)).Elem()
}

func (o RateLimitRuleOutput) ToRateLimitRuleOutput() RateLimitRuleOutput {
	return o
}

func (o RateLimitRuleOutput) ToRateLimitRuleOutputWithContext(ctx context.Context) RateLimitRuleOutput {
	return o
}

// Describes what action to be applied when rule matches
func (o RateLimitRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitRule) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o RateLimitRuleOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RateLimitRule) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o RateLimitRuleOutput) MatchConditions() MatchConditionArrayOutput {
	return o.ApplyT(func(v RateLimitRule) []MatchCondition { return v.MatchConditions }).(MatchConditionArrayOutput)
}

// Defines the name of the custom rule
func (o RateLimitRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitRule) string { return v.Name }).(pulumi.StringOutput)
}

// Defines in what order this rule be evaluated in the overall list of custom rules
func (o RateLimitRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Defines rate limit duration. Default is 1 minute.
func (o RateLimitRuleOutput) RateLimitDurationInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRule) int { return v.RateLimitDurationInMinutes }).(pulumi.IntOutput)
}

// Defines rate limit threshold.
func (o RateLimitRuleOutput) RateLimitThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRule) int { return v.RateLimitThreshold }).(pulumi.IntOutput)
}

type RateLimitRuleArrayOutput struct{ *pulumi.OutputState }

func (RateLimitRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RateLimitRule)(nil)).Elem()
}

func (o RateLimitRuleArrayOutput) ToRateLimitRuleArrayOutput() RateLimitRuleArrayOutput {
	return o
}

func (o RateLimitRuleArrayOutput) ToRateLimitRuleArrayOutputWithContext(ctx context.Context) RateLimitRuleArrayOutput {
	return o
}

func (o RateLimitRuleArrayOutput) Index(i pulumi.IntInput) RateLimitRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RateLimitRule {
		return vs[0].([]RateLimitRule)[vs[1].(int)]
	}).(RateLimitRuleOutput)
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleInvokeResponse struct {
	// Describes what action to be applied when rule matches
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchConditionInvokeResponse `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name string `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority int `pulumi:"priority"`
	// Defines rate limit duration. Default is 1 minute.
	RateLimitDurationInMinutes int `pulumi:"rateLimitDurationInMinutes"`
	// Defines rate limit threshold.
	RateLimitThreshold int `pulumi:"rateLimitThreshold"`
}

// RateLimitRuleInvokeResponseInput is an input type that accepts RateLimitRuleInvokeResponseArgs and RateLimitRuleInvokeResponseOutput values.
// You can construct a concrete instance of `RateLimitRuleInvokeResponseInput` via:
//
//          RateLimitRuleInvokeResponseArgs{...}
type RateLimitRuleInvokeResponseInput interface {
	pulumi.Input

	ToRateLimitRuleInvokeResponseOutput() RateLimitRuleInvokeResponseOutput
	ToRateLimitRuleInvokeResponseOutputWithContext(context.Context) RateLimitRuleInvokeResponseOutput
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleInvokeResponseArgs struct {
	// Describes what action to be applied when rule matches
	Action pulumi.StringInput `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions MatchConditionInvokeResponseArrayInput `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name pulumi.StringInput `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority pulumi.IntInput `pulumi:"priority"`
	// Defines rate limit duration. Default is 1 minute.
	RateLimitDurationInMinutes pulumi.IntInput `pulumi:"rateLimitDurationInMinutes"`
	// Defines rate limit threshold.
	RateLimitThreshold pulumi.IntInput `pulumi:"rateLimitThreshold"`
}

func (RateLimitRuleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleInvokeResponse)(nil)).Elem()
}

func (i RateLimitRuleInvokeResponseArgs) ToRateLimitRuleInvokeResponseOutput() RateLimitRuleInvokeResponseOutput {
	return i.ToRateLimitRuleInvokeResponseOutputWithContext(context.Background())
}

func (i RateLimitRuleInvokeResponseArgs) ToRateLimitRuleInvokeResponseOutputWithContext(ctx context.Context) RateLimitRuleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleInvokeResponseOutput)
}

// RateLimitRuleInvokeResponseArrayInput is an input type that accepts RateLimitRuleInvokeResponseArray and RateLimitRuleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `RateLimitRuleInvokeResponseArrayInput` via:
//
//          RateLimitRuleInvokeResponseArray{ RateLimitRuleInvokeResponseArgs{...} }
type RateLimitRuleInvokeResponseArrayInput interface {
	pulumi.Input

	ToRateLimitRuleInvokeResponseArrayOutput() RateLimitRuleInvokeResponseArrayOutput
	ToRateLimitRuleInvokeResponseArrayOutputWithContext(context.Context) RateLimitRuleInvokeResponseArrayOutput
}

type RateLimitRuleInvokeResponseArray []RateLimitRuleInvokeResponseInput

func (RateLimitRuleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RateLimitRuleInvokeResponse)(nil)).Elem()
}

func (i RateLimitRuleInvokeResponseArray) ToRateLimitRuleInvokeResponseArrayOutput() RateLimitRuleInvokeResponseArrayOutput {
	return i.ToRateLimitRuleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i RateLimitRuleInvokeResponseArray) ToRateLimitRuleInvokeResponseArrayOutputWithContext(ctx context.Context) RateLimitRuleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleInvokeResponseArrayOutput)
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleInvokeResponseOutput struct{ *pulumi.OutputState }

func (RateLimitRuleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleInvokeResponse)(nil)).Elem()
}

func (o RateLimitRuleInvokeResponseOutput) ToRateLimitRuleInvokeResponseOutput() RateLimitRuleInvokeResponseOutput {
	return o
}

func (o RateLimitRuleInvokeResponseOutput) ToRateLimitRuleInvokeResponseOutputWithContext(ctx context.Context) RateLimitRuleInvokeResponseOutput {
	return o
}

// Describes what action to be applied when rule matches
func (o RateLimitRuleInvokeResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitRuleInvokeResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o RateLimitRuleInvokeResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RateLimitRuleInvokeResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o RateLimitRuleInvokeResponseOutput) MatchConditions() MatchConditionInvokeResponseArrayOutput {
	return o.ApplyT(func(v RateLimitRuleInvokeResponse) []MatchConditionInvokeResponse { return v.MatchConditions }).(MatchConditionInvokeResponseArrayOutput)
}

// Defines the name of the custom rule
func (o RateLimitRuleInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitRuleInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines in what order this rule be evaluated in the overall list of custom rules
func (o RateLimitRuleInvokeResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRuleInvokeResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Defines rate limit duration. Default is 1 minute.
func (o RateLimitRuleInvokeResponseOutput) RateLimitDurationInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRuleInvokeResponse) int { return v.RateLimitDurationInMinutes }).(pulumi.IntOutput)
}

// Defines rate limit threshold.
func (o RateLimitRuleInvokeResponseOutput) RateLimitThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRuleInvokeResponse) int { return v.RateLimitThreshold }).(pulumi.IntOutput)
}

type RateLimitRuleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (RateLimitRuleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RateLimitRuleInvokeResponse)(nil)).Elem()
}

func (o RateLimitRuleInvokeResponseArrayOutput) ToRateLimitRuleInvokeResponseArrayOutput() RateLimitRuleInvokeResponseArrayOutput {
	return o
}

func (o RateLimitRuleInvokeResponseArrayOutput) ToRateLimitRuleInvokeResponseArrayOutputWithContext(ctx context.Context) RateLimitRuleInvokeResponseArrayOutput {
	return o
}

func (o RateLimitRuleInvokeResponseArrayOutput) Index(i pulumi.IntInput) RateLimitRuleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RateLimitRuleInvokeResponse {
		return vs[0].([]RateLimitRuleInvokeResponse)[vs[1].(int)]
	}).(RateLimitRuleInvokeResponseOutput)
}

// Defines contents of rate limit rules
type RateLimitRuleList struct {
	// List of rules
	Rules []RateLimitRule `pulumi:"rules"`
}

// RateLimitRuleListInput is an input type that accepts RateLimitRuleListArgs and RateLimitRuleListOutput values.
// You can construct a concrete instance of `RateLimitRuleListInput` via:
//
//          RateLimitRuleListArgs{...}
type RateLimitRuleListInput interface {
	pulumi.Input

	ToRateLimitRuleListOutput() RateLimitRuleListOutput
	ToRateLimitRuleListOutputWithContext(context.Context) RateLimitRuleListOutput
}

// Defines contents of rate limit rules
type RateLimitRuleListArgs struct {
	// List of rules
	Rules RateLimitRuleArrayInput `pulumi:"rules"`
}

func (RateLimitRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleList)(nil)).Elem()
}

func (i RateLimitRuleListArgs) ToRateLimitRuleListOutput() RateLimitRuleListOutput {
	return i.ToRateLimitRuleListOutputWithContext(context.Background())
}

func (i RateLimitRuleListArgs) ToRateLimitRuleListOutputWithContext(ctx context.Context) RateLimitRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleListOutput)
}

func (i RateLimitRuleListArgs) ToRateLimitRuleListPtrOutput() RateLimitRuleListPtrOutput {
	return i.ToRateLimitRuleListPtrOutputWithContext(context.Background())
}

func (i RateLimitRuleListArgs) ToRateLimitRuleListPtrOutputWithContext(ctx context.Context) RateLimitRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleListOutput).ToRateLimitRuleListPtrOutputWithContext(ctx)
}

// RateLimitRuleListPtrInput is an input type that accepts RateLimitRuleListArgs, RateLimitRuleListPtr and RateLimitRuleListPtrOutput values.
// You can construct a concrete instance of `RateLimitRuleListPtrInput` via:
//
//          RateLimitRuleListArgs{...}
//
//  or:
//
//          nil
type RateLimitRuleListPtrInput interface {
	pulumi.Input

	ToRateLimitRuleListPtrOutput() RateLimitRuleListPtrOutput
	ToRateLimitRuleListPtrOutputWithContext(context.Context) RateLimitRuleListPtrOutput
}

type rateLimitRuleListPtrType RateLimitRuleListArgs

func RateLimitRuleListPtr(v *RateLimitRuleListArgs) RateLimitRuleListPtrInput {
	return (*rateLimitRuleListPtrType)(v)
}

func (*rateLimitRuleListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitRuleList)(nil)).Elem()
}

func (i *rateLimitRuleListPtrType) ToRateLimitRuleListPtrOutput() RateLimitRuleListPtrOutput {
	return i.ToRateLimitRuleListPtrOutputWithContext(context.Background())
}

func (i *rateLimitRuleListPtrType) ToRateLimitRuleListPtrOutputWithContext(ctx context.Context) RateLimitRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleListPtrOutput)
}

// Defines contents of rate limit rules
type RateLimitRuleListOutput struct{ *pulumi.OutputState }

func (RateLimitRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleList)(nil)).Elem()
}

func (o RateLimitRuleListOutput) ToRateLimitRuleListOutput() RateLimitRuleListOutput {
	return o
}

func (o RateLimitRuleListOutput) ToRateLimitRuleListOutputWithContext(ctx context.Context) RateLimitRuleListOutput {
	return o
}

func (o RateLimitRuleListOutput) ToRateLimitRuleListPtrOutput() RateLimitRuleListPtrOutput {
	return o.ToRateLimitRuleListPtrOutputWithContext(context.Background())
}

func (o RateLimitRuleListOutput) ToRateLimitRuleListPtrOutputWithContext(ctx context.Context) RateLimitRuleListPtrOutput {
	return o.ApplyT(func(v RateLimitRuleList) *RateLimitRuleList {
		return &v
	}).(RateLimitRuleListPtrOutput)
}

// List of rules
func (o RateLimitRuleListOutput) Rules() RateLimitRuleArrayOutput {
	return o.ApplyT(func(v RateLimitRuleList) []RateLimitRule { return v.Rules }).(RateLimitRuleArrayOutput)
}

type RateLimitRuleListPtrOutput struct{ *pulumi.OutputState }

func (RateLimitRuleListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitRuleList)(nil)).Elem()
}

func (o RateLimitRuleListPtrOutput) ToRateLimitRuleListPtrOutput() RateLimitRuleListPtrOutput {
	return o
}

func (o RateLimitRuleListPtrOutput) ToRateLimitRuleListPtrOutputWithContext(ctx context.Context) RateLimitRuleListPtrOutput {
	return o
}

func (o RateLimitRuleListPtrOutput) Elem() RateLimitRuleListOutput {
	return o.ApplyT(func(v *RateLimitRuleList) RateLimitRuleList { return *v }).(RateLimitRuleListOutput)
}

// List of rules
func (o RateLimitRuleListPtrOutput) Rules() RateLimitRuleArrayOutput {
	return o.ApplyT(func(v *RateLimitRuleList) []RateLimitRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(RateLimitRuleArrayOutput)
}

// Defines contents of rate limit rules
type RateLimitRuleListInvokeResponse struct {
	// List of rules
	Rules []RateLimitRuleInvokeResponse `pulumi:"rules"`
}

// RateLimitRuleListInvokeResponseInput is an input type that accepts RateLimitRuleListInvokeResponseArgs and RateLimitRuleListInvokeResponseOutput values.
// You can construct a concrete instance of `RateLimitRuleListInvokeResponseInput` via:
//
//          RateLimitRuleListInvokeResponseArgs{...}
type RateLimitRuleListInvokeResponseInput interface {
	pulumi.Input

	ToRateLimitRuleListInvokeResponseOutput() RateLimitRuleListInvokeResponseOutput
	ToRateLimitRuleListInvokeResponseOutputWithContext(context.Context) RateLimitRuleListInvokeResponseOutput
}

// Defines contents of rate limit rules
type RateLimitRuleListInvokeResponseArgs struct {
	// List of rules
	Rules RateLimitRuleInvokeResponseArrayInput `pulumi:"rules"`
}

func (RateLimitRuleListInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleListInvokeResponse)(nil)).Elem()
}

func (i RateLimitRuleListInvokeResponseArgs) ToRateLimitRuleListInvokeResponseOutput() RateLimitRuleListInvokeResponseOutput {
	return i.ToRateLimitRuleListInvokeResponseOutputWithContext(context.Background())
}

func (i RateLimitRuleListInvokeResponseArgs) ToRateLimitRuleListInvokeResponseOutputWithContext(ctx context.Context) RateLimitRuleListInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleListInvokeResponseOutput)
}

// Defines contents of rate limit rules
type RateLimitRuleListInvokeResponseOutput struct{ *pulumi.OutputState }

func (RateLimitRuleListInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleListInvokeResponse)(nil)).Elem()
}

func (o RateLimitRuleListInvokeResponseOutput) ToRateLimitRuleListInvokeResponseOutput() RateLimitRuleListInvokeResponseOutput {
	return o
}

func (o RateLimitRuleListInvokeResponseOutput) ToRateLimitRuleListInvokeResponseOutputWithContext(ctx context.Context) RateLimitRuleListInvokeResponseOutput {
	return o
}

// List of rules
func (o RateLimitRuleListInvokeResponseOutput) Rules() RateLimitRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v RateLimitRuleListInvokeResponse) []RateLimitRuleInvokeResponse { return v.Rules }).(RateLimitRuleInvokeResponseArrayOutput)
}

// Defines contents of rate limit rules
type RateLimitRuleListResponse struct {
	// List of rules
	Rules []RateLimitRuleResponse `pulumi:"rules"`
}

// RateLimitRuleListResponseInput is an input type that accepts RateLimitRuleListResponseArgs and RateLimitRuleListResponseOutput values.
// You can construct a concrete instance of `RateLimitRuleListResponseInput` via:
//
//          RateLimitRuleListResponseArgs{...}
type RateLimitRuleListResponseInput interface {
	pulumi.Input

	ToRateLimitRuleListResponseOutput() RateLimitRuleListResponseOutput
	ToRateLimitRuleListResponseOutputWithContext(context.Context) RateLimitRuleListResponseOutput
}

// Defines contents of rate limit rules
type RateLimitRuleListResponseArgs struct {
	// List of rules
	Rules RateLimitRuleResponseArrayInput `pulumi:"rules"`
}

func (RateLimitRuleListResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleListResponse)(nil)).Elem()
}

func (i RateLimitRuleListResponseArgs) ToRateLimitRuleListResponseOutput() RateLimitRuleListResponseOutput {
	return i.ToRateLimitRuleListResponseOutputWithContext(context.Background())
}

func (i RateLimitRuleListResponseArgs) ToRateLimitRuleListResponseOutputWithContext(ctx context.Context) RateLimitRuleListResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleListResponseOutput)
}

func (i RateLimitRuleListResponseArgs) ToRateLimitRuleListResponsePtrOutput() RateLimitRuleListResponsePtrOutput {
	return i.ToRateLimitRuleListResponsePtrOutputWithContext(context.Background())
}

func (i RateLimitRuleListResponseArgs) ToRateLimitRuleListResponsePtrOutputWithContext(ctx context.Context) RateLimitRuleListResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleListResponseOutput).ToRateLimitRuleListResponsePtrOutputWithContext(ctx)
}

// RateLimitRuleListResponsePtrInput is an input type that accepts RateLimitRuleListResponseArgs, RateLimitRuleListResponsePtr and RateLimitRuleListResponsePtrOutput values.
// You can construct a concrete instance of `RateLimitRuleListResponsePtrInput` via:
//
//          RateLimitRuleListResponseArgs{...}
//
//  or:
//
//          nil
type RateLimitRuleListResponsePtrInput interface {
	pulumi.Input

	ToRateLimitRuleListResponsePtrOutput() RateLimitRuleListResponsePtrOutput
	ToRateLimitRuleListResponsePtrOutputWithContext(context.Context) RateLimitRuleListResponsePtrOutput
}

type rateLimitRuleListResponsePtrType RateLimitRuleListResponseArgs

func RateLimitRuleListResponsePtr(v *RateLimitRuleListResponseArgs) RateLimitRuleListResponsePtrInput {
	return (*rateLimitRuleListResponsePtrType)(v)
}

func (*rateLimitRuleListResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitRuleListResponse)(nil)).Elem()
}

func (i *rateLimitRuleListResponsePtrType) ToRateLimitRuleListResponsePtrOutput() RateLimitRuleListResponsePtrOutput {
	return i.ToRateLimitRuleListResponsePtrOutputWithContext(context.Background())
}

func (i *rateLimitRuleListResponsePtrType) ToRateLimitRuleListResponsePtrOutputWithContext(ctx context.Context) RateLimitRuleListResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleListResponsePtrOutput)
}

// Defines contents of rate limit rules
type RateLimitRuleListResponseOutput struct{ *pulumi.OutputState }

func (RateLimitRuleListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleListResponse)(nil)).Elem()
}

func (o RateLimitRuleListResponseOutput) ToRateLimitRuleListResponseOutput() RateLimitRuleListResponseOutput {
	return o
}

func (o RateLimitRuleListResponseOutput) ToRateLimitRuleListResponseOutputWithContext(ctx context.Context) RateLimitRuleListResponseOutput {
	return o
}

func (o RateLimitRuleListResponseOutput) ToRateLimitRuleListResponsePtrOutput() RateLimitRuleListResponsePtrOutput {
	return o.ToRateLimitRuleListResponsePtrOutputWithContext(context.Background())
}

func (o RateLimitRuleListResponseOutput) ToRateLimitRuleListResponsePtrOutputWithContext(ctx context.Context) RateLimitRuleListResponsePtrOutput {
	return o.ApplyT(func(v RateLimitRuleListResponse) *RateLimitRuleListResponse {
		return &v
	}).(RateLimitRuleListResponsePtrOutput)
}

// List of rules
func (o RateLimitRuleListResponseOutput) Rules() RateLimitRuleResponseArrayOutput {
	return o.ApplyT(func(v RateLimitRuleListResponse) []RateLimitRuleResponse { return v.Rules }).(RateLimitRuleResponseArrayOutput)
}

type RateLimitRuleListResponsePtrOutput struct{ *pulumi.OutputState }

func (RateLimitRuleListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitRuleListResponse)(nil)).Elem()
}

func (o RateLimitRuleListResponsePtrOutput) ToRateLimitRuleListResponsePtrOutput() RateLimitRuleListResponsePtrOutput {
	return o
}

func (o RateLimitRuleListResponsePtrOutput) ToRateLimitRuleListResponsePtrOutputWithContext(ctx context.Context) RateLimitRuleListResponsePtrOutput {
	return o
}

func (o RateLimitRuleListResponsePtrOutput) Elem() RateLimitRuleListResponseOutput {
	return o.ApplyT(func(v *RateLimitRuleListResponse) RateLimitRuleListResponse { return *v }).(RateLimitRuleListResponseOutput)
}

// List of rules
func (o RateLimitRuleListResponsePtrOutput) Rules() RateLimitRuleResponseArrayOutput {
	return o.ApplyT(func(v *RateLimitRuleListResponse) []RateLimitRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(RateLimitRuleResponseArrayOutput)
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleResponse struct {
	// Describes what action to be applied when rule matches
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchConditionResponse `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name string `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority int `pulumi:"priority"`
	// Defines rate limit duration. Default is 1 minute.
	RateLimitDurationInMinutes int `pulumi:"rateLimitDurationInMinutes"`
	// Defines rate limit threshold.
	RateLimitThreshold int `pulumi:"rateLimitThreshold"`
}

// RateLimitRuleResponseInput is an input type that accepts RateLimitRuleResponseArgs and RateLimitRuleResponseOutput values.
// You can construct a concrete instance of `RateLimitRuleResponseInput` via:
//
//          RateLimitRuleResponseArgs{...}
type RateLimitRuleResponseInput interface {
	pulumi.Input

	ToRateLimitRuleResponseOutput() RateLimitRuleResponseOutput
	ToRateLimitRuleResponseOutputWithContext(context.Context) RateLimitRuleResponseOutput
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleResponseArgs struct {
	// Describes what action to be applied when rule matches
	Action pulumi.StringInput `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions MatchConditionResponseArrayInput `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name pulumi.StringInput `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority pulumi.IntInput `pulumi:"priority"`
	// Defines rate limit duration. Default is 1 minute.
	RateLimitDurationInMinutes pulumi.IntInput `pulumi:"rateLimitDurationInMinutes"`
	// Defines rate limit threshold.
	RateLimitThreshold pulumi.IntInput `pulumi:"rateLimitThreshold"`
}

func (RateLimitRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleResponse)(nil)).Elem()
}

func (i RateLimitRuleResponseArgs) ToRateLimitRuleResponseOutput() RateLimitRuleResponseOutput {
	return i.ToRateLimitRuleResponseOutputWithContext(context.Background())
}

func (i RateLimitRuleResponseArgs) ToRateLimitRuleResponseOutputWithContext(ctx context.Context) RateLimitRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleResponseOutput)
}

// RateLimitRuleResponseArrayInput is an input type that accepts RateLimitRuleResponseArray and RateLimitRuleResponseArrayOutput values.
// You can construct a concrete instance of `RateLimitRuleResponseArrayInput` via:
//
//          RateLimitRuleResponseArray{ RateLimitRuleResponseArgs{...} }
type RateLimitRuleResponseArrayInput interface {
	pulumi.Input

	ToRateLimitRuleResponseArrayOutput() RateLimitRuleResponseArrayOutput
	ToRateLimitRuleResponseArrayOutputWithContext(context.Context) RateLimitRuleResponseArrayOutput
}

type RateLimitRuleResponseArray []RateLimitRuleResponseInput

func (RateLimitRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RateLimitRuleResponse)(nil)).Elem()
}

func (i RateLimitRuleResponseArray) ToRateLimitRuleResponseArrayOutput() RateLimitRuleResponseArrayOutput {
	return i.ToRateLimitRuleResponseArrayOutputWithContext(context.Background())
}

func (i RateLimitRuleResponseArray) ToRateLimitRuleResponseArrayOutputWithContext(ctx context.Context) RateLimitRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleResponseArrayOutput)
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleResponseOutput struct{ *pulumi.OutputState }

func (RateLimitRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleResponse)(nil)).Elem()
}

func (o RateLimitRuleResponseOutput) ToRateLimitRuleResponseOutput() RateLimitRuleResponseOutput {
	return o
}

func (o RateLimitRuleResponseOutput) ToRateLimitRuleResponseOutputWithContext(ctx context.Context) RateLimitRuleResponseOutput {
	return o
}

// Describes what action to be applied when rule matches
func (o RateLimitRuleResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o RateLimitRuleResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o RateLimitRuleResponseOutput) MatchConditions() MatchConditionResponseArrayOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) []MatchConditionResponse { return v.MatchConditions }).(MatchConditionResponseArrayOutput)
}

// Defines the name of the custom rule
func (o RateLimitRuleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines in what order this rule be evaluated in the overall list of custom rules
func (o RateLimitRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Defines rate limit duration. Default is 1 minute.
func (o RateLimitRuleResponseOutput) RateLimitDurationInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) int { return v.RateLimitDurationInMinutes }).(pulumi.IntOutput)
}

// Defines rate limit threshold.
func (o RateLimitRuleResponseOutput) RateLimitThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) int { return v.RateLimitThreshold }).(pulumi.IntOutput)
}

type RateLimitRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RateLimitRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RateLimitRuleResponse)(nil)).Elem()
}

func (o RateLimitRuleResponseArrayOutput) ToRateLimitRuleResponseArrayOutput() RateLimitRuleResponseArrayOutput {
	return o
}

func (o RateLimitRuleResponseArrayOutput) ToRateLimitRuleResponseArrayOutputWithContext(ctx context.Context) RateLimitRuleResponseArrayOutput {
	return o
}

func (o RateLimitRuleResponseArrayOutput) Index(i pulumi.IntInput) RateLimitRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RateLimitRuleResponse {
		return vs[0].([]RateLimitRuleResponse)[vs[1].(int)]
	}).(RateLimitRuleResponseOutput)
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParameters struct {
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RemoteAddressMatchConditionParametersInput is an input type that accepts RemoteAddressMatchConditionParametersArgs and RemoteAddressMatchConditionParametersOutput values.
// You can construct a concrete instance of `RemoteAddressMatchConditionParametersInput` via:
//
//          RemoteAddressMatchConditionParametersArgs{...}
type RemoteAddressMatchConditionParametersInput interface {
	pulumi.Input

	ToRemoteAddressMatchConditionParametersOutput() RemoteAddressMatchConditionParametersOutput
	ToRemoteAddressMatchConditionParametersOutputWithContext(context.Context) RemoteAddressMatchConditionParametersOutput
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParametersArgs struct {
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RemoteAddressMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteAddressMatchConditionParameters)(nil)).Elem()
}

func (i RemoteAddressMatchConditionParametersArgs) ToRemoteAddressMatchConditionParametersOutput() RemoteAddressMatchConditionParametersOutput {
	return i.ToRemoteAddressMatchConditionParametersOutputWithContext(context.Background())
}

func (i RemoteAddressMatchConditionParametersArgs) ToRemoteAddressMatchConditionParametersOutputWithContext(ctx context.Context) RemoteAddressMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteAddressMatchConditionParametersOutput)
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (RemoteAddressMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteAddressMatchConditionParameters)(nil)).Elem()
}

func (o RemoteAddressMatchConditionParametersOutput) ToRemoteAddressMatchConditionParametersOutput() RemoteAddressMatchConditionParametersOutput {
	return o
}

func (o RemoteAddressMatchConditionParametersOutput) ToRemoteAddressMatchConditionParametersOutputWithContext(ctx context.Context) RemoteAddressMatchConditionParametersOutput {
	return o
}

// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
func (o RemoteAddressMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RemoteAddressMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RemoteAddressMatchConditionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RemoteAddressMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RemoteAddressMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParametersInvokeResponse struct {
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RemoteAddressMatchConditionParametersInvokeResponseInput is an input type that accepts RemoteAddressMatchConditionParametersInvokeResponseArgs and RemoteAddressMatchConditionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `RemoteAddressMatchConditionParametersInvokeResponseInput` via:
//
//          RemoteAddressMatchConditionParametersInvokeResponseArgs{...}
type RemoteAddressMatchConditionParametersInvokeResponseInput interface {
	pulumi.Input

	ToRemoteAddressMatchConditionParametersInvokeResponseOutput() RemoteAddressMatchConditionParametersInvokeResponseOutput
	ToRemoteAddressMatchConditionParametersInvokeResponseOutputWithContext(context.Context) RemoteAddressMatchConditionParametersInvokeResponseOutput
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParametersInvokeResponseArgs struct {
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RemoteAddressMatchConditionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteAddressMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (i RemoteAddressMatchConditionParametersInvokeResponseArgs) ToRemoteAddressMatchConditionParametersInvokeResponseOutput() RemoteAddressMatchConditionParametersInvokeResponseOutput {
	return i.ToRemoteAddressMatchConditionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i RemoteAddressMatchConditionParametersInvokeResponseArgs) ToRemoteAddressMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) RemoteAddressMatchConditionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteAddressMatchConditionParametersInvokeResponseOutput)
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (RemoteAddressMatchConditionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteAddressMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (o RemoteAddressMatchConditionParametersInvokeResponseOutput) ToRemoteAddressMatchConditionParametersInvokeResponseOutput() RemoteAddressMatchConditionParametersInvokeResponseOutput {
	return o
}

func (o RemoteAddressMatchConditionParametersInvokeResponseOutput) ToRemoteAddressMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) RemoteAddressMatchConditionParametersInvokeResponseOutput {
	return o
}

// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
func (o RemoteAddressMatchConditionParametersInvokeResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersInvokeResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RemoteAddressMatchConditionParametersInvokeResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersInvokeResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RemoteAddressMatchConditionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RemoteAddressMatchConditionParametersInvokeResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersInvokeResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RemoteAddressMatchConditionParametersInvokeResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersInvokeResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParametersResponse struct {
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RemoteAddressMatchConditionParametersResponseInput is an input type that accepts RemoteAddressMatchConditionParametersResponseArgs and RemoteAddressMatchConditionParametersResponseOutput values.
// You can construct a concrete instance of `RemoteAddressMatchConditionParametersResponseInput` via:
//
//          RemoteAddressMatchConditionParametersResponseArgs{...}
type RemoteAddressMatchConditionParametersResponseInput interface {
	pulumi.Input

	ToRemoteAddressMatchConditionParametersResponseOutput() RemoteAddressMatchConditionParametersResponseOutput
	ToRemoteAddressMatchConditionParametersResponseOutputWithContext(context.Context) RemoteAddressMatchConditionParametersResponseOutput
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParametersResponseArgs struct {
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RemoteAddressMatchConditionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteAddressMatchConditionParametersResponse)(nil)).Elem()
}

func (i RemoteAddressMatchConditionParametersResponseArgs) ToRemoteAddressMatchConditionParametersResponseOutput() RemoteAddressMatchConditionParametersResponseOutput {
	return i.ToRemoteAddressMatchConditionParametersResponseOutputWithContext(context.Background())
}

func (i RemoteAddressMatchConditionParametersResponseArgs) ToRemoteAddressMatchConditionParametersResponseOutputWithContext(ctx context.Context) RemoteAddressMatchConditionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteAddressMatchConditionParametersResponseOutput)
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (RemoteAddressMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteAddressMatchConditionParametersResponse)(nil)).Elem()
}

func (o RemoteAddressMatchConditionParametersResponseOutput) ToRemoteAddressMatchConditionParametersResponseOutput() RemoteAddressMatchConditionParametersResponseOutput {
	return o
}

func (o RemoteAddressMatchConditionParametersResponseOutput) ToRemoteAddressMatchConditionParametersResponseOutputWithContext(ctx context.Context) RemoteAddressMatchConditionParametersResponseOutput {
	return o
}

// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
func (o RemoteAddressMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RemoteAddressMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RemoteAddressMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RemoteAddressMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RemoteAddressMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RequestBodyMatchConditionParametersInput is an input type that accepts RequestBodyMatchConditionParametersArgs and RequestBodyMatchConditionParametersOutput values.
// You can construct a concrete instance of `RequestBodyMatchConditionParametersInput` via:
//
//          RequestBodyMatchConditionParametersArgs{...}
type RequestBodyMatchConditionParametersInput interface {
	pulumi.Input

	ToRequestBodyMatchConditionParametersOutput() RequestBodyMatchConditionParametersOutput
	ToRequestBodyMatchConditionParametersOutputWithContext(context.Context) RequestBodyMatchConditionParametersOutput
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RequestBodyMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestBodyMatchConditionParameters)(nil)).Elem()
}

func (i RequestBodyMatchConditionParametersArgs) ToRequestBodyMatchConditionParametersOutput() RequestBodyMatchConditionParametersOutput {
	return i.ToRequestBodyMatchConditionParametersOutputWithContext(context.Background())
}

func (i RequestBodyMatchConditionParametersArgs) ToRequestBodyMatchConditionParametersOutputWithContext(ctx context.Context) RequestBodyMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestBodyMatchConditionParametersOutput)
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (RequestBodyMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestBodyMatchConditionParameters)(nil)).Elem()
}

func (o RequestBodyMatchConditionParametersOutput) ToRequestBodyMatchConditionParametersOutput() RequestBodyMatchConditionParametersOutput {
	return o
}

func (o RequestBodyMatchConditionParametersOutput) ToRequestBodyMatchConditionParametersOutputWithContext(ctx context.Context) RequestBodyMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestBodyMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestBodyMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestBodyMatchConditionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestBodyMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RequestBodyMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParametersInvokeResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RequestBodyMatchConditionParametersInvokeResponseInput is an input type that accepts RequestBodyMatchConditionParametersInvokeResponseArgs and RequestBodyMatchConditionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `RequestBodyMatchConditionParametersInvokeResponseInput` via:
//
//          RequestBodyMatchConditionParametersInvokeResponseArgs{...}
type RequestBodyMatchConditionParametersInvokeResponseInput interface {
	pulumi.Input

	ToRequestBodyMatchConditionParametersInvokeResponseOutput() RequestBodyMatchConditionParametersInvokeResponseOutput
	ToRequestBodyMatchConditionParametersInvokeResponseOutputWithContext(context.Context) RequestBodyMatchConditionParametersInvokeResponseOutput
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParametersInvokeResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RequestBodyMatchConditionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestBodyMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (i RequestBodyMatchConditionParametersInvokeResponseArgs) ToRequestBodyMatchConditionParametersInvokeResponseOutput() RequestBodyMatchConditionParametersInvokeResponseOutput {
	return i.ToRequestBodyMatchConditionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i RequestBodyMatchConditionParametersInvokeResponseArgs) ToRequestBodyMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) RequestBodyMatchConditionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestBodyMatchConditionParametersInvokeResponseOutput)
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (RequestBodyMatchConditionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestBodyMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (o RequestBodyMatchConditionParametersInvokeResponseOutput) ToRequestBodyMatchConditionParametersInvokeResponseOutput() RequestBodyMatchConditionParametersInvokeResponseOutput {
	return o
}

func (o RequestBodyMatchConditionParametersInvokeResponseOutput) ToRequestBodyMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) RequestBodyMatchConditionParametersInvokeResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestBodyMatchConditionParametersInvokeResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersInvokeResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestBodyMatchConditionParametersInvokeResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersInvokeResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestBodyMatchConditionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestBodyMatchConditionParametersInvokeResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersInvokeResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RequestBodyMatchConditionParametersInvokeResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersInvokeResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RequestBodyMatchConditionParametersResponseInput is an input type that accepts RequestBodyMatchConditionParametersResponseArgs and RequestBodyMatchConditionParametersResponseOutput values.
// You can construct a concrete instance of `RequestBodyMatchConditionParametersResponseInput` via:
//
//          RequestBodyMatchConditionParametersResponseArgs{...}
type RequestBodyMatchConditionParametersResponseInput interface {
	pulumi.Input

	ToRequestBodyMatchConditionParametersResponseOutput() RequestBodyMatchConditionParametersResponseOutput
	ToRequestBodyMatchConditionParametersResponseOutputWithContext(context.Context) RequestBodyMatchConditionParametersResponseOutput
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParametersResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RequestBodyMatchConditionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestBodyMatchConditionParametersResponse)(nil)).Elem()
}

func (i RequestBodyMatchConditionParametersResponseArgs) ToRequestBodyMatchConditionParametersResponseOutput() RequestBodyMatchConditionParametersResponseOutput {
	return i.ToRequestBodyMatchConditionParametersResponseOutputWithContext(context.Background())
}

func (i RequestBodyMatchConditionParametersResponseArgs) ToRequestBodyMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestBodyMatchConditionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestBodyMatchConditionParametersResponseOutput)
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (RequestBodyMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestBodyMatchConditionParametersResponse)(nil)).Elem()
}

func (o RequestBodyMatchConditionParametersResponseOutput) ToRequestBodyMatchConditionParametersResponseOutput() RequestBodyMatchConditionParametersResponseOutput {
	return o
}

func (o RequestBodyMatchConditionParametersResponseOutput) ToRequestBodyMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestBodyMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestBodyMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestBodyMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestBodyMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestBodyMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RequestBodyMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Header to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RequestHeaderMatchConditionParametersInput is an input type that accepts RequestHeaderMatchConditionParametersArgs and RequestHeaderMatchConditionParametersOutput values.
// You can construct a concrete instance of `RequestHeaderMatchConditionParametersInput` via:
//
//          RequestHeaderMatchConditionParametersArgs{...}
type RequestHeaderMatchConditionParametersInput interface {
	pulumi.Input

	ToRequestHeaderMatchConditionParametersOutput() RequestHeaderMatchConditionParametersOutput
	ToRequestHeaderMatchConditionParametersOutputWithContext(context.Context) RequestHeaderMatchConditionParametersOutput
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Name of Header to be matched
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RequestHeaderMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestHeaderMatchConditionParameters)(nil)).Elem()
}

func (i RequestHeaderMatchConditionParametersArgs) ToRequestHeaderMatchConditionParametersOutput() RequestHeaderMatchConditionParametersOutput {
	return i.ToRequestHeaderMatchConditionParametersOutputWithContext(context.Background())
}

func (i RequestHeaderMatchConditionParametersArgs) ToRequestHeaderMatchConditionParametersOutputWithContext(ctx context.Context) RequestHeaderMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestHeaderMatchConditionParametersOutput)
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (RequestHeaderMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestHeaderMatchConditionParameters)(nil)).Elem()
}

func (o RequestHeaderMatchConditionParametersOutput) ToRequestHeaderMatchConditionParametersOutput() RequestHeaderMatchConditionParametersOutput {
	return o
}

func (o RequestHeaderMatchConditionParametersOutput) ToRequestHeaderMatchConditionParametersOutputWithContext(ctx context.Context) RequestHeaderMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestHeaderMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestHeaderMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestHeaderMatchConditionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestHeaderMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// Name of Header to be matched
func (o RequestHeaderMatchConditionParametersOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParameters) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o RequestHeaderMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParametersInvokeResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Header to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RequestHeaderMatchConditionParametersInvokeResponseInput is an input type that accepts RequestHeaderMatchConditionParametersInvokeResponseArgs and RequestHeaderMatchConditionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `RequestHeaderMatchConditionParametersInvokeResponseInput` via:
//
//          RequestHeaderMatchConditionParametersInvokeResponseArgs{...}
type RequestHeaderMatchConditionParametersInvokeResponseInput interface {
	pulumi.Input

	ToRequestHeaderMatchConditionParametersInvokeResponseOutput() RequestHeaderMatchConditionParametersInvokeResponseOutput
	ToRequestHeaderMatchConditionParametersInvokeResponseOutputWithContext(context.Context) RequestHeaderMatchConditionParametersInvokeResponseOutput
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParametersInvokeResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Name of Header to be matched
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RequestHeaderMatchConditionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestHeaderMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (i RequestHeaderMatchConditionParametersInvokeResponseArgs) ToRequestHeaderMatchConditionParametersInvokeResponseOutput() RequestHeaderMatchConditionParametersInvokeResponseOutput {
	return i.ToRequestHeaderMatchConditionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i RequestHeaderMatchConditionParametersInvokeResponseArgs) ToRequestHeaderMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) RequestHeaderMatchConditionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestHeaderMatchConditionParametersInvokeResponseOutput)
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (RequestHeaderMatchConditionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestHeaderMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (o RequestHeaderMatchConditionParametersInvokeResponseOutput) ToRequestHeaderMatchConditionParametersInvokeResponseOutput() RequestHeaderMatchConditionParametersInvokeResponseOutput {
	return o
}

func (o RequestHeaderMatchConditionParametersInvokeResponseOutput) ToRequestHeaderMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) RequestHeaderMatchConditionParametersInvokeResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestHeaderMatchConditionParametersInvokeResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersInvokeResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestHeaderMatchConditionParametersInvokeResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersInvokeResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestHeaderMatchConditionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestHeaderMatchConditionParametersInvokeResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersInvokeResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Name of Header to be matched
func (o RequestHeaderMatchConditionParametersInvokeResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersInvokeResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o RequestHeaderMatchConditionParametersInvokeResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersInvokeResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Header to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RequestHeaderMatchConditionParametersResponseInput is an input type that accepts RequestHeaderMatchConditionParametersResponseArgs and RequestHeaderMatchConditionParametersResponseOutput values.
// You can construct a concrete instance of `RequestHeaderMatchConditionParametersResponseInput` via:
//
//          RequestHeaderMatchConditionParametersResponseArgs{...}
type RequestHeaderMatchConditionParametersResponseInput interface {
	pulumi.Input

	ToRequestHeaderMatchConditionParametersResponseOutput() RequestHeaderMatchConditionParametersResponseOutput
	ToRequestHeaderMatchConditionParametersResponseOutputWithContext(context.Context) RequestHeaderMatchConditionParametersResponseOutput
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParametersResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Name of Header to be matched
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RequestHeaderMatchConditionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestHeaderMatchConditionParametersResponse)(nil)).Elem()
}

func (i RequestHeaderMatchConditionParametersResponseArgs) ToRequestHeaderMatchConditionParametersResponseOutput() RequestHeaderMatchConditionParametersResponseOutput {
	return i.ToRequestHeaderMatchConditionParametersResponseOutputWithContext(context.Background())
}

func (i RequestHeaderMatchConditionParametersResponseArgs) ToRequestHeaderMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestHeaderMatchConditionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestHeaderMatchConditionParametersResponseOutput)
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (RequestHeaderMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestHeaderMatchConditionParametersResponse)(nil)).Elem()
}

func (o RequestHeaderMatchConditionParametersResponseOutput) ToRequestHeaderMatchConditionParametersResponseOutput() RequestHeaderMatchConditionParametersResponseOutput {
	return o
}

func (o RequestHeaderMatchConditionParametersResponseOutput) ToRequestHeaderMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestHeaderMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestHeaderMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestHeaderMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestHeaderMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestHeaderMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Name of Header to be matched
func (o RequestHeaderMatchConditionParametersResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o RequestHeaderMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// RequestMethodMatchConditionParametersInput is an input type that accepts RequestMethodMatchConditionParametersArgs and RequestMethodMatchConditionParametersOutput values.
// You can construct a concrete instance of `RequestMethodMatchConditionParametersInput` via:
//
//          RequestMethodMatchConditionParametersArgs{...}
type RequestMethodMatchConditionParametersInput interface {
	pulumi.Input

	ToRequestMethodMatchConditionParametersOutput() RequestMethodMatchConditionParametersOutput
	ToRequestMethodMatchConditionParametersOutputWithContext(context.Context) RequestMethodMatchConditionParametersOutput
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (RequestMethodMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestMethodMatchConditionParameters)(nil)).Elem()
}

func (i RequestMethodMatchConditionParametersArgs) ToRequestMethodMatchConditionParametersOutput() RequestMethodMatchConditionParametersOutput {
	return i.ToRequestMethodMatchConditionParametersOutputWithContext(context.Background())
}

func (i RequestMethodMatchConditionParametersArgs) ToRequestMethodMatchConditionParametersOutputWithContext(ctx context.Context) RequestMethodMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestMethodMatchConditionParametersOutput)
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (RequestMethodMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestMethodMatchConditionParameters)(nil)).Elem()
}

func (o RequestMethodMatchConditionParametersOutput) ToRequestMethodMatchConditionParametersOutput() RequestMethodMatchConditionParametersOutput {
	return o
}

func (o RequestMethodMatchConditionParametersOutput) ToRequestMethodMatchConditionParametersOutputWithContext(ctx context.Context) RequestMethodMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestMethodMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestMethodMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestMethodMatchConditionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestMethodMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParametersInvokeResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// RequestMethodMatchConditionParametersInvokeResponseInput is an input type that accepts RequestMethodMatchConditionParametersInvokeResponseArgs and RequestMethodMatchConditionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `RequestMethodMatchConditionParametersInvokeResponseInput` via:
//
//          RequestMethodMatchConditionParametersInvokeResponseArgs{...}
type RequestMethodMatchConditionParametersInvokeResponseInput interface {
	pulumi.Input

	ToRequestMethodMatchConditionParametersInvokeResponseOutput() RequestMethodMatchConditionParametersInvokeResponseOutput
	ToRequestMethodMatchConditionParametersInvokeResponseOutputWithContext(context.Context) RequestMethodMatchConditionParametersInvokeResponseOutput
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParametersInvokeResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (RequestMethodMatchConditionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestMethodMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (i RequestMethodMatchConditionParametersInvokeResponseArgs) ToRequestMethodMatchConditionParametersInvokeResponseOutput() RequestMethodMatchConditionParametersInvokeResponseOutput {
	return i.ToRequestMethodMatchConditionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i RequestMethodMatchConditionParametersInvokeResponseArgs) ToRequestMethodMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) RequestMethodMatchConditionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestMethodMatchConditionParametersInvokeResponseOutput)
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (RequestMethodMatchConditionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestMethodMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (o RequestMethodMatchConditionParametersInvokeResponseOutput) ToRequestMethodMatchConditionParametersInvokeResponseOutput() RequestMethodMatchConditionParametersInvokeResponseOutput {
	return o
}

func (o RequestMethodMatchConditionParametersInvokeResponseOutput) ToRequestMethodMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) RequestMethodMatchConditionParametersInvokeResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestMethodMatchConditionParametersInvokeResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParametersInvokeResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestMethodMatchConditionParametersInvokeResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParametersInvokeResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestMethodMatchConditionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestMethodMatchConditionParametersInvokeResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParametersInvokeResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// RequestMethodMatchConditionParametersResponseInput is an input type that accepts RequestMethodMatchConditionParametersResponseArgs and RequestMethodMatchConditionParametersResponseOutput values.
// You can construct a concrete instance of `RequestMethodMatchConditionParametersResponseInput` via:
//
//          RequestMethodMatchConditionParametersResponseArgs{...}
type RequestMethodMatchConditionParametersResponseInput interface {
	pulumi.Input

	ToRequestMethodMatchConditionParametersResponseOutput() RequestMethodMatchConditionParametersResponseOutput
	ToRequestMethodMatchConditionParametersResponseOutputWithContext(context.Context) RequestMethodMatchConditionParametersResponseOutput
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParametersResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (RequestMethodMatchConditionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestMethodMatchConditionParametersResponse)(nil)).Elem()
}

func (i RequestMethodMatchConditionParametersResponseArgs) ToRequestMethodMatchConditionParametersResponseOutput() RequestMethodMatchConditionParametersResponseOutput {
	return i.ToRequestMethodMatchConditionParametersResponseOutputWithContext(context.Background())
}

func (i RequestMethodMatchConditionParametersResponseArgs) ToRequestMethodMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestMethodMatchConditionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestMethodMatchConditionParametersResponseOutput)
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (RequestMethodMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestMethodMatchConditionParametersResponse)(nil)).Elem()
}

func (o RequestMethodMatchConditionParametersResponseOutput) ToRequestMethodMatchConditionParametersResponseOutput() RequestMethodMatchConditionParametersResponseOutput {
	return o
}

func (o RequestMethodMatchConditionParametersResponseOutput) ToRequestMethodMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestMethodMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestMethodMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestMethodMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestMethodMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestMethodMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// RequestSchemeMatchConditionParametersInput is an input type that accepts RequestSchemeMatchConditionParametersArgs and RequestSchemeMatchConditionParametersOutput values.
// You can construct a concrete instance of `RequestSchemeMatchConditionParametersInput` via:
//
//          RequestSchemeMatchConditionParametersArgs{...}
type RequestSchemeMatchConditionParametersInput interface {
	pulumi.Input

	ToRequestSchemeMatchConditionParametersOutput() RequestSchemeMatchConditionParametersOutput
	ToRequestSchemeMatchConditionParametersOutputWithContext(context.Context) RequestSchemeMatchConditionParametersOutput
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (RequestSchemeMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestSchemeMatchConditionParameters)(nil)).Elem()
}

func (i RequestSchemeMatchConditionParametersArgs) ToRequestSchemeMatchConditionParametersOutput() RequestSchemeMatchConditionParametersOutput {
	return i.ToRequestSchemeMatchConditionParametersOutputWithContext(context.Background())
}

func (i RequestSchemeMatchConditionParametersArgs) ToRequestSchemeMatchConditionParametersOutputWithContext(ctx context.Context) RequestSchemeMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestSchemeMatchConditionParametersOutput)
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (RequestSchemeMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestSchemeMatchConditionParameters)(nil)).Elem()
}

func (o RequestSchemeMatchConditionParametersOutput) ToRequestSchemeMatchConditionParametersOutput() RequestSchemeMatchConditionParametersOutput {
	return o
}

func (o RequestSchemeMatchConditionParametersOutput) ToRequestSchemeMatchConditionParametersOutputWithContext(ctx context.Context) RequestSchemeMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestSchemeMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestSchemeMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestSchemeMatchConditionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestSchemeMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParametersInvokeResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// RequestSchemeMatchConditionParametersInvokeResponseInput is an input type that accepts RequestSchemeMatchConditionParametersInvokeResponseArgs and RequestSchemeMatchConditionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `RequestSchemeMatchConditionParametersInvokeResponseInput` via:
//
//          RequestSchemeMatchConditionParametersInvokeResponseArgs{...}
type RequestSchemeMatchConditionParametersInvokeResponseInput interface {
	pulumi.Input

	ToRequestSchemeMatchConditionParametersInvokeResponseOutput() RequestSchemeMatchConditionParametersInvokeResponseOutput
	ToRequestSchemeMatchConditionParametersInvokeResponseOutputWithContext(context.Context) RequestSchemeMatchConditionParametersInvokeResponseOutput
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParametersInvokeResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (RequestSchemeMatchConditionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestSchemeMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (i RequestSchemeMatchConditionParametersInvokeResponseArgs) ToRequestSchemeMatchConditionParametersInvokeResponseOutput() RequestSchemeMatchConditionParametersInvokeResponseOutput {
	return i.ToRequestSchemeMatchConditionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i RequestSchemeMatchConditionParametersInvokeResponseArgs) ToRequestSchemeMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) RequestSchemeMatchConditionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestSchemeMatchConditionParametersInvokeResponseOutput)
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (RequestSchemeMatchConditionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestSchemeMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (o RequestSchemeMatchConditionParametersInvokeResponseOutput) ToRequestSchemeMatchConditionParametersInvokeResponseOutput() RequestSchemeMatchConditionParametersInvokeResponseOutput {
	return o
}

func (o RequestSchemeMatchConditionParametersInvokeResponseOutput) ToRequestSchemeMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) RequestSchemeMatchConditionParametersInvokeResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestSchemeMatchConditionParametersInvokeResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParametersInvokeResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestSchemeMatchConditionParametersInvokeResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParametersInvokeResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestSchemeMatchConditionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestSchemeMatchConditionParametersInvokeResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParametersInvokeResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// RequestSchemeMatchConditionParametersResponseInput is an input type that accepts RequestSchemeMatchConditionParametersResponseArgs and RequestSchemeMatchConditionParametersResponseOutput values.
// You can construct a concrete instance of `RequestSchemeMatchConditionParametersResponseInput` via:
//
//          RequestSchemeMatchConditionParametersResponseArgs{...}
type RequestSchemeMatchConditionParametersResponseInput interface {
	pulumi.Input

	ToRequestSchemeMatchConditionParametersResponseOutput() RequestSchemeMatchConditionParametersResponseOutput
	ToRequestSchemeMatchConditionParametersResponseOutputWithContext(context.Context) RequestSchemeMatchConditionParametersResponseOutput
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParametersResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (RequestSchemeMatchConditionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestSchemeMatchConditionParametersResponse)(nil)).Elem()
}

func (i RequestSchemeMatchConditionParametersResponseArgs) ToRequestSchemeMatchConditionParametersResponseOutput() RequestSchemeMatchConditionParametersResponseOutput {
	return i.ToRequestSchemeMatchConditionParametersResponseOutputWithContext(context.Background())
}

func (i RequestSchemeMatchConditionParametersResponseArgs) ToRequestSchemeMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestSchemeMatchConditionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestSchemeMatchConditionParametersResponseOutput)
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (RequestSchemeMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestSchemeMatchConditionParametersResponse)(nil)).Elem()
}

func (o RequestSchemeMatchConditionParametersResponseOutput) ToRequestSchemeMatchConditionParametersResponseOutput() RequestSchemeMatchConditionParametersResponseOutput {
	return o
}

func (o RequestSchemeMatchConditionParametersResponseOutput) ToRequestSchemeMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestSchemeMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestSchemeMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestSchemeMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestSchemeMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestSchemeMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RequestUriMatchConditionParametersInput is an input type that accepts RequestUriMatchConditionParametersArgs and RequestUriMatchConditionParametersOutput values.
// You can construct a concrete instance of `RequestUriMatchConditionParametersInput` via:
//
//          RequestUriMatchConditionParametersArgs{...}
type RequestUriMatchConditionParametersInput interface {
	pulumi.Input

	ToRequestUriMatchConditionParametersOutput() RequestUriMatchConditionParametersOutput
	ToRequestUriMatchConditionParametersOutputWithContext(context.Context) RequestUriMatchConditionParametersOutput
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RequestUriMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestUriMatchConditionParameters)(nil)).Elem()
}

func (i RequestUriMatchConditionParametersArgs) ToRequestUriMatchConditionParametersOutput() RequestUriMatchConditionParametersOutput {
	return i.ToRequestUriMatchConditionParametersOutputWithContext(context.Background())
}

func (i RequestUriMatchConditionParametersArgs) ToRequestUriMatchConditionParametersOutputWithContext(ctx context.Context) RequestUriMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestUriMatchConditionParametersOutput)
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (RequestUriMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestUriMatchConditionParameters)(nil)).Elem()
}

func (o RequestUriMatchConditionParametersOutput) ToRequestUriMatchConditionParametersOutput() RequestUriMatchConditionParametersOutput {
	return o
}

func (o RequestUriMatchConditionParametersOutput) ToRequestUriMatchConditionParametersOutputWithContext(ctx context.Context) RequestUriMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestUriMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestUriMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestUriMatchConditionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestUriMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RequestUriMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParametersInvokeResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RequestUriMatchConditionParametersInvokeResponseInput is an input type that accepts RequestUriMatchConditionParametersInvokeResponseArgs and RequestUriMatchConditionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `RequestUriMatchConditionParametersInvokeResponseInput` via:
//
//          RequestUriMatchConditionParametersInvokeResponseArgs{...}
type RequestUriMatchConditionParametersInvokeResponseInput interface {
	pulumi.Input

	ToRequestUriMatchConditionParametersInvokeResponseOutput() RequestUriMatchConditionParametersInvokeResponseOutput
	ToRequestUriMatchConditionParametersInvokeResponseOutputWithContext(context.Context) RequestUriMatchConditionParametersInvokeResponseOutput
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParametersInvokeResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RequestUriMatchConditionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestUriMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (i RequestUriMatchConditionParametersInvokeResponseArgs) ToRequestUriMatchConditionParametersInvokeResponseOutput() RequestUriMatchConditionParametersInvokeResponseOutput {
	return i.ToRequestUriMatchConditionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i RequestUriMatchConditionParametersInvokeResponseArgs) ToRequestUriMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) RequestUriMatchConditionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestUriMatchConditionParametersInvokeResponseOutput)
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (RequestUriMatchConditionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestUriMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (o RequestUriMatchConditionParametersInvokeResponseOutput) ToRequestUriMatchConditionParametersInvokeResponseOutput() RequestUriMatchConditionParametersInvokeResponseOutput {
	return o
}

func (o RequestUriMatchConditionParametersInvokeResponseOutput) ToRequestUriMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) RequestUriMatchConditionParametersInvokeResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestUriMatchConditionParametersInvokeResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersInvokeResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestUriMatchConditionParametersInvokeResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersInvokeResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestUriMatchConditionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestUriMatchConditionParametersInvokeResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersInvokeResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RequestUriMatchConditionParametersInvokeResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersInvokeResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RequestUriMatchConditionParametersResponseInput is an input type that accepts RequestUriMatchConditionParametersResponseArgs and RequestUriMatchConditionParametersResponseOutput values.
// You can construct a concrete instance of `RequestUriMatchConditionParametersResponseInput` via:
//
//          RequestUriMatchConditionParametersResponseArgs{...}
type RequestUriMatchConditionParametersResponseInput interface {
	pulumi.Input

	ToRequestUriMatchConditionParametersResponseOutput() RequestUriMatchConditionParametersResponseOutput
	ToRequestUriMatchConditionParametersResponseOutputWithContext(context.Context) RequestUriMatchConditionParametersResponseOutput
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParametersResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RequestUriMatchConditionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestUriMatchConditionParametersResponse)(nil)).Elem()
}

func (i RequestUriMatchConditionParametersResponseArgs) ToRequestUriMatchConditionParametersResponseOutput() RequestUriMatchConditionParametersResponseOutput {
	return i.ToRequestUriMatchConditionParametersResponseOutputWithContext(context.Background())
}

func (i RequestUriMatchConditionParametersResponseArgs) ToRequestUriMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestUriMatchConditionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestUriMatchConditionParametersResponseOutput)
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (RequestUriMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestUriMatchConditionParametersResponse)(nil)).Elem()
}

func (o RequestUriMatchConditionParametersResponseOutput) ToRequestUriMatchConditionParametersResponseOutput() RequestUriMatchConditionParametersResponseOutput {
	return o
}

func (o RequestUriMatchConditionParametersResponseOutput) ToRequestUriMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestUriMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestUriMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestUriMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestUriMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestUriMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RequestUriMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Reference to another resource.
type ResourceReference struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// ResourceReferenceInput is an input type that accepts ResourceReferenceArgs and ResourceReferenceOutput values.
// You can construct a concrete instance of `ResourceReferenceInput` via:
//
//          ResourceReferenceArgs{...}
type ResourceReferenceInput interface {
	pulumi.Input

	ToResourceReferenceOutput() ResourceReferenceOutput
	ToResourceReferenceOutputWithContext(context.Context) ResourceReferenceOutput
}

// Reference to another resource.
type ResourceReferenceArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ResourceReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReference)(nil)).Elem()
}

func (i ResourceReferenceArgs) ToResourceReferenceOutput() ResourceReferenceOutput {
	return i.ToResourceReferenceOutputWithContext(context.Background())
}

func (i ResourceReferenceArgs) ToResourceReferenceOutputWithContext(ctx context.Context) ResourceReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceOutput)
}

func (i ResourceReferenceArgs) ToResourceReferencePtrOutput() ResourceReferencePtrOutput {
	return i.ToResourceReferencePtrOutputWithContext(context.Background())
}

func (i ResourceReferenceArgs) ToResourceReferencePtrOutputWithContext(ctx context.Context) ResourceReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceOutput).ToResourceReferencePtrOutputWithContext(ctx)
}

// ResourceReferencePtrInput is an input type that accepts ResourceReferenceArgs, ResourceReferencePtr and ResourceReferencePtrOutput values.
// You can construct a concrete instance of `ResourceReferencePtrInput` via:
//
//          ResourceReferenceArgs{...}
//
//  or:
//
//          nil
type ResourceReferencePtrInput interface {
	pulumi.Input

	ToResourceReferencePtrOutput() ResourceReferencePtrOutput
	ToResourceReferencePtrOutputWithContext(context.Context) ResourceReferencePtrOutput
}

type resourceReferencePtrType ResourceReferenceArgs

func ResourceReferencePtr(v *ResourceReferenceArgs) ResourceReferencePtrInput {
	return (*resourceReferencePtrType)(v)
}

func (*resourceReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceReference)(nil)).Elem()
}

func (i *resourceReferencePtrType) ToResourceReferencePtrOutput() ResourceReferencePtrOutput {
	return i.ToResourceReferencePtrOutputWithContext(context.Background())
}

func (i *resourceReferencePtrType) ToResourceReferencePtrOutputWithContext(ctx context.Context) ResourceReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferencePtrOutput)
}

// ResourceReferenceArrayInput is an input type that accepts ResourceReferenceArray and ResourceReferenceArrayOutput values.
// You can construct a concrete instance of `ResourceReferenceArrayInput` via:
//
//          ResourceReferenceArray{ ResourceReferenceArgs{...} }
type ResourceReferenceArrayInput interface {
	pulumi.Input

	ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput
	ToResourceReferenceArrayOutputWithContext(context.Context) ResourceReferenceArrayOutput
}

type ResourceReferenceArray []ResourceReferenceInput

func (ResourceReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReference)(nil)).Elem()
}

func (i ResourceReferenceArray) ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput {
	return i.ToResourceReferenceArrayOutputWithContext(context.Background())
}

func (i ResourceReferenceArray) ToResourceReferenceArrayOutputWithContext(ctx context.Context) ResourceReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceArrayOutput)
}

// Reference to another resource.
type ResourceReferenceOutput struct{ *pulumi.OutputState }

func (ResourceReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReference)(nil)).Elem()
}

func (o ResourceReferenceOutput) ToResourceReferenceOutput() ResourceReferenceOutput {
	return o
}

func (o ResourceReferenceOutput) ToResourceReferenceOutputWithContext(ctx context.Context) ResourceReferenceOutput {
	return o
}

func (o ResourceReferenceOutput) ToResourceReferencePtrOutput() ResourceReferencePtrOutput {
	return o.ToResourceReferencePtrOutputWithContext(context.Background())
}

func (o ResourceReferenceOutput) ToResourceReferencePtrOutputWithContext(ctx context.Context) ResourceReferencePtrOutput {
	return o.ApplyT(func(v ResourceReference) *ResourceReference {
		return &v
	}).(ResourceReferencePtrOutput)
}

// Resource ID.
func (o ResourceReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceReferencePtrOutput struct{ *pulumi.OutputState }

func (ResourceReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceReference)(nil)).Elem()
}

func (o ResourceReferencePtrOutput) ToResourceReferencePtrOutput() ResourceReferencePtrOutput {
	return o
}

func (o ResourceReferencePtrOutput) ToResourceReferencePtrOutputWithContext(ctx context.Context) ResourceReferencePtrOutput {
	return o
}

func (o ResourceReferencePtrOutput) Elem() ResourceReferenceOutput {
	return o.ApplyT(func(v *ResourceReference) ResourceReference { return *v }).(ResourceReferenceOutput)
}

// Resource ID.
func (o ResourceReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceReference) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type ResourceReferenceArrayOutput struct{ *pulumi.OutputState }

func (ResourceReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReference)(nil)).Elem()
}

func (o ResourceReferenceArrayOutput) ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput {
	return o
}

func (o ResourceReferenceArrayOutput) ToResourceReferenceArrayOutputWithContext(ctx context.Context) ResourceReferenceArrayOutput {
	return o
}

func (o ResourceReferenceArrayOutput) Index(i pulumi.IntInput) ResourceReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceReference {
		return vs[0].([]ResourceReference)[vs[1].(int)]
	}).(ResourceReferenceOutput)
}

// Reference to another resource.
type ResourceReferenceInvokeResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// ResourceReferenceInvokeResponseInput is an input type that accepts ResourceReferenceInvokeResponseArgs and ResourceReferenceInvokeResponseOutput values.
// You can construct a concrete instance of `ResourceReferenceInvokeResponseInput` via:
//
//          ResourceReferenceInvokeResponseArgs{...}
type ResourceReferenceInvokeResponseInput interface {
	pulumi.Input

	ToResourceReferenceInvokeResponseOutput() ResourceReferenceInvokeResponseOutput
	ToResourceReferenceInvokeResponseOutputWithContext(context.Context) ResourceReferenceInvokeResponseOutput
}

// Reference to another resource.
type ResourceReferenceInvokeResponseArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ResourceReferenceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReferenceInvokeResponse)(nil)).Elem()
}

func (i ResourceReferenceInvokeResponseArgs) ToResourceReferenceInvokeResponseOutput() ResourceReferenceInvokeResponseOutput {
	return i.ToResourceReferenceInvokeResponseOutputWithContext(context.Background())
}

func (i ResourceReferenceInvokeResponseArgs) ToResourceReferenceInvokeResponseOutputWithContext(ctx context.Context) ResourceReferenceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceInvokeResponseOutput)
}

// ResourceReferenceInvokeResponseArrayInput is an input type that accepts ResourceReferenceInvokeResponseArray and ResourceReferenceInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ResourceReferenceInvokeResponseArrayInput` via:
//
//          ResourceReferenceInvokeResponseArray{ ResourceReferenceInvokeResponseArgs{...} }
type ResourceReferenceInvokeResponseArrayInput interface {
	pulumi.Input

	ToResourceReferenceInvokeResponseArrayOutput() ResourceReferenceInvokeResponseArrayOutput
	ToResourceReferenceInvokeResponseArrayOutputWithContext(context.Context) ResourceReferenceInvokeResponseArrayOutput
}

type ResourceReferenceInvokeResponseArray []ResourceReferenceInvokeResponseInput

func (ResourceReferenceInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReferenceInvokeResponse)(nil)).Elem()
}

func (i ResourceReferenceInvokeResponseArray) ToResourceReferenceInvokeResponseArrayOutput() ResourceReferenceInvokeResponseArrayOutput {
	return i.ToResourceReferenceInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ResourceReferenceInvokeResponseArray) ToResourceReferenceInvokeResponseArrayOutputWithContext(ctx context.Context) ResourceReferenceInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceInvokeResponseArrayOutput)
}

// Reference to another resource.
type ResourceReferenceInvokeResponseOutput struct{ *pulumi.OutputState }

func (ResourceReferenceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReferenceInvokeResponse)(nil)).Elem()
}

func (o ResourceReferenceInvokeResponseOutput) ToResourceReferenceInvokeResponseOutput() ResourceReferenceInvokeResponseOutput {
	return o
}

func (o ResourceReferenceInvokeResponseOutput) ToResourceReferenceInvokeResponseOutputWithContext(ctx context.Context) ResourceReferenceInvokeResponseOutput {
	return o
}

// Resource ID.
func (o ResourceReferenceInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceReferenceInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceReferenceInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceReferenceInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReferenceInvokeResponse)(nil)).Elem()
}

func (o ResourceReferenceInvokeResponseArrayOutput) ToResourceReferenceInvokeResponseArrayOutput() ResourceReferenceInvokeResponseArrayOutput {
	return o
}

func (o ResourceReferenceInvokeResponseArrayOutput) ToResourceReferenceInvokeResponseArrayOutputWithContext(ctx context.Context) ResourceReferenceInvokeResponseArrayOutput {
	return o
}

func (o ResourceReferenceInvokeResponseArrayOutput) Index(i pulumi.IntInput) ResourceReferenceInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceReferenceInvokeResponse {
		return vs[0].([]ResourceReferenceInvokeResponse)[vs[1].(int)]
	}).(ResourceReferenceInvokeResponseOutput)
}

// Reference to another resource.
type ResourceReferenceResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// ResourceReferenceResponseInput is an input type that accepts ResourceReferenceResponseArgs and ResourceReferenceResponseOutput values.
// You can construct a concrete instance of `ResourceReferenceResponseInput` via:
//
//          ResourceReferenceResponseArgs{...}
type ResourceReferenceResponseInput interface {
	pulumi.Input

	ToResourceReferenceResponseOutput() ResourceReferenceResponseOutput
	ToResourceReferenceResponseOutputWithContext(context.Context) ResourceReferenceResponseOutput
}

// Reference to another resource.
type ResourceReferenceResponseArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ResourceReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReferenceResponse)(nil)).Elem()
}

func (i ResourceReferenceResponseArgs) ToResourceReferenceResponseOutput() ResourceReferenceResponseOutput {
	return i.ToResourceReferenceResponseOutputWithContext(context.Background())
}

func (i ResourceReferenceResponseArgs) ToResourceReferenceResponseOutputWithContext(ctx context.Context) ResourceReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceResponseOutput)
}

func (i ResourceReferenceResponseArgs) ToResourceReferenceResponsePtrOutput() ResourceReferenceResponsePtrOutput {
	return i.ToResourceReferenceResponsePtrOutputWithContext(context.Background())
}

func (i ResourceReferenceResponseArgs) ToResourceReferenceResponsePtrOutputWithContext(ctx context.Context) ResourceReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceResponseOutput).ToResourceReferenceResponsePtrOutputWithContext(ctx)
}

// ResourceReferenceResponsePtrInput is an input type that accepts ResourceReferenceResponseArgs, ResourceReferenceResponsePtr and ResourceReferenceResponsePtrOutput values.
// You can construct a concrete instance of `ResourceReferenceResponsePtrInput` via:
//
//          ResourceReferenceResponseArgs{...}
//
//  or:
//
//          nil
type ResourceReferenceResponsePtrInput interface {
	pulumi.Input

	ToResourceReferenceResponsePtrOutput() ResourceReferenceResponsePtrOutput
	ToResourceReferenceResponsePtrOutputWithContext(context.Context) ResourceReferenceResponsePtrOutput
}

type resourceReferenceResponsePtrType ResourceReferenceResponseArgs

func ResourceReferenceResponsePtr(v *ResourceReferenceResponseArgs) ResourceReferenceResponsePtrInput {
	return (*resourceReferenceResponsePtrType)(v)
}

func (*resourceReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceReferenceResponse)(nil)).Elem()
}

func (i *resourceReferenceResponsePtrType) ToResourceReferenceResponsePtrOutput() ResourceReferenceResponsePtrOutput {
	return i.ToResourceReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *resourceReferenceResponsePtrType) ToResourceReferenceResponsePtrOutputWithContext(ctx context.Context) ResourceReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceResponsePtrOutput)
}

// ResourceReferenceResponseArrayInput is an input type that accepts ResourceReferenceResponseArray and ResourceReferenceResponseArrayOutput values.
// You can construct a concrete instance of `ResourceReferenceResponseArrayInput` via:
//
//          ResourceReferenceResponseArray{ ResourceReferenceResponseArgs{...} }
type ResourceReferenceResponseArrayInput interface {
	pulumi.Input

	ToResourceReferenceResponseArrayOutput() ResourceReferenceResponseArrayOutput
	ToResourceReferenceResponseArrayOutputWithContext(context.Context) ResourceReferenceResponseArrayOutput
}

type ResourceReferenceResponseArray []ResourceReferenceResponseInput

func (ResourceReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReferenceResponse)(nil)).Elem()
}

func (i ResourceReferenceResponseArray) ToResourceReferenceResponseArrayOutput() ResourceReferenceResponseArrayOutput {
	return i.ToResourceReferenceResponseArrayOutputWithContext(context.Background())
}

func (i ResourceReferenceResponseArray) ToResourceReferenceResponseArrayOutputWithContext(ctx context.Context) ResourceReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceResponseArrayOutput)
}

// Reference to another resource.
type ResourceReferenceResponseOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutput() ResourceReferenceResponseOutput {
	return o
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutputWithContext(ctx context.Context) ResourceReferenceResponseOutput {
	return o
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponsePtrOutput() ResourceReferenceResponsePtrOutput {
	return o.ToResourceReferenceResponsePtrOutputWithContext(context.Background())
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponsePtrOutputWithContext(ctx context.Context) ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v ResourceReferenceResponse) *ResourceReferenceResponse {
		return &v
	}).(ResourceReferenceResponsePtrOutput)
}

// Resource ID.
func (o ResourceReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponsePtrOutput) ToResourceReferenceResponsePtrOutput() ResourceReferenceResponsePtrOutput {
	return o
}

func (o ResourceReferenceResponsePtrOutput) ToResourceReferenceResponsePtrOutputWithContext(ctx context.Context) ResourceReferenceResponsePtrOutput {
	return o
}

func (o ResourceReferenceResponsePtrOutput) Elem() ResourceReferenceResponseOutput {
	return o.ApplyT(func(v *ResourceReferenceResponse) ResourceReferenceResponse { return *v }).(ResourceReferenceResponseOutput)
}

// Resource ID.
func (o ResourceReferenceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type ResourceReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutput() ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutputWithContext(ctx context.Context) ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) Index(i pulumi.IntInput) ResourceReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceReferenceResponse {
		return vs[0].([]ResourceReferenceResponse)[vs[1].(int)]
	}).(ResourceReferenceResponseOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParameters struct {
	// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
	HttpErrorRanges []HttpErrorRangeParameters `pulumi:"httpErrorRanges"`
	// Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes *string `pulumi:"responseBasedDetectedErrorTypes"`
	// The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage *int `pulumi:"responseBasedFailoverThresholdPercentage"`
}

// ResponseBasedOriginErrorDetectionParametersInput is an input type that accepts ResponseBasedOriginErrorDetectionParametersArgs and ResponseBasedOriginErrorDetectionParametersOutput values.
// You can construct a concrete instance of `ResponseBasedOriginErrorDetectionParametersInput` via:
//
//          ResponseBasedOriginErrorDetectionParametersArgs{...}
type ResponseBasedOriginErrorDetectionParametersInput interface {
	pulumi.Input

	ToResponseBasedOriginErrorDetectionParametersOutput() ResponseBasedOriginErrorDetectionParametersOutput
	ToResponseBasedOriginErrorDetectionParametersOutputWithContext(context.Context) ResponseBasedOriginErrorDetectionParametersOutput
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersArgs struct {
	// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
	HttpErrorRanges HttpErrorRangeParametersArrayInput `pulumi:"httpErrorRanges"`
	// Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes ResponseBasedDetectedErrorTypes `pulumi:"responseBasedDetectedErrorTypes"`
	// The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage pulumi.IntPtrInput `pulumi:"responseBasedFailoverThresholdPercentage"`
}

func (ResponseBasedOriginErrorDetectionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseBasedOriginErrorDetectionParameters)(nil)).Elem()
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersOutput() ResponseBasedOriginErrorDetectionParametersOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersOutputWithContext(context.Background())
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersOutput)
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Background())
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersOutput).ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx)
}

// ResponseBasedOriginErrorDetectionParametersPtrInput is an input type that accepts ResponseBasedOriginErrorDetectionParametersArgs, ResponseBasedOriginErrorDetectionParametersPtr and ResponseBasedOriginErrorDetectionParametersPtrOutput values.
// You can construct a concrete instance of `ResponseBasedOriginErrorDetectionParametersPtrInput` via:
//
//          ResponseBasedOriginErrorDetectionParametersArgs{...}
//
//  or:
//
//          nil
type ResponseBasedOriginErrorDetectionParametersPtrInput interface {
	pulumi.Input

	ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput
	ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput
}

type responseBasedOriginErrorDetectionParametersPtrType ResponseBasedOriginErrorDetectionParametersArgs

func ResponseBasedOriginErrorDetectionParametersPtr(v *ResponseBasedOriginErrorDetectionParametersArgs) ResponseBasedOriginErrorDetectionParametersPtrInput {
	return (*responseBasedOriginErrorDetectionParametersPtrType)(v)
}

func (*responseBasedOriginErrorDetectionParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseBasedOriginErrorDetectionParameters)(nil)).Elem()
}

func (i *responseBasedOriginErrorDetectionParametersPtrType) ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Background())
}

func (i *responseBasedOriginErrorDetectionParametersPtrType) ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersPtrOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseBasedOriginErrorDetectionParameters)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersOutput) ToResponseBasedOriginErrorDetectionParametersOutput() ResponseBasedOriginErrorDetectionParametersOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersOutput) ToResponseBasedOriginErrorDetectionParametersOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersOutput) ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o.ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Background())
}

func (o ResponseBasedOriginErrorDetectionParametersOutput) ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParameters) *ResponseBasedOriginErrorDetectionParameters {
		return &v
	}).(ResponseBasedOriginErrorDetectionParametersPtrOutput)
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersOutput) HttpErrorRanges() HttpErrorRangeParametersArrayOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParameters) []HttpErrorRangeParameters {
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersOutput) ResponseBasedDetectedErrorTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParameters) *string { return v.ResponseBasedDetectedErrorTypes }).(pulumi.StringPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParameters) *int {
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

type ResponseBasedOriginErrorDetectionParametersPtrOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseBasedOriginErrorDetectionParameters)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) Elem() ResponseBasedOriginErrorDetectionParametersOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParameters) ResponseBasedOriginErrorDetectionParameters {
		return *v
	}).(ResponseBasedOriginErrorDetectionParametersOutput)
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) HttpErrorRanges() HttpErrorRangeParametersArrayOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParameters) []HttpErrorRangeParameters {
		if v == nil {
			return nil
		}
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) ResponseBasedDetectedErrorTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParameters) *string {
		if v == nil {
			return nil
		}
		return v.ResponseBasedDetectedErrorTypes
	}).(pulumi.StringPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParameters) *int {
		if v == nil {
			return nil
		}
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersInvokeResponse struct {
	// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
	HttpErrorRanges []HttpErrorRangeParametersInvokeResponse `pulumi:"httpErrorRanges"`
	// Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes *string `pulumi:"responseBasedDetectedErrorTypes"`
	// The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage *int `pulumi:"responseBasedFailoverThresholdPercentage"`
}

// ResponseBasedOriginErrorDetectionParametersInvokeResponseInput is an input type that accepts ResponseBasedOriginErrorDetectionParametersInvokeResponseArgs and ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `ResponseBasedOriginErrorDetectionParametersInvokeResponseInput` via:
//
//          ResponseBasedOriginErrorDetectionParametersInvokeResponseArgs{...}
type ResponseBasedOriginErrorDetectionParametersInvokeResponseInput interface {
	pulumi.Input

	ToResponseBasedOriginErrorDetectionParametersInvokeResponseOutput() ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput
	ToResponseBasedOriginErrorDetectionParametersInvokeResponseOutputWithContext(context.Context) ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersInvokeResponseArgs struct {
	// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
	HttpErrorRanges HttpErrorRangeParametersInvokeResponseArrayInput `pulumi:"httpErrorRanges"`
	// Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes pulumi.StringPtrInput `pulumi:"responseBasedDetectedErrorTypes"`
	// The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage pulumi.IntPtrInput `pulumi:"responseBasedFailoverThresholdPercentage"`
}

func (ResponseBasedOriginErrorDetectionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseBasedOriginErrorDetectionParametersInvokeResponse)(nil)).Elem()
}

func (i ResponseBasedOriginErrorDetectionParametersInvokeResponseArgs) ToResponseBasedOriginErrorDetectionParametersInvokeResponseOutput() ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i ResponseBasedOriginErrorDetectionParametersInvokeResponseArgs) ToResponseBasedOriginErrorDetectionParametersInvokeResponseOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput)
}

func (i ResponseBasedOriginErrorDetectionParametersInvokeResponseArgs) ToResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput() ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ResponseBasedOriginErrorDetectionParametersInvokeResponseArgs) ToResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput).ToResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutputWithContext(ctx)
}

// ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrInput is an input type that accepts ResponseBasedOriginErrorDetectionParametersInvokeResponseArgs, ResponseBasedOriginErrorDetectionParametersInvokeResponsePtr and ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrInput` via:
//
//          ResponseBasedOriginErrorDetectionParametersInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrInput interface {
	pulumi.Input

	ToResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput() ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput
	ToResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutputWithContext(context.Context) ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput
}

type responseBasedOriginErrorDetectionParametersInvokeResponsePtrType ResponseBasedOriginErrorDetectionParametersInvokeResponseArgs

func ResponseBasedOriginErrorDetectionParametersInvokeResponsePtr(v *ResponseBasedOriginErrorDetectionParametersInvokeResponseArgs) ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrInput {
	return (*responseBasedOriginErrorDetectionParametersInvokeResponsePtrType)(v)
}

func (*responseBasedOriginErrorDetectionParametersInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseBasedOriginErrorDetectionParametersInvokeResponse)(nil)).Elem()
}

func (i *responseBasedOriginErrorDetectionParametersInvokeResponsePtrType) ToResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput() ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *responseBasedOriginErrorDetectionParametersInvokeResponsePtrType) ToResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseBasedOriginErrorDetectionParametersInvokeResponse)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput) ToResponseBasedOriginErrorDetectionParametersInvokeResponseOutput() ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput) ToResponseBasedOriginErrorDetectionParametersInvokeResponseOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput) ToResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput() ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput {
	return o.ToResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput) ToResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersInvokeResponse) *ResponseBasedOriginErrorDetectionParametersInvokeResponse {
		return &v
	}).(ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput)
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput) HttpErrorRanges() HttpErrorRangeParametersInvokeResponseArrayOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersInvokeResponse) []HttpErrorRangeParametersInvokeResponse {
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersInvokeResponseArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput) ResponseBasedDetectedErrorTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersInvokeResponse) *string {
		return v.ResponseBasedDetectedErrorTypes
	}).(pulumi.StringPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersInvokeResponse) *int {
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

type ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseBasedOriginErrorDetectionParametersInvokeResponse)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput) ToResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput() ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput) ToResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput) Elem() ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersInvokeResponse) ResponseBasedOriginErrorDetectionParametersInvokeResponse {
		return *v
	}).(ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput)
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput) HttpErrorRanges() HttpErrorRangeParametersInvokeResponseArrayOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersInvokeResponse) []HttpErrorRangeParametersInvokeResponse {
		if v == nil {
			return nil
		}
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersInvokeResponseArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput) ResponseBasedDetectedErrorTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResponseBasedDetectedErrorTypes
	}).(pulumi.StringPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersResponse struct {
	// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
	HttpErrorRanges []HttpErrorRangeParametersResponse `pulumi:"httpErrorRanges"`
	// Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes *string `pulumi:"responseBasedDetectedErrorTypes"`
	// The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage *int `pulumi:"responseBasedFailoverThresholdPercentage"`
}

// ResponseBasedOriginErrorDetectionParametersResponseInput is an input type that accepts ResponseBasedOriginErrorDetectionParametersResponseArgs and ResponseBasedOriginErrorDetectionParametersResponseOutput values.
// You can construct a concrete instance of `ResponseBasedOriginErrorDetectionParametersResponseInput` via:
//
//          ResponseBasedOriginErrorDetectionParametersResponseArgs{...}
type ResponseBasedOriginErrorDetectionParametersResponseInput interface {
	pulumi.Input

	ToResponseBasedOriginErrorDetectionParametersResponseOutput() ResponseBasedOriginErrorDetectionParametersResponseOutput
	ToResponseBasedOriginErrorDetectionParametersResponseOutputWithContext(context.Context) ResponseBasedOriginErrorDetectionParametersResponseOutput
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersResponseArgs struct {
	// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
	HttpErrorRanges HttpErrorRangeParametersResponseArrayInput `pulumi:"httpErrorRanges"`
	// Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes pulumi.StringPtrInput `pulumi:"responseBasedDetectedErrorTypes"`
	// The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage pulumi.IntPtrInput `pulumi:"responseBasedFailoverThresholdPercentage"`
}

func (ResponseBasedOriginErrorDetectionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseBasedOriginErrorDetectionParametersResponse)(nil)).Elem()
}

func (i ResponseBasedOriginErrorDetectionParametersResponseArgs) ToResponseBasedOriginErrorDetectionParametersResponseOutput() ResponseBasedOriginErrorDetectionParametersResponseOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersResponseOutputWithContext(context.Background())
}

func (i ResponseBasedOriginErrorDetectionParametersResponseArgs) ToResponseBasedOriginErrorDetectionParametersResponseOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersResponseOutput)
}

func (i ResponseBasedOriginErrorDetectionParametersResponseArgs) ToResponseBasedOriginErrorDetectionParametersResponsePtrOutput() ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersResponsePtrOutputWithContext(context.Background())
}

func (i ResponseBasedOriginErrorDetectionParametersResponseArgs) ToResponseBasedOriginErrorDetectionParametersResponsePtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersResponseOutput).ToResponseBasedOriginErrorDetectionParametersResponsePtrOutputWithContext(ctx)
}

// ResponseBasedOriginErrorDetectionParametersResponsePtrInput is an input type that accepts ResponseBasedOriginErrorDetectionParametersResponseArgs, ResponseBasedOriginErrorDetectionParametersResponsePtr and ResponseBasedOriginErrorDetectionParametersResponsePtrOutput values.
// You can construct a concrete instance of `ResponseBasedOriginErrorDetectionParametersResponsePtrInput` via:
//
//          ResponseBasedOriginErrorDetectionParametersResponseArgs{...}
//
//  or:
//
//          nil
type ResponseBasedOriginErrorDetectionParametersResponsePtrInput interface {
	pulumi.Input

	ToResponseBasedOriginErrorDetectionParametersResponsePtrOutput() ResponseBasedOriginErrorDetectionParametersResponsePtrOutput
	ToResponseBasedOriginErrorDetectionParametersResponsePtrOutputWithContext(context.Context) ResponseBasedOriginErrorDetectionParametersResponsePtrOutput
}

type responseBasedOriginErrorDetectionParametersResponsePtrType ResponseBasedOriginErrorDetectionParametersResponseArgs

func ResponseBasedOriginErrorDetectionParametersResponsePtr(v *ResponseBasedOriginErrorDetectionParametersResponseArgs) ResponseBasedOriginErrorDetectionParametersResponsePtrInput {
	return (*responseBasedOriginErrorDetectionParametersResponsePtrType)(v)
}

func (*responseBasedOriginErrorDetectionParametersResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseBasedOriginErrorDetectionParametersResponse)(nil)).Elem()
}

func (i *responseBasedOriginErrorDetectionParametersResponsePtrType) ToResponseBasedOriginErrorDetectionParametersResponsePtrOutput() ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersResponsePtrOutputWithContext(context.Background())
}

func (i *responseBasedOriginErrorDetectionParametersResponsePtrType) ToResponseBasedOriginErrorDetectionParametersResponsePtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersResponsePtrOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersResponseOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseBasedOriginErrorDetectionParametersResponse)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ToResponseBasedOriginErrorDetectionParametersResponseOutput() ResponseBasedOriginErrorDetectionParametersResponseOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ToResponseBasedOriginErrorDetectionParametersResponseOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersResponseOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ToResponseBasedOriginErrorDetectionParametersResponsePtrOutput() ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return o.ToResponseBasedOriginErrorDetectionParametersResponsePtrOutputWithContext(context.Background())
}

func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ToResponseBasedOriginErrorDetectionParametersResponsePtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersResponse) *ResponseBasedOriginErrorDetectionParametersResponse {
		return &v
	}).(ResponseBasedOriginErrorDetectionParametersResponsePtrOutput)
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) HttpErrorRanges() HttpErrorRangeParametersResponseArrayOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersResponse) []HttpErrorRangeParametersResponse {
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersResponseArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ResponseBasedDetectedErrorTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersResponse) *string {
		return v.ResponseBasedDetectedErrorTypes
	}).(pulumi.StringPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersResponse) *int {
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

type ResponseBasedOriginErrorDetectionParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseBasedOriginErrorDetectionParametersResponse)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ToResponseBasedOriginErrorDetectionParametersResponsePtrOutput() ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ToResponseBasedOriginErrorDetectionParametersResponsePtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) Elem() ResponseBasedOriginErrorDetectionParametersResponseOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) ResponseBasedOriginErrorDetectionParametersResponse {
		return *v
	}).(ResponseBasedOriginErrorDetectionParametersResponseOutput)
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) HttpErrorRanges() HttpErrorRangeParametersResponseArrayOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) []HttpErrorRangeParametersResponse {
		if v == nil {
			return nil
		}
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersResponseArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ResponseBasedDetectedErrorTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResponseBasedDetectedErrorTypes
	}).(pulumi.StringPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type Sku struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuArgs struct {
	// Name of the pricing tier.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// Name of the pricing tier.
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// Name of the pricing tier.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuInvokeResponse struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// SkuInvokeResponseInput is an input type that accepts SkuInvokeResponseArgs and SkuInvokeResponseOutput values.
// You can construct a concrete instance of `SkuInvokeResponseInput` via:
//
//          SkuInvokeResponseArgs{...}
type SkuInvokeResponseInput interface {
	pulumi.Input

	ToSkuInvokeResponseOutput() SkuInvokeResponseOutput
	ToSkuInvokeResponseOutputWithContext(context.Context) SkuInvokeResponseOutput
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuInvokeResponseArgs struct {
	// Name of the pricing tier.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SkuInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuInvokeResponse)(nil)).Elem()
}

func (i SkuInvokeResponseArgs) ToSkuInvokeResponseOutput() SkuInvokeResponseOutput {
	return i.ToSkuInvokeResponseOutputWithContext(context.Background())
}

func (i SkuInvokeResponseArgs) ToSkuInvokeResponseOutputWithContext(ctx context.Context) SkuInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuInvokeResponseOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuInvokeResponseOutput struct{ *pulumi.OutputState }

func (SkuInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuInvokeResponse)(nil)).Elem()
}

func (o SkuInvokeResponseOutput) ToSkuInvokeResponseOutput() SkuInvokeResponseOutput {
	return o
}

func (o SkuInvokeResponseOutput) ToSkuInvokeResponseOutputWithContext(ctx context.Context) SkuInvokeResponseOutput {
	return o
}

// Name of the pricing tier.
func (o SkuInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuResponse struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuResponseArgs struct {
	// Name of the pricing tier.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// Name of the pricing tier.
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// Name of the pricing tier.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// UrlFileExtensionMatchConditionParametersInput is an input type that accepts UrlFileExtensionMatchConditionParametersArgs and UrlFileExtensionMatchConditionParametersOutput values.
// You can construct a concrete instance of `UrlFileExtensionMatchConditionParametersInput` via:
//
//          UrlFileExtensionMatchConditionParametersArgs{...}
type UrlFileExtensionMatchConditionParametersInput interface {
	pulumi.Input

	ToUrlFileExtensionMatchConditionParametersOutput() UrlFileExtensionMatchConditionParametersOutput
	ToUrlFileExtensionMatchConditionParametersOutputWithContext(context.Context) UrlFileExtensionMatchConditionParametersOutput
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (UrlFileExtensionMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileExtensionMatchConditionParameters)(nil)).Elem()
}

func (i UrlFileExtensionMatchConditionParametersArgs) ToUrlFileExtensionMatchConditionParametersOutput() UrlFileExtensionMatchConditionParametersOutput {
	return i.ToUrlFileExtensionMatchConditionParametersOutputWithContext(context.Background())
}

func (i UrlFileExtensionMatchConditionParametersArgs) ToUrlFileExtensionMatchConditionParametersOutputWithContext(ctx context.Context) UrlFileExtensionMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlFileExtensionMatchConditionParametersOutput)
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (UrlFileExtensionMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileExtensionMatchConditionParameters)(nil)).Elem()
}

func (o UrlFileExtensionMatchConditionParametersOutput) ToUrlFileExtensionMatchConditionParametersOutput() UrlFileExtensionMatchConditionParametersOutput {
	return o
}

func (o UrlFileExtensionMatchConditionParametersOutput) ToUrlFileExtensionMatchConditionParametersOutputWithContext(ctx context.Context) UrlFileExtensionMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o UrlFileExtensionMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o UrlFileExtensionMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o UrlFileExtensionMatchConditionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o UrlFileExtensionMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o UrlFileExtensionMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParametersInvokeResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// UrlFileExtensionMatchConditionParametersInvokeResponseInput is an input type that accepts UrlFileExtensionMatchConditionParametersInvokeResponseArgs and UrlFileExtensionMatchConditionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `UrlFileExtensionMatchConditionParametersInvokeResponseInput` via:
//
//          UrlFileExtensionMatchConditionParametersInvokeResponseArgs{...}
type UrlFileExtensionMatchConditionParametersInvokeResponseInput interface {
	pulumi.Input

	ToUrlFileExtensionMatchConditionParametersInvokeResponseOutput() UrlFileExtensionMatchConditionParametersInvokeResponseOutput
	ToUrlFileExtensionMatchConditionParametersInvokeResponseOutputWithContext(context.Context) UrlFileExtensionMatchConditionParametersInvokeResponseOutput
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParametersInvokeResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (UrlFileExtensionMatchConditionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileExtensionMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (i UrlFileExtensionMatchConditionParametersInvokeResponseArgs) ToUrlFileExtensionMatchConditionParametersInvokeResponseOutput() UrlFileExtensionMatchConditionParametersInvokeResponseOutput {
	return i.ToUrlFileExtensionMatchConditionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i UrlFileExtensionMatchConditionParametersInvokeResponseArgs) ToUrlFileExtensionMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) UrlFileExtensionMatchConditionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlFileExtensionMatchConditionParametersInvokeResponseOutput)
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (UrlFileExtensionMatchConditionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileExtensionMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (o UrlFileExtensionMatchConditionParametersInvokeResponseOutput) ToUrlFileExtensionMatchConditionParametersInvokeResponseOutput() UrlFileExtensionMatchConditionParametersInvokeResponseOutput {
	return o
}

func (o UrlFileExtensionMatchConditionParametersInvokeResponseOutput) ToUrlFileExtensionMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) UrlFileExtensionMatchConditionParametersInvokeResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o UrlFileExtensionMatchConditionParametersInvokeResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersInvokeResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o UrlFileExtensionMatchConditionParametersInvokeResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersInvokeResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o UrlFileExtensionMatchConditionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o UrlFileExtensionMatchConditionParametersInvokeResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersInvokeResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o UrlFileExtensionMatchConditionParametersInvokeResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersInvokeResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// UrlFileExtensionMatchConditionParametersResponseInput is an input type that accepts UrlFileExtensionMatchConditionParametersResponseArgs and UrlFileExtensionMatchConditionParametersResponseOutput values.
// You can construct a concrete instance of `UrlFileExtensionMatchConditionParametersResponseInput` via:
//
//          UrlFileExtensionMatchConditionParametersResponseArgs{...}
type UrlFileExtensionMatchConditionParametersResponseInput interface {
	pulumi.Input

	ToUrlFileExtensionMatchConditionParametersResponseOutput() UrlFileExtensionMatchConditionParametersResponseOutput
	ToUrlFileExtensionMatchConditionParametersResponseOutputWithContext(context.Context) UrlFileExtensionMatchConditionParametersResponseOutput
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParametersResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (UrlFileExtensionMatchConditionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileExtensionMatchConditionParametersResponse)(nil)).Elem()
}

func (i UrlFileExtensionMatchConditionParametersResponseArgs) ToUrlFileExtensionMatchConditionParametersResponseOutput() UrlFileExtensionMatchConditionParametersResponseOutput {
	return i.ToUrlFileExtensionMatchConditionParametersResponseOutputWithContext(context.Background())
}

func (i UrlFileExtensionMatchConditionParametersResponseArgs) ToUrlFileExtensionMatchConditionParametersResponseOutputWithContext(ctx context.Context) UrlFileExtensionMatchConditionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlFileExtensionMatchConditionParametersResponseOutput)
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlFileExtensionMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileExtensionMatchConditionParametersResponse)(nil)).Elem()
}

func (o UrlFileExtensionMatchConditionParametersResponseOutput) ToUrlFileExtensionMatchConditionParametersResponseOutput() UrlFileExtensionMatchConditionParametersResponseOutput {
	return o
}

func (o UrlFileExtensionMatchConditionParametersResponseOutput) ToUrlFileExtensionMatchConditionParametersResponseOutputWithContext(ctx context.Context) UrlFileExtensionMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o UrlFileExtensionMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o UrlFileExtensionMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o UrlFileExtensionMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o UrlFileExtensionMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o UrlFileExtensionMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// UrlFileNameMatchConditionParametersInput is an input type that accepts UrlFileNameMatchConditionParametersArgs and UrlFileNameMatchConditionParametersOutput values.
// You can construct a concrete instance of `UrlFileNameMatchConditionParametersInput` via:
//
//          UrlFileNameMatchConditionParametersArgs{...}
type UrlFileNameMatchConditionParametersInput interface {
	pulumi.Input

	ToUrlFileNameMatchConditionParametersOutput() UrlFileNameMatchConditionParametersOutput
	ToUrlFileNameMatchConditionParametersOutputWithContext(context.Context) UrlFileNameMatchConditionParametersOutput
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (UrlFileNameMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileNameMatchConditionParameters)(nil)).Elem()
}

func (i UrlFileNameMatchConditionParametersArgs) ToUrlFileNameMatchConditionParametersOutput() UrlFileNameMatchConditionParametersOutput {
	return i.ToUrlFileNameMatchConditionParametersOutputWithContext(context.Background())
}

func (i UrlFileNameMatchConditionParametersArgs) ToUrlFileNameMatchConditionParametersOutputWithContext(ctx context.Context) UrlFileNameMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlFileNameMatchConditionParametersOutput)
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (UrlFileNameMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileNameMatchConditionParameters)(nil)).Elem()
}

func (o UrlFileNameMatchConditionParametersOutput) ToUrlFileNameMatchConditionParametersOutput() UrlFileNameMatchConditionParametersOutput {
	return o
}

func (o UrlFileNameMatchConditionParametersOutput) ToUrlFileNameMatchConditionParametersOutputWithContext(ctx context.Context) UrlFileNameMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o UrlFileNameMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o UrlFileNameMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o UrlFileNameMatchConditionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o UrlFileNameMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o UrlFileNameMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParametersInvokeResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// UrlFileNameMatchConditionParametersInvokeResponseInput is an input type that accepts UrlFileNameMatchConditionParametersInvokeResponseArgs and UrlFileNameMatchConditionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `UrlFileNameMatchConditionParametersInvokeResponseInput` via:
//
//          UrlFileNameMatchConditionParametersInvokeResponseArgs{...}
type UrlFileNameMatchConditionParametersInvokeResponseInput interface {
	pulumi.Input

	ToUrlFileNameMatchConditionParametersInvokeResponseOutput() UrlFileNameMatchConditionParametersInvokeResponseOutput
	ToUrlFileNameMatchConditionParametersInvokeResponseOutputWithContext(context.Context) UrlFileNameMatchConditionParametersInvokeResponseOutput
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParametersInvokeResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (UrlFileNameMatchConditionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileNameMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (i UrlFileNameMatchConditionParametersInvokeResponseArgs) ToUrlFileNameMatchConditionParametersInvokeResponseOutput() UrlFileNameMatchConditionParametersInvokeResponseOutput {
	return i.ToUrlFileNameMatchConditionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i UrlFileNameMatchConditionParametersInvokeResponseArgs) ToUrlFileNameMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) UrlFileNameMatchConditionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlFileNameMatchConditionParametersInvokeResponseOutput)
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (UrlFileNameMatchConditionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileNameMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (o UrlFileNameMatchConditionParametersInvokeResponseOutput) ToUrlFileNameMatchConditionParametersInvokeResponseOutput() UrlFileNameMatchConditionParametersInvokeResponseOutput {
	return o
}

func (o UrlFileNameMatchConditionParametersInvokeResponseOutput) ToUrlFileNameMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) UrlFileNameMatchConditionParametersInvokeResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o UrlFileNameMatchConditionParametersInvokeResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersInvokeResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o UrlFileNameMatchConditionParametersInvokeResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersInvokeResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o UrlFileNameMatchConditionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o UrlFileNameMatchConditionParametersInvokeResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersInvokeResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o UrlFileNameMatchConditionParametersInvokeResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersInvokeResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// UrlFileNameMatchConditionParametersResponseInput is an input type that accepts UrlFileNameMatchConditionParametersResponseArgs and UrlFileNameMatchConditionParametersResponseOutput values.
// You can construct a concrete instance of `UrlFileNameMatchConditionParametersResponseInput` via:
//
//          UrlFileNameMatchConditionParametersResponseArgs{...}
type UrlFileNameMatchConditionParametersResponseInput interface {
	pulumi.Input

	ToUrlFileNameMatchConditionParametersResponseOutput() UrlFileNameMatchConditionParametersResponseOutput
	ToUrlFileNameMatchConditionParametersResponseOutputWithContext(context.Context) UrlFileNameMatchConditionParametersResponseOutput
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParametersResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (UrlFileNameMatchConditionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileNameMatchConditionParametersResponse)(nil)).Elem()
}

func (i UrlFileNameMatchConditionParametersResponseArgs) ToUrlFileNameMatchConditionParametersResponseOutput() UrlFileNameMatchConditionParametersResponseOutput {
	return i.ToUrlFileNameMatchConditionParametersResponseOutputWithContext(context.Background())
}

func (i UrlFileNameMatchConditionParametersResponseArgs) ToUrlFileNameMatchConditionParametersResponseOutputWithContext(ctx context.Context) UrlFileNameMatchConditionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlFileNameMatchConditionParametersResponseOutput)
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlFileNameMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileNameMatchConditionParametersResponse)(nil)).Elem()
}

func (o UrlFileNameMatchConditionParametersResponseOutput) ToUrlFileNameMatchConditionParametersResponseOutput() UrlFileNameMatchConditionParametersResponseOutput {
	return o
}

func (o UrlFileNameMatchConditionParametersResponseOutput) ToUrlFileNameMatchConditionParametersResponseOutputWithContext(ctx context.Context) UrlFileNameMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o UrlFileNameMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o UrlFileNameMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o UrlFileNameMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o UrlFileNameMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o UrlFileNameMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// UrlPathMatchConditionParametersInput is an input type that accepts UrlPathMatchConditionParametersArgs and UrlPathMatchConditionParametersOutput values.
// You can construct a concrete instance of `UrlPathMatchConditionParametersInput` via:
//
//          UrlPathMatchConditionParametersArgs{...}
type UrlPathMatchConditionParametersInput interface {
	pulumi.Input

	ToUrlPathMatchConditionParametersOutput() UrlPathMatchConditionParametersOutput
	ToUrlPathMatchConditionParametersOutputWithContext(context.Context) UrlPathMatchConditionParametersOutput
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (UrlPathMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlPathMatchConditionParameters)(nil)).Elem()
}

func (i UrlPathMatchConditionParametersArgs) ToUrlPathMatchConditionParametersOutput() UrlPathMatchConditionParametersOutput {
	return i.ToUrlPathMatchConditionParametersOutputWithContext(context.Background())
}

func (i UrlPathMatchConditionParametersArgs) ToUrlPathMatchConditionParametersOutputWithContext(ctx context.Context) UrlPathMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlPathMatchConditionParametersOutput)
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParametersOutput struct{ *pulumi.OutputState }

func (UrlPathMatchConditionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlPathMatchConditionParameters)(nil)).Elem()
}

func (o UrlPathMatchConditionParametersOutput) ToUrlPathMatchConditionParametersOutput() UrlPathMatchConditionParametersOutput {
	return o
}

func (o UrlPathMatchConditionParametersOutput) ToUrlPathMatchConditionParametersOutputWithContext(ctx context.Context) UrlPathMatchConditionParametersOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o UrlPathMatchConditionParametersOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParameters) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o UrlPathMatchConditionParametersOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParameters) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o UrlPathMatchConditionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o UrlPathMatchConditionParametersOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParameters) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o UrlPathMatchConditionParametersOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParameters) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParametersInvokeResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// UrlPathMatchConditionParametersInvokeResponseInput is an input type that accepts UrlPathMatchConditionParametersInvokeResponseArgs and UrlPathMatchConditionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `UrlPathMatchConditionParametersInvokeResponseInput` via:
//
//          UrlPathMatchConditionParametersInvokeResponseArgs{...}
type UrlPathMatchConditionParametersInvokeResponseInput interface {
	pulumi.Input

	ToUrlPathMatchConditionParametersInvokeResponseOutput() UrlPathMatchConditionParametersInvokeResponseOutput
	ToUrlPathMatchConditionParametersInvokeResponseOutputWithContext(context.Context) UrlPathMatchConditionParametersInvokeResponseOutput
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParametersInvokeResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (UrlPathMatchConditionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlPathMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (i UrlPathMatchConditionParametersInvokeResponseArgs) ToUrlPathMatchConditionParametersInvokeResponseOutput() UrlPathMatchConditionParametersInvokeResponseOutput {
	return i.ToUrlPathMatchConditionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i UrlPathMatchConditionParametersInvokeResponseArgs) ToUrlPathMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) UrlPathMatchConditionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlPathMatchConditionParametersInvokeResponseOutput)
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (UrlPathMatchConditionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlPathMatchConditionParametersInvokeResponse)(nil)).Elem()
}

func (o UrlPathMatchConditionParametersInvokeResponseOutput) ToUrlPathMatchConditionParametersInvokeResponseOutput() UrlPathMatchConditionParametersInvokeResponseOutput {
	return o
}

func (o UrlPathMatchConditionParametersInvokeResponseOutput) ToUrlPathMatchConditionParametersInvokeResponseOutputWithContext(ctx context.Context) UrlPathMatchConditionParametersInvokeResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o UrlPathMatchConditionParametersInvokeResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersInvokeResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o UrlPathMatchConditionParametersInvokeResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersInvokeResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o UrlPathMatchConditionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o UrlPathMatchConditionParametersInvokeResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersInvokeResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o UrlPathMatchConditionParametersInvokeResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersInvokeResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// UrlPathMatchConditionParametersResponseInput is an input type that accepts UrlPathMatchConditionParametersResponseArgs and UrlPathMatchConditionParametersResponseOutput values.
// You can construct a concrete instance of `UrlPathMatchConditionParametersResponseInput` via:
//
//          UrlPathMatchConditionParametersResponseArgs{...}
type UrlPathMatchConditionParametersResponseInput interface {
	pulumi.Input

	ToUrlPathMatchConditionParametersResponseOutput() UrlPathMatchConditionParametersResponseOutput
	ToUrlPathMatchConditionParametersResponseOutputWithContext(context.Context) UrlPathMatchConditionParametersResponseOutput
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParametersResponseArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (UrlPathMatchConditionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlPathMatchConditionParametersResponse)(nil)).Elem()
}

func (i UrlPathMatchConditionParametersResponseArgs) ToUrlPathMatchConditionParametersResponseOutput() UrlPathMatchConditionParametersResponseOutput {
	return i.ToUrlPathMatchConditionParametersResponseOutputWithContext(context.Background())
}

func (i UrlPathMatchConditionParametersResponseArgs) ToUrlPathMatchConditionParametersResponseOutputWithContext(ctx context.Context) UrlPathMatchConditionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlPathMatchConditionParametersResponseOutput)
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlPathMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlPathMatchConditionParametersResponse)(nil)).Elem()
}

func (o UrlPathMatchConditionParametersResponseOutput) ToUrlPathMatchConditionParametersResponseOutput() UrlPathMatchConditionParametersResponseOutput {
	return o
}

func (o UrlPathMatchConditionParametersResponseOutput) ToUrlPathMatchConditionParametersResponseOutputWithContext(ctx context.Context) UrlPathMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o UrlPathMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o UrlPathMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o UrlPathMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o UrlPathMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o UrlPathMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRedirect'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRedirectActionParameters `pulumi:"parameters"`
}

// UrlRedirectActionInput is an input type that accepts UrlRedirectActionArgs and UrlRedirectActionOutput values.
// You can construct a concrete instance of `UrlRedirectActionInput` via:
//
//          UrlRedirectActionArgs{...}
type UrlRedirectActionInput interface {
	pulumi.Input

	ToUrlRedirectActionOutput() UrlRedirectActionOutput
	ToUrlRedirectActionOutputWithContext(context.Context) UrlRedirectActionOutput
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectActionArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRedirect'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRedirectActionParametersInput `pulumi:"parameters"`
}

func (UrlRedirectActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectAction)(nil)).Elem()
}

func (i UrlRedirectActionArgs) ToUrlRedirectActionOutput() UrlRedirectActionOutput {
	return i.ToUrlRedirectActionOutputWithContext(context.Background())
}

func (i UrlRedirectActionArgs) ToUrlRedirectActionOutputWithContext(ctx context.Context) UrlRedirectActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRedirectActionOutput)
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectActionOutput struct{ *pulumi.OutputState }

func (UrlRedirectActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectAction)(nil)).Elem()
}

func (o UrlRedirectActionOutput) ToUrlRedirectActionOutput() UrlRedirectActionOutput {
	return o
}

func (o UrlRedirectActionOutput) ToUrlRedirectActionOutputWithContext(ctx context.Context) UrlRedirectActionOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'UrlRedirect'.
func (o UrlRedirectActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRedirectAction) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o UrlRedirectActionOutput) Parameters() UrlRedirectActionParametersOutput {
	return o.ApplyT(func(v UrlRedirectAction) UrlRedirectActionParameters { return v.Parameters }).(UrlRedirectActionParametersOutput)
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectActionInvokeResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRedirect'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRedirectActionParametersInvokeResponse `pulumi:"parameters"`
}

// UrlRedirectActionInvokeResponseInput is an input type that accepts UrlRedirectActionInvokeResponseArgs and UrlRedirectActionInvokeResponseOutput values.
// You can construct a concrete instance of `UrlRedirectActionInvokeResponseInput` via:
//
//          UrlRedirectActionInvokeResponseArgs{...}
type UrlRedirectActionInvokeResponseInput interface {
	pulumi.Input

	ToUrlRedirectActionInvokeResponseOutput() UrlRedirectActionInvokeResponseOutput
	ToUrlRedirectActionInvokeResponseOutputWithContext(context.Context) UrlRedirectActionInvokeResponseOutput
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectActionInvokeResponseArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRedirect'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRedirectActionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (UrlRedirectActionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectActionInvokeResponse)(nil)).Elem()
}

func (i UrlRedirectActionInvokeResponseArgs) ToUrlRedirectActionInvokeResponseOutput() UrlRedirectActionInvokeResponseOutput {
	return i.ToUrlRedirectActionInvokeResponseOutputWithContext(context.Background())
}

func (i UrlRedirectActionInvokeResponseArgs) ToUrlRedirectActionInvokeResponseOutputWithContext(ctx context.Context) UrlRedirectActionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRedirectActionInvokeResponseOutput)
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectActionInvokeResponseOutput struct{ *pulumi.OutputState }

func (UrlRedirectActionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectActionInvokeResponse)(nil)).Elem()
}

func (o UrlRedirectActionInvokeResponseOutput) ToUrlRedirectActionInvokeResponseOutput() UrlRedirectActionInvokeResponseOutput {
	return o
}

func (o UrlRedirectActionInvokeResponseOutput) ToUrlRedirectActionInvokeResponseOutputWithContext(ctx context.Context) UrlRedirectActionInvokeResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'UrlRedirect'.
func (o UrlRedirectActionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRedirectActionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o UrlRedirectActionInvokeResponseOutput) Parameters() UrlRedirectActionParametersInvokeResponseOutput {
	return o.ApplyT(func(v UrlRedirectActionInvokeResponse) UrlRedirectActionParametersInvokeResponse { return v.Parameters }).(UrlRedirectActionParametersInvokeResponseOutput)
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParameters struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment *string `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHostname *string `pulumi:"customHostname"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath *string `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
	CustomQueryString *string `pulumi:"customQueryString"`
	// Protocol to use for the redirect. The default value is MatchRequest
	DestinationProtocol *string `pulumi:"destinationProtocol"`
	OdataType           string  `pulumi:"odataType"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType string `pulumi:"redirectType"`
}

// UrlRedirectActionParametersInput is an input type that accepts UrlRedirectActionParametersArgs and UrlRedirectActionParametersOutput values.
// You can construct a concrete instance of `UrlRedirectActionParametersInput` via:
//
//          UrlRedirectActionParametersArgs{...}
type UrlRedirectActionParametersInput interface {
	pulumi.Input

	ToUrlRedirectActionParametersOutput() UrlRedirectActionParametersOutput
	ToUrlRedirectActionParametersOutputWithContext(context.Context) UrlRedirectActionParametersOutput
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParametersArgs struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment pulumi.StringPtrInput `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHostname pulumi.StringPtrInput `pulumi:"customHostname"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath pulumi.StringPtrInput `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
	CustomQueryString pulumi.StringPtrInput `pulumi:"customQueryString"`
	// Protocol to use for the redirect. The default value is MatchRequest
	DestinationProtocol pulumi.StringPtrInput `pulumi:"destinationProtocol"`
	OdataType           pulumi.StringInput    `pulumi:"odataType"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType pulumi.StringInput `pulumi:"redirectType"`
}

func (UrlRedirectActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectActionParameters)(nil)).Elem()
}

func (i UrlRedirectActionParametersArgs) ToUrlRedirectActionParametersOutput() UrlRedirectActionParametersOutput {
	return i.ToUrlRedirectActionParametersOutputWithContext(context.Background())
}

func (i UrlRedirectActionParametersArgs) ToUrlRedirectActionParametersOutputWithContext(ctx context.Context) UrlRedirectActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRedirectActionParametersOutput)
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParametersOutput struct{ *pulumi.OutputState }

func (UrlRedirectActionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectActionParameters)(nil)).Elem()
}

func (o UrlRedirectActionParametersOutput) ToUrlRedirectActionParametersOutput() UrlRedirectActionParametersOutput {
	return o
}

func (o UrlRedirectActionParametersOutput) ToUrlRedirectActionParametersOutputWithContext(ctx context.Context) UrlRedirectActionParametersOutput {
	return o
}

// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
func (o UrlRedirectActionParametersOutput) CustomFragment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParameters) *string { return v.CustomFragment }).(pulumi.StringPtrOutput)
}

// Host to redirect. Leave empty to use the incoming host as the destination host.
func (o UrlRedirectActionParametersOutput) CustomHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParameters) *string { return v.CustomHostname }).(pulumi.StringPtrOutput)
}

// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
func (o UrlRedirectActionParametersOutput) CustomPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParameters) *string { return v.CustomPath }).(pulumi.StringPtrOutput)
}

// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
func (o UrlRedirectActionParametersOutput) CustomQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParameters) *string { return v.CustomQueryString }).(pulumi.StringPtrOutput)
}

// Protocol to use for the redirect. The default value is MatchRequest
func (o UrlRedirectActionParametersOutput) DestinationProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParameters) *string { return v.DestinationProtocol }).(pulumi.StringPtrOutput)
}

func (o UrlRedirectActionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRedirectActionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// The redirect type the rule will use when redirecting traffic.
func (o UrlRedirectActionParametersOutput) RedirectType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRedirectActionParameters) string { return v.RedirectType }).(pulumi.StringOutput)
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParametersInvokeResponse struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment *string `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHostname *string `pulumi:"customHostname"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath *string `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
	CustomQueryString *string `pulumi:"customQueryString"`
	// Protocol to use for the redirect. The default value is MatchRequest
	DestinationProtocol *string `pulumi:"destinationProtocol"`
	OdataType           string  `pulumi:"odataType"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType string `pulumi:"redirectType"`
}

// UrlRedirectActionParametersInvokeResponseInput is an input type that accepts UrlRedirectActionParametersInvokeResponseArgs and UrlRedirectActionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `UrlRedirectActionParametersInvokeResponseInput` via:
//
//          UrlRedirectActionParametersInvokeResponseArgs{...}
type UrlRedirectActionParametersInvokeResponseInput interface {
	pulumi.Input

	ToUrlRedirectActionParametersInvokeResponseOutput() UrlRedirectActionParametersInvokeResponseOutput
	ToUrlRedirectActionParametersInvokeResponseOutputWithContext(context.Context) UrlRedirectActionParametersInvokeResponseOutput
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParametersInvokeResponseArgs struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment pulumi.StringPtrInput `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHostname pulumi.StringPtrInput `pulumi:"customHostname"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath pulumi.StringPtrInput `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
	CustomQueryString pulumi.StringPtrInput `pulumi:"customQueryString"`
	// Protocol to use for the redirect. The default value is MatchRequest
	DestinationProtocol pulumi.StringPtrInput `pulumi:"destinationProtocol"`
	OdataType           pulumi.StringInput    `pulumi:"odataType"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType pulumi.StringInput `pulumi:"redirectType"`
}

func (UrlRedirectActionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectActionParametersInvokeResponse)(nil)).Elem()
}

func (i UrlRedirectActionParametersInvokeResponseArgs) ToUrlRedirectActionParametersInvokeResponseOutput() UrlRedirectActionParametersInvokeResponseOutput {
	return i.ToUrlRedirectActionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i UrlRedirectActionParametersInvokeResponseArgs) ToUrlRedirectActionParametersInvokeResponseOutputWithContext(ctx context.Context) UrlRedirectActionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRedirectActionParametersInvokeResponseOutput)
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (UrlRedirectActionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectActionParametersInvokeResponse)(nil)).Elem()
}

func (o UrlRedirectActionParametersInvokeResponseOutput) ToUrlRedirectActionParametersInvokeResponseOutput() UrlRedirectActionParametersInvokeResponseOutput {
	return o
}

func (o UrlRedirectActionParametersInvokeResponseOutput) ToUrlRedirectActionParametersInvokeResponseOutputWithContext(ctx context.Context) UrlRedirectActionParametersInvokeResponseOutput {
	return o
}

// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
func (o UrlRedirectActionParametersInvokeResponseOutput) CustomFragment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersInvokeResponse) *string { return v.CustomFragment }).(pulumi.StringPtrOutput)
}

// Host to redirect. Leave empty to use the incoming host as the destination host.
func (o UrlRedirectActionParametersInvokeResponseOutput) CustomHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersInvokeResponse) *string { return v.CustomHostname }).(pulumi.StringPtrOutput)
}

// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
func (o UrlRedirectActionParametersInvokeResponseOutput) CustomPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersInvokeResponse) *string { return v.CustomPath }).(pulumi.StringPtrOutput)
}

// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
func (o UrlRedirectActionParametersInvokeResponseOutput) CustomQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersInvokeResponse) *string { return v.CustomQueryString }).(pulumi.StringPtrOutput)
}

// Protocol to use for the redirect. The default value is MatchRequest
func (o UrlRedirectActionParametersInvokeResponseOutput) DestinationProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersInvokeResponse) *string { return v.DestinationProtocol }).(pulumi.StringPtrOutput)
}

func (o UrlRedirectActionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// The redirect type the rule will use when redirecting traffic.
func (o UrlRedirectActionParametersInvokeResponseOutput) RedirectType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersInvokeResponse) string { return v.RedirectType }).(pulumi.StringOutput)
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParametersResponse struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment *string `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHostname *string `pulumi:"customHostname"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath *string `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
	CustomQueryString *string `pulumi:"customQueryString"`
	// Protocol to use for the redirect. The default value is MatchRequest
	DestinationProtocol *string `pulumi:"destinationProtocol"`
	OdataType           string  `pulumi:"odataType"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType string `pulumi:"redirectType"`
}

// UrlRedirectActionParametersResponseInput is an input type that accepts UrlRedirectActionParametersResponseArgs and UrlRedirectActionParametersResponseOutput values.
// You can construct a concrete instance of `UrlRedirectActionParametersResponseInput` via:
//
//          UrlRedirectActionParametersResponseArgs{...}
type UrlRedirectActionParametersResponseInput interface {
	pulumi.Input

	ToUrlRedirectActionParametersResponseOutput() UrlRedirectActionParametersResponseOutput
	ToUrlRedirectActionParametersResponseOutputWithContext(context.Context) UrlRedirectActionParametersResponseOutput
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParametersResponseArgs struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment pulumi.StringPtrInput `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHostname pulumi.StringPtrInput `pulumi:"customHostname"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath pulumi.StringPtrInput `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
	CustomQueryString pulumi.StringPtrInput `pulumi:"customQueryString"`
	// Protocol to use for the redirect. The default value is MatchRequest
	DestinationProtocol pulumi.StringPtrInput `pulumi:"destinationProtocol"`
	OdataType           pulumi.StringInput    `pulumi:"odataType"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType pulumi.StringInput `pulumi:"redirectType"`
}

func (UrlRedirectActionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectActionParametersResponse)(nil)).Elem()
}

func (i UrlRedirectActionParametersResponseArgs) ToUrlRedirectActionParametersResponseOutput() UrlRedirectActionParametersResponseOutput {
	return i.ToUrlRedirectActionParametersResponseOutputWithContext(context.Background())
}

func (i UrlRedirectActionParametersResponseArgs) ToUrlRedirectActionParametersResponseOutputWithContext(ctx context.Context) UrlRedirectActionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRedirectActionParametersResponseOutput)
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlRedirectActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectActionParametersResponse)(nil)).Elem()
}

func (o UrlRedirectActionParametersResponseOutput) ToUrlRedirectActionParametersResponseOutput() UrlRedirectActionParametersResponseOutput {
	return o
}

func (o UrlRedirectActionParametersResponseOutput) ToUrlRedirectActionParametersResponseOutputWithContext(ctx context.Context) UrlRedirectActionParametersResponseOutput {
	return o
}

// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
func (o UrlRedirectActionParametersResponseOutput) CustomFragment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) *string { return v.CustomFragment }).(pulumi.StringPtrOutput)
}

// Host to redirect. Leave empty to use the incoming host as the destination host.
func (o UrlRedirectActionParametersResponseOutput) CustomHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) *string { return v.CustomHostname }).(pulumi.StringPtrOutput)
}

// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
func (o UrlRedirectActionParametersResponseOutput) CustomPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) *string { return v.CustomPath }).(pulumi.StringPtrOutput)
}

// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
func (o UrlRedirectActionParametersResponseOutput) CustomQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) *string { return v.CustomQueryString }).(pulumi.StringPtrOutput)
}

// Protocol to use for the redirect. The default value is MatchRequest
func (o UrlRedirectActionParametersResponseOutput) DestinationProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) *string { return v.DestinationProtocol }).(pulumi.StringPtrOutput)
}

func (o UrlRedirectActionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// The redirect type the rule will use when redirecting traffic.
func (o UrlRedirectActionParametersResponseOutput) RedirectType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) string { return v.RedirectType }).(pulumi.StringOutput)
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRedirect'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRedirectActionParametersResponse `pulumi:"parameters"`
}

// UrlRedirectActionResponseInput is an input type that accepts UrlRedirectActionResponseArgs and UrlRedirectActionResponseOutput values.
// You can construct a concrete instance of `UrlRedirectActionResponseInput` via:
//
//          UrlRedirectActionResponseArgs{...}
type UrlRedirectActionResponseInput interface {
	pulumi.Input

	ToUrlRedirectActionResponseOutput() UrlRedirectActionResponseOutput
	ToUrlRedirectActionResponseOutputWithContext(context.Context) UrlRedirectActionResponseOutput
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectActionResponseArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRedirect'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRedirectActionParametersResponseInput `pulumi:"parameters"`
}

func (UrlRedirectActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectActionResponse)(nil)).Elem()
}

func (i UrlRedirectActionResponseArgs) ToUrlRedirectActionResponseOutput() UrlRedirectActionResponseOutput {
	return i.ToUrlRedirectActionResponseOutputWithContext(context.Background())
}

func (i UrlRedirectActionResponseArgs) ToUrlRedirectActionResponseOutputWithContext(ctx context.Context) UrlRedirectActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRedirectActionResponseOutput)
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectActionResponseOutput struct{ *pulumi.OutputState }

func (UrlRedirectActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectActionResponse)(nil)).Elem()
}

func (o UrlRedirectActionResponseOutput) ToUrlRedirectActionResponseOutput() UrlRedirectActionResponseOutput {
	return o
}

func (o UrlRedirectActionResponseOutput) ToUrlRedirectActionResponseOutputWithContext(ctx context.Context) UrlRedirectActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'UrlRedirect'.
func (o UrlRedirectActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRedirectActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o UrlRedirectActionResponseOutput) Parameters() UrlRedirectActionParametersResponseOutput {
	return o.ApplyT(func(v UrlRedirectActionResponse) UrlRedirectActionParametersResponse { return v.Parameters }).(UrlRedirectActionParametersResponseOutput)
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRewrite'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRewriteActionParameters `pulumi:"parameters"`
}

// UrlRewriteActionInput is an input type that accepts UrlRewriteActionArgs and UrlRewriteActionOutput values.
// You can construct a concrete instance of `UrlRewriteActionInput` via:
//
//          UrlRewriteActionArgs{...}
type UrlRewriteActionInput interface {
	pulumi.Input

	ToUrlRewriteActionOutput() UrlRewriteActionOutput
	ToUrlRewriteActionOutputWithContext(context.Context) UrlRewriteActionOutput
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteActionArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRewrite'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRewriteActionParametersInput `pulumi:"parameters"`
}

func (UrlRewriteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteAction)(nil)).Elem()
}

func (i UrlRewriteActionArgs) ToUrlRewriteActionOutput() UrlRewriteActionOutput {
	return i.ToUrlRewriteActionOutputWithContext(context.Background())
}

func (i UrlRewriteActionArgs) ToUrlRewriteActionOutputWithContext(ctx context.Context) UrlRewriteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRewriteActionOutput)
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteActionOutput struct{ *pulumi.OutputState }

func (UrlRewriteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteAction)(nil)).Elem()
}

func (o UrlRewriteActionOutput) ToUrlRewriteActionOutput() UrlRewriteActionOutput {
	return o
}

func (o UrlRewriteActionOutput) ToUrlRewriteActionOutputWithContext(ctx context.Context) UrlRewriteActionOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'UrlRewrite'.
func (o UrlRewriteActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteAction) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o UrlRewriteActionOutput) Parameters() UrlRewriteActionParametersOutput {
	return o.ApplyT(func(v UrlRewriteAction) UrlRewriteActionParameters { return v.Parameters }).(UrlRewriteActionParametersOutput)
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteActionInvokeResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRewrite'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRewriteActionParametersInvokeResponse `pulumi:"parameters"`
}

// UrlRewriteActionInvokeResponseInput is an input type that accepts UrlRewriteActionInvokeResponseArgs and UrlRewriteActionInvokeResponseOutput values.
// You can construct a concrete instance of `UrlRewriteActionInvokeResponseInput` via:
//
//          UrlRewriteActionInvokeResponseArgs{...}
type UrlRewriteActionInvokeResponseInput interface {
	pulumi.Input

	ToUrlRewriteActionInvokeResponseOutput() UrlRewriteActionInvokeResponseOutput
	ToUrlRewriteActionInvokeResponseOutputWithContext(context.Context) UrlRewriteActionInvokeResponseOutput
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteActionInvokeResponseArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRewrite'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRewriteActionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (UrlRewriteActionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteActionInvokeResponse)(nil)).Elem()
}

func (i UrlRewriteActionInvokeResponseArgs) ToUrlRewriteActionInvokeResponseOutput() UrlRewriteActionInvokeResponseOutput {
	return i.ToUrlRewriteActionInvokeResponseOutputWithContext(context.Background())
}

func (i UrlRewriteActionInvokeResponseArgs) ToUrlRewriteActionInvokeResponseOutputWithContext(ctx context.Context) UrlRewriteActionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRewriteActionInvokeResponseOutput)
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteActionInvokeResponseOutput struct{ *pulumi.OutputState }

func (UrlRewriteActionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteActionInvokeResponse)(nil)).Elem()
}

func (o UrlRewriteActionInvokeResponseOutput) ToUrlRewriteActionInvokeResponseOutput() UrlRewriteActionInvokeResponseOutput {
	return o
}

func (o UrlRewriteActionInvokeResponseOutput) ToUrlRewriteActionInvokeResponseOutputWithContext(ctx context.Context) UrlRewriteActionInvokeResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'UrlRewrite'.
func (o UrlRewriteActionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o UrlRewriteActionInvokeResponseOutput) Parameters() UrlRewriteActionParametersInvokeResponseOutput {
	return o.ApplyT(func(v UrlRewriteActionInvokeResponse) UrlRewriteActionParametersInvokeResponse { return v.Parameters }).(UrlRewriteActionParametersInvokeResponseOutput)
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParameters struct {
	// Define the relative URL to which the above requests will be rewritten by.
	Destination string `pulumi:"destination"`
	OdataType   string `pulumi:"odataType"`
	// Whether to preserve unmatched path. Default value is true.
	PreserveUnmatchedPath *bool `pulumi:"preserveUnmatchedPath"`
	// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
	SourcePattern string `pulumi:"sourcePattern"`
}

// UrlRewriteActionParametersInput is an input type that accepts UrlRewriteActionParametersArgs and UrlRewriteActionParametersOutput values.
// You can construct a concrete instance of `UrlRewriteActionParametersInput` via:
//
//          UrlRewriteActionParametersArgs{...}
type UrlRewriteActionParametersInput interface {
	pulumi.Input

	ToUrlRewriteActionParametersOutput() UrlRewriteActionParametersOutput
	ToUrlRewriteActionParametersOutputWithContext(context.Context) UrlRewriteActionParametersOutput
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParametersArgs struct {
	// Define the relative URL to which the above requests will be rewritten by.
	Destination pulumi.StringInput `pulumi:"destination"`
	OdataType   pulumi.StringInput `pulumi:"odataType"`
	// Whether to preserve unmatched path. Default value is true.
	PreserveUnmatchedPath pulumi.BoolPtrInput `pulumi:"preserveUnmatchedPath"`
	// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
	SourcePattern pulumi.StringInput `pulumi:"sourcePattern"`
}

func (UrlRewriteActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteActionParameters)(nil)).Elem()
}

func (i UrlRewriteActionParametersArgs) ToUrlRewriteActionParametersOutput() UrlRewriteActionParametersOutput {
	return i.ToUrlRewriteActionParametersOutputWithContext(context.Background())
}

func (i UrlRewriteActionParametersArgs) ToUrlRewriteActionParametersOutputWithContext(ctx context.Context) UrlRewriteActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRewriteActionParametersOutput)
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParametersOutput struct{ *pulumi.OutputState }

func (UrlRewriteActionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteActionParameters)(nil)).Elem()
}

func (o UrlRewriteActionParametersOutput) ToUrlRewriteActionParametersOutput() UrlRewriteActionParametersOutput {
	return o
}

func (o UrlRewriteActionParametersOutput) ToUrlRewriteActionParametersOutputWithContext(ctx context.Context) UrlRewriteActionParametersOutput {
	return o
}

// Define the relative URL to which the above requests will be rewritten by.
func (o UrlRewriteActionParametersOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionParameters) string { return v.Destination }).(pulumi.StringOutput)
}

func (o UrlRewriteActionParametersOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionParameters) string { return v.OdataType }).(pulumi.StringOutput)
}

// Whether to preserve unmatched path. Default value is true.
func (o UrlRewriteActionParametersOutput) PreserveUnmatchedPath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlRewriteActionParameters) *bool { return v.PreserveUnmatchedPath }).(pulumi.BoolPtrOutput)
}

// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
func (o UrlRewriteActionParametersOutput) SourcePattern() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionParameters) string { return v.SourcePattern }).(pulumi.StringOutput)
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParametersInvokeResponse struct {
	// Define the relative URL to which the above requests will be rewritten by.
	Destination string `pulumi:"destination"`
	OdataType   string `pulumi:"odataType"`
	// Whether to preserve unmatched path. Default value is true.
	PreserveUnmatchedPath *bool `pulumi:"preserveUnmatchedPath"`
	// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
	SourcePattern string `pulumi:"sourcePattern"`
}

// UrlRewriteActionParametersInvokeResponseInput is an input type that accepts UrlRewriteActionParametersInvokeResponseArgs and UrlRewriteActionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `UrlRewriteActionParametersInvokeResponseInput` via:
//
//          UrlRewriteActionParametersInvokeResponseArgs{...}
type UrlRewriteActionParametersInvokeResponseInput interface {
	pulumi.Input

	ToUrlRewriteActionParametersInvokeResponseOutput() UrlRewriteActionParametersInvokeResponseOutput
	ToUrlRewriteActionParametersInvokeResponseOutputWithContext(context.Context) UrlRewriteActionParametersInvokeResponseOutput
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParametersInvokeResponseArgs struct {
	// Define the relative URL to which the above requests will be rewritten by.
	Destination pulumi.StringInput `pulumi:"destination"`
	OdataType   pulumi.StringInput `pulumi:"odataType"`
	// Whether to preserve unmatched path. Default value is true.
	PreserveUnmatchedPath pulumi.BoolPtrInput `pulumi:"preserveUnmatchedPath"`
	// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
	SourcePattern pulumi.StringInput `pulumi:"sourcePattern"`
}

func (UrlRewriteActionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteActionParametersInvokeResponse)(nil)).Elem()
}

func (i UrlRewriteActionParametersInvokeResponseArgs) ToUrlRewriteActionParametersInvokeResponseOutput() UrlRewriteActionParametersInvokeResponseOutput {
	return i.ToUrlRewriteActionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i UrlRewriteActionParametersInvokeResponseArgs) ToUrlRewriteActionParametersInvokeResponseOutputWithContext(ctx context.Context) UrlRewriteActionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRewriteActionParametersInvokeResponseOutput)
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (UrlRewriteActionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteActionParametersInvokeResponse)(nil)).Elem()
}

func (o UrlRewriteActionParametersInvokeResponseOutput) ToUrlRewriteActionParametersInvokeResponseOutput() UrlRewriteActionParametersInvokeResponseOutput {
	return o
}

func (o UrlRewriteActionParametersInvokeResponseOutput) ToUrlRewriteActionParametersInvokeResponseOutputWithContext(ctx context.Context) UrlRewriteActionParametersInvokeResponseOutput {
	return o
}

// Define the relative URL to which the above requests will be rewritten by.
func (o UrlRewriteActionParametersInvokeResponseOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionParametersInvokeResponse) string { return v.Destination }).(pulumi.StringOutput)
}

func (o UrlRewriteActionParametersInvokeResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionParametersInvokeResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Whether to preserve unmatched path. Default value is true.
func (o UrlRewriteActionParametersInvokeResponseOutput) PreserveUnmatchedPath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlRewriteActionParametersInvokeResponse) *bool { return v.PreserveUnmatchedPath }).(pulumi.BoolPtrOutput)
}

// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
func (o UrlRewriteActionParametersInvokeResponseOutput) SourcePattern() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionParametersInvokeResponse) string { return v.SourcePattern }).(pulumi.StringOutput)
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParametersResponse struct {
	// Define the relative URL to which the above requests will be rewritten by.
	Destination string `pulumi:"destination"`
	OdataType   string `pulumi:"odataType"`
	// Whether to preserve unmatched path. Default value is true.
	PreserveUnmatchedPath *bool `pulumi:"preserveUnmatchedPath"`
	// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
	SourcePattern string `pulumi:"sourcePattern"`
}

// UrlRewriteActionParametersResponseInput is an input type that accepts UrlRewriteActionParametersResponseArgs and UrlRewriteActionParametersResponseOutput values.
// You can construct a concrete instance of `UrlRewriteActionParametersResponseInput` via:
//
//          UrlRewriteActionParametersResponseArgs{...}
type UrlRewriteActionParametersResponseInput interface {
	pulumi.Input

	ToUrlRewriteActionParametersResponseOutput() UrlRewriteActionParametersResponseOutput
	ToUrlRewriteActionParametersResponseOutputWithContext(context.Context) UrlRewriteActionParametersResponseOutput
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParametersResponseArgs struct {
	// Define the relative URL to which the above requests will be rewritten by.
	Destination pulumi.StringInput `pulumi:"destination"`
	OdataType   pulumi.StringInput `pulumi:"odataType"`
	// Whether to preserve unmatched path. Default value is true.
	PreserveUnmatchedPath pulumi.BoolPtrInput `pulumi:"preserveUnmatchedPath"`
	// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
	SourcePattern pulumi.StringInput `pulumi:"sourcePattern"`
}

func (UrlRewriteActionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteActionParametersResponse)(nil)).Elem()
}

func (i UrlRewriteActionParametersResponseArgs) ToUrlRewriteActionParametersResponseOutput() UrlRewriteActionParametersResponseOutput {
	return i.ToUrlRewriteActionParametersResponseOutputWithContext(context.Background())
}

func (i UrlRewriteActionParametersResponseArgs) ToUrlRewriteActionParametersResponseOutputWithContext(ctx context.Context) UrlRewriteActionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRewriteActionParametersResponseOutput)
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlRewriteActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteActionParametersResponse)(nil)).Elem()
}

func (o UrlRewriteActionParametersResponseOutput) ToUrlRewriteActionParametersResponseOutput() UrlRewriteActionParametersResponseOutput {
	return o
}

func (o UrlRewriteActionParametersResponseOutput) ToUrlRewriteActionParametersResponseOutputWithContext(ctx context.Context) UrlRewriteActionParametersResponseOutput {
	return o
}

// Define the relative URL to which the above requests will be rewritten by.
func (o UrlRewriteActionParametersResponseOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionParametersResponse) string { return v.Destination }).(pulumi.StringOutput)
}

func (o UrlRewriteActionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Whether to preserve unmatched path. Default value is true.
func (o UrlRewriteActionParametersResponseOutput) PreserveUnmatchedPath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlRewriteActionParametersResponse) *bool { return v.PreserveUnmatchedPath }).(pulumi.BoolPtrOutput)
}

// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
func (o UrlRewriteActionParametersResponseOutput) SourcePattern() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionParametersResponse) string { return v.SourcePattern }).(pulumi.StringOutput)
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRewrite'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRewriteActionParametersResponse `pulumi:"parameters"`
}

// UrlRewriteActionResponseInput is an input type that accepts UrlRewriteActionResponseArgs and UrlRewriteActionResponseOutput values.
// You can construct a concrete instance of `UrlRewriteActionResponseInput` via:
//
//          UrlRewriteActionResponseArgs{...}
type UrlRewriteActionResponseInput interface {
	pulumi.Input

	ToUrlRewriteActionResponseOutput() UrlRewriteActionResponseOutput
	ToUrlRewriteActionResponseOutputWithContext(context.Context) UrlRewriteActionResponseOutput
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteActionResponseArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRewrite'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRewriteActionParametersResponseInput `pulumi:"parameters"`
}

func (UrlRewriteActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteActionResponse)(nil)).Elem()
}

func (i UrlRewriteActionResponseArgs) ToUrlRewriteActionResponseOutput() UrlRewriteActionResponseOutput {
	return i.ToUrlRewriteActionResponseOutputWithContext(context.Background())
}

func (i UrlRewriteActionResponseArgs) ToUrlRewriteActionResponseOutputWithContext(ctx context.Context) UrlRewriteActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRewriteActionResponseOutput)
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteActionResponseOutput struct{ *pulumi.OutputState }

func (UrlRewriteActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteActionResponse)(nil)).Elem()
}

func (o UrlRewriteActionResponseOutput) ToUrlRewriteActionResponseOutput() UrlRewriteActionResponseOutput {
	return o
}

func (o UrlRewriteActionResponseOutput) ToUrlRewriteActionResponseOutputWithContext(ctx context.Context) UrlRewriteActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'UrlRewrite'.
func (o UrlRewriteActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o UrlRewriteActionResponseOutput) Parameters() UrlRewriteActionParametersResponseOutput {
	return o.ApplyT(func(v UrlRewriteActionResponse) UrlRewriteActionParametersResponse { return v.Parameters }).(UrlRewriteActionParametersResponseOutput)
}

// Defines the url signing action for the delivery rule.
type UrlSigningAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlSigning'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlSigningActionParameters `pulumi:"parameters"`
}

// UrlSigningActionInput is an input type that accepts UrlSigningActionArgs and UrlSigningActionOutput values.
// You can construct a concrete instance of `UrlSigningActionInput` via:
//
//          UrlSigningActionArgs{...}
type UrlSigningActionInput interface {
	pulumi.Input

	ToUrlSigningActionOutput() UrlSigningActionOutput
	ToUrlSigningActionOutputWithContext(context.Context) UrlSigningActionOutput
}

// Defines the url signing action for the delivery rule.
type UrlSigningActionArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlSigning'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlSigningActionParametersInput `pulumi:"parameters"`
}

func (UrlSigningActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningAction)(nil)).Elem()
}

func (i UrlSigningActionArgs) ToUrlSigningActionOutput() UrlSigningActionOutput {
	return i.ToUrlSigningActionOutputWithContext(context.Background())
}

func (i UrlSigningActionArgs) ToUrlSigningActionOutputWithContext(ctx context.Context) UrlSigningActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningActionOutput)
}

// Defines the url signing action for the delivery rule.
type UrlSigningActionOutput struct{ *pulumi.OutputState }

func (UrlSigningActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningAction)(nil)).Elem()
}

func (o UrlSigningActionOutput) ToUrlSigningActionOutput() UrlSigningActionOutput {
	return o
}

func (o UrlSigningActionOutput) ToUrlSigningActionOutputWithContext(ctx context.Context) UrlSigningActionOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'UrlSigning'.
func (o UrlSigningActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningAction) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o UrlSigningActionOutput) Parameters() UrlSigningActionParametersOutput {
	return o.ApplyT(func(v UrlSigningAction) UrlSigningActionParameters { return v.Parameters }).(UrlSigningActionParametersOutput)
}

// Defines the url signing action for the delivery rule.
type UrlSigningActionInvokeResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlSigning'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlSigningActionParametersInvokeResponse `pulumi:"parameters"`
}

// UrlSigningActionInvokeResponseInput is an input type that accepts UrlSigningActionInvokeResponseArgs and UrlSigningActionInvokeResponseOutput values.
// You can construct a concrete instance of `UrlSigningActionInvokeResponseInput` via:
//
//          UrlSigningActionInvokeResponseArgs{...}
type UrlSigningActionInvokeResponseInput interface {
	pulumi.Input

	ToUrlSigningActionInvokeResponseOutput() UrlSigningActionInvokeResponseOutput
	ToUrlSigningActionInvokeResponseOutputWithContext(context.Context) UrlSigningActionInvokeResponseOutput
}

// Defines the url signing action for the delivery rule.
type UrlSigningActionInvokeResponseArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlSigning'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlSigningActionParametersInvokeResponseInput `pulumi:"parameters"`
}

func (UrlSigningActionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningActionInvokeResponse)(nil)).Elem()
}

func (i UrlSigningActionInvokeResponseArgs) ToUrlSigningActionInvokeResponseOutput() UrlSigningActionInvokeResponseOutput {
	return i.ToUrlSigningActionInvokeResponseOutputWithContext(context.Background())
}

func (i UrlSigningActionInvokeResponseArgs) ToUrlSigningActionInvokeResponseOutputWithContext(ctx context.Context) UrlSigningActionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningActionInvokeResponseOutput)
}

// Defines the url signing action for the delivery rule.
type UrlSigningActionInvokeResponseOutput struct{ *pulumi.OutputState }

func (UrlSigningActionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningActionInvokeResponse)(nil)).Elem()
}

func (o UrlSigningActionInvokeResponseOutput) ToUrlSigningActionInvokeResponseOutput() UrlSigningActionInvokeResponseOutput {
	return o
}

func (o UrlSigningActionInvokeResponseOutput) ToUrlSigningActionInvokeResponseOutputWithContext(ctx context.Context) UrlSigningActionInvokeResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'UrlSigning'.
func (o UrlSigningActionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningActionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o UrlSigningActionInvokeResponseOutput) Parameters() UrlSigningActionParametersInvokeResponseOutput {
	return o.ApplyT(func(v UrlSigningActionInvokeResponse) UrlSigningActionParametersInvokeResponse { return v.Parameters }).(UrlSigningActionParametersInvokeResponseOutput)
}

// Defines the parameters for the Url Signing action.
type UrlSigningActionParameters struct {
	// Algorithm to use for URL signing
	Algorithm *string `pulumi:"algorithm"`
	// Match values to match against. Supports CIDR ranges (both IPv4 and IPv6).
	IpSubnets []string `pulumi:"ipSubnets"`
	// Id reference of the key to be used to verify the hash and should be defined in UrlSigningKeys
	KeyId     string  `pulumi:"keyId"`
	OdataType *string `pulumi:"odataType"`
	// Defines which query string parameters in the url to be considered for expires, key id etc.
	ParameterNameOverride []UrlSigningParamIdentifier `pulumi:"parameterNameOverride"`
}

// UrlSigningActionParametersInput is an input type that accepts UrlSigningActionParametersArgs and UrlSigningActionParametersOutput values.
// You can construct a concrete instance of `UrlSigningActionParametersInput` via:
//
//          UrlSigningActionParametersArgs{...}
type UrlSigningActionParametersInput interface {
	pulumi.Input

	ToUrlSigningActionParametersOutput() UrlSigningActionParametersOutput
	ToUrlSigningActionParametersOutputWithContext(context.Context) UrlSigningActionParametersOutput
}

// Defines the parameters for the Url Signing action.
type UrlSigningActionParametersArgs struct {
	// Algorithm to use for URL signing
	Algorithm pulumi.StringPtrInput `pulumi:"algorithm"`
	// Match values to match against. Supports CIDR ranges (both IPv4 and IPv6).
	IpSubnets pulumi.StringArrayInput `pulumi:"ipSubnets"`
	// Id reference of the key to be used to verify the hash and should be defined in UrlSigningKeys
	KeyId     pulumi.StringInput    `pulumi:"keyId"`
	OdataType pulumi.StringPtrInput `pulumi:"odataType"`
	// Defines which query string parameters in the url to be considered for expires, key id etc.
	ParameterNameOverride UrlSigningParamIdentifierArrayInput `pulumi:"parameterNameOverride"`
}

func (UrlSigningActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningActionParameters)(nil)).Elem()
}

func (i UrlSigningActionParametersArgs) ToUrlSigningActionParametersOutput() UrlSigningActionParametersOutput {
	return i.ToUrlSigningActionParametersOutputWithContext(context.Background())
}

func (i UrlSigningActionParametersArgs) ToUrlSigningActionParametersOutputWithContext(ctx context.Context) UrlSigningActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningActionParametersOutput)
}

// Defines the parameters for the Url Signing action.
type UrlSigningActionParametersOutput struct{ *pulumi.OutputState }

func (UrlSigningActionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningActionParameters)(nil)).Elem()
}

func (o UrlSigningActionParametersOutput) ToUrlSigningActionParametersOutput() UrlSigningActionParametersOutput {
	return o
}

func (o UrlSigningActionParametersOutput) ToUrlSigningActionParametersOutputWithContext(ctx context.Context) UrlSigningActionParametersOutput {
	return o
}

// Algorithm to use for URL signing
func (o UrlSigningActionParametersOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlSigningActionParameters) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

// Match values to match against. Supports CIDR ranges (both IPv4 and IPv6).
func (o UrlSigningActionParametersOutput) IpSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlSigningActionParameters) []string { return v.IpSubnets }).(pulumi.StringArrayOutput)
}

// Id reference of the key to be used to verify the hash and should be defined in UrlSigningKeys
func (o UrlSigningActionParametersOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningActionParameters) string { return v.KeyId }).(pulumi.StringOutput)
}

func (o UrlSigningActionParametersOutput) OdataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlSigningActionParameters) *string { return v.OdataType }).(pulumi.StringPtrOutput)
}

// Defines which query string parameters in the url to be considered for expires, key id etc.
func (o UrlSigningActionParametersOutput) ParameterNameOverride() UrlSigningParamIdentifierArrayOutput {
	return o.ApplyT(func(v UrlSigningActionParameters) []UrlSigningParamIdentifier { return v.ParameterNameOverride }).(UrlSigningParamIdentifierArrayOutput)
}

// Defines the parameters for the Url Signing action.
type UrlSigningActionParametersInvokeResponse struct {
	// Algorithm to use for URL signing
	Algorithm *string `pulumi:"algorithm"`
	// Match values to match against. Supports CIDR ranges (both IPv4 and IPv6).
	IpSubnets []string `pulumi:"ipSubnets"`
	// Id reference of the key to be used to verify the hash and should be defined in UrlSigningKeys
	KeyId     string  `pulumi:"keyId"`
	OdataType *string `pulumi:"odataType"`
	// Defines which query string parameters in the url to be considered for expires, key id etc.
	ParameterNameOverride []UrlSigningParamIdentifierInvokeResponse `pulumi:"parameterNameOverride"`
}

// UrlSigningActionParametersInvokeResponseInput is an input type that accepts UrlSigningActionParametersInvokeResponseArgs and UrlSigningActionParametersInvokeResponseOutput values.
// You can construct a concrete instance of `UrlSigningActionParametersInvokeResponseInput` via:
//
//          UrlSigningActionParametersInvokeResponseArgs{...}
type UrlSigningActionParametersInvokeResponseInput interface {
	pulumi.Input

	ToUrlSigningActionParametersInvokeResponseOutput() UrlSigningActionParametersInvokeResponseOutput
	ToUrlSigningActionParametersInvokeResponseOutputWithContext(context.Context) UrlSigningActionParametersInvokeResponseOutput
}

// Defines the parameters for the Url Signing action.
type UrlSigningActionParametersInvokeResponseArgs struct {
	// Algorithm to use for URL signing
	Algorithm pulumi.StringPtrInput `pulumi:"algorithm"`
	// Match values to match against. Supports CIDR ranges (both IPv4 and IPv6).
	IpSubnets pulumi.StringArrayInput `pulumi:"ipSubnets"`
	// Id reference of the key to be used to verify the hash and should be defined in UrlSigningKeys
	KeyId     pulumi.StringInput    `pulumi:"keyId"`
	OdataType pulumi.StringPtrInput `pulumi:"odataType"`
	// Defines which query string parameters in the url to be considered for expires, key id etc.
	ParameterNameOverride UrlSigningParamIdentifierInvokeResponseArrayInput `pulumi:"parameterNameOverride"`
}

func (UrlSigningActionParametersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningActionParametersInvokeResponse)(nil)).Elem()
}

func (i UrlSigningActionParametersInvokeResponseArgs) ToUrlSigningActionParametersInvokeResponseOutput() UrlSigningActionParametersInvokeResponseOutput {
	return i.ToUrlSigningActionParametersInvokeResponseOutputWithContext(context.Background())
}

func (i UrlSigningActionParametersInvokeResponseArgs) ToUrlSigningActionParametersInvokeResponseOutputWithContext(ctx context.Context) UrlSigningActionParametersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningActionParametersInvokeResponseOutput)
}

// Defines the parameters for the Url Signing action.
type UrlSigningActionParametersInvokeResponseOutput struct{ *pulumi.OutputState }

func (UrlSigningActionParametersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningActionParametersInvokeResponse)(nil)).Elem()
}

func (o UrlSigningActionParametersInvokeResponseOutput) ToUrlSigningActionParametersInvokeResponseOutput() UrlSigningActionParametersInvokeResponseOutput {
	return o
}

func (o UrlSigningActionParametersInvokeResponseOutput) ToUrlSigningActionParametersInvokeResponseOutputWithContext(ctx context.Context) UrlSigningActionParametersInvokeResponseOutput {
	return o
}

// Algorithm to use for URL signing
func (o UrlSigningActionParametersInvokeResponseOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlSigningActionParametersInvokeResponse) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

// Match values to match against. Supports CIDR ranges (both IPv4 and IPv6).
func (o UrlSigningActionParametersInvokeResponseOutput) IpSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlSigningActionParametersInvokeResponse) []string { return v.IpSubnets }).(pulumi.StringArrayOutput)
}

// Id reference of the key to be used to verify the hash and should be defined in UrlSigningKeys
func (o UrlSigningActionParametersInvokeResponseOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningActionParametersInvokeResponse) string { return v.KeyId }).(pulumi.StringOutput)
}

func (o UrlSigningActionParametersInvokeResponseOutput) OdataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlSigningActionParametersInvokeResponse) *string { return v.OdataType }).(pulumi.StringPtrOutput)
}

// Defines which query string parameters in the url to be considered for expires, key id etc.
func (o UrlSigningActionParametersInvokeResponseOutput) ParameterNameOverride() UrlSigningParamIdentifierInvokeResponseArrayOutput {
	return o.ApplyT(func(v UrlSigningActionParametersInvokeResponse) []UrlSigningParamIdentifierInvokeResponse {
		return v.ParameterNameOverride
	}).(UrlSigningParamIdentifierInvokeResponseArrayOutput)
}

// Defines the parameters for the Url Signing action.
type UrlSigningActionParametersResponse struct {
	// Algorithm to use for URL signing
	Algorithm *string `pulumi:"algorithm"`
	// Match values to match against. Supports CIDR ranges (both IPv4 and IPv6).
	IpSubnets []string `pulumi:"ipSubnets"`
	// Id reference of the key to be used to verify the hash and should be defined in UrlSigningKeys
	KeyId     string  `pulumi:"keyId"`
	OdataType *string `pulumi:"odataType"`
	// Defines which query string parameters in the url to be considered for expires, key id etc.
	ParameterNameOverride []UrlSigningParamIdentifierResponse `pulumi:"parameterNameOverride"`
}

// UrlSigningActionParametersResponseInput is an input type that accepts UrlSigningActionParametersResponseArgs and UrlSigningActionParametersResponseOutput values.
// You can construct a concrete instance of `UrlSigningActionParametersResponseInput` via:
//
//          UrlSigningActionParametersResponseArgs{...}
type UrlSigningActionParametersResponseInput interface {
	pulumi.Input

	ToUrlSigningActionParametersResponseOutput() UrlSigningActionParametersResponseOutput
	ToUrlSigningActionParametersResponseOutputWithContext(context.Context) UrlSigningActionParametersResponseOutput
}

// Defines the parameters for the Url Signing action.
type UrlSigningActionParametersResponseArgs struct {
	// Algorithm to use for URL signing
	Algorithm pulumi.StringPtrInput `pulumi:"algorithm"`
	// Match values to match against. Supports CIDR ranges (both IPv4 and IPv6).
	IpSubnets pulumi.StringArrayInput `pulumi:"ipSubnets"`
	// Id reference of the key to be used to verify the hash and should be defined in UrlSigningKeys
	KeyId     pulumi.StringInput    `pulumi:"keyId"`
	OdataType pulumi.StringPtrInput `pulumi:"odataType"`
	// Defines which query string parameters in the url to be considered for expires, key id etc.
	ParameterNameOverride UrlSigningParamIdentifierResponseArrayInput `pulumi:"parameterNameOverride"`
}

func (UrlSigningActionParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningActionParametersResponse)(nil)).Elem()
}

func (i UrlSigningActionParametersResponseArgs) ToUrlSigningActionParametersResponseOutput() UrlSigningActionParametersResponseOutput {
	return i.ToUrlSigningActionParametersResponseOutputWithContext(context.Background())
}

func (i UrlSigningActionParametersResponseArgs) ToUrlSigningActionParametersResponseOutputWithContext(ctx context.Context) UrlSigningActionParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningActionParametersResponseOutput)
}

// Defines the parameters for the Url Signing action.
type UrlSigningActionParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlSigningActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningActionParametersResponse)(nil)).Elem()
}

func (o UrlSigningActionParametersResponseOutput) ToUrlSigningActionParametersResponseOutput() UrlSigningActionParametersResponseOutput {
	return o
}

func (o UrlSigningActionParametersResponseOutput) ToUrlSigningActionParametersResponseOutputWithContext(ctx context.Context) UrlSigningActionParametersResponseOutput {
	return o
}

// Algorithm to use for URL signing
func (o UrlSigningActionParametersResponseOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlSigningActionParametersResponse) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

// Match values to match against. Supports CIDR ranges (both IPv4 and IPv6).
func (o UrlSigningActionParametersResponseOutput) IpSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlSigningActionParametersResponse) []string { return v.IpSubnets }).(pulumi.StringArrayOutput)
}

// Id reference of the key to be used to verify the hash and should be defined in UrlSigningKeys
func (o UrlSigningActionParametersResponseOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningActionParametersResponse) string { return v.KeyId }).(pulumi.StringOutput)
}

func (o UrlSigningActionParametersResponseOutput) OdataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlSigningActionParametersResponse) *string { return v.OdataType }).(pulumi.StringPtrOutput)
}

// Defines which query string parameters in the url to be considered for expires, key id etc.
func (o UrlSigningActionParametersResponseOutput) ParameterNameOverride() UrlSigningParamIdentifierResponseArrayOutput {
	return o.ApplyT(func(v UrlSigningActionParametersResponse) []UrlSigningParamIdentifierResponse {
		return v.ParameterNameOverride
	}).(UrlSigningParamIdentifierResponseArrayOutput)
}

// Defines the url signing action for the delivery rule.
type UrlSigningActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlSigning'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlSigningActionParametersResponse `pulumi:"parameters"`
}

// UrlSigningActionResponseInput is an input type that accepts UrlSigningActionResponseArgs and UrlSigningActionResponseOutput values.
// You can construct a concrete instance of `UrlSigningActionResponseInput` via:
//
//          UrlSigningActionResponseArgs{...}
type UrlSigningActionResponseInput interface {
	pulumi.Input

	ToUrlSigningActionResponseOutput() UrlSigningActionResponseOutput
	ToUrlSigningActionResponseOutputWithContext(context.Context) UrlSigningActionResponseOutput
}

// Defines the url signing action for the delivery rule.
type UrlSigningActionResponseArgs struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlSigning'.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlSigningActionParametersResponseInput `pulumi:"parameters"`
}

func (UrlSigningActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningActionResponse)(nil)).Elem()
}

func (i UrlSigningActionResponseArgs) ToUrlSigningActionResponseOutput() UrlSigningActionResponseOutput {
	return i.ToUrlSigningActionResponseOutputWithContext(context.Background())
}

func (i UrlSigningActionResponseArgs) ToUrlSigningActionResponseOutputWithContext(ctx context.Context) UrlSigningActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningActionResponseOutput)
}

// Defines the url signing action for the delivery rule.
type UrlSigningActionResponseOutput struct{ *pulumi.OutputState }

func (UrlSigningActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningActionResponse)(nil)).Elem()
}

func (o UrlSigningActionResponseOutput) ToUrlSigningActionResponseOutput() UrlSigningActionResponseOutput {
	return o
}

func (o UrlSigningActionResponseOutput) ToUrlSigningActionResponseOutputWithContext(ctx context.Context) UrlSigningActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
// Expected value is 'UrlSigning'.
func (o UrlSigningActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o UrlSigningActionResponseOutput) Parameters() UrlSigningActionParametersResponseOutput {
	return o.ApplyT(func(v UrlSigningActionResponse) UrlSigningActionParametersResponse { return v.Parameters }).(UrlSigningActionParametersResponseOutput)
}

// Url signing key
type UrlSigningKey struct {
	// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
	KeyId string `pulumi:"keyId"`
	// Defines the parameters for using customer key vault for Url Signing Key.
	KeySourceParameters KeyVaultSigningKeyParameters `pulumi:"keySourceParameters"`
}

// UrlSigningKeyInput is an input type that accepts UrlSigningKeyArgs and UrlSigningKeyOutput values.
// You can construct a concrete instance of `UrlSigningKeyInput` via:
//
//          UrlSigningKeyArgs{...}
type UrlSigningKeyInput interface {
	pulumi.Input

	ToUrlSigningKeyOutput() UrlSigningKeyOutput
	ToUrlSigningKeyOutputWithContext(context.Context) UrlSigningKeyOutput
}

// Url signing key
type UrlSigningKeyArgs struct {
	// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// Defines the parameters for using customer key vault for Url Signing Key.
	KeySourceParameters KeyVaultSigningKeyParametersInput `pulumi:"keySourceParameters"`
}

func (UrlSigningKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningKey)(nil)).Elem()
}

func (i UrlSigningKeyArgs) ToUrlSigningKeyOutput() UrlSigningKeyOutput {
	return i.ToUrlSigningKeyOutputWithContext(context.Background())
}

func (i UrlSigningKeyArgs) ToUrlSigningKeyOutputWithContext(ctx context.Context) UrlSigningKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningKeyOutput)
}

// UrlSigningKeyArrayInput is an input type that accepts UrlSigningKeyArray and UrlSigningKeyArrayOutput values.
// You can construct a concrete instance of `UrlSigningKeyArrayInput` via:
//
//          UrlSigningKeyArray{ UrlSigningKeyArgs{...} }
type UrlSigningKeyArrayInput interface {
	pulumi.Input

	ToUrlSigningKeyArrayOutput() UrlSigningKeyArrayOutput
	ToUrlSigningKeyArrayOutputWithContext(context.Context) UrlSigningKeyArrayOutput
}

type UrlSigningKeyArray []UrlSigningKeyInput

func (UrlSigningKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningKey)(nil)).Elem()
}

func (i UrlSigningKeyArray) ToUrlSigningKeyArrayOutput() UrlSigningKeyArrayOutput {
	return i.ToUrlSigningKeyArrayOutputWithContext(context.Background())
}

func (i UrlSigningKeyArray) ToUrlSigningKeyArrayOutputWithContext(ctx context.Context) UrlSigningKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningKeyArrayOutput)
}

// Url signing key
type UrlSigningKeyOutput struct{ *pulumi.OutputState }

func (UrlSigningKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningKey)(nil)).Elem()
}

func (o UrlSigningKeyOutput) ToUrlSigningKeyOutput() UrlSigningKeyOutput {
	return o
}

func (o UrlSigningKeyOutput) ToUrlSigningKeyOutputWithContext(ctx context.Context) UrlSigningKeyOutput {
	return o
}

// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
func (o UrlSigningKeyOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningKey) string { return v.KeyId }).(pulumi.StringOutput)
}

// Defines the parameters for using customer key vault for Url Signing Key.
func (o UrlSigningKeyOutput) KeySourceParameters() KeyVaultSigningKeyParametersOutput {
	return o.ApplyT(func(v UrlSigningKey) KeyVaultSigningKeyParameters { return v.KeySourceParameters }).(KeyVaultSigningKeyParametersOutput)
}

type UrlSigningKeyArrayOutput struct{ *pulumi.OutputState }

func (UrlSigningKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningKey)(nil)).Elem()
}

func (o UrlSigningKeyArrayOutput) ToUrlSigningKeyArrayOutput() UrlSigningKeyArrayOutput {
	return o
}

func (o UrlSigningKeyArrayOutput) ToUrlSigningKeyArrayOutputWithContext(ctx context.Context) UrlSigningKeyArrayOutput {
	return o
}

func (o UrlSigningKeyArrayOutput) Index(i pulumi.IntInput) UrlSigningKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlSigningKey {
		return vs[0].([]UrlSigningKey)[vs[1].(int)]
	}).(UrlSigningKeyOutput)
}

// Url signing key
type UrlSigningKeyInvokeResponse struct {
	// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
	KeyId string `pulumi:"keyId"`
	// Defines the parameters for using customer key vault for Url Signing Key.
	KeySourceParameters KeyVaultSigningKeyParametersInvokeResponse `pulumi:"keySourceParameters"`
}

// UrlSigningKeyInvokeResponseInput is an input type that accepts UrlSigningKeyInvokeResponseArgs and UrlSigningKeyInvokeResponseOutput values.
// You can construct a concrete instance of `UrlSigningKeyInvokeResponseInput` via:
//
//          UrlSigningKeyInvokeResponseArgs{...}
type UrlSigningKeyInvokeResponseInput interface {
	pulumi.Input

	ToUrlSigningKeyInvokeResponseOutput() UrlSigningKeyInvokeResponseOutput
	ToUrlSigningKeyInvokeResponseOutputWithContext(context.Context) UrlSigningKeyInvokeResponseOutput
}

// Url signing key
type UrlSigningKeyInvokeResponseArgs struct {
	// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// Defines the parameters for using customer key vault for Url Signing Key.
	KeySourceParameters KeyVaultSigningKeyParametersInvokeResponseInput `pulumi:"keySourceParameters"`
}

func (UrlSigningKeyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningKeyInvokeResponse)(nil)).Elem()
}

func (i UrlSigningKeyInvokeResponseArgs) ToUrlSigningKeyInvokeResponseOutput() UrlSigningKeyInvokeResponseOutput {
	return i.ToUrlSigningKeyInvokeResponseOutputWithContext(context.Background())
}

func (i UrlSigningKeyInvokeResponseArgs) ToUrlSigningKeyInvokeResponseOutputWithContext(ctx context.Context) UrlSigningKeyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningKeyInvokeResponseOutput)
}

// UrlSigningKeyInvokeResponseArrayInput is an input type that accepts UrlSigningKeyInvokeResponseArray and UrlSigningKeyInvokeResponseArrayOutput values.
// You can construct a concrete instance of `UrlSigningKeyInvokeResponseArrayInput` via:
//
//          UrlSigningKeyInvokeResponseArray{ UrlSigningKeyInvokeResponseArgs{...} }
type UrlSigningKeyInvokeResponseArrayInput interface {
	pulumi.Input

	ToUrlSigningKeyInvokeResponseArrayOutput() UrlSigningKeyInvokeResponseArrayOutput
	ToUrlSigningKeyInvokeResponseArrayOutputWithContext(context.Context) UrlSigningKeyInvokeResponseArrayOutput
}

type UrlSigningKeyInvokeResponseArray []UrlSigningKeyInvokeResponseInput

func (UrlSigningKeyInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningKeyInvokeResponse)(nil)).Elem()
}

func (i UrlSigningKeyInvokeResponseArray) ToUrlSigningKeyInvokeResponseArrayOutput() UrlSigningKeyInvokeResponseArrayOutput {
	return i.ToUrlSigningKeyInvokeResponseArrayOutputWithContext(context.Background())
}

func (i UrlSigningKeyInvokeResponseArray) ToUrlSigningKeyInvokeResponseArrayOutputWithContext(ctx context.Context) UrlSigningKeyInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningKeyInvokeResponseArrayOutput)
}

// Url signing key
type UrlSigningKeyInvokeResponseOutput struct{ *pulumi.OutputState }

func (UrlSigningKeyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningKeyInvokeResponse)(nil)).Elem()
}

func (o UrlSigningKeyInvokeResponseOutput) ToUrlSigningKeyInvokeResponseOutput() UrlSigningKeyInvokeResponseOutput {
	return o
}

func (o UrlSigningKeyInvokeResponseOutput) ToUrlSigningKeyInvokeResponseOutputWithContext(ctx context.Context) UrlSigningKeyInvokeResponseOutput {
	return o
}

// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
func (o UrlSigningKeyInvokeResponseOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningKeyInvokeResponse) string { return v.KeyId }).(pulumi.StringOutput)
}

// Defines the parameters for using customer key vault for Url Signing Key.
func (o UrlSigningKeyInvokeResponseOutput) KeySourceParameters() KeyVaultSigningKeyParametersInvokeResponseOutput {
	return o.ApplyT(func(v UrlSigningKeyInvokeResponse) KeyVaultSigningKeyParametersInvokeResponse {
		return v.KeySourceParameters
	}).(KeyVaultSigningKeyParametersInvokeResponseOutput)
}

type UrlSigningKeyInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (UrlSigningKeyInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningKeyInvokeResponse)(nil)).Elem()
}

func (o UrlSigningKeyInvokeResponseArrayOutput) ToUrlSigningKeyInvokeResponseArrayOutput() UrlSigningKeyInvokeResponseArrayOutput {
	return o
}

func (o UrlSigningKeyInvokeResponseArrayOutput) ToUrlSigningKeyInvokeResponseArrayOutputWithContext(ctx context.Context) UrlSigningKeyInvokeResponseArrayOutput {
	return o
}

func (o UrlSigningKeyInvokeResponseArrayOutput) Index(i pulumi.IntInput) UrlSigningKeyInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlSigningKeyInvokeResponse {
		return vs[0].([]UrlSigningKeyInvokeResponse)[vs[1].(int)]
	}).(UrlSigningKeyInvokeResponseOutput)
}

// Url signing key
type UrlSigningKeyResponse struct {
	// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
	KeyId string `pulumi:"keyId"`
	// Defines the parameters for using customer key vault for Url Signing Key.
	KeySourceParameters KeyVaultSigningKeyParametersResponse `pulumi:"keySourceParameters"`
}

// UrlSigningKeyResponseInput is an input type that accepts UrlSigningKeyResponseArgs and UrlSigningKeyResponseOutput values.
// You can construct a concrete instance of `UrlSigningKeyResponseInput` via:
//
//          UrlSigningKeyResponseArgs{...}
type UrlSigningKeyResponseInput interface {
	pulumi.Input

	ToUrlSigningKeyResponseOutput() UrlSigningKeyResponseOutput
	ToUrlSigningKeyResponseOutputWithContext(context.Context) UrlSigningKeyResponseOutput
}

// Url signing key
type UrlSigningKeyResponseArgs struct {
	// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// Defines the parameters for using customer key vault for Url Signing Key.
	KeySourceParameters KeyVaultSigningKeyParametersResponseInput `pulumi:"keySourceParameters"`
}

func (UrlSigningKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningKeyResponse)(nil)).Elem()
}

func (i UrlSigningKeyResponseArgs) ToUrlSigningKeyResponseOutput() UrlSigningKeyResponseOutput {
	return i.ToUrlSigningKeyResponseOutputWithContext(context.Background())
}

func (i UrlSigningKeyResponseArgs) ToUrlSigningKeyResponseOutputWithContext(ctx context.Context) UrlSigningKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningKeyResponseOutput)
}

// UrlSigningKeyResponseArrayInput is an input type that accepts UrlSigningKeyResponseArray and UrlSigningKeyResponseArrayOutput values.
// You can construct a concrete instance of `UrlSigningKeyResponseArrayInput` via:
//
//          UrlSigningKeyResponseArray{ UrlSigningKeyResponseArgs{...} }
type UrlSigningKeyResponseArrayInput interface {
	pulumi.Input

	ToUrlSigningKeyResponseArrayOutput() UrlSigningKeyResponseArrayOutput
	ToUrlSigningKeyResponseArrayOutputWithContext(context.Context) UrlSigningKeyResponseArrayOutput
}

type UrlSigningKeyResponseArray []UrlSigningKeyResponseInput

func (UrlSigningKeyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningKeyResponse)(nil)).Elem()
}

func (i UrlSigningKeyResponseArray) ToUrlSigningKeyResponseArrayOutput() UrlSigningKeyResponseArrayOutput {
	return i.ToUrlSigningKeyResponseArrayOutputWithContext(context.Background())
}

func (i UrlSigningKeyResponseArray) ToUrlSigningKeyResponseArrayOutputWithContext(ctx context.Context) UrlSigningKeyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningKeyResponseArrayOutput)
}

// Url signing key
type UrlSigningKeyResponseOutput struct{ *pulumi.OutputState }

func (UrlSigningKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningKeyResponse)(nil)).Elem()
}

func (o UrlSigningKeyResponseOutput) ToUrlSigningKeyResponseOutput() UrlSigningKeyResponseOutput {
	return o
}

func (o UrlSigningKeyResponseOutput) ToUrlSigningKeyResponseOutputWithContext(ctx context.Context) UrlSigningKeyResponseOutput {
	return o
}

// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
func (o UrlSigningKeyResponseOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningKeyResponse) string { return v.KeyId }).(pulumi.StringOutput)
}

// Defines the parameters for using customer key vault for Url Signing Key.
func (o UrlSigningKeyResponseOutput) KeySourceParameters() KeyVaultSigningKeyParametersResponseOutput {
	return o.ApplyT(func(v UrlSigningKeyResponse) KeyVaultSigningKeyParametersResponse { return v.KeySourceParameters }).(KeyVaultSigningKeyParametersResponseOutput)
}

type UrlSigningKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (UrlSigningKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningKeyResponse)(nil)).Elem()
}

func (o UrlSigningKeyResponseArrayOutput) ToUrlSigningKeyResponseArrayOutput() UrlSigningKeyResponseArrayOutput {
	return o
}

func (o UrlSigningKeyResponseArrayOutput) ToUrlSigningKeyResponseArrayOutputWithContext(ctx context.Context) UrlSigningKeyResponseArrayOutput {
	return o
}

func (o UrlSigningKeyResponseArrayOutput) Index(i pulumi.IntInput) UrlSigningKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlSigningKeyResponse {
		return vs[0].([]UrlSigningKeyResponse)[vs[1].(int)]
	}).(UrlSigningKeyResponseOutput)
}

// Defines how to identify a parameter for a specific purpose e.g. expires
type UrlSigningParamIdentifier struct {
	// Indicates the purpose of the parameter
	ParamIndicator string `pulumi:"paramIndicator"`
	// Parameter name
	ParamName string `pulumi:"paramName"`
}

// UrlSigningParamIdentifierInput is an input type that accepts UrlSigningParamIdentifierArgs and UrlSigningParamIdentifierOutput values.
// You can construct a concrete instance of `UrlSigningParamIdentifierInput` via:
//
//          UrlSigningParamIdentifierArgs{...}
type UrlSigningParamIdentifierInput interface {
	pulumi.Input

	ToUrlSigningParamIdentifierOutput() UrlSigningParamIdentifierOutput
	ToUrlSigningParamIdentifierOutputWithContext(context.Context) UrlSigningParamIdentifierOutput
}

// Defines how to identify a parameter for a specific purpose e.g. expires
type UrlSigningParamIdentifierArgs struct {
	// Indicates the purpose of the parameter
	ParamIndicator pulumi.StringInput `pulumi:"paramIndicator"`
	// Parameter name
	ParamName pulumi.StringInput `pulumi:"paramName"`
}

func (UrlSigningParamIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningParamIdentifier)(nil)).Elem()
}

func (i UrlSigningParamIdentifierArgs) ToUrlSigningParamIdentifierOutput() UrlSigningParamIdentifierOutput {
	return i.ToUrlSigningParamIdentifierOutputWithContext(context.Background())
}

func (i UrlSigningParamIdentifierArgs) ToUrlSigningParamIdentifierOutputWithContext(ctx context.Context) UrlSigningParamIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningParamIdentifierOutput)
}

// UrlSigningParamIdentifierArrayInput is an input type that accepts UrlSigningParamIdentifierArray and UrlSigningParamIdentifierArrayOutput values.
// You can construct a concrete instance of `UrlSigningParamIdentifierArrayInput` via:
//
//          UrlSigningParamIdentifierArray{ UrlSigningParamIdentifierArgs{...} }
type UrlSigningParamIdentifierArrayInput interface {
	pulumi.Input

	ToUrlSigningParamIdentifierArrayOutput() UrlSigningParamIdentifierArrayOutput
	ToUrlSigningParamIdentifierArrayOutputWithContext(context.Context) UrlSigningParamIdentifierArrayOutput
}

type UrlSigningParamIdentifierArray []UrlSigningParamIdentifierInput

func (UrlSigningParamIdentifierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningParamIdentifier)(nil)).Elem()
}

func (i UrlSigningParamIdentifierArray) ToUrlSigningParamIdentifierArrayOutput() UrlSigningParamIdentifierArrayOutput {
	return i.ToUrlSigningParamIdentifierArrayOutputWithContext(context.Background())
}

func (i UrlSigningParamIdentifierArray) ToUrlSigningParamIdentifierArrayOutputWithContext(ctx context.Context) UrlSigningParamIdentifierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningParamIdentifierArrayOutput)
}

// Defines how to identify a parameter for a specific purpose e.g. expires
type UrlSigningParamIdentifierOutput struct{ *pulumi.OutputState }

func (UrlSigningParamIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningParamIdentifier)(nil)).Elem()
}

func (o UrlSigningParamIdentifierOutput) ToUrlSigningParamIdentifierOutput() UrlSigningParamIdentifierOutput {
	return o
}

func (o UrlSigningParamIdentifierOutput) ToUrlSigningParamIdentifierOutputWithContext(ctx context.Context) UrlSigningParamIdentifierOutput {
	return o
}

// Indicates the purpose of the parameter
func (o UrlSigningParamIdentifierOutput) ParamIndicator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningParamIdentifier) string { return v.ParamIndicator }).(pulumi.StringOutput)
}

// Parameter name
func (o UrlSigningParamIdentifierOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningParamIdentifier) string { return v.ParamName }).(pulumi.StringOutput)
}

type UrlSigningParamIdentifierArrayOutput struct{ *pulumi.OutputState }

func (UrlSigningParamIdentifierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningParamIdentifier)(nil)).Elem()
}

func (o UrlSigningParamIdentifierArrayOutput) ToUrlSigningParamIdentifierArrayOutput() UrlSigningParamIdentifierArrayOutput {
	return o
}

func (o UrlSigningParamIdentifierArrayOutput) ToUrlSigningParamIdentifierArrayOutputWithContext(ctx context.Context) UrlSigningParamIdentifierArrayOutput {
	return o
}

func (o UrlSigningParamIdentifierArrayOutput) Index(i pulumi.IntInput) UrlSigningParamIdentifierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlSigningParamIdentifier {
		return vs[0].([]UrlSigningParamIdentifier)[vs[1].(int)]
	}).(UrlSigningParamIdentifierOutput)
}

// Defines how to identify a parameter for a specific purpose e.g. expires
type UrlSigningParamIdentifierInvokeResponse struct {
	// Indicates the purpose of the parameter
	ParamIndicator string `pulumi:"paramIndicator"`
	// Parameter name
	ParamName string `pulumi:"paramName"`
}

// UrlSigningParamIdentifierInvokeResponseInput is an input type that accepts UrlSigningParamIdentifierInvokeResponseArgs and UrlSigningParamIdentifierInvokeResponseOutput values.
// You can construct a concrete instance of `UrlSigningParamIdentifierInvokeResponseInput` via:
//
//          UrlSigningParamIdentifierInvokeResponseArgs{...}
type UrlSigningParamIdentifierInvokeResponseInput interface {
	pulumi.Input

	ToUrlSigningParamIdentifierInvokeResponseOutput() UrlSigningParamIdentifierInvokeResponseOutput
	ToUrlSigningParamIdentifierInvokeResponseOutputWithContext(context.Context) UrlSigningParamIdentifierInvokeResponseOutput
}

// Defines how to identify a parameter for a specific purpose e.g. expires
type UrlSigningParamIdentifierInvokeResponseArgs struct {
	// Indicates the purpose of the parameter
	ParamIndicator pulumi.StringInput `pulumi:"paramIndicator"`
	// Parameter name
	ParamName pulumi.StringInput `pulumi:"paramName"`
}

func (UrlSigningParamIdentifierInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningParamIdentifierInvokeResponse)(nil)).Elem()
}

func (i UrlSigningParamIdentifierInvokeResponseArgs) ToUrlSigningParamIdentifierInvokeResponseOutput() UrlSigningParamIdentifierInvokeResponseOutput {
	return i.ToUrlSigningParamIdentifierInvokeResponseOutputWithContext(context.Background())
}

func (i UrlSigningParamIdentifierInvokeResponseArgs) ToUrlSigningParamIdentifierInvokeResponseOutputWithContext(ctx context.Context) UrlSigningParamIdentifierInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningParamIdentifierInvokeResponseOutput)
}

// UrlSigningParamIdentifierInvokeResponseArrayInput is an input type that accepts UrlSigningParamIdentifierInvokeResponseArray and UrlSigningParamIdentifierInvokeResponseArrayOutput values.
// You can construct a concrete instance of `UrlSigningParamIdentifierInvokeResponseArrayInput` via:
//
//          UrlSigningParamIdentifierInvokeResponseArray{ UrlSigningParamIdentifierInvokeResponseArgs{...} }
type UrlSigningParamIdentifierInvokeResponseArrayInput interface {
	pulumi.Input

	ToUrlSigningParamIdentifierInvokeResponseArrayOutput() UrlSigningParamIdentifierInvokeResponseArrayOutput
	ToUrlSigningParamIdentifierInvokeResponseArrayOutputWithContext(context.Context) UrlSigningParamIdentifierInvokeResponseArrayOutput
}

type UrlSigningParamIdentifierInvokeResponseArray []UrlSigningParamIdentifierInvokeResponseInput

func (UrlSigningParamIdentifierInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningParamIdentifierInvokeResponse)(nil)).Elem()
}

func (i UrlSigningParamIdentifierInvokeResponseArray) ToUrlSigningParamIdentifierInvokeResponseArrayOutput() UrlSigningParamIdentifierInvokeResponseArrayOutput {
	return i.ToUrlSigningParamIdentifierInvokeResponseArrayOutputWithContext(context.Background())
}

func (i UrlSigningParamIdentifierInvokeResponseArray) ToUrlSigningParamIdentifierInvokeResponseArrayOutputWithContext(ctx context.Context) UrlSigningParamIdentifierInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningParamIdentifierInvokeResponseArrayOutput)
}

// Defines how to identify a parameter for a specific purpose e.g. expires
type UrlSigningParamIdentifierInvokeResponseOutput struct{ *pulumi.OutputState }

func (UrlSigningParamIdentifierInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningParamIdentifierInvokeResponse)(nil)).Elem()
}

func (o UrlSigningParamIdentifierInvokeResponseOutput) ToUrlSigningParamIdentifierInvokeResponseOutput() UrlSigningParamIdentifierInvokeResponseOutput {
	return o
}

func (o UrlSigningParamIdentifierInvokeResponseOutput) ToUrlSigningParamIdentifierInvokeResponseOutputWithContext(ctx context.Context) UrlSigningParamIdentifierInvokeResponseOutput {
	return o
}

// Indicates the purpose of the parameter
func (o UrlSigningParamIdentifierInvokeResponseOutput) ParamIndicator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningParamIdentifierInvokeResponse) string { return v.ParamIndicator }).(pulumi.StringOutput)
}

// Parameter name
func (o UrlSigningParamIdentifierInvokeResponseOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningParamIdentifierInvokeResponse) string { return v.ParamName }).(pulumi.StringOutput)
}

type UrlSigningParamIdentifierInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (UrlSigningParamIdentifierInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningParamIdentifierInvokeResponse)(nil)).Elem()
}

func (o UrlSigningParamIdentifierInvokeResponseArrayOutput) ToUrlSigningParamIdentifierInvokeResponseArrayOutput() UrlSigningParamIdentifierInvokeResponseArrayOutput {
	return o
}

func (o UrlSigningParamIdentifierInvokeResponseArrayOutput) ToUrlSigningParamIdentifierInvokeResponseArrayOutputWithContext(ctx context.Context) UrlSigningParamIdentifierInvokeResponseArrayOutput {
	return o
}

func (o UrlSigningParamIdentifierInvokeResponseArrayOutput) Index(i pulumi.IntInput) UrlSigningParamIdentifierInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlSigningParamIdentifierInvokeResponse {
		return vs[0].([]UrlSigningParamIdentifierInvokeResponse)[vs[1].(int)]
	}).(UrlSigningParamIdentifierInvokeResponseOutput)
}

// Defines how to identify a parameter for a specific purpose e.g. expires
type UrlSigningParamIdentifierResponse struct {
	// Indicates the purpose of the parameter
	ParamIndicator string `pulumi:"paramIndicator"`
	// Parameter name
	ParamName string `pulumi:"paramName"`
}

// UrlSigningParamIdentifierResponseInput is an input type that accepts UrlSigningParamIdentifierResponseArgs and UrlSigningParamIdentifierResponseOutput values.
// You can construct a concrete instance of `UrlSigningParamIdentifierResponseInput` via:
//
//          UrlSigningParamIdentifierResponseArgs{...}
type UrlSigningParamIdentifierResponseInput interface {
	pulumi.Input

	ToUrlSigningParamIdentifierResponseOutput() UrlSigningParamIdentifierResponseOutput
	ToUrlSigningParamIdentifierResponseOutputWithContext(context.Context) UrlSigningParamIdentifierResponseOutput
}

// Defines how to identify a parameter for a specific purpose e.g. expires
type UrlSigningParamIdentifierResponseArgs struct {
	// Indicates the purpose of the parameter
	ParamIndicator pulumi.StringInput `pulumi:"paramIndicator"`
	// Parameter name
	ParamName pulumi.StringInput `pulumi:"paramName"`
}

func (UrlSigningParamIdentifierResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningParamIdentifierResponse)(nil)).Elem()
}

func (i UrlSigningParamIdentifierResponseArgs) ToUrlSigningParamIdentifierResponseOutput() UrlSigningParamIdentifierResponseOutput {
	return i.ToUrlSigningParamIdentifierResponseOutputWithContext(context.Background())
}

func (i UrlSigningParamIdentifierResponseArgs) ToUrlSigningParamIdentifierResponseOutputWithContext(ctx context.Context) UrlSigningParamIdentifierResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningParamIdentifierResponseOutput)
}

// UrlSigningParamIdentifierResponseArrayInput is an input type that accepts UrlSigningParamIdentifierResponseArray and UrlSigningParamIdentifierResponseArrayOutput values.
// You can construct a concrete instance of `UrlSigningParamIdentifierResponseArrayInput` via:
//
//          UrlSigningParamIdentifierResponseArray{ UrlSigningParamIdentifierResponseArgs{...} }
type UrlSigningParamIdentifierResponseArrayInput interface {
	pulumi.Input

	ToUrlSigningParamIdentifierResponseArrayOutput() UrlSigningParamIdentifierResponseArrayOutput
	ToUrlSigningParamIdentifierResponseArrayOutputWithContext(context.Context) UrlSigningParamIdentifierResponseArrayOutput
}

type UrlSigningParamIdentifierResponseArray []UrlSigningParamIdentifierResponseInput

func (UrlSigningParamIdentifierResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningParamIdentifierResponse)(nil)).Elem()
}

func (i UrlSigningParamIdentifierResponseArray) ToUrlSigningParamIdentifierResponseArrayOutput() UrlSigningParamIdentifierResponseArrayOutput {
	return i.ToUrlSigningParamIdentifierResponseArrayOutputWithContext(context.Background())
}

func (i UrlSigningParamIdentifierResponseArray) ToUrlSigningParamIdentifierResponseArrayOutputWithContext(ctx context.Context) UrlSigningParamIdentifierResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningParamIdentifierResponseArrayOutput)
}

// Defines how to identify a parameter for a specific purpose e.g. expires
type UrlSigningParamIdentifierResponseOutput struct{ *pulumi.OutputState }

func (UrlSigningParamIdentifierResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningParamIdentifierResponse)(nil)).Elem()
}

func (o UrlSigningParamIdentifierResponseOutput) ToUrlSigningParamIdentifierResponseOutput() UrlSigningParamIdentifierResponseOutput {
	return o
}

func (o UrlSigningParamIdentifierResponseOutput) ToUrlSigningParamIdentifierResponseOutputWithContext(ctx context.Context) UrlSigningParamIdentifierResponseOutput {
	return o
}

// Indicates the purpose of the parameter
func (o UrlSigningParamIdentifierResponseOutput) ParamIndicator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningParamIdentifierResponse) string { return v.ParamIndicator }).(pulumi.StringOutput)
}

// Parameter name
func (o UrlSigningParamIdentifierResponseOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningParamIdentifierResponse) string { return v.ParamName }).(pulumi.StringOutput)
}

type UrlSigningParamIdentifierResponseArrayOutput struct{ *pulumi.OutputState }

func (UrlSigningParamIdentifierResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningParamIdentifierResponse)(nil)).Elem()
}

func (o UrlSigningParamIdentifierResponseArrayOutput) ToUrlSigningParamIdentifierResponseArrayOutput() UrlSigningParamIdentifierResponseArrayOutput {
	return o
}

func (o UrlSigningParamIdentifierResponseArrayOutput) ToUrlSigningParamIdentifierResponseArrayOutputWithContext(ctx context.Context) UrlSigningParamIdentifierResponseArrayOutput {
	return o
}

func (o UrlSigningParamIdentifierResponseArrayOutput) Index(i pulumi.IntInput) UrlSigningParamIdentifierResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlSigningParamIdentifierResponse {
		return vs[0].([]UrlSigningParamIdentifierResponse)[vs[1].(int)]
	}).(UrlSigningParamIdentifierResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(CacheExpirationActionParametersOutput{})
	pulumi.RegisterOutputType(CacheExpirationActionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(CacheExpirationActionParametersResponseOutput{})
	pulumi.RegisterOutputType(CacheKeyQueryStringActionParametersOutput{})
	pulumi.RegisterOutputType(CacheKeyQueryStringActionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(CacheKeyQueryStringActionParametersResponseOutput{})
	pulumi.RegisterOutputType(CdnEndpointInvokeResponseOutput{})
	pulumi.RegisterOutputType(CdnEndpointInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(CdnEndpointResponseOutput{})
	pulumi.RegisterOutputType(CdnEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(CookiesMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(CookiesMatchConditionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(CookiesMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleOutput{})
	pulumi.RegisterOutputType(CustomRuleArrayOutput{})
	pulumi.RegisterOutputType(CustomRuleInvokeResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(CustomRuleListOutput{})
	pulumi.RegisterOutputType(CustomRuleListPtrOutput{})
	pulumi.RegisterOutputType(CustomRuleListInvokeResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleListResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleListResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomRuleResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginGroupOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginGroupArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginGroupInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginGroupInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginGroupResponseOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginResponseOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginResponseArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleOutput{})
	pulumi.RegisterOutputType(DeliveryRuleArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCacheExpirationActionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCacheExpirationActionInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCacheExpirationActionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCacheKeyQueryStringActionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCacheKeyQueryStringActionInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCacheKeyQueryStringActionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCookiesConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCookiesConditionInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCookiesConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleHttpVersionConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleHttpVersionConditionInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleHttpVersionConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleIsDeviceConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleIsDeviceConditionInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleIsDeviceConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRulePostArgsConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRulePostArgsConditionInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRulePostArgsConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleQueryStringConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleQueryStringConditionInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleQueryStringConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRemoteAddressConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRemoteAddressConditionInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRemoteAddressConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestBodyConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestBodyConditionInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestBodyConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestHeaderActionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestHeaderActionInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestHeaderActionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestHeaderConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestHeaderConditionInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestHeaderConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestMethodConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestMethodConditionInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestMethodConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestSchemeConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestSchemeConditionInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestSchemeConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestUriConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestUriConditionInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestUriConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseHeaderActionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseHeaderActionInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseHeaderActionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlFileExtensionConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlFileExtensionConditionInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlFileExtensionConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlFileNameConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlFileNameConditionInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlFileNameConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlPathConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlPathConditionInvokeResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlPathConditionResponseOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersDeliveryPolicyOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersInvokeResponseDeliveryPolicyOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersInvokeResponseWebApplicationFirewallPolicyLinkOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput{})
	pulumi.RegisterOutputType(GeoFilterOutput{})
	pulumi.RegisterOutputType(GeoFilterArrayOutput{})
	pulumi.RegisterOutputType(GeoFilterInvokeResponseOutput{})
	pulumi.RegisterOutputType(GeoFilterInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(GeoFilterResponseOutput{})
	pulumi.RegisterOutputType(GeoFilterResponseArrayOutput{})
	pulumi.RegisterOutputType(HeaderActionParametersOutput{})
	pulumi.RegisterOutputType(HeaderActionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(HeaderActionParametersResponseOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersPtrOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersResponseOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersArrayOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersResponseOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersResponseArrayOutput{})
	pulumi.RegisterOutputType(HttpVersionMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(HttpVersionMatchConditionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(HttpVersionMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(IsDeviceMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(IsDeviceMatchConditionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(IsDeviceMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultSigningKeyParametersOutput{})
	pulumi.RegisterOutputType(KeyVaultSigningKeyParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultSigningKeyParametersResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideInvokeResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideInvokeResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetInvokeResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListPtrOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListInvokeResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetResponseArrayOutput{})
	pulumi.RegisterOutputType(MatchConditionOutput{})
	pulumi.RegisterOutputType(MatchConditionArrayOutput{})
	pulumi.RegisterOutputType(MatchConditionInvokeResponseOutput{})
	pulumi.RegisterOutputType(MatchConditionInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(MatchConditionResponseOutput{})
	pulumi.RegisterOutputType(MatchConditionResponseArrayOutput{})
	pulumi.RegisterOutputType(PolicySettingsOutput{})
	pulumi.RegisterOutputType(PolicySettingsPtrOutput{})
	pulumi.RegisterOutputType(PolicySettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(PolicySettingsResponseOutput{})
	pulumi.RegisterOutputType(PolicySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PostArgsMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(PostArgsMatchConditionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(PostArgsMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(QueryStringMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(QueryStringMatchConditionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(QueryStringMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(RateLimitRuleOutput{})
	pulumi.RegisterOutputType(RateLimitRuleArrayOutput{})
	pulumi.RegisterOutputType(RateLimitRuleInvokeResponseOutput{})
	pulumi.RegisterOutputType(RateLimitRuleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(RateLimitRuleListOutput{})
	pulumi.RegisterOutputType(RateLimitRuleListPtrOutput{})
	pulumi.RegisterOutputType(RateLimitRuleListInvokeResponseOutput{})
	pulumi.RegisterOutputType(RateLimitRuleListResponseOutput{})
	pulumi.RegisterOutputType(RateLimitRuleListResponsePtrOutput{})
	pulumi.RegisterOutputType(RateLimitRuleResponseOutput{})
	pulumi.RegisterOutputType(RateLimitRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RemoteAddressMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(RemoteAddressMatchConditionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(RemoteAddressMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(RequestBodyMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(RequestBodyMatchConditionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(RequestBodyMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(RequestHeaderMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(RequestHeaderMatchConditionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(RequestHeaderMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(RequestMethodMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(RequestMethodMatchConditionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(RequestMethodMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(RequestSchemeMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(RequestSchemeMatchConditionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(RequestSchemeMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(RequestUriMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(RequestUriMatchConditionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(RequestUriMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(ResourceReferenceOutput{})
	pulumi.RegisterOutputType(ResourceReferencePtrOutput{})
	pulumi.RegisterOutputType(ResourceReferenceArrayOutput{})
	pulumi.RegisterOutputType(ResourceReferenceInvokeResponseOutput{})
	pulumi.RegisterOutputType(ResourceReferenceInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersPtrOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersResponseOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuInvokeResponseOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(UrlFileExtensionMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(UrlFileExtensionMatchConditionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(UrlFileExtensionMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlFileNameMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(UrlFileNameMatchConditionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(UrlFileNameMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlPathMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(UrlPathMatchConditionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(UrlPathMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlRedirectActionOutput{})
	pulumi.RegisterOutputType(UrlRedirectActionInvokeResponseOutput{})
	pulumi.RegisterOutputType(UrlRedirectActionParametersOutput{})
	pulumi.RegisterOutputType(UrlRedirectActionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(UrlRedirectActionParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlRedirectActionResponseOutput{})
	pulumi.RegisterOutputType(UrlRewriteActionOutput{})
	pulumi.RegisterOutputType(UrlRewriteActionInvokeResponseOutput{})
	pulumi.RegisterOutputType(UrlRewriteActionParametersOutput{})
	pulumi.RegisterOutputType(UrlRewriteActionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(UrlRewriteActionParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlRewriteActionResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningActionOutput{})
	pulumi.RegisterOutputType(UrlSigningActionInvokeResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningActionParametersOutput{})
	pulumi.RegisterOutputType(UrlSigningActionParametersInvokeResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningActionParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningActionResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningKeyOutput{})
	pulumi.RegisterOutputType(UrlSigningKeyArrayOutput{})
	pulumi.RegisterOutputType(UrlSigningKeyInvokeResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningKeyInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(UrlSigningKeyResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(UrlSigningParamIdentifierOutput{})
	pulumi.RegisterOutputType(UrlSigningParamIdentifierArrayOutput{})
	pulumi.RegisterOutputType(UrlSigningParamIdentifierInvokeResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningParamIdentifierInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(UrlSigningParamIdentifierResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningParamIdentifierResponseArrayOutput{})
}
