// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190615preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParameters struct {
	// Caching behavior for the requests
	CacheBehavior string `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration *string `pulumi:"cacheDuration"`
	// The level at which the content needs to be cached.
	CacheType string `pulumi:"cacheType"`
	OdataType string `pulumi:"odataType"`
}

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParametersResponse struct {
	// Caching behavior for the requests
	CacheBehavior string `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration *string `pulumi:"cacheDuration"`
	// The level at which the content needs to be cached.
	CacheType string `pulumi:"cacheType"`
	OdataType string `pulumi:"odataType"`
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParameters struct {
	OdataType string `pulumi:"odataType"`
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
	// Caching behavior for the requests
	QueryStringBehavior string `pulumi:"queryStringBehavior"`
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParametersResponse struct {
	OdataType string `pulumi:"odataType"`
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
	// Caching behavior for the requests
	QueryStringBehavior string `pulumi:"queryStringBehavior"`
}

// Defines the parameters for using CDN managed certificate for securing custom domain.
type CdnCertificateSourceParametersResponse struct {
	// Type of certificate used
	CertificateType string `pulumi:"certificateType"`
	OdataType       string `pulumi:"odataType"`
}

// Defines the ARM Resource ID for the linked endpoints
type CdnEndpointResponse struct {
	// ARM Resource ID string.
	Id *string `pulumi:"id"`
}

// Defines the ARM Resource ID for the linked endpoints
type CdnEndpointResponseOutput struct{ *pulumi.OutputState }

func (CdnEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CdnEndpointResponse)(nil)).Elem()
}

func (o CdnEndpointResponseOutput) ToCdnEndpointResponseOutput() CdnEndpointResponseOutput {
	return o
}

func (o CdnEndpointResponseOutput) ToCdnEndpointResponseOutputWithContext(ctx context.Context) CdnEndpointResponseOutput {
	return o
}

// ARM Resource ID string.
func (o CdnEndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CdnEndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type CdnEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (CdnEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CdnEndpointResponse)(nil)).Elem()
}

func (o CdnEndpointResponseArrayOutput) ToCdnEndpointResponseArrayOutput() CdnEndpointResponseArrayOutput {
	return o
}

func (o CdnEndpointResponseArrayOutput) ToCdnEndpointResponseArrayOutputWithContext(ctx context.Context) CdnEndpointResponseArrayOutput {
	return o
}

func (o CdnEndpointResponseArrayOutput) Index(i pulumi.IntInput) CdnEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CdnEndpointResponse {
		return vs[0].([]CdnEndpointResponse)[vs[1].(int)]
	}).(CdnEndpointResponseOutput)
}

// Defines the certificate source parameters using CDN managed certificate for enabling SSL.
type CdnManagedHttpsParametersResponse struct {
	// Defines the source of the SSL certificate.
	// Expected value is 'Cdn'.
	CertificateSource string `pulumi:"certificateSource"`
	// Defines the certificate source parameters using CDN managed certificate for enabling SSL.
	CertificateSourceParameters CdnCertificateSourceParametersResponse `pulumi:"certificateSourceParameters"`
	// TLS protocol version that will be used for Https
	MinimumTlsVersion *string `pulumi:"minimumTlsVersion"`
	// Defines the TLS extension protocol that is used for secure delivery.
	ProtocolType string `pulumi:"protocolType"`
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Cookies to be matched
	Selector string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Cookies to be matched
	Selector string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRule struct {
	// Describes what action to be applied when rule matches
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchCondition `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name string `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority int `pulumi:"priority"`
}

// CustomRuleInput is an input type that accepts CustomRuleArgs and CustomRuleOutput values.
// You can construct a concrete instance of `CustomRuleInput` via:
//
//	CustomRuleArgs{...}
type CustomRuleInput interface {
	pulumi.Input

	ToCustomRuleOutput() CustomRuleOutput
	ToCustomRuleOutputWithContext(context.Context) CustomRuleOutput
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleArgs struct {
	// Describes what action to be applied when rule matches
	Action pulumi.StringInput `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions MatchConditionArrayInput `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name pulumi.StringInput `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (CustomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRule)(nil)).Elem()
}

func (i CustomRuleArgs) ToCustomRuleOutput() CustomRuleOutput {
	return i.ToCustomRuleOutputWithContext(context.Background())
}

func (i CustomRuleArgs) ToCustomRuleOutputWithContext(ctx context.Context) CustomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleOutput)
}

// CustomRuleArrayInput is an input type that accepts CustomRuleArray and CustomRuleArrayOutput values.
// You can construct a concrete instance of `CustomRuleArrayInput` via:
//
//	CustomRuleArray{ CustomRuleArgs{...} }
type CustomRuleArrayInput interface {
	pulumi.Input

	ToCustomRuleArrayOutput() CustomRuleArrayOutput
	ToCustomRuleArrayOutputWithContext(context.Context) CustomRuleArrayOutput
}

type CustomRuleArray []CustomRuleInput

func (CustomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRule)(nil)).Elem()
}

func (i CustomRuleArray) ToCustomRuleArrayOutput() CustomRuleArrayOutput {
	return i.ToCustomRuleArrayOutputWithContext(context.Background())
}

func (i CustomRuleArray) ToCustomRuleArrayOutputWithContext(ctx context.Context) CustomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleArrayOutput)
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleOutput struct{ *pulumi.OutputState }

func (CustomRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRule)(nil)).Elem()
}

func (o CustomRuleOutput) ToCustomRuleOutput() CustomRuleOutput {
	return o
}

func (o CustomRuleOutput) ToCustomRuleOutputWithContext(ctx context.Context) CustomRuleOutput {
	return o
}

// Describes what action to be applied when rule matches
func (o CustomRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRule) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o CustomRuleOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRule) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o CustomRuleOutput) MatchConditions() MatchConditionArrayOutput {
	return o.ApplyT(func(v CustomRule) []MatchCondition { return v.MatchConditions }).(MatchConditionArrayOutput)
}

// Defines the name of the custom rule
func (o CustomRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRule) string { return v.Name }).(pulumi.StringOutput)
}

// Defines in what order this rule be evaluated in the overall list of custom rules
func (o CustomRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v CustomRule) int { return v.Priority }).(pulumi.IntOutput)
}

type CustomRuleArrayOutput struct{ *pulumi.OutputState }

func (CustomRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRule)(nil)).Elem()
}

func (o CustomRuleArrayOutput) ToCustomRuleArrayOutput() CustomRuleArrayOutput {
	return o
}

func (o CustomRuleArrayOutput) ToCustomRuleArrayOutputWithContext(ctx context.Context) CustomRuleArrayOutput {
	return o
}

func (o CustomRuleArrayOutput) Index(i pulumi.IntInput) CustomRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomRule {
		return vs[0].([]CustomRule)[vs[1].(int)]
	}).(CustomRuleOutput)
}

// Defines contents of custom rules
type CustomRuleList struct {
	// List of rules
	Rules []CustomRule `pulumi:"rules"`
}

// CustomRuleListInput is an input type that accepts CustomRuleListArgs and CustomRuleListOutput values.
// You can construct a concrete instance of `CustomRuleListInput` via:
//
//	CustomRuleListArgs{...}
type CustomRuleListInput interface {
	pulumi.Input

	ToCustomRuleListOutput() CustomRuleListOutput
	ToCustomRuleListOutputWithContext(context.Context) CustomRuleListOutput
}

// Defines contents of custom rules
type CustomRuleListArgs struct {
	// List of rules
	Rules CustomRuleArrayInput `pulumi:"rules"`
}

func (CustomRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleList)(nil)).Elem()
}

func (i CustomRuleListArgs) ToCustomRuleListOutput() CustomRuleListOutput {
	return i.ToCustomRuleListOutputWithContext(context.Background())
}

func (i CustomRuleListArgs) ToCustomRuleListOutputWithContext(ctx context.Context) CustomRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListOutput)
}

func (i CustomRuleListArgs) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return i.ToCustomRuleListPtrOutputWithContext(context.Background())
}

func (i CustomRuleListArgs) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListOutput).ToCustomRuleListPtrOutputWithContext(ctx)
}

// CustomRuleListPtrInput is an input type that accepts CustomRuleListArgs, CustomRuleListPtr and CustomRuleListPtrOutput values.
// You can construct a concrete instance of `CustomRuleListPtrInput` via:
//
//	        CustomRuleListArgs{...}
//
//	or:
//
//	        nil
type CustomRuleListPtrInput interface {
	pulumi.Input

	ToCustomRuleListPtrOutput() CustomRuleListPtrOutput
	ToCustomRuleListPtrOutputWithContext(context.Context) CustomRuleListPtrOutput
}

type customRuleListPtrType CustomRuleListArgs

func CustomRuleListPtr(v *CustomRuleListArgs) CustomRuleListPtrInput {
	return (*customRuleListPtrType)(v)
}

func (*customRuleListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleList)(nil)).Elem()
}

func (i *customRuleListPtrType) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return i.ToCustomRuleListPtrOutputWithContext(context.Background())
}

func (i *customRuleListPtrType) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListPtrOutput)
}

// Defines contents of custom rules
type CustomRuleListOutput struct{ *pulumi.OutputState }

func (CustomRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleList)(nil)).Elem()
}

func (o CustomRuleListOutput) ToCustomRuleListOutput() CustomRuleListOutput {
	return o
}

func (o CustomRuleListOutput) ToCustomRuleListOutputWithContext(ctx context.Context) CustomRuleListOutput {
	return o
}

func (o CustomRuleListOutput) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return o.ToCustomRuleListPtrOutputWithContext(context.Background())
}

func (o CustomRuleListOutput) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomRuleList) *CustomRuleList {
		return &v
	}).(CustomRuleListPtrOutput)
}

// List of rules
func (o CustomRuleListOutput) Rules() CustomRuleArrayOutput {
	return o.ApplyT(func(v CustomRuleList) []CustomRule { return v.Rules }).(CustomRuleArrayOutput)
}

type CustomRuleListPtrOutput struct{ *pulumi.OutputState }

func (CustomRuleListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleList)(nil)).Elem()
}

func (o CustomRuleListPtrOutput) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return o
}

func (o CustomRuleListPtrOutput) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return o
}

func (o CustomRuleListPtrOutput) Elem() CustomRuleListOutput {
	return o.ApplyT(func(v *CustomRuleList) CustomRuleList {
		if v != nil {
			return *v
		}
		var ret CustomRuleList
		return ret
	}).(CustomRuleListOutput)
}

// List of rules
func (o CustomRuleListPtrOutput) Rules() CustomRuleArrayOutput {
	return o.ApplyT(func(v *CustomRuleList) []CustomRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(CustomRuleArrayOutput)
}

// Defines contents of custom rules
type CustomRuleListResponse struct {
	// List of rules
	Rules []CustomRuleResponse `pulumi:"rules"`
}

// Defines contents of custom rules
type CustomRuleListResponseOutput struct{ *pulumi.OutputState }

func (CustomRuleListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleListResponse)(nil)).Elem()
}

func (o CustomRuleListResponseOutput) ToCustomRuleListResponseOutput() CustomRuleListResponseOutput {
	return o
}

func (o CustomRuleListResponseOutput) ToCustomRuleListResponseOutputWithContext(ctx context.Context) CustomRuleListResponseOutput {
	return o
}

// List of rules
func (o CustomRuleListResponseOutput) Rules() CustomRuleResponseArrayOutput {
	return o.ApplyT(func(v CustomRuleListResponse) []CustomRuleResponse { return v.Rules }).(CustomRuleResponseArrayOutput)
}

type CustomRuleListResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomRuleListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleListResponse)(nil)).Elem()
}

func (o CustomRuleListResponsePtrOutput) ToCustomRuleListResponsePtrOutput() CustomRuleListResponsePtrOutput {
	return o
}

func (o CustomRuleListResponsePtrOutput) ToCustomRuleListResponsePtrOutputWithContext(ctx context.Context) CustomRuleListResponsePtrOutput {
	return o
}

func (o CustomRuleListResponsePtrOutput) Elem() CustomRuleListResponseOutput {
	return o.ApplyT(func(v *CustomRuleListResponse) CustomRuleListResponse {
		if v != nil {
			return *v
		}
		var ret CustomRuleListResponse
		return ret
	}).(CustomRuleListResponseOutput)
}

// List of rules
func (o CustomRuleListResponsePtrOutput) Rules() CustomRuleResponseArrayOutput {
	return o.ApplyT(func(v *CustomRuleListResponse) []CustomRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(CustomRuleResponseArrayOutput)
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleResponse struct {
	// Describes what action to be applied when rule matches
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchConditionResponse `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name string `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority int `pulumi:"priority"`
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleResponseOutput struct{ *pulumi.OutputState }

func (CustomRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleResponse)(nil)).Elem()
}

func (o CustomRuleResponseOutput) ToCustomRuleResponseOutput() CustomRuleResponseOutput {
	return o
}

func (o CustomRuleResponseOutput) ToCustomRuleResponseOutputWithContext(ctx context.Context) CustomRuleResponseOutput {
	return o
}

// Describes what action to be applied when rule matches
func (o CustomRuleResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRuleResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o CustomRuleResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRuleResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o CustomRuleResponseOutput) MatchConditions() MatchConditionResponseArrayOutput {
	return o.ApplyT(func(v CustomRuleResponse) []MatchConditionResponse { return v.MatchConditions }).(MatchConditionResponseArrayOutput)
}

// Defines the name of the custom rule
func (o CustomRuleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRuleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines in what order this rule be evaluated in the overall list of custom rules
func (o CustomRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v CustomRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

type CustomRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (CustomRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRuleResponse)(nil)).Elem()
}

func (o CustomRuleResponseArrayOutput) ToCustomRuleResponseArrayOutput() CustomRuleResponseArrayOutput {
	return o
}

func (o CustomRuleResponseArrayOutput) ToCustomRuleResponseArrayOutputWithContext(ctx context.Context) CustomRuleResponseArrayOutput {
	return o
}

func (o CustomRuleResponseArrayOutput) Index(i pulumi.IntInput) CustomRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomRuleResponse {
		return vs[0].([]CustomRuleResponse)[vs[1].(int)]
	}).(CustomRuleResponseOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOrigin struct {
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address.
	HostName string `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535
	HttpPort *int `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535
	HttpsPort *int `pulumi:"httpsPort"`
	// Origin name
	Name string `pulumi:"name"`
}

// DeepCreatedOriginInput is an input type that accepts DeepCreatedOriginArgs and DeepCreatedOriginOutput values.
// You can construct a concrete instance of `DeepCreatedOriginInput` via:
//
//	DeepCreatedOriginArgs{...}
type DeepCreatedOriginInput interface {
	pulumi.Input

	ToDeepCreatedOriginOutput() DeepCreatedOriginOutput
	ToDeepCreatedOriginOutputWithContext(context.Context) DeepCreatedOriginOutput
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginArgs struct {
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// Origin name
	Name pulumi.StringInput `pulumi:"name"`
}

func (DeepCreatedOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOrigin)(nil)).Elem()
}

func (i DeepCreatedOriginArgs) ToDeepCreatedOriginOutput() DeepCreatedOriginOutput {
	return i.ToDeepCreatedOriginOutputWithContext(context.Background())
}

func (i DeepCreatedOriginArgs) ToDeepCreatedOriginOutputWithContext(ctx context.Context) DeepCreatedOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginOutput)
}

// DeepCreatedOriginArrayInput is an input type that accepts DeepCreatedOriginArray and DeepCreatedOriginArrayOutput values.
// You can construct a concrete instance of `DeepCreatedOriginArrayInput` via:
//
//	DeepCreatedOriginArray{ DeepCreatedOriginArgs{...} }
type DeepCreatedOriginArrayInput interface {
	pulumi.Input

	ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput
	ToDeepCreatedOriginArrayOutputWithContext(context.Context) DeepCreatedOriginArrayOutput
}

type DeepCreatedOriginArray []DeepCreatedOriginInput

func (DeepCreatedOriginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOrigin)(nil)).Elem()
}

func (i DeepCreatedOriginArray) ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput {
	return i.ToDeepCreatedOriginArrayOutputWithContext(context.Background())
}

func (i DeepCreatedOriginArray) ToDeepCreatedOriginArrayOutputWithContext(ctx context.Context) DeepCreatedOriginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginArrayOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOrigin)(nil)).Elem()
}

func (o DeepCreatedOriginOutput) ToDeepCreatedOriginOutput() DeepCreatedOriginOutput {
	return o
}

func (o DeepCreatedOriginOutput) ToDeepCreatedOriginOutputWithContext(ctx context.Context) DeepCreatedOriginOutput {
	return o
}

// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address.
func (o DeepCreatedOriginOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) string { return v.HostName }).(pulumi.StringOutput)
}

// The value of the HTTP port. Must be between 1 and 65535
func (o DeepCreatedOriginOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The value of the HTTPS port. Must be between 1 and 65535
func (o DeepCreatedOriginOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Origin name
func (o DeepCreatedOriginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) string { return v.Name }).(pulumi.StringOutput)
}

type DeepCreatedOriginArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOrigin)(nil)).Elem()
}

func (o DeepCreatedOriginArrayOutput) ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput {
	return o
}

func (o DeepCreatedOriginArrayOutput) ToDeepCreatedOriginArrayOutputWithContext(ctx context.Context) DeepCreatedOriginArrayOutput {
	return o
}

func (o DeepCreatedOriginArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOrigin {
		return vs[0].([]DeepCreatedOrigin)[vs[1].(int)]
	}).(DeepCreatedOriginOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginResponse struct {
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address.
	HostName string `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535
	HttpPort *int `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535
	HttpsPort *int `pulumi:"httpsPort"`
	// Origin name
	Name string `pulumi:"name"`
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginResponseOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginResponse)(nil)).Elem()
}

func (o DeepCreatedOriginResponseOutput) ToDeepCreatedOriginResponseOutput() DeepCreatedOriginResponseOutput {
	return o
}

func (o DeepCreatedOriginResponseOutput) ToDeepCreatedOriginResponseOutputWithContext(ctx context.Context) DeepCreatedOriginResponseOutput {
	return o
}

// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address.
func (o DeepCreatedOriginResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// The value of the HTTP port. Must be between 1 and 65535
func (o DeepCreatedOriginResponseOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The value of the HTTPS port. Must be between 1 and 65535
func (o DeepCreatedOriginResponseOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Origin name
func (o DeepCreatedOriginResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) string { return v.Name }).(pulumi.StringOutput)
}

type DeepCreatedOriginResponseArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginResponse)(nil)).Elem()
}

func (o DeepCreatedOriginResponseArrayOutput) ToDeepCreatedOriginResponseArrayOutput() DeepCreatedOriginResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginResponseArrayOutput) ToDeepCreatedOriginResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginResponseArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOriginResponse {
		return vs[0].([]DeepCreatedOriginResponse)[vs[1].(int)]
	}).(DeepCreatedOriginResponseOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRule struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions []interface{} `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions []interface{} `pulumi:"conditions"`
	// Name of the rule
	Name *string `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order int `pulumi:"order"`
}

// DeliveryRuleInput is an input type that accepts DeliveryRuleArgs and DeliveryRuleOutput values.
// You can construct a concrete instance of `DeliveryRuleInput` via:
//
//	DeliveryRuleArgs{...}
type DeliveryRuleInput interface {
	pulumi.Input

	ToDeliveryRuleOutput() DeliveryRuleOutput
	ToDeliveryRuleOutputWithContext(context.Context) DeliveryRuleOutput
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleArgs struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions pulumi.ArrayInput `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions pulumi.ArrayInput `pulumi:"conditions"`
	// Name of the rule
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order pulumi.IntInput `pulumi:"order"`
}

func (DeliveryRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRule)(nil)).Elem()
}

func (i DeliveryRuleArgs) ToDeliveryRuleOutput() DeliveryRuleOutput {
	return i.ToDeliveryRuleOutputWithContext(context.Background())
}

func (i DeliveryRuleArgs) ToDeliveryRuleOutputWithContext(ctx context.Context) DeliveryRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleOutput)
}

// DeliveryRuleArrayInput is an input type that accepts DeliveryRuleArray and DeliveryRuleArrayOutput values.
// You can construct a concrete instance of `DeliveryRuleArrayInput` via:
//
//	DeliveryRuleArray{ DeliveryRuleArgs{...} }
type DeliveryRuleArrayInput interface {
	pulumi.Input

	ToDeliveryRuleArrayOutput() DeliveryRuleArrayOutput
	ToDeliveryRuleArrayOutputWithContext(context.Context) DeliveryRuleArrayOutput
}

type DeliveryRuleArray []DeliveryRuleInput

func (DeliveryRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRule)(nil)).Elem()
}

func (i DeliveryRuleArray) ToDeliveryRuleArrayOutput() DeliveryRuleArrayOutput {
	return i.ToDeliveryRuleArrayOutputWithContext(context.Background())
}

func (i DeliveryRuleArray) ToDeliveryRuleArrayOutputWithContext(ctx context.Context) DeliveryRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleArrayOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleOutput struct{ *pulumi.OutputState }

func (DeliveryRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRule)(nil)).Elem()
}

func (o DeliveryRuleOutput) ToDeliveryRuleOutput() DeliveryRuleOutput {
	return o
}

func (o DeliveryRuleOutput) ToDeliveryRuleOutputWithContext(ctx context.Context) DeliveryRuleOutput {
	return o
}

// A list of actions that are executed when all the conditions of a rule are satisfied.
func (o DeliveryRuleOutput) Actions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRule) []interface{} { return v.Actions }).(pulumi.ArrayOutput)
}

// A list of conditions that must be matched for the actions to be executed
func (o DeliveryRuleOutput) Conditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRule) []interface{} { return v.Conditions }).(pulumi.ArrayOutput)
}

// Name of the rule
func (o DeliveryRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
func (o DeliveryRuleOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v DeliveryRule) int { return v.Order }).(pulumi.IntOutput)
}

type DeliveryRuleArrayOutput struct{ *pulumi.OutputState }

func (DeliveryRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRule)(nil)).Elem()
}

func (o DeliveryRuleArrayOutput) ToDeliveryRuleArrayOutput() DeliveryRuleArrayOutput {
	return o
}

func (o DeliveryRuleArrayOutput) ToDeliveryRuleArrayOutputWithContext(ctx context.Context) DeliveryRuleArrayOutput {
	return o
}

func (o DeliveryRuleArrayOutput) Index(i pulumi.IntInput) DeliveryRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryRule {
		return vs[0].([]DeliveryRule)[vs[1].(int)]
	}).(DeliveryRuleOutput)
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheExpiration'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheExpirationActionParameters `pulumi:"parameters"`
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheExpiration'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheExpirationActionParametersResponse `pulumi:"parameters"`
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheKeyQueryString'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheKeyQueryStringActionParameters `pulumi:"parameters"`
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheKeyQueryString'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheKeyQueryStringActionParametersResponse `pulumi:"parameters"`
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'Cookies'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters CookiesMatchConditionParameters `pulumi:"parameters"`
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'Cookies'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters CookiesMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'HttpVersion'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HttpVersionMatchConditionParameters `pulumi:"parameters"`
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'HttpVersion'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HttpVersionMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'IsDevice'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters IsDeviceMatchConditionParameters `pulumi:"parameters"`
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'IsDevice'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters IsDeviceMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'PostArgs'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters PostArgsMatchConditionParameters `pulumi:"parameters"`
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'PostArgs'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters PostArgsMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'QueryString'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters QueryStringMatchConditionParameters `pulumi:"parameters"`
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'QueryString'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters QueryStringMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RemoteAddress'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RemoteAddressMatchConditionParameters `pulumi:"parameters"`
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RemoteAddress'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RemoteAddressMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestBody'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestBodyMatchConditionParameters `pulumi:"parameters"`
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestBody'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestBodyMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyRequestHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParameters `pulumi:"parameters"`
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyRequestHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersResponse `pulumi:"parameters"`
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestHeaderMatchConditionParameters `pulumi:"parameters"`
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestHeaderMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestMethod'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestMethodMatchConditionParameters `pulumi:"parameters"`
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestMethod'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestMethodMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestScheme'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestSchemeMatchConditionParameters `pulumi:"parameters"`
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestScheme'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestSchemeMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestUri'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestUriMatchConditionParameters `pulumi:"parameters"`
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestUri'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestUriMatchConditionParametersResponse `pulumi:"parameters"`
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleResponse struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions []interface{} `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions []interface{} `pulumi:"conditions"`
	// Name of the rule
	Name *string `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order int `pulumi:"order"`
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponse)(nil)).Elem()
}

func (o DeliveryRuleResponseOutput) ToDeliveryRuleResponseOutput() DeliveryRuleResponseOutput {
	return o
}

func (o DeliveryRuleResponseOutput) ToDeliveryRuleResponseOutputWithContext(ctx context.Context) DeliveryRuleResponseOutput {
	return o
}

// A list of actions that are executed when all the conditions of a rule are satisfied.
func (o DeliveryRuleResponseOutput) Actions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) []interface{} { return v.Actions }).(pulumi.ArrayOutput)
}

// A list of conditions that must be matched for the actions to be executed
func (o DeliveryRuleResponseOutput) Conditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) []interface{} { return v.Conditions }).(pulumi.ArrayOutput)
}

// Name of the rule
func (o DeliveryRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
func (o DeliveryRuleResponseOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) int { return v.Order }).(pulumi.IntOutput)
}

type DeliveryRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (DeliveryRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRuleResponse)(nil)).Elem()
}

func (o DeliveryRuleResponseArrayOutput) ToDeliveryRuleResponseArrayOutput() DeliveryRuleResponseArrayOutput {
	return o
}

func (o DeliveryRuleResponseArrayOutput) ToDeliveryRuleResponseArrayOutputWithContext(ctx context.Context) DeliveryRuleResponseArrayOutput {
	return o
}

func (o DeliveryRuleResponseArrayOutput) Index(i pulumi.IntInput) DeliveryRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryRuleResponse {
		return vs[0].([]DeliveryRuleResponse)[vs[1].(int)]
	}).(DeliveryRuleResponseOutput)
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyResponseHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParameters `pulumi:"parameters"`
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyResponseHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersResponse `pulumi:"parameters"`
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileExtension'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileExtensionMatchConditionParameters `pulumi:"parameters"`
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileExtension'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileExtensionMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileName'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileNameMatchConditionParameters `pulumi:"parameters"`
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileName'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileNameMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlPath'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlPathMatchConditionParameters `pulumi:"parameters"`
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlPath'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlPathMatchConditionParametersResponse `pulumi:"parameters"`
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersDeliveryPolicy struct {
	// User-friendly description of the policy.
	Description *string `pulumi:"description"`
	// A list of the delivery rules.
	Rules []DeliveryRule `pulumi:"rules"`
}

// EndpointPropertiesUpdateParametersDeliveryPolicyInput is an input type that accepts EndpointPropertiesUpdateParametersDeliveryPolicyArgs and EndpointPropertiesUpdateParametersDeliveryPolicyOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersDeliveryPolicyInput` via:
//
//	EndpointPropertiesUpdateParametersDeliveryPolicyArgs{...}
type EndpointPropertiesUpdateParametersDeliveryPolicyInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersDeliveryPolicyOutput() EndpointPropertiesUpdateParametersDeliveryPolicyOutput
	ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyOutput
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersDeliveryPolicyArgs struct {
	// User-friendly description of the policy.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A list of the delivery rules.
	Rules DeliveryRuleArrayInput `pulumi:"rules"`
}

func (EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutput() EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return i.ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersDeliveryPolicyOutput)
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersDeliveryPolicyOutput).ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx)
}

// EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput is an input type that accepts EndpointPropertiesUpdateParametersDeliveryPolicyArgs, EndpointPropertiesUpdateParametersDeliveryPolicyPtr and EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput` via:
//
//	        EndpointPropertiesUpdateParametersDeliveryPolicyArgs{...}
//
//	or:
//
//	        nil
type EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput
	ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput
}

type endpointPropertiesUpdateParametersDeliveryPolicyPtrType EndpointPropertiesUpdateParametersDeliveryPolicyArgs

func EndpointPropertiesUpdateParametersDeliveryPolicyPtr(v *EndpointPropertiesUpdateParametersDeliveryPolicyArgs) EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput {
	return (*endpointPropertiesUpdateParametersDeliveryPolicyPtrType)(v)
}

func (*endpointPropertiesUpdateParametersDeliveryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (i *endpointPropertiesUpdateParametersDeliveryPolicyPtrType) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (i *endpointPropertiesUpdateParametersDeliveryPolicyPtrType) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersDeliveryPolicyOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutput() EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o.ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointPropertiesUpdateParametersDeliveryPolicy) *EndpointPropertiesUpdateParametersDeliveryPolicy {
		return &v
	}).(EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersDeliveryPolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) Rules() DeliveryRuleArrayOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersDeliveryPolicy) []DeliveryRule { return v.Rules }).(DeliveryRuleArrayOutput)
}

type EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) Elem() EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersDeliveryPolicy) EndpointPropertiesUpdateParametersDeliveryPolicy {
		if v != nil {
			return *v
		}
		var ret EndpointPropertiesUpdateParametersDeliveryPolicy
		return ret
	}).(EndpointPropertiesUpdateParametersDeliveryPolicyOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersDeliveryPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) Rules() DeliveryRuleArrayOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersDeliveryPolicy) []DeliveryRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(DeliveryRuleArrayOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersResponseDeliveryPolicy struct {
	// User-friendly description of the policy.
	Description *string `pulumi:"description"`
	// A list of the delivery rules.
	Rules []DeliveryRuleResponse `pulumi:"rules"`
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersResponseDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return o
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseDeliveryPolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) Rules() DeliveryRuleResponseArrayOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseDeliveryPolicy) []DeliveryRuleResponse {
		return v.Rules
	}).(DeliveryRuleResponseArrayOutput)
}

type EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersResponseDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) Elem() EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicy) EndpointPropertiesUpdateParametersResponseDeliveryPolicy {
		if v != nil {
			return *v
		}
		var ret EndpointPropertiesUpdateParametersResponseDeliveryPolicy
		return ret
	}).(EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) Rules() DeliveryRuleResponseArrayOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicy) []DeliveryRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(DeliveryRuleResponseArrayOutput)
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o
}

// Resource ID.
func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink) *string {
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) Elem() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink {
		if v != nil {
			return *v
		}
		var ret EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink
		return ret
	}).(EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput)
}

// Resource ID.
func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkInput is an input type that accepts EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs and EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkInput` via:
//
//	EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs{...}
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput
	ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return i.ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput)
}

func (i EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput).ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx)
}

// EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrInput is an input type that accepts EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs, EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtr and EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrInput` via:
//
//	        EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs{...}
//
//	or:
//
//	        nil
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput
	ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput
}

type endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs

func EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtr(v *EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrInput {
	return (*endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType)(v)
}

func (*endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i *endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i *endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink) *EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink {
		return &v
	}).(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

// Resource ID.
func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) Elem() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink {
		if v != nil {
			return *v
		}
		var ret EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink
		return ret
	}).(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput)
}

// Resource ID.
func (o EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilter struct {
	// Action of the geo filter, i.e. allow or block access.
	Action GeoFilterActions `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes []string `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath string `pulumi:"relativePath"`
}

// GeoFilterInput is an input type that accepts GeoFilterArgs and GeoFilterOutput values.
// You can construct a concrete instance of `GeoFilterInput` via:
//
//	GeoFilterArgs{...}
type GeoFilterInput interface {
	pulumi.Input

	ToGeoFilterOutput() GeoFilterOutput
	ToGeoFilterOutputWithContext(context.Context) GeoFilterOutput
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterArgs struct {
	// Action of the geo filter, i.e. allow or block access.
	Action GeoFilterActionsInput `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes pulumi.StringArrayInput `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath pulumi.StringInput `pulumi:"relativePath"`
}

func (GeoFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilter)(nil)).Elem()
}

func (i GeoFilterArgs) ToGeoFilterOutput() GeoFilterOutput {
	return i.ToGeoFilterOutputWithContext(context.Background())
}

func (i GeoFilterArgs) ToGeoFilterOutputWithContext(ctx context.Context) GeoFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterOutput)
}

// GeoFilterArrayInput is an input type that accepts GeoFilterArray and GeoFilterArrayOutput values.
// You can construct a concrete instance of `GeoFilterArrayInput` via:
//
//	GeoFilterArray{ GeoFilterArgs{...} }
type GeoFilterArrayInput interface {
	pulumi.Input

	ToGeoFilterArrayOutput() GeoFilterArrayOutput
	ToGeoFilterArrayOutputWithContext(context.Context) GeoFilterArrayOutput
}

type GeoFilterArray []GeoFilterInput

func (GeoFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilter)(nil)).Elem()
}

func (i GeoFilterArray) ToGeoFilterArrayOutput() GeoFilterArrayOutput {
	return i.ToGeoFilterArrayOutputWithContext(context.Background())
}

func (i GeoFilterArray) ToGeoFilterArrayOutputWithContext(ctx context.Context) GeoFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterArrayOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterOutput struct{ *pulumi.OutputState }

func (GeoFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilter)(nil)).Elem()
}

func (o GeoFilterOutput) ToGeoFilterOutput() GeoFilterOutput {
	return o
}

func (o GeoFilterOutput) ToGeoFilterOutputWithContext(ctx context.Context) GeoFilterOutput {
	return o
}

// Action of the geo filter, i.e. allow or block access.
func (o GeoFilterOutput) Action() GeoFilterActionsOutput {
	return o.ApplyT(func(v GeoFilter) GeoFilterActions { return v.Action }).(GeoFilterActionsOutput)
}

// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
func (o GeoFilterOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GeoFilter) []string { return v.CountryCodes }).(pulumi.StringArrayOutput)
}

// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
func (o GeoFilterOutput) RelativePath() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilter) string { return v.RelativePath }).(pulumi.StringOutput)
}

type GeoFilterArrayOutput struct{ *pulumi.OutputState }

func (GeoFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilter)(nil)).Elem()
}

func (o GeoFilterArrayOutput) ToGeoFilterArrayOutput() GeoFilterArrayOutput {
	return o
}

func (o GeoFilterArrayOutput) ToGeoFilterArrayOutputWithContext(ctx context.Context) GeoFilterArrayOutput {
	return o
}

func (o GeoFilterArrayOutput) Index(i pulumi.IntInput) GeoFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoFilter {
		return vs[0].([]GeoFilter)[vs[1].(int)]
	}).(GeoFilterOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterResponse struct {
	// Action of the geo filter, i.e. allow or block access.
	Action string `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes []string `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath string `pulumi:"relativePath"`
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterResponseOutput struct{ *pulumi.OutputState }

func (GeoFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilterResponse)(nil)).Elem()
}

func (o GeoFilterResponseOutput) ToGeoFilterResponseOutput() GeoFilterResponseOutput {
	return o
}

func (o GeoFilterResponseOutput) ToGeoFilterResponseOutputWithContext(ctx context.Context) GeoFilterResponseOutput {
	return o
}

// Action of the geo filter, i.e. allow or block access.
func (o GeoFilterResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilterResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
func (o GeoFilterResponseOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GeoFilterResponse) []string { return v.CountryCodes }).(pulumi.StringArrayOutput)
}

// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
func (o GeoFilterResponseOutput) RelativePath() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilterResponse) string { return v.RelativePath }).(pulumi.StringOutput)
}

type GeoFilterResponseArrayOutput struct{ *pulumi.OutputState }

func (GeoFilterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilterResponse)(nil)).Elem()
}

func (o GeoFilterResponseArrayOutput) ToGeoFilterResponseArrayOutput() GeoFilterResponseArrayOutput {
	return o
}

func (o GeoFilterResponseArrayOutput) ToGeoFilterResponseArrayOutputWithContext(ctx context.Context) GeoFilterResponseArrayOutput {
	return o
}

func (o GeoFilterResponseArrayOutput) Index(i pulumi.IntInput) GeoFilterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoFilterResponse {
		return vs[0].([]GeoFilterResponse)[vs[1].(int)]
	}).(GeoFilterResponseOutput)
}

// Defines the parameters for the request header action.
type HeaderActionParameters struct {
	// Action to perform
	HeaderAction string `pulumi:"headerAction"`
	// Name of the header to modify
	HeaderName string `pulumi:"headerName"`
	OdataType  string `pulumi:"odataType"`
	// Value for the specified action
	Value *string `pulumi:"value"`
}

// Defines the parameters for the request header action.
type HeaderActionParametersResponse struct {
	// Action to perform
	HeaderAction string `pulumi:"headerAction"`
	// Name of the header to modify
	HeaderName string `pulumi:"headerName"`
	OdataType  string `pulumi:"odataType"`
	// Value for the specified action
	Value *string `pulumi:"value"`
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Describes the parameters for using a user's KeyVault certificate for securing custom domain.
type KeyVaultCertificateSourceParametersResponse struct {
	// Describes the action that shall be taken when the certificate is removed from Key Vault.
	DeleteRule string `pulumi:"deleteRule"`
	OdataType  string `pulumi:"odataType"`
	// Resource group of the user's Key Vault containing the SSL certificate
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of Key Vault Secret (representing the full certificate PFX) in Key Vault.
	SecretName string `pulumi:"secretName"`
	// The version(GUID) of Key Vault Secret in Key Vault.
	SecretVersion string `pulumi:"secretVersion"`
	// Subscription Id of the user's Key Vault containing the SSL certificate
	SubscriptionId string `pulumi:"subscriptionId"`
	// Describes the action that shall be taken when the certificate is updated in Key Vault.
	UpdateRule string `pulumi:"updateRule"`
	// The name of the user's Key Vault containing the SSL certificate
	VaultName string `pulumi:"vaultName"`
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverride struct {
	// Describes the managed rule group within the rule set to override
	RuleGroupName string `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules []ManagedRuleOverride `pulumi:"rules"`
}

// ManagedRuleGroupOverrideInput is an input type that accepts ManagedRuleGroupOverrideArgs and ManagedRuleGroupOverrideOutput values.
// You can construct a concrete instance of `ManagedRuleGroupOverrideInput` via:
//
//	ManagedRuleGroupOverrideArgs{...}
type ManagedRuleGroupOverrideInput interface {
	pulumi.Input

	ToManagedRuleGroupOverrideOutput() ManagedRuleGroupOverrideOutput
	ToManagedRuleGroupOverrideOutputWithContext(context.Context) ManagedRuleGroupOverrideOutput
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideArgs struct {
	// Describes the managed rule group within the rule set to override
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules ManagedRuleOverrideArrayInput `pulumi:"rules"`
}

func (ManagedRuleGroupOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverride)(nil)).Elem()
}

func (i ManagedRuleGroupOverrideArgs) ToManagedRuleGroupOverrideOutput() ManagedRuleGroupOverrideOutput {
	return i.ToManagedRuleGroupOverrideOutputWithContext(context.Background())
}

func (i ManagedRuleGroupOverrideArgs) ToManagedRuleGroupOverrideOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleGroupOverrideOutput)
}

// ManagedRuleGroupOverrideArrayInput is an input type that accepts ManagedRuleGroupOverrideArray and ManagedRuleGroupOverrideArrayOutput values.
// You can construct a concrete instance of `ManagedRuleGroupOverrideArrayInput` via:
//
//	ManagedRuleGroupOverrideArray{ ManagedRuleGroupOverrideArgs{...} }
type ManagedRuleGroupOverrideArrayInput interface {
	pulumi.Input

	ToManagedRuleGroupOverrideArrayOutput() ManagedRuleGroupOverrideArrayOutput
	ToManagedRuleGroupOverrideArrayOutputWithContext(context.Context) ManagedRuleGroupOverrideArrayOutput
}

type ManagedRuleGroupOverrideArray []ManagedRuleGroupOverrideInput

func (ManagedRuleGroupOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverride)(nil)).Elem()
}

func (i ManagedRuleGroupOverrideArray) ToManagedRuleGroupOverrideArrayOutput() ManagedRuleGroupOverrideArrayOutput {
	return i.ToManagedRuleGroupOverrideArrayOutputWithContext(context.Background())
}

func (i ManagedRuleGroupOverrideArray) ToManagedRuleGroupOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleGroupOverrideArrayOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverride)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideOutput) ToManagedRuleGroupOverrideOutput() ManagedRuleGroupOverrideOutput {
	return o
}

func (o ManagedRuleGroupOverrideOutput) ToManagedRuleGroupOverrideOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideOutput {
	return o
}

// Describes the managed rule group within the rule set to override
func (o ManagedRuleGroupOverrideOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverride) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
func (o ManagedRuleGroupOverrideOutput) Rules() ManagedRuleOverrideArrayOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverride) []ManagedRuleOverride { return v.Rules }).(ManagedRuleOverrideArrayOutput)
}

type ManagedRuleGroupOverrideArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverride)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideArrayOutput) ToManagedRuleGroupOverrideArrayOutput() ManagedRuleGroupOverrideArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideArrayOutput) ToManagedRuleGroupOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideArrayOutput) Index(i pulumi.IntInput) ManagedRuleGroupOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleGroupOverride {
		return vs[0].([]ManagedRuleGroupOverride)[vs[1].(int)]
	}).(ManagedRuleGroupOverrideOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideResponse struct {
	// Describes the managed rule group within the rule set to override
	RuleGroupName string `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules []ManagedRuleOverrideResponse `pulumi:"rules"`
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideResponseOutput) ToManagedRuleGroupOverrideResponseOutput() ManagedRuleGroupOverrideResponseOutput {
	return o
}

func (o ManagedRuleGroupOverrideResponseOutput) ToManagedRuleGroupOverrideResponseOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideResponseOutput {
	return o
}

// Describes the managed rule group within the rule set to override
func (o ManagedRuleGroupOverrideResponseOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverrideResponse) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
func (o ManagedRuleGroupOverrideResponseOutput) Rules() ManagedRuleOverrideResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverrideResponse) []ManagedRuleOverrideResponse { return v.Rules }).(ManagedRuleOverrideResponseArrayOutput)
}

type ManagedRuleGroupOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideResponseArrayOutput) ToManagedRuleGroupOverrideResponseArrayOutput() ManagedRuleGroupOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideResponseArrayOutput) ToManagedRuleGroupOverrideResponseArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleGroupOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleGroupOverrideResponse {
		return vs[0].([]ManagedRuleGroupOverrideResponse)[vs[1].(int)]
	}).(ManagedRuleGroupOverrideResponseOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverride struct {
	// Describes the override action to be applied when rule matches.
	Action *string `pulumi:"action"`
	// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// Identifier for the managed rule.
	RuleId string `pulumi:"ruleId"`
}

// ManagedRuleOverrideInput is an input type that accepts ManagedRuleOverrideArgs and ManagedRuleOverrideOutput values.
// You can construct a concrete instance of `ManagedRuleOverrideInput` via:
//
//	ManagedRuleOverrideArgs{...}
type ManagedRuleOverrideInput interface {
	pulumi.Input

	ToManagedRuleOverrideOutput() ManagedRuleOverrideOutput
	ToManagedRuleOverrideOutputWithContext(context.Context) ManagedRuleOverrideOutput
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideArgs struct {
	// Describes the override action to be applied when rule matches.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Identifier for the managed rule.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
}

func (ManagedRuleOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverride)(nil)).Elem()
}

func (i ManagedRuleOverrideArgs) ToManagedRuleOverrideOutput() ManagedRuleOverrideOutput {
	return i.ToManagedRuleOverrideOutputWithContext(context.Background())
}

func (i ManagedRuleOverrideArgs) ToManagedRuleOverrideOutputWithContext(ctx context.Context) ManagedRuleOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleOverrideOutput)
}

// ManagedRuleOverrideArrayInput is an input type that accepts ManagedRuleOverrideArray and ManagedRuleOverrideArrayOutput values.
// You can construct a concrete instance of `ManagedRuleOverrideArrayInput` via:
//
//	ManagedRuleOverrideArray{ ManagedRuleOverrideArgs{...} }
type ManagedRuleOverrideArrayInput interface {
	pulumi.Input

	ToManagedRuleOverrideArrayOutput() ManagedRuleOverrideArrayOutput
	ToManagedRuleOverrideArrayOutputWithContext(context.Context) ManagedRuleOverrideArrayOutput
}

type ManagedRuleOverrideArray []ManagedRuleOverrideInput

func (ManagedRuleOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverride)(nil)).Elem()
}

func (i ManagedRuleOverrideArray) ToManagedRuleOverrideArrayOutput() ManagedRuleOverrideArrayOutput {
	return i.ToManagedRuleOverrideArrayOutputWithContext(context.Background())
}

func (i ManagedRuleOverrideArray) ToManagedRuleOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleOverrideArrayOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverride)(nil)).Elem()
}

func (o ManagedRuleOverrideOutput) ToManagedRuleOverrideOutput() ManagedRuleOverrideOutput {
	return o
}

func (o ManagedRuleOverrideOutput) ToManagedRuleOverrideOutputWithContext(ctx context.Context) ManagedRuleOverrideOutput {
	return o
}

// Describes the override action to be applied when rule matches.
func (o ManagedRuleOverrideOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverride) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
func (o ManagedRuleOverrideOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverride) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Identifier for the managed rule.
func (o ManagedRuleOverrideOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleOverride) string { return v.RuleId }).(pulumi.StringOutput)
}

type ManagedRuleOverrideArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverride)(nil)).Elem()
}

func (o ManagedRuleOverrideArrayOutput) ToManagedRuleOverrideArrayOutput() ManagedRuleOverrideArrayOutput {
	return o
}

func (o ManagedRuleOverrideArrayOutput) ToManagedRuleOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideArrayOutput {
	return o
}

func (o ManagedRuleOverrideArrayOutput) Index(i pulumi.IntInput) ManagedRuleOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleOverride {
		return vs[0].([]ManagedRuleOverride)[vs[1].(int)]
	}).(ManagedRuleOverrideOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideResponse struct {
	// Describes the override action to be applied when rule matches.
	Action *string `pulumi:"action"`
	// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// Identifier for the managed rule.
	RuleId string `pulumi:"ruleId"`
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleOverrideResponseOutput) ToManagedRuleOverrideResponseOutput() ManagedRuleOverrideResponseOutput {
	return o
}

func (o ManagedRuleOverrideResponseOutput) ToManagedRuleOverrideResponseOutputWithContext(ctx context.Context) ManagedRuleOverrideResponseOutput {
	return o
}

// Describes the override action to be applied when rule matches.
func (o ManagedRuleOverrideResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverrideResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
func (o ManagedRuleOverrideResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverrideResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Identifier for the managed rule.
func (o ManagedRuleOverrideResponseOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleOverrideResponse) string { return v.RuleId }).(pulumi.StringOutput)
}

type ManagedRuleOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleOverrideResponseArrayOutput) ToManagedRuleOverrideResponseArrayOutput() ManagedRuleOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleOverrideResponseArrayOutput) ToManagedRuleOverrideResponseArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleOverrideResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleOverrideResponse {
		return vs[0].([]ManagedRuleOverrideResponse)[vs[1].(int)]
	}).(ManagedRuleOverrideResponseOutput)
}

// Defines a managed rule set.
type ManagedRuleSet struct {
	// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
	AnomalyScore *int `pulumi:"anomalyScore"`
	// Defines the rule overrides to apply to the rule set.
	RuleGroupOverrides []ManagedRuleGroupOverride `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType string `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// ManagedRuleSetInput is an input type that accepts ManagedRuleSetArgs and ManagedRuleSetOutput values.
// You can construct a concrete instance of `ManagedRuleSetInput` via:
//
//	ManagedRuleSetArgs{...}
type ManagedRuleSetInput interface {
	pulumi.Input

	ToManagedRuleSetOutput() ManagedRuleSetOutput
	ToManagedRuleSetOutputWithContext(context.Context) ManagedRuleSetOutput
}

// Defines a managed rule set.
type ManagedRuleSetArgs struct {
	// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
	AnomalyScore pulumi.IntPtrInput `pulumi:"anomalyScore"`
	// Defines the rule overrides to apply to the rule set.
	RuleGroupOverrides ManagedRuleGroupOverrideArrayInput `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (ManagedRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSet)(nil)).Elem()
}

func (i ManagedRuleSetArgs) ToManagedRuleSetOutput() ManagedRuleSetOutput {
	return i.ToManagedRuleSetOutputWithContext(context.Background())
}

func (i ManagedRuleSetArgs) ToManagedRuleSetOutputWithContext(ctx context.Context) ManagedRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetOutput)
}

// ManagedRuleSetArrayInput is an input type that accepts ManagedRuleSetArray and ManagedRuleSetArrayOutput values.
// You can construct a concrete instance of `ManagedRuleSetArrayInput` via:
//
//	ManagedRuleSetArray{ ManagedRuleSetArgs{...} }
type ManagedRuleSetArrayInput interface {
	pulumi.Input

	ToManagedRuleSetArrayOutput() ManagedRuleSetArrayOutput
	ToManagedRuleSetArrayOutputWithContext(context.Context) ManagedRuleSetArrayOutput
}

type ManagedRuleSetArray []ManagedRuleSetInput

func (ManagedRuleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSet)(nil)).Elem()
}

func (i ManagedRuleSetArray) ToManagedRuleSetArrayOutput() ManagedRuleSetArrayOutput {
	return i.ToManagedRuleSetArrayOutputWithContext(context.Background())
}

func (i ManagedRuleSetArray) ToManagedRuleSetArrayOutputWithContext(ctx context.Context) ManagedRuleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetArrayOutput)
}

// Defines a managed rule set.
type ManagedRuleSetOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSet)(nil)).Elem()
}

func (o ManagedRuleSetOutput) ToManagedRuleSetOutput() ManagedRuleSetOutput {
	return o
}

func (o ManagedRuleSetOutput) ToManagedRuleSetOutputWithContext(ctx context.Context) ManagedRuleSetOutput {
	return o
}

// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
func (o ManagedRuleSetOutput) AnomalyScore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedRuleSet) *int { return v.AnomalyScore }).(pulumi.IntPtrOutput)
}

// Defines the rule overrides to apply to the rule set.
func (o ManagedRuleSetOutput) RuleGroupOverrides() ManagedRuleGroupOverrideArrayOutput {
	return o.ApplyT(func(v ManagedRuleSet) []ManagedRuleGroupOverride { return v.RuleGroupOverrides }).(ManagedRuleGroupOverrideArrayOutput)
}

// Defines the rule set type to use.
func (o ManagedRuleSetOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSet) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// Defines the version of the rule set to use.
func (o ManagedRuleSetOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSet) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ManagedRuleSetArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSet)(nil)).Elem()
}

func (o ManagedRuleSetArrayOutput) ToManagedRuleSetArrayOutput() ManagedRuleSetArrayOutput {
	return o
}

func (o ManagedRuleSetArrayOutput) ToManagedRuleSetArrayOutputWithContext(ctx context.Context) ManagedRuleSetArrayOutput {
	return o
}

func (o ManagedRuleSetArrayOutput) Index(i pulumi.IntInput) ManagedRuleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleSet {
		return vs[0].([]ManagedRuleSet)[vs[1].(int)]
	}).(ManagedRuleSetOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetList struct {
	// List of rule sets.
	ManagedRuleSets []ManagedRuleSet `pulumi:"managedRuleSets"`
}

// ManagedRuleSetListInput is an input type that accepts ManagedRuleSetListArgs and ManagedRuleSetListOutput values.
// You can construct a concrete instance of `ManagedRuleSetListInput` via:
//
//	ManagedRuleSetListArgs{...}
type ManagedRuleSetListInput interface {
	pulumi.Input

	ToManagedRuleSetListOutput() ManagedRuleSetListOutput
	ToManagedRuleSetListOutputWithContext(context.Context) ManagedRuleSetListOutput
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListArgs struct {
	// List of rule sets.
	ManagedRuleSets ManagedRuleSetArrayInput `pulumi:"managedRuleSets"`
}

func (ManagedRuleSetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetList)(nil)).Elem()
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListOutput() ManagedRuleSetListOutput {
	return i.ToManagedRuleSetListOutputWithContext(context.Background())
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListOutputWithContext(ctx context.Context) ManagedRuleSetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListOutput)
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return i.ToManagedRuleSetListPtrOutputWithContext(context.Background())
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListOutput).ToManagedRuleSetListPtrOutputWithContext(ctx)
}

// ManagedRuleSetListPtrInput is an input type that accepts ManagedRuleSetListArgs, ManagedRuleSetListPtr and ManagedRuleSetListPtrOutput values.
// You can construct a concrete instance of `ManagedRuleSetListPtrInput` via:
//
//	        ManagedRuleSetListArgs{...}
//
//	or:
//
//	        nil
type ManagedRuleSetListPtrInput interface {
	pulumi.Input

	ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput
	ToManagedRuleSetListPtrOutputWithContext(context.Context) ManagedRuleSetListPtrOutput
}

type managedRuleSetListPtrType ManagedRuleSetListArgs

func ManagedRuleSetListPtr(v *ManagedRuleSetListArgs) ManagedRuleSetListPtrInput {
	return (*managedRuleSetListPtrType)(v)
}

func (*managedRuleSetListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetList)(nil)).Elem()
}

func (i *managedRuleSetListPtrType) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return i.ToManagedRuleSetListPtrOutputWithContext(context.Background())
}

func (i *managedRuleSetListPtrType) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListPtrOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetList)(nil)).Elem()
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListOutput() ManagedRuleSetListOutput {
	return o
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListOutputWithContext(ctx context.Context) ManagedRuleSetListOutput {
	return o
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return o.ToManagedRuleSetListPtrOutputWithContext(context.Background())
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedRuleSetList) *ManagedRuleSetList {
		return &v
	}).(ManagedRuleSetListPtrOutput)
}

// List of rule sets.
func (o ManagedRuleSetListOutput) ManagedRuleSets() ManagedRuleSetArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetList) []ManagedRuleSet { return v.ManagedRuleSets }).(ManagedRuleSetArrayOutput)
}

type ManagedRuleSetListPtrOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetList)(nil)).Elem()
}

func (o ManagedRuleSetListPtrOutput) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return o
}

func (o ManagedRuleSetListPtrOutput) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return o
}

func (o ManagedRuleSetListPtrOutput) Elem() ManagedRuleSetListOutput {
	return o.ApplyT(func(v *ManagedRuleSetList) ManagedRuleSetList {
		if v != nil {
			return *v
		}
		var ret ManagedRuleSetList
		return ret
	}).(ManagedRuleSetListOutput)
}

// List of rule sets.
func (o ManagedRuleSetListPtrOutput) ManagedRuleSets() ManagedRuleSetArrayOutput {
	return o.ApplyT(func(v *ManagedRuleSetList) []ManagedRuleSet {
		if v == nil {
			return nil
		}
		return v.ManagedRuleSets
	}).(ManagedRuleSetArrayOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListResponse struct {
	// List of rule sets.
	ManagedRuleSets []ManagedRuleSetResponse `pulumi:"managedRuleSets"`
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetListResponse)(nil)).Elem()
}

func (o ManagedRuleSetListResponseOutput) ToManagedRuleSetListResponseOutput() ManagedRuleSetListResponseOutput {
	return o
}

func (o ManagedRuleSetListResponseOutput) ToManagedRuleSetListResponseOutputWithContext(ctx context.Context) ManagedRuleSetListResponseOutput {
	return o
}

// List of rule sets.
func (o ManagedRuleSetListResponseOutput) ManagedRuleSets() ManagedRuleSetResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetListResponse) []ManagedRuleSetResponse { return v.ManagedRuleSets }).(ManagedRuleSetResponseArrayOutput)
}

type ManagedRuleSetListResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetListResponse)(nil)).Elem()
}

func (o ManagedRuleSetListResponsePtrOutput) ToManagedRuleSetListResponsePtrOutput() ManagedRuleSetListResponsePtrOutput {
	return o
}

func (o ManagedRuleSetListResponsePtrOutput) ToManagedRuleSetListResponsePtrOutputWithContext(ctx context.Context) ManagedRuleSetListResponsePtrOutput {
	return o
}

func (o ManagedRuleSetListResponsePtrOutput) Elem() ManagedRuleSetListResponseOutput {
	return o.ApplyT(func(v *ManagedRuleSetListResponse) ManagedRuleSetListResponse {
		if v != nil {
			return *v
		}
		var ret ManagedRuleSetListResponse
		return ret
	}).(ManagedRuleSetListResponseOutput)
}

// List of rule sets.
func (o ManagedRuleSetListResponsePtrOutput) ManagedRuleSets() ManagedRuleSetResponseArrayOutput {
	return o.ApplyT(func(v *ManagedRuleSetListResponse) []ManagedRuleSetResponse {
		if v == nil {
			return nil
		}
		return v.ManagedRuleSets
	}).(ManagedRuleSetResponseArrayOutput)
}

// Defines a managed rule set.
type ManagedRuleSetResponse struct {
	// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
	AnomalyScore *int `pulumi:"anomalyScore"`
	// Defines the rule overrides to apply to the rule set.
	RuleGroupOverrides []ManagedRuleGroupOverrideResponse `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType string `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// Defines a managed rule set.
type ManagedRuleSetResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetResponse)(nil)).Elem()
}

func (o ManagedRuleSetResponseOutput) ToManagedRuleSetResponseOutput() ManagedRuleSetResponseOutput {
	return o
}

func (o ManagedRuleSetResponseOutput) ToManagedRuleSetResponseOutputWithContext(ctx context.Context) ManagedRuleSetResponseOutput {
	return o
}

// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
func (o ManagedRuleSetResponseOutput) AnomalyScore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) *int { return v.AnomalyScore }).(pulumi.IntPtrOutput)
}

// Defines the rule overrides to apply to the rule set.
func (o ManagedRuleSetResponseOutput) RuleGroupOverrides() ManagedRuleGroupOverrideResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) []ManagedRuleGroupOverrideResponse { return v.RuleGroupOverrides }).(ManagedRuleGroupOverrideResponseArrayOutput)
}

// Defines the rule set type to use.
func (o ManagedRuleSetResponseOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// Defines the version of the rule set to use.
func (o ManagedRuleSetResponseOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ManagedRuleSetResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSetResponse)(nil)).Elem()
}

func (o ManagedRuleSetResponseArrayOutput) ToManagedRuleSetResponseArrayOutput() ManagedRuleSetResponseArrayOutput {
	return o
}

func (o ManagedRuleSetResponseArrayOutput) ToManagedRuleSetResponseArrayOutputWithContext(ctx context.Context) ManagedRuleSetResponseArrayOutput {
	return o
}

func (o ManagedRuleSetResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleSetResponse {
		return vs[0].([]ManagedRuleSetResponse)[vs[1].(int)]
	}).(ManagedRuleSetResponseOutput)
}

// Define match conditions
type MatchCondition struct {
	// List of possible match values.
	MatchValue []string `pulumi:"matchValue"`
	// Match variable to compare against.
	MatchVariable string `pulumi:"matchVariable"`
	// Describes if the result of this condition should be negated.
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
	Selector *string `pulumi:"selector"`
	// List of transforms.
	Transforms []string `pulumi:"transforms"`
}

// MatchConditionInput is an input type that accepts MatchConditionArgs and MatchConditionOutput values.
// You can construct a concrete instance of `MatchConditionInput` via:
//
//	MatchConditionArgs{...}
type MatchConditionInput interface {
	pulumi.Input

	ToMatchConditionOutput() MatchConditionOutput
	ToMatchConditionOutputWithContext(context.Context) MatchConditionOutput
}

// Define match conditions
type MatchConditionArgs struct {
	// List of possible match values.
	MatchValue pulumi.StringArrayInput `pulumi:"matchValue"`
	// Match variable to compare against.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// Describes if the result of this condition should be negated.
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms.
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (MatchConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchCondition)(nil)).Elem()
}

func (i MatchConditionArgs) ToMatchConditionOutput() MatchConditionOutput {
	return i.ToMatchConditionOutputWithContext(context.Background())
}

func (i MatchConditionArgs) ToMatchConditionOutputWithContext(ctx context.Context) MatchConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchConditionOutput)
}

// MatchConditionArrayInput is an input type that accepts MatchConditionArray and MatchConditionArrayOutput values.
// You can construct a concrete instance of `MatchConditionArrayInput` via:
//
//	MatchConditionArray{ MatchConditionArgs{...} }
type MatchConditionArrayInput interface {
	pulumi.Input

	ToMatchConditionArrayOutput() MatchConditionArrayOutput
	ToMatchConditionArrayOutputWithContext(context.Context) MatchConditionArrayOutput
}

type MatchConditionArray []MatchConditionInput

func (MatchConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchCondition)(nil)).Elem()
}

func (i MatchConditionArray) ToMatchConditionArrayOutput() MatchConditionArrayOutput {
	return i.ToMatchConditionArrayOutputWithContext(context.Background())
}

func (i MatchConditionArray) ToMatchConditionArrayOutputWithContext(ctx context.Context) MatchConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchConditionArrayOutput)
}

// Define match conditions
type MatchConditionOutput struct{ *pulumi.OutputState }

func (MatchConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchCondition)(nil)).Elem()
}

func (o MatchConditionOutput) ToMatchConditionOutput() MatchConditionOutput {
	return o
}

func (o MatchConditionOutput) ToMatchConditionOutputWithContext(ctx context.Context) MatchConditionOutput {
	return o
}

// List of possible match values.
func (o MatchConditionOutput) MatchValue() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchCondition) []string { return v.MatchValue }).(pulumi.StringArrayOutput)
}

// Match variable to compare against.
func (o MatchConditionOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v MatchCondition) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// Describes if the result of this condition should be negated.
func (o MatchConditionOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MatchCondition) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o MatchConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v MatchCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
func (o MatchConditionOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MatchCondition) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms.
func (o MatchConditionOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchCondition) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type MatchConditionArrayOutput struct{ *pulumi.OutputState }

func (MatchConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchCondition)(nil)).Elem()
}

func (o MatchConditionArrayOutput) ToMatchConditionArrayOutput() MatchConditionArrayOutput {
	return o
}

func (o MatchConditionArrayOutput) ToMatchConditionArrayOutputWithContext(ctx context.Context) MatchConditionArrayOutput {
	return o
}

func (o MatchConditionArrayOutput) Index(i pulumi.IntInput) MatchConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MatchCondition {
		return vs[0].([]MatchCondition)[vs[1].(int)]
	}).(MatchConditionOutput)
}

// Define match conditions
type MatchConditionResponse struct {
	// List of possible match values.
	MatchValue []string `pulumi:"matchValue"`
	// Match variable to compare against.
	MatchVariable string `pulumi:"matchVariable"`
	// Describes if the result of this condition should be negated.
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
	Selector *string `pulumi:"selector"`
	// List of transforms.
	Transforms []string `pulumi:"transforms"`
}

// Define match conditions
type MatchConditionResponseOutput struct{ *pulumi.OutputState }

func (MatchConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchConditionResponse)(nil)).Elem()
}

func (o MatchConditionResponseOutput) ToMatchConditionResponseOutput() MatchConditionResponseOutput {
	return o
}

func (o MatchConditionResponseOutput) ToMatchConditionResponseOutputWithContext(ctx context.Context) MatchConditionResponseOutput {
	return o
}

// List of possible match values.
func (o MatchConditionResponseOutput) MatchValue() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchConditionResponse) []string { return v.MatchValue }).(pulumi.StringArrayOutput)
}

// Match variable to compare against.
func (o MatchConditionResponseOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v MatchConditionResponse) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// Describes if the result of this condition should be negated.
func (o MatchConditionResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MatchConditionResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o MatchConditionResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v MatchConditionResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
func (o MatchConditionResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MatchConditionResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms.
func (o MatchConditionResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchConditionResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type MatchConditionResponseArrayOutput struct{ *pulumi.OutputState }

func (MatchConditionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchConditionResponse)(nil)).Elem()
}

func (o MatchConditionResponseArrayOutput) ToMatchConditionResponseArrayOutput() MatchConditionResponseArrayOutput {
	return o
}

func (o MatchConditionResponseArrayOutput) ToMatchConditionResponseArrayOutputWithContext(ctx context.Context) MatchConditionResponseArrayOutput {
	return o
}

func (o MatchConditionResponseArrayOutput) Index(i pulumi.IntInput) MatchConditionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MatchConditionResponse {
		return vs[0].([]MatchConditionResponse)[vs[1].(int)]
	}).(MatchConditionResponseOutput)
}

// Defines contents of a web application firewall global configuration
type PolicySettings struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	DefaultCustomBlockResponseBody *string `pulumi:"defaultCustomBlockResponseBody"`
	// If the action type is block, this field defines the default customer overridable http response status code.
	DefaultCustomBlockResponseStatusCode *int `pulumi:"defaultCustomBlockResponseStatusCode"`
	// If action type is redirect, this field represents the default redirect URL for the client.
	DefaultRedirectUrl *string `pulumi:"defaultRedirectUrl"`
	// describes if the policy is in enabled state or disabled state
	EnabledState *string `pulumi:"enabledState"`
	// Describes if it is in detection mode or prevention mode at policy level.
	Mode *string `pulumi:"mode"`
}

// PolicySettingsInput is an input type that accepts PolicySettingsArgs and PolicySettingsOutput values.
// You can construct a concrete instance of `PolicySettingsInput` via:
//
//	PolicySettingsArgs{...}
type PolicySettingsInput interface {
	pulumi.Input

	ToPolicySettingsOutput() PolicySettingsOutput
	ToPolicySettingsOutputWithContext(context.Context) PolicySettingsOutput
}

// Defines contents of a web application firewall global configuration
type PolicySettingsArgs struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	DefaultCustomBlockResponseBody pulumi.StringPtrInput `pulumi:"defaultCustomBlockResponseBody"`
	// If the action type is block, this field defines the default customer overridable http response status code.
	DefaultCustomBlockResponseStatusCode pulumi.IntPtrInput `pulumi:"defaultCustomBlockResponseStatusCode"`
	// If action type is redirect, this field represents the default redirect URL for the client.
	DefaultRedirectUrl pulumi.StringPtrInput `pulumi:"defaultRedirectUrl"`
	// describes if the policy is in enabled state or disabled state
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Describes if it is in detection mode or prevention mode at policy level.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (PolicySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettings)(nil)).Elem()
}

func (i PolicySettingsArgs) ToPolicySettingsOutput() PolicySettingsOutput {
	return i.ToPolicySettingsOutputWithContext(context.Background())
}

func (i PolicySettingsArgs) ToPolicySettingsOutputWithContext(ctx context.Context) PolicySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsOutput)
}

func (i PolicySettingsArgs) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return i.ToPolicySettingsPtrOutputWithContext(context.Background())
}

func (i PolicySettingsArgs) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsOutput).ToPolicySettingsPtrOutputWithContext(ctx)
}

// PolicySettingsPtrInput is an input type that accepts PolicySettingsArgs, PolicySettingsPtr and PolicySettingsPtrOutput values.
// You can construct a concrete instance of `PolicySettingsPtrInput` via:
//
//	        PolicySettingsArgs{...}
//
//	or:
//
//	        nil
type PolicySettingsPtrInput interface {
	pulumi.Input

	ToPolicySettingsPtrOutput() PolicySettingsPtrOutput
	ToPolicySettingsPtrOutputWithContext(context.Context) PolicySettingsPtrOutput
}

type policySettingsPtrType PolicySettingsArgs

func PolicySettingsPtr(v *PolicySettingsArgs) PolicySettingsPtrInput {
	return (*policySettingsPtrType)(v)
}

func (*policySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettings)(nil)).Elem()
}

func (i *policySettingsPtrType) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return i.ToPolicySettingsPtrOutputWithContext(context.Background())
}

func (i *policySettingsPtrType) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsPtrOutput)
}

// Defines contents of a web application firewall global configuration
type PolicySettingsOutput struct{ *pulumi.OutputState }

func (PolicySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettings)(nil)).Elem()
}

func (o PolicySettingsOutput) ToPolicySettingsOutput() PolicySettingsOutput {
	return o
}

func (o PolicySettingsOutput) ToPolicySettingsOutputWithContext(ctx context.Context) PolicySettingsOutput {
	return o
}

func (o PolicySettingsOutput) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return o.ToPolicySettingsPtrOutputWithContext(context.Background())
}

func (o PolicySettingsOutput) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicySettings) *PolicySettings {
		return &v
	}).(PolicySettingsPtrOutput)
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsOutput) DefaultCustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettings) *string { return v.DefaultCustomBlockResponseBody }).(pulumi.StringPtrOutput)
}

// If the action type is block, this field defines the default customer overridable http response status code.
func (o PolicySettingsOutput) DefaultCustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettings) *int { return v.DefaultCustomBlockResponseStatusCode }).(pulumi.IntPtrOutput)
}

// If action type is redirect, this field represents the default redirect URL for the client.
func (o PolicySettingsOutput) DefaultRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettings) *string { return v.DefaultRedirectUrl }).(pulumi.StringPtrOutput)
}

// describes if the policy is in enabled state or disabled state
func (o PolicySettingsOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettings) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o PolicySettingsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettings) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type PolicySettingsPtrOutput struct{ *pulumi.OutputState }

func (PolicySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettings)(nil)).Elem()
}

func (o PolicySettingsPtrOutput) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return o
}

func (o PolicySettingsPtrOutput) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return o
}

func (o PolicySettingsPtrOutput) Elem() PolicySettingsOutput {
	return o.ApplyT(func(v *PolicySettings) PolicySettings {
		if v != nil {
			return *v
		}
		var ret PolicySettings
		return ret
	}).(PolicySettingsOutput)
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsPtrOutput) DefaultCustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.DefaultCustomBlockResponseBody
	}).(pulumi.StringPtrOutput)
}

// If the action type is block, this field defines the default customer overridable http response status code.
func (o PolicySettingsPtrOutput) DefaultCustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *int {
		if v == nil {
			return nil
		}
		return v.DefaultCustomBlockResponseStatusCode
	}).(pulumi.IntPtrOutput)
}

// If action type is redirect, this field represents the default redirect URL for the client.
func (o PolicySettingsPtrOutput) DefaultRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.DefaultRedirectUrl
	}).(pulumi.StringPtrOutput)
}

// describes if the policy is in enabled state or disabled state
func (o PolicySettingsPtrOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.EnabledState
	}).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o PolicySettingsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Defines contents of a web application firewall global configuration
type PolicySettingsResponse struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	DefaultCustomBlockResponseBody *string `pulumi:"defaultCustomBlockResponseBody"`
	// If the action type is block, this field defines the default customer overridable http response status code.
	DefaultCustomBlockResponseStatusCode *int `pulumi:"defaultCustomBlockResponseStatusCode"`
	// If action type is redirect, this field represents the default redirect URL for the client.
	DefaultRedirectUrl *string `pulumi:"defaultRedirectUrl"`
	// describes if the policy is in enabled state or disabled state
	EnabledState *string `pulumi:"enabledState"`
	// Describes if it is in detection mode or prevention mode at policy level.
	Mode *string `pulumi:"mode"`
}

// Defines contents of a web application firewall global configuration
type PolicySettingsResponseOutput struct{ *pulumi.OutputState }

func (PolicySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettingsResponse)(nil)).Elem()
}

func (o PolicySettingsResponseOutput) ToPolicySettingsResponseOutput() PolicySettingsResponseOutput {
	return o
}

func (o PolicySettingsResponseOutput) ToPolicySettingsResponseOutputWithContext(ctx context.Context) PolicySettingsResponseOutput {
	return o
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsResponseOutput) DefaultCustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.DefaultCustomBlockResponseBody }).(pulumi.StringPtrOutput)
}

// If the action type is block, this field defines the default customer overridable http response status code.
func (o PolicySettingsResponseOutput) DefaultCustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *int { return v.DefaultCustomBlockResponseStatusCode }).(pulumi.IntPtrOutput)
}

// If action type is redirect, this field represents the default redirect URL for the client.
func (o PolicySettingsResponseOutput) DefaultRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.DefaultRedirectUrl }).(pulumi.StringPtrOutput)
}

// describes if the policy is in enabled state or disabled state
func (o PolicySettingsResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o PolicySettingsResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type PolicySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PolicySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettingsResponse)(nil)).Elem()
}

func (o PolicySettingsResponsePtrOutput) ToPolicySettingsResponsePtrOutput() PolicySettingsResponsePtrOutput {
	return o
}

func (o PolicySettingsResponsePtrOutput) ToPolicySettingsResponsePtrOutputWithContext(ctx context.Context) PolicySettingsResponsePtrOutput {
	return o
}

func (o PolicySettingsResponsePtrOutput) Elem() PolicySettingsResponseOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) PolicySettingsResponse {
		if v != nil {
			return *v
		}
		var ret PolicySettingsResponse
		return ret
	}).(PolicySettingsResponseOutput)
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsResponsePtrOutput) DefaultCustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultCustomBlockResponseBody
	}).(pulumi.StringPtrOutput)
}

// If the action type is block, this field defines the default customer overridable http response status code.
func (o PolicySettingsResponsePtrOutput) DefaultCustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.DefaultCustomBlockResponseStatusCode
	}).(pulumi.IntPtrOutput)
}

// If action type is redirect, this field represents the default redirect URL for the client.
func (o PolicySettingsResponsePtrOutput) DefaultRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultRedirectUrl
	}).(pulumi.StringPtrOutput)
}

// describes if the policy is in enabled state or disabled state
func (o PolicySettingsResponsePtrOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnabledState
	}).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o PolicySettingsResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of PostArg to be matched
	Selector string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of PostArg to be matched
	Selector string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRule struct {
	// Describes what action to be applied when rule matches
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchCondition `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name string `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority int `pulumi:"priority"`
	// Defines rate limit duration. Default is 1 minute.
	RateLimitDurationInMinutes int `pulumi:"rateLimitDurationInMinutes"`
	// Defines rate limit threshold.
	RateLimitThreshold int `pulumi:"rateLimitThreshold"`
}

// RateLimitRuleInput is an input type that accepts RateLimitRuleArgs and RateLimitRuleOutput values.
// You can construct a concrete instance of `RateLimitRuleInput` via:
//
//	RateLimitRuleArgs{...}
type RateLimitRuleInput interface {
	pulumi.Input

	ToRateLimitRuleOutput() RateLimitRuleOutput
	ToRateLimitRuleOutputWithContext(context.Context) RateLimitRuleOutput
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleArgs struct {
	// Describes what action to be applied when rule matches
	Action pulumi.StringInput `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions MatchConditionArrayInput `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name pulumi.StringInput `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority pulumi.IntInput `pulumi:"priority"`
	// Defines rate limit duration. Default is 1 minute.
	RateLimitDurationInMinutes pulumi.IntInput `pulumi:"rateLimitDurationInMinutes"`
	// Defines rate limit threshold.
	RateLimitThreshold pulumi.IntInput `pulumi:"rateLimitThreshold"`
}

func (RateLimitRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRule)(nil)).Elem()
}

func (i RateLimitRuleArgs) ToRateLimitRuleOutput() RateLimitRuleOutput {
	return i.ToRateLimitRuleOutputWithContext(context.Background())
}

func (i RateLimitRuleArgs) ToRateLimitRuleOutputWithContext(ctx context.Context) RateLimitRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleOutput)
}

// RateLimitRuleArrayInput is an input type that accepts RateLimitRuleArray and RateLimitRuleArrayOutput values.
// You can construct a concrete instance of `RateLimitRuleArrayInput` via:
//
//	RateLimitRuleArray{ RateLimitRuleArgs{...} }
type RateLimitRuleArrayInput interface {
	pulumi.Input

	ToRateLimitRuleArrayOutput() RateLimitRuleArrayOutput
	ToRateLimitRuleArrayOutputWithContext(context.Context) RateLimitRuleArrayOutput
}

type RateLimitRuleArray []RateLimitRuleInput

func (RateLimitRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RateLimitRule)(nil)).Elem()
}

func (i RateLimitRuleArray) ToRateLimitRuleArrayOutput() RateLimitRuleArrayOutput {
	return i.ToRateLimitRuleArrayOutputWithContext(context.Background())
}

func (i RateLimitRuleArray) ToRateLimitRuleArrayOutputWithContext(ctx context.Context) RateLimitRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleArrayOutput)
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleOutput struct{ *pulumi.OutputState }

func (RateLimitRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRule)(nil)).Elem()
}

func (o RateLimitRuleOutput) ToRateLimitRuleOutput() RateLimitRuleOutput {
	return o
}

func (o RateLimitRuleOutput) ToRateLimitRuleOutputWithContext(ctx context.Context) RateLimitRuleOutput {
	return o
}

// Describes what action to be applied when rule matches
func (o RateLimitRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitRule) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o RateLimitRuleOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RateLimitRule) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o RateLimitRuleOutput) MatchConditions() MatchConditionArrayOutput {
	return o.ApplyT(func(v RateLimitRule) []MatchCondition { return v.MatchConditions }).(MatchConditionArrayOutput)
}

// Defines the name of the custom rule
func (o RateLimitRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitRule) string { return v.Name }).(pulumi.StringOutput)
}

// Defines in what order this rule be evaluated in the overall list of custom rules
func (o RateLimitRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Defines rate limit duration. Default is 1 minute.
func (o RateLimitRuleOutput) RateLimitDurationInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRule) int { return v.RateLimitDurationInMinutes }).(pulumi.IntOutput)
}

// Defines rate limit threshold.
func (o RateLimitRuleOutput) RateLimitThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRule) int { return v.RateLimitThreshold }).(pulumi.IntOutput)
}

type RateLimitRuleArrayOutput struct{ *pulumi.OutputState }

func (RateLimitRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RateLimitRule)(nil)).Elem()
}

func (o RateLimitRuleArrayOutput) ToRateLimitRuleArrayOutput() RateLimitRuleArrayOutput {
	return o
}

func (o RateLimitRuleArrayOutput) ToRateLimitRuleArrayOutputWithContext(ctx context.Context) RateLimitRuleArrayOutput {
	return o
}

func (o RateLimitRuleArrayOutput) Index(i pulumi.IntInput) RateLimitRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RateLimitRule {
		return vs[0].([]RateLimitRule)[vs[1].(int)]
	}).(RateLimitRuleOutput)
}

// Defines contents of rate limit rules
type RateLimitRuleList struct {
	// List of rules
	Rules []RateLimitRule `pulumi:"rules"`
}

// RateLimitRuleListInput is an input type that accepts RateLimitRuleListArgs and RateLimitRuleListOutput values.
// You can construct a concrete instance of `RateLimitRuleListInput` via:
//
//	RateLimitRuleListArgs{...}
type RateLimitRuleListInput interface {
	pulumi.Input

	ToRateLimitRuleListOutput() RateLimitRuleListOutput
	ToRateLimitRuleListOutputWithContext(context.Context) RateLimitRuleListOutput
}

// Defines contents of rate limit rules
type RateLimitRuleListArgs struct {
	// List of rules
	Rules RateLimitRuleArrayInput `pulumi:"rules"`
}

func (RateLimitRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleList)(nil)).Elem()
}

func (i RateLimitRuleListArgs) ToRateLimitRuleListOutput() RateLimitRuleListOutput {
	return i.ToRateLimitRuleListOutputWithContext(context.Background())
}

func (i RateLimitRuleListArgs) ToRateLimitRuleListOutputWithContext(ctx context.Context) RateLimitRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleListOutput)
}

func (i RateLimitRuleListArgs) ToRateLimitRuleListPtrOutput() RateLimitRuleListPtrOutput {
	return i.ToRateLimitRuleListPtrOutputWithContext(context.Background())
}

func (i RateLimitRuleListArgs) ToRateLimitRuleListPtrOutputWithContext(ctx context.Context) RateLimitRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleListOutput).ToRateLimitRuleListPtrOutputWithContext(ctx)
}

// RateLimitRuleListPtrInput is an input type that accepts RateLimitRuleListArgs, RateLimitRuleListPtr and RateLimitRuleListPtrOutput values.
// You can construct a concrete instance of `RateLimitRuleListPtrInput` via:
//
//	        RateLimitRuleListArgs{...}
//
//	or:
//
//	        nil
type RateLimitRuleListPtrInput interface {
	pulumi.Input

	ToRateLimitRuleListPtrOutput() RateLimitRuleListPtrOutput
	ToRateLimitRuleListPtrOutputWithContext(context.Context) RateLimitRuleListPtrOutput
}

type rateLimitRuleListPtrType RateLimitRuleListArgs

func RateLimitRuleListPtr(v *RateLimitRuleListArgs) RateLimitRuleListPtrInput {
	return (*rateLimitRuleListPtrType)(v)
}

func (*rateLimitRuleListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitRuleList)(nil)).Elem()
}

func (i *rateLimitRuleListPtrType) ToRateLimitRuleListPtrOutput() RateLimitRuleListPtrOutput {
	return i.ToRateLimitRuleListPtrOutputWithContext(context.Background())
}

func (i *rateLimitRuleListPtrType) ToRateLimitRuleListPtrOutputWithContext(ctx context.Context) RateLimitRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleListPtrOutput)
}

// Defines contents of rate limit rules
type RateLimitRuleListOutput struct{ *pulumi.OutputState }

func (RateLimitRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleList)(nil)).Elem()
}

func (o RateLimitRuleListOutput) ToRateLimitRuleListOutput() RateLimitRuleListOutput {
	return o
}

func (o RateLimitRuleListOutput) ToRateLimitRuleListOutputWithContext(ctx context.Context) RateLimitRuleListOutput {
	return o
}

func (o RateLimitRuleListOutput) ToRateLimitRuleListPtrOutput() RateLimitRuleListPtrOutput {
	return o.ToRateLimitRuleListPtrOutputWithContext(context.Background())
}

func (o RateLimitRuleListOutput) ToRateLimitRuleListPtrOutputWithContext(ctx context.Context) RateLimitRuleListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RateLimitRuleList) *RateLimitRuleList {
		return &v
	}).(RateLimitRuleListPtrOutput)
}

// List of rules
func (o RateLimitRuleListOutput) Rules() RateLimitRuleArrayOutput {
	return o.ApplyT(func(v RateLimitRuleList) []RateLimitRule { return v.Rules }).(RateLimitRuleArrayOutput)
}

type RateLimitRuleListPtrOutput struct{ *pulumi.OutputState }

func (RateLimitRuleListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitRuleList)(nil)).Elem()
}

func (o RateLimitRuleListPtrOutput) ToRateLimitRuleListPtrOutput() RateLimitRuleListPtrOutput {
	return o
}

func (o RateLimitRuleListPtrOutput) ToRateLimitRuleListPtrOutputWithContext(ctx context.Context) RateLimitRuleListPtrOutput {
	return o
}

func (o RateLimitRuleListPtrOutput) Elem() RateLimitRuleListOutput {
	return o.ApplyT(func(v *RateLimitRuleList) RateLimitRuleList {
		if v != nil {
			return *v
		}
		var ret RateLimitRuleList
		return ret
	}).(RateLimitRuleListOutput)
}

// List of rules
func (o RateLimitRuleListPtrOutput) Rules() RateLimitRuleArrayOutput {
	return o.ApplyT(func(v *RateLimitRuleList) []RateLimitRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(RateLimitRuleArrayOutput)
}

// Defines contents of rate limit rules
type RateLimitRuleListResponse struct {
	// List of rules
	Rules []RateLimitRuleResponse `pulumi:"rules"`
}

// Defines contents of rate limit rules
type RateLimitRuleListResponseOutput struct{ *pulumi.OutputState }

func (RateLimitRuleListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleListResponse)(nil)).Elem()
}

func (o RateLimitRuleListResponseOutput) ToRateLimitRuleListResponseOutput() RateLimitRuleListResponseOutput {
	return o
}

func (o RateLimitRuleListResponseOutput) ToRateLimitRuleListResponseOutputWithContext(ctx context.Context) RateLimitRuleListResponseOutput {
	return o
}

// List of rules
func (o RateLimitRuleListResponseOutput) Rules() RateLimitRuleResponseArrayOutput {
	return o.ApplyT(func(v RateLimitRuleListResponse) []RateLimitRuleResponse { return v.Rules }).(RateLimitRuleResponseArrayOutput)
}

type RateLimitRuleListResponsePtrOutput struct{ *pulumi.OutputState }

func (RateLimitRuleListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitRuleListResponse)(nil)).Elem()
}

func (o RateLimitRuleListResponsePtrOutput) ToRateLimitRuleListResponsePtrOutput() RateLimitRuleListResponsePtrOutput {
	return o
}

func (o RateLimitRuleListResponsePtrOutput) ToRateLimitRuleListResponsePtrOutputWithContext(ctx context.Context) RateLimitRuleListResponsePtrOutput {
	return o
}

func (o RateLimitRuleListResponsePtrOutput) Elem() RateLimitRuleListResponseOutput {
	return o.ApplyT(func(v *RateLimitRuleListResponse) RateLimitRuleListResponse {
		if v != nil {
			return *v
		}
		var ret RateLimitRuleListResponse
		return ret
	}).(RateLimitRuleListResponseOutput)
}

// List of rules
func (o RateLimitRuleListResponsePtrOutput) Rules() RateLimitRuleResponseArrayOutput {
	return o.ApplyT(func(v *RateLimitRuleListResponse) []RateLimitRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(RateLimitRuleResponseArrayOutput)
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleResponse struct {
	// Describes what action to be applied when rule matches
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchConditionResponse `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name string `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority int `pulumi:"priority"`
	// Defines rate limit duration. Default is 1 minute.
	RateLimitDurationInMinutes int `pulumi:"rateLimitDurationInMinutes"`
	// Defines rate limit threshold.
	RateLimitThreshold int `pulumi:"rateLimitThreshold"`
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleResponseOutput struct{ *pulumi.OutputState }

func (RateLimitRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleResponse)(nil)).Elem()
}

func (o RateLimitRuleResponseOutput) ToRateLimitRuleResponseOutput() RateLimitRuleResponseOutput {
	return o
}

func (o RateLimitRuleResponseOutput) ToRateLimitRuleResponseOutputWithContext(ctx context.Context) RateLimitRuleResponseOutput {
	return o
}

// Describes what action to be applied when rule matches
func (o RateLimitRuleResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o RateLimitRuleResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o RateLimitRuleResponseOutput) MatchConditions() MatchConditionResponseArrayOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) []MatchConditionResponse { return v.MatchConditions }).(MatchConditionResponseArrayOutput)
}

// Defines the name of the custom rule
func (o RateLimitRuleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines in what order this rule be evaluated in the overall list of custom rules
func (o RateLimitRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Defines rate limit duration. Default is 1 minute.
func (o RateLimitRuleResponseOutput) RateLimitDurationInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) int { return v.RateLimitDurationInMinutes }).(pulumi.IntOutput)
}

// Defines rate limit threshold.
func (o RateLimitRuleResponseOutput) RateLimitThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) int { return v.RateLimitThreshold }).(pulumi.IntOutput)
}

type RateLimitRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RateLimitRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RateLimitRuleResponse)(nil)).Elem()
}

func (o RateLimitRuleResponseArrayOutput) ToRateLimitRuleResponseArrayOutput() RateLimitRuleResponseArrayOutput {
	return o
}

func (o RateLimitRuleResponseArrayOutput) ToRateLimitRuleResponseArrayOutputWithContext(ctx context.Context) RateLimitRuleResponseArrayOutput {
	return o
}

func (o RateLimitRuleResponseArrayOutput) Index(i pulumi.IntInput) RateLimitRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RateLimitRuleResponse {
		return vs[0].([]RateLimitRuleResponse)[vs[1].(int)]
	}).(RateLimitRuleResponseOutput)
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParameters struct {
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParametersResponse struct {
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Header to be matched
	Selector string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Header to be matched
	Selector string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type Sku struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuArgs struct {
	// Name of the pricing tier.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

// Name of the pricing tier.
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuResponse struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// Name of the pricing tier.
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRedirect'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRedirectActionParameters `pulumi:"parameters"`
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParameters struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment *string `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHostname *string `pulumi:"customHostname"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath *string `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
	CustomQueryString *string `pulumi:"customQueryString"`
	// Protocol to use for the redirect. The default value is MatchRequest
	DestinationProtocol *string `pulumi:"destinationProtocol"`
	OdataType           string  `pulumi:"odataType"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType string `pulumi:"redirectType"`
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParametersResponse struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment *string `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHostname *string `pulumi:"customHostname"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath *string `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
	CustomQueryString *string `pulumi:"customQueryString"`
	// Protocol to use for the redirect. The default value is MatchRequest
	DestinationProtocol *string `pulumi:"destinationProtocol"`
	OdataType           string  `pulumi:"odataType"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType string `pulumi:"redirectType"`
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRedirect'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRedirectActionParametersResponse `pulumi:"parameters"`
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRewrite'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRewriteActionParameters `pulumi:"parameters"`
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParameters struct {
	// Define the destination path for be used in the rewrite. This will overwrite the source pattern
	Destination string `pulumi:"destination"`
	OdataType   string `pulumi:"odataType"`
	// If True, the remaining path after the source pattern will be appended to the new destination path.
	PreserveUnmatchedPath *bool `pulumi:"preserveUnmatchedPath"`
	// define a request URI pattern that identifies the type of requests that may be rewritten. Currently, source pattern uses a prefix-based match. To match all URL paths, use "/" as the source pattern value. To match only the root directory and re-write this path, use the origin path field
	SourcePattern string `pulumi:"sourcePattern"`
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParametersResponse struct {
	// Define the destination path for be used in the rewrite. This will overwrite the source pattern
	Destination string `pulumi:"destination"`
	OdataType   string `pulumi:"odataType"`
	// If True, the remaining path after the source pattern will be appended to the new destination path.
	PreserveUnmatchedPath *bool `pulumi:"preserveUnmatchedPath"`
	// define a request URI pattern that identifies the type of requests that may be rewritten. Currently, source pattern uses a prefix-based match. To match all URL paths, use "/" as the source pattern value. To match only the root directory and re-write this path, use the origin path field
	SourcePattern string `pulumi:"sourcePattern"`
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRewrite'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRewriteActionParametersResponse `pulumi:"parameters"`
}

// Defines the certificate source parameters using user's keyvault certificate for enabling SSL.
type UserManagedHttpsParametersResponse struct {
	// Defines the source of the SSL certificate.
	// Expected value is 'AzureKeyVault'.
	CertificateSource string `pulumi:"certificateSource"`
	// Defines the certificate source parameters using user's keyvault certificate for enabling SSL.
	CertificateSourceParameters KeyVaultCertificateSourceParametersResponse `pulumi:"certificateSourceParameters"`
	// TLS protocol version that will be used for Https
	MinimumTlsVersion *string `pulumi:"minimumTlsVersion"`
	// Defines the TLS extension protocol that is used for secure delivery.
	ProtocolType string `pulumi:"protocolType"`
}

func init() {
	pulumi.RegisterOutputType(CdnEndpointResponseOutput{})
	pulumi.RegisterOutputType(CdnEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(CustomRuleOutput{})
	pulumi.RegisterOutputType(CustomRuleArrayOutput{})
	pulumi.RegisterOutputType(CustomRuleListOutput{})
	pulumi.RegisterOutputType(CustomRuleListPtrOutput{})
	pulumi.RegisterOutputType(CustomRuleListResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleListResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomRuleResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginResponseOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginResponseArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleOutput{})
	pulumi.RegisterOutputType(DeliveryRuleArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersDeliveryPolicyOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput{})
	pulumi.RegisterOutputType(GeoFilterOutput{})
	pulumi.RegisterOutputType(GeoFilterArrayOutput{})
	pulumi.RegisterOutputType(GeoFilterResponseOutput{})
	pulumi.RegisterOutputType(GeoFilterResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListPtrOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetResponseArrayOutput{})
	pulumi.RegisterOutputType(MatchConditionOutput{})
	pulumi.RegisterOutputType(MatchConditionArrayOutput{})
	pulumi.RegisterOutputType(MatchConditionResponseOutput{})
	pulumi.RegisterOutputType(MatchConditionResponseArrayOutput{})
	pulumi.RegisterOutputType(PolicySettingsOutput{})
	pulumi.RegisterOutputType(PolicySettingsPtrOutput{})
	pulumi.RegisterOutputType(PolicySettingsResponseOutput{})
	pulumi.RegisterOutputType(PolicySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(RateLimitRuleOutput{})
	pulumi.RegisterOutputType(RateLimitRuleArrayOutput{})
	pulumi.RegisterOutputType(RateLimitRuleListOutput{})
	pulumi.RegisterOutputType(RateLimitRuleListPtrOutput{})
	pulumi.RegisterOutputType(RateLimitRuleListResponseOutput{})
	pulumi.RegisterOutputType(RateLimitRuleListResponsePtrOutput{})
	pulumi.RegisterOutputType(RateLimitRuleResponseOutput{})
	pulumi.RegisterOutputType(RateLimitRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
}
