// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20150601

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// CDN origin is the source of the content being delivered via CDN. When the edge nodes represented by an endpoint do not have the requested content cached, they attempt to fetch it from one or more of the configured origins.
//
// Deprecated: Version 2015-06-01 will be removed in v2 of the provider.
func LookupOrigin(ctx *pulumi.Context, args *LookupOriginArgs, opts ...pulumi.InvokeOption) (*LookupOriginResult, error) {
	var rv LookupOriginResult
	err := ctx.Invoke("azure-native:cdn/v20150601:getOrigin", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupOriginArgs struct {
	// Name of the endpoint within the CDN profile.
	EndpointName string `pulumi:"endpointName"`
	// Name of the origin, an arbitrary value but it needs to be unique under endpoint
	OriginName string `pulumi:"originName"`
	// Name of the CDN profile within the resource group.
	ProfileName string `pulumi:"profileName"`
	// Name of the resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// CDN origin is the source of the content being delivered via CDN. When the edge nodes represented by an endpoint do not have the requested content cached, they attempt to fetch it from one or more of the configured origins.
type LookupOriginResult struct {
	// The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.
	HostName string `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535.
	HttpPort *int `pulumi:"httpPort"`
	// The value of the https port. Must be between 1 and 65535.
	HttpsPort *int `pulumi:"httpsPort"`
	// Resource ID
	Id string `pulumi:"id"`
	// Resource name
	Name string `pulumi:"name"`
	// Provisioning status of the origin.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource status of the origin.
	ResourceState string `pulumi:"resourceState"`
	// Resource type
	Type string `pulumi:"type"`
}

func LookupOriginOutput(ctx *pulumi.Context, args LookupOriginOutputArgs, opts ...pulumi.InvokeOption) LookupOriginResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOriginResult, error) {
			args := v.(LookupOriginArgs)
			r, err := LookupOrigin(ctx, &args, opts...)
			var s LookupOriginResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOriginResultOutput)
}

type LookupOriginOutputArgs struct {
	// Name of the endpoint within the CDN profile.
	EndpointName pulumi.StringInput `pulumi:"endpointName"`
	// Name of the origin, an arbitrary value but it needs to be unique under endpoint
	OriginName pulumi.StringInput `pulumi:"originName"`
	// Name of the CDN profile within the resource group.
	ProfileName pulumi.StringInput `pulumi:"profileName"`
	// Name of the resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupOriginOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOriginArgs)(nil)).Elem()
}

// CDN origin is the source of the content being delivered via CDN. When the edge nodes represented by an endpoint do not have the requested content cached, they attempt to fetch it from one or more of the configured origins.
type LookupOriginResultOutput struct{ *pulumi.OutputState }

func (LookupOriginResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOriginResult)(nil)).Elem()
}

func (o LookupOriginResultOutput) ToLookupOriginResultOutput() LookupOriginResultOutput {
	return o
}

func (o LookupOriginResultOutput) ToLookupOriginResultOutputWithContext(ctx context.Context) LookupOriginResultOutput {
	return o
}

// The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.
func (o LookupOriginResultOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOriginResult) string { return v.HostName }).(pulumi.StringOutput)
}

// The value of the HTTP port. Must be between 1 and 65535.
func (o LookupOriginResultOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupOriginResult) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The value of the https port. Must be between 1 and 65535.
func (o LookupOriginResultOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupOriginResult) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Resource ID
func (o LookupOriginResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOriginResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name
func (o LookupOriginResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOriginResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning status of the origin.
func (o LookupOriginResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOriginResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource status of the origin.
func (o LookupOriginResultOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOriginResult) string { return v.ResourceState }).(pulumi.StringOutput)
}

// Resource type
func (o LookupOriginResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOriginResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOriginResultOutput{})
}
