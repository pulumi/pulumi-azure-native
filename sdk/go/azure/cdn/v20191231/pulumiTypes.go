// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20191231

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParameters struct {
	// Caching behavior for the requests
	CacheBehavior string `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration *string `pulumi:"cacheDuration"`
	// The level at which the content needs to be cached.
	CacheType string `pulumi:"cacheType"`
	OdataType string `pulumi:"odataType"`
}

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParametersResponse struct {
	// Caching behavior for the requests
	CacheBehavior string `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration *string `pulumi:"cacheDuration"`
	// The level at which the content needs to be cached.
	CacheType string `pulumi:"cacheType"`
	OdataType string `pulumi:"odataType"`
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParameters struct {
	OdataType string `pulumi:"odataType"`
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
	// Caching behavior for the requests
	QueryStringBehavior string `pulumi:"queryStringBehavior"`
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParametersResponse struct {
	OdataType string `pulumi:"odataType"`
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
	// Caching behavior for the requests
	QueryStringBehavior string `pulumi:"queryStringBehavior"`
}

// Defines the parameters for using CDN managed certificate for securing custom domain.
type CdnCertificateSourceParametersResponse struct {
	// Type of certificate used
	CertificateType string `pulumi:"certificateType"`
	OdataType       string `pulumi:"odataType"`
}

// Defines the certificate source parameters using CDN managed certificate for enabling SSL.
type CdnManagedHttpsParametersResponse struct {
	// Defines the source of the SSL certificate.
	// Expected value is 'Cdn'.
	CertificateSource string `pulumi:"certificateSource"`
	// Defines the certificate source parameters using CDN managed certificate for enabling SSL.
	CertificateSourceParameters CdnCertificateSourceParametersResponse `pulumi:"certificateSourceParameters"`
	// TLS protocol version that will be used for Https
	MinimumTlsVersion *string `pulumi:"minimumTlsVersion"`
	// Defines the TLS extension protocol that is used for secure delivery.
	ProtocolType string `pulumi:"protocolType"`
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Cookies to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Cookies to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOrigin struct {
	// Origin is enabled for load balancing or not. By default, origin is always enabled.
	Enabled *bool `pulumi:"enabled"`
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
	HostName string `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535.
	HttpPort *int `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535.
	HttpsPort *int `pulumi:"httpsPort"`
	// Origin name which must be unique within the endpoint.
	Name string `pulumi:"name"`
	// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. If endpoint uses multiple origins for load balancing, then the host header at endpoint is ignored and this one is considered.
	OriginHostHeader *string `pulumi:"originHostHeader"`
	// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
	Priority *int `pulumi:"priority"`
	// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
	Weight *int `pulumi:"weight"`
}

// DeepCreatedOriginInput is an input type that accepts DeepCreatedOriginArgs and DeepCreatedOriginOutput values.
// You can construct a concrete instance of `DeepCreatedOriginInput` via:
//
//	DeepCreatedOriginArgs{...}
type DeepCreatedOriginInput interface {
	pulumi.Input

	ToDeepCreatedOriginOutput() DeepCreatedOriginOutput
	ToDeepCreatedOriginOutputWithContext(context.Context) DeepCreatedOriginOutput
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginArgs struct {
	// Origin is enabled for load balancing or not. By default, origin is always enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535.
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535.
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// Origin name which must be unique within the endpoint.
	Name pulumi.StringInput `pulumi:"name"`
	// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. If endpoint uses multiple origins for load balancing, then the host header at endpoint is ignored and this one is considered.
	OriginHostHeader pulumi.StringPtrInput `pulumi:"originHostHeader"`
	// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (DeepCreatedOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOrigin)(nil)).Elem()
}

func (i DeepCreatedOriginArgs) ToDeepCreatedOriginOutput() DeepCreatedOriginOutput {
	return i.ToDeepCreatedOriginOutputWithContext(context.Background())
}

func (i DeepCreatedOriginArgs) ToDeepCreatedOriginOutputWithContext(ctx context.Context) DeepCreatedOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginOutput)
}

// DeepCreatedOriginArrayInput is an input type that accepts DeepCreatedOriginArray and DeepCreatedOriginArrayOutput values.
// You can construct a concrete instance of `DeepCreatedOriginArrayInput` via:
//
//	DeepCreatedOriginArray{ DeepCreatedOriginArgs{...} }
type DeepCreatedOriginArrayInput interface {
	pulumi.Input

	ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput
	ToDeepCreatedOriginArrayOutputWithContext(context.Context) DeepCreatedOriginArrayOutput
}

type DeepCreatedOriginArray []DeepCreatedOriginInput

func (DeepCreatedOriginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOrigin)(nil)).Elem()
}

func (i DeepCreatedOriginArray) ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput {
	return i.ToDeepCreatedOriginArrayOutputWithContext(context.Background())
}

func (i DeepCreatedOriginArray) ToDeepCreatedOriginArrayOutputWithContext(ctx context.Context) DeepCreatedOriginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginArrayOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOrigin)(nil)).Elem()
}

func (o DeepCreatedOriginOutput) ToDeepCreatedOriginOutput() DeepCreatedOriginOutput {
	return o
}

func (o DeepCreatedOriginOutput) ToDeepCreatedOriginOutputWithContext(ctx context.Context) DeepCreatedOriginOutput {
	return o
}

// Origin is enabled for load balancing or not. By default, origin is always enabled.
func (o DeepCreatedOriginOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
func (o DeepCreatedOriginOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) string { return v.HostName }).(pulumi.StringOutput)
}

// The value of the HTTP port. Must be between 1 and 65535.
func (o DeepCreatedOriginOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The value of the HTTPS port. Must be between 1 and 65535.
func (o DeepCreatedOriginOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Origin name which must be unique within the endpoint.
func (o DeepCreatedOriginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) string { return v.Name }).(pulumi.StringOutput)
}

// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. If endpoint uses multiple origins for load balancing, then the host header at endpoint is ignored and this one is considered.
func (o DeepCreatedOriginOutput) OriginHostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *string { return v.OriginHostHeader }).(pulumi.StringPtrOutput)
}

// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
func (o DeepCreatedOriginOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
func (o DeepCreatedOriginOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type DeepCreatedOriginArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOrigin)(nil)).Elem()
}

func (o DeepCreatedOriginArrayOutput) ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput {
	return o
}

func (o DeepCreatedOriginArrayOutput) ToDeepCreatedOriginArrayOutputWithContext(ctx context.Context) DeepCreatedOriginArrayOutput {
	return o
}

func (o DeepCreatedOriginArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOrigin {
		return vs[0].([]DeepCreatedOrigin)[vs[1].(int)]
	}).(DeepCreatedOriginOutput)
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroup struct {
	// Health probe settings to the origin that is used to determine the health of the origin.
	HealthProbeSettings *HealthProbeParameters `pulumi:"healthProbeSettings"`
	// Origin group name which must be unique within the endpoint.
	Name string `pulumi:"name"`
	// The source of the content being delivered via CDN within given origin group.
	Origins []ResourceReference `pulumi:"origins"`
	// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
	ResponseBasedOriginErrorDetectionSettings *ResponseBasedOriginErrorDetectionParameters `pulumi:"responseBasedOriginErrorDetectionSettings"`
	// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
	TrafficRestorationTimeToHealedOrNewEndpointsInMinutes *int `pulumi:"trafficRestorationTimeToHealedOrNewEndpointsInMinutes"`
}

// DeepCreatedOriginGroupInput is an input type that accepts DeepCreatedOriginGroupArgs and DeepCreatedOriginGroupOutput values.
// You can construct a concrete instance of `DeepCreatedOriginGroupInput` via:
//
//	DeepCreatedOriginGroupArgs{...}
type DeepCreatedOriginGroupInput interface {
	pulumi.Input

	ToDeepCreatedOriginGroupOutput() DeepCreatedOriginGroupOutput
	ToDeepCreatedOriginGroupOutputWithContext(context.Context) DeepCreatedOriginGroupOutput
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupArgs struct {
	// Health probe settings to the origin that is used to determine the health of the origin.
	HealthProbeSettings HealthProbeParametersPtrInput `pulumi:"healthProbeSettings"`
	// Origin group name which must be unique within the endpoint.
	Name pulumi.StringInput `pulumi:"name"`
	// The source of the content being delivered via CDN within given origin group.
	Origins ResourceReferenceArrayInput `pulumi:"origins"`
	// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
	ResponseBasedOriginErrorDetectionSettings ResponseBasedOriginErrorDetectionParametersPtrInput `pulumi:"responseBasedOriginErrorDetectionSettings"`
	// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
	TrafficRestorationTimeToHealedOrNewEndpointsInMinutes pulumi.IntPtrInput `pulumi:"trafficRestorationTimeToHealedOrNewEndpointsInMinutes"`
}

func (DeepCreatedOriginGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginGroup)(nil)).Elem()
}

func (i DeepCreatedOriginGroupArgs) ToDeepCreatedOriginGroupOutput() DeepCreatedOriginGroupOutput {
	return i.ToDeepCreatedOriginGroupOutputWithContext(context.Background())
}

func (i DeepCreatedOriginGroupArgs) ToDeepCreatedOriginGroupOutputWithContext(ctx context.Context) DeepCreatedOriginGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginGroupOutput)
}

// DeepCreatedOriginGroupArrayInput is an input type that accepts DeepCreatedOriginGroupArray and DeepCreatedOriginGroupArrayOutput values.
// You can construct a concrete instance of `DeepCreatedOriginGroupArrayInput` via:
//
//	DeepCreatedOriginGroupArray{ DeepCreatedOriginGroupArgs{...} }
type DeepCreatedOriginGroupArrayInput interface {
	pulumi.Input

	ToDeepCreatedOriginGroupArrayOutput() DeepCreatedOriginGroupArrayOutput
	ToDeepCreatedOriginGroupArrayOutputWithContext(context.Context) DeepCreatedOriginGroupArrayOutput
}

type DeepCreatedOriginGroupArray []DeepCreatedOriginGroupInput

func (DeepCreatedOriginGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginGroup)(nil)).Elem()
}

func (i DeepCreatedOriginGroupArray) ToDeepCreatedOriginGroupArrayOutput() DeepCreatedOriginGroupArrayOutput {
	return i.ToDeepCreatedOriginGroupArrayOutputWithContext(context.Background())
}

func (i DeepCreatedOriginGroupArray) ToDeepCreatedOriginGroupArrayOutputWithContext(ctx context.Context) DeepCreatedOriginGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginGroupArrayOutput)
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginGroup)(nil)).Elem()
}

func (o DeepCreatedOriginGroupOutput) ToDeepCreatedOriginGroupOutput() DeepCreatedOriginGroupOutput {
	return o
}

func (o DeepCreatedOriginGroupOutput) ToDeepCreatedOriginGroupOutputWithContext(ctx context.Context) DeepCreatedOriginGroupOutput {
	return o
}

// Health probe settings to the origin that is used to determine the health of the origin.
func (o DeepCreatedOriginGroupOutput) HealthProbeSettings() HealthProbeParametersPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroup) *HealthProbeParameters { return v.HealthProbeSettings }).(HealthProbeParametersPtrOutput)
}

// Origin group name which must be unique within the endpoint.
func (o DeepCreatedOriginGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The source of the content being delivered via CDN within given origin group.
func (o DeepCreatedOriginGroupOutput) Origins() ResourceReferenceArrayOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroup) []ResourceReference { return v.Origins }).(ResourceReferenceArrayOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
func (o DeepCreatedOriginGroupOutput) ResponseBasedOriginErrorDetectionSettings() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroup) *ResponseBasedOriginErrorDetectionParameters {
		return v.ResponseBasedOriginErrorDetectionSettings
	}).(ResponseBasedOriginErrorDetectionParametersPtrOutput)
}

// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
func (o DeepCreatedOriginGroupOutput) TrafficRestorationTimeToHealedOrNewEndpointsInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroup) *int { return v.TrafficRestorationTimeToHealedOrNewEndpointsInMinutes }).(pulumi.IntPtrOutput)
}

type DeepCreatedOriginGroupArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginGroup)(nil)).Elem()
}

func (o DeepCreatedOriginGroupArrayOutput) ToDeepCreatedOriginGroupArrayOutput() DeepCreatedOriginGroupArrayOutput {
	return o
}

func (o DeepCreatedOriginGroupArrayOutput) ToDeepCreatedOriginGroupArrayOutputWithContext(ctx context.Context) DeepCreatedOriginGroupArrayOutput {
	return o
}

func (o DeepCreatedOriginGroupArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOriginGroup {
		return vs[0].([]DeepCreatedOriginGroup)[vs[1].(int)]
	}).(DeepCreatedOriginGroupOutput)
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupResponse struct {
	// Health probe settings to the origin that is used to determine the health of the origin.
	HealthProbeSettings *HealthProbeParametersResponse `pulumi:"healthProbeSettings"`
	// Origin group name which must be unique within the endpoint.
	Name string `pulumi:"name"`
	// The source of the content being delivered via CDN within given origin group.
	Origins []ResourceReferenceResponse `pulumi:"origins"`
	// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
	ResponseBasedOriginErrorDetectionSettings *ResponseBasedOriginErrorDetectionParametersResponse `pulumi:"responseBasedOriginErrorDetectionSettings"`
	// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
	TrafficRestorationTimeToHealedOrNewEndpointsInMinutes *int `pulumi:"trafficRestorationTimeToHealedOrNewEndpointsInMinutes"`
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupResponseOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginGroupResponse)(nil)).Elem()
}

func (o DeepCreatedOriginGroupResponseOutput) ToDeepCreatedOriginGroupResponseOutput() DeepCreatedOriginGroupResponseOutput {
	return o
}

func (o DeepCreatedOriginGroupResponseOutput) ToDeepCreatedOriginGroupResponseOutputWithContext(ctx context.Context) DeepCreatedOriginGroupResponseOutput {
	return o
}

// Health probe settings to the origin that is used to determine the health of the origin.
func (o DeepCreatedOriginGroupResponseOutput) HealthProbeSettings() HealthProbeParametersResponsePtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) *HealthProbeParametersResponse { return v.HealthProbeSettings }).(HealthProbeParametersResponsePtrOutput)
}

// Origin group name which must be unique within the endpoint.
func (o DeepCreatedOriginGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The source of the content being delivered via CDN within given origin group.
func (o DeepCreatedOriginGroupResponseOutput) Origins() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) []ResourceReferenceResponse { return v.Origins }).(ResourceReferenceResponseArrayOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
func (o DeepCreatedOriginGroupResponseOutput) ResponseBasedOriginErrorDetectionSettings() ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) *ResponseBasedOriginErrorDetectionParametersResponse {
		return v.ResponseBasedOriginErrorDetectionSettings
	}).(ResponseBasedOriginErrorDetectionParametersResponsePtrOutput)
}

// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
func (o DeepCreatedOriginGroupResponseOutput) TrafficRestorationTimeToHealedOrNewEndpointsInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) *int {
		return v.TrafficRestorationTimeToHealedOrNewEndpointsInMinutes
	}).(pulumi.IntPtrOutput)
}

type DeepCreatedOriginGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginGroupResponse)(nil)).Elem()
}

func (o DeepCreatedOriginGroupResponseArrayOutput) ToDeepCreatedOriginGroupResponseArrayOutput() DeepCreatedOriginGroupResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginGroupResponseArrayOutput) ToDeepCreatedOriginGroupResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginGroupResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginGroupResponseArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOriginGroupResponse {
		return vs[0].([]DeepCreatedOriginGroupResponse)[vs[1].(int)]
	}).(DeepCreatedOriginGroupResponseOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginResponse struct {
	// Origin is enabled for load balancing or not. By default, origin is always enabled.
	Enabled *bool `pulumi:"enabled"`
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
	HostName string `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535.
	HttpPort *int `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535.
	HttpsPort *int `pulumi:"httpsPort"`
	// Origin name which must be unique within the endpoint.
	Name string `pulumi:"name"`
	// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. If endpoint uses multiple origins for load balancing, then the host header at endpoint is ignored and this one is considered.
	OriginHostHeader *string `pulumi:"originHostHeader"`
	// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
	Priority *int `pulumi:"priority"`
	// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
	Weight *int `pulumi:"weight"`
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginResponseOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginResponse)(nil)).Elem()
}

func (o DeepCreatedOriginResponseOutput) ToDeepCreatedOriginResponseOutput() DeepCreatedOriginResponseOutput {
	return o
}

func (o DeepCreatedOriginResponseOutput) ToDeepCreatedOriginResponseOutputWithContext(ctx context.Context) DeepCreatedOriginResponseOutput {
	return o
}

// Origin is enabled for load balancing or not. By default, origin is always enabled.
func (o DeepCreatedOriginResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
func (o DeepCreatedOriginResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// The value of the HTTP port. Must be between 1 and 65535.
func (o DeepCreatedOriginResponseOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The value of the HTTPS port. Must be between 1 and 65535.
func (o DeepCreatedOriginResponseOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Origin name which must be unique within the endpoint.
func (o DeepCreatedOriginResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. If endpoint uses multiple origins for load balancing, then the host header at endpoint is ignored and this one is considered.
func (o DeepCreatedOriginResponseOutput) OriginHostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *string { return v.OriginHostHeader }).(pulumi.StringPtrOutput)
}

// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
func (o DeepCreatedOriginResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
func (o DeepCreatedOriginResponseOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type DeepCreatedOriginResponseArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginResponse)(nil)).Elem()
}

func (o DeepCreatedOriginResponseArrayOutput) ToDeepCreatedOriginResponseArrayOutput() DeepCreatedOriginResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginResponseArrayOutput) ToDeepCreatedOriginResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginResponseArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOriginResponse {
		return vs[0].([]DeepCreatedOriginResponse)[vs[1].(int)]
	}).(DeepCreatedOriginResponseOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRule struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions []interface{} `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions []interface{} `pulumi:"conditions"`
	// Name of the rule
	Name *string `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order int `pulumi:"order"`
}

// DeliveryRuleInput is an input type that accepts DeliveryRuleArgs and DeliveryRuleOutput values.
// You can construct a concrete instance of `DeliveryRuleInput` via:
//
//	DeliveryRuleArgs{...}
type DeliveryRuleInput interface {
	pulumi.Input

	ToDeliveryRuleOutput() DeliveryRuleOutput
	ToDeliveryRuleOutputWithContext(context.Context) DeliveryRuleOutput
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleArgs struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions pulumi.ArrayInput `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions pulumi.ArrayInput `pulumi:"conditions"`
	// Name of the rule
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order pulumi.IntInput `pulumi:"order"`
}

func (DeliveryRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRule)(nil)).Elem()
}

func (i DeliveryRuleArgs) ToDeliveryRuleOutput() DeliveryRuleOutput {
	return i.ToDeliveryRuleOutputWithContext(context.Background())
}

func (i DeliveryRuleArgs) ToDeliveryRuleOutputWithContext(ctx context.Context) DeliveryRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleOutput)
}

// DeliveryRuleArrayInput is an input type that accepts DeliveryRuleArray and DeliveryRuleArrayOutput values.
// You can construct a concrete instance of `DeliveryRuleArrayInput` via:
//
//	DeliveryRuleArray{ DeliveryRuleArgs{...} }
type DeliveryRuleArrayInput interface {
	pulumi.Input

	ToDeliveryRuleArrayOutput() DeliveryRuleArrayOutput
	ToDeliveryRuleArrayOutputWithContext(context.Context) DeliveryRuleArrayOutput
}

type DeliveryRuleArray []DeliveryRuleInput

func (DeliveryRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRule)(nil)).Elem()
}

func (i DeliveryRuleArray) ToDeliveryRuleArrayOutput() DeliveryRuleArrayOutput {
	return i.ToDeliveryRuleArrayOutputWithContext(context.Background())
}

func (i DeliveryRuleArray) ToDeliveryRuleArrayOutputWithContext(ctx context.Context) DeliveryRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleArrayOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleOutput struct{ *pulumi.OutputState }

func (DeliveryRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRule)(nil)).Elem()
}

func (o DeliveryRuleOutput) ToDeliveryRuleOutput() DeliveryRuleOutput {
	return o
}

func (o DeliveryRuleOutput) ToDeliveryRuleOutputWithContext(ctx context.Context) DeliveryRuleOutput {
	return o
}

// A list of actions that are executed when all the conditions of a rule are satisfied.
func (o DeliveryRuleOutput) Actions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRule) []interface{} { return v.Actions }).(pulumi.ArrayOutput)
}

// A list of conditions that must be matched for the actions to be executed
func (o DeliveryRuleOutput) Conditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRule) []interface{} { return v.Conditions }).(pulumi.ArrayOutput)
}

// Name of the rule
func (o DeliveryRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
func (o DeliveryRuleOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v DeliveryRule) int { return v.Order }).(pulumi.IntOutput)
}

type DeliveryRuleArrayOutput struct{ *pulumi.OutputState }

func (DeliveryRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRule)(nil)).Elem()
}

func (o DeliveryRuleArrayOutput) ToDeliveryRuleArrayOutput() DeliveryRuleArrayOutput {
	return o
}

func (o DeliveryRuleArrayOutput) ToDeliveryRuleArrayOutputWithContext(ctx context.Context) DeliveryRuleArrayOutput {
	return o
}

func (o DeliveryRuleArrayOutput) Index(i pulumi.IntInput) DeliveryRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryRule {
		return vs[0].([]DeliveryRule)[vs[1].(int)]
	}).(DeliveryRuleOutput)
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheExpiration'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheExpirationActionParameters `pulumi:"parameters"`
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheExpiration'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheExpirationActionParametersResponse `pulumi:"parameters"`
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheKeyQueryString'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheKeyQueryStringActionParameters `pulumi:"parameters"`
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'CacheKeyQueryString'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheKeyQueryStringActionParametersResponse `pulumi:"parameters"`
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'Cookies'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters CookiesMatchConditionParameters `pulumi:"parameters"`
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'Cookies'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters CookiesMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'HttpVersion'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HttpVersionMatchConditionParameters `pulumi:"parameters"`
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'HttpVersion'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HttpVersionMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'IsDevice'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters IsDeviceMatchConditionParameters `pulumi:"parameters"`
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'IsDevice'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters IsDeviceMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'PostArgs'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters PostArgsMatchConditionParameters `pulumi:"parameters"`
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'PostArgs'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters PostArgsMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'QueryString'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters QueryStringMatchConditionParameters `pulumi:"parameters"`
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'QueryString'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters QueryStringMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RemoteAddress'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RemoteAddressMatchConditionParameters `pulumi:"parameters"`
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RemoteAddress'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RemoteAddressMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestBody'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestBodyMatchConditionParameters `pulumi:"parameters"`
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestBody'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestBodyMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyRequestHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParameters `pulumi:"parameters"`
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyRequestHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersResponse `pulumi:"parameters"`
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestHeaderMatchConditionParameters `pulumi:"parameters"`
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestHeaderMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestMethod'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestMethodMatchConditionParameters `pulumi:"parameters"`
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestMethod'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestMethodMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestScheme'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestSchemeMatchConditionParameters `pulumi:"parameters"`
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestScheme'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestSchemeMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestUri'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestUriMatchConditionParameters `pulumi:"parameters"`
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'RequestUri'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestUriMatchConditionParametersResponse `pulumi:"parameters"`
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleResponse struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions []interface{} `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions []interface{} `pulumi:"conditions"`
	// Name of the rule
	Name *string `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order int `pulumi:"order"`
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponse)(nil)).Elem()
}

func (o DeliveryRuleResponseOutput) ToDeliveryRuleResponseOutput() DeliveryRuleResponseOutput {
	return o
}

func (o DeliveryRuleResponseOutput) ToDeliveryRuleResponseOutputWithContext(ctx context.Context) DeliveryRuleResponseOutput {
	return o
}

// A list of actions that are executed when all the conditions of a rule are satisfied.
func (o DeliveryRuleResponseOutput) Actions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) []interface{} { return v.Actions }).(pulumi.ArrayOutput)
}

// A list of conditions that must be matched for the actions to be executed
func (o DeliveryRuleResponseOutput) Conditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) []interface{} { return v.Conditions }).(pulumi.ArrayOutput)
}

// Name of the rule
func (o DeliveryRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
func (o DeliveryRuleResponseOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) int { return v.Order }).(pulumi.IntOutput)
}

type DeliveryRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (DeliveryRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRuleResponse)(nil)).Elem()
}

func (o DeliveryRuleResponseArrayOutput) ToDeliveryRuleResponseArrayOutput() DeliveryRuleResponseArrayOutput {
	return o
}

func (o DeliveryRuleResponseArrayOutput) ToDeliveryRuleResponseArrayOutputWithContext(ctx context.Context) DeliveryRuleResponseArrayOutput {
	return o
}

func (o DeliveryRuleResponseArrayOutput) Index(i pulumi.IntInput) DeliveryRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryRuleResponse {
		return vs[0].([]DeliveryRuleResponse)[vs[1].(int)]
	}).(DeliveryRuleResponseOutput)
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyResponseHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParameters `pulumi:"parameters"`
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'ModifyResponseHeader'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersResponse `pulumi:"parameters"`
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileExtension'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileExtensionMatchConditionParameters `pulumi:"parameters"`
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileExtension'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileExtensionMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileName'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileNameMatchConditionParameters `pulumi:"parameters"`
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlFileName'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileNameMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathCondition struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlPath'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlPathMatchConditionParameters `pulumi:"parameters"`
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathConditionResponse struct {
	// The name of the condition for the delivery rule.
	// Expected value is 'UrlPath'.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlPathMatchConditionParametersResponse `pulumi:"parameters"`
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersDeliveryPolicy struct {
	// User-friendly description of the policy.
	Description *string `pulumi:"description"`
	// A list of the delivery rules.
	Rules []DeliveryRule `pulumi:"rules"`
}

// EndpointPropertiesUpdateParametersDeliveryPolicyInput is an input type that accepts EndpointPropertiesUpdateParametersDeliveryPolicyArgs and EndpointPropertiesUpdateParametersDeliveryPolicyOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersDeliveryPolicyInput` via:
//
//	EndpointPropertiesUpdateParametersDeliveryPolicyArgs{...}
type EndpointPropertiesUpdateParametersDeliveryPolicyInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersDeliveryPolicyOutput() EndpointPropertiesUpdateParametersDeliveryPolicyOutput
	ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyOutput
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersDeliveryPolicyArgs struct {
	// User-friendly description of the policy.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A list of the delivery rules.
	Rules DeliveryRuleArrayInput `pulumi:"rules"`
}

func (EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutput() EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return i.ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersDeliveryPolicyOutput)
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersDeliveryPolicyOutput).ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx)
}

// EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput is an input type that accepts EndpointPropertiesUpdateParametersDeliveryPolicyArgs, EndpointPropertiesUpdateParametersDeliveryPolicyPtr and EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput` via:
//
//	        EndpointPropertiesUpdateParametersDeliveryPolicyArgs{...}
//
//	or:
//
//	        nil
type EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput
	ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput
}

type endpointPropertiesUpdateParametersDeliveryPolicyPtrType EndpointPropertiesUpdateParametersDeliveryPolicyArgs

func EndpointPropertiesUpdateParametersDeliveryPolicyPtr(v *EndpointPropertiesUpdateParametersDeliveryPolicyArgs) EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput {
	return (*endpointPropertiesUpdateParametersDeliveryPolicyPtrType)(v)
}

func (*endpointPropertiesUpdateParametersDeliveryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (i *endpointPropertiesUpdateParametersDeliveryPolicyPtrType) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (i *endpointPropertiesUpdateParametersDeliveryPolicyPtrType) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersDeliveryPolicyOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutput() EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o.ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointPropertiesUpdateParametersDeliveryPolicy) *EndpointPropertiesUpdateParametersDeliveryPolicy {
		return &v
	}).(EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersDeliveryPolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) Rules() DeliveryRuleArrayOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersDeliveryPolicy) []DeliveryRule { return v.Rules }).(DeliveryRuleArrayOutput)
}

type EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) Elem() EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersDeliveryPolicy) EndpointPropertiesUpdateParametersDeliveryPolicy {
		if v != nil {
			return *v
		}
		var ret EndpointPropertiesUpdateParametersDeliveryPolicy
		return ret
	}).(EndpointPropertiesUpdateParametersDeliveryPolicyOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersDeliveryPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) Rules() DeliveryRuleArrayOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersDeliveryPolicy) []DeliveryRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(DeliveryRuleArrayOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersResponseDeliveryPolicy struct {
	// User-friendly description of the policy.
	Description *string `pulumi:"description"`
	// A list of the delivery rules.
	Rules []DeliveryRuleResponse `pulumi:"rules"`
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersResponseDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return o
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseDeliveryPolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) Rules() DeliveryRuleResponseArrayOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseDeliveryPolicy) []DeliveryRuleResponse {
		return v.Rules
	}).(DeliveryRuleResponseArrayOutput)
}

type EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersResponseDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) Elem() EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicy) EndpointPropertiesUpdateParametersResponseDeliveryPolicy {
		if v != nil {
			return *v
		}
		var ret EndpointPropertiesUpdateParametersResponseDeliveryPolicy
		return ret
	}).(EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) Rules() DeliveryRuleResponseArrayOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicy) []DeliveryRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(DeliveryRuleResponseArrayOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilter struct {
	// Action of the geo filter, i.e. allow or block access.
	Action GeoFilterActions `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes []string `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath string `pulumi:"relativePath"`
}

// GeoFilterInput is an input type that accepts GeoFilterArgs and GeoFilterOutput values.
// You can construct a concrete instance of `GeoFilterInput` via:
//
//	GeoFilterArgs{...}
type GeoFilterInput interface {
	pulumi.Input

	ToGeoFilterOutput() GeoFilterOutput
	ToGeoFilterOutputWithContext(context.Context) GeoFilterOutput
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterArgs struct {
	// Action of the geo filter, i.e. allow or block access.
	Action GeoFilterActionsInput `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes pulumi.StringArrayInput `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath pulumi.StringInput `pulumi:"relativePath"`
}

func (GeoFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilter)(nil)).Elem()
}

func (i GeoFilterArgs) ToGeoFilterOutput() GeoFilterOutput {
	return i.ToGeoFilterOutputWithContext(context.Background())
}

func (i GeoFilterArgs) ToGeoFilterOutputWithContext(ctx context.Context) GeoFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterOutput)
}

// GeoFilterArrayInput is an input type that accepts GeoFilterArray and GeoFilterArrayOutput values.
// You can construct a concrete instance of `GeoFilterArrayInput` via:
//
//	GeoFilterArray{ GeoFilterArgs{...} }
type GeoFilterArrayInput interface {
	pulumi.Input

	ToGeoFilterArrayOutput() GeoFilterArrayOutput
	ToGeoFilterArrayOutputWithContext(context.Context) GeoFilterArrayOutput
}

type GeoFilterArray []GeoFilterInput

func (GeoFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilter)(nil)).Elem()
}

func (i GeoFilterArray) ToGeoFilterArrayOutput() GeoFilterArrayOutput {
	return i.ToGeoFilterArrayOutputWithContext(context.Background())
}

func (i GeoFilterArray) ToGeoFilterArrayOutputWithContext(ctx context.Context) GeoFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterArrayOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterOutput struct{ *pulumi.OutputState }

func (GeoFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilter)(nil)).Elem()
}

func (o GeoFilterOutput) ToGeoFilterOutput() GeoFilterOutput {
	return o
}

func (o GeoFilterOutput) ToGeoFilterOutputWithContext(ctx context.Context) GeoFilterOutput {
	return o
}

// Action of the geo filter, i.e. allow or block access.
func (o GeoFilterOutput) Action() GeoFilterActionsOutput {
	return o.ApplyT(func(v GeoFilter) GeoFilterActions { return v.Action }).(GeoFilterActionsOutput)
}

// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
func (o GeoFilterOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GeoFilter) []string { return v.CountryCodes }).(pulumi.StringArrayOutput)
}

// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
func (o GeoFilterOutput) RelativePath() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilter) string { return v.RelativePath }).(pulumi.StringOutput)
}

type GeoFilterArrayOutput struct{ *pulumi.OutputState }

func (GeoFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilter)(nil)).Elem()
}

func (o GeoFilterArrayOutput) ToGeoFilterArrayOutput() GeoFilterArrayOutput {
	return o
}

func (o GeoFilterArrayOutput) ToGeoFilterArrayOutputWithContext(ctx context.Context) GeoFilterArrayOutput {
	return o
}

func (o GeoFilterArrayOutput) Index(i pulumi.IntInput) GeoFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoFilter {
		return vs[0].([]GeoFilter)[vs[1].(int)]
	}).(GeoFilterOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterResponse struct {
	// Action of the geo filter, i.e. allow or block access.
	Action string `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes []string `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath string `pulumi:"relativePath"`
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterResponseOutput struct{ *pulumi.OutputState }

func (GeoFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilterResponse)(nil)).Elem()
}

func (o GeoFilterResponseOutput) ToGeoFilterResponseOutput() GeoFilterResponseOutput {
	return o
}

func (o GeoFilterResponseOutput) ToGeoFilterResponseOutputWithContext(ctx context.Context) GeoFilterResponseOutput {
	return o
}

// Action of the geo filter, i.e. allow or block access.
func (o GeoFilterResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilterResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
func (o GeoFilterResponseOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GeoFilterResponse) []string { return v.CountryCodes }).(pulumi.StringArrayOutput)
}

// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
func (o GeoFilterResponseOutput) RelativePath() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilterResponse) string { return v.RelativePath }).(pulumi.StringOutput)
}

type GeoFilterResponseArrayOutput struct{ *pulumi.OutputState }

func (GeoFilterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilterResponse)(nil)).Elem()
}

func (o GeoFilterResponseArrayOutput) ToGeoFilterResponseArrayOutput() GeoFilterResponseArrayOutput {
	return o
}

func (o GeoFilterResponseArrayOutput) ToGeoFilterResponseArrayOutputWithContext(ctx context.Context) GeoFilterResponseArrayOutput {
	return o
}

func (o GeoFilterResponseArrayOutput) Index(i pulumi.IntInput) GeoFilterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoFilterResponse {
		return vs[0].([]GeoFilterResponse)[vs[1].(int)]
	}).(GeoFilterResponseOutput)
}

// Defines the parameters for the request header action.
type HeaderActionParameters struct {
	// Action to perform
	HeaderAction string `pulumi:"headerAction"`
	// Name of the header to modify
	HeaderName string `pulumi:"headerName"`
	OdataType  string `pulumi:"odataType"`
	// Value for the specified action
	Value *string `pulumi:"value"`
}

// Defines the parameters for the request header action.
type HeaderActionParametersResponse struct {
	// Action to perform
	HeaderAction string `pulumi:"headerAction"`
	// Name of the header to modify
	HeaderName string `pulumi:"headerName"`
	OdataType  string `pulumi:"odataType"`
	// Value for the specified action
	Value *string `pulumi:"value"`
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParameters struct {
	// The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds *int `pulumi:"probeIntervalInSeconds"`
	// The path relative to the origin that is used to determine the health of the origin.
	ProbePath *string `pulumi:"probePath"`
	// Protocol to use for health probe.
	ProbeProtocol *ProbeProtocol `pulumi:"probeProtocol"`
	// The type of health probe request that is made.
	ProbeRequestType *HealthProbeRequestType `pulumi:"probeRequestType"`
}

// HealthProbeParametersInput is an input type that accepts HealthProbeParametersArgs and HealthProbeParametersOutput values.
// You can construct a concrete instance of `HealthProbeParametersInput` via:
//
//	HealthProbeParametersArgs{...}
type HealthProbeParametersInput interface {
	pulumi.Input

	ToHealthProbeParametersOutput() HealthProbeParametersOutput
	ToHealthProbeParametersOutputWithContext(context.Context) HealthProbeParametersOutput
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersArgs struct {
	// The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds pulumi.IntPtrInput `pulumi:"probeIntervalInSeconds"`
	// The path relative to the origin that is used to determine the health of the origin.
	ProbePath pulumi.StringPtrInput `pulumi:"probePath"`
	// Protocol to use for health probe.
	ProbeProtocol ProbeProtocolPtrInput `pulumi:"probeProtocol"`
	// The type of health probe request that is made.
	ProbeRequestType HealthProbeRequestTypePtrInput `pulumi:"probeRequestType"`
}

func (HealthProbeParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeParameters)(nil)).Elem()
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersOutput() HealthProbeParametersOutput {
	return i.ToHealthProbeParametersOutputWithContext(context.Background())
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersOutputWithContext(ctx context.Context) HealthProbeParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersOutput)
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput {
	return i.ToHealthProbeParametersPtrOutputWithContext(context.Background())
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersPtrOutputWithContext(ctx context.Context) HealthProbeParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersOutput).ToHealthProbeParametersPtrOutputWithContext(ctx)
}

// HealthProbeParametersPtrInput is an input type that accepts HealthProbeParametersArgs, HealthProbeParametersPtr and HealthProbeParametersPtrOutput values.
// You can construct a concrete instance of `HealthProbeParametersPtrInput` via:
//
//	        HealthProbeParametersArgs{...}
//
//	or:
//
//	        nil
type HealthProbeParametersPtrInput interface {
	pulumi.Input

	ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput
	ToHealthProbeParametersPtrOutputWithContext(context.Context) HealthProbeParametersPtrOutput
}

type healthProbeParametersPtrType HealthProbeParametersArgs

func HealthProbeParametersPtr(v *HealthProbeParametersArgs) HealthProbeParametersPtrInput {
	return (*healthProbeParametersPtrType)(v)
}

func (*healthProbeParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthProbeParameters)(nil)).Elem()
}

func (i *healthProbeParametersPtrType) ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput {
	return i.ToHealthProbeParametersPtrOutputWithContext(context.Background())
}

func (i *healthProbeParametersPtrType) ToHealthProbeParametersPtrOutputWithContext(ctx context.Context) HealthProbeParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersPtrOutput)
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeParameters)(nil)).Elem()
}

func (o HealthProbeParametersOutput) ToHealthProbeParametersOutput() HealthProbeParametersOutput {
	return o
}

func (o HealthProbeParametersOutput) ToHealthProbeParametersOutputWithContext(ctx context.Context) HealthProbeParametersOutput {
	return o
}

func (o HealthProbeParametersOutput) ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput {
	return o.ToHealthProbeParametersPtrOutputWithContext(context.Background())
}

func (o HealthProbeParametersOutput) ToHealthProbeParametersPtrOutputWithContext(ctx context.Context) HealthProbeParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HealthProbeParameters) *HealthProbeParameters {
		return &v
	}).(HealthProbeParametersPtrOutput)
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthProbeParameters) *int { return v.ProbeIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParameters) *string { return v.ProbePath }).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersOutput) ProbeProtocol() ProbeProtocolPtrOutput {
	return o.ApplyT(func(v HealthProbeParameters) *ProbeProtocol { return v.ProbeProtocol }).(ProbeProtocolPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersOutput) ProbeRequestType() HealthProbeRequestTypePtrOutput {
	return o.ApplyT(func(v HealthProbeParameters) *HealthProbeRequestType { return v.ProbeRequestType }).(HealthProbeRequestTypePtrOutput)
}

type HealthProbeParametersPtrOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthProbeParameters)(nil)).Elem()
}

func (o HealthProbeParametersPtrOutput) ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput {
	return o
}

func (o HealthProbeParametersPtrOutput) ToHealthProbeParametersPtrOutputWithContext(ctx context.Context) HealthProbeParametersPtrOutput {
	return o
}

func (o HealthProbeParametersPtrOutput) Elem() HealthProbeParametersOutput {
	return o.ApplyT(func(v *HealthProbeParameters) HealthProbeParameters {
		if v != nil {
			return *v
		}
		var ret HealthProbeParameters
		return ret
	}).(HealthProbeParametersOutput)
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersPtrOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HealthProbeParameters) *int {
		if v == nil {
			return nil
		}
		return v.ProbeIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersPtrOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParameters) *string {
		if v == nil {
			return nil
		}
		return v.ProbePath
	}).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersPtrOutput) ProbeProtocol() ProbeProtocolPtrOutput {
	return o.ApplyT(func(v *HealthProbeParameters) *ProbeProtocol {
		if v == nil {
			return nil
		}
		return v.ProbeProtocol
	}).(ProbeProtocolPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersPtrOutput) ProbeRequestType() HealthProbeRequestTypePtrOutput {
	return o.ApplyT(func(v *HealthProbeParameters) *HealthProbeRequestType {
		if v == nil {
			return nil
		}
		return v.ProbeRequestType
	}).(HealthProbeRequestTypePtrOutput)
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersResponse struct {
	// The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds *int `pulumi:"probeIntervalInSeconds"`
	// The path relative to the origin that is used to determine the health of the origin.
	ProbePath *string `pulumi:"probePath"`
	// Protocol to use for health probe.
	ProbeProtocol *string `pulumi:"probeProtocol"`
	// The type of health probe request that is made.
	ProbeRequestType *string `pulumi:"probeRequestType"`
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersResponseOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeParametersResponse)(nil)).Elem()
}

func (o HealthProbeParametersResponseOutput) ToHealthProbeParametersResponseOutput() HealthProbeParametersResponseOutput {
	return o
}

func (o HealthProbeParametersResponseOutput) ToHealthProbeParametersResponseOutputWithContext(ctx context.Context) HealthProbeParametersResponseOutput {
	return o
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersResponseOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *int { return v.ProbeIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersResponseOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *string { return v.ProbePath }).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersResponseOutput) ProbeProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *string { return v.ProbeProtocol }).(pulumi.StringPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersResponseOutput) ProbeRequestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *string { return v.ProbeRequestType }).(pulumi.StringPtrOutput)
}

type HealthProbeParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthProbeParametersResponse)(nil)).Elem()
}

func (o HealthProbeParametersResponsePtrOutput) ToHealthProbeParametersResponsePtrOutput() HealthProbeParametersResponsePtrOutput {
	return o
}

func (o HealthProbeParametersResponsePtrOutput) ToHealthProbeParametersResponsePtrOutputWithContext(ctx context.Context) HealthProbeParametersResponsePtrOutput {
	return o
}

func (o HealthProbeParametersResponsePtrOutput) Elem() HealthProbeParametersResponseOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) HealthProbeParametersResponse {
		if v != nil {
			return *v
		}
		var ret HealthProbeParametersResponse
		return ret
	}).(HealthProbeParametersResponseOutput)
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersResponsePtrOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.ProbeIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersResponsePtrOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbePath
	}).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersResponsePtrOutput) ProbeProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbeProtocol
	}).(pulumi.StringPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersResponsePtrOutput) ProbeRequestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbeRequestType
	}).(pulumi.StringPtrOutput)
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParameters struct {
	// The inclusive start of the http status code range.
	Begin *int `pulumi:"begin"`
	// The inclusive end of the http status code range.
	End *int `pulumi:"end"`
}

// HttpErrorRangeParametersInput is an input type that accepts HttpErrorRangeParametersArgs and HttpErrorRangeParametersOutput values.
// You can construct a concrete instance of `HttpErrorRangeParametersInput` via:
//
//	HttpErrorRangeParametersArgs{...}
type HttpErrorRangeParametersInput interface {
	pulumi.Input

	ToHttpErrorRangeParametersOutput() HttpErrorRangeParametersOutput
	ToHttpErrorRangeParametersOutputWithContext(context.Context) HttpErrorRangeParametersOutput
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersArgs struct {
	// The inclusive start of the http status code range.
	Begin pulumi.IntPtrInput `pulumi:"begin"`
	// The inclusive end of the http status code range.
	End pulumi.IntPtrInput `pulumi:"end"`
}

func (HttpErrorRangeParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpErrorRangeParameters)(nil)).Elem()
}

func (i HttpErrorRangeParametersArgs) ToHttpErrorRangeParametersOutput() HttpErrorRangeParametersOutput {
	return i.ToHttpErrorRangeParametersOutputWithContext(context.Background())
}

func (i HttpErrorRangeParametersArgs) ToHttpErrorRangeParametersOutputWithContext(ctx context.Context) HttpErrorRangeParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpErrorRangeParametersOutput)
}

// HttpErrorRangeParametersArrayInput is an input type that accepts HttpErrorRangeParametersArray and HttpErrorRangeParametersArrayOutput values.
// You can construct a concrete instance of `HttpErrorRangeParametersArrayInput` via:
//
//	HttpErrorRangeParametersArray{ HttpErrorRangeParametersArgs{...} }
type HttpErrorRangeParametersArrayInput interface {
	pulumi.Input

	ToHttpErrorRangeParametersArrayOutput() HttpErrorRangeParametersArrayOutput
	ToHttpErrorRangeParametersArrayOutputWithContext(context.Context) HttpErrorRangeParametersArrayOutput
}

type HttpErrorRangeParametersArray []HttpErrorRangeParametersInput

func (HttpErrorRangeParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpErrorRangeParameters)(nil)).Elem()
}

func (i HttpErrorRangeParametersArray) ToHttpErrorRangeParametersArrayOutput() HttpErrorRangeParametersArrayOutput {
	return i.ToHttpErrorRangeParametersArrayOutputWithContext(context.Background())
}

func (i HttpErrorRangeParametersArray) ToHttpErrorRangeParametersArrayOutputWithContext(ctx context.Context) HttpErrorRangeParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpErrorRangeParametersArrayOutput)
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpErrorRangeParameters)(nil)).Elem()
}

func (o HttpErrorRangeParametersOutput) ToHttpErrorRangeParametersOutput() HttpErrorRangeParametersOutput {
	return o
}

func (o HttpErrorRangeParametersOutput) ToHttpErrorRangeParametersOutputWithContext(ctx context.Context) HttpErrorRangeParametersOutput {
	return o
}

// The inclusive start of the http status code range.
func (o HttpErrorRangeParametersOutput) Begin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParameters) *int { return v.Begin }).(pulumi.IntPtrOutput)
}

// The inclusive end of the http status code range.
func (o HttpErrorRangeParametersOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParameters) *int { return v.End }).(pulumi.IntPtrOutput)
}

type HttpErrorRangeParametersArrayOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpErrorRangeParameters)(nil)).Elem()
}

func (o HttpErrorRangeParametersArrayOutput) ToHttpErrorRangeParametersArrayOutput() HttpErrorRangeParametersArrayOutput {
	return o
}

func (o HttpErrorRangeParametersArrayOutput) ToHttpErrorRangeParametersArrayOutputWithContext(ctx context.Context) HttpErrorRangeParametersArrayOutput {
	return o
}

func (o HttpErrorRangeParametersArrayOutput) Index(i pulumi.IntInput) HttpErrorRangeParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpErrorRangeParameters {
		return vs[0].([]HttpErrorRangeParameters)[vs[1].(int)]
	}).(HttpErrorRangeParametersOutput)
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersResponse struct {
	// The inclusive start of the http status code range.
	Begin *int `pulumi:"begin"`
	// The inclusive end of the http status code range.
	End *int `pulumi:"end"`
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersResponseOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpErrorRangeParametersResponse)(nil)).Elem()
}

func (o HttpErrorRangeParametersResponseOutput) ToHttpErrorRangeParametersResponseOutput() HttpErrorRangeParametersResponseOutput {
	return o
}

func (o HttpErrorRangeParametersResponseOutput) ToHttpErrorRangeParametersResponseOutputWithContext(ctx context.Context) HttpErrorRangeParametersResponseOutput {
	return o
}

// The inclusive start of the http status code range.
func (o HttpErrorRangeParametersResponseOutput) Begin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParametersResponse) *int { return v.Begin }).(pulumi.IntPtrOutput)
}

// The inclusive end of the http status code range.
func (o HttpErrorRangeParametersResponseOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParametersResponse) *int { return v.End }).(pulumi.IntPtrOutput)
}

type HttpErrorRangeParametersResponseArrayOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpErrorRangeParametersResponse)(nil)).Elem()
}

func (o HttpErrorRangeParametersResponseArrayOutput) ToHttpErrorRangeParametersResponseArrayOutput() HttpErrorRangeParametersResponseArrayOutput {
	return o
}

func (o HttpErrorRangeParametersResponseArrayOutput) ToHttpErrorRangeParametersResponseArrayOutputWithContext(ctx context.Context) HttpErrorRangeParametersResponseArrayOutput {
	return o
}

func (o HttpErrorRangeParametersResponseArrayOutput) Index(i pulumi.IntInput) HttpErrorRangeParametersResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpErrorRangeParametersResponse {
		return vs[0].([]HttpErrorRangeParametersResponse)[vs[1].(int)]
	}).(HttpErrorRangeParametersResponseOutput)
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Describes the parameters for using a user's KeyVault certificate for securing custom domain.
type KeyVaultCertificateSourceParametersResponse struct {
	// Describes the action that shall be taken when the certificate is removed from Key Vault.
	DeleteRule string `pulumi:"deleteRule"`
	OdataType  string `pulumi:"odataType"`
	// Resource group of the user's Key Vault containing the SSL certificate
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of Key Vault Secret (representing the full certificate PFX) in Key Vault.
	SecretName string `pulumi:"secretName"`
	// The version(GUID) of Key Vault Secret in Key Vault.
	SecretVersion *string `pulumi:"secretVersion"`
	// Subscription Id of the user's Key Vault containing the SSL certificate
	SubscriptionId string `pulumi:"subscriptionId"`
	// Describes the action that shall be taken when the certificate is updated in Key Vault.
	UpdateRule string `pulumi:"updateRule"`
	// The name of the user's Key Vault containing the SSL certificate
	VaultName string `pulumi:"vaultName"`
}

// Defines the Origin Group override action for the delivery rule.
type OriginGroupOverrideAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'OriginGroupOverride'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters OriginGroupOverrideActionParameters `pulumi:"parameters"`
}

// Defines the parameters for the Origin Group override action.
type OriginGroupOverrideActionParameters struct {
	OdataType string `pulumi:"odataType"`
	// A reference to the origin group from where the content will be fetched from when CDN does not have it
	OriginGroup ResourceReference `pulumi:"originGroup"`
}

// Defines the parameters for the Origin Group override action.
type OriginGroupOverrideActionParametersResponse struct {
	OdataType string `pulumi:"odataType"`
	// A reference to the origin group from where the content will be fetched from when CDN does not have it
	OriginGroup ResourceReferenceResponse `pulumi:"originGroup"`
}

// Defines the Origin Group override action for the delivery rule.
type OriginGroupOverrideActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'OriginGroupOverride'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters OriginGroupOverrideActionParametersResponse `pulumi:"parameters"`
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of PostArg to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of PostArg to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParameters struct {
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParametersResponse struct {
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Header to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Header to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Reference to another resource.
type ResourceReference struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// ResourceReferenceInput is an input type that accepts ResourceReferenceArgs and ResourceReferenceOutput values.
// You can construct a concrete instance of `ResourceReferenceInput` via:
//
//	ResourceReferenceArgs{...}
type ResourceReferenceInput interface {
	pulumi.Input

	ToResourceReferenceOutput() ResourceReferenceOutput
	ToResourceReferenceOutputWithContext(context.Context) ResourceReferenceOutput
}

// Reference to another resource.
type ResourceReferenceArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ResourceReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReference)(nil)).Elem()
}

func (i ResourceReferenceArgs) ToResourceReferenceOutput() ResourceReferenceOutput {
	return i.ToResourceReferenceOutputWithContext(context.Background())
}

func (i ResourceReferenceArgs) ToResourceReferenceOutputWithContext(ctx context.Context) ResourceReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceOutput)
}

func (i ResourceReferenceArgs) ToResourceReferencePtrOutput() ResourceReferencePtrOutput {
	return i.ToResourceReferencePtrOutputWithContext(context.Background())
}

func (i ResourceReferenceArgs) ToResourceReferencePtrOutputWithContext(ctx context.Context) ResourceReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceOutput).ToResourceReferencePtrOutputWithContext(ctx)
}

// ResourceReferencePtrInput is an input type that accepts ResourceReferenceArgs, ResourceReferencePtr and ResourceReferencePtrOutput values.
// You can construct a concrete instance of `ResourceReferencePtrInput` via:
//
//	        ResourceReferenceArgs{...}
//
//	or:
//
//	        nil
type ResourceReferencePtrInput interface {
	pulumi.Input

	ToResourceReferencePtrOutput() ResourceReferencePtrOutput
	ToResourceReferencePtrOutputWithContext(context.Context) ResourceReferencePtrOutput
}

type resourceReferencePtrType ResourceReferenceArgs

func ResourceReferencePtr(v *ResourceReferenceArgs) ResourceReferencePtrInput {
	return (*resourceReferencePtrType)(v)
}

func (*resourceReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceReference)(nil)).Elem()
}

func (i *resourceReferencePtrType) ToResourceReferencePtrOutput() ResourceReferencePtrOutput {
	return i.ToResourceReferencePtrOutputWithContext(context.Background())
}

func (i *resourceReferencePtrType) ToResourceReferencePtrOutputWithContext(ctx context.Context) ResourceReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferencePtrOutput)
}

// ResourceReferenceArrayInput is an input type that accepts ResourceReferenceArray and ResourceReferenceArrayOutput values.
// You can construct a concrete instance of `ResourceReferenceArrayInput` via:
//
//	ResourceReferenceArray{ ResourceReferenceArgs{...} }
type ResourceReferenceArrayInput interface {
	pulumi.Input

	ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput
	ToResourceReferenceArrayOutputWithContext(context.Context) ResourceReferenceArrayOutput
}

type ResourceReferenceArray []ResourceReferenceInput

func (ResourceReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReference)(nil)).Elem()
}

func (i ResourceReferenceArray) ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput {
	return i.ToResourceReferenceArrayOutputWithContext(context.Background())
}

func (i ResourceReferenceArray) ToResourceReferenceArrayOutputWithContext(ctx context.Context) ResourceReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceArrayOutput)
}

// Reference to another resource.
type ResourceReferenceOutput struct{ *pulumi.OutputState }

func (ResourceReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReference)(nil)).Elem()
}

func (o ResourceReferenceOutput) ToResourceReferenceOutput() ResourceReferenceOutput {
	return o
}

func (o ResourceReferenceOutput) ToResourceReferenceOutputWithContext(ctx context.Context) ResourceReferenceOutput {
	return o
}

func (o ResourceReferenceOutput) ToResourceReferencePtrOutput() ResourceReferencePtrOutput {
	return o.ToResourceReferencePtrOutputWithContext(context.Background())
}

func (o ResourceReferenceOutput) ToResourceReferencePtrOutputWithContext(ctx context.Context) ResourceReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceReference) *ResourceReference {
		return &v
	}).(ResourceReferencePtrOutput)
}

// Resource ID.
func (o ResourceReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceReferencePtrOutput struct{ *pulumi.OutputState }

func (ResourceReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceReference)(nil)).Elem()
}

func (o ResourceReferencePtrOutput) ToResourceReferencePtrOutput() ResourceReferencePtrOutput {
	return o
}

func (o ResourceReferencePtrOutput) ToResourceReferencePtrOutputWithContext(ctx context.Context) ResourceReferencePtrOutput {
	return o
}

func (o ResourceReferencePtrOutput) Elem() ResourceReferenceOutput {
	return o.ApplyT(func(v *ResourceReference) ResourceReference {
		if v != nil {
			return *v
		}
		var ret ResourceReference
		return ret
	}).(ResourceReferenceOutput)
}

// Resource ID.
func (o ResourceReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceReference) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type ResourceReferenceArrayOutput struct{ *pulumi.OutputState }

func (ResourceReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReference)(nil)).Elem()
}

func (o ResourceReferenceArrayOutput) ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput {
	return o
}

func (o ResourceReferenceArrayOutput) ToResourceReferenceArrayOutputWithContext(ctx context.Context) ResourceReferenceArrayOutput {
	return o
}

func (o ResourceReferenceArrayOutput) Index(i pulumi.IntInput) ResourceReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceReference {
		return vs[0].([]ResourceReference)[vs[1].(int)]
	}).(ResourceReferenceOutput)
}

// Reference to another resource.
type ResourceReferenceResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// Reference to another resource.
type ResourceReferenceResponseOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutput() ResourceReferenceResponseOutput {
	return o
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutputWithContext(ctx context.Context) ResourceReferenceResponseOutput {
	return o
}

// Resource ID.
func (o ResourceReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponsePtrOutput) ToResourceReferenceResponsePtrOutput() ResourceReferenceResponsePtrOutput {
	return o
}

func (o ResourceReferenceResponsePtrOutput) ToResourceReferenceResponsePtrOutputWithContext(ctx context.Context) ResourceReferenceResponsePtrOutput {
	return o
}

func (o ResourceReferenceResponsePtrOutput) Elem() ResourceReferenceResponseOutput {
	return o.ApplyT(func(v *ResourceReferenceResponse) ResourceReferenceResponse {
		if v != nil {
			return *v
		}
		var ret ResourceReferenceResponse
		return ret
	}).(ResourceReferenceResponseOutput)
}

// Resource ID.
func (o ResourceReferenceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type ResourceReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutput() ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutputWithContext(ctx context.Context) ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) Index(i pulumi.IntInput) ResourceReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceReferenceResponse {
		return vs[0].([]ResourceReferenceResponse)[vs[1].(int)]
	}).(ResourceReferenceResponseOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParameters struct {
	// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
	HttpErrorRanges []HttpErrorRangeParameters `pulumi:"httpErrorRanges"`
	// Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes *ResponseBasedDetectedErrorTypes `pulumi:"responseBasedDetectedErrorTypes"`
	// The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage *int `pulumi:"responseBasedFailoverThresholdPercentage"`
}

// ResponseBasedOriginErrorDetectionParametersInput is an input type that accepts ResponseBasedOriginErrorDetectionParametersArgs and ResponseBasedOriginErrorDetectionParametersOutput values.
// You can construct a concrete instance of `ResponseBasedOriginErrorDetectionParametersInput` via:
//
//	ResponseBasedOriginErrorDetectionParametersArgs{...}
type ResponseBasedOriginErrorDetectionParametersInput interface {
	pulumi.Input

	ToResponseBasedOriginErrorDetectionParametersOutput() ResponseBasedOriginErrorDetectionParametersOutput
	ToResponseBasedOriginErrorDetectionParametersOutputWithContext(context.Context) ResponseBasedOriginErrorDetectionParametersOutput
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersArgs struct {
	// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
	HttpErrorRanges HttpErrorRangeParametersArrayInput `pulumi:"httpErrorRanges"`
	// Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes ResponseBasedDetectedErrorTypesPtrInput `pulumi:"responseBasedDetectedErrorTypes"`
	// The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage pulumi.IntPtrInput `pulumi:"responseBasedFailoverThresholdPercentage"`
}

func (ResponseBasedOriginErrorDetectionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseBasedOriginErrorDetectionParameters)(nil)).Elem()
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersOutput() ResponseBasedOriginErrorDetectionParametersOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersOutputWithContext(context.Background())
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersOutput)
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Background())
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersOutput).ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx)
}

// ResponseBasedOriginErrorDetectionParametersPtrInput is an input type that accepts ResponseBasedOriginErrorDetectionParametersArgs, ResponseBasedOriginErrorDetectionParametersPtr and ResponseBasedOriginErrorDetectionParametersPtrOutput values.
// You can construct a concrete instance of `ResponseBasedOriginErrorDetectionParametersPtrInput` via:
//
//	        ResponseBasedOriginErrorDetectionParametersArgs{...}
//
//	or:
//
//	        nil
type ResponseBasedOriginErrorDetectionParametersPtrInput interface {
	pulumi.Input

	ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput
	ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput
}

type responseBasedOriginErrorDetectionParametersPtrType ResponseBasedOriginErrorDetectionParametersArgs

func ResponseBasedOriginErrorDetectionParametersPtr(v *ResponseBasedOriginErrorDetectionParametersArgs) ResponseBasedOriginErrorDetectionParametersPtrInput {
	return (*responseBasedOriginErrorDetectionParametersPtrType)(v)
}

func (*responseBasedOriginErrorDetectionParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseBasedOriginErrorDetectionParameters)(nil)).Elem()
}

func (i *responseBasedOriginErrorDetectionParametersPtrType) ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Background())
}

func (i *responseBasedOriginErrorDetectionParametersPtrType) ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersPtrOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseBasedOriginErrorDetectionParameters)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersOutput) ToResponseBasedOriginErrorDetectionParametersOutput() ResponseBasedOriginErrorDetectionParametersOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersOutput) ToResponseBasedOriginErrorDetectionParametersOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersOutput) ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o.ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Background())
}

func (o ResponseBasedOriginErrorDetectionParametersOutput) ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponseBasedOriginErrorDetectionParameters) *ResponseBasedOriginErrorDetectionParameters {
		return &v
	}).(ResponseBasedOriginErrorDetectionParametersPtrOutput)
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersOutput) HttpErrorRanges() HttpErrorRangeParametersArrayOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParameters) []HttpErrorRangeParameters {
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersOutput) ResponseBasedDetectedErrorTypes() ResponseBasedDetectedErrorTypesPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParameters) *ResponseBasedDetectedErrorTypes {
		return v.ResponseBasedDetectedErrorTypes
	}).(ResponseBasedDetectedErrorTypesPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParameters) *int {
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

type ResponseBasedOriginErrorDetectionParametersPtrOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseBasedOriginErrorDetectionParameters)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) Elem() ResponseBasedOriginErrorDetectionParametersOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParameters) ResponseBasedOriginErrorDetectionParameters {
		if v != nil {
			return *v
		}
		var ret ResponseBasedOriginErrorDetectionParameters
		return ret
	}).(ResponseBasedOriginErrorDetectionParametersOutput)
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) HttpErrorRanges() HttpErrorRangeParametersArrayOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParameters) []HttpErrorRangeParameters {
		if v == nil {
			return nil
		}
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) ResponseBasedDetectedErrorTypes() ResponseBasedDetectedErrorTypesPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParameters) *ResponseBasedDetectedErrorTypes {
		if v == nil {
			return nil
		}
		return v.ResponseBasedDetectedErrorTypes
	}).(ResponseBasedDetectedErrorTypesPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersPtrOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParameters) *int {
		if v == nil {
			return nil
		}
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersResponse struct {
	// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
	HttpErrorRanges []HttpErrorRangeParametersResponse `pulumi:"httpErrorRanges"`
	// Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes *string `pulumi:"responseBasedDetectedErrorTypes"`
	// The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage *int `pulumi:"responseBasedFailoverThresholdPercentage"`
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersResponseOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseBasedOriginErrorDetectionParametersResponse)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ToResponseBasedOriginErrorDetectionParametersResponseOutput() ResponseBasedOriginErrorDetectionParametersResponseOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ToResponseBasedOriginErrorDetectionParametersResponseOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersResponseOutput {
	return o
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) HttpErrorRanges() HttpErrorRangeParametersResponseArrayOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersResponse) []HttpErrorRangeParametersResponse {
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersResponseArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ResponseBasedDetectedErrorTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersResponse) *string {
		return v.ResponseBasedDetectedErrorTypes
	}).(pulumi.StringPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersResponse) *int {
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

type ResponseBasedOriginErrorDetectionParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseBasedOriginErrorDetectionParametersResponse)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ToResponseBasedOriginErrorDetectionParametersResponsePtrOutput() ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ToResponseBasedOriginErrorDetectionParametersResponsePtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) Elem() ResponseBasedOriginErrorDetectionParametersResponseOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) ResponseBasedOriginErrorDetectionParametersResponse {
		if v != nil {
			return *v
		}
		var ret ResponseBasedOriginErrorDetectionParametersResponse
		return ret
	}).(ResponseBasedOriginErrorDetectionParametersResponseOutput)
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) HttpErrorRanges() HttpErrorRangeParametersResponseArrayOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) []HttpErrorRangeParametersResponse {
		if v == nil {
			return nil
		}
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersResponseArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ResponseBasedDetectedErrorTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResponseBasedDetectedErrorTypes
	}).(pulumi.StringPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type Sku struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuArgs struct {
	// Name of the pricing tier.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

// Name of the pricing tier.
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuResponse struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// Name of the pricing tier.
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRedirect'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRedirectActionParameters `pulumi:"parameters"`
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParameters struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment *string `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHostname *string `pulumi:"customHostname"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath *string `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
	CustomQueryString *string `pulumi:"customQueryString"`
	// Protocol to use for the redirect. The default value is MatchRequest
	DestinationProtocol *string `pulumi:"destinationProtocol"`
	OdataType           string  `pulumi:"odataType"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType string `pulumi:"redirectType"`
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParametersResponse struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment *string `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHostname *string `pulumi:"customHostname"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath *string `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
	CustomQueryString *string `pulumi:"customQueryString"`
	// Protocol to use for the redirect. The default value is MatchRequest
	DestinationProtocol *string `pulumi:"destinationProtocol"`
	OdataType           string  `pulumi:"odataType"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType string `pulumi:"redirectType"`
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRedirect'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRedirectActionParametersResponse `pulumi:"parameters"`
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteAction struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRewrite'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRewriteActionParameters `pulumi:"parameters"`
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParameters struct {
	// Define the relative URL to which the above requests will be rewritten by.
	Destination string `pulumi:"destination"`
	OdataType   string `pulumi:"odataType"`
	// Whether to preserve unmatched path. Default value is true.
	PreserveUnmatchedPath *bool `pulumi:"preserveUnmatchedPath"`
	// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
	SourcePattern string `pulumi:"sourcePattern"`
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParametersResponse struct {
	// Define the relative URL to which the above requests will be rewritten by.
	Destination string `pulumi:"destination"`
	OdataType   string `pulumi:"odataType"`
	// Whether to preserve unmatched path. Default value is true.
	PreserveUnmatchedPath *bool `pulumi:"preserveUnmatchedPath"`
	// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
	SourcePattern string `pulumi:"sourcePattern"`
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteActionResponse struct {
	// The name of the action for the delivery rule.
	// Expected value is 'UrlRewrite'.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRewriteActionParametersResponse `pulumi:"parameters"`
}

// Defines the certificate source parameters using user's keyvault certificate for enabling SSL.
type UserManagedHttpsParametersResponse struct {
	// Defines the source of the SSL certificate.
	// Expected value is 'AzureKeyVault'.
	CertificateSource string `pulumi:"certificateSource"`
	// Defines the certificate source parameters using user's keyvault certificate for enabling SSL.
	CertificateSourceParameters KeyVaultCertificateSourceParametersResponse `pulumi:"certificateSourceParameters"`
	// TLS protocol version that will be used for Https
	MinimumTlsVersion *string `pulumi:"minimumTlsVersion"`
	// Defines the TLS extension protocol that is used for secure delivery.
	ProtocolType string `pulumi:"protocolType"`
}

func init() {
	pulumi.RegisterOutputType(DeepCreatedOriginOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginGroupOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginGroupArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginGroupResponseOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginResponseOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginResponseArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleOutput{})
	pulumi.RegisterOutputType(DeliveryRuleArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersDeliveryPolicyOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput{})
	pulumi.RegisterOutputType(GeoFilterOutput{})
	pulumi.RegisterOutputType(GeoFilterArrayOutput{})
	pulumi.RegisterOutputType(GeoFilterResponseOutput{})
	pulumi.RegisterOutputType(GeoFilterResponseArrayOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersPtrOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersResponseOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersArrayOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersResponseOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceReferenceOutput{})
	pulumi.RegisterOutputType(ResourceReferencePtrOutput{})
	pulumi.RegisterOutputType(ResourceReferenceArrayOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersPtrOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersResponseOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
}
