// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storsimple

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure-nextgen/sdk/go/azure"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure-native:storsimple:AccessControlRecord":
		r, err = NewAccessControlRecord(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:storsimple:BackupPolicy":
		r, err = NewBackupPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:storsimple:BackupSchedule":
		r, err = NewBackupSchedule(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:storsimple:BackupScheduleGroup":
		r, err = NewBackupScheduleGroup(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:storsimple:BandwidthSetting":
		r, err = NewBandwidthSetting(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:storsimple:ChapSetting":
		r, err = NewChapSetting(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:storsimple:FileServer":
		r, err = NewFileServer(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:storsimple:FileShare":
		r, err = NewFileShare(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:storsimple:IscsiDisk":
		r, err = NewIscsiDisk(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:storsimple:IscsiServer":
		r, err = NewIscsiServer(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:storsimple:Manager":
		r, err = NewManager(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:storsimple:ManagerExtendedInfo":
		r, err = NewManagerExtendedInfo(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:storsimple:StorageAccountCredential":
		r, err = NewStorageAccountCredential(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:storsimple:StorageDomain":
		r, err = NewStorageDomain(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:storsimple:Volume":
		r, err = NewVolume(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:storsimple:VolumeContainer":
		r, err = NewVolumeContainer(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := azure.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"azure-native",
		"storsimple",
		&module{version},
	)
}
