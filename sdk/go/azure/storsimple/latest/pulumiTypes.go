// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecret struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
	EncryptionCertThumbprint *string `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value string `pulumi:"value"`
}

// AsymmetricEncryptedSecretInput is an input type that accepts AsymmetricEncryptedSecretArgs and AsymmetricEncryptedSecretOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretInput` via:
//
//          AsymmetricEncryptedSecretArgs{...}
type AsymmetricEncryptedSecretInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretOutput() AsymmetricEncryptedSecretOutput
	ToAsymmetricEncryptedSecretOutputWithContext(context.Context) AsymmetricEncryptedSecretOutput
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretArgs struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm EncryptionAlgorithm `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
	EncryptionCertThumbprint pulumi.StringPtrInput `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AsymmetricEncryptedSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecret)(nil)).Elem()
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretOutput() AsymmetricEncryptedSecretOutput {
	return i.ToAsymmetricEncryptedSecretOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretOutput)
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return i.ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretOutput).ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx)
}

// AsymmetricEncryptedSecretPtrInput is an input type that accepts AsymmetricEncryptedSecretArgs, AsymmetricEncryptedSecretPtr and AsymmetricEncryptedSecretPtrOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretPtrInput` via:
//
//          AsymmetricEncryptedSecretArgs{...}
//
//  or:
//
//          nil
type AsymmetricEncryptedSecretPtrInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput
	ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Context) AsymmetricEncryptedSecretPtrOutput
}

type asymmetricEncryptedSecretPtrType AsymmetricEncryptedSecretArgs

func AsymmetricEncryptedSecretPtr(v *AsymmetricEncryptedSecretArgs) AsymmetricEncryptedSecretPtrInput {
	return (*asymmetricEncryptedSecretPtrType)(v)
}

func (*asymmetricEncryptedSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecret)(nil)).Elem()
}

func (i *asymmetricEncryptedSecretPtrType) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return i.ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Background())
}

func (i *asymmetricEncryptedSecretPtrType) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretPtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecret)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretOutput() AsymmetricEncryptedSecretOutput {
	return o
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretOutput {
	return o
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return o.ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Background())
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) *AsymmetricEncryptedSecret {
		return &v
	}).(AsymmetricEncryptedSecretPtrOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
func (o AsymmetricEncryptedSecretOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) *string { return v.EncryptionCertThumbprint }).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) string { return v.Value }).(pulumi.StringOutput)
}

type AsymmetricEncryptedSecretPtrOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecret)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretPtrOutput) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretPtrOutput) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretPtrOutput) Elem() AsymmetricEncryptedSecretOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) AsymmetricEncryptedSecret { return *v }).(AsymmetricEncryptedSecretOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretPtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
func (o AsymmetricEncryptedSecretPtrOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionCertThumbprint
	}).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretInvokeResponse struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
	EncryptionCertThumbprint *string `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value string `pulumi:"value"`
}

// AsymmetricEncryptedSecretInvokeResponseInput is an input type that accepts AsymmetricEncryptedSecretInvokeResponseArgs and AsymmetricEncryptedSecretInvokeResponseOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretInvokeResponseInput` via:
//
//          AsymmetricEncryptedSecretInvokeResponseArgs{...}
type AsymmetricEncryptedSecretInvokeResponseInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretInvokeResponseOutput() AsymmetricEncryptedSecretInvokeResponseOutput
	ToAsymmetricEncryptedSecretInvokeResponseOutputWithContext(context.Context) AsymmetricEncryptedSecretInvokeResponseOutput
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretInvokeResponseArgs struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
	EncryptionCertThumbprint pulumi.StringPtrInput `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AsymmetricEncryptedSecretInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecretInvokeResponse)(nil)).Elem()
}

func (i AsymmetricEncryptedSecretInvokeResponseArgs) ToAsymmetricEncryptedSecretInvokeResponseOutput() AsymmetricEncryptedSecretInvokeResponseOutput {
	return i.ToAsymmetricEncryptedSecretInvokeResponseOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretInvokeResponseArgs) ToAsymmetricEncryptedSecretInvokeResponseOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretInvokeResponseOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretInvokeResponseOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecretInvokeResponse)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretInvokeResponseOutput) ToAsymmetricEncryptedSecretInvokeResponseOutput() AsymmetricEncryptedSecretInvokeResponseOutput {
	return o
}

func (o AsymmetricEncryptedSecretInvokeResponseOutput) ToAsymmetricEncryptedSecretInvokeResponseOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretInvokeResponseOutput {
	return o
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretInvokeResponseOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretInvokeResponse) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
func (o AsymmetricEncryptedSecretInvokeResponseOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretInvokeResponse) *string { return v.EncryptionCertThumbprint }).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretInvokeResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretInvokeResponse) string { return v.Value }).(pulumi.StringOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretResponse struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
	EncryptionCertThumbprint *string `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value string `pulumi:"value"`
}

// AsymmetricEncryptedSecretResponseInput is an input type that accepts AsymmetricEncryptedSecretResponseArgs and AsymmetricEncryptedSecretResponseOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretResponseInput` via:
//
//          AsymmetricEncryptedSecretResponseArgs{...}
type AsymmetricEncryptedSecretResponseInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretResponseOutput() AsymmetricEncryptedSecretResponseOutput
	ToAsymmetricEncryptedSecretResponseOutputWithContext(context.Context) AsymmetricEncryptedSecretResponseOutput
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretResponseArgs struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
	EncryptionCertThumbprint pulumi.StringPtrInput `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AsymmetricEncryptedSecretResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponseOutput() AsymmetricEncryptedSecretResponseOutput {
	return i.ToAsymmetricEncryptedSecretResponseOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponseOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretResponseOutput)
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return i.ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretResponseOutput).ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx)
}

// AsymmetricEncryptedSecretResponsePtrInput is an input type that accepts AsymmetricEncryptedSecretResponseArgs, AsymmetricEncryptedSecretResponsePtr and AsymmetricEncryptedSecretResponsePtrOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretResponsePtrInput` via:
//
//          AsymmetricEncryptedSecretResponseArgs{...}
//
//  or:
//
//          nil
type AsymmetricEncryptedSecretResponsePtrInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput
	ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Context) AsymmetricEncryptedSecretResponsePtrOutput
}

type asymmetricEncryptedSecretResponsePtrType AsymmetricEncryptedSecretResponseArgs

func AsymmetricEncryptedSecretResponsePtr(v *AsymmetricEncryptedSecretResponseArgs) AsymmetricEncryptedSecretResponsePtrInput {
	return (*asymmetricEncryptedSecretResponsePtrType)(v)
}

func (*asymmetricEncryptedSecretResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (i *asymmetricEncryptedSecretResponsePtrType) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return i.ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Background())
}

func (i *asymmetricEncryptedSecretResponsePtrType) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretResponseOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponseOutput() AsymmetricEncryptedSecretResponseOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponseOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponseOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Background())
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) *AsymmetricEncryptedSecretResponse {
		return &v
	}).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretResponseOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
func (o AsymmetricEncryptedSecretResponseOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) *string { return v.EncryptionCertThumbprint }).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) string { return v.Value }).(pulumi.StringOutput)
}

type AsymmetricEncryptedSecretResponsePtrOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretResponsePtrOutput) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponsePtrOutput) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponsePtrOutput) Elem() AsymmetricEncryptedSecretResponseOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) AsymmetricEncryptedSecretResponse { return *v }).(AsymmetricEncryptedSecretResponseOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretResponsePtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
func (o AsymmetricEncryptedSecretResponsePtrOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionCertThumbprint
	}).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// The schedule for bandwidth setting.
type BandwidthSchedule struct {
	// The days of the week when this schedule is applicable.
	Days []string `pulumi:"days"`
	// The rate in Mbps.
	RateInMbps int `pulumi:"rateInMbps"`
	// The start time of the schedule.
	Start Time `pulumi:"start"`
	// The stop time of the schedule.
	Stop Time `pulumi:"stop"`
}

// BandwidthScheduleInput is an input type that accepts BandwidthScheduleArgs and BandwidthScheduleOutput values.
// You can construct a concrete instance of `BandwidthScheduleInput` via:
//
//          BandwidthScheduleArgs{...}
type BandwidthScheduleInput interface {
	pulumi.Input

	ToBandwidthScheduleOutput() BandwidthScheduleOutput
	ToBandwidthScheduleOutputWithContext(context.Context) BandwidthScheduleOutput
}

// The schedule for bandwidth setting.
type BandwidthScheduleArgs struct {
	// The days of the week when this schedule is applicable.
	Days DayOfWeekArrayInput `pulumi:"days"`
	// The rate in Mbps.
	RateInMbps pulumi.IntInput `pulumi:"rateInMbps"`
	// The start time of the schedule.
	Start TimeInput `pulumi:"start"`
	// The stop time of the schedule.
	Stop TimeInput `pulumi:"stop"`
}

func (BandwidthScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthSchedule)(nil)).Elem()
}

func (i BandwidthScheduleArgs) ToBandwidthScheduleOutput() BandwidthScheduleOutput {
	return i.ToBandwidthScheduleOutputWithContext(context.Background())
}

func (i BandwidthScheduleArgs) ToBandwidthScheduleOutputWithContext(ctx context.Context) BandwidthScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthScheduleOutput)
}

// BandwidthScheduleArrayInput is an input type that accepts BandwidthScheduleArray and BandwidthScheduleArrayOutput values.
// You can construct a concrete instance of `BandwidthScheduleArrayInput` via:
//
//          BandwidthScheduleArray{ BandwidthScheduleArgs{...} }
type BandwidthScheduleArrayInput interface {
	pulumi.Input

	ToBandwidthScheduleArrayOutput() BandwidthScheduleArrayOutput
	ToBandwidthScheduleArrayOutputWithContext(context.Context) BandwidthScheduleArrayOutput
}

type BandwidthScheduleArray []BandwidthScheduleInput

func (BandwidthScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthSchedule)(nil)).Elem()
}

func (i BandwidthScheduleArray) ToBandwidthScheduleArrayOutput() BandwidthScheduleArrayOutput {
	return i.ToBandwidthScheduleArrayOutputWithContext(context.Background())
}

func (i BandwidthScheduleArray) ToBandwidthScheduleArrayOutputWithContext(ctx context.Context) BandwidthScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthScheduleArrayOutput)
}

// The schedule for bandwidth setting.
type BandwidthScheduleOutput struct{ *pulumi.OutputState }

func (BandwidthScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthSchedule)(nil)).Elem()
}

func (o BandwidthScheduleOutput) ToBandwidthScheduleOutput() BandwidthScheduleOutput {
	return o
}

func (o BandwidthScheduleOutput) ToBandwidthScheduleOutputWithContext(ctx context.Context) BandwidthScheduleOutput {
	return o
}

// The days of the week when this schedule is applicable.
func (o BandwidthScheduleOutput) Days() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BandwidthSchedule) []string { return v.Days }).(pulumi.StringArrayOutput)
}

// The rate in Mbps.
func (o BandwidthScheduleOutput) RateInMbps() pulumi.IntOutput {
	return o.ApplyT(func(v BandwidthSchedule) int { return v.RateInMbps }).(pulumi.IntOutput)
}

// The start time of the schedule.
func (o BandwidthScheduleOutput) Start() TimeOutput {
	return o.ApplyT(func(v BandwidthSchedule) Time { return v.Start }).(TimeOutput)
}

// The stop time of the schedule.
func (o BandwidthScheduleOutput) Stop() TimeOutput {
	return o.ApplyT(func(v BandwidthSchedule) Time { return v.Stop }).(TimeOutput)
}

type BandwidthScheduleArrayOutput struct{ *pulumi.OutputState }

func (BandwidthScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthSchedule)(nil)).Elem()
}

func (o BandwidthScheduleArrayOutput) ToBandwidthScheduleArrayOutput() BandwidthScheduleArrayOutput {
	return o
}

func (o BandwidthScheduleArrayOutput) ToBandwidthScheduleArrayOutputWithContext(ctx context.Context) BandwidthScheduleArrayOutput {
	return o
}

func (o BandwidthScheduleArrayOutput) Index(i pulumi.IntInput) BandwidthScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthSchedule {
		return vs[0].([]BandwidthSchedule)[vs[1].(int)]
	}).(BandwidthScheduleOutput)
}

// The schedule for bandwidth setting.
type BandwidthScheduleInvokeResponse struct {
	// The days of the week when this schedule is applicable.
	Days []string `pulumi:"days"`
	// The rate in Mbps.
	RateInMbps int `pulumi:"rateInMbps"`
	// The start time of the schedule.
	Start TimeInvokeResponse `pulumi:"start"`
	// The stop time of the schedule.
	Stop TimeInvokeResponse `pulumi:"stop"`
}

// BandwidthScheduleInvokeResponseInput is an input type that accepts BandwidthScheduleInvokeResponseArgs and BandwidthScheduleInvokeResponseOutput values.
// You can construct a concrete instance of `BandwidthScheduleInvokeResponseInput` via:
//
//          BandwidthScheduleInvokeResponseArgs{...}
type BandwidthScheduleInvokeResponseInput interface {
	pulumi.Input

	ToBandwidthScheduleInvokeResponseOutput() BandwidthScheduleInvokeResponseOutput
	ToBandwidthScheduleInvokeResponseOutputWithContext(context.Context) BandwidthScheduleInvokeResponseOutput
}

// The schedule for bandwidth setting.
type BandwidthScheduleInvokeResponseArgs struct {
	// The days of the week when this schedule is applicable.
	Days pulumi.StringArrayInput `pulumi:"days"`
	// The rate in Mbps.
	RateInMbps pulumi.IntInput `pulumi:"rateInMbps"`
	// The start time of the schedule.
	Start TimeInvokeResponseInput `pulumi:"start"`
	// The stop time of the schedule.
	Stop TimeInvokeResponseInput `pulumi:"stop"`
}

func (BandwidthScheduleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthScheduleInvokeResponse)(nil)).Elem()
}

func (i BandwidthScheduleInvokeResponseArgs) ToBandwidthScheduleInvokeResponseOutput() BandwidthScheduleInvokeResponseOutput {
	return i.ToBandwidthScheduleInvokeResponseOutputWithContext(context.Background())
}

func (i BandwidthScheduleInvokeResponseArgs) ToBandwidthScheduleInvokeResponseOutputWithContext(ctx context.Context) BandwidthScheduleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthScheduleInvokeResponseOutput)
}

// BandwidthScheduleInvokeResponseArrayInput is an input type that accepts BandwidthScheduleInvokeResponseArray and BandwidthScheduleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `BandwidthScheduleInvokeResponseArrayInput` via:
//
//          BandwidthScheduleInvokeResponseArray{ BandwidthScheduleInvokeResponseArgs{...} }
type BandwidthScheduleInvokeResponseArrayInput interface {
	pulumi.Input

	ToBandwidthScheduleInvokeResponseArrayOutput() BandwidthScheduleInvokeResponseArrayOutput
	ToBandwidthScheduleInvokeResponseArrayOutputWithContext(context.Context) BandwidthScheduleInvokeResponseArrayOutput
}

type BandwidthScheduleInvokeResponseArray []BandwidthScheduleInvokeResponseInput

func (BandwidthScheduleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthScheduleInvokeResponse)(nil)).Elem()
}

func (i BandwidthScheduleInvokeResponseArray) ToBandwidthScheduleInvokeResponseArrayOutput() BandwidthScheduleInvokeResponseArrayOutput {
	return i.ToBandwidthScheduleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i BandwidthScheduleInvokeResponseArray) ToBandwidthScheduleInvokeResponseArrayOutputWithContext(ctx context.Context) BandwidthScheduleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthScheduleInvokeResponseArrayOutput)
}

// The schedule for bandwidth setting.
type BandwidthScheduleInvokeResponseOutput struct{ *pulumi.OutputState }

func (BandwidthScheduleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthScheduleInvokeResponse)(nil)).Elem()
}

func (o BandwidthScheduleInvokeResponseOutput) ToBandwidthScheduleInvokeResponseOutput() BandwidthScheduleInvokeResponseOutput {
	return o
}

func (o BandwidthScheduleInvokeResponseOutput) ToBandwidthScheduleInvokeResponseOutputWithContext(ctx context.Context) BandwidthScheduleInvokeResponseOutput {
	return o
}

// The days of the week when this schedule is applicable.
func (o BandwidthScheduleInvokeResponseOutput) Days() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BandwidthScheduleInvokeResponse) []string { return v.Days }).(pulumi.StringArrayOutput)
}

// The rate in Mbps.
func (o BandwidthScheduleInvokeResponseOutput) RateInMbps() pulumi.IntOutput {
	return o.ApplyT(func(v BandwidthScheduleInvokeResponse) int { return v.RateInMbps }).(pulumi.IntOutput)
}

// The start time of the schedule.
func (o BandwidthScheduleInvokeResponseOutput) Start() TimeInvokeResponseOutput {
	return o.ApplyT(func(v BandwidthScheduleInvokeResponse) TimeInvokeResponse { return v.Start }).(TimeInvokeResponseOutput)
}

// The stop time of the schedule.
func (o BandwidthScheduleInvokeResponseOutput) Stop() TimeInvokeResponseOutput {
	return o.ApplyT(func(v BandwidthScheduleInvokeResponse) TimeInvokeResponse { return v.Stop }).(TimeInvokeResponseOutput)
}

type BandwidthScheduleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (BandwidthScheduleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthScheduleInvokeResponse)(nil)).Elem()
}

func (o BandwidthScheduleInvokeResponseArrayOutput) ToBandwidthScheduleInvokeResponseArrayOutput() BandwidthScheduleInvokeResponseArrayOutput {
	return o
}

func (o BandwidthScheduleInvokeResponseArrayOutput) ToBandwidthScheduleInvokeResponseArrayOutputWithContext(ctx context.Context) BandwidthScheduleInvokeResponseArrayOutput {
	return o
}

func (o BandwidthScheduleInvokeResponseArrayOutput) Index(i pulumi.IntInput) BandwidthScheduleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthScheduleInvokeResponse {
		return vs[0].([]BandwidthScheduleInvokeResponse)[vs[1].(int)]
	}).(BandwidthScheduleInvokeResponseOutput)
}

// The schedule for bandwidth setting.
type BandwidthScheduleResponse struct {
	// The days of the week when this schedule is applicable.
	Days []string `pulumi:"days"`
	// The rate in Mbps.
	RateInMbps int `pulumi:"rateInMbps"`
	// The start time of the schedule.
	Start TimeResponse `pulumi:"start"`
	// The stop time of the schedule.
	Stop TimeResponse `pulumi:"stop"`
}

// BandwidthScheduleResponseInput is an input type that accepts BandwidthScheduleResponseArgs and BandwidthScheduleResponseOutput values.
// You can construct a concrete instance of `BandwidthScheduleResponseInput` via:
//
//          BandwidthScheduleResponseArgs{...}
type BandwidthScheduleResponseInput interface {
	pulumi.Input

	ToBandwidthScheduleResponseOutput() BandwidthScheduleResponseOutput
	ToBandwidthScheduleResponseOutputWithContext(context.Context) BandwidthScheduleResponseOutput
}

// The schedule for bandwidth setting.
type BandwidthScheduleResponseArgs struct {
	// The days of the week when this schedule is applicable.
	Days pulumi.StringArrayInput `pulumi:"days"`
	// The rate in Mbps.
	RateInMbps pulumi.IntInput `pulumi:"rateInMbps"`
	// The start time of the schedule.
	Start TimeResponseInput `pulumi:"start"`
	// The stop time of the schedule.
	Stop TimeResponseInput `pulumi:"stop"`
}

func (BandwidthScheduleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthScheduleResponse)(nil)).Elem()
}

func (i BandwidthScheduleResponseArgs) ToBandwidthScheduleResponseOutput() BandwidthScheduleResponseOutput {
	return i.ToBandwidthScheduleResponseOutputWithContext(context.Background())
}

func (i BandwidthScheduleResponseArgs) ToBandwidthScheduleResponseOutputWithContext(ctx context.Context) BandwidthScheduleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthScheduleResponseOutput)
}

// BandwidthScheduleResponseArrayInput is an input type that accepts BandwidthScheduleResponseArray and BandwidthScheduleResponseArrayOutput values.
// You can construct a concrete instance of `BandwidthScheduleResponseArrayInput` via:
//
//          BandwidthScheduleResponseArray{ BandwidthScheduleResponseArgs{...} }
type BandwidthScheduleResponseArrayInput interface {
	pulumi.Input

	ToBandwidthScheduleResponseArrayOutput() BandwidthScheduleResponseArrayOutput
	ToBandwidthScheduleResponseArrayOutputWithContext(context.Context) BandwidthScheduleResponseArrayOutput
}

type BandwidthScheduleResponseArray []BandwidthScheduleResponseInput

func (BandwidthScheduleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthScheduleResponse)(nil)).Elem()
}

func (i BandwidthScheduleResponseArray) ToBandwidthScheduleResponseArrayOutput() BandwidthScheduleResponseArrayOutput {
	return i.ToBandwidthScheduleResponseArrayOutputWithContext(context.Background())
}

func (i BandwidthScheduleResponseArray) ToBandwidthScheduleResponseArrayOutputWithContext(ctx context.Context) BandwidthScheduleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthScheduleResponseArrayOutput)
}

// The schedule for bandwidth setting.
type BandwidthScheduleResponseOutput struct{ *pulumi.OutputState }

func (BandwidthScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthScheduleResponse)(nil)).Elem()
}

func (o BandwidthScheduleResponseOutput) ToBandwidthScheduleResponseOutput() BandwidthScheduleResponseOutput {
	return o
}

func (o BandwidthScheduleResponseOutput) ToBandwidthScheduleResponseOutputWithContext(ctx context.Context) BandwidthScheduleResponseOutput {
	return o
}

// The days of the week when this schedule is applicable.
func (o BandwidthScheduleResponseOutput) Days() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BandwidthScheduleResponse) []string { return v.Days }).(pulumi.StringArrayOutput)
}

// The rate in Mbps.
func (o BandwidthScheduleResponseOutput) RateInMbps() pulumi.IntOutput {
	return o.ApplyT(func(v BandwidthScheduleResponse) int { return v.RateInMbps }).(pulumi.IntOutput)
}

// The start time of the schedule.
func (o BandwidthScheduleResponseOutput) Start() TimeResponseOutput {
	return o.ApplyT(func(v BandwidthScheduleResponse) TimeResponse { return v.Start }).(TimeResponseOutput)
}

// The stop time of the schedule.
func (o BandwidthScheduleResponseOutput) Stop() TimeResponseOutput {
	return o.ApplyT(func(v BandwidthScheduleResponse) TimeResponse { return v.Stop }).(TimeResponseOutput)
}

type BandwidthScheduleResponseArrayOutput struct{ *pulumi.OutputState }

func (BandwidthScheduleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthScheduleResponse)(nil)).Elem()
}

func (o BandwidthScheduleResponseArrayOutput) ToBandwidthScheduleResponseArrayOutput() BandwidthScheduleResponseArrayOutput {
	return o
}

func (o BandwidthScheduleResponseArrayOutput) ToBandwidthScheduleResponseArrayOutputWithContext(ctx context.Context) BandwidthScheduleResponseArrayOutput {
	return o
}

func (o BandwidthScheduleResponseArrayOutput) Index(i pulumi.IntInput) BandwidthScheduleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthScheduleResponse {
		return vs[0].([]BandwidthScheduleResponse)[vs[1].(int)]
	}).(BandwidthScheduleResponseOutput)
}

// The eligibility result of failover set, for failover.
type FailoverSetEligibilityResultInvokeResponse struct {
	// The error message, if the failover set is not eligible for failover.
	ErrorMessage *string `pulumi:"errorMessage"`
	// Represents if this failover set is eligible for failover or not.
	IsEligibleForFailover *bool `pulumi:"isEligibleForFailover"`
}

// FailoverSetEligibilityResultInvokeResponseInput is an input type that accepts FailoverSetEligibilityResultInvokeResponseArgs and FailoverSetEligibilityResultInvokeResponseOutput values.
// You can construct a concrete instance of `FailoverSetEligibilityResultInvokeResponseInput` via:
//
//          FailoverSetEligibilityResultInvokeResponseArgs{...}
type FailoverSetEligibilityResultInvokeResponseInput interface {
	pulumi.Input

	ToFailoverSetEligibilityResultInvokeResponseOutput() FailoverSetEligibilityResultInvokeResponseOutput
	ToFailoverSetEligibilityResultInvokeResponseOutputWithContext(context.Context) FailoverSetEligibilityResultInvokeResponseOutput
}

// The eligibility result of failover set, for failover.
type FailoverSetEligibilityResultInvokeResponseArgs struct {
	// The error message, if the failover set is not eligible for failover.
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
	// Represents if this failover set is eligible for failover or not.
	IsEligibleForFailover pulumi.BoolPtrInput `pulumi:"isEligibleForFailover"`
}

func (FailoverSetEligibilityResultInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverSetEligibilityResultInvokeResponse)(nil)).Elem()
}

func (i FailoverSetEligibilityResultInvokeResponseArgs) ToFailoverSetEligibilityResultInvokeResponseOutput() FailoverSetEligibilityResultInvokeResponseOutput {
	return i.ToFailoverSetEligibilityResultInvokeResponseOutputWithContext(context.Background())
}

func (i FailoverSetEligibilityResultInvokeResponseArgs) ToFailoverSetEligibilityResultInvokeResponseOutputWithContext(ctx context.Context) FailoverSetEligibilityResultInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverSetEligibilityResultInvokeResponseOutput)
}

func (i FailoverSetEligibilityResultInvokeResponseArgs) ToFailoverSetEligibilityResultInvokeResponsePtrOutput() FailoverSetEligibilityResultInvokeResponsePtrOutput {
	return i.ToFailoverSetEligibilityResultInvokeResponsePtrOutputWithContext(context.Background())
}

func (i FailoverSetEligibilityResultInvokeResponseArgs) ToFailoverSetEligibilityResultInvokeResponsePtrOutputWithContext(ctx context.Context) FailoverSetEligibilityResultInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverSetEligibilityResultInvokeResponseOutput).ToFailoverSetEligibilityResultInvokeResponsePtrOutputWithContext(ctx)
}

// FailoverSetEligibilityResultInvokeResponsePtrInput is an input type that accepts FailoverSetEligibilityResultInvokeResponseArgs, FailoverSetEligibilityResultInvokeResponsePtr and FailoverSetEligibilityResultInvokeResponsePtrOutput values.
// You can construct a concrete instance of `FailoverSetEligibilityResultInvokeResponsePtrInput` via:
//
//          FailoverSetEligibilityResultInvokeResponseArgs{...}
//
//  or:
//
//          nil
type FailoverSetEligibilityResultInvokeResponsePtrInput interface {
	pulumi.Input

	ToFailoverSetEligibilityResultInvokeResponsePtrOutput() FailoverSetEligibilityResultInvokeResponsePtrOutput
	ToFailoverSetEligibilityResultInvokeResponsePtrOutputWithContext(context.Context) FailoverSetEligibilityResultInvokeResponsePtrOutput
}

type failoverSetEligibilityResultInvokeResponsePtrType FailoverSetEligibilityResultInvokeResponseArgs

func FailoverSetEligibilityResultInvokeResponsePtr(v *FailoverSetEligibilityResultInvokeResponseArgs) FailoverSetEligibilityResultInvokeResponsePtrInput {
	return (*failoverSetEligibilityResultInvokeResponsePtrType)(v)
}

func (*failoverSetEligibilityResultInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FailoverSetEligibilityResultInvokeResponse)(nil)).Elem()
}

func (i *failoverSetEligibilityResultInvokeResponsePtrType) ToFailoverSetEligibilityResultInvokeResponsePtrOutput() FailoverSetEligibilityResultInvokeResponsePtrOutput {
	return i.ToFailoverSetEligibilityResultInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *failoverSetEligibilityResultInvokeResponsePtrType) ToFailoverSetEligibilityResultInvokeResponsePtrOutputWithContext(ctx context.Context) FailoverSetEligibilityResultInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverSetEligibilityResultInvokeResponsePtrOutput)
}

// The eligibility result of failover set, for failover.
type FailoverSetEligibilityResultInvokeResponseOutput struct{ *pulumi.OutputState }

func (FailoverSetEligibilityResultInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverSetEligibilityResultInvokeResponse)(nil)).Elem()
}

func (o FailoverSetEligibilityResultInvokeResponseOutput) ToFailoverSetEligibilityResultInvokeResponseOutput() FailoverSetEligibilityResultInvokeResponseOutput {
	return o
}

func (o FailoverSetEligibilityResultInvokeResponseOutput) ToFailoverSetEligibilityResultInvokeResponseOutputWithContext(ctx context.Context) FailoverSetEligibilityResultInvokeResponseOutput {
	return o
}

func (o FailoverSetEligibilityResultInvokeResponseOutput) ToFailoverSetEligibilityResultInvokeResponsePtrOutput() FailoverSetEligibilityResultInvokeResponsePtrOutput {
	return o.ToFailoverSetEligibilityResultInvokeResponsePtrOutputWithContext(context.Background())
}

func (o FailoverSetEligibilityResultInvokeResponseOutput) ToFailoverSetEligibilityResultInvokeResponsePtrOutputWithContext(ctx context.Context) FailoverSetEligibilityResultInvokeResponsePtrOutput {
	return o.ApplyT(func(v FailoverSetEligibilityResultInvokeResponse) *FailoverSetEligibilityResultInvokeResponse {
		return &v
	}).(FailoverSetEligibilityResultInvokeResponsePtrOutput)
}

// The error message, if the failover set is not eligible for failover.
func (o FailoverSetEligibilityResultInvokeResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverSetEligibilityResultInvokeResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Represents if this failover set is eligible for failover or not.
func (o FailoverSetEligibilityResultInvokeResponseOutput) IsEligibleForFailover() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FailoverSetEligibilityResultInvokeResponse) *bool { return v.IsEligibleForFailover }).(pulumi.BoolPtrOutput)
}

type FailoverSetEligibilityResultInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (FailoverSetEligibilityResultInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FailoverSetEligibilityResultInvokeResponse)(nil)).Elem()
}

func (o FailoverSetEligibilityResultInvokeResponsePtrOutput) ToFailoverSetEligibilityResultInvokeResponsePtrOutput() FailoverSetEligibilityResultInvokeResponsePtrOutput {
	return o
}

func (o FailoverSetEligibilityResultInvokeResponsePtrOutput) ToFailoverSetEligibilityResultInvokeResponsePtrOutputWithContext(ctx context.Context) FailoverSetEligibilityResultInvokeResponsePtrOutput {
	return o
}

func (o FailoverSetEligibilityResultInvokeResponsePtrOutput) Elem() FailoverSetEligibilityResultInvokeResponseOutput {
	return o.ApplyT(func(v *FailoverSetEligibilityResultInvokeResponse) FailoverSetEligibilityResultInvokeResponse {
		return *v
	}).(FailoverSetEligibilityResultInvokeResponseOutput)
}

// The error message, if the failover set is not eligible for failover.
func (o FailoverSetEligibilityResultInvokeResponsePtrOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FailoverSetEligibilityResultInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

// Represents if this failover set is eligible for failover or not.
func (o FailoverSetEligibilityResultInvokeResponsePtrOutput) IsEligibleForFailover() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FailoverSetEligibilityResultInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsEligibleForFailover
	}).(pulumi.BoolPtrOutput)
}

// The failover set on a device.
type FailoverSetInvokeResponse struct {
	// The eligibility result of the failover set, for failover.
	EligibilityResult *FailoverSetEligibilityResultInvokeResponse `pulumi:"eligibilityResult"`
	// The list of meta data of volume containers, which are part of the failover set.
	VolumeContainers []VolumeContainerFailoverMetadataInvokeResponse `pulumi:"volumeContainers"`
}

// FailoverSetInvokeResponseInput is an input type that accepts FailoverSetInvokeResponseArgs and FailoverSetInvokeResponseOutput values.
// You can construct a concrete instance of `FailoverSetInvokeResponseInput` via:
//
//          FailoverSetInvokeResponseArgs{...}
type FailoverSetInvokeResponseInput interface {
	pulumi.Input

	ToFailoverSetInvokeResponseOutput() FailoverSetInvokeResponseOutput
	ToFailoverSetInvokeResponseOutputWithContext(context.Context) FailoverSetInvokeResponseOutput
}

// The failover set on a device.
type FailoverSetInvokeResponseArgs struct {
	// The eligibility result of the failover set, for failover.
	EligibilityResult FailoverSetEligibilityResultInvokeResponsePtrInput `pulumi:"eligibilityResult"`
	// The list of meta data of volume containers, which are part of the failover set.
	VolumeContainers VolumeContainerFailoverMetadataInvokeResponseArrayInput `pulumi:"volumeContainers"`
}

func (FailoverSetInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverSetInvokeResponse)(nil)).Elem()
}

func (i FailoverSetInvokeResponseArgs) ToFailoverSetInvokeResponseOutput() FailoverSetInvokeResponseOutput {
	return i.ToFailoverSetInvokeResponseOutputWithContext(context.Background())
}

func (i FailoverSetInvokeResponseArgs) ToFailoverSetInvokeResponseOutputWithContext(ctx context.Context) FailoverSetInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverSetInvokeResponseOutput)
}

// FailoverSetInvokeResponseArrayInput is an input type that accepts FailoverSetInvokeResponseArray and FailoverSetInvokeResponseArrayOutput values.
// You can construct a concrete instance of `FailoverSetInvokeResponseArrayInput` via:
//
//          FailoverSetInvokeResponseArray{ FailoverSetInvokeResponseArgs{...} }
type FailoverSetInvokeResponseArrayInput interface {
	pulumi.Input

	ToFailoverSetInvokeResponseArrayOutput() FailoverSetInvokeResponseArrayOutput
	ToFailoverSetInvokeResponseArrayOutputWithContext(context.Context) FailoverSetInvokeResponseArrayOutput
}

type FailoverSetInvokeResponseArray []FailoverSetInvokeResponseInput

func (FailoverSetInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FailoverSetInvokeResponse)(nil)).Elem()
}

func (i FailoverSetInvokeResponseArray) ToFailoverSetInvokeResponseArrayOutput() FailoverSetInvokeResponseArrayOutput {
	return i.ToFailoverSetInvokeResponseArrayOutputWithContext(context.Background())
}

func (i FailoverSetInvokeResponseArray) ToFailoverSetInvokeResponseArrayOutputWithContext(ctx context.Context) FailoverSetInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverSetInvokeResponseArrayOutput)
}

// The failover set on a device.
type FailoverSetInvokeResponseOutput struct{ *pulumi.OutputState }

func (FailoverSetInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverSetInvokeResponse)(nil)).Elem()
}

func (o FailoverSetInvokeResponseOutput) ToFailoverSetInvokeResponseOutput() FailoverSetInvokeResponseOutput {
	return o
}

func (o FailoverSetInvokeResponseOutput) ToFailoverSetInvokeResponseOutputWithContext(ctx context.Context) FailoverSetInvokeResponseOutput {
	return o
}

// The eligibility result of the failover set, for failover.
func (o FailoverSetInvokeResponseOutput) EligibilityResult() FailoverSetEligibilityResultInvokeResponsePtrOutput {
	return o.ApplyT(func(v FailoverSetInvokeResponse) *FailoverSetEligibilityResultInvokeResponse {
		return v.EligibilityResult
	}).(FailoverSetEligibilityResultInvokeResponsePtrOutput)
}

// The list of meta data of volume containers, which are part of the failover set.
func (o FailoverSetInvokeResponseOutput) VolumeContainers() VolumeContainerFailoverMetadataInvokeResponseArrayOutput {
	return o.ApplyT(func(v FailoverSetInvokeResponse) []VolumeContainerFailoverMetadataInvokeResponse {
		return v.VolumeContainers
	}).(VolumeContainerFailoverMetadataInvokeResponseArrayOutput)
}

type FailoverSetInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (FailoverSetInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FailoverSetInvokeResponse)(nil)).Elem()
}

func (o FailoverSetInvokeResponseArrayOutput) ToFailoverSetInvokeResponseArrayOutput() FailoverSetInvokeResponseArrayOutput {
	return o
}

func (o FailoverSetInvokeResponseArrayOutput) ToFailoverSetInvokeResponseArrayOutputWithContext(ctx context.Context) FailoverSetInvokeResponseArrayOutput {
	return o
}

func (o FailoverSetInvokeResponseArrayOutput) Index(i pulumi.IntInput) FailoverSetInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FailoverSetInvokeResponse {
		return vs[0].([]FailoverSetInvokeResponse)[vs[1].(int)]
	}).(FailoverSetInvokeResponseOutput)
}

// Represents the eligibility of a device as a failover target device.
type FailoverTargetInvokeResponse struct {
	// The amount of free local storage available on the device in bytes.
	AvailableLocalStorageInBytes *float64 `pulumi:"availableLocalStorageInBytes"`
	// The amount of free tiered storage available for the device in bytes.
	AvailableTieredStorageInBytes *float64 `pulumi:"availableTieredStorageInBytes"`
	// The count of data containers on the device.
	DataContainersCount *int `pulumi:"dataContainersCount"`
	// The path ID of the device.
	DeviceId *string `pulumi:"deviceId"`
	// The geo location (applicable only for cloud appliances) of the device.
	DeviceLocation *string `pulumi:"deviceLocation"`
	// The software version of the device.
	DeviceSoftwareVersion *string `pulumi:"deviceSoftwareVersion"`
	// The status of the device.
	DeviceStatus *string `pulumi:"deviceStatus"`
	// The eligibility result of the device, as a failover target device.
	EligibilityResult *TargetEligibilityResultInvokeResponse `pulumi:"eligibilityResult"`
	// The friendly name for the current version of software on the device.
	FriendlyDeviceSoftwareVersion *string `pulumi:"friendlyDeviceSoftwareVersion"`
	// The model number of the device.
	ModelDescription *string `pulumi:"modelDescription"`
	// The count of volumes on the device.
	VolumesCount *int `pulumi:"volumesCount"`
}

// FailoverTargetInvokeResponseInput is an input type that accepts FailoverTargetInvokeResponseArgs and FailoverTargetInvokeResponseOutput values.
// You can construct a concrete instance of `FailoverTargetInvokeResponseInput` via:
//
//          FailoverTargetInvokeResponseArgs{...}
type FailoverTargetInvokeResponseInput interface {
	pulumi.Input

	ToFailoverTargetInvokeResponseOutput() FailoverTargetInvokeResponseOutput
	ToFailoverTargetInvokeResponseOutputWithContext(context.Context) FailoverTargetInvokeResponseOutput
}

// Represents the eligibility of a device as a failover target device.
type FailoverTargetInvokeResponseArgs struct {
	// The amount of free local storage available on the device in bytes.
	AvailableLocalStorageInBytes pulumi.Float64PtrInput `pulumi:"availableLocalStorageInBytes"`
	// The amount of free tiered storage available for the device in bytes.
	AvailableTieredStorageInBytes pulumi.Float64PtrInput `pulumi:"availableTieredStorageInBytes"`
	// The count of data containers on the device.
	DataContainersCount pulumi.IntPtrInput `pulumi:"dataContainersCount"`
	// The path ID of the device.
	DeviceId pulumi.StringPtrInput `pulumi:"deviceId"`
	// The geo location (applicable only for cloud appliances) of the device.
	DeviceLocation pulumi.StringPtrInput `pulumi:"deviceLocation"`
	// The software version of the device.
	DeviceSoftwareVersion pulumi.StringPtrInput `pulumi:"deviceSoftwareVersion"`
	// The status of the device.
	DeviceStatus pulumi.StringPtrInput `pulumi:"deviceStatus"`
	// The eligibility result of the device, as a failover target device.
	EligibilityResult TargetEligibilityResultInvokeResponsePtrInput `pulumi:"eligibilityResult"`
	// The friendly name for the current version of software on the device.
	FriendlyDeviceSoftwareVersion pulumi.StringPtrInput `pulumi:"friendlyDeviceSoftwareVersion"`
	// The model number of the device.
	ModelDescription pulumi.StringPtrInput `pulumi:"modelDescription"`
	// The count of volumes on the device.
	VolumesCount pulumi.IntPtrInput `pulumi:"volumesCount"`
}

func (FailoverTargetInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverTargetInvokeResponse)(nil)).Elem()
}

func (i FailoverTargetInvokeResponseArgs) ToFailoverTargetInvokeResponseOutput() FailoverTargetInvokeResponseOutput {
	return i.ToFailoverTargetInvokeResponseOutputWithContext(context.Background())
}

func (i FailoverTargetInvokeResponseArgs) ToFailoverTargetInvokeResponseOutputWithContext(ctx context.Context) FailoverTargetInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverTargetInvokeResponseOutput)
}

// FailoverTargetInvokeResponseArrayInput is an input type that accepts FailoverTargetInvokeResponseArray and FailoverTargetInvokeResponseArrayOutput values.
// You can construct a concrete instance of `FailoverTargetInvokeResponseArrayInput` via:
//
//          FailoverTargetInvokeResponseArray{ FailoverTargetInvokeResponseArgs{...} }
type FailoverTargetInvokeResponseArrayInput interface {
	pulumi.Input

	ToFailoverTargetInvokeResponseArrayOutput() FailoverTargetInvokeResponseArrayOutput
	ToFailoverTargetInvokeResponseArrayOutputWithContext(context.Context) FailoverTargetInvokeResponseArrayOutput
}

type FailoverTargetInvokeResponseArray []FailoverTargetInvokeResponseInput

func (FailoverTargetInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FailoverTargetInvokeResponse)(nil)).Elem()
}

func (i FailoverTargetInvokeResponseArray) ToFailoverTargetInvokeResponseArrayOutput() FailoverTargetInvokeResponseArrayOutput {
	return i.ToFailoverTargetInvokeResponseArrayOutputWithContext(context.Background())
}

func (i FailoverTargetInvokeResponseArray) ToFailoverTargetInvokeResponseArrayOutputWithContext(ctx context.Context) FailoverTargetInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverTargetInvokeResponseArrayOutput)
}

// Represents the eligibility of a device as a failover target device.
type FailoverTargetInvokeResponseOutput struct{ *pulumi.OutputState }

func (FailoverTargetInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverTargetInvokeResponse)(nil)).Elem()
}

func (o FailoverTargetInvokeResponseOutput) ToFailoverTargetInvokeResponseOutput() FailoverTargetInvokeResponseOutput {
	return o
}

func (o FailoverTargetInvokeResponseOutput) ToFailoverTargetInvokeResponseOutputWithContext(ctx context.Context) FailoverTargetInvokeResponseOutput {
	return o
}

// The amount of free local storage available on the device in bytes.
func (o FailoverTargetInvokeResponseOutput) AvailableLocalStorageInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FailoverTargetInvokeResponse) *float64 { return v.AvailableLocalStorageInBytes }).(pulumi.Float64PtrOutput)
}

// The amount of free tiered storage available for the device in bytes.
func (o FailoverTargetInvokeResponseOutput) AvailableTieredStorageInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FailoverTargetInvokeResponse) *float64 { return v.AvailableTieredStorageInBytes }).(pulumi.Float64PtrOutput)
}

// The count of data containers on the device.
func (o FailoverTargetInvokeResponseOutput) DataContainersCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FailoverTargetInvokeResponse) *int { return v.DataContainersCount }).(pulumi.IntPtrOutput)
}

// The path ID of the device.
func (o FailoverTargetInvokeResponseOutput) DeviceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverTargetInvokeResponse) *string { return v.DeviceId }).(pulumi.StringPtrOutput)
}

// The geo location (applicable only for cloud appliances) of the device.
func (o FailoverTargetInvokeResponseOutput) DeviceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverTargetInvokeResponse) *string { return v.DeviceLocation }).(pulumi.StringPtrOutput)
}

// The software version of the device.
func (o FailoverTargetInvokeResponseOutput) DeviceSoftwareVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverTargetInvokeResponse) *string { return v.DeviceSoftwareVersion }).(pulumi.StringPtrOutput)
}

// The status of the device.
func (o FailoverTargetInvokeResponseOutput) DeviceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverTargetInvokeResponse) *string { return v.DeviceStatus }).(pulumi.StringPtrOutput)
}

// The eligibility result of the device, as a failover target device.
func (o FailoverTargetInvokeResponseOutput) EligibilityResult() TargetEligibilityResultInvokeResponsePtrOutput {
	return o.ApplyT(func(v FailoverTargetInvokeResponse) *TargetEligibilityResultInvokeResponse {
		return v.EligibilityResult
	}).(TargetEligibilityResultInvokeResponsePtrOutput)
}

// The friendly name for the current version of software on the device.
func (o FailoverTargetInvokeResponseOutput) FriendlyDeviceSoftwareVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverTargetInvokeResponse) *string { return v.FriendlyDeviceSoftwareVersion }).(pulumi.StringPtrOutput)
}

// The model number of the device.
func (o FailoverTargetInvokeResponseOutput) ModelDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverTargetInvokeResponse) *string { return v.ModelDescription }).(pulumi.StringPtrOutput)
}

// The count of volumes on the device.
func (o FailoverTargetInvokeResponseOutput) VolumesCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FailoverTargetInvokeResponse) *int { return v.VolumesCount }).(pulumi.IntPtrOutput)
}

type FailoverTargetInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (FailoverTargetInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FailoverTargetInvokeResponse)(nil)).Elem()
}

func (o FailoverTargetInvokeResponseArrayOutput) ToFailoverTargetInvokeResponseArrayOutput() FailoverTargetInvokeResponseArrayOutput {
	return o
}

func (o FailoverTargetInvokeResponseArrayOutput) ToFailoverTargetInvokeResponseArrayOutputWithContext(ctx context.Context) FailoverTargetInvokeResponseArrayOutput {
	return o
}

func (o FailoverTargetInvokeResponseArrayOutput) Index(i pulumi.IntInput) FailoverTargetInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FailoverTargetInvokeResponse {
		return vs[0].([]FailoverTargetInvokeResponse)[vs[1].(int)]
	}).(FailoverTargetInvokeResponseOutput)
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettings struct {
	// The type of StorSimple Manager.
	Type string `pulumi:"type"`
}

// ManagerIntrinsicSettingsInput is an input type that accepts ManagerIntrinsicSettingsArgs and ManagerIntrinsicSettingsOutput values.
// You can construct a concrete instance of `ManagerIntrinsicSettingsInput` via:
//
//          ManagerIntrinsicSettingsArgs{...}
type ManagerIntrinsicSettingsInput interface {
	pulumi.Input

	ToManagerIntrinsicSettingsOutput() ManagerIntrinsicSettingsOutput
	ToManagerIntrinsicSettingsOutputWithContext(context.Context) ManagerIntrinsicSettingsOutput
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettingsArgs struct {
	// The type of StorSimple Manager.
	Type ManagerType `pulumi:"type"`
}

func (ManagerIntrinsicSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerIntrinsicSettings)(nil)).Elem()
}

func (i ManagerIntrinsicSettingsArgs) ToManagerIntrinsicSettingsOutput() ManagerIntrinsicSettingsOutput {
	return i.ToManagerIntrinsicSettingsOutputWithContext(context.Background())
}

func (i ManagerIntrinsicSettingsArgs) ToManagerIntrinsicSettingsOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsOutput)
}

func (i ManagerIntrinsicSettingsArgs) ToManagerIntrinsicSettingsPtrOutput() ManagerIntrinsicSettingsPtrOutput {
	return i.ToManagerIntrinsicSettingsPtrOutputWithContext(context.Background())
}

func (i ManagerIntrinsicSettingsArgs) ToManagerIntrinsicSettingsPtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsOutput).ToManagerIntrinsicSettingsPtrOutputWithContext(ctx)
}

// ManagerIntrinsicSettingsPtrInput is an input type that accepts ManagerIntrinsicSettingsArgs, ManagerIntrinsicSettingsPtr and ManagerIntrinsicSettingsPtrOutput values.
// You can construct a concrete instance of `ManagerIntrinsicSettingsPtrInput` via:
//
//          ManagerIntrinsicSettingsArgs{...}
//
//  or:
//
//          nil
type ManagerIntrinsicSettingsPtrInput interface {
	pulumi.Input

	ToManagerIntrinsicSettingsPtrOutput() ManagerIntrinsicSettingsPtrOutput
	ToManagerIntrinsicSettingsPtrOutputWithContext(context.Context) ManagerIntrinsicSettingsPtrOutput
}

type managerIntrinsicSettingsPtrType ManagerIntrinsicSettingsArgs

func ManagerIntrinsicSettingsPtr(v *ManagerIntrinsicSettingsArgs) ManagerIntrinsicSettingsPtrInput {
	return (*managerIntrinsicSettingsPtrType)(v)
}

func (*managerIntrinsicSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerIntrinsicSettings)(nil)).Elem()
}

func (i *managerIntrinsicSettingsPtrType) ToManagerIntrinsicSettingsPtrOutput() ManagerIntrinsicSettingsPtrOutput {
	return i.ToManagerIntrinsicSettingsPtrOutputWithContext(context.Background())
}

func (i *managerIntrinsicSettingsPtrType) ToManagerIntrinsicSettingsPtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsPtrOutput)
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettingsOutput struct{ *pulumi.OutputState }

func (ManagerIntrinsicSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerIntrinsicSettings)(nil)).Elem()
}

func (o ManagerIntrinsicSettingsOutput) ToManagerIntrinsicSettingsOutput() ManagerIntrinsicSettingsOutput {
	return o
}

func (o ManagerIntrinsicSettingsOutput) ToManagerIntrinsicSettingsOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsOutput {
	return o
}

func (o ManagerIntrinsicSettingsOutput) ToManagerIntrinsicSettingsPtrOutput() ManagerIntrinsicSettingsPtrOutput {
	return o.ToManagerIntrinsicSettingsPtrOutputWithContext(context.Background())
}

func (o ManagerIntrinsicSettingsOutput) ToManagerIntrinsicSettingsPtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsPtrOutput {
	return o.ApplyT(func(v ManagerIntrinsicSettings) *ManagerIntrinsicSettings {
		return &v
	}).(ManagerIntrinsicSettingsPtrOutput)
}

// The type of StorSimple Manager.
func (o ManagerIntrinsicSettingsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerIntrinsicSettings) string { return v.Type }).(pulumi.StringOutput)
}

type ManagerIntrinsicSettingsPtrOutput struct{ *pulumi.OutputState }

func (ManagerIntrinsicSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerIntrinsicSettings)(nil)).Elem()
}

func (o ManagerIntrinsicSettingsPtrOutput) ToManagerIntrinsicSettingsPtrOutput() ManagerIntrinsicSettingsPtrOutput {
	return o
}

func (o ManagerIntrinsicSettingsPtrOutput) ToManagerIntrinsicSettingsPtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsPtrOutput {
	return o
}

func (o ManagerIntrinsicSettingsPtrOutput) Elem() ManagerIntrinsicSettingsOutput {
	return o.ApplyT(func(v *ManagerIntrinsicSettings) ManagerIntrinsicSettings { return *v }).(ManagerIntrinsicSettingsOutput)
}

// The type of StorSimple Manager.
func (o ManagerIntrinsicSettingsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerIntrinsicSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettingsInvokeResponse struct {
	// The type of StorSimple Manager.
	Type string `pulumi:"type"`
}

// ManagerIntrinsicSettingsInvokeResponseInput is an input type that accepts ManagerIntrinsicSettingsInvokeResponseArgs and ManagerIntrinsicSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `ManagerIntrinsicSettingsInvokeResponseInput` via:
//
//          ManagerIntrinsicSettingsInvokeResponseArgs{...}
type ManagerIntrinsicSettingsInvokeResponseInput interface {
	pulumi.Input

	ToManagerIntrinsicSettingsInvokeResponseOutput() ManagerIntrinsicSettingsInvokeResponseOutput
	ToManagerIntrinsicSettingsInvokeResponseOutputWithContext(context.Context) ManagerIntrinsicSettingsInvokeResponseOutput
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettingsInvokeResponseArgs struct {
	// The type of StorSimple Manager.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerIntrinsicSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerIntrinsicSettingsInvokeResponse)(nil)).Elem()
}

func (i ManagerIntrinsicSettingsInvokeResponseArgs) ToManagerIntrinsicSettingsInvokeResponseOutput() ManagerIntrinsicSettingsInvokeResponseOutput {
	return i.ToManagerIntrinsicSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i ManagerIntrinsicSettingsInvokeResponseArgs) ToManagerIntrinsicSettingsInvokeResponseOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsInvokeResponseOutput)
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (ManagerIntrinsicSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerIntrinsicSettingsInvokeResponse)(nil)).Elem()
}

func (o ManagerIntrinsicSettingsInvokeResponseOutput) ToManagerIntrinsicSettingsInvokeResponseOutput() ManagerIntrinsicSettingsInvokeResponseOutput {
	return o
}

func (o ManagerIntrinsicSettingsInvokeResponseOutput) ToManagerIntrinsicSettingsInvokeResponseOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsInvokeResponseOutput {
	return o
}

// The type of StorSimple Manager.
func (o ManagerIntrinsicSettingsInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerIntrinsicSettingsInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettingsResponse struct {
	// The type of StorSimple Manager.
	Type string `pulumi:"type"`
}

// ManagerIntrinsicSettingsResponseInput is an input type that accepts ManagerIntrinsicSettingsResponseArgs and ManagerIntrinsicSettingsResponseOutput values.
// You can construct a concrete instance of `ManagerIntrinsicSettingsResponseInput` via:
//
//          ManagerIntrinsicSettingsResponseArgs{...}
type ManagerIntrinsicSettingsResponseInput interface {
	pulumi.Input

	ToManagerIntrinsicSettingsResponseOutput() ManagerIntrinsicSettingsResponseOutput
	ToManagerIntrinsicSettingsResponseOutputWithContext(context.Context) ManagerIntrinsicSettingsResponseOutput
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettingsResponseArgs struct {
	// The type of StorSimple Manager.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagerIntrinsicSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerIntrinsicSettingsResponse)(nil)).Elem()
}

func (i ManagerIntrinsicSettingsResponseArgs) ToManagerIntrinsicSettingsResponseOutput() ManagerIntrinsicSettingsResponseOutput {
	return i.ToManagerIntrinsicSettingsResponseOutputWithContext(context.Background())
}

func (i ManagerIntrinsicSettingsResponseArgs) ToManagerIntrinsicSettingsResponseOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsResponseOutput)
}

func (i ManagerIntrinsicSettingsResponseArgs) ToManagerIntrinsicSettingsResponsePtrOutput() ManagerIntrinsicSettingsResponsePtrOutput {
	return i.ToManagerIntrinsicSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ManagerIntrinsicSettingsResponseArgs) ToManagerIntrinsicSettingsResponsePtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsResponseOutput).ToManagerIntrinsicSettingsResponsePtrOutputWithContext(ctx)
}

// ManagerIntrinsicSettingsResponsePtrInput is an input type that accepts ManagerIntrinsicSettingsResponseArgs, ManagerIntrinsicSettingsResponsePtr and ManagerIntrinsicSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ManagerIntrinsicSettingsResponsePtrInput` via:
//
//          ManagerIntrinsicSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ManagerIntrinsicSettingsResponsePtrInput interface {
	pulumi.Input

	ToManagerIntrinsicSettingsResponsePtrOutput() ManagerIntrinsicSettingsResponsePtrOutput
	ToManagerIntrinsicSettingsResponsePtrOutputWithContext(context.Context) ManagerIntrinsicSettingsResponsePtrOutput
}

type managerIntrinsicSettingsResponsePtrType ManagerIntrinsicSettingsResponseArgs

func ManagerIntrinsicSettingsResponsePtr(v *ManagerIntrinsicSettingsResponseArgs) ManagerIntrinsicSettingsResponsePtrInput {
	return (*managerIntrinsicSettingsResponsePtrType)(v)
}

func (*managerIntrinsicSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerIntrinsicSettingsResponse)(nil)).Elem()
}

func (i *managerIntrinsicSettingsResponsePtrType) ToManagerIntrinsicSettingsResponsePtrOutput() ManagerIntrinsicSettingsResponsePtrOutput {
	return i.ToManagerIntrinsicSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *managerIntrinsicSettingsResponsePtrType) ToManagerIntrinsicSettingsResponsePtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerIntrinsicSettingsResponsePtrOutput)
}

// Intrinsic settings which refers to the type of the StorSimple Manager.
type ManagerIntrinsicSettingsResponseOutput struct{ *pulumi.OutputState }

func (ManagerIntrinsicSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerIntrinsicSettingsResponse)(nil)).Elem()
}

func (o ManagerIntrinsicSettingsResponseOutput) ToManagerIntrinsicSettingsResponseOutput() ManagerIntrinsicSettingsResponseOutput {
	return o
}

func (o ManagerIntrinsicSettingsResponseOutput) ToManagerIntrinsicSettingsResponseOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsResponseOutput {
	return o
}

func (o ManagerIntrinsicSettingsResponseOutput) ToManagerIntrinsicSettingsResponsePtrOutput() ManagerIntrinsicSettingsResponsePtrOutput {
	return o.ToManagerIntrinsicSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ManagerIntrinsicSettingsResponseOutput) ToManagerIntrinsicSettingsResponsePtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsResponsePtrOutput {
	return o.ApplyT(func(v ManagerIntrinsicSettingsResponse) *ManagerIntrinsicSettingsResponse {
		return &v
	}).(ManagerIntrinsicSettingsResponsePtrOutput)
}

// The type of StorSimple Manager.
func (o ManagerIntrinsicSettingsResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerIntrinsicSettingsResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ManagerIntrinsicSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagerIntrinsicSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerIntrinsicSettingsResponse)(nil)).Elem()
}

func (o ManagerIntrinsicSettingsResponsePtrOutput) ToManagerIntrinsicSettingsResponsePtrOutput() ManagerIntrinsicSettingsResponsePtrOutput {
	return o
}

func (o ManagerIntrinsicSettingsResponsePtrOutput) ToManagerIntrinsicSettingsResponsePtrOutputWithContext(ctx context.Context) ManagerIntrinsicSettingsResponsePtrOutput {
	return o
}

func (o ManagerIntrinsicSettingsResponsePtrOutput) Elem() ManagerIntrinsicSettingsResponseOutput {
	return o.ApplyT(func(v *ManagerIntrinsicSettingsResponse) ManagerIntrinsicSettingsResponse { return *v }).(ManagerIntrinsicSettingsResponseOutput)
}

// The type of StorSimple Manager.
func (o ManagerIntrinsicSettingsResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerIntrinsicSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The Sku.
type ManagerSku struct {
	// Refers to the sku name which should be "Standard"
	Name string `pulumi:"name"`
}

// ManagerSkuInput is an input type that accepts ManagerSkuArgs and ManagerSkuOutput values.
// You can construct a concrete instance of `ManagerSkuInput` via:
//
//          ManagerSkuArgs{...}
type ManagerSkuInput interface {
	pulumi.Input

	ToManagerSkuOutput() ManagerSkuOutput
	ToManagerSkuOutputWithContext(context.Context) ManagerSkuOutput
}

// The Sku.
type ManagerSkuArgs struct {
	// Refers to the sku name which should be "Standard"
	Name ManagerSkuType `pulumi:"name"`
}

func (ManagerSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerSku)(nil)).Elem()
}

func (i ManagerSkuArgs) ToManagerSkuOutput() ManagerSkuOutput {
	return i.ToManagerSkuOutputWithContext(context.Background())
}

func (i ManagerSkuArgs) ToManagerSkuOutputWithContext(ctx context.Context) ManagerSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuOutput)
}

func (i ManagerSkuArgs) ToManagerSkuPtrOutput() ManagerSkuPtrOutput {
	return i.ToManagerSkuPtrOutputWithContext(context.Background())
}

func (i ManagerSkuArgs) ToManagerSkuPtrOutputWithContext(ctx context.Context) ManagerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuOutput).ToManagerSkuPtrOutputWithContext(ctx)
}

// ManagerSkuPtrInput is an input type that accepts ManagerSkuArgs, ManagerSkuPtr and ManagerSkuPtrOutput values.
// You can construct a concrete instance of `ManagerSkuPtrInput` via:
//
//          ManagerSkuArgs{...}
//
//  or:
//
//          nil
type ManagerSkuPtrInput interface {
	pulumi.Input

	ToManagerSkuPtrOutput() ManagerSkuPtrOutput
	ToManagerSkuPtrOutputWithContext(context.Context) ManagerSkuPtrOutput
}

type managerSkuPtrType ManagerSkuArgs

func ManagerSkuPtr(v *ManagerSkuArgs) ManagerSkuPtrInput {
	return (*managerSkuPtrType)(v)
}

func (*managerSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerSku)(nil)).Elem()
}

func (i *managerSkuPtrType) ToManagerSkuPtrOutput() ManagerSkuPtrOutput {
	return i.ToManagerSkuPtrOutputWithContext(context.Background())
}

func (i *managerSkuPtrType) ToManagerSkuPtrOutputWithContext(ctx context.Context) ManagerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuPtrOutput)
}

// The Sku.
type ManagerSkuOutput struct{ *pulumi.OutputState }

func (ManagerSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerSku)(nil)).Elem()
}

func (o ManagerSkuOutput) ToManagerSkuOutput() ManagerSkuOutput {
	return o
}

func (o ManagerSkuOutput) ToManagerSkuOutputWithContext(ctx context.Context) ManagerSkuOutput {
	return o
}

func (o ManagerSkuOutput) ToManagerSkuPtrOutput() ManagerSkuPtrOutput {
	return o.ToManagerSkuPtrOutputWithContext(context.Background())
}

func (o ManagerSkuOutput) ToManagerSkuPtrOutputWithContext(ctx context.Context) ManagerSkuPtrOutput {
	return o.ApplyT(func(v ManagerSku) *ManagerSku {
		return &v
	}).(ManagerSkuPtrOutput)
}

// Refers to the sku name which should be "Standard"
func (o ManagerSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerSku) string { return v.Name }).(pulumi.StringOutput)
}

type ManagerSkuPtrOutput struct{ *pulumi.OutputState }

func (ManagerSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerSku)(nil)).Elem()
}

func (o ManagerSkuPtrOutput) ToManagerSkuPtrOutput() ManagerSkuPtrOutput {
	return o
}

func (o ManagerSkuPtrOutput) ToManagerSkuPtrOutputWithContext(ctx context.Context) ManagerSkuPtrOutput {
	return o
}

func (o ManagerSkuPtrOutput) Elem() ManagerSkuOutput {
	return o.ApplyT(func(v *ManagerSku) ManagerSku { return *v }).(ManagerSkuOutput)
}

// Refers to the sku name which should be "Standard"
func (o ManagerSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The Sku.
type ManagerSkuInvokeResponse struct {
	// Refers to the sku name which should be "Standard"
	Name string `pulumi:"name"`
}

// ManagerSkuInvokeResponseInput is an input type that accepts ManagerSkuInvokeResponseArgs and ManagerSkuInvokeResponseOutput values.
// You can construct a concrete instance of `ManagerSkuInvokeResponseInput` via:
//
//          ManagerSkuInvokeResponseArgs{...}
type ManagerSkuInvokeResponseInput interface {
	pulumi.Input

	ToManagerSkuInvokeResponseOutput() ManagerSkuInvokeResponseOutput
	ToManagerSkuInvokeResponseOutputWithContext(context.Context) ManagerSkuInvokeResponseOutput
}

// The Sku.
type ManagerSkuInvokeResponseArgs struct {
	// Refers to the sku name which should be "Standard"
	Name pulumi.StringInput `pulumi:"name"`
}

func (ManagerSkuInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerSkuInvokeResponse)(nil)).Elem()
}

func (i ManagerSkuInvokeResponseArgs) ToManagerSkuInvokeResponseOutput() ManagerSkuInvokeResponseOutput {
	return i.ToManagerSkuInvokeResponseOutputWithContext(context.Background())
}

func (i ManagerSkuInvokeResponseArgs) ToManagerSkuInvokeResponseOutputWithContext(ctx context.Context) ManagerSkuInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuInvokeResponseOutput)
}

// The Sku.
type ManagerSkuInvokeResponseOutput struct{ *pulumi.OutputState }

func (ManagerSkuInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerSkuInvokeResponse)(nil)).Elem()
}

func (o ManagerSkuInvokeResponseOutput) ToManagerSkuInvokeResponseOutput() ManagerSkuInvokeResponseOutput {
	return o
}

func (o ManagerSkuInvokeResponseOutput) ToManagerSkuInvokeResponseOutputWithContext(ctx context.Context) ManagerSkuInvokeResponseOutput {
	return o
}

// Refers to the sku name which should be "Standard"
func (o ManagerSkuInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerSkuInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The Sku.
type ManagerSkuResponse struct {
	// Refers to the sku name which should be "Standard"
	Name string `pulumi:"name"`
}

// ManagerSkuResponseInput is an input type that accepts ManagerSkuResponseArgs and ManagerSkuResponseOutput values.
// You can construct a concrete instance of `ManagerSkuResponseInput` via:
//
//          ManagerSkuResponseArgs{...}
type ManagerSkuResponseInput interface {
	pulumi.Input

	ToManagerSkuResponseOutput() ManagerSkuResponseOutput
	ToManagerSkuResponseOutputWithContext(context.Context) ManagerSkuResponseOutput
}

// The Sku.
type ManagerSkuResponseArgs struct {
	// Refers to the sku name which should be "Standard"
	Name pulumi.StringInput `pulumi:"name"`
}

func (ManagerSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerSkuResponse)(nil)).Elem()
}

func (i ManagerSkuResponseArgs) ToManagerSkuResponseOutput() ManagerSkuResponseOutput {
	return i.ToManagerSkuResponseOutputWithContext(context.Background())
}

func (i ManagerSkuResponseArgs) ToManagerSkuResponseOutputWithContext(ctx context.Context) ManagerSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuResponseOutput)
}

func (i ManagerSkuResponseArgs) ToManagerSkuResponsePtrOutput() ManagerSkuResponsePtrOutput {
	return i.ToManagerSkuResponsePtrOutputWithContext(context.Background())
}

func (i ManagerSkuResponseArgs) ToManagerSkuResponsePtrOutputWithContext(ctx context.Context) ManagerSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuResponseOutput).ToManagerSkuResponsePtrOutputWithContext(ctx)
}

// ManagerSkuResponsePtrInput is an input type that accepts ManagerSkuResponseArgs, ManagerSkuResponsePtr and ManagerSkuResponsePtrOutput values.
// You can construct a concrete instance of `ManagerSkuResponsePtrInput` via:
//
//          ManagerSkuResponseArgs{...}
//
//  or:
//
//          nil
type ManagerSkuResponsePtrInput interface {
	pulumi.Input

	ToManagerSkuResponsePtrOutput() ManagerSkuResponsePtrOutput
	ToManagerSkuResponsePtrOutputWithContext(context.Context) ManagerSkuResponsePtrOutput
}

type managerSkuResponsePtrType ManagerSkuResponseArgs

func ManagerSkuResponsePtr(v *ManagerSkuResponseArgs) ManagerSkuResponsePtrInput {
	return (*managerSkuResponsePtrType)(v)
}

func (*managerSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerSkuResponse)(nil)).Elem()
}

func (i *managerSkuResponsePtrType) ToManagerSkuResponsePtrOutput() ManagerSkuResponsePtrOutput {
	return i.ToManagerSkuResponsePtrOutputWithContext(context.Background())
}

func (i *managerSkuResponsePtrType) ToManagerSkuResponsePtrOutputWithContext(ctx context.Context) ManagerSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagerSkuResponsePtrOutput)
}

// The Sku.
type ManagerSkuResponseOutput struct{ *pulumi.OutputState }

func (ManagerSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerSkuResponse)(nil)).Elem()
}

func (o ManagerSkuResponseOutput) ToManagerSkuResponseOutput() ManagerSkuResponseOutput {
	return o
}

func (o ManagerSkuResponseOutput) ToManagerSkuResponseOutputWithContext(ctx context.Context) ManagerSkuResponseOutput {
	return o
}

func (o ManagerSkuResponseOutput) ToManagerSkuResponsePtrOutput() ManagerSkuResponsePtrOutput {
	return o.ToManagerSkuResponsePtrOutputWithContext(context.Background())
}

func (o ManagerSkuResponseOutput) ToManagerSkuResponsePtrOutputWithContext(ctx context.Context) ManagerSkuResponsePtrOutput {
	return o.ApplyT(func(v ManagerSkuResponse) *ManagerSkuResponse {
		return &v
	}).(ManagerSkuResponsePtrOutput)
}

// Refers to the sku name which should be "Standard"
func (o ManagerSkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagerSkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

type ManagerSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagerSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerSkuResponse)(nil)).Elem()
}

func (o ManagerSkuResponsePtrOutput) ToManagerSkuResponsePtrOutput() ManagerSkuResponsePtrOutput {
	return o
}

func (o ManagerSkuResponsePtrOutput) ToManagerSkuResponsePtrOutputWithContext(ctx context.Context) ManagerSkuResponsePtrOutput {
	return o
}

func (o ManagerSkuResponsePtrOutput) Elem() ManagerSkuResponseOutput {
	return o.ApplyT(func(v *ManagerSkuResponse) ManagerSkuResponse { return *v }).(ManagerSkuResponseOutput)
}

// Refers to the sku name which should be "Standard"
func (o ManagerSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagerSkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The schedule recurrence.
type ScheduleRecurrence struct {
	// The recurrence type.
	RecurrenceType string `pulumi:"recurrenceType"`
	// The recurrence value.
	RecurrenceValue int `pulumi:"recurrenceValue"`
	// The week days list. Applicable only for schedules of recurrence type 'weekly'.
	WeeklyDaysList []string `pulumi:"weeklyDaysList"`
}

// ScheduleRecurrenceInput is an input type that accepts ScheduleRecurrenceArgs and ScheduleRecurrenceOutput values.
// You can construct a concrete instance of `ScheduleRecurrenceInput` via:
//
//          ScheduleRecurrenceArgs{...}
type ScheduleRecurrenceInput interface {
	pulumi.Input

	ToScheduleRecurrenceOutput() ScheduleRecurrenceOutput
	ToScheduleRecurrenceOutputWithContext(context.Context) ScheduleRecurrenceOutput
}

// The schedule recurrence.
type ScheduleRecurrenceArgs struct {
	// The recurrence type.
	RecurrenceType RecurrenceType `pulumi:"recurrenceType"`
	// The recurrence value.
	RecurrenceValue pulumi.IntInput `pulumi:"recurrenceValue"`
	// The week days list. Applicable only for schedules of recurrence type 'weekly'.
	WeeklyDaysList DayOfWeekArrayInput `pulumi:"weeklyDaysList"`
}

func (ScheduleRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRecurrence)(nil)).Elem()
}

func (i ScheduleRecurrenceArgs) ToScheduleRecurrenceOutput() ScheduleRecurrenceOutput {
	return i.ToScheduleRecurrenceOutputWithContext(context.Background())
}

func (i ScheduleRecurrenceArgs) ToScheduleRecurrenceOutputWithContext(ctx context.Context) ScheduleRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrenceOutput)
}

func (i ScheduleRecurrenceArgs) ToScheduleRecurrencePtrOutput() ScheduleRecurrencePtrOutput {
	return i.ToScheduleRecurrencePtrOutputWithContext(context.Background())
}

func (i ScheduleRecurrenceArgs) ToScheduleRecurrencePtrOutputWithContext(ctx context.Context) ScheduleRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrenceOutput).ToScheduleRecurrencePtrOutputWithContext(ctx)
}

// ScheduleRecurrencePtrInput is an input type that accepts ScheduleRecurrenceArgs, ScheduleRecurrencePtr and ScheduleRecurrencePtrOutput values.
// You can construct a concrete instance of `ScheduleRecurrencePtrInput` via:
//
//          ScheduleRecurrenceArgs{...}
//
//  or:
//
//          nil
type ScheduleRecurrencePtrInput interface {
	pulumi.Input

	ToScheduleRecurrencePtrOutput() ScheduleRecurrencePtrOutput
	ToScheduleRecurrencePtrOutputWithContext(context.Context) ScheduleRecurrencePtrOutput
}

type scheduleRecurrencePtrType ScheduleRecurrenceArgs

func ScheduleRecurrencePtr(v *ScheduleRecurrenceArgs) ScheduleRecurrencePtrInput {
	return (*scheduleRecurrencePtrType)(v)
}

func (*scheduleRecurrencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleRecurrence)(nil)).Elem()
}

func (i *scheduleRecurrencePtrType) ToScheduleRecurrencePtrOutput() ScheduleRecurrencePtrOutput {
	return i.ToScheduleRecurrencePtrOutputWithContext(context.Background())
}

func (i *scheduleRecurrencePtrType) ToScheduleRecurrencePtrOutputWithContext(ctx context.Context) ScheduleRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrencePtrOutput)
}

// The schedule recurrence.
type ScheduleRecurrenceOutput struct{ *pulumi.OutputState }

func (ScheduleRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRecurrence)(nil)).Elem()
}

func (o ScheduleRecurrenceOutput) ToScheduleRecurrenceOutput() ScheduleRecurrenceOutput {
	return o
}

func (o ScheduleRecurrenceOutput) ToScheduleRecurrenceOutputWithContext(ctx context.Context) ScheduleRecurrenceOutput {
	return o
}

func (o ScheduleRecurrenceOutput) ToScheduleRecurrencePtrOutput() ScheduleRecurrencePtrOutput {
	return o.ToScheduleRecurrencePtrOutputWithContext(context.Background())
}

func (o ScheduleRecurrenceOutput) ToScheduleRecurrencePtrOutputWithContext(ctx context.Context) ScheduleRecurrencePtrOutput {
	return o.ApplyT(func(v ScheduleRecurrence) *ScheduleRecurrence {
		return &v
	}).(ScheduleRecurrencePtrOutput)
}

// The recurrence type.
func (o ScheduleRecurrenceOutput) RecurrenceType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleRecurrence) string { return v.RecurrenceType }).(pulumi.StringOutput)
}

// The recurrence value.
func (o ScheduleRecurrenceOutput) RecurrenceValue() pulumi.IntOutput {
	return o.ApplyT(func(v ScheduleRecurrence) int { return v.RecurrenceValue }).(pulumi.IntOutput)
}

// The week days list. Applicable only for schedules of recurrence type 'weekly'.
func (o ScheduleRecurrenceOutput) WeeklyDaysList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleRecurrence) []string { return v.WeeklyDaysList }).(pulumi.StringArrayOutput)
}

type ScheduleRecurrencePtrOutput struct{ *pulumi.OutputState }

func (ScheduleRecurrencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleRecurrence)(nil)).Elem()
}

func (o ScheduleRecurrencePtrOutput) ToScheduleRecurrencePtrOutput() ScheduleRecurrencePtrOutput {
	return o
}

func (o ScheduleRecurrencePtrOutput) ToScheduleRecurrencePtrOutputWithContext(ctx context.Context) ScheduleRecurrencePtrOutput {
	return o
}

func (o ScheduleRecurrencePtrOutput) Elem() ScheduleRecurrenceOutput {
	return o.ApplyT(func(v *ScheduleRecurrence) ScheduleRecurrence { return *v }).(ScheduleRecurrenceOutput)
}

// The recurrence type.
func (o ScheduleRecurrencePtrOutput) RecurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleRecurrence) *string {
		if v == nil {
			return nil
		}
		return &v.RecurrenceType
	}).(pulumi.StringPtrOutput)
}

// The recurrence value.
func (o ScheduleRecurrencePtrOutput) RecurrenceValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduleRecurrence) *int {
		if v == nil {
			return nil
		}
		return &v.RecurrenceValue
	}).(pulumi.IntPtrOutput)
}

// The week days list. Applicable only for schedules of recurrence type 'weekly'.
func (o ScheduleRecurrencePtrOutput) WeeklyDaysList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScheduleRecurrence) []string {
		if v == nil {
			return nil
		}
		return v.WeeklyDaysList
	}).(pulumi.StringArrayOutput)
}

// The schedule recurrence.
type ScheduleRecurrenceInvokeResponse struct {
	// The recurrence type.
	RecurrenceType string `pulumi:"recurrenceType"`
	// The recurrence value.
	RecurrenceValue int `pulumi:"recurrenceValue"`
	// The week days list. Applicable only for schedules of recurrence type 'weekly'.
	WeeklyDaysList []string `pulumi:"weeklyDaysList"`
}

// ScheduleRecurrenceInvokeResponseInput is an input type that accepts ScheduleRecurrenceInvokeResponseArgs and ScheduleRecurrenceInvokeResponseOutput values.
// You can construct a concrete instance of `ScheduleRecurrenceInvokeResponseInput` via:
//
//          ScheduleRecurrenceInvokeResponseArgs{...}
type ScheduleRecurrenceInvokeResponseInput interface {
	pulumi.Input

	ToScheduleRecurrenceInvokeResponseOutput() ScheduleRecurrenceInvokeResponseOutput
	ToScheduleRecurrenceInvokeResponseOutputWithContext(context.Context) ScheduleRecurrenceInvokeResponseOutput
}

// The schedule recurrence.
type ScheduleRecurrenceInvokeResponseArgs struct {
	// The recurrence type.
	RecurrenceType pulumi.StringInput `pulumi:"recurrenceType"`
	// The recurrence value.
	RecurrenceValue pulumi.IntInput `pulumi:"recurrenceValue"`
	// The week days list. Applicable only for schedules of recurrence type 'weekly'.
	WeeklyDaysList pulumi.StringArrayInput `pulumi:"weeklyDaysList"`
}

func (ScheduleRecurrenceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRecurrenceInvokeResponse)(nil)).Elem()
}

func (i ScheduleRecurrenceInvokeResponseArgs) ToScheduleRecurrenceInvokeResponseOutput() ScheduleRecurrenceInvokeResponseOutput {
	return i.ToScheduleRecurrenceInvokeResponseOutputWithContext(context.Background())
}

func (i ScheduleRecurrenceInvokeResponseArgs) ToScheduleRecurrenceInvokeResponseOutputWithContext(ctx context.Context) ScheduleRecurrenceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrenceInvokeResponseOutput)
}

// The schedule recurrence.
type ScheduleRecurrenceInvokeResponseOutput struct{ *pulumi.OutputState }

func (ScheduleRecurrenceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRecurrenceInvokeResponse)(nil)).Elem()
}

func (o ScheduleRecurrenceInvokeResponseOutput) ToScheduleRecurrenceInvokeResponseOutput() ScheduleRecurrenceInvokeResponseOutput {
	return o
}

func (o ScheduleRecurrenceInvokeResponseOutput) ToScheduleRecurrenceInvokeResponseOutputWithContext(ctx context.Context) ScheduleRecurrenceInvokeResponseOutput {
	return o
}

// The recurrence type.
func (o ScheduleRecurrenceInvokeResponseOutput) RecurrenceType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleRecurrenceInvokeResponse) string { return v.RecurrenceType }).(pulumi.StringOutput)
}

// The recurrence value.
func (o ScheduleRecurrenceInvokeResponseOutput) RecurrenceValue() pulumi.IntOutput {
	return o.ApplyT(func(v ScheduleRecurrenceInvokeResponse) int { return v.RecurrenceValue }).(pulumi.IntOutput)
}

// The week days list. Applicable only for schedules of recurrence type 'weekly'.
func (o ScheduleRecurrenceInvokeResponseOutput) WeeklyDaysList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleRecurrenceInvokeResponse) []string { return v.WeeklyDaysList }).(pulumi.StringArrayOutput)
}

// The schedule recurrence.
type ScheduleRecurrenceResponse struct {
	// The recurrence type.
	RecurrenceType string `pulumi:"recurrenceType"`
	// The recurrence value.
	RecurrenceValue int `pulumi:"recurrenceValue"`
	// The week days list. Applicable only for schedules of recurrence type 'weekly'.
	WeeklyDaysList []string `pulumi:"weeklyDaysList"`
}

// ScheduleRecurrenceResponseInput is an input type that accepts ScheduleRecurrenceResponseArgs and ScheduleRecurrenceResponseOutput values.
// You can construct a concrete instance of `ScheduleRecurrenceResponseInput` via:
//
//          ScheduleRecurrenceResponseArgs{...}
type ScheduleRecurrenceResponseInput interface {
	pulumi.Input

	ToScheduleRecurrenceResponseOutput() ScheduleRecurrenceResponseOutput
	ToScheduleRecurrenceResponseOutputWithContext(context.Context) ScheduleRecurrenceResponseOutput
}

// The schedule recurrence.
type ScheduleRecurrenceResponseArgs struct {
	// The recurrence type.
	RecurrenceType pulumi.StringInput `pulumi:"recurrenceType"`
	// The recurrence value.
	RecurrenceValue pulumi.IntInput `pulumi:"recurrenceValue"`
	// The week days list. Applicable only for schedules of recurrence type 'weekly'.
	WeeklyDaysList pulumi.StringArrayInput `pulumi:"weeklyDaysList"`
}

func (ScheduleRecurrenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRecurrenceResponse)(nil)).Elem()
}

func (i ScheduleRecurrenceResponseArgs) ToScheduleRecurrenceResponseOutput() ScheduleRecurrenceResponseOutput {
	return i.ToScheduleRecurrenceResponseOutputWithContext(context.Background())
}

func (i ScheduleRecurrenceResponseArgs) ToScheduleRecurrenceResponseOutputWithContext(ctx context.Context) ScheduleRecurrenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrenceResponseOutput)
}

func (i ScheduleRecurrenceResponseArgs) ToScheduleRecurrenceResponsePtrOutput() ScheduleRecurrenceResponsePtrOutput {
	return i.ToScheduleRecurrenceResponsePtrOutputWithContext(context.Background())
}

func (i ScheduleRecurrenceResponseArgs) ToScheduleRecurrenceResponsePtrOutputWithContext(ctx context.Context) ScheduleRecurrenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrenceResponseOutput).ToScheduleRecurrenceResponsePtrOutputWithContext(ctx)
}

// ScheduleRecurrenceResponsePtrInput is an input type that accepts ScheduleRecurrenceResponseArgs, ScheduleRecurrenceResponsePtr and ScheduleRecurrenceResponsePtrOutput values.
// You can construct a concrete instance of `ScheduleRecurrenceResponsePtrInput` via:
//
//          ScheduleRecurrenceResponseArgs{...}
//
//  or:
//
//          nil
type ScheduleRecurrenceResponsePtrInput interface {
	pulumi.Input

	ToScheduleRecurrenceResponsePtrOutput() ScheduleRecurrenceResponsePtrOutput
	ToScheduleRecurrenceResponsePtrOutputWithContext(context.Context) ScheduleRecurrenceResponsePtrOutput
}

type scheduleRecurrenceResponsePtrType ScheduleRecurrenceResponseArgs

func ScheduleRecurrenceResponsePtr(v *ScheduleRecurrenceResponseArgs) ScheduleRecurrenceResponsePtrInput {
	return (*scheduleRecurrenceResponsePtrType)(v)
}

func (*scheduleRecurrenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleRecurrenceResponse)(nil)).Elem()
}

func (i *scheduleRecurrenceResponsePtrType) ToScheduleRecurrenceResponsePtrOutput() ScheduleRecurrenceResponsePtrOutput {
	return i.ToScheduleRecurrenceResponsePtrOutputWithContext(context.Background())
}

func (i *scheduleRecurrenceResponsePtrType) ToScheduleRecurrenceResponsePtrOutputWithContext(ctx context.Context) ScheduleRecurrenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleRecurrenceResponsePtrOutput)
}

// The schedule recurrence.
type ScheduleRecurrenceResponseOutput struct{ *pulumi.OutputState }

func (ScheduleRecurrenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRecurrenceResponse)(nil)).Elem()
}

func (o ScheduleRecurrenceResponseOutput) ToScheduleRecurrenceResponseOutput() ScheduleRecurrenceResponseOutput {
	return o
}

func (o ScheduleRecurrenceResponseOutput) ToScheduleRecurrenceResponseOutputWithContext(ctx context.Context) ScheduleRecurrenceResponseOutput {
	return o
}

func (o ScheduleRecurrenceResponseOutput) ToScheduleRecurrenceResponsePtrOutput() ScheduleRecurrenceResponsePtrOutput {
	return o.ToScheduleRecurrenceResponsePtrOutputWithContext(context.Background())
}

func (o ScheduleRecurrenceResponseOutput) ToScheduleRecurrenceResponsePtrOutputWithContext(ctx context.Context) ScheduleRecurrenceResponsePtrOutput {
	return o.ApplyT(func(v ScheduleRecurrenceResponse) *ScheduleRecurrenceResponse {
		return &v
	}).(ScheduleRecurrenceResponsePtrOutput)
}

// The recurrence type.
func (o ScheduleRecurrenceResponseOutput) RecurrenceType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleRecurrenceResponse) string { return v.RecurrenceType }).(pulumi.StringOutput)
}

// The recurrence value.
func (o ScheduleRecurrenceResponseOutput) RecurrenceValue() pulumi.IntOutput {
	return o.ApplyT(func(v ScheduleRecurrenceResponse) int { return v.RecurrenceValue }).(pulumi.IntOutput)
}

// The week days list. Applicable only for schedules of recurrence type 'weekly'.
func (o ScheduleRecurrenceResponseOutput) WeeklyDaysList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleRecurrenceResponse) []string { return v.WeeklyDaysList }).(pulumi.StringArrayOutput)
}

type ScheduleRecurrenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ScheduleRecurrenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleRecurrenceResponse)(nil)).Elem()
}

func (o ScheduleRecurrenceResponsePtrOutput) ToScheduleRecurrenceResponsePtrOutput() ScheduleRecurrenceResponsePtrOutput {
	return o
}

func (o ScheduleRecurrenceResponsePtrOutput) ToScheduleRecurrenceResponsePtrOutputWithContext(ctx context.Context) ScheduleRecurrenceResponsePtrOutput {
	return o
}

func (o ScheduleRecurrenceResponsePtrOutput) Elem() ScheduleRecurrenceResponseOutput {
	return o.ApplyT(func(v *ScheduleRecurrenceResponse) ScheduleRecurrenceResponse { return *v }).(ScheduleRecurrenceResponseOutput)
}

// The recurrence type.
func (o ScheduleRecurrenceResponsePtrOutput) RecurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleRecurrenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RecurrenceType
	}).(pulumi.StringPtrOutput)
}

// The recurrence value.
func (o ScheduleRecurrenceResponsePtrOutput) RecurrenceValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduleRecurrenceResponse) *int {
		if v == nil {
			return nil
		}
		return &v.RecurrenceValue
	}).(pulumi.IntPtrOutput)
}

// The week days list. Applicable only for schedules of recurrence type 'weekly'.
func (o ScheduleRecurrenceResponsePtrOutput) WeeklyDaysList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScheduleRecurrenceResponse) []string {
		if v == nil {
			return nil
		}
		return v.WeeklyDaysList
	}).(pulumi.StringArrayOutput)
}

// The error/warning message due to which the device is ineligible as a failover target device.
type TargetEligibilityErrorMessageInvokeResponse struct {
	// The localized error message stating the reason why the device is not eligible as a target device.
	Message *string `pulumi:"message"`
	// The localized resolution message for the error.
	Resolution *string `pulumi:"resolution"`
	// The result code for the error, due to which the device does not qualify as a failover target device.
	ResultCode *string `pulumi:"resultCode"`
}

// TargetEligibilityErrorMessageInvokeResponseInput is an input type that accepts TargetEligibilityErrorMessageInvokeResponseArgs and TargetEligibilityErrorMessageInvokeResponseOutput values.
// You can construct a concrete instance of `TargetEligibilityErrorMessageInvokeResponseInput` via:
//
//          TargetEligibilityErrorMessageInvokeResponseArgs{...}
type TargetEligibilityErrorMessageInvokeResponseInput interface {
	pulumi.Input

	ToTargetEligibilityErrorMessageInvokeResponseOutput() TargetEligibilityErrorMessageInvokeResponseOutput
	ToTargetEligibilityErrorMessageInvokeResponseOutputWithContext(context.Context) TargetEligibilityErrorMessageInvokeResponseOutput
}

// The error/warning message due to which the device is ineligible as a failover target device.
type TargetEligibilityErrorMessageInvokeResponseArgs struct {
	// The localized error message stating the reason why the device is not eligible as a target device.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The localized resolution message for the error.
	Resolution pulumi.StringPtrInput `pulumi:"resolution"`
	// The result code for the error, due to which the device does not qualify as a failover target device.
	ResultCode pulumi.StringPtrInput `pulumi:"resultCode"`
}

func (TargetEligibilityErrorMessageInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEligibilityErrorMessageInvokeResponse)(nil)).Elem()
}

func (i TargetEligibilityErrorMessageInvokeResponseArgs) ToTargetEligibilityErrorMessageInvokeResponseOutput() TargetEligibilityErrorMessageInvokeResponseOutput {
	return i.ToTargetEligibilityErrorMessageInvokeResponseOutputWithContext(context.Background())
}

func (i TargetEligibilityErrorMessageInvokeResponseArgs) ToTargetEligibilityErrorMessageInvokeResponseOutputWithContext(ctx context.Context) TargetEligibilityErrorMessageInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEligibilityErrorMessageInvokeResponseOutput)
}

// TargetEligibilityErrorMessageInvokeResponseArrayInput is an input type that accepts TargetEligibilityErrorMessageInvokeResponseArray and TargetEligibilityErrorMessageInvokeResponseArrayOutput values.
// You can construct a concrete instance of `TargetEligibilityErrorMessageInvokeResponseArrayInput` via:
//
//          TargetEligibilityErrorMessageInvokeResponseArray{ TargetEligibilityErrorMessageInvokeResponseArgs{...} }
type TargetEligibilityErrorMessageInvokeResponseArrayInput interface {
	pulumi.Input

	ToTargetEligibilityErrorMessageInvokeResponseArrayOutput() TargetEligibilityErrorMessageInvokeResponseArrayOutput
	ToTargetEligibilityErrorMessageInvokeResponseArrayOutputWithContext(context.Context) TargetEligibilityErrorMessageInvokeResponseArrayOutput
}

type TargetEligibilityErrorMessageInvokeResponseArray []TargetEligibilityErrorMessageInvokeResponseInput

func (TargetEligibilityErrorMessageInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetEligibilityErrorMessageInvokeResponse)(nil)).Elem()
}

func (i TargetEligibilityErrorMessageInvokeResponseArray) ToTargetEligibilityErrorMessageInvokeResponseArrayOutput() TargetEligibilityErrorMessageInvokeResponseArrayOutput {
	return i.ToTargetEligibilityErrorMessageInvokeResponseArrayOutputWithContext(context.Background())
}

func (i TargetEligibilityErrorMessageInvokeResponseArray) ToTargetEligibilityErrorMessageInvokeResponseArrayOutputWithContext(ctx context.Context) TargetEligibilityErrorMessageInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEligibilityErrorMessageInvokeResponseArrayOutput)
}

// The error/warning message due to which the device is ineligible as a failover target device.
type TargetEligibilityErrorMessageInvokeResponseOutput struct{ *pulumi.OutputState }

func (TargetEligibilityErrorMessageInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEligibilityErrorMessageInvokeResponse)(nil)).Elem()
}

func (o TargetEligibilityErrorMessageInvokeResponseOutput) ToTargetEligibilityErrorMessageInvokeResponseOutput() TargetEligibilityErrorMessageInvokeResponseOutput {
	return o
}

func (o TargetEligibilityErrorMessageInvokeResponseOutput) ToTargetEligibilityErrorMessageInvokeResponseOutputWithContext(ctx context.Context) TargetEligibilityErrorMessageInvokeResponseOutput {
	return o
}

// The localized error message stating the reason why the device is not eligible as a target device.
func (o TargetEligibilityErrorMessageInvokeResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetEligibilityErrorMessageInvokeResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The localized resolution message for the error.
func (o TargetEligibilityErrorMessageInvokeResponseOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetEligibilityErrorMessageInvokeResponse) *string { return v.Resolution }).(pulumi.StringPtrOutput)
}

// The result code for the error, due to which the device does not qualify as a failover target device.
func (o TargetEligibilityErrorMessageInvokeResponseOutput) ResultCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetEligibilityErrorMessageInvokeResponse) *string { return v.ResultCode }).(pulumi.StringPtrOutput)
}

type TargetEligibilityErrorMessageInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (TargetEligibilityErrorMessageInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetEligibilityErrorMessageInvokeResponse)(nil)).Elem()
}

func (o TargetEligibilityErrorMessageInvokeResponseArrayOutput) ToTargetEligibilityErrorMessageInvokeResponseArrayOutput() TargetEligibilityErrorMessageInvokeResponseArrayOutput {
	return o
}

func (o TargetEligibilityErrorMessageInvokeResponseArrayOutput) ToTargetEligibilityErrorMessageInvokeResponseArrayOutputWithContext(ctx context.Context) TargetEligibilityErrorMessageInvokeResponseArrayOutput {
	return o
}

func (o TargetEligibilityErrorMessageInvokeResponseArrayOutput) Index(i pulumi.IntInput) TargetEligibilityErrorMessageInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetEligibilityErrorMessageInvokeResponse {
		return vs[0].([]TargetEligibilityErrorMessageInvokeResponse)[vs[1].(int)]
	}).(TargetEligibilityErrorMessageInvokeResponseOutput)
}

// The eligibility result of device, as a failover target device.
type TargetEligibilityResultInvokeResponse struct {
	// The eligibility status of device, as a failover target device.
	EligibilityStatus *string `pulumi:"eligibilityStatus"`
	// The list of error messages, if a device does not qualify as a failover target device.
	Messages []TargetEligibilityErrorMessageInvokeResponse `pulumi:"messages"`
}

// TargetEligibilityResultInvokeResponseInput is an input type that accepts TargetEligibilityResultInvokeResponseArgs and TargetEligibilityResultInvokeResponseOutput values.
// You can construct a concrete instance of `TargetEligibilityResultInvokeResponseInput` via:
//
//          TargetEligibilityResultInvokeResponseArgs{...}
type TargetEligibilityResultInvokeResponseInput interface {
	pulumi.Input

	ToTargetEligibilityResultInvokeResponseOutput() TargetEligibilityResultInvokeResponseOutput
	ToTargetEligibilityResultInvokeResponseOutputWithContext(context.Context) TargetEligibilityResultInvokeResponseOutput
}

// The eligibility result of device, as a failover target device.
type TargetEligibilityResultInvokeResponseArgs struct {
	// The eligibility status of device, as a failover target device.
	EligibilityStatus pulumi.StringPtrInput `pulumi:"eligibilityStatus"`
	// The list of error messages, if a device does not qualify as a failover target device.
	Messages TargetEligibilityErrorMessageInvokeResponseArrayInput `pulumi:"messages"`
}

func (TargetEligibilityResultInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEligibilityResultInvokeResponse)(nil)).Elem()
}

func (i TargetEligibilityResultInvokeResponseArgs) ToTargetEligibilityResultInvokeResponseOutput() TargetEligibilityResultInvokeResponseOutput {
	return i.ToTargetEligibilityResultInvokeResponseOutputWithContext(context.Background())
}

func (i TargetEligibilityResultInvokeResponseArgs) ToTargetEligibilityResultInvokeResponseOutputWithContext(ctx context.Context) TargetEligibilityResultInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEligibilityResultInvokeResponseOutput)
}

func (i TargetEligibilityResultInvokeResponseArgs) ToTargetEligibilityResultInvokeResponsePtrOutput() TargetEligibilityResultInvokeResponsePtrOutput {
	return i.ToTargetEligibilityResultInvokeResponsePtrOutputWithContext(context.Background())
}

func (i TargetEligibilityResultInvokeResponseArgs) ToTargetEligibilityResultInvokeResponsePtrOutputWithContext(ctx context.Context) TargetEligibilityResultInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEligibilityResultInvokeResponseOutput).ToTargetEligibilityResultInvokeResponsePtrOutputWithContext(ctx)
}

// TargetEligibilityResultInvokeResponsePtrInput is an input type that accepts TargetEligibilityResultInvokeResponseArgs, TargetEligibilityResultInvokeResponsePtr and TargetEligibilityResultInvokeResponsePtrOutput values.
// You can construct a concrete instance of `TargetEligibilityResultInvokeResponsePtrInput` via:
//
//          TargetEligibilityResultInvokeResponseArgs{...}
//
//  or:
//
//          nil
type TargetEligibilityResultInvokeResponsePtrInput interface {
	pulumi.Input

	ToTargetEligibilityResultInvokeResponsePtrOutput() TargetEligibilityResultInvokeResponsePtrOutput
	ToTargetEligibilityResultInvokeResponsePtrOutputWithContext(context.Context) TargetEligibilityResultInvokeResponsePtrOutput
}

type targetEligibilityResultInvokeResponsePtrType TargetEligibilityResultInvokeResponseArgs

func TargetEligibilityResultInvokeResponsePtr(v *TargetEligibilityResultInvokeResponseArgs) TargetEligibilityResultInvokeResponsePtrInput {
	return (*targetEligibilityResultInvokeResponsePtrType)(v)
}

func (*targetEligibilityResultInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetEligibilityResultInvokeResponse)(nil)).Elem()
}

func (i *targetEligibilityResultInvokeResponsePtrType) ToTargetEligibilityResultInvokeResponsePtrOutput() TargetEligibilityResultInvokeResponsePtrOutput {
	return i.ToTargetEligibilityResultInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *targetEligibilityResultInvokeResponsePtrType) ToTargetEligibilityResultInvokeResponsePtrOutputWithContext(ctx context.Context) TargetEligibilityResultInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEligibilityResultInvokeResponsePtrOutput)
}

// The eligibility result of device, as a failover target device.
type TargetEligibilityResultInvokeResponseOutput struct{ *pulumi.OutputState }

func (TargetEligibilityResultInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEligibilityResultInvokeResponse)(nil)).Elem()
}

func (o TargetEligibilityResultInvokeResponseOutput) ToTargetEligibilityResultInvokeResponseOutput() TargetEligibilityResultInvokeResponseOutput {
	return o
}

func (o TargetEligibilityResultInvokeResponseOutput) ToTargetEligibilityResultInvokeResponseOutputWithContext(ctx context.Context) TargetEligibilityResultInvokeResponseOutput {
	return o
}

func (o TargetEligibilityResultInvokeResponseOutput) ToTargetEligibilityResultInvokeResponsePtrOutput() TargetEligibilityResultInvokeResponsePtrOutput {
	return o.ToTargetEligibilityResultInvokeResponsePtrOutputWithContext(context.Background())
}

func (o TargetEligibilityResultInvokeResponseOutput) ToTargetEligibilityResultInvokeResponsePtrOutputWithContext(ctx context.Context) TargetEligibilityResultInvokeResponsePtrOutput {
	return o.ApplyT(func(v TargetEligibilityResultInvokeResponse) *TargetEligibilityResultInvokeResponse {
		return &v
	}).(TargetEligibilityResultInvokeResponsePtrOutput)
}

// The eligibility status of device, as a failover target device.
func (o TargetEligibilityResultInvokeResponseOutput) EligibilityStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetEligibilityResultInvokeResponse) *string { return v.EligibilityStatus }).(pulumi.StringPtrOutput)
}

// The list of error messages, if a device does not qualify as a failover target device.
func (o TargetEligibilityResultInvokeResponseOutput) Messages() TargetEligibilityErrorMessageInvokeResponseArrayOutput {
	return o.ApplyT(func(v TargetEligibilityResultInvokeResponse) []TargetEligibilityErrorMessageInvokeResponse {
		return v.Messages
	}).(TargetEligibilityErrorMessageInvokeResponseArrayOutput)
}

type TargetEligibilityResultInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (TargetEligibilityResultInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetEligibilityResultInvokeResponse)(nil)).Elem()
}

func (o TargetEligibilityResultInvokeResponsePtrOutput) ToTargetEligibilityResultInvokeResponsePtrOutput() TargetEligibilityResultInvokeResponsePtrOutput {
	return o
}

func (o TargetEligibilityResultInvokeResponsePtrOutput) ToTargetEligibilityResultInvokeResponsePtrOutputWithContext(ctx context.Context) TargetEligibilityResultInvokeResponsePtrOutput {
	return o
}

func (o TargetEligibilityResultInvokeResponsePtrOutput) Elem() TargetEligibilityResultInvokeResponseOutput {
	return o.ApplyT(func(v *TargetEligibilityResultInvokeResponse) TargetEligibilityResultInvokeResponse { return *v }).(TargetEligibilityResultInvokeResponseOutput)
}

// The eligibility status of device, as a failover target device.
func (o TargetEligibilityResultInvokeResponsePtrOutput) EligibilityStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetEligibilityResultInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.EligibilityStatus
	}).(pulumi.StringPtrOutput)
}

// The list of error messages, if a device does not qualify as a failover target device.
func (o TargetEligibilityResultInvokeResponsePtrOutput) Messages() TargetEligibilityErrorMessageInvokeResponseArrayOutput {
	return o.ApplyT(func(v *TargetEligibilityResultInvokeResponse) []TargetEligibilityErrorMessageInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Messages
	}).(TargetEligibilityErrorMessageInvokeResponseArrayOutput)
}

// The time.
type Time struct {
	// The hour.
	Hours int `pulumi:"hours"`
	// The minute.
	Minutes int `pulumi:"minutes"`
	// The second.
	Seconds int `pulumi:"seconds"`
}

// TimeInput is an input type that accepts TimeArgs and TimeOutput values.
// You can construct a concrete instance of `TimeInput` via:
//
//          TimeArgs{...}
type TimeInput interface {
	pulumi.Input

	ToTimeOutput() TimeOutput
	ToTimeOutputWithContext(context.Context) TimeOutput
}

// The time.
type TimeArgs struct {
	// The hour.
	Hours pulumi.IntInput `pulumi:"hours"`
	// The minute.
	Minutes pulumi.IntInput `pulumi:"minutes"`
	// The second.
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (TimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Time)(nil)).Elem()
}

func (i TimeArgs) ToTimeOutput() TimeOutput {
	return i.ToTimeOutputWithContext(context.Background())
}

func (i TimeArgs) ToTimeOutputWithContext(ctx context.Context) TimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeOutput)
}

func (i TimeArgs) ToTimePtrOutput() TimePtrOutput {
	return i.ToTimePtrOutputWithContext(context.Background())
}

func (i TimeArgs) ToTimePtrOutputWithContext(ctx context.Context) TimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeOutput).ToTimePtrOutputWithContext(ctx)
}

// TimePtrInput is an input type that accepts TimeArgs, TimePtr and TimePtrOutput values.
// You can construct a concrete instance of `TimePtrInput` via:
//
//          TimeArgs{...}
//
//  or:
//
//          nil
type TimePtrInput interface {
	pulumi.Input

	ToTimePtrOutput() TimePtrOutput
	ToTimePtrOutputWithContext(context.Context) TimePtrOutput
}

type timePtrType TimeArgs

func TimePtr(v *TimeArgs) TimePtrInput {
	return (*timePtrType)(v)
}

func (*timePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Time)(nil)).Elem()
}

func (i *timePtrType) ToTimePtrOutput() TimePtrOutput {
	return i.ToTimePtrOutputWithContext(context.Background())
}

func (i *timePtrType) ToTimePtrOutputWithContext(ctx context.Context) TimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimePtrOutput)
}

// The time.
type TimeOutput struct{ *pulumi.OutputState }

func (TimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Time)(nil)).Elem()
}

func (o TimeOutput) ToTimeOutput() TimeOutput {
	return o
}

func (o TimeOutput) ToTimeOutputWithContext(ctx context.Context) TimeOutput {
	return o
}

func (o TimeOutput) ToTimePtrOutput() TimePtrOutput {
	return o.ToTimePtrOutputWithContext(context.Background())
}

func (o TimeOutput) ToTimePtrOutputWithContext(ctx context.Context) TimePtrOutput {
	return o.ApplyT(func(v Time) *Time {
		return &v
	}).(TimePtrOutput)
}

// The hour.
func (o TimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v Time) int { return v.Hours }).(pulumi.IntOutput)
}

// The minute.
func (o TimeOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v Time) int { return v.Minutes }).(pulumi.IntOutput)
}

// The second.
func (o TimeOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v Time) int { return v.Seconds }).(pulumi.IntOutput)
}

type TimePtrOutput struct{ *pulumi.OutputState }

func (TimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Time)(nil)).Elem()
}

func (o TimePtrOutput) ToTimePtrOutput() TimePtrOutput {
	return o
}

func (o TimePtrOutput) ToTimePtrOutputWithContext(ctx context.Context) TimePtrOutput {
	return o
}

func (o TimePtrOutput) Elem() TimeOutput {
	return o.ApplyT(func(v *Time) Time { return *v }).(TimeOutput)
}

// The hour.
func (o TimePtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Time) *int {
		if v == nil {
			return nil
		}
		return &v.Hours
	}).(pulumi.IntPtrOutput)
}

// The minute.
func (o TimePtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Time) *int {
		if v == nil {
			return nil
		}
		return &v.Minutes
	}).(pulumi.IntPtrOutput)
}

// The second.
func (o TimePtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Time) *int {
		if v == nil {
			return nil
		}
		return &v.Seconds
	}).(pulumi.IntPtrOutput)
}

// The time.
type TimeInvokeResponse struct {
	// The hour.
	Hours int `pulumi:"hours"`
	// The minute.
	Minutes int `pulumi:"minutes"`
	// The second.
	Seconds int `pulumi:"seconds"`
}

// TimeInvokeResponseInput is an input type that accepts TimeInvokeResponseArgs and TimeInvokeResponseOutput values.
// You can construct a concrete instance of `TimeInvokeResponseInput` via:
//
//          TimeInvokeResponseArgs{...}
type TimeInvokeResponseInput interface {
	pulumi.Input

	ToTimeInvokeResponseOutput() TimeInvokeResponseOutput
	ToTimeInvokeResponseOutputWithContext(context.Context) TimeInvokeResponseOutput
}

// The time.
type TimeInvokeResponseArgs struct {
	// The hour.
	Hours pulumi.IntInput `pulumi:"hours"`
	// The minute.
	Minutes pulumi.IntInput `pulumi:"minutes"`
	// The second.
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (TimeInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeInvokeResponse)(nil)).Elem()
}

func (i TimeInvokeResponseArgs) ToTimeInvokeResponseOutput() TimeInvokeResponseOutput {
	return i.ToTimeInvokeResponseOutputWithContext(context.Background())
}

func (i TimeInvokeResponseArgs) ToTimeInvokeResponseOutputWithContext(ctx context.Context) TimeInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeInvokeResponseOutput)
}

// The time.
type TimeInvokeResponseOutput struct{ *pulumi.OutputState }

func (TimeInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeInvokeResponse)(nil)).Elem()
}

func (o TimeInvokeResponseOutput) ToTimeInvokeResponseOutput() TimeInvokeResponseOutput {
	return o
}

func (o TimeInvokeResponseOutput) ToTimeInvokeResponseOutputWithContext(ctx context.Context) TimeInvokeResponseOutput {
	return o
}

// The hour.
func (o TimeInvokeResponseOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v TimeInvokeResponse) int { return v.Hours }).(pulumi.IntOutput)
}

// The minute.
func (o TimeInvokeResponseOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v TimeInvokeResponse) int { return v.Minutes }).(pulumi.IntOutput)
}

// The second.
func (o TimeInvokeResponseOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v TimeInvokeResponse) int { return v.Seconds }).(pulumi.IntOutput)
}

// The time.
type TimeResponse struct {
	// The hour.
	Hours int `pulumi:"hours"`
	// The minute.
	Minutes int `pulumi:"minutes"`
	// The second.
	Seconds int `pulumi:"seconds"`
}

// TimeResponseInput is an input type that accepts TimeResponseArgs and TimeResponseOutput values.
// You can construct a concrete instance of `TimeResponseInput` via:
//
//          TimeResponseArgs{...}
type TimeResponseInput interface {
	pulumi.Input

	ToTimeResponseOutput() TimeResponseOutput
	ToTimeResponseOutputWithContext(context.Context) TimeResponseOutput
}

// The time.
type TimeResponseArgs struct {
	// The hour.
	Hours pulumi.IntInput `pulumi:"hours"`
	// The minute.
	Minutes pulumi.IntInput `pulumi:"minutes"`
	// The second.
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (TimeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeResponse)(nil)).Elem()
}

func (i TimeResponseArgs) ToTimeResponseOutput() TimeResponseOutput {
	return i.ToTimeResponseOutputWithContext(context.Background())
}

func (i TimeResponseArgs) ToTimeResponseOutputWithContext(ctx context.Context) TimeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeResponseOutput)
}

func (i TimeResponseArgs) ToTimeResponsePtrOutput() TimeResponsePtrOutput {
	return i.ToTimeResponsePtrOutputWithContext(context.Background())
}

func (i TimeResponseArgs) ToTimeResponsePtrOutputWithContext(ctx context.Context) TimeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeResponseOutput).ToTimeResponsePtrOutputWithContext(ctx)
}

// TimeResponsePtrInput is an input type that accepts TimeResponseArgs, TimeResponsePtr and TimeResponsePtrOutput values.
// You can construct a concrete instance of `TimeResponsePtrInput` via:
//
//          TimeResponseArgs{...}
//
//  or:
//
//          nil
type TimeResponsePtrInput interface {
	pulumi.Input

	ToTimeResponsePtrOutput() TimeResponsePtrOutput
	ToTimeResponsePtrOutputWithContext(context.Context) TimeResponsePtrOutput
}

type timeResponsePtrType TimeResponseArgs

func TimeResponsePtr(v *TimeResponseArgs) TimeResponsePtrInput {
	return (*timeResponsePtrType)(v)
}

func (*timeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeResponse)(nil)).Elem()
}

func (i *timeResponsePtrType) ToTimeResponsePtrOutput() TimeResponsePtrOutput {
	return i.ToTimeResponsePtrOutputWithContext(context.Background())
}

func (i *timeResponsePtrType) ToTimeResponsePtrOutputWithContext(ctx context.Context) TimeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeResponsePtrOutput)
}

// The time.
type TimeResponseOutput struct{ *pulumi.OutputState }

func (TimeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeResponse)(nil)).Elem()
}

func (o TimeResponseOutput) ToTimeResponseOutput() TimeResponseOutput {
	return o
}

func (o TimeResponseOutput) ToTimeResponseOutputWithContext(ctx context.Context) TimeResponseOutput {
	return o
}

func (o TimeResponseOutput) ToTimeResponsePtrOutput() TimeResponsePtrOutput {
	return o.ToTimeResponsePtrOutputWithContext(context.Background())
}

func (o TimeResponseOutput) ToTimeResponsePtrOutputWithContext(ctx context.Context) TimeResponsePtrOutput {
	return o.ApplyT(func(v TimeResponse) *TimeResponse {
		return &v
	}).(TimeResponsePtrOutput)
}

// The hour.
func (o TimeResponseOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v TimeResponse) int { return v.Hours }).(pulumi.IntOutput)
}

// The minute.
func (o TimeResponseOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v TimeResponse) int { return v.Minutes }).(pulumi.IntOutput)
}

// The second.
func (o TimeResponseOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v TimeResponse) int { return v.Seconds }).(pulumi.IntOutput)
}

type TimeResponsePtrOutput struct{ *pulumi.OutputState }

func (TimeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeResponse)(nil)).Elem()
}

func (o TimeResponsePtrOutput) ToTimeResponsePtrOutput() TimeResponsePtrOutput {
	return o
}

func (o TimeResponsePtrOutput) ToTimeResponsePtrOutputWithContext(ctx context.Context) TimeResponsePtrOutput {
	return o
}

func (o TimeResponsePtrOutput) Elem() TimeResponseOutput {
	return o.ApplyT(func(v *TimeResponse) TimeResponse { return *v }).(TimeResponseOutput)
}

// The hour.
func (o TimeResponsePtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimeResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Hours
	}).(pulumi.IntPtrOutput)
}

// The minute.
func (o TimeResponsePtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimeResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Minutes
	}).(pulumi.IntPtrOutput)
}

// The second.
func (o TimeResponsePtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimeResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Seconds
	}).(pulumi.IntPtrOutput)
}

// The metadata of the volume container, that is being considered as part of a failover set.
type VolumeContainerFailoverMetadataInvokeResponse struct {
	// The path ID of the volume container.
	VolumeContainerId *string `pulumi:"volumeContainerId"`
	// The list of metadata of volumes inside the volume container, which contains valid cloud snapshots.
	Volumes []VolumeFailoverMetadataInvokeResponse `pulumi:"volumes"`
}

// VolumeContainerFailoverMetadataInvokeResponseInput is an input type that accepts VolumeContainerFailoverMetadataInvokeResponseArgs and VolumeContainerFailoverMetadataInvokeResponseOutput values.
// You can construct a concrete instance of `VolumeContainerFailoverMetadataInvokeResponseInput` via:
//
//          VolumeContainerFailoverMetadataInvokeResponseArgs{...}
type VolumeContainerFailoverMetadataInvokeResponseInput interface {
	pulumi.Input

	ToVolumeContainerFailoverMetadataInvokeResponseOutput() VolumeContainerFailoverMetadataInvokeResponseOutput
	ToVolumeContainerFailoverMetadataInvokeResponseOutputWithContext(context.Context) VolumeContainerFailoverMetadataInvokeResponseOutput
}

// The metadata of the volume container, that is being considered as part of a failover set.
type VolumeContainerFailoverMetadataInvokeResponseArgs struct {
	// The path ID of the volume container.
	VolumeContainerId pulumi.StringPtrInput `pulumi:"volumeContainerId"`
	// The list of metadata of volumes inside the volume container, which contains valid cloud snapshots.
	Volumes VolumeFailoverMetadataInvokeResponseArrayInput `pulumi:"volumes"`
}

func (VolumeContainerFailoverMetadataInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeContainerFailoverMetadataInvokeResponse)(nil)).Elem()
}

func (i VolumeContainerFailoverMetadataInvokeResponseArgs) ToVolumeContainerFailoverMetadataInvokeResponseOutput() VolumeContainerFailoverMetadataInvokeResponseOutput {
	return i.ToVolumeContainerFailoverMetadataInvokeResponseOutputWithContext(context.Background())
}

func (i VolumeContainerFailoverMetadataInvokeResponseArgs) ToVolumeContainerFailoverMetadataInvokeResponseOutputWithContext(ctx context.Context) VolumeContainerFailoverMetadataInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeContainerFailoverMetadataInvokeResponseOutput)
}

// VolumeContainerFailoverMetadataInvokeResponseArrayInput is an input type that accepts VolumeContainerFailoverMetadataInvokeResponseArray and VolumeContainerFailoverMetadataInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VolumeContainerFailoverMetadataInvokeResponseArrayInput` via:
//
//          VolumeContainerFailoverMetadataInvokeResponseArray{ VolumeContainerFailoverMetadataInvokeResponseArgs{...} }
type VolumeContainerFailoverMetadataInvokeResponseArrayInput interface {
	pulumi.Input

	ToVolumeContainerFailoverMetadataInvokeResponseArrayOutput() VolumeContainerFailoverMetadataInvokeResponseArrayOutput
	ToVolumeContainerFailoverMetadataInvokeResponseArrayOutputWithContext(context.Context) VolumeContainerFailoverMetadataInvokeResponseArrayOutput
}

type VolumeContainerFailoverMetadataInvokeResponseArray []VolumeContainerFailoverMetadataInvokeResponseInput

func (VolumeContainerFailoverMetadataInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeContainerFailoverMetadataInvokeResponse)(nil)).Elem()
}

func (i VolumeContainerFailoverMetadataInvokeResponseArray) ToVolumeContainerFailoverMetadataInvokeResponseArrayOutput() VolumeContainerFailoverMetadataInvokeResponseArrayOutput {
	return i.ToVolumeContainerFailoverMetadataInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VolumeContainerFailoverMetadataInvokeResponseArray) ToVolumeContainerFailoverMetadataInvokeResponseArrayOutputWithContext(ctx context.Context) VolumeContainerFailoverMetadataInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeContainerFailoverMetadataInvokeResponseArrayOutput)
}

// The metadata of the volume container, that is being considered as part of a failover set.
type VolumeContainerFailoverMetadataInvokeResponseOutput struct{ *pulumi.OutputState }

func (VolumeContainerFailoverMetadataInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeContainerFailoverMetadataInvokeResponse)(nil)).Elem()
}

func (o VolumeContainerFailoverMetadataInvokeResponseOutput) ToVolumeContainerFailoverMetadataInvokeResponseOutput() VolumeContainerFailoverMetadataInvokeResponseOutput {
	return o
}

func (o VolumeContainerFailoverMetadataInvokeResponseOutput) ToVolumeContainerFailoverMetadataInvokeResponseOutputWithContext(ctx context.Context) VolumeContainerFailoverMetadataInvokeResponseOutput {
	return o
}

// The path ID of the volume container.
func (o VolumeContainerFailoverMetadataInvokeResponseOutput) VolumeContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeContainerFailoverMetadataInvokeResponse) *string { return v.VolumeContainerId }).(pulumi.StringPtrOutput)
}

// The list of metadata of volumes inside the volume container, which contains valid cloud snapshots.
func (o VolumeContainerFailoverMetadataInvokeResponseOutput) Volumes() VolumeFailoverMetadataInvokeResponseArrayOutput {
	return o.ApplyT(func(v VolumeContainerFailoverMetadataInvokeResponse) []VolumeFailoverMetadataInvokeResponse {
		return v.Volumes
	}).(VolumeFailoverMetadataInvokeResponseArrayOutput)
}

type VolumeContainerFailoverMetadataInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VolumeContainerFailoverMetadataInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeContainerFailoverMetadataInvokeResponse)(nil)).Elem()
}

func (o VolumeContainerFailoverMetadataInvokeResponseArrayOutput) ToVolumeContainerFailoverMetadataInvokeResponseArrayOutput() VolumeContainerFailoverMetadataInvokeResponseArrayOutput {
	return o
}

func (o VolumeContainerFailoverMetadataInvokeResponseArrayOutput) ToVolumeContainerFailoverMetadataInvokeResponseArrayOutputWithContext(ctx context.Context) VolumeContainerFailoverMetadataInvokeResponseArrayOutput {
	return o
}

func (o VolumeContainerFailoverMetadataInvokeResponseArrayOutput) Index(i pulumi.IntInput) VolumeContainerFailoverMetadataInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VolumeContainerFailoverMetadataInvokeResponse {
		return vs[0].([]VolumeContainerFailoverMetadataInvokeResponse)[vs[1].(int)]
	}).(VolumeContainerFailoverMetadataInvokeResponseOutput)
}

// The metadata of a volume that has valid cloud snapshot.
type VolumeFailoverMetadataInvokeResponse struct {
	// The date at which the snapshot was taken.
	BackupCreatedDate *string `pulumi:"backupCreatedDate"`
	// The path ID of the backup-element for this volume, inside the backup set.
	BackupElementId *string `pulumi:"backupElementId"`
	// The path ID of the backup set.
	BackupId *string `pulumi:"backupId"`
	// The path ID of the backup policy using which the snapshot was taken.
	BackupPolicyId *string `pulumi:"backupPolicyId"`
	// The size of the volume in bytes at the time the snapshot was taken.
	SizeInBytes *float64 `pulumi:"sizeInBytes"`
	// The path ID of the volume.
	VolumeId *string `pulumi:"volumeId"`
	// The type of the volume.
	VolumeType *string `pulumi:"volumeType"`
}

// VolumeFailoverMetadataInvokeResponseInput is an input type that accepts VolumeFailoverMetadataInvokeResponseArgs and VolumeFailoverMetadataInvokeResponseOutput values.
// You can construct a concrete instance of `VolumeFailoverMetadataInvokeResponseInput` via:
//
//          VolumeFailoverMetadataInvokeResponseArgs{...}
type VolumeFailoverMetadataInvokeResponseInput interface {
	pulumi.Input

	ToVolumeFailoverMetadataInvokeResponseOutput() VolumeFailoverMetadataInvokeResponseOutput
	ToVolumeFailoverMetadataInvokeResponseOutputWithContext(context.Context) VolumeFailoverMetadataInvokeResponseOutput
}

// The metadata of a volume that has valid cloud snapshot.
type VolumeFailoverMetadataInvokeResponseArgs struct {
	// The date at which the snapshot was taken.
	BackupCreatedDate pulumi.StringPtrInput `pulumi:"backupCreatedDate"`
	// The path ID of the backup-element for this volume, inside the backup set.
	BackupElementId pulumi.StringPtrInput `pulumi:"backupElementId"`
	// The path ID of the backup set.
	BackupId pulumi.StringPtrInput `pulumi:"backupId"`
	// The path ID of the backup policy using which the snapshot was taken.
	BackupPolicyId pulumi.StringPtrInput `pulumi:"backupPolicyId"`
	// The size of the volume in bytes at the time the snapshot was taken.
	SizeInBytes pulumi.Float64PtrInput `pulumi:"sizeInBytes"`
	// The path ID of the volume.
	VolumeId pulumi.StringPtrInput `pulumi:"volumeId"`
	// The type of the volume.
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (VolumeFailoverMetadataInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeFailoverMetadataInvokeResponse)(nil)).Elem()
}

func (i VolumeFailoverMetadataInvokeResponseArgs) ToVolumeFailoverMetadataInvokeResponseOutput() VolumeFailoverMetadataInvokeResponseOutput {
	return i.ToVolumeFailoverMetadataInvokeResponseOutputWithContext(context.Background())
}

func (i VolumeFailoverMetadataInvokeResponseArgs) ToVolumeFailoverMetadataInvokeResponseOutputWithContext(ctx context.Context) VolumeFailoverMetadataInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeFailoverMetadataInvokeResponseOutput)
}

// VolumeFailoverMetadataInvokeResponseArrayInput is an input type that accepts VolumeFailoverMetadataInvokeResponseArray and VolumeFailoverMetadataInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VolumeFailoverMetadataInvokeResponseArrayInput` via:
//
//          VolumeFailoverMetadataInvokeResponseArray{ VolumeFailoverMetadataInvokeResponseArgs{...} }
type VolumeFailoverMetadataInvokeResponseArrayInput interface {
	pulumi.Input

	ToVolumeFailoverMetadataInvokeResponseArrayOutput() VolumeFailoverMetadataInvokeResponseArrayOutput
	ToVolumeFailoverMetadataInvokeResponseArrayOutputWithContext(context.Context) VolumeFailoverMetadataInvokeResponseArrayOutput
}

type VolumeFailoverMetadataInvokeResponseArray []VolumeFailoverMetadataInvokeResponseInput

func (VolumeFailoverMetadataInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeFailoverMetadataInvokeResponse)(nil)).Elem()
}

func (i VolumeFailoverMetadataInvokeResponseArray) ToVolumeFailoverMetadataInvokeResponseArrayOutput() VolumeFailoverMetadataInvokeResponseArrayOutput {
	return i.ToVolumeFailoverMetadataInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VolumeFailoverMetadataInvokeResponseArray) ToVolumeFailoverMetadataInvokeResponseArrayOutputWithContext(ctx context.Context) VolumeFailoverMetadataInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeFailoverMetadataInvokeResponseArrayOutput)
}

// The metadata of a volume that has valid cloud snapshot.
type VolumeFailoverMetadataInvokeResponseOutput struct{ *pulumi.OutputState }

func (VolumeFailoverMetadataInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeFailoverMetadataInvokeResponse)(nil)).Elem()
}

func (o VolumeFailoverMetadataInvokeResponseOutput) ToVolumeFailoverMetadataInvokeResponseOutput() VolumeFailoverMetadataInvokeResponseOutput {
	return o
}

func (o VolumeFailoverMetadataInvokeResponseOutput) ToVolumeFailoverMetadataInvokeResponseOutputWithContext(ctx context.Context) VolumeFailoverMetadataInvokeResponseOutput {
	return o
}

// The date at which the snapshot was taken.
func (o VolumeFailoverMetadataInvokeResponseOutput) BackupCreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeFailoverMetadataInvokeResponse) *string { return v.BackupCreatedDate }).(pulumi.StringPtrOutput)
}

// The path ID of the backup-element for this volume, inside the backup set.
func (o VolumeFailoverMetadataInvokeResponseOutput) BackupElementId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeFailoverMetadataInvokeResponse) *string { return v.BackupElementId }).(pulumi.StringPtrOutput)
}

// The path ID of the backup set.
func (o VolumeFailoverMetadataInvokeResponseOutput) BackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeFailoverMetadataInvokeResponse) *string { return v.BackupId }).(pulumi.StringPtrOutput)
}

// The path ID of the backup policy using which the snapshot was taken.
func (o VolumeFailoverMetadataInvokeResponseOutput) BackupPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeFailoverMetadataInvokeResponse) *string { return v.BackupPolicyId }).(pulumi.StringPtrOutput)
}

// The size of the volume in bytes at the time the snapshot was taken.
func (o VolumeFailoverMetadataInvokeResponseOutput) SizeInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VolumeFailoverMetadataInvokeResponse) *float64 { return v.SizeInBytes }).(pulumi.Float64PtrOutput)
}

// The path ID of the volume.
func (o VolumeFailoverMetadataInvokeResponseOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeFailoverMetadataInvokeResponse) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The type of the volume.
func (o VolumeFailoverMetadataInvokeResponseOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeFailoverMetadataInvokeResponse) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type VolumeFailoverMetadataInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VolumeFailoverMetadataInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeFailoverMetadataInvokeResponse)(nil)).Elem()
}

func (o VolumeFailoverMetadataInvokeResponseArrayOutput) ToVolumeFailoverMetadataInvokeResponseArrayOutput() VolumeFailoverMetadataInvokeResponseArrayOutput {
	return o
}

func (o VolumeFailoverMetadataInvokeResponseArrayOutput) ToVolumeFailoverMetadataInvokeResponseArrayOutputWithContext(ctx context.Context) VolumeFailoverMetadataInvokeResponseArrayOutput {
	return o
}

func (o VolumeFailoverMetadataInvokeResponseArrayOutput) Index(i pulumi.IntInput) VolumeFailoverMetadataInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VolumeFailoverMetadataInvokeResponse {
		return vs[0].([]VolumeFailoverMetadataInvokeResponse)[vs[1].(int)]
	}).(VolumeFailoverMetadataInvokeResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretPtrOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretInvokeResponseOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretResponseOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretResponsePtrOutput{})
	pulumi.RegisterOutputType(BandwidthScheduleOutput{})
	pulumi.RegisterOutputType(BandwidthScheduleArrayOutput{})
	pulumi.RegisterOutputType(BandwidthScheduleInvokeResponseOutput{})
	pulumi.RegisterOutputType(BandwidthScheduleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(BandwidthScheduleResponseOutput{})
	pulumi.RegisterOutputType(BandwidthScheduleResponseArrayOutput{})
	pulumi.RegisterOutputType(FailoverSetEligibilityResultInvokeResponseOutput{})
	pulumi.RegisterOutputType(FailoverSetEligibilityResultInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(FailoverSetInvokeResponseOutput{})
	pulumi.RegisterOutputType(FailoverSetInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(FailoverTargetInvokeResponseOutput{})
	pulumi.RegisterOutputType(FailoverTargetInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagerIntrinsicSettingsOutput{})
	pulumi.RegisterOutputType(ManagerIntrinsicSettingsPtrOutput{})
	pulumi.RegisterOutputType(ManagerIntrinsicSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(ManagerIntrinsicSettingsResponseOutput{})
	pulumi.RegisterOutputType(ManagerIntrinsicSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagerSkuOutput{})
	pulumi.RegisterOutputType(ManagerSkuPtrOutput{})
	pulumi.RegisterOutputType(ManagerSkuInvokeResponseOutput{})
	pulumi.RegisterOutputType(ManagerSkuResponseOutput{})
	pulumi.RegisterOutputType(ManagerSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ScheduleRecurrenceOutput{})
	pulumi.RegisterOutputType(ScheduleRecurrencePtrOutput{})
	pulumi.RegisterOutputType(ScheduleRecurrenceInvokeResponseOutput{})
	pulumi.RegisterOutputType(ScheduleRecurrenceResponseOutput{})
	pulumi.RegisterOutputType(ScheduleRecurrenceResponsePtrOutput{})
	pulumi.RegisterOutputType(TargetEligibilityErrorMessageInvokeResponseOutput{})
	pulumi.RegisterOutputType(TargetEligibilityErrorMessageInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(TargetEligibilityResultInvokeResponseOutput{})
	pulumi.RegisterOutputType(TargetEligibilityResultInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(TimeOutput{})
	pulumi.RegisterOutputType(TimePtrOutput{})
	pulumi.RegisterOutputType(TimeInvokeResponseOutput{})
	pulumi.RegisterOutputType(TimeResponseOutput{})
	pulumi.RegisterOutputType(TimeResponsePtrOutput{})
	pulumi.RegisterOutputType(VolumeContainerFailoverMetadataInvokeResponseOutput{})
	pulumi.RegisterOutputType(VolumeContainerFailoverMetadataInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(VolumeFailoverMetadataInvokeResponseOutput{})
	pulumi.RegisterOutputType(VolumeFailoverMetadataInvokeResponseArrayOutput{})
}
