// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170601

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupVolumeContainer(ctx *pulumi.Context, args *LookupVolumeContainerArgs, opts ...pulumi.InvokeOption) (*LookupVolumeContainerResult, error) {
	var rv LookupVolumeContainerResult
	err := ctx.Invoke("azure-nextgen:storsimple/v20170601:getVolumeContainer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVolumeContainerArgs struct {
	// The device name
	DeviceName string `pulumi:"deviceName"`
	// The manager name
	ManagerName string `pulumi:"managerName"`
	// The resource group name
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the volume container.
	VolumeContainerName string `pulumi:"volumeContainerName"`
}

// The volume container.
type LookupVolumeContainerResult struct {
	// The bandwidth-rate set on the volume container.
	BandWidthRateInMbps *int `pulumi:"bandWidthRateInMbps"`
	// The ID of the bandwidth setting associated with the volume container.
	BandwidthSettingId *string `pulumi:"bandwidthSettingId"`
	// The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
	EncryptionKey *AsymmetricEncryptedSecretResponse `pulumi:"encryptionKey"`
	// The flag to denote whether encryption is enabled or not.
	EncryptionStatus string `pulumi:"encryptionStatus"`
	// The Kind of the object. Currently only Series8000 is supported
	Kind *string `pulumi:"kind"`
	// The name of the object.
	Name string `pulumi:"name"`
	// The owner ship status of the volume container. Only when the status is "NotOwned", the delete operation on the volume container is permitted.
	OwnerShipStatus string `pulumi:"ownerShipStatus"`
	// The path ID of storage account associated with the volume container.
	StorageAccountCredentialId string `pulumi:"storageAccountCredentialId"`
	// The total cloud storage for the volume container.
	TotalCloudStorageUsageInBytes int `pulumi:"totalCloudStorageUsageInBytes"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
	// The number of volumes in the volume Container.
	VolumeCount int `pulumi:"volumeCount"`
}
