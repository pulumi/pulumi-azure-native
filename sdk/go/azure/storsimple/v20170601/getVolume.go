// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170601

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupVolume(ctx *pulumi.Context, args *LookupVolumeArgs, opts ...pulumi.InvokeOption) (*LookupVolumeResult, error) {
	var rv LookupVolumeResult
	err := ctx.Invoke("azure-nextgen:storsimple/v20170601:getVolume", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVolumeArgs struct {
	// The device name
	DeviceName string `pulumi:"deviceName"`
	// The manager name
	ManagerName string `pulumi:"managerName"`
	// The resource group name
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The volume container name.
	VolumeContainerName string `pulumi:"volumeContainerName"`
	// The volume name.
	VolumeName string `pulumi:"volumeName"`
}

// The volume.
type LookupVolumeResult struct {
	// The IDs of the access control records, associated with the volume.
	AccessControlRecordIds []string `pulumi:"accessControlRecordIds"`
	// The IDs of the backup policies, in which this volume is part of.
	BackupPolicyIds []string `pulumi:"backupPolicyIds"`
	// The backup status of the volume.
	BackupStatus string `pulumi:"backupStatus"`
	// The Kind of the object. Currently only Series8000 is supported
	Kind *string `pulumi:"kind"`
	// The monitoring status of the volume.
	MonitoringStatus string `pulumi:"monitoringStatus"`
	// The name of the object.
	Name string `pulumi:"name"`
	// The operation status on the volume.
	OperationStatus string `pulumi:"operationStatus"`
	// The size of the volume in bytes.
	SizeInBytes int `pulumi:"sizeInBytes"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
	// The ID of the volume container, in which this volume is created.
	VolumeContainerId string `pulumi:"volumeContainerId"`
	// The volume status.
	VolumeStatus string `pulumi:"volumeStatus"`
	// The type of the volume.
	VolumeType string `pulumi:"volumeType"`
}
