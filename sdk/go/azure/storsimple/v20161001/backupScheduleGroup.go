// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20161001

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The Backup Schedule Group
type BackupScheduleGroup struct {
	pulumi.CustomResourceState

	// The name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules.
	StartTime TimeResponseOutput `pulumi:"startTime"`
	// The type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewBackupScheduleGroup registers a new resource with the given unique name, arguments, and options.
func NewBackupScheduleGroup(ctx *pulumi.Context,
	name string, args *BackupScheduleGroupArgs, opts ...pulumi.ResourceOption) (*BackupScheduleGroup, error) {
	if args == nil || args.DeviceName == nil {
		return nil, errors.New("missing required argument 'DeviceName'")
	}
	if args == nil || args.ManagerName == nil {
		return nil, errors.New("missing required argument 'ManagerName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.ScheduleGroupName == nil {
		return nil, errors.New("missing required argument 'ScheduleGroupName'")
	}
	if args == nil || args.StartTime == nil {
		return nil, errors.New("missing required argument 'StartTime'")
	}
	if args == nil {
		args = &BackupScheduleGroupArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:storsimple/latest:BackupScheduleGroup"),
		},
	})
	opts = append(opts, aliases)
	var resource BackupScheduleGroup
	err := ctx.RegisterResource("azure-nextgen:storsimple/v20161001:BackupScheduleGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackupScheduleGroup gets an existing BackupScheduleGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupScheduleGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupScheduleGroupState, opts ...pulumi.ResourceOption) (*BackupScheduleGroup, error) {
	var resource BackupScheduleGroup
	err := ctx.ReadResource("azure-nextgen:storsimple/v20161001:BackupScheduleGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackupScheduleGroup resources.
type backupScheduleGroupState struct {
	// The name.
	Name *string `pulumi:"name"`
	// The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules.
	StartTime *TimeResponse `pulumi:"startTime"`
	// The type.
	Type *string `pulumi:"type"`
}

type BackupScheduleGroupState struct {
	// The name.
	Name pulumi.StringPtrInput
	// The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules.
	StartTime TimeResponsePtrInput
	// The type.
	Type pulumi.StringPtrInput
}

func (BackupScheduleGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupScheduleGroupState)(nil)).Elem()
}

type backupScheduleGroupArgs struct {
	// The name of the device.
	DeviceName string `pulumi:"deviceName"`
	// The manager name
	ManagerName string `pulumi:"managerName"`
	// The resource group name
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the schedule group.
	ScheduleGroupName string `pulumi:"scheduleGroupName"`
	// The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules.
	StartTime Time `pulumi:"startTime"`
}

// The set of arguments for constructing a BackupScheduleGroup resource.
type BackupScheduleGroupArgs struct {
	// The name of the device.
	DeviceName pulumi.StringInput
	// The manager name
	ManagerName pulumi.StringInput
	// The resource group name
	ResourceGroupName pulumi.StringInput
	// The name of the schedule group.
	ScheduleGroupName pulumi.StringInput
	// The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules.
	StartTime TimeInput
}

func (BackupScheduleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupScheduleGroupArgs)(nil)).Elem()
}
