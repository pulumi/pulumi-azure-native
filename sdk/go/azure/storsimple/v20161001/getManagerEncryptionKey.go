// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20161001

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This class can be used as the Type for any secret entity represented as Value, ValueCertificateThumbprint, EncryptionAlgorithm. In this case, "Value" is a secret and the "valueThumbprint" represents the certificate thumbprint of the value. The algorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.
func GetManagerEncryptionKey(ctx *pulumi.Context, args *GetManagerEncryptionKeyArgs, opts ...pulumi.InvokeOption) (*GetManagerEncryptionKeyResult, error) {
	var rv GetManagerEncryptionKeyResult
	err := ctx.Invoke("azure-native:storsimple/v20161001:getManagerEncryptionKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetManagerEncryptionKeyArgs struct {
	// The manager name
	ManagerName string `pulumi:"managerName"`
	// The resource group name
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// This class can be used as the Type for any secret entity represented as Value, ValueCertificateThumbprint, EncryptionAlgorithm. In this case, "Value" is a secret and the "valueThumbprint" represents the certificate thumbprint of the value. The algorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.
type GetManagerEncryptionKeyResult struct {
	// Algorithm used to encrypt "Value"
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// The value of the secret itself. If the secret is in plaintext or null then EncryptionAlgorithm will be none
	Value string `pulumi:"value"`
	// Thumbprint cert that was used to encrypt "Value"
	ValueCertificateThumbprint *string `pulumi:"valueCertificateThumbprint"`
}

func GetManagerEncryptionKeyOutput(ctx *pulumi.Context, args GetManagerEncryptionKeyOutputArgs, opts ...pulumi.InvokeOption) GetManagerEncryptionKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagerEncryptionKeyResult, error) {
			args := v.(GetManagerEncryptionKeyArgs)
			r, err := GetManagerEncryptionKey(ctx, &args, opts...)
			var s GetManagerEncryptionKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagerEncryptionKeyResultOutput)
}

type GetManagerEncryptionKeyOutputArgs struct {
	// The manager name
	ManagerName pulumi.StringInput `pulumi:"managerName"`
	// The resource group name
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetManagerEncryptionKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagerEncryptionKeyArgs)(nil)).Elem()
}

// This class can be used as the Type for any secret entity represented as Value, ValueCertificateThumbprint, EncryptionAlgorithm. In this case, "Value" is a secret and the "valueThumbprint" represents the certificate thumbprint of the value. The algorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.
type GetManagerEncryptionKeyResultOutput struct{ *pulumi.OutputState }

func (GetManagerEncryptionKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagerEncryptionKeyResult)(nil)).Elem()
}

func (o GetManagerEncryptionKeyResultOutput) ToGetManagerEncryptionKeyResultOutput() GetManagerEncryptionKeyResultOutput {
	return o
}

func (o GetManagerEncryptionKeyResultOutput) ToGetManagerEncryptionKeyResultOutputWithContext(ctx context.Context) GetManagerEncryptionKeyResultOutput {
	return o
}

// Algorithm used to encrypt "Value"
func (o GetManagerEncryptionKeyResultOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagerEncryptionKeyResult) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// The value of the secret itself. If the secret is in plaintext or null then EncryptionAlgorithm will be none
func (o GetManagerEncryptionKeyResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagerEncryptionKeyResult) string { return v.Value }).(pulumi.StringOutput)
}

// Thumbprint cert that was used to encrypt "Value"
func (o GetManagerEncryptionKeyResultOutput) ValueCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagerEncryptionKeyResult) *string { return v.ValueCertificateThumbprint }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagerEncryptionKeyResultOutput{})
}
