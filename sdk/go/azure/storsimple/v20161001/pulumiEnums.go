// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20161001

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The cloud service provider
type CloudType string

const (
	CloudTypeAzure     = CloudType("Azure")
	CloudTypeS3        = CloudType("S3")
	CloudType_S3_RRS   = CloudType("S3_RRS")
	CloudTypeOpenStack = CloudType("OpenStack")
	CloudTypeHP        = CloudType("HP")
)

func (CloudType) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudType)(nil)).Elem()
}

func (e CloudType) ToCloudTypeOutput() CloudTypeOutput {
	return pulumi.ToOutput(e).(CloudTypeOutput)
}

func (e CloudType) ToCloudTypeOutputWithContext(ctx context.Context) CloudTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CloudTypeOutput)
}

func (e CloudType) ToCloudTypePtrOutput() CloudTypePtrOutput {
	return e.ToCloudTypePtrOutputWithContext(context.Background())
}

func (e CloudType) ToCloudTypePtrOutputWithContext(ctx context.Context) CloudTypePtrOutput {
	return CloudType(e).ToCloudTypeOutputWithContext(ctx).ToCloudTypePtrOutputWithContext(ctx)
}

func (e CloudType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CloudType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CloudTypeOutput struct{ *pulumi.OutputState }

func (CloudTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudType)(nil)).Elem()
}

func (o CloudTypeOutput) ToCloudTypeOutput() CloudTypeOutput {
	return o
}

func (o CloudTypeOutput) ToCloudTypeOutputWithContext(ctx context.Context) CloudTypeOutput {
	return o
}

func (o CloudTypeOutput) ToCloudTypePtrOutput() CloudTypePtrOutput {
	return o.ToCloudTypePtrOutputWithContext(context.Background())
}

func (o CloudTypeOutput) ToCloudTypePtrOutputWithContext(ctx context.Context) CloudTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudType) *CloudType {
		return &v
	}).(CloudTypePtrOutput)
}

func (o CloudTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CloudTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CloudTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CloudTypePtrOutput struct{ *pulumi.OutputState }

func (CloudTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudType)(nil)).Elem()
}

func (o CloudTypePtrOutput) ToCloudTypePtrOutput() CloudTypePtrOutput {
	return o
}

func (o CloudTypePtrOutput) ToCloudTypePtrOutputWithContext(ctx context.Context) CloudTypePtrOutput {
	return o
}

func (o CloudTypePtrOutput) Elem() CloudTypeOutput {
	return o.ApplyT(func(v *CloudType) CloudType {
		if v != nil {
			return *v
		}
		var ret CloudType
		return ret
	}).(CloudTypeOutput)
}

func (o CloudTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CloudType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CloudTypeInput is an input type that accepts CloudTypeArgs and CloudTypeOutput values.
// You can construct a concrete instance of `CloudTypeInput` via:
//
//	CloudTypeArgs{...}
type CloudTypeInput interface {
	pulumi.Input

	ToCloudTypeOutput() CloudTypeOutput
	ToCloudTypeOutputWithContext(context.Context) CloudTypeOutput
}

var cloudTypePtrType = reflect.TypeOf((**CloudType)(nil)).Elem()

type CloudTypePtrInput interface {
	pulumi.Input

	ToCloudTypePtrOutput() CloudTypePtrOutput
	ToCloudTypePtrOutputWithContext(context.Context) CloudTypePtrOutput
}

type cloudTypePtr string

func CloudTypePtr(v string) CloudTypePtrInput {
	return (*cloudTypePtr)(&v)
}

func (*cloudTypePtr) ElementType() reflect.Type {
	return cloudTypePtrType
}

func (in *cloudTypePtr) ToCloudTypePtrOutput() CloudTypePtrOutput {
	return pulumi.ToOutput(in).(CloudTypePtrOutput)
}

func (in *cloudTypePtr) ToCloudTypePtrOutputWithContext(ctx context.Context) CloudTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CloudTypePtrOutput)
}

// The data policy.
type DataPolicy string

const (
	DataPolicyInvalid = DataPolicy("Invalid")
	DataPolicyLocal   = DataPolicy("Local")
	DataPolicyTiered  = DataPolicy("Tiered")
	DataPolicyCloud   = DataPolicy("Cloud")
)

func (DataPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPolicy)(nil)).Elem()
}

func (e DataPolicy) ToDataPolicyOutput() DataPolicyOutput {
	return pulumi.ToOutput(e).(DataPolicyOutput)
}

func (e DataPolicy) ToDataPolicyOutputWithContext(ctx context.Context) DataPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataPolicyOutput)
}

func (e DataPolicy) ToDataPolicyPtrOutput() DataPolicyPtrOutput {
	return e.ToDataPolicyPtrOutputWithContext(context.Background())
}

func (e DataPolicy) ToDataPolicyPtrOutputWithContext(ctx context.Context) DataPolicyPtrOutput {
	return DataPolicy(e).ToDataPolicyOutputWithContext(ctx).ToDataPolicyPtrOutputWithContext(ctx)
}

func (e DataPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataPolicyOutput struct{ *pulumi.OutputState }

func (DataPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPolicy)(nil)).Elem()
}

func (o DataPolicyOutput) ToDataPolicyOutput() DataPolicyOutput {
	return o
}

func (o DataPolicyOutput) ToDataPolicyOutputWithContext(ctx context.Context) DataPolicyOutput {
	return o
}

func (o DataPolicyOutput) ToDataPolicyPtrOutput() DataPolicyPtrOutput {
	return o.ToDataPolicyPtrOutputWithContext(context.Background())
}

func (o DataPolicyOutput) ToDataPolicyPtrOutputWithContext(ctx context.Context) DataPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataPolicy) *DataPolicy {
		return &v
	}).(DataPolicyPtrOutput)
}

func (o DataPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataPolicyPtrOutput struct{ *pulumi.OutputState }

func (DataPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPolicy)(nil)).Elem()
}

func (o DataPolicyPtrOutput) ToDataPolicyPtrOutput() DataPolicyPtrOutput {
	return o
}

func (o DataPolicyPtrOutput) ToDataPolicyPtrOutputWithContext(ctx context.Context) DataPolicyPtrOutput {
	return o
}

func (o DataPolicyPtrOutput) Elem() DataPolicyOutput {
	return o.ApplyT(func(v *DataPolicy) DataPolicy {
		if v != nil {
			return *v
		}
		var ret DataPolicy
		return ret
	}).(DataPolicyOutput)
}

func (o DataPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataPolicyInput is an input type that accepts DataPolicyArgs and DataPolicyOutput values.
// You can construct a concrete instance of `DataPolicyInput` via:
//
//	DataPolicyArgs{...}
type DataPolicyInput interface {
	pulumi.Input

	ToDataPolicyOutput() DataPolicyOutput
	ToDataPolicyOutputWithContext(context.Context) DataPolicyOutput
}

var dataPolicyPtrType = reflect.TypeOf((**DataPolicy)(nil)).Elem()

type DataPolicyPtrInput interface {
	pulumi.Input

	ToDataPolicyPtrOutput() DataPolicyPtrOutput
	ToDataPolicyPtrOutputWithContext(context.Context) DataPolicyPtrOutput
}

type dataPolicyPtr string

func DataPolicyPtr(v string) DataPolicyPtrInput {
	return (*dataPolicyPtr)(&v)
}

func (*dataPolicyPtr) ElementType() reflect.Type {
	return dataPolicyPtrType
}

func (in *dataPolicyPtr) ToDataPolicyPtrOutput() DataPolicyPtrOutput {
	return pulumi.ToOutput(in).(DataPolicyPtrOutput)
}

func (in *dataPolicyPtr) ToDataPolicyPtrOutputWithContext(ctx context.Context) DataPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataPolicyPtrOutput)
}

// The disk status.
type DiskStatus string

const (
	DiskStatusOnline  = DiskStatus("Online")
	DiskStatusOffline = DiskStatus("Offline")
)

func (DiskStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskStatus)(nil)).Elem()
}

func (e DiskStatus) ToDiskStatusOutput() DiskStatusOutput {
	return pulumi.ToOutput(e).(DiskStatusOutput)
}

func (e DiskStatus) ToDiskStatusOutputWithContext(ctx context.Context) DiskStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiskStatusOutput)
}

func (e DiskStatus) ToDiskStatusPtrOutput() DiskStatusPtrOutput {
	return e.ToDiskStatusPtrOutputWithContext(context.Background())
}

func (e DiskStatus) ToDiskStatusPtrOutputWithContext(ctx context.Context) DiskStatusPtrOutput {
	return DiskStatus(e).ToDiskStatusOutputWithContext(ctx).ToDiskStatusPtrOutputWithContext(ctx)
}

func (e DiskStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiskStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiskStatusOutput struct{ *pulumi.OutputState }

func (DiskStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskStatus)(nil)).Elem()
}

func (o DiskStatusOutput) ToDiskStatusOutput() DiskStatusOutput {
	return o
}

func (o DiskStatusOutput) ToDiskStatusOutputWithContext(ctx context.Context) DiskStatusOutput {
	return o
}

func (o DiskStatusOutput) ToDiskStatusPtrOutput() DiskStatusPtrOutput {
	return o.ToDiskStatusPtrOutputWithContext(context.Background())
}

func (o DiskStatusOutput) ToDiskStatusPtrOutputWithContext(ctx context.Context) DiskStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskStatus) *DiskStatus {
		return &v
	}).(DiskStatusPtrOutput)
}

func (o DiskStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiskStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiskStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiskStatusPtrOutput struct{ *pulumi.OutputState }

func (DiskStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskStatus)(nil)).Elem()
}

func (o DiskStatusPtrOutput) ToDiskStatusPtrOutput() DiskStatusPtrOutput {
	return o
}

func (o DiskStatusPtrOutput) ToDiskStatusPtrOutputWithContext(ctx context.Context) DiskStatusPtrOutput {
	return o
}

func (o DiskStatusPtrOutput) Elem() DiskStatusOutput {
	return o.ApplyT(func(v *DiskStatus) DiskStatus {
		if v != nil {
			return *v
		}
		var ret DiskStatus
		return ret
	}).(DiskStatusOutput)
}

func (o DiskStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiskStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiskStatusInput is an input type that accepts DiskStatusArgs and DiskStatusOutput values.
// You can construct a concrete instance of `DiskStatusInput` via:
//
//	DiskStatusArgs{...}
type DiskStatusInput interface {
	pulumi.Input

	ToDiskStatusOutput() DiskStatusOutput
	ToDiskStatusOutputWithContext(context.Context) DiskStatusOutput
}

var diskStatusPtrType = reflect.TypeOf((**DiskStatus)(nil)).Elem()

type DiskStatusPtrInput interface {
	pulumi.Input

	ToDiskStatusPtrOutput() DiskStatusPtrOutput
	ToDiskStatusPtrOutputWithContext(context.Context) DiskStatusPtrOutput
}

type diskStatusPtr string

func DiskStatusPtr(v string) DiskStatusPtrInput {
	return (*diskStatusPtr)(&v)
}

func (*diskStatusPtr) ElementType() reflect.Type {
	return diskStatusPtrType
}

func (in *diskStatusPtr) ToDiskStatusPtrOutput() DiskStatusPtrOutput {
	return pulumi.ToOutput(in).(DiskStatusPtrOutput)
}

func (in *diskStatusPtr) ToDiskStatusPtrOutputWithContext(ctx context.Context) DiskStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiskStatusPtrOutput)
}

// Algorithm used to encrypt "Value"
type EncryptionAlgorithm string

const (
	EncryptionAlgorithmNone               = EncryptionAlgorithm("None")
	EncryptionAlgorithmAES256             = EncryptionAlgorithm("AES256")
	EncryptionAlgorithm_RSAES_PKCS1_v_1_5 = EncryptionAlgorithm("RSAES_PKCS1_v_1_5")
)

func (EncryptionAlgorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAlgorithm)(nil)).Elem()
}

func (e EncryptionAlgorithm) ToEncryptionAlgorithmOutput() EncryptionAlgorithmOutput {
	return pulumi.ToOutput(e).(EncryptionAlgorithmOutput)
}

func (e EncryptionAlgorithm) ToEncryptionAlgorithmOutputWithContext(ctx context.Context) EncryptionAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionAlgorithmOutput)
}

func (e EncryptionAlgorithm) ToEncryptionAlgorithmPtrOutput() EncryptionAlgorithmPtrOutput {
	return e.ToEncryptionAlgorithmPtrOutputWithContext(context.Background())
}

func (e EncryptionAlgorithm) ToEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) EncryptionAlgorithmPtrOutput {
	return EncryptionAlgorithm(e).ToEncryptionAlgorithmOutputWithContext(ctx).ToEncryptionAlgorithmPtrOutputWithContext(ctx)
}

func (e EncryptionAlgorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionAlgorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionAlgorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionAlgorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionAlgorithmOutput struct{ *pulumi.OutputState }

func (EncryptionAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAlgorithm)(nil)).Elem()
}

func (o EncryptionAlgorithmOutput) ToEncryptionAlgorithmOutput() EncryptionAlgorithmOutput {
	return o
}

func (o EncryptionAlgorithmOutput) ToEncryptionAlgorithmOutputWithContext(ctx context.Context) EncryptionAlgorithmOutput {
	return o
}

func (o EncryptionAlgorithmOutput) ToEncryptionAlgorithmPtrOutput() EncryptionAlgorithmPtrOutput {
	return o.ToEncryptionAlgorithmPtrOutputWithContext(context.Background())
}

func (o EncryptionAlgorithmOutput) ToEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) EncryptionAlgorithmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionAlgorithm) *EncryptionAlgorithm {
		return &v
	}).(EncryptionAlgorithmPtrOutput)
}

func (o EncryptionAlgorithmOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionAlgorithmOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionAlgorithm) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionAlgorithmOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionAlgorithmOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionAlgorithm) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (EncryptionAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAlgorithm)(nil)).Elem()
}

func (o EncryptionAlgorithmPtrOutput) ToEncryptionAlgorithmPtrOutput() EncryptionAlgorithmPtrOutput {
	return o
}

func (o EncryptionAlgorithmPtrOutput) ToEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) EncryptionAlgorithmPtrOutput {
	return o
}

func (o EncryptionAlgorithmPtrOutput) Elem() EncryptionAlgorithmOutput {
	return o.ApplyT(func(v *EncryptionAlgorithm) EncryptionAlgorithm {
		if v != nil {
			return *v
		}
		var ret EncryptionAlgorithm
		return ret
	}).(EncryptionAlgorithmOutput)
}

func (o EncryptionAlgorithmPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionAlgorithmPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionAlgorithm) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionAlgorithmInput is an input type that accepts EncryptionAlgorithmArgs and EncryptionAlgorithmOutput values.
// You can construct a concrete instance of `EncryptionAlgorithmInput` via:
//
//	EncryptionAlgorithmArgs{...}
type EncryptionAlgorithmInput interface {
	pulumi.Input

	ToEncryptionAlgorithmOutput() EncryptionAlgorithmOutput
	ToEncryptionAlgorithmOutputWithContext(context.Context) EncryptionAlgorithmOutput
}

var encryptionAlgorithmPtrType = reflect.TypeOf((**EncryptionAlgorithm)(nil)).Elem()

type EncryptionAlgorithmPtrInput interface {
	pulumi.Input

	ToEncryptionAlgorithmPtrOutput() EncryptionAlgorithmPtrOutput
	ToEncryptionAlgorithmPtrOutputWithContext(context.Context) EncryptionAlgorithmPtrOutput
}

type encryptionAlgorithmPtr string

func EncryptionAlgorithmPtr(v string) EncryptionAlgorithmPtrInput {
	return (*encryptionAlgorithmPtr)(&v)
}

func (*encryptionAlgorithmPtr) ElementType() reflect.Type {
	return encryptionAlgorithmPtrType
}

func (in *encryptionAlgorithmPtr) ToEncryptionAlgorithmPtrOutput() EncryptionAlgorithmPtrOutput {
	return pulumi.ToOutput(in).(EncryptionAlgorithmPtrOutput)
}

func (in *encryptionAlgorithmPtr) ToEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) EncryptionAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionAlgorithmPtrOutput)
}

// The encryption status "Enabled | Disabled".
type EncryptionStatus string

const (
	EncryptionStatusEnabled  = EncryptionStatus("Enabled")
	EncryptionStatusDisabled = EncryptionStatus("Disabled")
)

func (EncryptionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionStatus)(nil)).Elem()
}

func (e EncryptionStatus) ToEncryptionStatusOutput() EncryptionStatusOutput {
	return pulumi.ToOutput(e).(EncryptionStatusOutput)
}

func (e EncryptionStatus) ToEncryptionStatusOutputWithContext(ctx context.Context) EncryptionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionStatusOutput)
}

func (e EncryptionStatus) ToEncryptionStatusPtrOutput() EncryptionStatusPtrOutput {
	return e.ToEncryptionStatusPtrOutputWithContext(context.Background())
}

func (e EncryptionStatus) ToEncryptionStatusPtrOutputWithContext(ctx context.Context) EncryptionStatusPtrOutput {
	return EncryptionStatus(e).ToEncryptionStatusOutputWithContext(ctx).ToEncryptionStatusPtrOutputWithContext(ctx)
}

func (e EncryptionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionStatusOutput struct{ *pulumi.OutputState }

func (EncryptionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionStatus)(nil)).Elem()
}

func (o EncryptionStatusOutput) ToEncryptionStatusOutput() EncryptionStatusOutput {
	return o
}

func (o EncryptionStatusOutput) ToEncryptionStatusOutputWithContext(ctx context.Context) EncryptionStatusOutput {
	return o
}

func (o EncryptionStatusOutput) ToEncryptionStatusPtrOutput() EncryptionStatusPtrOutput {
	return o.ToEncryptionStatusPtrOutputWithContext(context.Background())
}

func (o EncryptionStatusOutput) ToEncryptionStatusPtrOutputWithContext(ctx context.Context) EncryptionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionStatus) *EncryptionStatus {
		return &v
	}).(EncryptionStatusPtrOutput)
}

func (o EncryptionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionStatusPtrOutput struct{ *pulumi.OutputState }

func (EncryptionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionStatus)(nil)).Elem()
}

func (o EncryptionStatusPtrOutput) ToEncryptionStatusPtrOutput() EncryptionStatusPtrOutput {
	return o
}

func (o EncryptionStatusPtrOutput) ToEncryptionStatusPtrOutputWithContext(ctx context.Context) EncryptionStatusPtrOutput {
	return o
}

func (o EncryptionStatusPtrOutput) Elem() EncryptionStatusOutput {
	return o.ApplyT(func(v *EncryptionStatus) EncryptionStatus {
		if v != nil {
			return *v
		}
		var ret EncryptionStatus
		return ret
	}).(EncryptionStatusOutput)
}

func (o EncryptionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionStatusInput is an input type that accepts EncryptionStatusArgs and EncryptionStatusOutput values.
// You can construct a concrete instance of `EncryptionStatusInput` via:
//
//	EncryptionStatusArgs{...}
type EncryptionStatusInput interface {
	pulumi.Input

	ToEncryptionStatusOutput() EncryptionStatusOutput
	ToEncryptionStatusOutputWithContext(context.Context) EncryptionStatusOutput
}

var encryptionStatusPtrType = reflect.TypeOf((**EncryptionStatus)(nil)).Elem()

type EncryptionStatusPtrInput interface {
	pulumi.Input

	ToEncryptionStatusPtrOutput() EncryptionStatusPtrOutput
	ToEncryptionStatusPtrOutputWithContext(context.Context) EncryptionStatusPtrOutput
}

type encryptionStatusPtr string

func EncryptionStatusPtr(v string) EncryptionStatusPtrInput {
	return (*encryptionStatusPtr)(&v)
}

func (*encryptionStatusPtr) ElementType() reflect.Type {
	return encryptionStatusPtrType
}

func (in *encryptionStatusPtr) ToEncryptionStatusPtrOutput() EncryptionStatusPtrOutput {
	return pulumi.ToOutput(in).(EncryptionStatusPtrOutput)
}

func (in *encryptionStatusPtr) ToEncryptionStatusPtrOutputWithContext(ctx context.Context) EncryptionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionStatusPtrOutput)
}

// Refers to the sku name which should be "Standard"
type ManagerSkuType string

const (
	ManagerSkuTypeStandard = ManagerSkuType("Standard")
)

func (ManagerSkuType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerSkuType)(nil)).Elem()
}

func (e ManagerSkuType) ToManagerSkuTypeOutput() ManagerSkuTypeOutput {
	return pulumi.ToOutput(e).(ManagerSkuTypeOutput)
}

func (e ManagerSkuType) ToManagerSkuTypeOutputWithContext(ctx context.Context) ManagerSkuTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagerSkuTypeOutput)
}

func (e ManagerSkuType) ToManagerSkuTypePtrOutput() ManagerSkuTypePtrOutput {
	return e.ToManagerSkuTypePtrOutputWithContext(context.Background())
}

func (e ManagerSkuType) ToManagerSkuTypePtrOutputWithContext(ctx context.Context) ManagerSkuTypePtrOutput {
	return ManagerSkuType(e).ToManagerSkuTypeOutputWithContext(ctx).ToManagerSkuTypePtrOutputWithContext(ctx)
}

func (e ManagerSkuType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagerSkuType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagerSkuType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagerSkuType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagerSkuTypeOutput struct{ *pulumi.OutputState }

func (ManagerSkuTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerSkuType)(nil)).Elem()
}

func (o ManagerSkuTypeOutput) ToManagerSkuTypeOutput() ManagerSkuTypeOutput {
	return o
}

func (o ManagerSkuTypeOutput) ToManagerSkuTypeOutputWithContext(ctx context.Context) ManagerSkuTypeOutput {
	return o
}

func (o ManagerSkuTypeOutput) ToManagerSkuTypePtrOutput() ManagerSkuTypePtrOutput {
	return o.ToManagerSkuTypePtrOutputWithContext(context.Background())
}

func (o ManagerSkuTypeOutput) ToManagerSkuTypePtrOutputWithContext(ctx context.Context) ManagerSkuTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagerSkuType) *ManagerSkuType {
		return &v
	}).(ManagerSkuTypePtrOutput)
}

func (o ManagerSkuTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagerSkuTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagerSkuType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagerSkuTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagerSkuTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagerSkuType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagerSkuTypePtrOutput struct{ *pulumi.OutputState }

func (ManagerSkuTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerSkuType)(nil)).Elem()
}

func (o ManagerSkuTypePtrOutput) ToManagerSkuTypePtrOutput() ManagerSkuTypePtrOutput {
	return o
}

func (o ManagerSkuTypePtrOutput) ToManagerSkuTypePtrOutputWithContext(ctx context.Context) ManagerSkuTypePtrOutput {
	return o
}

func (o ManagerSkuTypePtrOutput) Elem() ManagerSkuTypeOutput {
	return o.ApplyT(func(v *ManagerSkuType) ManagerSkuType {
		if v != nil {
			return *v
		}
		var ret ManagerSkuType
		return ret
	}).(ManagerSkuTypeOutput)
}

func (o ManagerSkuTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagerSkuTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagerSkuType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagerSkuTypeInput is an input type that accepts ManagerSkuTypeArgs and ManagerSkuTypeOutput values.
// You can construct a concrete instance of `ManagerSkuTypeInput` via:
//
//	ManagerSkuTypeArgs{...}
type ManagerSkuTypeInput interface {
	pulumi.Input

	ToManagerSkuTypeOutput() ManagerSkuTypeOutput
	ToManagerSkuTypeOutputWithContext(context.Context) ManagerSkuTypeOutput
}

var managerSkuTypePtrType = reflect.TypeOf((**ManagerSkuType)(nil)).Elem()

type ManagerSkuTypePtrInput interface {
	pulumi.Input

	ToManagerSkuTypePtrOutput() ManagerSkuTypePtrOutput
	ToManagerSkuTypePtrOutputWithContext(context.Context) ManagerSkuTypePtrOutput
}

type managerSkuTypePtr string

func ManagerSkuTypePtr(v string) ManagerSkuTypePtrInput {
	return (*managerSkuTypePtr)(&v)
}

func (*managerSkuTypePtr) ElementType() reflect.Type {
	return managerSkuTypePtrType
}

func (in *managerSkuTypePtr) ToManagerSkuTypePtrOutput() ManagerSkuTypePtrOutput {
	return pulumi.ToOutput(in).(ManagerSkuTypePtrOutput)
}

func (in *managerSkuTypePtr) ToManagerSkuTypePtrOutputWithContext(ctx context.Context) ManagerSkuTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagerSkuTypePtrOutput)
}

// Refers to the type of the StorSimple Manager
type ManagerType string

const (
	ManagerTypeGardaV1    = ManagerType("GardaV1")
	ManagerTypeHelsinkiV1 = ManagerType("HelsinkiV1")
)

func (ManagerType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerType)(nil)).Elem()
}

func (e ManagerType) ToManagerTypeOutput() ManagerTypeOutput {
	return pulumi.ToOutput(e).(ManagerTypeOutput)
}

func (e ManagerType) ToManagerTypeOutputWithContext(ctx context.Context) ManagerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagerTypeOutput)
}

func (e ManagerType) ToManagerTypePtrOutput() ManagerTypePtrOutput {
	return e.ToManagerTypePtrOutputWithContext(context.Background())
}

func (e ManagerType) ToManagerTypePtrOutputWithContext(ctx context.Context) ManagerTypePtrOutput {
	return ManagerType(e).ToManagerTypeOutputWithContext(ctx).ToManagerTypePtrOutputWithContext(ctx)
}

func (e ManagerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagerTypeOutput struct{ *pulumi.OutputState }

func (ManagerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagerType)(nil)).Elem()
}

func (o ManagerTypeOutput) ToManagerTypeOutput() ManagerTypeOutput {
	return o
}

func (o ManagerTypeOutput) ToManagerTypeOutputWithContext(ctx context.Context) ManagerTypeOutput {
	return o
}

func (o ManagerTypeOutput) ToManagerTypePtrOutput() ManagerTypePtrOutput {
	return o.ToManagerTypePtrOutputWithContext(context.Background())
}

func (o ManagerTypeOutput) ToManagerTypePtrOutputWithContext(ctx context.Context) ManagerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagerType) *ManagerType {
		return &v
	}).(ManagerTypePtrOutput)
}

func (o ManagerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagerTypePtrOutput struct{ *pulumi.OutputState }

func (ManagerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagerType)(nil)).Elem()
}

func (o ManagerTypePtrOutput) ToManagerTypePtrOutput() ManagerTypePtrOutput {
	return o
}

func (o ManagerTypePtrOutput) ToManagerTypePtrOutputWithContext(ctx context.Context) ManagerTypePtrOutput {
	return o
}

func (o ManagerTypePtrOutput) Elem() ManagerTypeOutput {
	return o.ApplyT(func(v *ManagerType) ManagerType {
		if v != nil {
			return *v
		}
		var ret ManagerType
		return ret
	}).(ManagerTypeOutput)
}

func (o ManagerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagerTypeInput is an input type that accepts ManagerTypeArgs and ManagerTypeOutput values.
// You can construct a concrete instance of `ManagerTypeInput` via:
//
//	ManagerTypeArgs{...}
type ManagerTypeInput interface {
	pulumi.Input

	ToManagerTypeOutput() ManagerTypeOutput
	ToManagerTypeOutputWithContext(context.Context) ManagerTypeOutput
}

var managerTypePtrType = reflect.TypeOf((**ManagerType)(nil)).Elem()

type ManagerTypePtrInput interface {
	pulumi.Input

	ToManagerTypePtrOutput() ManagerTypePtrOutput
	ToManagerTypePtrOutputWithContext(context.Context) ManagerTypePtrOutput
}

type managerTypePtr string

func ManagerTypePtr(v string) ManagerTypePtrInput {
	return (*managerTypePtr)(&v)
}

func (*managerTypePtr) ElementType() reflect.Type {
	return managerTypePtrType
}

func (in *managerTypePtr) ToManagerTypePtrOutput() ManagerTypePtrOutput {
	return pulumi.ToOutput(in).(ManagerTypePtrOutput)
}

func (in *managerTypePtr) ToManagerTypePtrOutputWithContext(ctx context.Context) ManagerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagerTypePtrOutput)
}

// The monitoring.
type MonitoringStatus string

const (
	MonitoringStatusEnabled  = MonitoringStatus("Enabled")
	MonitoringStatusDisabled = MonitoringStatus("Disabled")
)

func (MonitoringStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringStatus)(nil)).Elem()
}

func (e MonitoringStatus) ToMonitoringStatusOutput() MonitoringStatusOutput {
	return pulumi.ToOutput(e).(MonitoringStatusOutput)
}

func (e MonitoringStatus) ToMonitoringStatusOutputWithContext(ctx context.Context) MonitoringStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MonitoringStatusOutput)
}

func (e MonitoringStatus) ToMonitoringStatusPtrOutput() MonitoringStatusPtrOutput {
	return e.ToMonitoringStatusPtrOutputWithContext(context.Background())
}

func (e MonitoringStatus) ToMonitoringStatusPtrOutputWithContext(ctx context.Context) MonitoringStatusPtrOutput {
	return MonitoringStatus(e).ToMonitoringStatusOutputWithContext(ctx).ToMonitoringStatusPtrOutputWithContext(ctx)
}

func (e MonitoringStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MonitoringStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MonitoringStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MonitoringStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MonitoringStatusOutput struct{ *pulumi.OutputState }

func (MonitoringStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringStatus)(nil)).Elem()
}

func (o MonitoringStatusOutput) ToMonitoringStatusOutput() MonitoringStatusOutput {
	return o
}

func (o MonitoringStatusOutput) ToMonitoringStatusOutputWithContext(ctx context.Context) MonitoringStatusOutput {
	return o
}

func (o MonitoringStatusOutput) ToMonitoringStatusPtrOutput() MonitoringStatusPtrOutput {
	return o.ToMonitoringStatusPtrOutputWithContext(context.Background())
}

func (o MonitoringStatusOutput) ToMonitoringStatusPtrOutputWithContext(ctx context.Context) MonitoringStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringStatus) *MonitoringStatus {
		return &v
	}).(MonitoringStatusPtrOutput)
}

func (o MonitoringStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MonitoringStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MonitoringStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MonitoringStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MonitoringStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MonitoringStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MonitoringStatusPtrOutput struct{ *pulumi.OutputState }

func (MonitoringStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringStatus)(nil)).Elem()
}

func (o MonitoringStatusPtrOutput) ToMonitoringStatusPtrOutput() MonitoringStatusPtrOutput {
	return o
}

func (o MonitoringStatusPtrOutput) ToMonitoringStatusPtrOutputWithContext(ctx context.Context) MonitoringStatusPtrOutput {
	return o
}

func (o MonitoringStatusPtrOutput) Elem() MonitoringStatusOutput {
	return o.ApplyT(func(v *MonitoringStatus) MonitoringStatus {
		if v != nil {
			return *v
		}
		var ret MonitoringStatus
		return ret
	}).(MonitoringStatusOutput)
}

func (o MonitoringStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MonitoringStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MonitoringStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MonitoringStatusInput is an input type that accepts MonitoringStatusArgs and MonitoringStatusOutput values.
// You can construct a concrete instance of `MonitoringStatusInput` via:
//
//	MonitoringStatusArgs{...}
type MonitoringStatusInput interface {
	pulumi.Input

	ToMonitoringStatusOutput() MonitoringStatusOutput
	ToMonitoringStatusOutputWithContext(context.Context) MonitoringStatusOutput
}

var monitoringStatusPtrType = reflect.TypeOf((**MonitoringStatus)(nil)).Elem()

type MonitoringStatusPtrInput interface {
	pulumi.Input

	ToMonitoringStatusPtrOutput() MonitoringStatusPtrOutput
	ToMonitoringStatusPtrOutputWithContext(context.Context) MonitoringStatusPtrOutput
}

type monitoringStatusPtr string

func MonitoringStatusPtr(v string) MonitoringStatusPtrInput {
	return (*monitoringStatusPtr)(&v)
}

func (*monitoringStatusPtr) ElementType() reflect.Type {
	return monitoringStatusPtrType
}

func (in *monitoringStatusPtr) ToMonitoringStatusPtrOutput() MonitoringStatusPtrOutput {
	return pulumi.ToOutput(in).(MonitoringStatusPtrOutput)
}

func (in *monitoringStatusPtr) ToMonitoringStatusPtrOutputWithContext(ctx context.Context) MonitoringStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MonitoringStatusPtrOutput)
}

// The Share Status
type ShareStatus string

const (
	ShareStatusOnline  = ShareStatus("Online")
	ShareStatusOffline = ShareStatus("Offline")
)

func (ShareStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareStatus)(nil)).Elem()
}

func (e ShareStatus) ToShareStatusOutput() ShareStatusOutput {
	return pulumi.ToOutput(e).(ShareStatusOutput)
}

func (e ShareStatus) ToShareStatusOutputWithContext(ctx context.Context) ShareStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ShareStatusOutput)
}

func (e ShareStatus) ToShareStatusPtrOutput() ShareStatusPtrOutput {
	return e.ToShareStatusPtrOutputWithContext(context.Background())
}

func (e ShareStatus) ToShareStatusPtrOutputWithContext(ctx context.Context) ShareStatusPtrOutput {
	return ShareStatus(e).ToShareStatusOutputWithContext(ctx).ToShareStatusPtrOutputWithContext(ctx)
}

func (e ShareStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ShareStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ShareStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ShareStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ShareStatusOutput struct{ *pulumi.OutputState }

func (ShareStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareStatus)(nil)).Elem()
}

func (o ShareStatusOutput) ToShareStatusOutput() ShareStatusOutput {
	return o
}

func (o ShareStatusOutput) ToShareStatusOutputWithContext(ctx context.Context) ShareStatusOutput {
	return o
}

func (o ShareStatusOutput) ToShareStatusPtrOutput() ShareStatusPtrOutput {
	return o.ToShareStatusPtrOutputWithContext(context.Background())
}

func (o ShareStatusOutput) ToShareStatusPtrOutputWithContext(ctx context.Context) ShareStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShareStatus) *ShareStatus {
		return &v
	}).(ShareStatusPtrOutput)
}

func (o ShareStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ShareStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ShareStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ShareStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ShareStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ShareStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ShareStatusPtrOutput struct{ *pulumi.OutputState }

func (ShareStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareStatus)(nil)).Elem()
}

func (o ShareStatusPtrOutput) ToShareStatusPtrOutput() ShareStatusPtrOutput {
	return o
}

func (o ShareStatusPtrOutput) ToShareStatusPtrOutputWithContext(ctx context.Context) ShareStatusPtrOutput {
	return o
}

func (o ShareStatusPtrOutput) Elem() ShareStatusOutput {
	return o.ApplyT(func(v *ShareStatus) ShareStatus {
		if v != nil {
			return *v
		}
		var ret ShareStatus
		return ret
	}).(ShareStatusOutput)
}

func (o ShareStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ShareStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ShareStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ShareStatusInput is an input type that accepts ShareStatusArgs and ShareStatusOutput values.
// You can construct a concrete instance of `ShareStatusInput` via:
//
//	ShareStatusArgs{...}
type ShareStatusInput interface {
	pulumi.Input

	ToShareStatusOutput() ShareStatusOutput
	ToShareStatusOutputWithContext(context.Context) ShareStatusOutput
}

var shareStatusPtrType = reflect.TypeOf((**ShareStatus)(nil)).Elem()

type ShareStatusPtrInput interface {
	pulumi.Input

	ToShareStatusPtrOutput() ShareStatusPtrOutput
	ToShareStatusPtrOutputWithContext(context.Context) ShareStatusPtrOutput
}

type shareStatusPtr string

func ShareStatusPtr(v string) ShareStatusPtrInput {
	return (*shareStatusPtr)(&v)
}

func (*shareStatusPtr) ElementType() reflect.Type {
	return shareStatusPtrType
}

func (in *shareStatusPtr) ToShareStatusPtrOutput() ShareStatusPtrOutput {
	return pulumi.ToOutput(in).(ShareStatusPtrOutput)
}

func (in *shareStatusPtr) ToShareStatusPtrOutputWithContext(ctx context.Context) ShareStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ShareStatusPtrOutput)
}

// SSL needs to be enabled or not
type SslStatus string

const (
	SslStatusEnabled  = SslStatus("Enabled")
	SslStatusDisabled = SslStatus("Disabled")
)

func (SslStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*SslStatus)(nil)).Elem()
}

func (e SslStatus) ToSslStatusOutput() SslStatusOutput {
	return pulumi.ToOutput(e).(SslStatusOutput)
}

func (e SslStatus) ToSslStatusOutputWithContext(ctx context.Context) SslStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SslStatusOutput)
}

func (e SslStatus) ToSslStatusPtrOutput() SslStatusPtrOutput {
	return e.ToSslStatusPtrOutputWithContext(context.Background())
}

func (e SslStatus) ToSslStatusPtrOutputWithContext(ctx context.Context) SslStatusPtrOutput {
	return SslStatus(e).ToSslStatusOutputWithContext(ctx).ToSslStatusPtrOutputWithContext(ctx)
}

func (e SslStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SslStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SslStatusOutput struct{ *pulumi.OutputState }

func (SslStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslStatus)(nil)).Elem()
}

func (o SslStatusOutput) ToSslStatusOutput() SslStatusOutput {
	return o
}

func (o SslStatusOutput) ToSslStatusOutputWithContext(ctx context.Context) SslStatusOutput {
	return o
}

func (o SslStatusOutput) ToSslStatusPtrOutput() SslStatusPtrOutput {
	return o.ToSslStatusPtrOutputWithContext(context.Background())
}

func (o SslStatusOutput) ToSslStatusPtrOutputWithContext(ctx context.Context) SslStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslStatus) *SslStatus {
		return &v
	}).(SslStatusPtrOutput)
}

func (o SslStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SslStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SslStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SslStatusPtrOutput struct{ *pulumi.OutputState }

func (SslStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslStatus)(nil)).Elem()
}

func (o SslStatusPtrOutput) ToSslStatusPtrOutput() SslStatusPtrOutput {
	return o
}

func (o SslStatusPtrOutput) ToSslStatusPtrOutputWithContext(ctx context.Context) SslStatusPtrOutput {
	return o
}

func (o SslStatusPtrOutput) Elem() SslStatusOutput {
	return o.ApplyT(func(v *SslStatus) SslStatus {
		if v != nil {
			return *v
		}
		var ret SslStatus
		return ret
	}).(SslStatusOutput)
}

func (o SslStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SslStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SslStatusInput is an input type that accepts SslStatusArgs and SslStatusOutput values.
// You can construct a concrete instance of `SslStatusInput` via:
//
//	SslStatusArgs{...}
type SslStatusInput interface {
	pulumi.Input

	ToSslStatusOutput() SslStatusOutput
	ToSslStatusOutputWithContext(context.Context) SslStatusOutput
}

var sslStatusPtrType = reflect.TypeOf((**SslStatus)(nil)).Elem()

type SslStatusPtrInput interface {
	pulumi.Input

	ToSslStatusPtrOutput() SslStatusPtrOutput
	ToSslStatusPtrOutputWithContext(context.Context) SslStatusPtrOutput
}

type sslStatusPtr string

func SslStatusPtr(v string) SslStatusPtrInput {
	return (*sslStatusPtr)(&v)
}

func (*sslStatusPtr) ElementType() reflect.Type {
	return sslStatusPtrType
}

func (in *sslStatusPtr) ToSslStatusPtrOutput() SslStatusPtrOutput {
	return pulumi.ToOutput(in).(SslStatusPtrOutput)
}

func (in *sslStatusPtr) ToSslStatusPtrOutputWithContext(ctx context.Context) SslStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SslStatusPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CloudTypeOutput{})
	pulumi.RegisterOutputType(CloudTypePtrOutput{})
	pulumi.RegisterOutputType(DataPolicyOutput{})
	pulumi.RegisterOutputType(DataPolicyPtrOutput{})
	pulumi.RegisterOutputType(DiskStatusOutput{})
	pulumi.RegisterOutputType(DiskStatusPtrOutput{})
	pulumi.RegisterOutputType(EncryptionAlgorithmOutput{})
	pulumi.RegisterOutputType(EncryptionAlgorithmPtrOutput{})
	pulumi.RegisterOutputType(EncryptionStatusOutput{})
	pulumi.RegisterOutputType(EncryptionStatusPtrOutput{})
	pulumi.RegisterOutputType(ManagerSkuTypeOutput{})
	pulumi.RegisterOutputType(ManagerSkuTypePtrOutput{})
	pulumi.RegisterOutputType(ManagerTypeOutput{})
	pulumi.RegisterOutputType(ManagerTypePtrOutput{})
	pulumi.RegisterOutputType(MonitoringStatusOutput{})
	pulumi.RegisterOutputType(MonitoringStatusPtrOutput{})
	pulumi.RegisterOutputType(ShareStatusOutput{})
	pulumi.RegisterOutputType(ShareStatusPtrOutput{})
	pulumi.RegisterOutputType(SslStatusOutput{})
	pulumi.RegisterOutputType(SslStatusPtrOutput{})
}
