// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210401preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A server vulnerability assessment.
func LookupWorkspaceManagedSqlServerVulnerabilityAssessment(ctx *pulumi.Context, args *LookupWorkspaceManagedSqlServerVulnerabilityAssessmentArgs, opts ...pulumi.InvokeOption) (*LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult, error) {
	var rv LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult
	err := ctx.Invoke("azure-native:synapse/v20210401preview:getWorkspaceManagedSqlServerVulnerabilityAssessment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupWorkspaceManagedSqlServerVulnerabilityAssessmentArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the vulnerability assessment.
	VulnerabilityAssessmentName string `pulumi:"vulnerabilityAssessmentName"`
	// The name of the workspace
	WorkspaceName string `pulumi:"workspaceName"`
}

// A server vulnerability assessment.
type LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The recurring scans settings
	RecurringScans *VulnerabilityAssessmentRecurringScansPropertiesResponse `pulumi:"recurringScans"`
	// A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
	StorageContainerPath string `pulumi:"storageContainerPath"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult
func (val *LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult) Defaults() *LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.RecurringScans = tmp.RecurringScans.Defaults()

	return &tmp
}

func LookupWorkspaceManagedSqlServerVulnerabilityAssessmentOutput(ctx *pulumi.Context, args LookupWorkspaceManagedSqlServerVulnerabilityAssessmentOutputArgs, opts ...pulumi.InvokeOption) LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult, error) {
			args := v.(LookupWorkspaceManagedSqlServerVulnerabilityAssessmentArgs)
			r, err := LookupWorkspaceManagedSqlServerVulnerabilityAssessment(ctx, &args, opts...)
			var s LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput)
}

type LookupWorkspaceManagedSqlServerVulnerabilityAssessmentOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the vulnerability assessment.
	VulnerabilityAssessmentName pulumi.StringInput `pulumi:"vulnerabilityAssessmentName"`
	// The name of the workspace
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}

func (LookupWorkspaceManagedSqlServerVulnerabilityAssessmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceManagedSqlServerVulnerabilityAssessmentArgs)(nil)).Elem()
}

// A server vulnerability assessment.
type LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput struct{ *pulumi.OutputState }

func (LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult)(nil)).Elem()
}

func (o LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput) ToLookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput() LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput {
	return o
}

func (o LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput) ToLookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutputWithContext(ctx context.Context) LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput {
	return o
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult) string { return v.Name }).(pulumi.StringOutput)
}

// The recurring scans settings
func (o LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput) RecurringScans() VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult) *VulnerabilityAssessmentRecurringScansPropertiesResponse {
		return v.RecurringScans
	}).(VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput)
}

// A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
func (o LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput) StorageContainerPath() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult) string {
		return v.StorageContainerPath
	}).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput{})
}
