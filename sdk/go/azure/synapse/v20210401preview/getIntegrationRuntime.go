// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210401preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Integration runtime resource type.
func LookupIntegrationRuntime(ctx *pulumi.Context, args *LookupIntegrationRuntimeArgs, opts ...pulumi.InvokeOption) (*LookupIntegrationRuntimeResult, error) {
	var rv LookupIntegrationRuntimeResult
	err := ctx.Invoke("azure-native:synapse/v20210401preview:getIntegrationRuntime", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIntegrationRuntimeArgs struct {
	// Integration runtime name
	IntegrationRuntimeName string `pulumi:"integrationRuntimeName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// Integration runtime resource type.
type LookupIntegrationRuntimeResult struct {
	// Resource Etag.
	Etag string `pulumi:"etag"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Integration runtime properties.
	Properties interface{} `pulumi:"properties"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupIntegrationRuntimeOutput(ctx *pulumi.Context, args LookupIntegrationRuntimeOutputArgs, opts ...pulumi.InvokeOption) LookupIntegrationRuntimeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIntegrationRuntimeResult, error) {
			args := v.(LookupIntegrationRuntimeArgs)
			r, err := LookupIntegrationRuntime(ctx, &args, opts...)
			var s LookupIntegrationRuntimeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIntegrationRuntimeResultOutput)
}

type LookupIntegrationRuntimeOutputArgs struct {
	// Integration runtime name
	IntegrationRuntimeName pulumi.StringInput `pulumi:"integrationRuntimeName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the workspace.
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}

func (LookupIntegrationRuntimeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIntegrationRuntimeArgs)(nil)).Elem()
}

// Integration runtime resource type.
type LookupIntegrationRuntimeResultOutput struct{ *pulumi.OutputState }

func (LookupIntegrationRuntimeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIntegrationRuntimeResult)(nil)).Elem()
}

func (o LookupIntegrationRuntimeResultOutput) ToLookupIntegrationRuntimeResultOutput() LookupIntegrationRuntimeResultOutput {
	return o
}

func (o LookupIntegrationRuntimeResultOutput) ToLookupIntegrationRuntimeResultOutputWithContext(ctx context.Context) LookupIntegrationRuntimeResultOutput {
	return o
}

// Resource Etag.
func (o LookupIntegrationRuntimeResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIntegrationRuntimeResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupIntegrationRuntimeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIntegrationRuntimeResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupIntegrationRuntimeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIntegrationRuntimeResult) string { return v.Name }).(pulumi.StringOutput)
}

// Integration runtime properties.
func (o LookupIntegrationRuntimeResultOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupIntegrationRuntimeResult) interface{} { return v.Properties }).(pulumi.AnyOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupIntegrationRuntimeResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIntegrationRuntimeResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIntegrationRuntimeResultOutput{})
}
