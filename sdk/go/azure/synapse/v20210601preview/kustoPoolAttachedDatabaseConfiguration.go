// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210601preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Class representing an attached database configuration.
type KustoPoolAttachedDatabaseConfiguration struct {
	pulumi.CustomResourceState

	// The list of databases from the clusterResourceId which are currently attached to the kusto pool.
	AttachedDatabaseNames pulumi.StringArrayOutput `pulumi:"attachedDatabaseNames"`
	// The name of the database which you would like to attach, use * if you want to follow all current and future databases.
	DatabaseName pulumi.StringOutput `pulumi:"databaseName"`
	// The default principals modification kind
	DefaultPrincipalsModificationKind pulumi.StringOutput `pulumi:"defaultPrincipalsModificationKind"`
	// The resource id of the kusto pool where the databases you would like to attach reside.
	KustoPoolResourceId pulumi.StringOutput `pulumi:"kustoPoolResourceId"`
	// Resource location.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The provisioned state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Table level sharing specifications
	TableLevelSharingProperties TableLevelSharingPropertiesResponsePtrOutput `pulumi:"tableLevelSharingProperties"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewKustoPoolAttachedDatabaseConfiguration registers a new resource with the given unique name, arguments, and options.
func NewKustoPoolAttachedDatabaseConfiguration(ctx *pulumi.Context,
	name string, args *KustoPoolAttachedDatabaseConfigurationArgs, opts ...pulumi.ResourceOption) (*KustoPoolAttachedDatabaseConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatabaseName == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseName'")
	}
	if args.DefaultPrincipalsModificationKind == nil {
		return nil, errors.New("invalid value for required argument 'DefaultPrincipalsModificationKind'")
	}
	if args.KustoPoolName == nil {
		return nil, errors.New("invalid value for required argument 'KustoPoolName'")
	}
	if args.KustoPoolResourceId == nil {
		return nil, errors.New("invalid value for required argument 'KustoPoolResourceId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:synapse:KustoPoolAttachedDatabaseConfiguration"),
		},
	})
	opts = append(opts, aliases)
	var resource KustoPoolAttachedDatabaseConfiguration
	err := ctx.RegisterResource("azure-native:synapse/v20210601preview:KustoPoolAttachedDatabaseConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKustoPoolAttachedDatabaseConfiguration gets an existing KustoPoolAttachedDatabaseConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKustoPoolAttachedDatabaseConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KustoPoolAttachedDatabaseConfigurationState, opts ...pulumi.ResourceOption) (*KustoPoolAttachedDatabaseConfiguration, error) {
	var resource KustoPoolAttachedDatabaseConfiguration
	err := ctx.ReadResource("azure-native:synapse/v20210601preview:KustoPoolAttachedDatabaseConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KustoPoolAttachedDatabaseConfiguration resources.
type kustoPoolAttachedDatabaseConfigurationState struct {
}

type KustoPoolAttachedDatabaseConfigurationState struct {
}

func (KustoPoolAttachedDatabaseConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*kustoPoolAttachedDatabaseConfigurationState)(nil)).Elem()
}

type kustoPoolAttachedDatabaseConfigurationArgs struct {
	// The name of the attached database configuration.
	AttachedDatabaseConfigurationName *string `pulumi:"attachedDatabaseConfigurationName"`
	// The name of the database which you would like to attach, use * if you want to follow all current and future databases.
	DatabaseName string `pulumi:"databaseName"`
	// The default principals modification kind
	DefaultPrincipalsModificationKind string `pulumi:"defaultPrincipalsModificationKind"`
	// The name of the Kusto pool.
	KustoPoolName string `pulumi:"kustoPoolName"`
	// The resource id of the kusto pool where the databases you would like to attach reside.
	KustoPoolResourceId string `pulumi:"kustoPoolResourceId"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Table level sharing specifications
	TableLevelSharingProperties *TableLevelSharingProperties `pulumi:"tableLevelSharingProperties"`
	// The name of the workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a KustoPoolAttachedDatabaseConfiguration resource.
type KustoPoolAttachedDatabaseConfigurationArgs struct {
	// The name of the attached database configuration.
	AttachedDatabaseConfigurationName pulumi.StringPtrInput
	// The name of the database which you would like to attach, use * if you want to follow all current and future databases.
	DatabaseName pulumi.StringInput
	// The default principals modification kind
	DefaultPrincipalsModificationKind pulumi.StringInput
	// The name of the Kusto pool.
	KustoPoolName pulumi.StringInput
	// The resource id of the kusto pool where the databases you would like to attach reside.
	KustoPoolResourceId pulumi.StringInput
	// Resource location.
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Table level sharing specifications
	TableLevelSharingProperties TableLevelSharingPropertiesPtrInput
	// The name of the workspace.
	WorkspaceName pulumi.StringInput
}

func (KustoPoolAttachedDatabaseConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kustoPoolAttachedDatabaseConfigurationArgs)(nil)).Elem()
}

type KustoPoolAttachedDatabaseConfigurationInput interface {
	pulumi.Input

	ToKustoPoolAttachedDatabaseConfigurationOutput() KustoPoolAttachedDatabaseConfigurationOutput
	ToKustoPoolAttachedDatabaseConfigurationOutputWithContext(ctx context.Context) KustoPoolAttachedDatabaseConfigurationOutput
}

func (*KustoPoolAttachedDatabaseConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**KustoPoolAttachedDatabaseConfiguration)(nil)).Elem()
}

func (i *KustoPoolAttachedDatabaseConfiguration) ToKustoPoolAttachedDatabaseConfigurationOutput() KustoPoolAttachedDatabaseConfigurationOutput {
	return i.ToKustoPoolAttachedDatabaseConfigurationOutputWithContext(context.Background())
}

func (i *KustoPoolAttachedDatabaseConfiguration) ToKustoPoolAttachedDatabaseConfigurationOutputWithContext(ctx context.Context) KustoPoolAttachedDatabaseConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KustoPoolAttachedDatabaseConfigurationOutput)
}

type KustoPoolAttachedDatabaseConfigurationOutput struct{ *pulumi.OutputState }

func (KustoPoolAttachedDatabaseConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KustoPoolAttachedDatabaseConfiguration)(nil)).Elem()
}

func (o KustoPoolAttachedDatabaseConfigurationOutput) ToKustoPoolAttachedDatabaseConfigurationOutput() KustoPoolAttachedDatabaseConfigurationOutput {
	return o
}

func (o KustoPoolAttachedDatabaseConfigurationOutput) ToKustoPoolAttachedDatabaseConfigurationOutputWithContext(ctx context.Context) KustoPoolAttachedDatabaseConfigurationOutput {
	return o
}

// The list of databases from the clusterResourceId which are currently attached to the kusto pool.
func (o KustoPoolAttachedDatabaseConfigurationOutput) AttachedDatabaseNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KustoPoolAttachedDatabaseConfiguration) pulumi.StringArrayOutput {
		return v.AttachedDatabaseNames
	}).(pulumi.StringArrayOutput)
}

// The name of the database which you would like to attach, use * if you want to follow all current and future databases.
func (o KustoPoolAttachedDatabaseConfigurationOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoPoolAttachedDatabaseConfiguration) pulumi.StringOutput { return v.DatabaseName }).(pulumi.StringOutput)
}

// The default principals modification kind
func (o KustoPoolAttachedDatabaseConfigurationOutput) DefaultPrincipalsModificationKind() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoPoolAttachedDatabaseConfiguration) pulumi.StringOutput {
		return v.DefaultPrincipalsModificationKind
	}).(pulumi.StringOutput)
}

// The resource id of the kusto pool where the databases you would like to attach reside.
func (o KustoPoolAttachedDatabaseConfigurationOutput) KustoPoolResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoPoolAttachedDatabaseConfiguration) pulumi.StringOutput { return v.KustoPoolResourceId }).(pulumi.StringOutput)
}

// Resource location.
func (o KustoPoolAttachedDatabaseConfigurationOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KustoPoolAttachedDatabaseConfiguration) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o KustoPoolAttachedDatabaseConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoPoolAttachedDatabaseConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The provisioned state of the resource.
func (o KustoPoolAttachedDatabaseConfigurationOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoPoolAttachedDatabaseConfiguration) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o KustoPoolAttachedDatabaseConfigurationOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *KustoPoolAttachedDatabaseConfiguration) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Table level sharing specifications
func (o KustoPoolAttachedDatabaseConfigurationOutput) TableLevelSharingProperties() TableLevelSharingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *KustoPoolAttachedDatabaseConfiguration) TableLevelSharingPropertiesResponsePtrOutput {
		return v.TableLevelSharingProperties
	}).(TableLevelSharingPropertiesResponsePtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o KustoPoolAttachedDatabaseConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *KustoPoolAttachedDatabaseConfiguration) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(KustoPoolAttachedDatabaseConfigurationOutput{})
}
