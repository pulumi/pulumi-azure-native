


package v20210601preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WorkspaceManagedSqlServerVulnerabilityAssessment struct {
	pulumi.CustomResourceState

	Name                 pulumi.StringOutput                                              `pulumi:"name"`
	RecurringScans       VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput `pulumi:"recurringScans"`
	StorageContainerPath pulumi.StringOutput                                              `pulumi:"storageContainerPath"`
	Type                 pulumi.StringOutput                                              `pulumi:"type"`
}


func NewWorkspaceManagedSqlServerVulnerabilityAssessment(ctx *pulumi.Context,
	name string, args *WorkspaceManagedSqlServerVulnerabilityAssessmentArgs, opts ...pulumi.ResourceOption) (*WorkspaceManagedSqlServerVulnerabilityAssessment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.StorageContainerPath == nil {
		return nil, errors.New("invalid value for required argument 'StorageContainerPath'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:synapse:WorkspaceManagedSqlServerVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:synapse/v20190601preview:WorkspaceManagedSqlServerVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:synapse/v20201201:WorkspaceManagedSqlServerVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:synapse/v20210301:WorkspaceManagedSqlServerVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:synapse/v20210401preview:WorkspaceManagedSqlServerVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:synapse/v20210501:WorkspaceManagedSqlServerVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:synapse/v20210601:WorkspaceManagedSqlServerVulnerabilityAssessment"),
		},
	})
	opts = append(opts, aliases)
	var resource WorkspaceManagedSqlServerVulnerabilityAssessment
	err := ctx.RegisterResource("azure-native:synapse/v20210601preview:WorkspaceManagedSqlServerVulnerabilityAssessment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}



func GetWorkspaceManagedSqlServerVulnerabilityAssessment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceManagedSqlServerVulnerabilityAssessmentState, opts ...pulumi.ResourceOption) (*WorkspaceManagedSqlServerVulnerabilityAssessment, error) {
	var resource WorkspaceManagedSqlServerVulnerabilityAssessment
	err := ctx.ReadResource("azure-native:synapse/v20210601preview:WorkspaceManagedSqlServerVulnerabilityAssessment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}


type workspaceManagedSqlServerVulnerabilityAssessmentState struct {
}

type WorkspaceManagedSqlServerVulnerabilityAssessmentState struct {
}

func (WorkspaceManagedSqlServerVulnerabilityAssessmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceManagedSqlServerVulnerabilityAssessmentState)(nil)).Elem()
}

type workspaceManagedSqlServerVulnerabilityAssessmentArgs struct {
	RecurringScans              *VulnerabilityAssessmentRecurringScansProperties `pulumi:"recurringScans"`
	ResourceGroupName           string                                           `pulumi:"resourceGroupName"`
	StorageAccountAccessKey     *string                                          `pulumi:"storageAccountAccessKey"`
	StorageContainerPath        string                                           `pulumi:"storageContainerPath"`
	StorageContainerSasKey      *string                                          `pulumi:"storageContainerSasKey"`
	VulnerabilityAssessmentName *string                                          `pulumi:"vulnerabilityAssessmentName"`
	WorkspaceName               string                                           `pulumi:"workspaceName"`
}


type WorkspaceManagedSqlServerVulnerabilityAssessmentArgs struct {
	RecurringScans              VulnerabilityAssessmentRecurringScansPropertiesPtrInput
	ResourceGroupName           pulumi.StringInput
	StorageAccountAccessKey     pulumi.StringPtrInput
	StorageContainerPath        pulumi.StringInput
	StorageContainerSasKey      pulumi.StringPtrInput
	VulnerabilityAssessmentName pulumi.StringPtrInput
	WorkspaceName               pulumi.StringInput
}

func (WorkspaceManagedSqlServerVulnerabilityAssessmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceManagedSqlServerVulnerabilityAssessmentArgs)(nil)).Elem()
}

type WorkspaceManagedSqlServerVulnerabilityAssessmentInput interface {
	pulumi.Input

	ToWorkspaceManagedSqlServerVulnerabilityAssessmentOutput() WorkspaceManagedSqlServerVulnerabilityAssessmentOutput
	ToWorkspaceManagedSqlServerVulnerabilityAssessmentOutputWithContext(ctx context.Context) WorkspaceManagedSqlServerVulnerabilityAssessmentOutput
}

func (*WorkspaceManagedSqlServerVulnerabilityAssessment) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceManagedSqlServerVulnerabilityAssessment)(nil))
}

func (i *WorkspaceManagedSqlServerVulnerabilityAssessment) ToWorkspaceManagedSqlServerVulnerabilityAssessmentOutput() WorkspaceManagedSqlServerVulnerabilityAssessmentOutput {
	return i.ToWorkspaceManagedSqlServerVulnerabilityAssessmentOutputWithContext(context.Background())
}

func (i *WorkspaceManagedSqlServerVulnerabilityAssessment) ToWorkspaceManagedSqlServerVulnerabilityAssessmentOutputWithContext(ctx context.Context) WorkspaceManagedSqlServerVulnerabilityAssessmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceManagedSqlServerVulnerabilityAssessmentOutput)
}

type WorkspaceManagedSqlServerVulnerabilityAssessmentOutput struct{ *pulumi.OutputState }

func (WorkspaceManagedSqlServerVulnerabilityAssessmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceManagedSqlServerVulnerabilityAssessment)(nil))
}

func (o WorkspaceManagedSqlServerVulnerabilityAssessmentOutput) ToWorkspaceManagedSqlServerVulnerabilityAssessmentOutput() WorkspaceManagedSqlServerVulnerabilityAssessmentOutput {
	return o
}

func (o WorkspaceManagedSqlServerVulnerabilityAssessmentOutput) ToWorkspaceManagedSqlServerVulnerabilityAssessmentOutputWithContext(ctx context.Context) WorkspaceManagedSqlServerVulnerabilityAssessmentOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(WorkspaceManagedSqlServerVulnerabilityAssessmentOutput{})
}
