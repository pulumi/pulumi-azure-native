// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210601preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Class representing a Kusto kusto pool.
type KustoPool struct {
	pulumi.CustomResourceState

	// The Kusto Pool data ingestion URI.
	DataIngestionUri pulumi.StringOutput `pulumi:"dataIngestionUri"`
	// A boolean value that indicates if the purge operations are enabled.
	EnablePurge pulumi.BoolPtrOutput `pulumi:"enablePurge"`
	// A boolean value that indicates if the streaming ingest is enabled.
	EnableStreamingIngest pulumi.BoolPtrOutput `pulumi:"enableStreamingIngest"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// List of the Kusto Pool's language extensions.
	LanguageExtensions LanguageExtensionsListResponseOutput `pulumi:"languageExtensions"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Optimized auto scale definition.
	OptimizedAutoscale OptimizedAutoscaleResponsePtrOutput `pulumi:"optimizedAutoscale"`
	// The provisioned state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The SKU of the kusto pool.
	Sku AzureSkuResponseOutput `pulumi:"sku"`
	// The state of the resource.
	State pulumi.StringOutput `pulumi:"state"`
	// The reason for the Kusto Pool's current state.
	StateReason pulumi.StringOutput `pulumi:"stateReason"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// The Kusto Pool URI.
	Uri pulumi.StringOutput `pulumi:"uri"`
	// The workspace unique identifier.
	WorkspaceUID pulumi.StringPtrOutput `pulumi:"workspaceUID"`
}

// NewKustoPool registers a new resource with the given unique name, arguments, and options.
func NewKustoPool(ctx *pulumi.Context,
	name string, args *KustoPoolArgs, opts ...pulumi.ResourceOption) (*KustoPool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Sku == nil {
		return nil, errors.New("invalid value for required argument 'Sku'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	if args.EnablePurge == nil {
		args.EnablePurge = pulumi.BoolPtr(false)
	}
	if args.EnableStreamingIngest == nil {
		args.EnableStreamingIngest = pulumi.BoolPtr(false)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:synapse/v20210601preview:kustoPool"),
		},
		{
			Type: pulumi.String("azure-native:synapse:kustoPool"),
		},
		{
			Type: pulumi.String("azure-nextgen:synapse:kustoPool"),
		},
		{
			Type: pulumi.String("azure-native:synapse/v20210401preview:kustoPool"),
		},
		{
			Type: pulumi.String("azure-nextgen:synapse/v20210401preview:kustoPool"),
		},
	})
	opts = append(opts, aliases)
	var resource KustoPool
	err := ctx.RegisterResource("azure-native:synapse/v20210601preview:kustoPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKustoPool gets an existing KustoPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKustoPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KustoPoolState, opts ...pulumi.ResourceOption) (*KustoPool, error) {
	var resource KustoPool
	err := ctx.ReadResource("azure-native:synapse/v20210601preview:kustoPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KustoPool resources.
type kustoPoolState struct {
}

type KustoPoolState struct {
}

func (KustoPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*kustoPoolState)(nil)).Elem()
}

type kustoPoolArgs struct {
	// A boolean value that indicates if the purge operations are enabled.
	EnablePurge *bool `pulumi:"enablePurge"`
	// A boolean value that indicates if the streaming ingest is enabled.
	EnableStreamingIngest *bool `pulumi:"enableStreamingIngest"`
	// The name of the Kusto pool.
	KustoPoolName *string `pulumi:"kustoPoolName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Optimized auto scale definition.
	OptimizedAutoscale *OptimizedAutoscale `pulumi:"optimizedAutoscale"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The SKU of the kusto pool.
	Sku AzureSku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The name of the workspace
	WorkspaceName string `pulumi:"workspaceName"`
	// The workspace unique identifier.
	WorkspaceUID *string `pulumi:"workspaceUID"`
}

// The set of arguments for constructing a KustoPool resource.
type KustoPoolArgs struct {
	// A boolean value that indicates if the purge operations are enabled.
	EnablePurge pulumi.BoolPtrInput
	// A boolean value that indicates if the streaming ingest is enabled.
	EnableStreamingIngest pulumi.BoolPtrInput
	// The name of the Kusto pool.
	KustoPoolName pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Optimized auto scale definition.
	OptimizedAutoscale OptimizedAutoscalePtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The SKU of the kusto pool.
	Sku AzureSkuInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The name of the workspace
	WorkspaceName pulumi.StringInput
	// The workspace unique identifier.
	WorkspaceUID pulumi.StringPtrInput
}

func (KustoPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kustoPoolArgs)(nil)).Elem()
}

type KustoPoolInput interface {
	pulumi.Input

	ToKustoPoolOutput() KustoPoolOutput
	ToKustoPoolOutputWithContext(ctx context.Context) KustoPoolOutput
}

func (*KustoPool) ElementType() reflect.Type {
	return reflect.TypeOf((*KustoPool)(nil))
}

func (i *KustoPool) ToKustoPoolOutput() KustoPoolOutput {
	return i.ToKustoPoolOutputWithContext(context.Background())
}

func (i *KustoPool) ToKustoPoolOutputWithContext(ctx context.Context) KustoPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KustoPoolOutput)
}

type KustoPoolOutput struct {
	*pulumi.OutputState
}

func (KustoPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KustoPool)(nil))
}

func (o KustoPoolOutput) ToKustoPoolOutput() KustoPoolOutput {
	return o
}

func (o KustoPoolOutput) ToKustoPoolOutputWithContext(ctx context.Context) KustoPoolOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(KustoPoolOutput{})
}
