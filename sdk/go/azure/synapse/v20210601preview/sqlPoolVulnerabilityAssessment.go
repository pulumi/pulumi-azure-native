


package v20210601preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SqlPoolVulnerabilityAssessment struct {
	pulumi.CustomResourceState

	Name           pulumi.StringOutput                                              `pulumi:"name"`
	RecurringScans VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput `pulumi:"recurringScans"`
	Type           pulumi.StringOutput                                              `pulumi:"type"`
}


func NewSqlPoolVulnerabilityAssessment(ctx *pulumi.Context,
	name string, args *SqlPoolVulnerabilityAssessmentArgs, opts ...pulumi.ResourceOption) (*SqlPoolVulnerabilityAssessment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SqlPoolName == nil {
		return nil, errors.New("invalid value for required argument 'SqlPoolName'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	if args.RecurringScans != nil {
		args.RecurringScans = args.RecurringScans.ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutput().ApplyT(func(v *VulnerabilityAssessmentRecurringScansProperties) *VulnerabilityAssessmentRecurringScansProperties {
			return v.Defaults()
		}).(VulnerabilityAssessmentRecurringScansPropertiesPtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:synapse:SqlPoolVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:synapse/v20190601preview:SqlPoolVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:synapse/v20201201:SqlPoolVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:synapse/v20210301:SqlPoolVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:synapse/v20210401preview:SqlPoolVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:synapse/v20210501:SqlPoolVulnerabilityAssessment"),
		},
		{
			Type: pulumi.String("azure-native:synapse/v20210601:SqlPoolVulnerabilityAssessment"),
		},
	})
	opts = append(opts, aliases)
	var resource SqlPoolVulnerabilityAssessment
	err := ctx.RegisterResource("azure-native:synapse/v20210601preview:SqlPoolVulnerabilityAssessment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}



func GetSqlPoolVulnerabilityAssessment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SqlPoolVulnerabilityAssessmentState, opts ...pulumi.ResourceOption) (*SqlPoolVulnerabilityAssessment, error) {
	var resource SqlPoolVulnerabilityAssessment
	err := ctx.ReadResource("azure-native:synapse/v20210601preview:SqlPoolVulnerabilityAssessment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}


type sqlPoolVulnerabilityAssessmentState struct {
}

type SqlPoolVulnerabilityAssessmentState struct {
}

func (SqlPoolVulnerabilityAssessmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlPoolVulnerabilityAssessmentState)(nil)).Elem()
}

type sqlPoolVulnerabilityAssessmentArgs struct {
	RecurringScans              *VulnerabilityAssessmentRecurringScansProperties `pulumi:"recurringScans"`
	ResourceGroupName           string                                           `pulumi:"resourceGroupName"`
	SqlPoolName                 string                                           `pulumi:"sqlPoolName"`
	StorageAccountAccessKey     *string                                          `pulumi:"storageAccountAccessKey"`
	StorageContainerPath        *string                                          `pulumi:"storageContainerPath"`
	StorageContainerSasKey      *string                                          `pulumi:"storageContainerSasKey"`
	VulnerabilityAssessmentName *string                                          `pulumi:"vulnerabilityAssessmentName"`
	WorkspaceName               string                                           `pulumi:"workspaceName"`
}


type SqlPoolVulnerabilityAssessmentArgs struct {
	RecurringScans              VulnerabilityAssessmentRecurringScansPropertiesPtrInput
	ResourceGroupName           pulumi.StringInput
	SqlPoolName                 pulumi.StringInput
	StorageAccountAccessKey     pulumi.StringPtrInput
	StorageContainerPath        pulumi.StringPtrInput
	StorageContainerSasKey      pulumi.StringPtrInput
	VulnerabilityAssessmentName pulumi.StringPtrInput
	WorkspaceName               pulumi.StringInput
}

func (SqlPoolVulnerabilityAssessmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlPoolVulnerabilityAssessmentArgs)(nil)).Elem()
}

type SqlPoolVulnerabilityAssessmentInput interface {
	pulumi.Input

	ToSqlPoolVulnerabilityAssessmentOutput() SqlPoolVulnerabilityAssessmentOutput
	ToSqlPoolVulnerabilityAssessmentOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentOutput
}

func (*SqlPoolVulnerabilityAssessment) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlPoolVulnerabilityAssessment)(nil)).Elem()
}

func (i *SqlPoolVulnerabilityAssessment) ToSqlPoolVulnerabilityAssessmentOutput() SqlPoolVulnerabilityAssessmentOutput {
	return i.ToSqlPoolVulnerabilityAssessmentOutputWithContext(context.Background())
}

func (i *SqlPoolVulnerabilityAssessment) ToSqlPoolVulnerabilityAssessmentOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlPoolVulnerabilityAssessmentOutput)
}

type SqlPoolVulnerabilityAssessmentOutput struct{ *pulumi.OutputState }

func (SqlPoolVulnerabilityAssessmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlPoolVulnerabilityAssessment)(nil)).Elem()
}

func (o SqlPoolVulnerabilityAssessmentOutput) ToSqlPoolVulnerabilityAssessmentOutput() SqlPoolVulnerabilityAssessmentOutput {
	return o
}

func (o SqlPoolVulnerabilityAssessmentOutput) ToSqlPoolVulnerabilityAssessmentOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentOutput {
	return o
}

func (o SqlPoolVulnerabilityAssessmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlPoolVulnerabilityAssessment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SqlPoolVulnerabilityAssessmentOutput) RecurringScans() VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *SqlPoolVulnerabilityAssessment) VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
		return v.RecurringScans
	}).(VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput)
}

func (o SqlPoolVulnerabilityAssessmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlPoolVulnerabilityAssessment) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SqlPoolVulnerabilityAssessmentOutput{})
}
