// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package synapse

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Class representing a cluster principal assignment.
// API Version: 2021-04-01-preview.
type KustoPoolPrincipalAssignment struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.
	PrincipalId pulumi.StringOutput `pulumi:"principalId"`
	// The principal name
	PrincipalName pulumi.StringOutput `pulumi:"principalName"`
	// Principal type.
	PrincipalType pulumi.StringOutput `pulumi:"principalType"`
	// The provisioned state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Cluster principal role.
	Role pulumi.StringOutput `pulumi:"role"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The tenant id of the principal
	TenantId pulumi.StringPtrOutput `pulumi:"tenantId"`
	// The tenant name of the principal
	TenantName pulumi.StringOutput `pulumi:"tenantName"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewKustoPoolPrincipalAssignment registers a new resource with the given unique name, arguments, and options.
func NewKustoPoolPrincipalAssignment(ctx *pulumi.Context,
	name string, args *KustoPoolPrincipalAssignmentArgs, opts ...pulumi.ResourceOption) (*KustoPoolPrincipalAssignment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.KustoPoolName == nil {
		return nil, errors.New("invalid value for required argument 'KustoPoolName'")
	}
	if args.PrincipalId == nil {
		return nil, errors.New("invalid value for required argument 'PrincipalId'")
	}
	if args.PrincipalType == nil {
		return nil, errors.New("invalid value for required argument 'PrincipalType'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:synapse:KustoPoolPrincipalAssignment"),
		},
		{
			Type: pulumi.String("azure-native:synapse/v20210401preview:KustoPoolPrincipalAssignment"),
		},
		{
			Type: pulumi.String("azure-nextgen:synapse/v20210401preview:KustoPoolPrincipalAssignment"),
		},
	})
	opts = append(opts, aliases)
	var resource KustoPoolPrincipalAssignment
	err := ctx.RegisterResource("azure-native:synapse:KustoPoolPrincipalAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKustoPoolPrincipalAssignment gets an existing KustoPoolPrincipalAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKustoPoolPrincipalAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KustoPoolPrincipalAssignmentState, opts ...pulumi.ResourceOption) (*KustoPoolPrincipalAssignment, error) {
	var resource KustoPoolPrincipalAssignment
	err := ctx.ReadResource("azure-native:synapse:KustoPoolPrincipalAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KustoPoolPrincipalAssignment resources.
type kustoPoolPrincipalAssignmentState struct {
	// The name of the resource
	Name *string `pulumi:"name"`
	// The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.
	PrincipalId *string `pulumi:"principalId"`
	// The principal name
	PrincipalName *string `pulumi:"principalName"`
	// Principal type.
	PrincipalType *string `pulumi:"principalType"`
	// The provisioned state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Cluster principal role.
	Role *string `pulumi:"role"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemDataResponse `pulumi:"systemData"`
	// The tenant id of the principal
	TenantId *string `pulumi:"tenantId"`
	// The tenant name of the principal
	TenantName *string `pulumi:"tenantName"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `pulumi:"type"`
}

type KustoPoolPrincipalAssignmentState struct {
	// The name of the resource
	Name pulumi.StringPtrInput
	// The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.
	PrincipalId pulumi.StringPtrInput
	// The principal name
	PrincipalName pulumi.StringPtrInput
	// Principal type.
	PrincipalType pulumi.StringPtrInput
	// The provisioned state of the resource.
	ProvisioningState pulumi.StringPtrInput
	// Cluster principal role.
	Role pulumi.StringPtrInput
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponsePtrInput
	// The tenant id of the principal
	TenantId pulumi.StringPtrInput
	// The tenant name of the principal
	TenantName pulumi.StringPtrInput
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringPtrInput
}

func (KustoPoolPrincipalAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*kustoPoolPrincipalAssignmentState)(nil)).Elem()
}

type kustoPoolPrincipalAssignmentArgs struct {
	// The name of the Kusto pool.
	KustoPoolName string `pulumi:"kustoPoolName"`
	// The name of the Kusto principalAssignment.
	PrincipalAssignmentName *string `pulumi:"principalAssignmentName"`
	// The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.
	PrincipalId string `pulumi:"principalId"`
	// Principal type.
	PrincipalType string `pulumi:"principalType"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Cluster principal role.
	Role string `pulumi:"role"`
	// The tenant id of the principal
	TenantId *string `pulumi:"tenantId"`
	// The name of the workspace
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a KustoPoolPrincipalAssignment resource.
type KustoPoolPrincipalAssignmentArgs struct {
	// The name of the Kusto pool.
	KustoPoolName pulumi.StringInput
	// The name of the Kusto principalAssignment.
	PrincipalAssignmentName pulumi.StringPtrInput
	// The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.
	PrincipalId pulumi.StringInput
	// Principal type.
	PrincipalType pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Cluster principal role.
	Role pulumi.StringInput
	// The tenant id of the principal
	TenantId pulumi.StringPtrInput
	// The name of the workspace
	WorkspaceName pulumi.StringInput
}

func (KustoPoolPrincipalAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kustoPoolPrincipalAssignmentArgs)(nil)).Elem()
}

type KustoPoolPrincipalAssignmentInput interface {
	pulumi.Input

	ToKustoPoolPrincipalAssignmentOutput() KustoPoolPrincipalAssignmentOutput
	ToKustoPoolPrincipalAssignmentOutputWithContext(ctx context.Context) KustoPoolPrincipalAssignmentOutput
}

func (*KustoPoolPrincipalAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((*KustoPoolPrincipalAssignment)(nil))
}

func (i *KustoPoolPrincipalAssignment) ToKustoPoolPrincipalAssignmentOutput() KustoPoolPrincipalAssignmentOutput {
	return i.ToKustoPoolPrincipalAssignmentOutputWithContext(context.Background())
}

func (i *KustoPoolPrincipalAssignment) ToKustoPoolPrincipalAssignmentOutputWithContext(ctx context.Context) KustoPoolPrincipalAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KustoPoolPrincipalAssignmentOutput)
}

type KustoPoolPrincipalAssignmentOutput struct {
	*pulumi.OutputState
}

func (KustoPoolPrincipalAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KustoPoolPrincipalAssignment)(nil))
}

func (o KustoPoolPrincipalAssignmentOutput) ToKustoPoolPrincipalAssignmentOutput() KustoPoolPrincipalAssignmentOutput {
	return o
}

func (o KustoPoolPrincipalAssignmentOutput) ToKustoPoolPrincipalAssignmentOutputWithContext(ctx context.Context) KustoPoolPrincipalAssignmentOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(KustoPoolPrincipalAssignmentOutput{})
}
