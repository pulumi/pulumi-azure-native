


package synapse

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSqlPoolVulnerabilityAssessment(ctx *pulumi.Context, args *LookupSqlPoolVulnerabilityAssessmentArgs, opts ...pulumi.InvokeOption) (*LookupSqlPoolVulnerabilityAssessmentResult, error) {
	var rv LookupSqlPoolVulnerabilityAssessmentResult
	err := ctx.Invoke("azure-native:synapse:getSqlPoolVulnerabilityAssessment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupSqlPoolVulnerabilityAssessmentArgs struct {
	ResourceGroupName           string `pulumi:"resourceGroupName"`
	SqlPoolName                 string `pulumi:"sqlPoolName"`
	VulnerabilityAssessmentName string `pulumi:"vulnerabilityAssessmentName"`
	WorkspaceName               string `pulumi:"workspaceName"`
}


type LookupSqlPoolVulnerabilityAssessmentResult struct {
	Id             string                                                   `pulumi:"id"`
	Name           string                                                   `pulumi:"name"`
	RecurringScans *VulnerabilityAssessmentRecurringScansPropertiesResponse `pulumi:"recurringScans"`
	Type           string                                                   `pulumi:"type"`
}


func (val *LookupSqlPoolVulnerabilityAssessmentResult) Defaults() *LookupSqlPoolVulnerabilityAssessmentResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.RecurringScans = tmp.RecurringScans.Defaults()

	return &tmp
}

func LookupSqlPoolVulnerabilityAssessmentOutput(ctx *pulumi.Context, args LookupSqlPoolVulnerabilityAssessmentOutputArgs, opts ...pulumi.InvokeOption) LookupSqlPoolVulnerabilityAssessmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSqlPoolVulnerabilityAssessmentResult, error) {
			args := v.(LookupSqlPoolVulnerabilityAssessmentArgs)
			r, err := LookupSqlPoolVulnerabilityAssessment(ctx, &args, opts...)
			var s LookupSqlPoolVulnerabilityAssessmentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSqlPoolVulnerabilityAssessmentResultOutput)
}

type LookupSqlPoolVulnerabilityAssessmentOutputArgs struct {
	ResourceGroupName           pulumi.StringInput `pulumi:"resourceGroupName"`
	SqlPoolName                 pulumi.StringInput `pulumi:"sqlPoolName"`
	VulnerabilityAssessmentName pulumi.StringInput `pulumi:"vulnerabilityAssessmentName"`
	WorkspaceName               pulumi.StringInput `pulumi:"workspaceName"`
}

func (LookupSqlPoolVulnerabilityAssessmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSqlPoolVulnerabilityAssessmentArgs)(nil)).Elem()
}


type LookupSqlPoolVulnerabilityAssessmentResultOutput struct{ *pulumi.OutputState }

func (LookupSqlPoolVulnerabilityAssessmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSqlPoolVulnerabilityAssessmentResult)(nil)).Elem()
}

func (o LookupSqlPoolVulnerabilityAssessmentResultOutput) ToLookupSqlPoolVulnerabilityAssessmentResultOutput() LookupSqlPoolVulnerabilityAssessmentResultOutput {
	return o
}

func (o LookupSqlPoolVulnerabilityAssessmentResultOutput) ToLookupSqlPoolVulnerabilityAssessmentResultOutputWithContext(ctx context.Context) LookupSqlPoolVulnerabilityAssessmentResultOutput {
	return o
}

func (o LookupSqlPoolVulnerabilityAssessmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlPoolVulnerabilityAssessmentResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSqlPoolVulnerabilityAssessmentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlPoolVulnerabilityAssessmentResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSqlPoolVulnerabilityAssessmentResultOutput) RecurringScans() VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupSqlPoolVulnerabilityAssessmentResult) *VulnerabilityAssessmentRecurringScansPropertiesResponse {
		return v.RecurringScans
	}).(VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput)
}

func (o LookupSqlPoolVulnerabilityAssessmentResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlPoolVulnerabilityAssessmentResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSqlPoolVulnerabilityAssessmentResultOutput{})
}
