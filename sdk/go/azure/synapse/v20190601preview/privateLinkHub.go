// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190601preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A privateLinkHub
type PrivateLinkHub struct {
	pulumi.CustomResourceState

	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// List of private endpoint connections
	PrivateEndpointConnections PrivateEndpointConnectionForPrivateLinkHubBasicResponseArrayOutput `pulumi:"privateEndpointConnections"`
	// PrivateLinkHub provisioning state
	ProvisioningState pulumi.StringPtrOutput `pulumi:"provisioningState"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewPrivateLinkHub registers a new resource with the given unique name, arguments, and options.
func NewPrivateLinkHub(ctx *pulumi.Context,
	name string, args *PrivateLinkHubArgs, opts ...pulumi.ResourceOption) (*PrivateLinkHub, error) {
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.PrivateLinkHubName == nil {
		return nil, errors.New("missing required argument 'PrivateLinkHubName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &PrivateLinkHubArgs{}
	}
	var resource PrivateLinkHub
	err := ctx.RegisterResource("azure-nextgen:synapse/v20190601preview:PrivateLinkHub", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateLinkHub gets an existing PrivateLinkHub resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateLinkHub(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateLinkHubState, opts ...pulumi.ResourceOption) (*PrivateLinkHub, error) {
	var resource PrivateLinkHub
	err := ctx.ReadResource("azure-nextgen:synapse/v20190601preview:PrivateLinkHub", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateLinkHub resources.
type privateLinkHubState struct {
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// List of private endpoint connections
	PrivateEndpointConnections []PrivateEndpointConnectionForPrivateLinkHubBasicResponse `pulumi:"privateEndpointConnections"`
	// PrivateLinkHub provisioning state
	ProvisioningState *string `pulumi:"provisioningState"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `pulumi:"type"`
}

type PrivateLinkHubState struct {
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource
	Name pulumi.StringPtrInput
	// List of private endpoint connections
	PrivateEndpointConnections PrivateEndpointConnectionForPrivateLinkHubBasicResponseArrayInput
	// PrivateLinkHub provisioning state
	ProvisioningState pulumi.StringPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringPtrInput
}

func (PrivateLinkHubState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateLinkHubState)(nil)).Elem()
}

type privateLinkHubArgs struct {
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// Name of the privateLinkHub
	PrivateLinkHubName string `pulumi:"privateLinkHubName"`
	// PrivateLinkHub provisioning state
	ProvisioningState *string `pulumi:"provisioningState"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a PrivateLinkHub resource.
type PrivateLinkHubArgs struct {
	// The geo-location where the resource lives
	Location pulumi.StringInput
	// Name of the privateLinkHub
	PrivateLinkHubName pulumi.StringInput
	// PrivateLinkHub provisioning state
	ProvisioningState pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (PrivateLinkHubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateLinkHubArgs)(nil)).Elem()
}
