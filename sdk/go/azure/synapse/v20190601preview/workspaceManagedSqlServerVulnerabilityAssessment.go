// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190601preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A server vulnerability assessment.
type WorkspaceManagedSqlServerVulnerabilityAssessment struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The recurring scans settings
	RecurringScans VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput `pulumi:"recurringScans"`
	// Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.
	StorageAccountAccessKey pulumi.StringPtrOutput `pulumi:"storageAccountAccessKey"`
	// A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
	StorageContainerPath pulumi.StringOutput `pulumi:"storageContainerPath"`
	// A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.
	StorageContainerSasKey pulumi.StringPtrOutput `pulumi:"storageContainerSasKey"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewWorkspaceManagedSqlServerVulnerabilityAssessment registers a new resource with the given unique name, arguments, and options.
func NewWorkspaceManagedSqlServerVulnerabilityAssessment(ctx *pulumi.Context,
	name string, args *WorkspaceManagedSqlServerVulnerabilityAssessmentArgs, opts ...pulumi.ResourceOption) (*WorkspaceManagedSqlServerVulnerabilityAssessment, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.StorageContainerPath == nil {
		return nil, errors.New("missing required argument 'StorageContainerPath'")
	}
	if args == nil || args.VulnerabilityAssessmentName == nil {
		return nil, errors.New("missing required argument 'VulnerabilityAssessmentName'")
	}
	if args == nil || args.WorkspaceName == nil {
		return nil, errors.New("missing required argument 'WorkspaceName'")
	}
	if args == nil {
		args = &WorkspaceManagedSqlServerVulnerabilityAssessmentArgs{}
	}
	var resource WorkspaceManagedSqlServerVulnerabilityAssessment
	err := ctx.RegisterResource("azure-nextgen:synapse/v20190601preview:WorkspaceManagedSqlServerVulnerabilityAssessment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspaceManagedSqlServerVulnerabilityAssessment gets an existing WorkspaceManagedSqlServerVulnerabilityAssessment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspaceManagedSqlServerVulnerabilityAssessment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceManagedSqlServerVulnerabilityAssessmentState, opts ...pulumi.ResourceOption) (*WorkspaceManagedSqlServerVulnerabilityAssessment, error) {
	var resource WorkspaceManagedSqlServerVulnerabilityAssessment
	err := ctx.ReadResource("azure-nextgen:synapse/v20190601preview:WorkspaceManagedSqlServerVulnerabilityAssessment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkspaceManagedSqlServerVulnerabilityAssessment resources.
type workspaceManagedSqlServerVulnerabilityAssessmentState struct {
	// The name of the resource
	Name *string `pulumi:"name"`
	// The recurring scans settings
	RecurringScans *VulnerabilityAssessmentRecurringScansPropertiesResponse `pulumi:"recurringScans"`
	// Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.
	StorageAccountAccessKey *string `pulumi:"storageAccountAccessKey"`
	// A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
	StorageContainerPath *string `pulumi:"storageContainerPath"`
	// A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.
	StorageContainerSasKey *string `pulumi:"storageContainerSasKey"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `pulumi:"type"`
}

type WorkspaceManagedSqlServerVulnerabilityAssessmentState struct {
	// The name of the resource
	Name pulumi.StringPtrInput
	// The recurring scans settings
	RecurringScans VulnerabilityAssessmentRecurringScansPropertiesResponsePtrInput
	// Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.
	StorageAccountAccessKey pulumi.StringPtrInput
	// A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
	StorageContainerPath pulumi.StringPtrInput
	// A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.
	StorageContainerSasKey pulumi.StringPtrInput
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringPtrInput
}

func (WorkspaceManagedSqlServerVulnerabilityAssessmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceManagedSqlServerVulnerabilityAssessmentState)(nil)).Elem()
}

type workspaceManagedSqlServerVulnerabilityAssessmentArgs struct {
	// The recurring scans settings
	RecurringScans *VulnerabilityAssessmentRecurringScansProperties `pulumi:"recurringScans"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.
	StorageAccountAccessKey *string `pulumi:"storageAccountAccessKey"`
	// A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
	StorageContainerPath string `pulumi:"storageContainerPath"`
	// A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.
	StorageContainerSasKey *string `pulumi:"storageContainerSasKey"`
	// The name of the vulnerability assessment.
	VulnerabilityAssessmentName string `pulumi:"vulnerabilityAssessmentName"`
	// The name of the workspace
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a WorkspaceManagedSqlServerVulnerabilityAssessment resource.
type WorkspaceManagedSqlServerVulnerabilityAssessmentArgs struct {
	// The recurring scans settings
	RecurringScans VulnerabilityAssessmentRecurringScansPropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.
	StorageAccountAccessKey pulumi.StringPtrInput
	// A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
	StorageContainerPath pulumi.StringInput
	// A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.
	StorageContainerSasKey pulumi.StringPtrInput
	// The name of the vulnerability assessment.
	VulnerabilityAssessmentName pulumi.StringInput
	// The name of the workspace
	WorkspaceName pulumi.StringInput
}

func (WorkspaceManagedSqlServerVulnerabilityAssessmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceManagedSqlServerVulnerabilityAssessmentArgs)(nil)).Elem()
}
