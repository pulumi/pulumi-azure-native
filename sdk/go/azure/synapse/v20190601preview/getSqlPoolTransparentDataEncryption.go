// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190601preview

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupSqlPoolTransparentDataEncryption(ctx *pulumi.Context, args *LookupSqlPoolTransparentDataEncryptionArgs, opts ...pulumi.InvokeOption) (*LookupSqlPoolTransparentDataEncryptionResult, error) {
	var rv LookupSqlPoolTransparentDataEncryptionResult
	err := ctx.Invoke("azure-nextgen:synapse/v20190601preview:getSqlPoolTransparentDataEncryption", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSqlPoolTransparentDataEncryptionArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// SQL pool name
	SqlPoolName string `pulumi:"sqlPoolName"`
	// The name of the transparent data encryption configuration.
	TransparentDataEncryptionName string `pulumi:"transparentDataEncryptionName"`
	// The name of the workspace
	WorkspaceName string `pulumi:"workspaceName"`
}

// Represents a Sql pool transparent data encryption configuration.
type LookupSqlPoolTransparentDataEncryptionResult struct {
	// Resource location.
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The status of the database transparent data encryption.
	Status *string `pulumi:"status"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}
