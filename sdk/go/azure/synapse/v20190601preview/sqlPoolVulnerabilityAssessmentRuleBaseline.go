// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190601preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A Sql pool vulnerability assessment rule baseline.
type SqlPoolVulnerabilityAssessmentRuleBaseline struct {
	pulumi.CustomResourceState

	// The rule baseline result
	BaselineResults SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput `pulumi:"baselineResults"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSqlPoolVulnerabilityAssessmentRuleBaseline registers a new resource with the given unique name, arguments, and options.
func NewSqlPoolVulnerabilityAssessmentRuleBaseline(ctx *pulumi.Context,
	name string, args *SqlPoolVulnerabilityAssessmentRuleBaselineArgs, opts ...pulumi.ResourceOption) (*SqlPoolVulnerabilityAssessmentRuleBaseline, error) {
	if args == nil || args.BaselineName == nil {
		return nil, errors.New("missing required argument 'BaselineName'")
	}
	if args == nil || args.BaselineResults == nil {
		return nil, errors.New("missing required argument 'BaselineResults'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.RuleId == nil {
		return nil, errors.New("missing required argument 'RuleId'")
	}
	if args == nil || args.SqlPoolName == nil {
		return nil, errors.New("missing required argument 'SqlPoolName'")
	}
	if args == nil || args.VulnerabilityAssessmentName == nil {
		return nil, errors.New("missing required argument 'VulnerabilityAssessmentName'")
	}
	if args == nil || args.WorkspaceName == nil {
		return nil, errors.New("missing required argument 'WorkspaceName'")
	}
	if args == nil {
		args = &SqlPoolVulnerabilityAssessmentRuleBaselineArgs{}
	}
	var resource SqlPoolVulnerabilityAssessmentRuleBaseline
	err := ctx.RegisterResource("azure-nextgen:synapse/v20190601preview:SqlPoolVulnerabilityAssessmentRuleBaseline", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSqlPoolVulnerabilityAssessmentRuleBaseline gets an existing SqlPoolVulnerabilityAssessmentRuleBaseline resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSqlPoolVulnerabilityAssessmentRuleBaseline(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SqlPoolVulnerabilityAssessmentRuleBaselineState, opts ...pulumi.ResourceOption) (*SqlPoolVulnerabilityAssessmentRuleBaseline, error) {
	var resource SqlPoolVulnerabilityAssessmentRuleBaseline
	err := ctx.ReadResource("azure-nextgen:synapse/v20190601preview:SqlPoolVulnerabilityAssessmentRuleBaseline", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SqlPoolVulnerabilityAssessmentRuleBaseline resources.
type sqlPoolVulnerabilityAssessmentRuleBaselineState struct {
	// The rule baseline result
	BaselineResults []SqlPoolVulnerabilityAssessmentRuleBaselineItemResponse `pulumi:"baselineResults"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `pulumi:"type"`
}

type SqlPoolVulnerabilityAssessmentRuleBaselineState struct {
	// The rule baseline result
	BaselineResults SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseArrayInput
	// The name of the resource
	Name pulumi.StringPtrInput
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringPtrInput
}

func (SqlPoolVulnerabilityAssessmentRuleBaselineState) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlPoolVulnerabilityAssessmentRuleBaselineState)(nil)).Elem()
}

type sqlPoolVulnerabilityAssessmentRuleBaselineArgs struct {
	// The name of the vulnerability assessment rule baseline (default implies a baseline on a Sql pool level rule and master for workspace level rule).
	BaselineName string `pulumi:"baselineName"`
	// The rule baseline result
	BaselineResults []SqlPoolVulnerabilityAssessmentRuleBaselineItem `pulumi:"baselineResults"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The vulnerability assessment rule ID.
	RuleId string `pulumi:"ruleId"`
	// SQL pool name
	SqlPoolName string `pulumi:"sqlPoolName"`
	// The name of the vulnerability assessment.
	VulnerabilityAssessmentName string `pulumi:"vulnerabilityAssessmentName"`
	// The name of the workspace
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a SqlPoolVulnerabilityAssessmentRuleBaseline resource.
type SqlPoolVulnerabilityAssessmentRuleBaselineArgs struct {
	// The name of the vulnerability assessment rule baseline (default implies a baseline on a Sql pool level rule and master for workspace level rule).
	BaselineName pulumi.StringInput
	// The rule baseline result
	BaselineResults SqlPoolVulnerabilityAssessmentRuleBaselineItemArrayInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The vulnerability assessment rule ID.
	RuleId pulumi.StringInput
	// SQL pool name
	SqlPoolName pulumi.StringInput
	// The name of the vulnerability assessment.
	VulnerabilityAssessmentName pulumi.StringInput
	// The name of the workspace
	WorkspaceName pulumi.StringInput
}

func (SqlPoolVulnerabilityAssessmentRuleBaselineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlPoolVulnerabilityAssessmentRuleBaselineArgs)(nil)).Elem()
}
