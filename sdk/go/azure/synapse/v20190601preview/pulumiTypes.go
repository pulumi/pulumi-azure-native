// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190601preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Auto-pausing properties of a Big Data pool powered by Apache Spark
type AutoPauseProperties struct {
	// Number of minutes of idle time before the Big Data pool is automatically paused.
	DelayInMinutes *int `pulumi:"delayInMinutes"`
	// Whether auto-pausing is enabled for the Big Data pool.
	Enabled *bool `pulumi:"enabled"`
}

// AutoPausePropertiesInput is an input type that accepts AutoPausePropertiesArgs and AutoPausePropertiesOutput values.
// You can construct a concrete instance of `AutoPausePropertiesInput` via:
//
//	AutoPausePropertiesArgs{...}
type AutoPausePropertiesInput interface {
	pulumi.Input

	ToAutoPausePropertiesOutput() AutoPausePropertiesOutput
	ToAutoPausePropertiesOutputWithContext(context.Context) AutoPausePropertiesOutput
}

// Auto-pausing properties of a Big Data pool powered by Apache Spark
type AutoPausePropertiesArgs struct {
	// Number of minutes of idle time before the Big Data pool is automatically paused.
	DelayInMinutes pulumi.IntPtrInput `pulumi:"delayInMinutes"`
	// Whether auto-pausing is enabled for the Big Data pool.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (AutoPausePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoPauseProperties)(nil)).Elem()
}

func (i AutoPausePropertiesArgs) ToAutoPausePropertiesOutput() AutoPausePropertiesOutput {
	return i.ToAutoPausePropertiesOutputWithContext(context.Background())
}

func (i AutoPausePropertiesArgs) ToAutoPausePropertiesOutputWithContext(ctx context.Context) AutoPausePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoPausePropertiesOutput)
}

func (i AutoPausePropertiesArgs) ToAutoPausePropertiesPtrOutput() AutoPausePropertiesPtrOutput {
	return i.ToAutoPausePropertiesPtrOutputWithContext(context.Background())
}

func (i AutoPausePropertiesArgs) ToAutoPausePropertiesPtrOutputWithContext(ctx context.Context) AutoPausePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoPausePropertiesOutput).ToAutoPausePropertiesPtrOutputWithContext(ctx)
}

// AutoPausePropertiesPtrInput is an input type that accepts AutoPausePropertiesArgs, AutoPausePropertiesPtr and AutoPausePropertiesPtrOutput values.
// You can construct a concrete instance of `AutoPausePropertiesPtrInput` via:
//
//	        AutoPausePropertiesArgs{...}
//
//	or:
//
//	        nil
type AutoPausePropertiesPtrInput interface {
	pulumi.Input

	ToAutoPausePropertiesPtrOutput() AutoPausePropertiesPtrOutput
	ToAutoPausePropertiesPtrOutputWithContext(context.Context) AutoPausePropertiesPtrOutput
}

type autoPausePropertiesPtrType AutoPausePropertiesArgs

func AutoPausePropertiesPtr(v *AutoPausePropertiesArgs) AutoPausePropertiesPtrInput {
	return (*autoPausePropertiesPtrType)(v)
}

func (*autoPausePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoPauseProperties)(nil)).Elem()
}

func (i *autoPausePropertiesPtrType) ToAutoPausePropertiesPtrOutput() AutoPausePropertiesPtrOutput {
	return i.ToAutoPausePropertiesPtrOutputWithContext(context.Background())
}

func (i *autoPausePropertiesPtrType) ToAutoPausePropertiesPtrOutputWithContext(ctx context.Context) AutoPausePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoPausePropertiesPtrOutput)
}

// Auto-pausing properties of a Big Data pool powered by Apache Spark
type AutoPausePropertiesOutput struct{ *pulumi.OutputState }

func (AutoPausePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoPauseProperties)(nil)).Elem()
}

func (o AutoPausePropertiesOutput) ToAutoPausePropertiesOutput() AutoPausePropertiesOutput {
	return o
}

func (o AutoPausePropertiesOutput) ToAutoPausePropertiesOutputWithContext(ctx context.Context) AutoPausePropertiesOutput {
	return o
}

func (o AutoPausePropertiesOutput) ToAutoPausePropertiesPtrOutput() AutoPausePropertiesPtrOutput {
	return o.ToAutoPausePropertiesPtrOutputWithContext(context.Background())
}

func (o AutoPausePropertiesOutput) ToAutoPausePropertiesPtrOutputWithContext(ctx context.Context) AutoPausePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoPauseProperties) *AutoPauseProperties {
		return &v
	}).(AutoPausePropertiesPtrOutput)
}

// Number of minutes of idle time before the Big Data pool is automatically paused.
func (o AutoPausePropertiesOutput) DelayInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoPauseProperties) *int { return v.DelayInMinutes }).(pulumi.IntPtrOutput)
}

// Whether auto-pausing is enabled for the Big Data pool.
func (o AutoPausePropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoPauseProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type AutoPausePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AutoPausePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoPauseProperties)(nil)).Elem()
}

func (o AutoPausePropertiesPtrOutput) ToAutoPausePropertiesPtrOutput() AutoPausePropertiesPtrOutput {
	return o
}

func (o AutoPausePropertiesPtrOutput) ToAutoPausePropertiesPtrOutputWithContext(ctx context.Context) AutoPausePropertiesPtrOutput {
	return o
}

func (o AutoPausePropertiesPtrOutput) Elem() AutoPausePropertiesOutput {
	return o.ApplyT(func(v *AutoPauseProperties) AutoPauseProperties {
		if v != nil {
			return *v
		}
		var ret AutoPauseProperties
		return ret
	}).(AutoPausePropertiesOutput)
}

// Number of minutes of idle time before the Big Data pool is automatically paused.
func (o AutoPausePropertiesPtrOutput) DelayInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoPauseProperties) *int {
		if v == nil {
			return nil
		}
		return v.DelayInMinutes
	}).(pulumi.IntPtrOutput)
}

// Whether auto-pausing is enabled for the Big Data pool.
func (o AutoPausePropertiesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoPauseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Auto-pausing properties of a Big Data pool powered by Apache Spark
type AutoPausePropertiesResponse struct {
	// Number of minutes of idle time before the Big Data pool is automatically paused.
	DelayInMinutes *int `pulumi:"delayInMinutes"`
	// Whether auto-pausing is enabled for the Big Data pool.
	Enabled *bool `pulumi:"enabled"`
}

// Auto-pausing properties of a Big Data pool powered by Apache Spark
type AutoPausePropertiesResponseOutput struct{ *pulumi.OutputState }

func (AutoPausePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoPausePropertiesResponse)(nil)).Elem()
}

func (o AutoPausePropertiesResponseOutput) ToAutoPausePropertiesResponseOutput() AutoPausePropertiesResponseOutput {
	return o
}

func (o AutoPausePropertiesResponseOutput) ToAutoPausePropertiesResponseOutputWithContext(ctx context.Context) AutoPausePropertiesResponseOutput {
	return o
}

// Number of minutes of idle time before the Big Data pool is automatically paused.
func (o AutoPausePropertiesResponseOutput) DelayInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoPausePropertiesResponse) *int { return v.DelayInMinutes }).(pulumi.IntPtrOutput)
}

// Whether auto-pausing is enabled for the Big Data pool.
func (o AutoPausePropertiesResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoPausePropertiesResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type AutoPausePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoPausePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoPausePropertiesResponse)(nil)).Elem()
}

func (o AutoPausePropertiesResponsePtrOutput) ToAutoPausePropertiesResponsePtrOutput() AutoPausePropertiesResponsePtrOutput {
	return o
}

func (o AutoPausePropertiesResponsePtrOutput) ToAutoPausePropertiesResponsePtrOutputWithContext(ctx context.Context) AutoPausePropertiesResponsePtrOutput {
	return o
}

func (o AutoPausePropertiesResponsePtrOutput) Elem() AutoPausePropertiesResponseOutput {
	return o.ApplyT(func(v *AutoPausePropertiesResponse) AutoPausePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret AutoPausePropertiesResponse
		return ret
	}).(AutoPausePropertiesResponseOutput)
}

// Number of minutes of idle time before the Big Data pool is automatically paused.
func (o AutoPausePropertiesResponsePtrOutput) DelayInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoPausePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.DelayInMinutes
	}).(pulumi.IntPtrOutput)
}

// Whether auto-pausing is enabled for the Big Data pool.
func (o AutoPausePropertiesResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoPausePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Auto-scaling properties of a Big Data pool powered by Apache Spark
type AutoScaleProperties struct {
	// Whether automatic scaling is enabled for the Big Data pool.
	Enabled *bool `pulumi:"enabled"`
	// The maximum number of nodes the Big Data pool can support.
	MaxNodeCount *int `pulumi:"maxNodeCount"`
	// The minimum number of nodes the Big Data pool can support.
	MinNodeCount *int `pulumi:"minNodeCount"`
}

// AutoScalePropertiesInput is an input type that accepts AutoScalePropertiesArgs and AutoScalePropertiesOutput values.
// You can construct a concrete instance of `AutoScalePropertiesInput` via:
//
//	AutoScalePropertiesArgs{...}
type AutoScalePropertiesInput interface {
	pulumi.Input

	ToAutoScalePropertiesOutput() AutoScalePropertiesOutput
	ToAutoScalePropertiesOutputWithContext(context.Context) AutoScalePropertiesOutput
}

// Auto-scaling properties of a Big Data pool powered by Apache Spark
type AutoScalePropertiesArgs struct {
	// Whether automatic scaling is enabled for the Big Data pool.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The maximum number of nodes the Big Data pool can support.
	MaxNodeCount pulumi.IntPtrInput `pulumi:"maxNodeCount"`
	// The minimum number of nodes the Big Data pool can support.
	MinNodeCount pulumi.IntPtrInput `pulumi:"minNodeCount"`
}

func (AutoScalePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScaleProperties)(nil)).Elem()
}

func (i AutoScalePropertiesArgs) ToAutoScalePropertiesOutput() AutoScalePropertiesOutput {
	return i.ToAutoScalePropertiesOutputWithContext(context.Background())
}

func (i AutoScalePropertiesArgs) ToAutoScalePropertiesOutputWithContext(ctx context.Context) AutoScalePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalePropertiesOutput)
}

func (i AutoScalePropertiesArgs) ToAutoScalePropertiesPtrOutput() AutoScalePropertiesPtrOutput {
	return i.ToAutoScalePropertiesPtrOutputWithContext(context.Background())
}

func (i AutoScalePropertiesArgs) ToAutoScalePropertiesPtrOutputWithContext(ctx context.Context) AutoScalePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalePropertiesOutput).ToAutoScalePropertiesPtrOutputWithContext(ctx)
}

// AutoScalePropertiesPtrInput is an input type that accepts AutoScalePropertiesArgs, AutoScalePropertiesPtr and AutoScalePropertiesPtrOutput values.
// You can construct a concrete instance of `AutoScalePropertiesPtrInput` via:
//
//	        AutoScalePropertiesArgs{...}
//
//	or:
//
//	        nil
type AutoScalePropertiesPtrInput interface {
	pulumi.Input

	ToAutoScalePropertiesPtrOutput() AutoScalePropertiesPtrOutput
	ToAutoScalePropertiesPtrOutputWithContext(context.Context) AutoScalePropertiesPtrOutput
}

type autoScalePropertiesPtrType AutoScalePropertiesArgs

func AutoScalePropertiesPtr(v *AutoScalePropertiesArgs) AutoScalePropertiesPtrInput {
	return (*autoScalePropertiesPtrType)(v)
}

func (*autoScalePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScaleProperties)(nil)).Elem()
}

func (i *autoScalePropertiesPtrType) ToAutoScalePropertiesPtrOutput() AutoScalePropertiesPtrOutput {
	return i.ToAutoScalePropertiesPtrOutputWithContext(context.Background())
}

func (i *autoScalePropertiesPtrType) ToAutoScalePropertiesPtrOutputWithContext(ctx context.Context) AutoScalePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalePropertiesPtrOutput)
}

// Auto-scaling properties of a Big Data pool powered by Apache Spark
type AutoScalePropertiesOutput struct{ *pulumi.OutputState }

func (AutoScalePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScaleProperties)(nil)).Elem()
}

func (o AutoScalePropertiesOutput) ToAutoScalePropertiesOutput() AutoScalePropertiesOutput {
	return o
}

func (o AutoScalePropertiesOutput) ToAutoScalePropertiesOutputWithContext(ctx context.Context) AutoScalePropertiesOutput {
	return o
}

func (o AutoScalePropertiesOutput) ToAutoScalePropertiesPtrOutput() AutoScalePropertiesPtrOutput {
	return o.ToAutoScalePropertiesPtrOutputWithContext(context.Background())
}

func (o AutoScalePropertiesOutput) ToAutoScalePropertiesPtrOutputWithContext(ctx context.Context) AutoScalePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoScaleProperties) *AutoScaleProperties {
		return &v
	}).(AutoScalePropertiesPtrOutput)
}

// Whether automatic scaling is enabled for the Big Data pool.
func (o AutoScalePropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoScaleProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The maximum number of nodes the Big Data pool can support.
func (o AutoScalePropertiesOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleProperties) *int { return v.MaxNodeCount }).(pulumi.IntPtrOutput)
}

// The minimum number of nodes the Big Data pool can support.
func (o AutoScalePropertiesOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleProperties) *int { return v.MinNodeCount }).(pulumi.IntPtrOutput)
}

type AutoScalePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AutoScalePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScaleProperties)(nil)).Elem()
}

func (o AutoScalePropertiesPtrOutput) ToAutoScalePropertiesPtrOutput() AutoScalePropertiesPtrOutput {
	return o
}

func (o AutoScalePropertiesPtrOutput) ToAutoScalePropertiesPtrOutputWithContext(ctx context.Context) AutoScalePropertiesPtrOutput {
	return o
}

func (o AutoScalePropertiesPtrOutput) Elem() AutoScalePropertiesOutput {
	return o.ApplyT(func(v *AutoScaleProperties) AutoScaleProperties {
		if v != nil {
			return *v
		}
		var ret AutoScaleProperties
		return ret
	}).(AutoScalePropertiesOutput)
}

// Whether automatic scaling is enabled for the Big Data pool.
func (o AutoScalePropertiesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoScaleProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The maximum number of nodes the Big Data pool can support.
func (o AutoScalePropertiesPtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// The minimum number of nodes the Big Data pool can support.
func (o AutoScalePropertiesPtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleProperties) *int {
		if v == nil {
			return nil
		}
		return v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

// Auto-scaling properties of a Big Data pool powered by Apache Spark
type AutoScalePropertiesResponse struct {
	// Whether automatic scaling is enabled for the Big Data pool.
	Enabled *bool `pulumi:"enabled"`
	// The maximum number of nodes the Big Data pool can support.
	MaxNodeCount *int `pulumi:"maxNodeCount"`
	// The minimum number of nodes the Big Data pool can support.
	MinNodeCount *int `pulumi:"minNodeCount"`
}

// Auto-scaling properties of a Big Data pool powered by Apache Spark
type AutoScalePropertiesResponseOutput struct{ *pulumi.OutputState }

func (AutoScalePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScalePropertiesResponse)(nil)).Elem()
}

func (o AutoScalePropertiesResponseOutput) ToAutoScalePropertiesResponseOutput() AutoScalePropertiesResponseOutput {
	return o
}

func (o AutoScalePropertiesResponseOutput) ToAutoScalePropertiesResponseOutputWithContext(ctx context.Context) AutoScalePropertiesResponseOutput {
	return o
}

// Whether automatic scaling is enabled for the Big Data pool.
func (o AutoScalePropertiesResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoScalePropertiesResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The maximum number of nodes the Big Data pool can support.
func (o AutoScalePropertiesResponseOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScalePropertiesResponse) *int { return v.MaxNodeCount }).(pulumi.IntPtrOutput)
}

// The minimum number of nodes the Big Data pool can support.
func (o AutoScalePropertiesResponseOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScalePropertiesResponse) *int { return v.MinNodeCount }).(pulumi.IntPtrOutput)
}

type AutoScalePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoScalePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScalePropertiesResponse)(nil)).Elem()
}

func (o AutoScalePropertiesResponsePtrOutput) ToAutoScalePropertiesResponsePtrOutput() AutoScalePropertiesResponsePtrOutput {
	return o
}

func (o AutoScalePropertiesResponsePtrOutput) ToAutoScalePropertiesResponsePtrOutputWithContext(ctx context.Context) AutoScalePropertiesResponsePtrOutput {
	return o
}

func (o AutoScalePropertiesResponsePtrOutput) Elem() AutoScalePropertiesResponseOutput {
	return o.ApplyT(func(v *AutoScalePropertiesResponse) AutoScalePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret AutoScalePropertiesResponse
		return ret
	}).(AutoScalePropertiesResponseOutput)
}

// Whether automatic scaling is enabled for the Big Data pool.
func (o AutoScalePropertiesResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoScalePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The maximum number of nodes the Big Data pool can support.
func (o AutoScalePropertiesResponsePtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScalePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// The minimum number of nodes the Big Data pool can support.
func (o AutoScalePropertiesResponsePtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScalePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

// The custom setup of running cmdkey commands.
type CmdkeySetup struct {
	// The password of data source access.
	Password SecureString `pulumi:"password"`
	// The server name of data source access.
	TargetName interface{} `pulumi:"targetName"`
	// The type of custom setup.
	// Expected value is 'CmdkeySetup'.
	Type string `pulumi:"type"`
	// The user name of data source access.
	UserName interface{} `pulumi:"userName"`
}

// The custom setup of running cmdkey commands.
type CmdkeySetupResponse struct {
	// The password of data source access.
	Password SecureStringResponse `pulumi:"password"`
	// The server name of data source access.
	TargetName interface{} `pulumi:"targetName"`
	// The type of custom setup.
	// Expected value is 'CmdkeySetup'.
	Type string `pulumi:"type"`
	// The user name of data source access.
	UserName interface{} `pulumi:"userName"`
}

// The custom setup of installing 3rd party components.
type ComponentSetup struct {
	// The name of the 3rd party component.
	ComponentName string `pulumi:"componentName"`
	// The license key to activate the component.
	LicenseKey *SecureString `pulumi:"licenseKey"`
	// The type of custom setup.
	// Expected value is 'ComponentSetup'.
	Type string `pulumi:"type"`
}

// The custom setup of installing 3rd party components.
type ComponentSetupResponse struct {
	// The name of the 3rd party component.
	ComponentName string `pulumi:"componentName"`
	// The license key to activate the component.
	LicenseKey *SecureStringResponse `pulumi:"licenseKey"`
	// The type of custom setup.
	// Expected value is 'ComponentSetup'.
	Type string `pulumi:"type"`
}

// Details of the customer managed key associated with the workspace
type CustomerManagedKeyDetails struct {
	// The key object of the workspace
	Key *WorkspaceKeyDetails `pulumi:"key"`
}

// CustomerManagedKeyDetailsInput is an input type that accepts CustomerManagedKeyDetailsArgs and CustomerManagedKeyDetailsOutput values.
// You can construct a concrete instance of `CustomerManagedKeyDetailsInput` via:
//
//	CustomerManagedKeyDetailsArgs{...}
type CustomerManagedKeyDetailsInput interface {
	pulumi.Input

	ToCustomerManagedKeyDetailsOutput() CustomerManagedKeyDetailsOutput
	ToCustomerManagedKeyDetailsOutputWithContext(context.Context) CustomerManagedKeyDetailsOutput
}

// Details of the customer managed key associated with the workspace
type CustomerManagedKeyDetailsArgs struct {
	// The key object of the workspace
	Key WorkspaceKeyDetailsPtrInput `pulumi:"key"`
}

func (CustomerManagedKeyDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerManagedKeyDetails)(nil)).Elem()
}

func (i CustomerManagedKeyDetailsArgs) ToCustomerManagedKeyDetailsOutput() CustomerManagedKeyDetailsOutput {
	return i.ToCustomerManagedKeyDetailsOutputWithContext(context.Background())
}

func (i CustomerManagedKeyDetailsArgs) ToCustomerManagedKeyDetailsOutputWithContext(ctx context.Context) CustomerManagedKeyDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerManagedKeyDetailsOutput)
}

func (i CustomerManagedKeyDetailsArgs) ToCustomerManagedKeyDetailsPtrOutput() CustomerManagedKeyDetailsPtrOutput {
	return i.ToCustomerManagedKeyDetailsPtrOutputWithContext(context.Background())
}

func (i CustomerManagedKeyDetailsArgs) ToCustomerManagedKeyDetailsPtrOutputWithContext(ctx context.Context) CustomerManagedKeyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerManagedKeyDetailsOutput).ToCustomerManagedKeyDetailsPtrOutputWithContext(ctx)
}

// CustomerManagedKeyDetailsPtrInput is an input type that accepts CustomerManagedKeyDetailsArgs, CustomerManagedKeyDetailsPtr and CustomerManagedKeyDetailsPtrOutput values.
// You can construct a concrete instance of `CustomerManagedKeyDetailsPtrInput` via:
//
//	        CustomerManagedKeyDetailsArgs{...}
//
//	or:
//
//	        nil
type CustomerManagedKeyDetailsPtrInput interface {
	pulumi.Input

	ToCustomerManagedKeyDetailsPtrOutput() CustomerManagedKeyDetailsPtrOutput
	ToCustomerManagedKeyDetailsPtrOutputWithContext(context.Context) CustomerManagedKeyDetailsPtrOutput
}

type customerManagedKeyDetailsPtrType CustomerManagedKeyDetailsArgs

func CustomerManagedKeyDetailsPtr(v *CustomerManagedKeyDetailsArgs) CustomerManagedKeyDetailsPtrInput {
	return (*customerManagedKeyDetailsPtrType)(v)
}

func (*customerManagedKeyDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerManagedKeyDetails)(nil)).Elem()
}

func (i *customerManagedKeyDetailsPtrType) ToCustomerManagedKeyDetailsPtrOutput() CustomerManagedKeyDetailsPtrOutput {
	return i.ToCustomerManagedKeyDetailsPtrOutputWithContext(context.Background())
}

func (i *customerManagedKeyDetailsPtrType) ToCustomerManagedKeyDetailsPtrOutputWithContext(ctx context.Context) CustomerManagedKeyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerManagedKeyDetailsPtrOutput)
}

// Details of the customer managed key associated with the workspace
type CustomerManagedKeyDetailsOutput struct{ *pulumi.OutputState }

func (CustomerManagedKeyDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerManagedKeyDetails)(nil)).Elem()
}

func (o CustomerManagedKeyDetailsOutput) ToCustomerManagedKeyDetailsOutput() CustomerManagedKeyDetailsOutput {
	return o
}

func (o CustomerManagedKeyDetailsOutput) ToCustomerManagedKeyDetailsOutputWithContext(ctx context.Context) CustomerManagedKeyDetailsOutput {
	return o
}

func (o CustomerManagedKeyDetailsOutput) ToCustomerManagedKeyDetailsPtrOutput() CustomerManagedKeyDetailsPtrOutput {
	return o.ToCustomerManagedKeyDetailsPtrOutputWithContext(context.Background())
}

func (o CustomerManagedKeyDetailsOutput) ToCustomerManagedKeyDetailsPtrOutputWithContext(ctx context.Context) CustomerManagedKeyDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomerManagedKeyDetails) *CustomerManagedKeyDetails {
		return &v
	}).(CustomerManagedKeyDetailsPtrOutput)
}

// The key object of the workspace
func (o CustomerManagedKeyDetailsOutput) Key() WorkspaceKeyDetailsPtrOutput {
	return o.ApplyT(func(v CustomerManagedKeyDetails) *WorkspaceKeyDetails { return v.Key }).(WorkspaceKeyDetailsPtrOutput)
}

type CustomerManagedKeyDetailsPtrOutput struct{ *pulumi.OutputState }

func (CustomerManagedKeyDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerManagedKeyDetails)(nil)).Elem()
}

func (o CustomerManagedKeyDetailsPtrOutput) ToCustomerManagedKeyDetailsPtrOutput() CustomerManagedKeyDetailsPtrOutput {
	return o
}

func (o CustomerManagedKeyDetailsPtrOutput) ToCustomerManagedKeyDetailsPtrOutputWithContext(ctx context.Context) CustomerManagedKeyDetailsPtrOutput {
	return o
}

func (o CustomerManagedKeyDetailsPtrOutput) Elem() CustomerManagedKeyDetailsOutput {
	return o.ApplyT(func(v *CustomerManagedKeyDetails) CustomerManagedKeyDetails {
		if v != nil {
			return *v
		}
		var ret CustomerManagedKeyDetails
		return ret
	}).(CustomerManagedKeyDetailsOutput)
}

// The key object of the workspace
func (o CustomerManagedKeyDetailsPtrOutput) Key() WorkspaceKeyDetailsPtrOutput {
	return o.ApplyT(func(v *CustomerManagedKeyDetails) *WorkspaceKeyDetails {
		if v == nil {
			return nil
		}
		return v.Key
	}).(WorkspaceKeyDetailsPtrOutput)
}

// Details of the customer managed key associated with the workspace
type CustomerManagedKeyDetailsResponse struct {
	// The key object of the workspace
	Key *WorkspaceKeyDetailsResponse `pulumi:"key"`
	// The customer managed key status on the workspace
	Status string `pulumi:"status"`
}

// Details of the customer managed key associated with the workspace
type CustomerManagedKeyDetailsResponseOutput struct{ *pulumi.OutputState }

func (CustomerManagedKeyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerManagedKeyDetailsResponse)(nil)).Elem()
}

func (o CustomerManagedKeyDetailsResponseOutput) ToCustomerManagedKeyDetailsResponseOutput() CustomerManagedKeyDetailsResponseOutput {
	return o
}

func (o CustomerManagedKeyDetailsResponseOutput) ToCustomerManagedKeyDetailsResponseOutputWithContext(ctx context.Context) CustomerManagedKeyDetailsResponseOutput {
	return o
}

// The key object of the workspace
func (o CustomerManagedKeyDetailsResponseOutput) Key() WorkspaceKeyDetailsResponsePtrOutput {
	return o.ApplyT(func(v CustomerManagedKeyDetailsResponse) *WorkspaceKeyDetailsResponse { return v.Key }).(WorkspaceKeyDetailsResponsePtrOutput)
}

// The customer managed key status on the workspace
func (o CustomerManagedKeyDetailsResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v CustomerManagedKeyDetailsResponse) string { return v.Status }).(pulumi.StringOutput)
}

type CustomerManagedKeyDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomerManagedKeyDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerManagedKeyDetailsResponse)(nil)).Elem()
}

func (o CustomerManagedKeyDetailsResponsePtrOutput) ToCustomerManagedKeyDetailsResponsePtrOutput() CustomerManagedKeyDetailsResponsePtrOutput {
	return o
}

func (o CustomerManagedKeyDetailsResponsePtrOutput) ToCustomerManagedKeyDetailsResponsePtrOutputWithContext(ctx context.Context) CustomerManagedKeyDetailsResponsePtrOutput {
	return o
}

func (o CustomerManagedKeyDetailsResponsePtrOutput) Elem() CustomerManagedKeyDetailsResponseOutput {
	return o.ApplyT(func(v *CustomerManagedKeyDetailsResponse) CustomerManagedKeyDetailsResponse {
		if v != nil {
			return *v
		}
		var ret CustomerManagedKeyDetailsResponse
		return ret
	}).(CustomerManagedKeyDetailsResponseOutput)
}

// The key object of the workspace
func (o CustomerManagedKeyDetailsResponsePtrOutput) Key() WorkspaceKeyDetailsResponsePtrOutput {
	return o.ApplyT(func(v *CustomerManagedKeyDetailsResponse) *WorkspaceKeyDetailsResponse {
		if v == nil {
			return nil
		}
		return v.Key
	}).(WorkspaceKeyDetailsResponsePtrOutput)
}

// The customer managed key status on the workspace
func (o CustomerManagedKeyDetailsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerManagedKeyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Details of the data lake storage account associated with the workspace
type DataLakeStorageAccountDetails struct {
	// Account URL
	AccountUrl *string `pulumi:"accountUrl"`
	// Filesystem name
	Filesystem *string `pulumi:"filesystem"`
}

// DataLakeStorageAccountDetailsInput is an input type that accepts DataLakeStorageAccountDetailsArgs and DataLakeStorageAccountDetailsOutput values.
// You can construct a concrete instance of `DataLakeStorageAccountDetailsInput` via:
//
//	DataLakeStorageAccountDetailsArgs{...}
type DataLakeStorageAccountDetailsInput interface {
	pulumi.Input

	ToDataLakeStorageAccountDetailsOutput() DataLakeStorageAccountDetailsOutput
	ToDataLakeStorageAccountDetailsOutputWithContext(context.Context) DataLakeStorageAccountDetailsOutput
}

// Details of the data lake storage account associated with the workspace
type DataLakeStorageAccountDetailsArgs struct {
	// Account URL
	AccountUrl pulumi.StringPtrInput `pulumi:"accountUrl"`
	// Filesystem name
	Filesystem pulumi.StringPtrInput `pulumi:"filesystem"`
}

func (DataLakeStorageAccountDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageAccountDetails)(nil)).Elem()
}

func (i DataLakeStorageAccountDetailsArgs) ToDataLakeStorageAccountDetailsOutput() DataLakeStorageAccountDetailsOutput {
	return i.ToDataLakeStorageAccountDetailsOutputWithContext(context.Background())
}

func (i DataLakeStorageAccountDetailsArgs) ToDataLakeStorageAccountDetailsOutputWithContext(ctx context.Context) DataLakeStorageAccountDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageAccountDetailsOutput)
}

func (i DataLakeStorageAccountDetailsArgs) ToDataLakeStorageAccountDetailsPtrOutput() DataLakeStorageAccountDetailsPtrOutput {
	return i.ToDataLakeStorageAccountDetailsPtrOutputWithContext(context.Background())
}

func (i DataLakeStorageAccountDetailsArgs) ToDataLakeStorageAccountDetailsPtrOutputWithContext(ctx context.Context) DataLakeStorageAccountDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageAccountDetailsOutput).ToDataLakeStorageAccountDetailsPtrOutputWithContext(ctx)
}

// DataLakeStorageAccountDetailsPtrInput is an input type that accepts DataLakeStorageAccountDetailsArgs, DataLakeStorageAccountDetailsPtr and DataLakeStorageAccountDetailsPtrOutput values.
// You can construct a concrete instance of `DataLakeStorageAccountDetailsPtrInput` via:
//
//	        DataLakeStorageAccountDetailsArgs{...}
//
//	or:
//
//	        nil
type DataLakeStorageAccountDetailsPtrInput interface {
	pulumi.Input

	ToDataLakeStorageAccountDetailsPtrOutput() DataLakeStorageAccountDetailsPtrOutput
	ToDataLakeStorageAccountDetailsPtrOutputWithContext(context.Context) DataLakeStorageAccountDetailsPtrOutput
}

type dataLakeStorageAccountDetailsPtrType DataLakeStorageAccountDetailsArgs

func DataLakeStorageAccountDetailsPtr(v *DataLakeStorageAccountDetailsArgs) DataLakeStorageAccountDetailsPtrInput {
	return (*dataLakeStorageAccountDetailsPtrType)(v)
}

func (*dataLakeStorageAccountDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeStorageAccountDetails)(nil)).Elem()
}

func (i *dataLakeStorageAccountDetailsPtrType) ToDataLakeStorageAccountDetailsPtrOutput() DataLakeStorageAccountDetailsPtrOutput {
	return i.ToDataLakeStorageAccountDetailsPtrOutputWithContext(context.Background())
}

func (i *dataLakeStorageAccountDetailsPtrType) ToDataLakeStorageAccountDetailsPtrOutputWithContext(ctx context.Context) DataLakeStorageAccountDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageAccountDetailsPtrOutput)
}

// Details of the data lake storage account associated with the workspace
type DataLakeStorageAccountDetailsOutput struct{ *pulumi.OutputState }

func (DataLakeStorageAccountDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageAccountDetails)(nil)).Elem()
}

func (o DataLakeStorageAccountDetailsOutput) ToDataLakeStorageAccountDetailsOutput() DataLakeStorageAccountDetailsOutput {
	return o
}

func (o DataLakeStorageAccountDetailsOutput) ToDataLakeStorageAccountDetailsOutputWithContext(ctx context.Context) DataLakeStorageAccountDetailsOutput {
	return o
}

func (o DataLakeStorageAccountDetailsOutput) ToDataLakeStorageAccountDetailsPtrOutput() DataLakeStorageAccountDetailsPtrOutput {
	return o.ToDataLakeStorageAccountDetailsPtrOutputWithContext(context.Background())
}

func (o DataLakeStorageAccountDetailsOutput) ToDataLakeStorageAccountDetailsPtrOutputWithContext(ctx context.Context) DataLakeStorageAccountDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeStorageAccountDetails) *DataLakeStorageAccountDetails {
		return &v
	}).(DataLakeStorageAccountDetailsPtrOutput)
}

// Account URL
func (o DataLakeStorageAccountDetailsOutput) AccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageAccountDetails) *string { return v.AccountUrl }).(pulumi.StringPtrOutput)
}

// Filesystem name
func (o DataLakeStorageAccountDetailsOutput) Filesystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageAccountDetails) *string { return v.Filesystem }).(pulumi.StringPtrOutput)
}

type DataLakeStorageAccountDetailsPtrOutput struct{ *pulumi.OutputState }

func (DataLakeStorageAccountDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeStorageAccountDetails)(nil)).Elem()
}

func (o DataLakeStorageAccountDetailsPtrOutput) ToDataLakeStorageAccountDetailsPtrOutput() DataLakeStorageAccountDetailsPtrOutput {
	return o
}

func (o DataLakeStorageAccountDetailsPtrOutput) ToDataLakeStorageAccountDetailsPtrOutputWithContext(ctx context.Context) DataLakeStorageAccountDetailsPtrOutput {
	return o
}

func (o DataLakeStorageAccountDetailsPtrOutput) Elem() DataLakeStorageAccountDetailsOutput {
	return o.ApplyT(func(v *DataLakeStorageAccountDetails) DataLakeStorageAccountDetails {
		if v != nil {
			return *v
		}
		var ret DataLakeStorageAccountDetails
		return ret
	}).(DataLakeStorageAccountDetailsOutput)
}

// Account URL
func (o DataLakeStorageAccountDetailsPtrOutput) AccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeStorageAccountDetails) *string {
		if v == nil {
			return nil
		}
		return v.AccountUrl
	}).(pulumi.StringPtrOutput)
}

// Filesystem name
func (o DataLakeStorageAccountDetailsPtrOutput) Filesystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeStorageAccountDetails) *string {
		if v == nil {
			return nil
		}
		return v.Filesystem
	}).(pulumi.StringPtrOutput)
}

// Details of the data lake storage account associated with the workspace
type DataLakeStorageAccountDetailsResponse struct {
	// Account URL
	AccountUrl *string `pulumi:"accountUrl"`
	// Filesystem name
	Filesystem *string `pulumi:"filesystem"`
}

// Details of the data lake storage account associated with the workspace
type DataLakeStorageAccountDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataLakeStorageAccountDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageAccountDetailsResponse)(nil)).Elem()
}

func (o DataLakeStorageAccountDetailsResponseOutput) ToDataLakeStorageAccountDetailsResponseOutput() DataLakeStorageAccountDetailsResponseOutput {
	return o
}

func (o DataLakeStorageAccountDetailsResponseOutput) ToDataLakeStorageAccountDetailsResponseOutputWithContext(ctx context.Context) DataLakeStorageAccountDetailsResponseOutput {
	return o
}

// Account URL
func (o DataLakeStorageAccountDetailsResponseOutput) AccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageAccountDetailsResponse) *string { return v.AccountUrl }).(pulumi.StringPtrOutput)
}

// Filesystem name
func (o DataLakeStorageAccountDetailsResponseOutput) Filesystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageAccountDetailsResponse) *string { return v.Filesystem }).(pulumi.StringPtrOutput)
}

type DataLakeStorageAccountDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (DataLakeStorageAccountDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeStorageAccountDetailsResponse)(nil)).Elem()
}

func (o DataLakeStorageAccountDetailsResponsePtrOutput) ToDataLakeStorageAccountDetailsResponsePtrOutput() DataLakeStorageAccountDetailsResponsePtrOutput {
	return o
}

func (o DataLakeStorageAccountDetailsResponsePtrOutput) ToDataLakeStorageAccountDetailsResponsePtrOutputWithContext(ctx context.Context) DataLakeStorageAccountDetailsResponsePtrOutput {
	return o
}

func (o DataLakeStorageAccountDetailsResponsePtrOutput) Elem() DataLakeStorageAccountDetailsResponseOutput {
	return o.ApplyT(func(v *DataLakeStorageAccountDetailsResponse) DataLakeStorageAccountDetailsResponse {
		if v != nil {
			return *v
		}
		var ret DataLakeStorageAccountDetailsResponse
		return ret
	}).(DataLakeStorageAccountDetailsResponseOutput)
}

// Account URL
func (o DataLakeStorageAccountDetailsResponsePtrOutput) AccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeStorageAccountDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AccountUrl
	}).(pulumi.StringPtrOutput)
}

// Filesystem name
func (o DataLakeStorageAccountDetailsResponsePtrOutput) Filesystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeStorageAccountDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Filesystem
	}).(pulumi.StringPtrOutput)
}

// Dynamic Executor Allocation Properties
type DynamicExecutorAllocation struct {
	// Indicates whether Dynamic Executor Allocation is enabled or not.
	Enabled *bool `pulumi:"enabled"`
}

// DynamicExecutorAllocationInput is an input type that accepts DynamicExecutorAllocationArgs and DynamicExecutorAllocationOutput values.
// You can construct a concrete instance of `DynamicExecutorAllocationInput` via:
//
//	DynamicExecutorAllocationArgs{...}
type DynamicExecutorAllocationInput interface {
	pulumi.Input

	ToDynamicExecutorAllocationOutput() DynamicExecutorAllocationOutput
	ToDynamicExecutorAllocationOutputWithContext(context.Context) DynamicExecutorAllocationOutput
}

// Dynamic Executor Allocation Properties
type DynamicExecutorAllocationArgs struct {
	// Indicates whether Dynamic Executor Allocation is enabled or not.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (DynamicExecutorAllocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicExecutorAllocation)(nil)).Elem()
}

func (i DynamicExecutorAllocationArgs) ToDynamicExecutorAllocationOutput() DynamicExecutorAllocationOutput {
	return i.ToDynamicExecutorAllocationOutputWithContext(context.Background())
}

func (i DynamicExecutorAllocationArgs) ToDynamicExecutorAllocationOutputWithContext(ctx context.Context) DynamicExecutorAllocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicExecutorAllocationOutput)
}

func (i DynamicExecutorAllocationArgs) ToDynamicExecutorAllocationPtrOutput() DynamicExecutorAllocationPtrOutput {
	return i.ToDynamicExecutorAllocationPtrOutputWithContext(context.Background())
}

func (i DynamicExecutorAllocationArgs) ToDynamicExecutorAllocationPtrOutputWithContext(ctx context.Context) DynamicExecutorAllocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicExecutorAllocationOutput).ToDynamicExecutorAllocationPtrOutputWithContext(ctx)
}

// DynamicExecutorAllocationPtrInput is an input type that accepts DynamicExecutorAllocationArgs, DynamicExecutorAllocationPtr and DynamicExecutorAllocationPtrOutput values.
// You can construct a concrete instance of `DynamicExecutorAllocationPtrInput` via:
//
//	        DynamicExecutorAllocationArgs{...}
//
//	or:
//
//	        nil
type DynamicExecutorAllocationPtrInput interface {
	pulumi.Input

	ToDynamicExecutorAllocationPtrOutput() DynamicExecutorAllocationPtrOutput
	ToDynamicExecutorAllocationPtrOutputWithContext(context.Context) DynamicExecutorAllocationPtrOutput
}

type dynamicExecutorAllocationPtrType DynamicExecutorAllocationArgs

func DynamicExecutorAllocationPtr(v *DynamicExecutorAllocationArgs) DynamicExecutorAllocationPtrInput {
	return (*dynamicExecutorAllocationPtrType)(v)
}

func (*dynamicExecutorAllocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicExecutorAllocation)(nil)).Elem()
}

func (i *dynamicExecutorAllocationPtrType) ToDynamicExecutorAllocationPtrOutput() DynamicExecutorAllocationPtrOutput {
	return i.ToDynamicExecutorAllocationPtrOutputWithContext(context.Background())
}

func (i *dynamicExecutorAllocationPtrType) ToDynamicExecutorAllocationPtrOutputWithContext(ctx context.Context) DynamicExecutorAllocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicExecutorAllocationPtrOutput)
}

// Dynamic Executor Allocation Properties
type DynamicExecutorAllocationOutput struct{ *pulumi.OutputState }

func (DynamicExecutorAllocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicExecutorAllocation)(nil)).Elem()
}

func (o DynamicExecutorAllocationOutput) ToDynamicExecutorAllocationOutput() DynamicExecutorAllocationOutput {
	return o
}

func (o DynamicExecutorAllocationOutput) ToDynamicExecutorAllocationOutputWithContext(ctx context.Context) DynamicExecutorAllocationOutput {
	return o
}

func (o DynamicExecutorAllocationOutput) ToDynamicExecutorAllocationPtrOutput() DynamicExecutorAllocationPtrOutput {
	return o.ToDynamicExecutorAllocationPtrOutputWithContext(context.Background())
}

func (o DynamicExecutorAllocationOutput) ToDynamicExecutorAllocationPtrOutputWithContext(ctx context.Context) DynamicExecutorAllocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DynamicExecutorAllocation) *DynamicExecutorAllocation {
		return &v
	}).(DynamicExecutorAllocationPtrOutput)
}

// Indicates whether Dynamic Executor Allocation is enabled or not.
func (o DynamicExecutorAllocationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DynamicExecutorAllocation) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type DynamicExecutorAllocationPtrOutput struct{ *pulumi.OutputState }

func (DynamicExecutorAllocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicExecutorAllocation)(nil)).Elem()
}

func (o DynamicExecutorAllocationPtrOutput) ToDynamicExecutorAllocationPtrOutput() DynamicExecutorAllocationPtrOutput {
	return o
}

func (o DynamicExecutorAllocationPtrOutput) ToDynamicExecutorAllocationPtrOutputWithContext(ctx context.Context) DynamicExecutorAllocationPtrOutput {
	return o
}

func (o DynamicExecutorAllocationPtrOutput) Elem() DynamicExecutorAllocationOutput {
	return o.ApplyT(func(v *DynamicExecutorAllocation) DynamicExecutorAllocation {
		if v != nil {
			return *v
		}
		var ret DynamicExecutorAllocation
		return ret
	}).(DynamicExecutorAllocationOutput)
}

// Indicates whether Dynamic Executor Allocation is enabled or not.
func (o DynamicExecutorAllocationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DynamicExecutorAllocation) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Dynamic Executor Allocation Properties
type DynamicExecutorAllocationResponse struct {
	// Indicates whether Dynamic Executor Allocation is enabled or not.
	Enabled *bool `pulumi:"enabled"`
}

// Dynamic Executor Allocation Properties
type DynamicExecutorAllocationResponseOutput struct{ *pulumi.OutputState }

func (DynamicExecutorAllocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicExecutorAllocationResponse)(nil)).Elem()
}

func (o DynamicExecutorAllocationResponseOutput) ToDynamicExecutorAllocationResponseOutput() DynamicExecutorAllocationResponseOutput {
	return o
}

func (o DynamicExecutorAllocationResponseOutput) ToDynamicExecutorAllocationResponseOutputWithContext(ctx context.Context) DynamicExecutorAllocationResponseOutput {
	return o
}

// Indicates whether Dynamic Executor Allocation is enabled or not.
func (o DynamicExecutorAllocationResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DynamicExecutorAllocationResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type DynamicExecutorAllocationResponsePtrOutput struct{ *pulumi.OutputState }

func (DynamicExecutorAllocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicExecutorAllocationResponse)(nil)).Elem()
}

func (o DynamicExecutorAllocationResponsePtrOutput) ToDynamicExecutorAllocationResponsePtrOutput() DynamicExecutorAllocationResponsePtrOutput {
	return o
}

func (o DynamicExecutorAllocationResponsePtrOutput) ToDynamicExecutorAllocationResponsePtrOutputWithContext(ctx context.Context) DynamicExecutorAllocationResponsePtrOutput {
	return o
}

func (o DynamicExecutorAllocationResponsePtrOutput) Elem() DynamicExecutorAllocationResponseOutput {
	return o.ApplyT(func(v *DynamicExecutorAllocationResponse) DynamicExecutorAllocationResponse {
		if v != nil {
			return *v
		}
		var ret DynamicExecutorAllocationResponse
		return ret
	}).(DynamicExecutorAllocationResponseOutput)
}

// Indicates whether Dynamic Executor Allocation is enabled or not.
func (o DynamicExecutorAllocationResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DynamicExecutorAllocationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Details of the encryption associated with the workspace
type EncryptionDetails struct {
	// Customer Managed Key Details
	Cmk *CustomerManagedKeyDetails `pulumi:"cmk"`
}

// EncryptionDetailsInput is an input type that accepts EncryptionDetailsArgs and EncryptionDetailsOutput values.
// You can construct a concrete instance of `EncryptionDetailsInput` via:
//
//	EncryptionDetailsArgs{...}
type EncryptionDetailsInput interface {
	pulumi.Input

	ToEncryptionDetailsOutput() EncryptionDetailsOutput
	ToEncryptionDetailsOutputWithContext(context.Context) EncryptionDetailsOutput
}

// Details of the encryption associated with the workspace
type EncryptionDetailsArgs struct {
	// Customer Managed Key Details
	Cmk CustomerManagedKeyDetailsPtrInput `pulumi:"cmk"`
}

func (EncryptionDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionDetails)(nil)).Elem()
}

func (i EncryptionDetailsArgs) ToEncryptionDetailsOutput() EncryptionDetailsOutput {
	return i.ToEncryptionDetailsOutputWithContext(context.Background())
}

func (i EncryptionDetailsArgs) ToEncryptionDetailsOutputWithContext(ctx context.Context) EncryptionDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionDetailsOutput)
}

func (i EncryptionDetailsArgs) ToEncryptionDetailsPtrOutput() EncryptionDetailsPtrOutput {
	return i.ToEncryptionDetailsPtrOutputWithContext(context.Background())
}

func (i EncryptionDetailsArgs) ToEncryptionDetailsPtrOutputWithContext(ctx context.Context) EncryptionDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionDetailsOutput).ToEncryptionDetailsPtrOutputWithContext(ctx)
}

// EncryptionDetailsPtrInput is an input type that accepts EncryptionDetailsArgs, EncryptionDetailsPtr and EncryptionDetailsPtrOutput values.
// You can construct a concrete instance of `EncryptionDetailsPtrInput` via:
//
//	        EncryptionDetailsArgs{...}
//
//	or:
//
//	        nil
type EncryptionDetailsPtrInput interface {
	pulumi.Input

	ToEncryptionDetailsPtrOutput() EncryptionDetailsPtrOutput
	ToEncryptionDetailsPtrOutputWithContext(context.Context) EncryptionDetailsPtrOutput
}

type encryptionDetailsPtrType EncryptionDetailsArgs

func EncryptionDetailsPtr(v *EncryptionDetailsArgs) EncryptionDetailsPtrInput {
	return (*encryptionDetailsPtrType)(v)
}

func (*encryptionDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionDetails)(nil)).Elem()
}

func (i *encryptionDetailsPtrType) ToEncryptionDetailsPtrOutput() EncryptionDetailsPtrOutput {
	return i.ToEncryptionDetailsPtrOutputWithContext(context.Background())
}

func (i *encryptionDetailsPtrType) ToEncryptionDetailsPtrOutputWithContext(ctx context.Context) EncryptionDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionDetailsPtrOutput)
}

// Details of the encryption associated with the workspace
type EncryptionDetailsOutput struct{ *pulumi.OutputState }

func (EncryptionDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionDetails)(nil)).Elem()
}

func (o EncryptionDetailsOutput) ToEncryptionDetailsOutput() EncryptionDetailsOutput {
	return o
}

func (o EncryptionDetailsOutput) ToEncryptionDetailsOutputWithContext(ctx context.Context) EncryptionDetailsOutput {
	return o
}

func (o EncryptionDetailsOutput) ToEncryptionDetailsPtrOutput() EncryptionDetailsPtrOutput {
	return o.ToEncryptionDetailsPtrOutputWithContext(context.Background())
}

func (o EncryptionDetailsOutput) ToEncryptionDetailsPtrOutputWithContext(ctx context.Context) EncryptionDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionDetails) *EncryptionDetails {
		return &v
	}).(EncryptionDetailsPtrOutput)
}

// Customer Managed Key Details
func (o EncryptionDetailsOutput) Cmk() CustomerManagedKeyDetailsPtrOutput {
	return o.ApplyT(func(v EncryptionDetails) *CustomerManagedKeyDetails { return v.Cmk }).(CustomerManagedKeyDetailsPtrOutput)
}

type EncryptionDetailsPtrOutput struct{ *pulumi.OutputState }

func (EncryptionDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionDetails)(nil)).Elem()
}

func (o EncryptionDetailsPtrOutput) ToEncryptionDetailsPtrOutput() EncryptionDetailsPtrOutput {
	return o
}

func (o EncryptionDetailsPtrOutput) ToEncryptionDetailsPtrOutputWithContext(ctx context.Context) EncryptionDetailsPtrOutput {
	return o
}

func (o EncryptionDetailsPtrOutput) Elem() EncryptionDetailsOutput {
	return o.ApplyT(func(v *EncryptionDetails) EncryptionDetails {
		if v != nil {
			return *v
		}
		var ret EncryptionDetails
		return ret
	}).(EncryptionDetailsOutput)
}

// Customer Managed Key Details
func (o EncryptionDetailsPtrOutput) Cmk() CustomerManagedKeyDetailsPtrOutput {
	return o.ApplyT(func(v *EncryptionDetails) *CustomerManagedKeyDetails {
		if v == nil {
			return nil
		}
		return v.Cmk
	}).(CustomerManagedKeyDetailsPtrOutput)
}

// Details of the encryption associated with the workspace
type EncryptionDetailsResponse struct {
	// Customer Managed Key Details
	Cmk *CustomerManagedKeyDetailsResponse `pulumi:"cmk"`
	// Double Encryption enabled
	DoubleEncryptionEnabled bool `pulumi:"doubleEncryptionEnabled"`
}

// Details of the encryption associated with the workspace
type EncryptionDetailsResponseOutput struct{ *pulumi.OutputState }

func (EncryptionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionDetailsResponse)(nil)).Elem()
}

func (o EncryptionDetailsResponseOutput) ToEncryptionDetailsResponseOutput() EncryptionDetailsResponseOutput {
	return o
}

func (o EncryptionDetailsResponseOutput) ToEncryptionDetailsResponseOutputWithContext(ctx context.Context) EncryptionDetailsResponseOutput {
	return o
}

// Customer Managed Key Details
func (o EncryptionDetailsResponseOutput) Cmk() CustomerManagedKeyDetailsResponsePtrOutput {
	return o.ApplyT(func(v EncryptionDetailsResponse) *CustomerManagedKeyDetailsResponse { return v.Cmk }).(CustomerManagedKeyDetailsResponsePtrOutput)
}

// Double Encryption enabled
func (o EncryptionDetailsResponseOutput) DoubleEncryptionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v EncryptionDetailsResponse) bool { return v.DoubleEncryptionEnabled }).(pulumi.BoolOutput)
}

type EncryptionDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionDetailsResponse)(nil)).Elem()
}

func (o EncryptionDetailsResponsePtrOutput) ToEncryptionDetailsResponsePtrOutput() EncryptionDetailsResponsePtrOutput {
	return o
}

func (o EncryptionDetailsResponsePtrOutput) ToEncryptionDetailsResponsePtrOutputWithContext(ctx context.Context) EncryptionDetailsResponsePtrOutput {
	return o
}

func (o EncryptionDetailsResponsePtrOutput) Elem() EncryptionDetailsResponseOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) EncryptionDetailsResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionDetailsResponse
		return ret
	}).(EncryptionDetailsResponseOutput)
}

// Customer Managed Key Details
func (o EncryptionDetailsResponsePtrOutput) Cmk() CustomerManagedKeyDetailsResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) *CustomerManagedKeyDetailsResponse {
		if v == nil {
			return nil
		}
		return v.Cmk
	}).(CustomerManagedKeyDetailsResponsePtrOutput)
}

// Double Encryption enabled
func (o EncryptionDetailsResponsePtrOutput) DoubleEncryptionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.DoubleEncryptionEnabled
	}).(pulumi.BoolPtrOutput)
}

// The entity reference.
type EntityReference struct {
	// The name of this referenced entity.
	ReferenceName *string `pulumi:"referenceName"`
	// The type of this referenced entity.
	Type *string `pulumi:"type"`
}

// The entity reference.
type EntityReferenceResponse struct {
	// The name of this referenced entity.
	ReferenceName *string `pulumi:"referenceName"`
	// The type of this referenced entity.
	Type *string `pulumi:"type"`
}

// The custom setup of setting environment variable.
type EnvironmentVariableSetup struct {
	// The type of custom setup.
	// Expected value is 'EnvironmentVariableSetup'.
	Type string `pulumi:"type"`
	// The name of the environment variable.
	VariableName string `pulumi:"variableName"`
	// The value of the environment variable.
	VariableValue string `pulumi:"variableValue"`
}

// The custom setup of setting environment variable.
type EnvironmentVariableSetupResponse struct {
	// The type of custom setup.
	// Expected value is 'EnvironmentVariableSetup'.
	Type string `pulumi:"type"`
	// The name of the environment variable.
	VariableName string `pulumi:"variableName"`
	// The value of the environment variable.
	VariableValue string `pulumi:"variableValue"`
}

// Client secret information for factory's bring your own app repository configuration
type GitHubClientSecret struct {
	// Bring your own app client secret AKV URL
	ByoaSecretAkvUrl *string `pulumi:"byoaSecretAkvUrl"`
	// Bring your own app client secret name in AKV
	ByoaSecretName *string `pulumi:"byoaSecretName"`
}

// GitHubClientSecretInput is an input type that accepts GitHubClientSecretArgs and GitHubClientSecretOutput values.
// You can construct a concrete instance of `GitHubClientSecretInput` via:
//
//	GitHubClientSecretArgs{...}
type GitHubClientSecretInput interface {
	pulumi.Input

	ToGitHubClientSecretOutput() GitHubClientSecretOutput
	ToGitHubClientSecretOutputWithContext(context.Context) GitHubClientSecretOutput
}

// Client secret information for factory's bring your own app repository configuration
type GitHubClientSecretArgs struct {
	// Bring your own app client secret AKV URL
	ByoaSecretAkvUrl pulumi.StringPtrInput `pulumi:"byoaSecretAkvUrl"`
	// Bring your own app client secret name in AKV
	ByoaSecretName pulumi.StringPtrInput `pulumi:"byoaSecretName"`
}

func (GitHubClientSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubClientSecret)(nil)).Elem()
}

func (i GitHubClientSecretArgs) ToGitHubClientSecretOutput() GitHubClientSecretOutput {
	return i.ToGitHubClientSecretOutputWithContext(context.Background())
}

func (i GitHubClientSecretArgs) ToGitHubClientSecretOutputWithContext(ctx context.Context) GitHubClientSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubClientSecretOutput)
}

func (i GitHubClientSecretArgs) ToGitHubClientSecretPtrOutput() GitHubClientSecretPtrOutput {
	return i.ToGitHubClientSecretPtrOutputWithContext(context.Background())
}

func (i GitHubClientSecretArgs) ToGitHubClientSecretPtrOutputWithContext(ctx context.Context) GitHubClientSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubClientSecretOutput).ToGitHubClientSecretPtrOutputWithContext(ctx)
}

// GitHubClientSecretPtrInput is an input type that accepts GitHubClientSecretArgs, GitHubClientSecretPtr and GitHubClientSecretPtrOutput values.
// You can construct a concrete instance of `GitHubClientSecretPtrInput` via:
//
//	        GitHubClientSecretArgs{...}
//
//	or:
//
//	        nil
type GitHubClientSecretPtrInput interface {
	pulumi.Input

	ToGitHubClientSecretPtrOutput() GitHubClientSecretPtrOutput
	ToGitHubClientSecretPtrOutputWithContext(context.Context) GitHubClientSecretPtrOutput
}

type gitHubClientSecretPtrType GitHubClientSecretArgs

func GitHubClientSecretPtr(v *GitHubClientSecretArgs) GitHubClientSecretPtrInput {
	return (*gitHubClientSecretPtrType)(v)
}

func (*gitHubClientSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubClientSecret)(nil)).Elem()
}

func (i *gitHubClientSecretPtrType) ToGitHubClientSecretPtrOutput() GitHubClientSecretPtrOutput {
	return i.ToGitHubClientSecretPtrOutputWithContext(context.Background())
}

func (i *gitHubClientSecretPtrType) ToGitHubClientSecretPtrOutputWithContext(ctx context.Context) GitHubClientSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubClientSecretPtrOutput)
}

// Client secret information for factory's bring your own app repository configuration
type GitHubClientSecretOutput struct{ *pulumi.OutputState }

func (GitHubClientSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubClientSecret)(nil)).Elem()
}

func (o GitHubClientSecretOutput) ToGitHubClientSecretOutput() GitHubClientSecretOutput {
	return o
}

func (o GitHubClientSecretOutput) ToGitHubClientSecretOutputWithContext(ctx context.Context) GitHubClientSecretOutput {
	return o
}

func (o GitHubClientSecretOutput) ToGitHubClientSecretPtrOutput() GitHubClientSecretPtrOutput {
	return o.ToGitHubClientSecretPtrOutputWithContext(context.Background())
}

func (o GitHubClientSecretOutput) ToGitHubClientSecretPtrOutputWithContext(ctx context.Context) GitHubClientSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitHubClientSecret) *GitHubClientSecret {
		return &v
	}).(GitHubClientSecretPtrOutput)
}

// Bring your own app client secret AKV URL
func (o GitHubClientSecretOutput) ByoaSecretAkvUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubClientSecret) *string { return v.ByoaSecretAkvUrl }).(pulumi.StringPtrOutput)
}

// Bring your own app client secret name in AKV
func (o GitHubClientSecretOutput) ByoaSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubClientSecret) *string { return v.ByoaSecretName }).(pulumi.StringPtrOutput)
}

type GitHubClientSecretPtrOutput struct{ *pulumi.OutputState }

func (GitHubClientSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubClientSecret)(nil)).Elem()
}

func (o GitHubClientSecretPtrOutput) ToGitHubClientSecretPtrOutput() GitHubClientSecretPtrOutput {
	return o
}

func (o GitHubClientSecretPtrOutput) ToGitHubClientSecretPtrOutputWithContext(ctx context.Context) GitHubClientSecretPtrOutput {
	return o
}

func (o GitHubClientSecretPtrOutput) Elem() GitHubClientSecretOutput {
	return o.ApplyT(func(v *GitHubClientSecret) GitHubClientSecret {
		if v != nil {
			return *v
		}
		var ret GitHubClientSecret
		return ret
	}).(GitHubClientSecretOutput)
}

// Bring your own app client secret AKV URL
func (o GitHubClientSecretPtrOutput) ByoaSecretAkvUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubClientSecret) *string {
		if v == nil {
			return nil
		}
		return v.ByoaSecretAkvUrl
	}).(pulumi.StringPtrOutput)
}

// Bring your own app client secret name in AKV
func (o GitHubClientSecretPtrOutput) ByoaSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubClientSecret) *string {
		if v == nil {
			return nil
		}
		return v.ByoaSecretName
	}).(pulumi.StringPtrOutput)
}

// Client secret information for factory's bring your own app repository configuration
type GitHubClientSecretResponse struct {
	// Bring your own app client secret AKV URL
	ByoaSecretAkvUrl *string `pulumi:"byoaSecretAkvUrl"`
	// Bring your own app client secret name in AKV
	ByoaSecretName *string `pulumi:"byoaSecretName"`
}

// Client secret information for factory's bring your own app repository configuration
type GitHubClientSecretResponseOutput struct{ *pulumi.OutputState }

func (GitHubClientSecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubClientSecretResponse)(nil)).Elem()
}

func (o GitHubClientSecretResponseOutput) ToGitHubClientSecretResponseOutput() GitHubClientSecretResponseOutput {
	return o
}

func (o GitHubClientSecretResponseOutput) ToGitHubClientSecretResponseOutputWithContext(ctx context.Context) GitHubClientSecretResponseOutput {
	return o
}

// Bring your own app client secret AKV URL
func (o GitHubClientSecretResponseOutput) ByoaSecretAkvUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubClientSecretResponse) *string { return v.ByoaSecretAkvUrl }).(pulumi.StringPtrOutput)
}

// Bring your own app client secret name in AKV
func (o GitHubClientSecretResponseOutput) ByoaSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubClientSecretResponse) *string { return v.ByoaSecretName }).(pulumi.StringPtrOutput)
}

type GitHubClientSecretResponsePtrOutput struct{ *pulumi.OutputState }

func (GitHubClientSecretResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubClientSecretResponse)(nil)).Elem()
}

func (o GitHubClientSecretResponsePtrOutput) ToGitHubClientSecretResponsePtrOutput() GitHubClientSecretResponsePtrOutput {
	return o
}

func (o GitHubClientSecretResponsePtrOutput) ToGitHubClientSecretResponsePtrOutputWithContext(ctx context.Context) GitHubClientSecretResponsePtrOutput {
	return o
}

func (o GitHubClientSecretResponsePtrOutput) Elem() GitHubClientSecretResponseOutput {
	return o.ApplyT(func(v *GitHubClientSecretResponse) GitHubClientSecretResponse {
		if v != nil {
			return *v
		}
		var ret GitHubClientSecretResponse
		return ret
	}).(GitHubClientSecretResponseOutput)
}

// Bring your own app client secret AKV URL
func (o GitHubClientSecretResponsePtrOutput) ByoaSecretAkvUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubClientSecretResponse) *string {
		if v == nil {
			return nil
		}
		return v.ByoaSecretAkvUrl
	}).(pulumi.StringPtrOutput)
}

// Bring your own app client secret name in AKV
func (o GitHubClientSecretResponsePtrOutput) ByoaSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubClientSecretResponse) *string {
		if v == nil {
			return nil
		}
		return v.ByoaSecretName
	}).(pulumi.StringPtrOutput)
}

// The compute resource properties for managed integration runtime.
type IntegrationRuntimeComputeProperties struct {
	// Data flow properties for managed integration runtime.
	DataFlowProperties *IntegrationRuntimeDataFlowProperties `pulumi:"dataFlowProperties"`
	// The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
	Location *string `pulumi:"location"`
	// Maximum parallel executions count per node for managed integration runtime.
	MaxParallelExecutionsPerNode *int `pulumi:"maxParallelExecutionsPerNode"`
	// The node size requirement to managed integration runtime.
	NodeSize *string `pulumi:"nodeSize"`
	// The required number of nodes for managed integration runtime.
	NumberOfNodes *int `pulumi:"numberOfNodes"`
	// VNet properties for managed integration runtime.
	VNetProperties *IntegrationRuntimeVNetProperties `pulumi:"vNetProperties"`
}

// The compute resource properties for managed integration runtime.
type IntegrationRuntimeComputePropertiesResponse struct {
	// Data flow properties for managed integration runtime.
	DataFlowProperties *IntegrationRuntimeDataFlowPropertiesResponse `pulumi:"dataFlowProperties"`
	// The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
	Location *string `pulumi:"location"`
	// Maximum parallel executions count per node for managed integration runtime.
	MaxParallelExecutionsPerNode *int `pulumi:"maxParallelExecutionsPerNode"`
	// The node size requirement to managed integration runtime.
	NodeSize *string `pulumi:"nodeSize"`
	// The required number of nodes for managed integration runtime.
	NumberOfNodes *int `pulumi:"numberOfNodes"`
	// VNet properties for managed integration runtime.
	VNetProperties *IntegrationRuntimeVNetPropertiesResponse `pulumi:"vNetProperties"`
}

// Custom setup script properties for a managed dedicated integration runtime.
type IntegrationRuntimeCustomSetupScriptProperties struct {
	// The URI of the Azure blob container that contains the custom setup script.
	BlobContainerUri *string `pulumi:"blobContainerUri"`
	// The SAS token of the Azure blob container.
	SasToken *SecureString `pulumi:"sasToken"`
}

// Custom setup script properties for a managed dedicated integration runtime.
type IntegrationRuntimeCustomSetupScriptPropertiesResponse struct {
	// The URI of the Azure blob container that contains the custom setup script.
	BlobContainerUri *string `pulumi:"blobContainerUri"`
	// The SAS token of the Azure blob container.
	SasToken *SecureStringResponse `pulumi:"sasToken"`
}

// Data flow properties for managed integration runtime.
type IntegrationRuntimeDataFlowProperties struct {
	// Cluster will not be recycled and it will be used in next data flow activity run until TTL (time to live) is reached if this is set as false. Default is true.
	Cleanup *bool `pulumi:"cleanup"`
	// Compute type of the cluster which will execute data flow job.
	ComputeType *string `pulumi:"computeType"`
	// Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32, 48, 80, 144 and 272.
	CoreCount *int `pulumi:"coreCount"`
	// Time to live (in minutes) setting of the cluster which will execute data flow job.
	TimeToLive *int `pulumi:"timeToLive"`
}

// Data flow properties for managed integration runtime.
type IntegrationRuntimeDataFlowPropertiesResponse struct {
	// Cluster will not be recycled and it will be used in next data flow activity run until TTL (time to live) is reached if this is set as false. Default is true.
	Cleanup *bool `pulumi:"cleanup"`
	// Compute type of the cluster which will execute data flow job.
	ComputeType *string `pulumi:"computeType"`
	// Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32, 48, 80, 144 and 272.
	CoreCount *int `pulumi:"coreCount"`
	// Time to live (in minutes) setting of the cluster which will execute data flow job.
	TimeToLive *int `pulumi:"timeToLive"`
}

// Data proxy properties for a managed dedicated integration runtime.
type IntegrationRuntimeDataProxyProperties struct {
	// The self-hosted integration runtime reference.
	ConnectVia *EntityReference `pulumi:"connectVia"`
	// The path to contain the staged data in the Blob storage.
	Path *string `pulumi:"path"`
	// The staging linked service reference.
	StagingLinkedService *EntityReference `pulumi:"stagingLinkedService"`
}

// Data proxy properties for a managed dedicated integration runtime.
type IntegrationRuntimeDataProxyPropertiesResponse struct {
	// The self-hosted integration runtime reference.
	ConnectVia *EntityReferenceResponse `pulumi:"connectVia"`
	// The path to contain the staged data in the Blob storage.
	Path *string `pulumi:"path"`
	// The staging linked service reference.
	StagingLinkedService *EntityReferenceResponse `pulumi:"stagingLinkedService"`
}

// Catalog information for managed dedicated integration runtime.
type IntegrationRuntimeSsisCatalogInfo struct {
	// The password of the administrator user account of the catalog database.
	CatalogAdminPassword *SecureString `pulumi:"catalogAdminPassword"`
	// The administrator user name of catalog database.
	CatalogAdminUserName *string `pulumi:"catalogAdminUserName"`
	// The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/
	CatalogPricingTier *string `pulumi:"catalogPricingTier"`
	// The catalog database server URL.
	CatalogServerEndpoint *string `pulumi:"catalogServerEndpoint"`
}

// Catalog information for managed dedicated integration runtime.
type IntegrationRuntimeSsisCatalogInfoResponse struct {
	// The password of the administrator user account of the catalog database.
	CatalogAdminPassword *SecureStringResponse `pulumi:"catalogAdminPassword"`
	// The administrator user name of catalog database.
	CatalogAdminUserName *string `pulumi:"catalogAdminUserName"`
	// The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/
	CatalogPricingTier *string `pulumi:"catalogPricingTier"`
	// The catalog database server URL.
	CatalogServerEndpoint *string `pulumi:"catalogServerEndpoint"`
}

// SSIS properties for managed integration runtime.
type IntegrationRuntimeSsisProperties struct {
	// Catalog information for managed dedicated integration runtime.
	CatalogInfo *IntegrationRuntimeSsisCatalogInfo `pulumi:"catalogInfo"`
	// Custom setup script properties for a managed dedicated integration runtime.
	CustomSetupScriptProperties *IntegrationRuntimeCustomSetupScriptProperties `pulumi:"customSetupScriptProperties"`
	// Data proxy properties for a managed dedicated integration runtime.
	DataProxyProperties *IntegrationRuntimeDataProxyProperties `pulumi:"dataProxyProperties"`
	// The edition for the SSIS Integration Runtime
	Edition *string `pulumi:"edition"`
	// Custom setup without script properties for a SSIS integration runtime.
	ExpressCustomSetupProperties []interface{} `pulumi:"expressCustomSetupProperties"`
	// License type for bringing your own license scenario.
	LicenseType *string `pulumi:"licenseType"`
}

// SSIS properties for managed integration runtime.
type IntegrationRuntimeSsisPropertiesResponse struct {
	// Catalog information for managed dedicated integration runtime.
	CatalogInfo *IntegrationRuntimeSsisCatalogInfoResponse `pulumi:"catalogInfo"`
	// Custom setup script properties for a managed dedicated integration runtime.
	CustomSetupScriptProperties *IntegrationRuntimeCustomSetupScriptPropertiesResponse `pulumi:"customSetupScriptProperties"`
	// Data proxy properties for a managed dedicated integration runtime.
	DataProxyProperties *IntegrationRuntimeDataProxyPropertiesResponse `pulumi:"dataProxyProperties"`
	// The edition for the SSIS Integration Runtime
	Edition *string `pulumi:"edition"`
	// Custom setup without script properties for a SSIS integration runtime.
	ExpressCustomSetupProperties []interface{} `pulumi:"expressCustomSetupProperties"`
	// License type for bringing your own license scenario.
	LicenseType *string `pulumi:"licenseType"`
}

// VNet properties for managed integration runtime.
type IntegrationRuntimeVNetProperties struct {
	// Resource IDs of the public IP addresses that this integration runtime will use.
	PublicIPs []string `pulumi:"publicIPs"`
	// The name of the subnet this integration runtime will join.
	Subnet *string `pulumi:"subnet"`
	// The ID of the VNet that this integration runtime will join.
	VNetId *string `pulumi:"vNetId"`
}

// VNet properties for managed integration runtime.
type IntegrationRuntimeVNetPropertiesResponse struct {
	// Resource IDs of the public IP addresses that this integration runtime will use.
	PublicIPs []string `pulumi:"publicIPs"`
	// The name of the subnet this integration runtime will join.
	Subnet *string `pulumi:"subnet"`
	// The ID of the VNet that this integration runtime will join.
	VNetId *string `pulumi:"vNetId"`
}

// Library/package information of a Big Data pool powered by Apache Spark
type LibraryInfo struct {
	// Storage blob container name.
	ContainerName *string `pulumi:"containerName"`
	// Name of the library.
	Name *string `pulumi:"name"`
	// Storage blob path of library.
	Path *string `pulumi:"path"`
	// Type of the library.
	Type *string `pulumi:"type"`
	// The last update time of the library.
	UploadedTimestamp *string `pulumi:"uploadedTimestamp"`
}

// LibraryInfoInput is an input type that accepts LibraryInfoArgs and LibraryInfoOutput values.
// You can construct a concrete instance of `LibraryInfoInput` via:
//
//	LibraryInfoArgs{...}
type LibraryInfoInput interface {
	pulumi.Input

	ToLibraryInfoOutput() LibraryInfoOutput
	ToLibraryInfoOutputWithContext(context.Context) LibraryInfoOutput
}

// Library/package information of a Big Data pool powered by Apache Spark
type LibraryInfoArgs struct {
	// Storage blob container name.
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Name of the library.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Storage blob path of library.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Type of the library.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The last update time of the library.
	UploadedTimestamp pulumi.StringPtrInput `pulumi:"uploadedTimestamp"`
}

func (LibraryInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LibraryInfo)(nil)).Elem()
}

func (i LibraryInfoArgs) ToLibraryInfoOutput() LibraryInfoOutput {
	return i.ToLibraryInfoOutputWithContext(context.Background())
}

func (i LibraryInfoArgs) ToLibraryInfoOutputWithContext(ctx context.Context) LibraryInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LibraryInfoOutput)
}

// LibraryInfoArrayInput is an input type that accepts LibraryInfoArray and LibraryInfoArrayOutput values.
// You can construct a concrete instance of `LibraryInfoArrayInput` via:
//
//	LibraryInfoArray{ LibraryInfoArgs{...} }
type LibraryInfoArrayInput interface {
	pulumi.Input

	ToLibraryInfoArrayOutput() LibraryInfoArrayOutput
	ToLibraryInfoArrayOutputWithContext(context.Context) LibraryInfoArrayOutput
}

type LibraryInfoArray []LibraryInfoInput

func (LibraryInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LibraryInfo)(nil)).Elem()
}

func (i LibraryInfoArray) ToLibraryInfoArrayOutput() LibraryInfoArrayOutput {
	return i.ToLibraryInfoArrayOutputWithContext(context.Background())
}

func (i LibraryInfoArray) ToLibraryInfoArrayOutputWithContext(ctx context.Context) LibraryInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LibraryInfoArrayOutput)
}

// Library/package information of a Big Data pool powered by Apache Spark
type LibraryInfoOutput struct{ *pulumi.OutputState }

func (LibraryInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LibraryInfo)(nil)).Elem()
}

func (o LibraryInfoOutput) ToLibraryInfoOutput() LibraryInfoOutput {
	return o
}

func (o LibraryInfoOutput) ToLibraryInfoOutputWithContext(ctx context.Context) LibraryInfoOutput {
	return o
}

// Storage blob container name.
func (o LibraryInfoOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LibraryInfo) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Name of the library.
func (o LibraryInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LibraryInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Storage blob path of library.
func (o LibraryInfoOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LibraryInfo) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Type of the library.
func (o LibraryInfoOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LibraryInfo) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The last update time of the library.
func (o LibraryInfoOutput) UploadedTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LibraryInfo) *string { return v.UploadedTimestamp }).(pulumi.StringPtrOutput)
}

type LibraryInfoArrayOutput struct{ *pulumi.OutputState }

func (LibraryInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LibraryInfo)(nil)).Elem()
}

func (o LibraryInfoArrayOutput) ToLibraryInfoArrayOutput() LibraryInfoArrayOutput {
	return o
}

func (o LibraryInfoArrayOutput) ToLibraryInfoArrayOutputWithContext(ctx context.Context) LibraryInfoArrayOutput {
	return o
}

func (o LibraryInfoArrayOutput) Index(i pulumi.IntInput) LibraryInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LibraryInfo {
		return vs[0].([]LibraryInfo)[vs[1].(int)]
	}).(LibraryInfoOutput)
}

// Library/package information of a Big Data pool powered by Apache Spark
type LibraryInfoResponse struct {
	// Storage blob container name.
	ContainerName *string `pulumi:"containerName"`
	// Creator Id of the library/package.
	CreatorId string `pulumi:"creatorId"`
	// Name of the library.
	Name *string `pulumi:"name"`
	// Storage blob path of library.
	Path *string `pulumi:"path"`
	// Provisioning status of the library/package.
	ProvisioningStatus string `pulumi:"provisioningStatus"`
	// Type of the library.
	Type *string `pulumi:"type"`
	// The last update time of the library.
	UploadedTimestamp *string `pulumi:"uploadedTimestamp"`
}

// Library/package information of a Big Data pool powered by Apache Spark
type LibraryInfoResponseOutput struct{ *pulumi.OutputState }

func (LibraryInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LibraryInfoResponse)(nil)).Elem()
}

func (o LibraryInfoResponseOutput) ToLibraryInfoResponseOutput() LibraryInfoResponseOutput {
	return o
}

func (o LibraryInfoResponseOutput) ToLibraryInfoResponseOutputWithContext(ctx context.Context) LibraryInfoResponseOutput {
	return o
}

// Storage blob container name.
func (o LibraryInfoResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LibraryInfoResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Creator Id of the library/package.
func (o LibraryInfoResponseOutput) CreatorId() pulumi.StringOutput {
	return o.ApplyT(func(v LibraryInfoResponse) string { return v.CreatorId }).(pulumi.StringOutput)
}

// Name of the library.
func (o LibraryInfoResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LibraryInfoResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Storage blob path of library.
func (o LibraryInfoResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LibraryInfoResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Provisioning status of the library/package.
func (o LibraryInfoResponseOutput) ProvisioningStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LibraryInfoResponse) string { return v.ProvisioningStatus }).(pulumi.StringOutput)
}

// Type of the library.
func (o LibraryInfoResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LibraryInfoResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The last update time of the library.
func (o LibraryInfoResponseOutput) UploadedTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LibraryInfoResponse) *string { return v.UploadedTimestamp }).(pulumi.StringPtrOutput)
}

type LibraryInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (LibraryInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LibraryInfoResponse)(nil)).Elem()
}

func (o LibraryInfoResponseArrayOutput) ToLibraryInfoResponseArrayOutput() LibraryInfoResponseArrayOutput {
	return o
}

func (o LibraryInfoResponseArrayOutput) ToLibraryInfoResponseArrayOutputWithContext(ctx context.Context) LibraryInfoResponseArrayOutput {
	return o
}

func (o LibraryInfoResponseArrayOutput) Index(i pulumi.IntInput) LibraryInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LibraryInfoResponse {
		return vs[0].([]LibraryInfoResponse)[vs[1].(int)]
	}).(LibraryInfoResponseOutput)
}

// Library requirements for a Big Data pool powered by Apache Spark
type LibraryRequirements struct {
	// The library requirements.
	Content *string `pulumi:"content"`
	// The filename of the library requirements file.
	Filename *string `pulumi:"filename"`
}

// LibraryRequirementsInput is an input type that accepts LibraryRequirementsArgs and LibraryRequirementsOutput values.
// You can construct a concrete instance of `LibraryRequirementsInput` via:
//
//	LibraryRequirementsArgs{...}
type LibraryRequirementsInput interface {
	pulumi.Input

	ToLibraryRequirementsOutput() LibraryRequirementsOutput
	ToLibraryRequirementsOutputWithContext(context.Context) LibraryRequirementsOutput
}

// Library requirements for a Big Data pool powered by Apache Spark
type LibraryRequirementsArgs struct {
	// The library requirements.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// The filename of the library requirements file.
	Filename pulumi.StringPtrInput `pulumi:"filename"`
}

func (LibraryRequirementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LibraryRequirements)(nil)).Elem()
}

func (i LibraryRequirementsArgs) ToLibraryRequirementsOutput() LibraryRequirementsOutput {
	return i.ToLibraryRequirementsOutputWithContext(context.Background())
}

func (i LibraryRequirementsArgs) ToLibraryRequirementsOutputWithContext(ctx context.Context) LibraryRequirementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LibraryRequirementsOutput)
}

func (i LibraryRequirementsArgs) ToLibraryRequirementsPtrOutput() LibraryRequirementsPtrOutput {
	return i.ToLibraryRequirementsPtrOutputWithContext(context.Background())
}

func (i LibraryRequirementsArgs) ToLibraryRequirementsPtrOutputWithContext(ctx context.Context) LibraryRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LibraryRequirementsOutput).ToLibraryRequirementsPtrOutputWithContext(ctx)
}

// LibraryRequirementsPtrInput is an input type that accepts LibraryRequirementsArgs, LibraryRequirementsPtr and LibraryRequirementsPtrOutput values.
// You can construct a concrete instance of `LibraryRequirementsPtrInput` via:
//
//	        LibraryRequirementsArgs{...}
//
//	or:
//
//	        nil
type LibraryRequirementsPtrInput interface {
	pulumi.Input

	ToLibraryRequirementsPtrOutput() LibraryRequirementsPtrOutput
	ToLibraryRequirementsPtrOutputWithContext(context.Context) LibraryRequirementsPtrOutput
}

type libraryRequirementsPtrType LibraryRequirementsArgs

func LibraryRequirementsPtr(v *LibraryRequirementsArgs) LibraryRequirementsPtrInput {
	return (*libraryRequirementsPtrType)(v)
}

func (*libraryRequirementsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LibraryRequirements)(nil)).Elem()
}

func (i *libraryRequirementsPtrType) ToLibraryRequirementsPtrOutput() LibraryRequirementsPtrOutput {
	return i.ToLibraryRequirementsPtrOutputWithContext(context.Background())
}

func (i *libraryRequirementsPtrType) ToLibraryRequirementsPtrOutputWithContext(ctx context.Context) LibraryRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LibraryRequirementsPtrOutput)
}

// Library requirements for a Big Data pool powered by Apache Spark
type LibraryRequirementsOutput struct{ *pulumi.OutputState }

func (LibraryRequirementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LibraryRequirements)(nil)).Elem()
}

func (o LibraryRequirementsOutput) ToLibraryRequirementsOutput() LibraryRequirementsOutput {
	return o
}

func (o LibraryRequirementsOutput) ToLibraryRequirementsOutputWithContext(ctx context.Context) LibraryRequirementsOutput {
	return o
}

func (o LibraryRequirementsOutput) ToLibraryRequirementsPtrOutput() LibraryRequirementsPtrOutput {
	return o.ToLibraryRequirementsPtrOutputWithContext(context.Background())
}

func (o LibraryRequirementsOutput) ToLibraryRequirementsPtrOutputWithContext(ctx context.Context) LibraryRequirementsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LibraryRequirements) *LibraryRequirements {
		return &v
	}).(LibraryRequirementsPtrOutput)
}

// The library requirements.
func (o LibraryRequirementsOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LibraryRequirements) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// The filename of the library requirements file.
func (o LibraryRequirementsOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LibraryRequirements) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

type LibraryRequirementsPtrOutput struct{ *pulumi.OutputState }

func (LibraryRequirementsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LibraryRequirements)(nil)).Elem()
}

func (o LibraryRequirementsPtrOutput) ToLibraryRequirementsPtrOutput() LibraryRequirementsPtrOutput {
	return o
}

func (o LibraryRequirementsPtrOutput) ToLibraryRequirementsPtrOutputWithContext(ctx context.Context) LibraryRequirementsPtrOutput {
	return o
}

func (o LibraryRequirementsPtrOutput) Elem() LibraryRequirementsOutput {
	return o.ApplyT(func(v *LibraryRequirements) LibraryRequirements {
		if v != nil {
			return *v
		}
		var ret LibraryRequirements
		return ret
	}).(LibraryRequirementsOutput)
}

// The library requirements.
func (o LibraryRequirementsPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LibraryRequirements) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// The filename of the library requirements file.
func (o LibraryRequirementsPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LibraryRequirements) *string {
		if v == nil {
			return nil
		}
		return v.Filename
	}).(pulumi.StringPtrOutput)
}

// Library requirements for a Big Data pool powered by Apache Spark
type LibraryRequirementsResponse struct {
	// The library requirements.
	Content *string `pulumi:"content"`
	// The filename of the library requirements file.
	Filename *string `pulumi:"filename"`
	// The last update time of the library requirements file.
	Time string `pulumi:"time"`
}

// Library requirements for a Big Data pool powered by Apache Spark
type LibraryRequirementsResponseOutput struct{ *pulumi.OutputState }

func (LibraryRequirementsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LibraryRequirementsResponse)(nil)).Elem()
}

func (o LibraryRequirementsResponseOutput) ToLibraryRequirementsResponseOutput() LibraryRequirementsResponseOutput {
	return o
}

func (o LibraryRequirementsResponseOutput) ToLibraryRequirementsResponseOutputWithContext(ctx context.Context) LibraryRequirementsResponseOutput {
	return o
}

// The library requirements.
func (o LibraryRequirementsResponseOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LibraryRequirementsResponse) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// The filename of the library requirements file.
func (o LibraryRequirementsResponseOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LibraryRequirementsResponse) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

// The last update time of the library requirements file.
func (o LibraryRequirementsResponseOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v LibraryRequirementsResponse) string { return v.Time }).(pulumi.StringOutput)
}

type LibraryRequirementsResponsePtrOutput struct{ *pulumi.OutputState }

func (LibraryRequirementsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LibraryRequirementsResponse)(nil)).Elem()
}

func (o LibraryRequirementsResponsePtrOutput) ToLibraryRequirementsResponsePtrOutput() LibraryRequirementsResponsePtrOutput {
	return o
}

func (o LibraryRequirementsResponsePtrOutput) ToLibraryRequirementsResponsePtrOutputWithContext(ctx context.Context) LibraryRequirementsResponsePtrOutput {
	return o
}

func (o LibraryRequirementsResponsePtrOutput) Elem() LibraryRequirementsResponseOutput {
	return o.ApplyT(func(v *LibraryRequirementsResponse) LibraryRequirementsResponse {
		if v != nil {
			return *v
		}
		var ret LibraryRequirementsResponse
		return ret
	}).(LibraryRequirementsResponseOutput)
}

// The library requirements.
func (o LibraryRequirementsResponsePtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LibraryRequirementsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// The filename of the library requirements file.
func (o LibraryRequirementsResponsePtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LibraryRequirementsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Filename
	}).(pulumi.StringPtrOutput)
}

// The last update time of the library requirements file.
func (o LibraryRequirementsResponsePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LibraryRequirementsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(pulumi.StringPtrOutput)
}

// The key authorization type integration runtime.
type LinkedIntegrationRuntimeKeyAuthorization struct {
	// The authorization type for integration runtime sharing.
	// Expected value is 'Key'.
	AuthorizationType string `pulumi:"authorizationType"`
	// The key used for authorization.
	Key SecureString `pulumi:"key"`
}

// The key authorization type integration runtime.
type LinkedIntegrationRuntimeKeyAuthorizationResponse struct {
	// The authorization type for integration runtime sharing.
	// Expected value is 'Key'.
	AuthorizationType string `pulumi:"authorizationType"`
	// The key used for authorization.
	Key SecureStringResponse `pulumi:"key"`
}

// The role based access control (RBAC) authorization type integration runtime.
type LinkedIntegrationRuntimeRbacAuthorization struct {
	// The authorization type for integration runtime sharing.
	// Expected value is 'RBAC'.
	AuthorizationType string `pulumi:"authorizationType"`
	// The resource identifier of the integration runtime to be shared.
	ResourceId string `pulumi:"resourceId"`
}

// The role based access control (RBAC) authorization type integration runtime.
type LinkedIntegrationRuntimeRbacAuthorizationResponse struct {
	// The authorization type for integration runtime sharing.
	// Expected value is 'RBAC'.
	AuthorizationType string `pulumi:"authorizationType"`
	// The resource identifier of the integration runtime to be shared.
	ResourceId string `pulumi:"resourceId"`
}

// The linked integration runtime information.
type LinkedIntegrationRuntimeResponse struct {
	// The creating time of the linked integration runtime.
	CreateTime string `pulumi:"createTime"`
	// The location of the workspace for which the linked integration runtime belong to.
	DataFactoryLocation string `pulumi:"dataFactoryLocation"`
	// The name of the workspace for which the linked integration runtime belong to.
	DataFactoryName string `pulumi:"dataFactoryName"`
	// The name of the linked integration runtime.
	Name string `pulumi:"name"`
	// The subscription ID for which the linked integration runtime belong to.
	SubscriptionId string `pulumi:"subscriptionId"`
}

// The workspace managed identity
type ManagedIdentity struct {
	// The type of managed identity for the workspace
	Type *ResourceIdentityType `pulumi:"type"`
}

// ManagedIdentityInput is an input type that accepts ManagedIdentityArgs and ManagedIdentityOutput values.
// You can construct a concrete instance of `ManagedIdentityInput` via:
//
//	ManagedIdentityArgs{...}
type ManagedIdentityInput interface {
	pulumi.Input

	ToManagedIdentityOutput() ManagedIdentityOutput
	ToManagedIdentityOutputWithContext(context.Context) ManagedIdentityOutput
}

// The workspace managed identity
type ManagedIdentityArgs struct {
	// The type of managed identity for the workspace
	Type ResourceIdentityTypePtrInput `pulumi:"type"`
}

func (ManagedIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentity)(nil)).Elem()
}

func (i ManagedIdentityArgs) ToManagedIdentityOutput() ManagedIdentityOutput {
	return i.ToManagedIdentityOutputWithContext(context.Background())
}

func (i ManagedIdentityArgs) ToManagedIdentityOutputWithContext(ctx context.Context) ManagedIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityOutput)
}

func (i ManagedIdentityArgs) ToManagedIdentityPtrOutput() ManagedIdentityPtrOutput {
	return i.ToManagedIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedIdentityArgs) ToManagedIdentityPtrOutputWithContext(ctx context.Context) ManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityOutput).ToManagedIdentityPtrOutputWithContext(ctx)
}

// ManagedIdentityPtrInput is an input type that accepts ManagedIdentityArgs, ManagedIdentityPtr and ManagedIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedIdentityPtrInput` via:
//
//	        ManagedIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedIdentityPtrInput interface {
	pulumi.Input

	ToManagedIdentityPtrOutput() ManagedIdentityPtrOutput
	ToManagedIdentityPtrOutputWithContext(context.Context) ManagedIdentityPtrOutput
}

type managedIdentityPtrType ManagedIdentityArgs

func ManagedIdentityPtr(v *ManagedIdentityArgs) ManagedIdentityPtrInput {
	return (*managedIdentityPtrType)(v)
}

func (*managedIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentity)(nil)).Elem()
}

func (i *managedIdentityPtrType) ToManagedIdentityPtrOutput() ManagedIdentityPtrOutput {
	return i.ToManagedIdentityPtrOutputWithContext(context.Background())
}

func (i *managedIdentityPtrType) ToManagedIdentityPtrOutputWithContext(ctx context.Context) ManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityPtrOutput)
}

// The workspace managed identity
type ManagedIdentityOutput struct{ *pulumi.OutputState }

func (ManagedIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentity)(nil)).Elem()
}

func (o ManagedIdentityOutput) ToManagedIdentityOutput() ManagedIdentityOutput {
	return o
}

func (o ManagedIdentityOutput) ToManagedIdentityOutputWithContext(ctx context.Context) ManagedIdentityOutput {
	return o
}

func (o ManagedIdentityOutput) ToManagedIdentityPtrOutput() ManagedIdentityPtrOutput {
	return o.ToManagedIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedIdentityOutput) ToManagedIdentityPtrOutputWithContext(ctx context.Context) ManagedIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedIdentity) *ManagedIdentity {
		return &v
	}).(ManagedIdentityPtrOutput)
}

// The type of managed identity for the workspace
func (o ManagedIdentityOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v ManagedIdentity) *ResourceIdentityType { return v.Type }).(ResourceIdentityTypePtrOutput)
}

type ManagedIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentity)(nil)).Elem()
}

func (o ManagedIdentityPtrOutput) ToManagedIdentityPtrOutput() ManagedIdentityPtrOutput {
	return o
}

func (o ManagedIdentityPtrOutput) ToManagedIdentityPtrOutputWithContext(ctx context.Context) ManagedIdentityPtrOutput {
	return o
}

func (o ManagedIdentityPtrOutput) Elem() ManagedIdentityOutput {
	return o.ApplyT(func(v *ManagedIdentity) ManagedIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedIdentity
		return ret
	}).(ManagedIdentityOutput)
}

// The type of managed identity for the workspace
func (o ManagedIdentityPtrOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v *ManagedIdentity) *ResourceIdentityType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(ResourceIdentityTypePtrOutput)
}

// The workspace managed identity
type ManagedIdentityResponse struct {
	// The principal ID of the workspace managed identity
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the workspace managed identity
	TenantId string `pulumi:"tenantId"`
	// The type of managed identity for the workspace
	Type *string `pulumi:"type"`
}

// The workspace managed identity
type ManagedIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityResponse)(nil)).Elem()
}

func (o ManagedIdentityResponseOutput) ToManagedIdentityResponseOutput() ManagedIdentityResponseOutput {
	return o
}

func (o ManagedIdentityResponseOutput) ToManagedIdentityResponseOutputWithContext(ctx context.Context) ManagedIdentityResponseOutput {
	return o
}

// The principal ID of the workspace managed identity
func (o ManagedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the workspace managed identity
func (o ManagedIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of managed identity for the workspace
func (o ManagedIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ManagedIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityResponse)(nil)).Elem()
}

func (o ManagedIdentityResponsePtrOutput) ToManagedIdentityResponsePtrOutput() ManagedIdentityResponsePtrOutput {
	return o
}

func (o ManagedIdentityResponsePtrOutput) ToManagedIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedIdentityResponsePtrOutput {
	return o
}

func (o ManagedIdentityResponsePtrOutput) Elem() ManagedIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedIdentityResponse) ManagedIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedIdentityResponse
		return ret
	}).(ManagedIdentityResponseOutput)
}

// The principal ID of the workspace managed identity
func (o ManagedIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the workspace managed identity
func (o ManagedIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of managed identity for the workspace
func (o ManagedIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Managed integration runtime, including managed elastic and managed dedicated integration runtimes.
type ManagedIntegrationRuntime struct {
	// The compute resource for managed integration runtime.
	ComputeProperties *IntegrationRuntimeComputeProperties `pulumi:"computeProperties"`
	// Integration runtime description.
	Description *string `pulumi:"description"`
	// Managed Virtual Network reference.
	ManagedVirtualNetwork *ManagedVirtualNetworkReference `pulumi:"managedVirtualNetwork"`
	// SSIS properties for managed integration runtime.
	SsisProperties *IntegrationRuntimeSsisProperties `pulumi:"ssisProperties"`
	// The type of integration runtime.
	// Expected value is 'Managed'.
	Type string `pulumi:"type"`
}

// Error definition for managed integration runtime.
type ManagedIntegrationRuntimeErrorResponse struct {
	// Error code.
	Code string `pulumi:"code"`
	// Error message.
	Message string `pulumi:"message"`
	// Managed integration runtime error parameters.
	Parameters []string `pulumi:"parameters"`
	// The time when the error occurred.
	Time string `pulumi:"time"`
}

// Properties of integration runtime node.
type ManagedIntegrationRuntimeNodeResponse struct {
	// The errors that occurred on this integration runtime node.
	Errors []ManagedIntegrationRuntimeErrorResponse `pulumi:"errors"`
	// The managed integration runtime node id.
	NodeId string `pulumi:"nodeId"`
	// The managed integration runtime node status.
	Status string `pulumi:"status"`
}

// Properties of managed integration runtime operation result.
type ManagedIntegrationRuntimeOperationResultResponse struct {
	// The activity id for the operation request.
	ActivityId string `pulumi:"activityId"`
	// The error code.
	ErrorCode string `pulumi:"errorCode"`
	// Managed integration runtime error parameters.
	Parameters []string `pulumi:"parameters"`
	// The operation result.
	Result string `pulumi:"result"`
	// The start time of the operation.
	StartTime string `pulumi:"startTime"`
	// The operation type. Could be start or stop.
	Type string `pulumi:"type"`
}

// Managed integration runtime, including managed elastic and managed dedicated integration runtimes.
type ManagedIntegrationRuntimeResponse struct {
	// The compute resource for managed integration runtime.
	ComputeProperties *IntegrationRuntimeComputePropertiesResponse `pulumi:"computeProperties"`
	// Integration runtime description.
	Description *string `pulumi:"description"`
	// Managed Virtual Network reference.
	ManagedVirtualNetwork *ManagedVirtualNetworkReferenceResponse `pulumi:"managedVirtualNetwork"`
	// SSIS properties for managed integration runtime.
	SsisProperties *IntegrationRuntimeSsisPropertiesResponse `pulumi:"ssisProperties"`
	// Integration runtime state, only valid for managed dedicated integration runtime.
	State string `pulumi:"state"`
	// The type of integration runtime.
	// Expected value is 'Managed'.
	Type string `pulumi:"type"`
}

// Managed integration runtime status.
type ManagedIntegrationRuntimeStatusResponse struct {
	// The time at which the integration runtime was created, in ISO8601 format.
	CreateTime string `pulumi:"createTime"`
	// The workspace name which the integration runtime belong to.
	DataFactoryName string `pulumi:"dataFactoryName"`
	// The last operation result that occurred on this integration runtime.
	LastOperation ManagedIntegrationRuntimeOperationResultResponse `pulumi:"lastOperation"`
	// The list of nodes for managed integration runtime.
	Nodes []ManagedIntegrationRuntimeNodeResponse `pulumi:"nodes"`
	// The errors that occurred on this integration runtime.
	OtherErrors []ManagedIntegrationRuntimeErrorResponse `pulumi:"otherErrors"`
	// The state of integration runtime.
	State string `pulumi:"state"`
	// The type of integration runtime.
	// Expected value is 'Managed'.
	Type string `pulumi:"type"`
}

// Managed Virtual Network reference type.
type ManagedVirtualNetworkReference struct {
	// Reference ManagedVirtualNetwork name.
	ReferenceName string `pulumi:"referenceName"`
	// Managed Virtual Network reference type.
	Type string `pulumi:"type"`
}

// Managed Virtual Network reference type.
type ManagedVirtualNetworkReferenceResponse struct {
	// Reference ManagedVirtualNetwork name.
	ReferenceName string `pulumi:"referenceName"`
	// Managed Virtual Network reference type.
	Type string `pulumi:"type"`
}

// Managed Virtual Network Settings
type ManagedVirtualNetworkSettings struct {
	// Allowed Aad Tenant Ids For Linking
	AllowedAadTenantIdsForLinking []string `pulumi:"allowedAadTenantIdsForLinking"`
	// Linked Access Check On Target Resource
	LinkedAccessCheckOnTargetResource *bool `pulumi:"linkedAccessCheckOnTargetResource"`
	// Prevent Data Exfiltration
	PreventDataExfiltration *bool `pulumi:"preventDataExfiltration"`
}

// ManagedVirtualNetworkSettingsInput is an input type that accepts ManagedVirtualNetworkSettingsArgs and ManagedVirtualNetworkSettingsOutput values.
// You can construct a concrete instance of `ManagedVirtualNetworkSettingsInput` via:
//
//	ManagedVirtualNetworkSettingsArgs{...}
type ManagedVirtualNetworkSettingsInput interface {
	pulumi.Input

	ToManagedVirtualNetworkSettingsOutput() ManagedVirtualNetworkSettingsOutput
	ToManagedVirtualNetworkSettingsOutputWithContext(context.Context) ManagedVirtualNetworkSettingsOutput
}

// Managed Virtual Network Settings
type ManagedVirtualNetworkSettingsArgs struct {
	// Allowed Aad Tenant Ids For Linking
	AllowedAadTenantIdsForLinking pulumi.StringArrayInput `pulumi:"allowedAadTenantIdsForLinking"`
	// Linked Access Check On Target Resource
	LinkedAccessCheckOnTargetResource pulumi.BoolPtrInput `pulumi:"linkedAccessCheckOnTargetResource"`
	// Prevent Data Exfiltration
	PreventDataExfiltration pulumi.BoolPtrInput `pulumi:"preventDataExfiltration"`
}

func (ManagedVirtualNetworkSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedVirtualNetworkSettings)(nil)).Elem()
}

func (i ManagedVirtualNetworkSettingsArgs) ToManagedVirtualNetworkSettingsOutput() ManagedVirtualNetworkSettingsOutput {
	return i.ToManagedVirtualNetworkSettingsOutputWithContext(context.Background())
}

func (i ManagedVirtualNetworkSettingsArgs) ToManagedVirtualNetworkSettingsOutputWithContext(ctx context.Context) ManagedVirtualNetworkSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedVirtualNetworkSettingsOutput)
}

func (i ManagedVirtualNetworkSettingsArgs) ToManagedVirtualNetworkSettingsPtrOutput() ManagedVirtualNetworkSettingsPtrOutput {
	return i.ToManagedVirtualNetworkSettingsPtrOutputWithContext(context.Background())
}

func (i ManagedVirtualNetworkSettingsArgs) ToManagedVirtualNetworkSettingsPtrOutputWithContext(ctx context.Context) ManagedVirtualNetworkSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedVirtualNetworkSettingsOutput).ToManagedVirtualNetworkSettingsPtrOutputWithContext(ctx)
}

// ManagedVirtualNetworkSettingsPtrInput is an input type that accepts ManagedVirtualNetworkSettingsArgs, ManagedVirtualNetworkSettingsPtr and ManagedVirtualNetworkSettingsPtrOutput values.
// You can construct a concrete instance of `ManagedVirtualNetworkSettingsPtrInput` via:
//
//	        ManagedVirtualNetworkSettingsArgs{...}
//
//	or:
//
//	        nil
type ManagedVirtualNetworkSettingsPtrInput interface {
	pulumi.Input

	ToManagedVirtualNetworkSettingsPtrOutput() ManagedVirtualNetworkSettingsPtrOutput
	ToManagedVirtualNetworkSettingsPtrOutputWithContext(context.Context) ManagedVirtualNetworkSettingsPtrOutput
}

type managedVirtualNetworkSettingsPtrType ManagedVirtualNetworkSettingsArgs

func ManagedVirtualNetworkSettingsPtr(v *ManagedVirtualNetworkSettingsArgs) ManagedVirtualNetworkSettingsPtrInput {
	return (*managedVirtualNetworkSettingsPtrType)(v)
}

func (*managedVirtualNetworkSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedVirtualNetworkSettings)(nil)).Elem()
}

func (i *managedVirtualNetworkSettingsPtrType) ToManagedVirtualNetworkSettingsPtrOutput() ManagedVirtualNetworkSettingsPtrOutput {
	return i.ToManagedVirtualNetworkSettingsPtrOutputWithContext(context.Background())
}

func (i *managedVirtualNetworkSettingsPtrType) ToManagedVirtualNetworkSettingsPtrOutputWithContext(ctx context.Context) ManagedVirtualNetworkSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedVirtualNetworkSettingsPtrOutput)
}

// Managed Virtual Network Settings
type ManagedVirtualNetworkSettingsOutput struct{ *pulumi.OutputState }

func (ManagedVirtualNetworkSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedVirtualNetworkSettings)(nil)).Elem()
}

func (o ManagedVirtualNetworkSettingsOutput) ToManagedVirtualNetworkSettingsOutput() ManagedVirtualNetworkSettingsOutput {
	return o
}

func (o ManagedVirtualNetworkSettingsOutput) ToManagedVirtualNetworkSettingsOutputWithContext(ctx context.Context) ManagedVirtualNetworkSettingsOutput {
	return o
}

func (o ManagedVirtualNetworkSettingsOutput) ToManagedVirtualNetworkSettingsPtrOutput() ManagedVirtualNetworkSettingsPtrOutput {
	return o.ToManagedVirtualNetworkSettingsPtrOutputWithContext(context.Background())
}

func (o ManagedVirtualNetworkSettingsOutput) ToManagedVirtualNetworkSettingsPtrOutputWithContext(ctx context.Context) ManagedVirtualNetworkSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedVirtualNetworkSettings) *ManagedVirtualNetworkSettings {
		return &v
	}).(ManagedVirtualNetworkSettingsPtrOutput)
}

// Allowed Aad Tenant Ids For Linking
func (o ManagedVirtualNetworkSettingsOutput) AllowedAadTenantIdsForLinking() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedVirtualNetworkSettings) []string { return v.AllowedAadTenantIdsForLinking }).(pulumi.StringArrayOutput)
}

// Linked Access Check On Target Resource
func (o ManagedVirtualNetworkSettingsOutput) LinkedAccessCheckOnTargetResource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedVirtualNetworkSettings) *bool { return v.LinkedAccessCheckOnTargetResource }).(pulumi.BoolPtrOutput)
}

// Prevent Data Exfiltration
func (o ManagedVirtualNetworkSettingsOutput) PreventDataExfiltration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedVirtualNetworkSettings) *bool { return v.PreventDataExfiltration }).(pulumi.BoolPtrOutput)
}

type ManagedVirtualNetworkSettingsPtrOutput struct{ *pulumi.OutputState }

func (ManagedVirtualNetworkSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedVirtualNetworkSettings)(nil)).Elem()
}

func (o ManagedVirtualNetworkSettingsPtrOutput) ToManagedVirtualNetworkSettingsPtrOutput() ManagedVirtualNetworkSettingsPtrOutput {
	return o
}

func (o ManagedVirtualNetworkSettingsPtrOutput) ToManagedVirtualNetworkSettingsPtrOutputWithContext(ctx context.Context) ManagedVirtualNetworkSettingsPtrOutput {
	return o
}

func (o ManagedVirtualNetworkSettingsPtrOutput) Elem() ManagedVirtualNetworkSettingsOutput {
	return o.ApplyT(func(v *ManagedVirtualNetworkSettings) ManagedVirtualNetworkSettings {
		if v != nil {
			return *v
		}
		var ret ManagedVirtualNetworkSettings
		return ret
	}).(ManagedVirtualNetworkSettingsOutput)
}

// Allowed Aad Tenant Ids For Linking
func (o ManagedVirtualNetworkSettingsPtrOutput) AllowedAadTenantIdsForLinking() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedVirtualNetworkSettings) []string {
		if v == nil {
			return nil
		}
		return v.AllowedAadTenantIdsForLinking
	}).(pulumi.StringArrayOutput)
}

// Linked Access Check On Target Resource
func (o ManagedVirtualNetworkSettingsPtrOutput) LinkedAccessCheckOnTargetResource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedVirtualNetworkSettings) *bool {
		if v == nil {
			return nil
		}
		return v.LinkedAccessCheckOnTargetResource
	}).(pulumi.BoolPtrOutput)
}

// Prevent Data Exfiltration
func (o ManagedVirtualNetworkSettingsPtrOutput) PreventDataExfiltration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedVirtualNetworkSettings) *bool {
		if v == nil {
			return nil
		}
		return v.PreventDataExfiltration
	}).(pulumi.BoolPtrOutput)
}

// Managed Virtual Network Settings
type ManagedVirtualNetworkSettingsResponse struct {
	// Allowed Aad Tenant Ids For Linking
	AllowedAadTenantIdsForLinking []string `pulumi:"allowedAadTenantIdsForLinking"`
	// Linked Access Check On Target Resource
	LinkedAccessCheckOnTargetResource *bool `pulumi:"linkedAccessCheckOnTargetResource"`
	// Prevent Data Exfiltration
	PreventDataExfiltration *bool `pulumi:"preventDataExfiltration"`
}

// Managed Virtual Network Settings
type ManagedVirtualNetworkSettingsResponseOutput struct{ *pulumi.OutputState }

func (ManagedVirtualNetworkSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedVirtualNetworkSettingsResponse)(nil)).Elem()
}

func (o ManagedVirtualNetworkSettingsResponseOutput) ToManagedVirtualNetworkSettingsResponseOutput() ManagedVirtualNetworkSettingsResponseOutput {
	return o
}

func (o ManagedVirtualNetworkSettingsResponseOutput) ToManagedVirtualNetworkSettingsResponseOutputWithContext(ctx context.Context) ManagedVirtualNetworkSettingsResponseOutput {
	return o
}

// Allowed Aad Tenant Ids For Linking
func (o ManagedVirtualNetworkSettingsResponseOutput) AllowedAadTenantIdsForLinking() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedVirtualNetworkSettingsResponse) []string { return v.AllowedAadTenantIdsForLinking }).(pulumi.StringArrayOutput)
}

// Linked Access Check On Target Resource
func (o ManagedVirtualNetworkSettingsResponseOutput) LinkedAccessCheckOnTargetResource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedVirtualNetworkSettingsResponse) *bool { return v.LinkedAccessCheckOnTargetResource }).(pulumi.BoolPtrOutput)
}

// Prevent Data Exfiltration
func (o ManagedVirtualNetworkSettingsResponseOutput) PreventDataExfiltration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedVirtualNetworkSettingsResponse) *bool { return v.PreventDataExfiltration }).(pulumi.BoolPtrOutput)
}

type ManagedVirtualNetworkSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedVirtualNetworkSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedVirtualNetworkSettingsResponse)(nil)).Elem()
}

func (o ManagedVirtualNetworkSettingsResponsePtrOutput) ToManagedVirtualNetworkSettingsResponsePtrOutput() ManagedVirtualNetworkSettingsResponsePtrOutput {
	return o
}

func (o ManagedVirtualNetworkSettingsResponsePtrOutput) ToManagedVirtualNetworkSettingsResponsePtrOutputWithContext(ctx context.Context) ManagedVirtualNetworkSettingsResponsePtrOutput {
	return o
}

func (o ManagedVirtualNetworkSettingsResponsePtrOutput) Elem() ManagedVirtualNetworkSettingsResponseOutput {
	return o.ApplyT(func(v *ManagedVirtualNetworkSettingsResponse) ManagedVirtualNetworkSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ManagedVirtualNetworkSettingsResponse
		return ret
	}).(ManagedVirtualNetworkSettingsResponseOutput)
}

// Allowed Aad Tenant Ids For Linking
func (o ManagedVirtualNetworkSettingsResponsePtrOutput) AllowedAadTenantIdsForLinking() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedVirtualNetworkSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedAadTenantIdsForLinking
	}).(pulumi.StringArrayOutput)
}

// Linked Access Check On Target Resource
func (o ManagedVirtualNetworkSettingsResponsePtrOutput) LinkedAccessCheckOnTargetResource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedVirtualNetworkSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.LinkedAccessCheckOnTargetResource
	}).(pulumi.BoolPtrOutput)
}

// Prevent Data Exfiltration
func (o ManagedVirtualNetworkSettingsResponsePtrOutput) PreventDataExfiltration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedVirtualNetworkSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.PreventDataExfiltration
	}).(pulumi.BoolPtrOutput)
}

// A private endpoint connection
type PrivateEndpointConnectionType struct {
	// Connection state of the private endpoint connection.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState `pulumi:"privateLinkServiceConnectionState"`
}

// PrivateEndpointConnectionTypeInput is an input type that accepts PrivateEndpointConnectionTypeArgs and PrivateEndpointConnectionTypeOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionTypeInput` via:
//
//	PrivateEndpointConnectionTypeArgs{...}
type PrivateEndpointConnectionTypeInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionTypeOutput() PrivateEndpointConnectionTypeOutput
	ToPrivateEndpointConnectionTypeOutputWithContext(context.Context) PrivateEndpointConnectionTypeOutput
}

// A private endpoint connection
type PrivateEndpointConnectionTypeArgs struct {
	// Connection state of the private endpoint connection.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStatePtrInput `pulumi:"privateLinkServiceConnectionState"`
}

func (PrivateEndpointConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionType)(nil)).Elem()
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypeOutput() PrivateEndpointConnectionTypeOutput {
	return i.ToPrivateEndpointConnectionTypeOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypeOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionTypeOutput)
}

// PrivateEndpointConnectionTypeArrayInput is an input type that accepts PrivateEndpointConnectionTypeArray and PrivateEndpointConnectionTypeArrayOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionTypeArrayInput` via:
//
//	PrivateEndpointConnectionTypeArray{ PrivateEndpointConnectionTypeArgs{...} }
type PrivateEndpointConnectionTypeArrayInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionTypeArrayOutput() PrivateEndpointConnectionTypeArrayOutput
	ToPrivateEndpointConnectionTypeArrayOutputWithContext(context.Context) PrivateEndpointConnectionTypeArrayOutput
}

type PrivateEndpointConnectionTypeArray []PrivateEndpointConnectionTypeInput

func (PrivateEndpointConnectionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionType)(nil)).Elem()
}

func (i PrivateEndpointConnectionTypeArray) ToPrivateEndpointConnectionTypeArrayOutput() PrivateEndpointConnectionTypeArrayOutput {
	return i.ToPrivateEndpointConnectionTypeArrayOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionTypeArray) ToPrivateEndpointConnectionTypeArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionTypeArrayOutput)
}

// A private endpoint connection
type PrivateEndpointConnectionTypeOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionType)(nil)).Elem()
}

func (o PrivateEndpointConnectionTypeOutput) ToPrivateEndpointConnectionTypeOutput() PrivateEndpointConnectionTypeOutput {
	return o
}

func (o PrivateEndpointConnectionTypeOutput) ToPrivateEndpointConnectionTypeOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypeOutput {
	return o
}

// Connection state of the private endpoint connection.
func (o PrivateEndpointConnectionTypeOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionType) *PrivateLinkServiceConnectionState {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

type PrivateEndpointConnectionTypeArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionType)(nil)).Elem()
}

func (o PrivateEndpointConnectionTypeArrayOutput) ToPrivateEndpointConnectionTypeArrayOutput() PrivateEndpointConnectionTypeArrayOutput {
	return o
}

func (o PrivateEndpointConnectionTypeArrayOutput) ToPrivateEndpointConnectionTypeArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypeArrayOutput {
	return o
}

func (o PrivateEndpointConnectionTypeArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionType {
		return vs[0].([]PrivateEndpointConnectionType)[vs[1].(int)]
	}).(PrivateEndpointConnectionTypeOutput)
}

// Private Endpoint Connection For Private Link Hub - Basic
type PrivateEndpointConnectionForPrivateLinkHubBasicResponse struct {
	// identifier
	Id string `pulumi:"id"`
	// The private endpoint which the connection belongs to.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// Connection state of the private endpoint connection.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// Provisioning state of the private endpoint connection.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Private Endpoint Connection For Private Link Hub - Basic
type PrivateEndpointConnectionForPrivateLinkHubBasicResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionForPrivateLinkHubBasicResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionForPrivateLinkHubBasicResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionForPrivateLinkHubBasicResponseOutput) ToPrivateEndpointConnectionForPrivateLinkHubBasicResponseOutput() PrivateEndpointConnectionForPrivateLinkHubBasicResponseOutput {
	return o
}

func (o PrivateEndpointConnectionForPrivateLinkHubBasicResponseOutput) ToPrivateEndpointConnectionForPrivateLinkHubBasicResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionForPrivateLinkHubBasicResponseOutput {
	return o
}

// identifier
func (o PrivateEndpointConnectionForPrivateLinkHubBasicResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionForPrivateLinkHubBasicResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The private endpoint which the connection belongs to.
func (o PrivateEndpointConnectionForPrivateLinkHubBasicResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionForPrivateLinkHubBasicResponse) *PrivateEndpointResponse {
		return v.PrivateEndpoint
	}).(PrivateEndpointResponsePtrOutput)
}

// Connection state of the private endpoint connection.
func (o PrivateEndpointConnectionForPrivateLinkHubBasicResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionForPrivateLinkHubBasicResponse) *PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// Provisioning state of the private endpoint connection.
func (o PrivateEndpointConnectionForPrivateLinkHubBasicResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionForPrivateLinkHubBasicResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionForPrivateLinkHubBasicResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionForPrivateLinkHubBasicResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionForPrivateLinkHubBasicResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionForPrivateLinkHubBasicResponseArrayOutput) ToPrivateEndpointConnectionForPrivateLinkHubBasicResponseArrayOutput() PrivateEndpointConnectionForPrivateLinkHubBasicResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionForPrivateLinkHubBasicResponseArrayOutput) ToPrivateEndpointConnectionForPrivateLinkHubBasicResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionForPrivateLinkHubBasicResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionForPrivateLinkHubBasicResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionForPrivateLinkHubBasicResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionForPrivateLinkHubBasicResponse {
		return vs[0].([]PrivateEndpointConnectionForPrivateLinkHubBasicResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionForPrivateLinkHubBasicResponseOutput)
}

// A private endpoint connection
type PrivateEndpointConnectionResponse struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The private endpoint which the connection belongs to.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// Connection state of the private endpoint connection.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// Provisioning state of the private endpoint connection.
	ProvisioningState string `pulumi:"provisioningState"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// A private endpoint connection
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The private endpoint which the connection belongs to.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// Connection state of the private endpoint connection.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// Provisioning state of the private endpoint connection.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// Private endpoint details
type PrivateEndpointResponse struct {
	// Resource id of the private endpoint.
	Id string `pulumi:"id"`
}

// Private endpoint details
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// Resource id of the private endpoint.
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// Resource id of the private endpoint.
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Connection state details of the private endpoint
type PrivateLinkServiceConnectionState struct {
	// The private link service connection description.
	Description *string `pulumi:"description"`
	// The private link service connection status.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//	PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// Connection state details of the private endpoint
type PrivateLinkServiceConnectionStateArgs struct {
	// The private link service connection description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The private link service connection status.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput).ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStatePtrInput is an input type that accepts PrivateLinkServiceConnectionStateArgs, PrivateLinkServiceConnectionStatePtr and PrivateLinkServiceConnectionStatePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStatePtrInput` via:
//
//	        PrivateLinkServiceConnectionStateArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkServiceConnectionStatePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput
	ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStatePtrOutput
}

type privateLinkServiceConnectionStatePtrType PrivateLinkServiceConnectionStateArgs

func PrivateLinkServiceConnectionStatePtr(v *PrivateLinkServiceConnectionStateArgs) PrivateLinkServiceConnectionStatePtrInput {
	return (*privateLinkServiceConnectionStatePtrType)(v)
}

func (*privateLinkServiceConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStatePtrOutput)
}

// Connection state details of the private endpoint
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkServiceConnectionState) *PrivateLinkServiceConnectionState {
		return &v
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// The private link service connection description.
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) Elem() PrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) PrivateLinkServiceConnectionState {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionState
		return ret
	}).(PrivateLinkServiceConnectionStateOutput)
}

// The private link service connection description.
func (o PrivateLinkServiceConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o PrivateLinkServiceConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Connection state details of the private endpoint
type PrivateLinkServiceConnectionStateResponse struct {
	// The actions required for private link service connection.
	ActionsRequired string `pulumi:"actionsRequired"`
	// The private link service connection description.
	Description *string `pulumi:"description"`
	// The private link service connection status.
	Status *string `pulumi:"status"`
}

// Connection state details of the private endpoint
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// The actions required for private link service connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) string { return v.ActionsRequired }).(pulumi.StringOutput)
}

// The private link service connection description.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Elem() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) PrivateLinkServiceConnectionStateResponse {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionStateResponse
		return ret
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The actions required for private link service connection.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The private link service connection description.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Purview Configuration
type PurviewConfiguration struct {
	// Purview Resource ID
	PurviewResourceId *string `pulumi:"purviewResourceId"`
}

// PurviewConfigurationInput is an input type that accepts PurviewConfigurationArgs and PurviewConfigurationOutput values.
// You can construct a concrete instance of `PurviewConfigurationInput` via:
//
//	PurviewConfigurationArgs{...}
type PurviewConfigurationInput interface {
	pulumi.Input

	ToPurviewConfigurationOutput() PurviewConfigurationOutput
	ToPurviewConfigurationOutputWithContext(context.Context) PurviewConfigurationOutput
}

// Purview Configuration
type PurviewConfigurationArgs struct {
	// Purview Resource ID
	PurviewResourceId pulumi.StringPtrInput `pulumi:"purviewResourceId"`
}

func (PurviewConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PurviewConfiguration)(nil)).Elem()
}

func (i PurviewConfigurationArgs) ToPurviewConfigurationOutput() PurviewConfigurationOutput {
	return i.ToPurviewConfigurationOutputWithContext(context.Background())
}

func (i PurviewConfigurationArgs) ToPurviewConfigurationOutputWithContext(ctx context.Context) PurviewConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PurviewConfigurationOutput)
}

func (i PurviewConfigurationArgs) ToPurviewConfigurationPtrOutput() PurviewConfigurationPtrOutput {
	return i.ToPurviewConfigurationPtrOutputWithContext(context.Background())
}

func (i PurviewConfigurationArgs) ToPurviewConfigurationPtrOutputWithContext(ctx context.Context) PurviewConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PurviewConfigurationOutput).ToPurviewConfigurationPtrOutputWithContext(ctx)
}

// PurviewConfigurationPtrInput is an input type that accepts PurviewConfigurationArgs, PurviewConfigurationPtr and PurviewConfigurationPtrOutput values.
// You can construct a concrete instance of `PurviewConfigurationPtrInput` via:
//
//	        PurviewConfigurationArgs{...}
//
//	or:
//
//	        nil
type PurviewConfigurationPtrInput interface {
	pulumi.Input

	ToPurviewConfigurationPtrOutput() PurviewConfigurationPtrOutput
	ToPurviewConfigurationPtrOutputWithContext(context.Context) PurviewConfigurationPtrOutput
}

type purviewConfigurationPtrType PurviewConfigurationArgs

func PurviewConfigurationPtr(v *PurviewConfigurationArgs) PurviewConfigurationPtrInput {
	return (*purviewConfigurationPtrType)(v)
}

func (*purviewConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PurviewConfiguration)(nil)).Elem()
}

func (i *purviewConfigurationPtrType) ToPurviewConfigurationPtrOutput() PurviewConfigurationPtrOutput {
	return i.ToPurviewConfigurationPtrOutputWithContext(context.Background())
}

func (i *purviewConfigurationPtrType) ToPurviewConfigurationPtrOutputWithContext(ctx context.Context) PurviewConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PurviewConfigurationPtrOutput)
}

// Purview Configuration
type PurviewConfigurationOutput struct{ *pulumi.OutputState }

func (PurviewConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PurviewConfiguration)(nil)).Elem()
}

func (o PurviewConfigurationOutput) ToPurviewConfigurationOutput() PurviewConfigurationOutput {
	return o
}

func (o PurviewConfigurationOutput) ToPurviewConfigurationOutputWithContext(ctx context.Context) PurviewConfigurationOutput {
	return o
}

func (o PurviewConfigurationOutput) ToPurviewConfigurationPtrOutput() PurviewConfigurationPtrOutput {
	return o.ToPurviewConfigurationPtrOutputWithContext(context.Background())
}

func (o PurviewConfigurationOutput) ToPurviewConfigurationPtrOutputWithContext(ctx context.Context) PurviewConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PurviewConfiguration) *PurviewConfiguration {
		return &v
	}).(PurviewConfigurationPtrOutput)
}

// Purview Resource ID
func (o PurviewConfigurationOutput) PurviewResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PurviewConfiguration) *string { return v.PurviewResourceId }).(pulumi.StringPtrOutput)
}

type PurviewConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PurviewConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PurviewConfiguration)(nil)).Elem()
}

func (o PurviewConfigurationPtrOutput) ToPurviewConfigurationPtrOutput() PurviewConfigurationPtrOutput {
	return o
}

func (o PurviewConfigurationPtrOutput) ToPurviewConfigurationPtrOutputWithContext(ctx context.Context) PurviewConfigurationPtrOutput {
	return o
}

func (o PurviewConfigurationPtrOutput) Elem() PurviewConfigurationOutput {
	return o.ApplyT(func(v *PurviewConfiguration) PurviewConfiguration {
		if v != nil {
			return *v
		}
		var ret PurviewConfiguration
		return ret
	}).(PurviewConfigurationOutput)
}

// Purview Resource ID
func (o PurviewConfigurationPtrOutput) PurviewResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PurviewConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PurviewResourceId
	}).(pulumi.StringPtrOutput)
}

// Purview Configuration
type PurviewConfigurationResponse struct {
	// Purview Resource ID
	PurviewResourceId *string `pulumi:"purviewResourceId"`
}

// Purview Configuration
type PurviewConfigurationResponseOutput struct{ *pulumi.OutputState }

func (PurviewConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PurviewConfigurationResponse)(nil)).Elem()
}

func (o PurviewConfigurationResponseOutput) ToPurviewConfigurationResponseOutput() PurviewConfigurationResponseOutput {
	return o
}

func (o PurviewConfigurationResponseOutput) ToPurviewConfigurationResponseOutputWithContext(ctx context.Context) PurviewConfigurationResponseOutput {
	return o
}

// Purview Resource ID
func (o PurviewConfigurationResponseOutput) PurviewResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PurviewConfigurationResponse) *string { return v.PurviewResourceId }).(pulumi.StringPtrOutput)
}

type PurviewConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (PurviewConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PurviewConfigurationResponse)(nil)).Elem()
}

func (o PurviewConfigurationResponsePtrOutput) ToPurviewConfigurationResponsePtrOutput() PurviewConfigurationResponsePtrOutput {
	return o
}

func (o PurviewConfigurationResponsePtrOutput) ToPurviewConfigurationResponsePtrOutputWithContext(ctx context.Context) PurviewConfigurationResponsePtrOutput {
	return o
}

func (o PurviewConfigurationResponsePtrOutput) Elem() PurviewConfigurationResponseOutput {
	return o.ApplyT(func(v *PurviewConfigurationResponse) PurviewConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret PurviewConfigurationResponse
		return ret
	}).(PurviewConfigurationResponseOutput)
}

// Purview Resource ID
func (o PurviewConfigurationResponsePtrOutput) PurviewResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PurviewConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PurviewResourceId
	}).(pulumi.StringPtrOutput)
}

// Azure Synapse secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.
type SecureString struct {
	// Type of the secret.
	// Expected value is 'SecureString'.
	Type string `pulumi:"type"`
	// Value of secure string.
	Value string `pulumi:"value"`
}

// Azure Synapse secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.
type SecureStringResponse struct {
	// Type of the secret.
	// Expected value is 'SecureString'.
	Type string `pulumi:"type"`
	// Value of secure string.
	Value string `pulumi:"value"`
}

// Self-hosted integration runtime.
type SelfHostedIntegrationRuntime struct {
	// Integration runtime description.
	Description *string `pulumi:"description"`
	// Linked integration runtime type from data factory
	LinkedInfo interface{} `pulumi:"linkedInfo"`
	// The type of integration runtime.
	// Expected value is 'SelfHosted'.
	Type string `pulumi:"type"`
}

// Properties of Self-hosted integration runtime node.
type SelfHostedIntegrationRuntimeNodeResponse struct {
	// The integration runtime capabilities dictionary
	Capabilities map[string]string `pulumi:"capabilities"`
	// Maximum concurrent jobs on the integration runtime node.
	ConcurrentJobsLimit int `pulumi:"concurrentJobsLimit"`
	// The time at which the integration runtime will expire in ISO8601 format.
	ExpiryTime string `pulumi:"expiryTime"`
	// URI for the host machine of the integration runtime.
	HostServiceUri string `pulumi:"hostServiceUri"`
	// Indicates whether this node is the active dispatcher for integration runtime requests.
	IsActiveDispatcher bool `pulumi:"isActiveDispatcher"`
	// The most recent time at which the integration runtime was connected in ISO8601 format.
	LastConnectTime string `pulumi:"lastConnectTime"`
	// The last time for the integration runtime node update end.
	LastEndUpdateTime string `pulumi:"lastEndUpdateTime"`
	// The time the node last started up.
	LastStartTime string `pulumi:"lastStartTime"`
	// The last time for the integration runtime node update start.
	LastStartUpdateTime string `pulumi:"lastStartUpdateTime"`
	// The integration runtime node last stop time.
	LastStopTime string `pulumi:"lastStopTime"`
	// The result of the last integration runtime node update.
	LastUpdateResult string `pulumi:"lastUpdateResult"`
	// Machine name of the integration runtime node.
	MachineName string `pulumi:"machineName"`
	// The maximum concurrent jobs in this integration runtime.
	MaxConcurrentJobs int `pulumi:"maxConcurrentJobs"`
	// Name of the integration runtime node.
	NodeName string `pulumi:"nodeName"`
	// The time at which the integration runtime node was registered in ISO8601 format.
	RegisterTime string `pulumi:"registerTime"`
	// Status of the integration runtime node.
	Status string `pulumi:"status"`
	// Version of the integration runtime node.
	Version string `pulumi:"version"`
	// Status of the integration runtime node version.
	VersionStatus string `pulumi:"versionStatus"`
}

// Self-hosted integration runtime.
type SelfHostedIntegrationRuntimeResponse struct {
	// Integration runtime description.
	Description *string `pulumi:"description"`
	// Linked integration runtime type from data factory
	LinkedInfo interface{} `pulumi:"linkedInfo"`
	// The type of integration runtime.
	// Expected value is 'SelfHosted'.
	Type string `pulumi:"type"`
}

// Self-hosted integration runtime status.
type SelfHostedIntegrationRuntimeStatusResponse struct {
	// Whether Self-hosted integration runtime auto update has been turned on.
	AutoUpdate string `pulumi:"autoUpdate"`
	// The estimated time when the self-hosted integration runtime will be updated.
	AutoUpdateETA string `pulumi:"autoUpdateETA"`
	// Object with additional information about integration runtime capabilities.
	Capabilities map[string]string `pulumi:"capabilities"`
	// The time at which the integration runtime was created, in ISO8601 format.
	CreateTime string `pulumi:"createTime"`
	// The workspace name which the integration runtime belong to.
	DataFactoryName string `pulumi:"dataFactoryName"`
	// It is used to set the encryption mode for node-node communication channel (when more than 2 self-hosted integration runtime nodes exist).
	InternalChannelEncryption string `pulumi:"internalChannelEncryption"`
	// The latest version on download center.
	LatestVersion string `pulumi:"latestVersion"`
	// The list of linked integration runtimes that are created to share with this integration runtime.
	Links []LinkedIntegrationRuntimeResponse `pulumi:"links"`
	// The local time zone offset in hours.
	LocalTimeZoneOffset string `pulumi:"localTimeZoneOffset"`
	// The node communication Channel encryption mode
	NodeCommunicationChannelEncryptionMode string `pulumi:"nodeCommunicationChannelEncryptionMode"`
	// The list of nodes for this integration runtime.
	Nodes []SelfHostedIntegrationRuntimeNodeResponse `pulumi:"nodes"`
	// The version that the integration runtime is going to update to.
	PushedVersion string `pulumi:"pushedVersion"`
	// The date at which the integration runtime will be scheduled to update, in ISO8601 format.
	ScheduledUpdateDate string `pulumi:"scheduledUpdateDate"`
	// The URLs for the services used in integration runtime backend service.
	ServiceUrls []string `pulumi:"serviceUrls"`
	// The state of integration runtime.
	State string `pulumi:"state"`
	// The task queue id of the integration runtime.
	TaskQueueId string `pulumi:"taskQueueId"`
	// The type of integration runtime.
	// Expected value is 'SelfHosted'.
	Type string `pulumi:"type"`
	// The time in the date scheduled by service to update the integration runtime, e.g., PT03H is 3 hours
	UpdateDelayOffset string `pulumi:"updateDelayOffset"`
	// Version of the integration runtime.
	Version string `pulumi:"version"`
	// Status of the integration runtime version.
	VersionStatus string `pulumi:"versionStatus"`
}

// SQL pool SKU
type Sku struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity *int `pulumi:"capacity"`
	// The SKU name
	Name *string `pulumi:"name"`
	// The service tier
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// SQL pool SKU
type SkuArgs struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// The SKU name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The service tier
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// SQL pool SKU
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Sku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The SKU name
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The service tier
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Sku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The SKU name
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The service tier
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SQL pool SKU
type SkuResponse struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity *int `pulumi:"capacity"`
	// The SKU name
	Name *string `pulumi:"name"`
	// The service tier
	Tier *string `pulumi:"tier"`
}

// SQL pool SKU
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The SKU name
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The service tier
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The SKU name
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The service tier
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Properties for an Sql pool vulnerability assessment rule baseline's result.
type SqlPoolVulnerabilityAssessmentRuleBaselineItem struct {
	// The rule baseline result
	Result []string `pulumi:"result"`
}

// SqlPoolVulnerabilityAssessmentRuleBaselineItemInput is an input type that accepts SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs and SqlPoolVulnerabilityAssessmentRuleBaselineItemOutput values.
// You can construct a concrete instance of `SqlPoolVulnerabilityAssessmentRuleBaselineItemInput` via:
//
//	SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs{...}
type SqlPoolVulnerabilityAssessmentRuleBaselineItemInput interface {
	pulumi.Input

	ToSqlPoolVulnerabilityAssessmentRuleBaselineItemOutput() SqlPoolVulnerabilityAssessmentRuleBaselineItemOutput
	ToSqlPoolVulnerabilityAssessmentRuleBaselineItemOutputWithContext(context.Context) SqlPoolVulnerabilityAssessmentRuleBaselineItemOutput
}

// Properties for an Sql pool vulnerability assessment rule baseline's result.
type SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs struct {
	// The rule baseline result
	Result pulumi.StringArrayInput `pulumi:"result"`
}

func (SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlPoolVulnerabilityAssessmentRuleBaselineItem)(nil)).Elem()
}

func (i SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs) ToSqlPoolVulnerabilityAssessmentRuleBaselineItemOutput() SqlPoolVulnerabilityAssessmentRuleBaselineItemOutput {
	return i.ToSqlPoolVulnerabilityAssessmentRuleBaselineItemOutputWithContext(context.Background())
}

func (i SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs) ToSqlPoolVulnerabilityAssessmentRuleBaselineItemOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentRuleBaselineItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlPoolVulnerabilityAssessmentRuleBaselineItemOutput)
}

// SqlPoolVulnerabilityAssessmentRuleBaselineItemArrayInput is an input type that accepts SqlPoolVulnerabilityAssessmentRuleBaselineItemArray and SqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutput values.
// You can construct a concrete instance of `SqlPoolVulnerabilityAssessmentRuleBaselineItemArrayInput` via:
//
//	SqlPoolVulnerabilityAssessmentRuleBaselineItemArray{ SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs{...} }
type SqlPoolVulnerabilityAssessmentRuleBaselineItemArrayInput interface {
	pulumi.Input

	ToSqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutput() SqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutput
	ToSqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutputWithContext(context.Context) SqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutput
}

type SqlPoolVulnerabilityAssessmentRuleBaselineItemArray []SqlPoolVulnerabilityAssessmentRuleBaselineItemInput

func (SqlPoolVulnerabilityAssessmentRuleBaselineItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlPoolVulnerabilityAssessmentRuleBaselineItem)(nil)).Elem()
}

func (i SqlPoolVulnerabilityAssessmentRuleBaselineItemArray) ToSqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutput() SqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutput {
	return i.ToSqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutputWithContext(context.Background())
}

func (i SqlPoolVulnerabilityAssessmentRuleBaselineItemArray) ToSqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutput)
}

// Properties for an Sql pool vulnerability assessment rule baseline's result.
type SqlPoolVulnerabilityAssessmentRuleBaselineItemOutput struct{ *pulumi.OutputState }

func (SqlPoolVulnerabilityAssessmentRuleBaselineItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlPoolVulnerabilityAssessmentRuleBaselineItem)(nil)).Elem()
}

func (o SqlPoolVulnerabilityAssessmentRuleBaselineItemOutput) ToSqlPoolVulnerabilityAssessmentRuleBaselineItemOutput() SqlPoolVulnerabilityAssessmentRuleBaselineItemOutput {
	return o
}

func (o SqlPoolVulnerabilityAssessmentRuleBaselineItemOutput) ToSqlPoolVulnerabilityAssessmentRuleBaselineItemOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentRuleBaselineItemOutput {
	return o
}

// The rule baseline result
func (o SqlPoolVulnerabilityAssessmentRuleBaselineItemOutput) Result() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SqlPoolVulnerabilityAssessmentRuleBaselineItem) []string { return v.Result }).(pulumi.StringArrayOutput)
}

type SqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutput struct{ *pulumi.OutputState }

func (SqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlPoolVulnerabilityAssessmentRuleBaselineItem)(nil)).Elem()
}

func (o SqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutput) ToSqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutput() SqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutput {
	return o
}

func (o SqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutput) ToSqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutput {
	return o
}

func (o SqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutput) Index(i pulumi.IntInput) SqlPoolVulnerabilityAssessmentRuleBaselineItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlPoolVulnerabilityAssessmentRuleBaselineItem {
		return vs[0].([]SqlPoolVulnerabilityAssessmentRuleBaselineItem)[vs[1].(int)]
	}).(SqlPoolVulnerabilityAssessmentRuleBaselineItemOutput)
}

// Properties for an Sql pool vulnerability assessment rule baseline's result.
type SqlPoolVulnerabilityAssessmentRuleBaselineItemResponse struct {
	// The rule baseline result
	Result []string `pulumi:"result"`
}

// Properties for an Sql pool vulnerability assessment rule baseline's result.
type SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseOutput struct{ *pulumi.OutputState }

func (SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlPoolVulnerabilityAssessmentRuleBaselineItemResponse)(nil)).Elem()
}

func (o SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseOutput) ToSqlPoolVulnerabilityAssessmentRuleBaselineItemResponseOutput() SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseOutput {
	return o
}

func (o SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseOutput) ToSqlPoolVulnerabilityAssessmentRuleBaselineItemResponseOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseOutput {
	return o
}

// The rule baseline result
func (o SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseOutput) Result() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SqlPoolVulnerabilityAssessmentRuleBaselineItemResponse) []string { return v.Result }).(pulumi.StringArrayOutput)
}

type SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput struct{ *pulumi.OutputState }

func (SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlPoolVulnerabilityAssessmentRuleBaselineItemResponse)(nil)).Elem()
}

func (o SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput) ToSqlPoolVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput() SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput {
	return o
}

func (o SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput) ToSqlPoolVulnerabilityAssessmentRuleBaselineItemResponseArrayOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput {
	return o
}

func (o SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput) Index(i pulumi.IntInput) SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlPoolVulnerabilityAssessmentRuleBaselineItemResponse {
		return vs[0].([]SqlPoolVulnerabilityAssessmentRuleBaselineItemResponse)[vs[1].(int)]
	}).(SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseOutput)
}

// Ssis environment reference.
type SsisEnvironmentReferenceResponse struct {
	// Environment folder name.
	EnvironmentFolderName *string `pulumi:"environmentFolderName"`
	// Environment name.
	EnvironmentName *string `pulumi:"environmentName"`
	// Environment reference id.
	Id *float64 `pulumi:"id"`
	// Reference type
	ReferenceType *string `pulumi:"referenceType"`
}

// Ssis environment.
type SsisEnvironmentResponse struct {
	// Metadata description.
	Description *string `pulumi:"description"`
	// Folder id which contains environment.
	FolderId *float64 `pulumi:"folderId"`
	// Metadata id.
	Id *float64 `pulumi:"id"`
	// Metadata name.
	Name *string `pulumi:"name"`
	// The type of SSIS object metadata.
	// Expected value is 'Environment'.
	Type string `pulumi:"type"`
	// Variable in environment
	Variables []SsisVariableResponse `pulumi:"variables"`
}

// Ssis folder.
type SsisFolderResponse struct {
	// Metadata description.
	Description *string `pulumi:"description"`
	// Metadata id.
	Id *float64 `pulumi:"id"`
	// Metadata name.
	Name *string `pulumi:"name"`
	// The type of SSIS object metadata.
	// Expected value is 'Folder'.
	Type string `pulumi:"type"`
}

// Ssis Package.
type SsisPackageResponse struct {
	// Metadata description.
	Description *string `pulumi:"description"`
	// Folder id which contains package.
	FolderId *float64 `pulumi:"folderId"`
	// Metadata id.
	Id *float64 `pulumi:"id"`
	// Metadata name.
	Name *string `pulumi:"name"`
	// Parameters in package
	Parameters []SsisParameterResponse `pulumi:"parameters"`
	// Project id which contains package.
	ProjectId *float64 `pulumi:"projectId"`
	// Project version which contains package.
	ProjectVersion *float64 `pulumi:"projectVersion"`
	// The type of SSIS object metadata.
	// Expected value is 'Package'.
	Type string `pulumi:"type"`
}

// Ssis parameter.
type SsisParameterResponse struct {
	// Parameter type.
	DataType *string `pulumi:"dataType"`
	// Default value of parameter.
	DefaultValue *string `pulumi:"defaultValue"`
	// Parameter description.
	Description *string `pulumi:"description"`
	// Design default value of parameter.
	DesignDefaultValue *string `pulumi:"designDefaultValue"`
	// Parameter id.
	Id *float64 `pulumi:"id"`
	// Parameter name.
	Name *string `pulumi:"name"`
	// Whether parameter is required.
	Required *bool `pulumi:"required"`
	// Whether parameter is sensitive.
	Sensitive *bool `pulumi:"sensitive"`
	// Default sensitive value of parameter.
	SensitiveDefaultValue *string `pulumi:"sensitiveDefaultValue"`
	// Parameter value set.
	ValueSet *bool `pulumi:"valueSet"`
	// Parameter value type.
	ValueType *string `pulumi:"valueType"`
	// Parameter reference variable.
	Variable *string `pulumi:"variable"`
}

// Ssis project.
type SsisProjectResponse struct {
	// Metadata description.
	Description *string `pulumi:"description"`
	// Environment reference in project
	EnvironmentRefs []SsisEnvironmentReferenceResponse `pulumi:"environmentRefs"`
	// Folder id which contains project.
	FolderId *float64 `pulumi:"folderId"`
	// Metadata id.
	Id *float64 `pulumi:"id"`
	// Metadata name.
	Name *string `pulumi:"name"`
	// Parameters in project
	Parameters []SsisParameterResponse `pulumi:"parameters"`
	// The type of SSIS object metadata.
	// Expected value is 'Project'.
	Type string `pulumi:"type"`
	// Project version.
	Version *float64 `pulumi:"version"`
}

// Ssis variable.
type SsisVariableResponse struct {
	// Variable type.
	DataType *string `pulumi:"dataType"`
	// Variable description.
	Description *string `pulumi:"description"`
	// Variable id.
	Id *float64 `pulumi:"id"`
	// Variable name.
	Name *string `pulumi:"name"`
	// Whether variable is sensitive.
	Sensitive *bool `pulumi:"sensitive"`
	// Variable sensitive value.
	SensitiveValue *string `pulumi:"sensitiveValue"`
	// Variable value.
	Value *string `pulumi:"value"`
}

// Virtual Network Profile
type VirtualNetworkProfile struct {
	// Subnet ID used for computes in workspace
	ComputeSubnetId *string `pulumi:"computeSubnetId"`
}

// VirtualNetworkProfileInput is an input type that accepts VirtualNetworkProfileArgs and VirtualNetworkProfileOutput values.
// You can construct a concrete instance of `VirtualNetworkProfileInput` via:
//
//	VirtualNetworkProfileArgs{...}
type VirtualNetworkProfileInput interface {
	pulumi.Input

	ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput
	ToVirtualNetworkProfileOutputWithContext(context.Context) VirtualNetworkProfileOutput
}

// Virtual Network Profile
type VirtualNetworkProfileArgs struct {
	// Subnet ID used for computes in workspace
	ComputeSubnetId pulumi.StringPtrInput `pulumi:"computeSubnetId"`
}

func (VirtualNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfile)(nil)).Elem()
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput {
	return i.ToVirtualNetworkProfileOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfileOutputWithContext(ctx context.Context) VirtualNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileOutput)
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return i.ToVirtualNetworkProfilePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileOutput).ToVirtualNetworkProfilePtrOutputWithContext(ctx)
}

// VirtualNetworkProfilePtrInput is an input type that accepts VirtualNetworkProfileArgs, VirtualNetworkProfilePtr and VirtualNetworkProfilePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkProfilePtrInput` via:
//
//	        VirtualNetworkProfileArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkProfilePtrInput interface {
	pulumi.Input

	ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput
	ToVirtualNetworkProfilePtrOutputWithContext(context.Context) VirtualNetworkProfilePtrOutput
}

type virtualNetworkProfilePtrType VirtualNetworkProfileArgs

func VirtualNetworkProfilePtr(v *VirtualNetworkProfileArgs) VirtualNetworkProfilePtrInput {
	return (*virtualNetworkProfilePtrType)(v)
}

func (*virtualNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfile)(nil)).Elem()
}

func (i *virtualNetworkProfilePtrType) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return i.ToVirtualNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkProfilePtrType) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfilePtrOutput)
}

// Virtual Network Profile
type VirtualNetworkProfileOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfile)(nil)).Elem()
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput {
	return o
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfileOutputWithContext(ctx context.Context) VirtualNetworkProfileOutput {
	return o
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return o.ToVirtualNetworkProfilePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkProfile) *VirtualNetworkProfile {
		return &v
	}).(VirtualNetworkProfilePtrOutput)
}

// Subnet ID used for computes in workspace
func (o VirtualNetworkProfileOutput) ComputeSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *string { return v.ComputeSubnetId }).(pulumi.StringPtrOutput)
}

type VirtualNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfile)(nil)).Elem()
}

func (o VirtualNetworkProfilePtrOutput) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return o
}

func (o VirtualNetworkProfilePtrOutput) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return o
}

func (o VirtualNetworkProfilePtrOutput) Elem() VirtualNetworkProfileOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) VirtualNetworkProfile {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkProfile
		return ret
	}).(VirtualNetworkProfileOutput)
}

// Subnet ID used for computes in workspace
func (o VirtualNetworkProfilePtrOutput) ComputeSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.ComputeSubnetId
	}).(pulumi.StringPtrOutput)
}

// Virtual Network Profile
type VirtualNetworkProfileResponse struct {
	// Subnet ID used for computes in workspace
	ComputeSubnetId *string `pulumi:"computeSubnetId"`
}

// Virtual Network Profile
type VirtualNetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponseOutput() VirtualNetworkProfileResponseOutput {
	return o
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponseOutputWithContext(ctx context.Context) VirtualNetworkProfileResponseOutput {
	return o
}

// Subnet ID used for computes in workspace
func (o VirtualNetworkProfileResponseOutput) ComputeSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *string { return v.ComputeSubnetId }).(pulumi.StringPtrOutput)
}

type VirtualNetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualNetworkProfileResponsePtrOutput) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return o
}

func (o VirtualNetworkProfileResponsePtrOutput) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return o
}

func (o VirtualNetworkProfileResponsePtrOutput) Elem() VirtualNetworkProfileResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) VirtualNetworkProfileResponse {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkProfileResponse
		return ret
	}).(VirtualNetworkProfileResponseOutput)
}

// Subnet ID used for computes in workspace
func (o VirtualNetworkProfileResponsePtrOutput) ComputeSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ComputeSubnetId
	}).(pulumi.StringPtrOutput)
}

// Properties of a Vulnerability Assessment recurring scans.
type VulnerabilityAssessmentRecurringScansProperties struct {
	// Specifies that the schedule scan notification will be is sent to the subscription administrators.
	EmailSubscriptionAdmins *bool `pulumi:"emailSubscriptionAdmins"`
	// Specifies an array of e-mail addresses to which the scan notification is sent.
	Emails []string `pulumi:"emails"`
	// Recurring scans state.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// Defaults sets the appropriate defaults for VulnerabilityAssessmentRecurringScansProperties
func (val *VulnerabilityAssessmentRecurringScansProperties) Defaults() *VulnerabilityAssessmentRecurringScansProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.EmailSubscriptionAdmins) {
		emailSubscriptionAdmins_ := true
		tmp.EmailSubscriptionAdmins = &emailSubscriptionAdmins_
	}
	return &tmp
}

// VulnerabilityAssessmentRecurringScansPropertiesInput is an input type that accepts VulnerabilityAssessmentRecurringScansPropertiesArgs and VulnerabilityAssessmentRecurringScansPropertiesOutput values.
// You can construct a concrete instance of `VulnerabilityAssessmentRecurringScansPropertiesInput` via:
//
//	VulnerabilityAssessmentRecurringScansPropertiesArgs{...}
type VulnerabilityAssessmentRecurringScansPropertiesInput interface {
	pulumi.Input

	ToVulnerabilityAssessmentRecurringScansPropertiesOutput() VulnerabilityAssessmentRecurringScansPropertiesOutput
	ToVulnerabilityAssessmentRecurringScansPropertiesOutputWithContext(context.Context) VulnerabilityAssessmentRecurringScansPropertiesOutput
}

// Properties of a Vulnerability Assessment recurring scans.
type VulnerabilityAssessmentRecurringScansPropertiesArgs struct {
	// Specifies that the schedule scan notification will be is sent to the subscription administrators.
	EmailSubscriptionAdmins pulumi.BoolPtrInput `pulumi:"emailSubscriptionAdmins"`
	// Specifies an array of e-mail addresses to which the scan notification is sent.
	Emails pulumi.StringArrayInput `pulumi:"emails"`
	// Recurring scans state.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
}

// Defaults sets the appropriate defaults for VulnerabilityAssessmentRecurringScansPropertiesArgs
func (val *VulnerabilityAssessmentRecurringScansPropertiesArgs) Defaults() *VulnerabilityAssessmentRecurringScansPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.EmailSubscriptionAdmins) {
		tmp.EmailSubscriptionAdmins = pulumi.BoolPtr(true)
	}
	return &tmp
}
func (VulnerabilityAssessmentRecurringScansPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityAssessmentRecurringScansProperties)(nil)).Elem()
}

func (i VulnerabilityAssessmentRecurringScansPropertiesArgs) ToVulnerabilityAssessmentRecurringScansPropertiesOutput() VulnerabilityAssessmentRecurringScansPropertiesOutput {
	return i.ToVulnerabilityAssessmentRecurringScansPropertiesOutputWithContext(context.Background())
}

func (i VulnerabilityAssessmentRecurringScansPropertiesArgs) ToVulnerabilityAssessmentRecurringScansPropertiesOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityAssessmentRecurringScansPropertiesOutput)
}

func (i VulnerabilityAssessmentRecurringScansPropertiesArgs) ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutput() VulnerabilityAssessmentRecurringScansPropertiesPtrOutput {
	return i.ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutputWithContext(context.Background())
}

func (i VulnerabilityAssessmentRecurringScansPropertiesArgs) ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityAssessmentRecurringScansPropertiesOutput).ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutputWithContext(ctx)
}

// VulnerabilityAssessmentRecurringScansPropertiesPtrInput is an input type that accepts VulnerabilityAssessmentRecurringScansPropertiesArgs, VulnerabilityAssessmentRecurringScansPropertiesPtr and VulnerabilityAssessmentRecurringScansPropertiesPtrOutput values.
// You can construct a concrete instance of `VulnerabilityAssessmentRecurringScansPropertiesPtrInput` via:
//
//	        VulnerabilityAssessmentRecurringScansPropertiesArgs{...}
//
//	or:
//
//	        nil
type VulnerabilityAssessmentRecurringScansPropertiesPtrInput interface {
	pulumi.Input

	ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutput() VulnerabilityAssessmentRecurringScansPropertiesPtrOutput
	ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutputWithContext(context.Context) VulnerabilityAssessmentRecurringScansPropertiesPtrOutput
}

type vulnerabilityAssessmentRecurringScansPropertiesPtrType VulnerabilityAssessmentRecurringScansPropertiesArgs

func VulnerabilityAssessmentRecurringScansPropertiesPtr(v *VulnerabilityAssessmentRecurringScansPropertiesArgs) VulnerabilityAssessmentRecurringScansPropertiesPtrInput {
	return (*vulnerabilityAssessmentRecurringScansPropertiesPtrType)(v)
}

func (*vulnerabilityAssessmentRecurringScansPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityAssessmentRecurringScansProperties)(nil)).Elem()
}

func (i *vulnerabilityAssessmentRecurringScansPropertiesPtrType) ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutput() VulnerabilityAssessmentRecurringScansPropertiesPtrOutput {
	return i.ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutputWithContext(context.Background())
}

func (i *vulnerabilityAssessmentRecurringScansPropertiesPtrType) ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityAssessmentRecurringScansPropertiesPtrOutput)
}

// Properties of a Vulnerability Assessment recurring scans.
type VulnerabilityAssessmentRecurringScansPropertiesOutput struct{ *pulumi.OutputState }

func (VulnerabilityAssessmentRecurringScansPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityAssessmentRecurringScansProperties)(nil)).Elem()
}

func (o VulnerabilityAssessmentRecurringScansPropertiesOutput) ToVulnerabilityAssessmentRecurringScansPropertiesOutput() VulnerabilityAssessmentRecurringScansPropertiesOutput {
	return o
}

func (o VulnerabilityAssessmentRecurringScansPropertiesOutput) ToVulnerabilityAssessmentRecurringScansPropertiesOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesOutput {
	return o
}

func (o VulnerabilityAssessmentRecurringScansPropertiesOutput) ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutput() VulnerabilityAssessmentRecurringScansPropertiesPtrOutput {
	return o.ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutputWithContext(context.Background())
}

func (o VulnerabilityAssessmentRecurringScansPropertiesOutput) ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VulnerabilityAssessmentRecurringScansProperties) *VulnerabilityAssessmentRecurringScansProperties {
		return &v
	}).(VulnerabilityAssessmentRecurringScansPropertiesPtrOutput)
}

// Specifies that the schedule scan notification will be is sent to the subscription administrators.
func (o VulnerabilityAssessmentRecurringScansPropertiesOutput) EmailSubscriptionAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VulnerabilityAssessmentRecurringScansProperties) *bool { return v.EmailSubscriptionAdmins }).(pulumi.BoolPtrOutput)
}

// Specifies an array of e-mail addresses to which the scan notification is sent.
func (o VulnerabilityAssessmentRecurringScansPropertiesOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VulnerabilityAssessmentRecurringScansProperties) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

// Recurring scans state.
func (o VulnerabilityAssessmentRecurringScansPropertiesOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VulnerabilityAssessmentRecurringScansProperties) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type VulnerabilityAssessmentRecurringScansPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VulnerabilityAssessmentRecurringScansPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityAssessmentRecurringScansProperties)(nil)).Elem()
}

func (o VulnerabilityAssessmentRecurringScansPropertiesPtrOutput) ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutput() VulnerabilityAssessmentRecurringScansPropertiesPtrOutput {
	return o
}

func (o VulnerabilityAssessmentRecurringScansPropertiesPtrOutput) ToVulnerabilityAssessmentRecurringScansPropertiesPtrOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesPtrOutput {
	return o
}

func (o VulnerabilityAssessmentRecurringScansPropertiesPtrOutput) Elem() VulnerabilityAssessmentRecurringScansPropertiesOutput {
	return o.ApplyT(func(v *VulnerabilityAssessmentRecurringScansProperties) VulnerabilityAssessmentRecurringScansProperties {
		if v != nil {
			return *v
		}
		var ret VulnerabilityAssessmentRecurringScansProperties
		return ret
	}).(VulnerabilityAssessmentRecurringScansPropertiesOutput)
}

// Specifies that the schedule scan notification will be is sent to the subscription administrators.
func (o VulnerabilityAssessmentRecurringScansPropertiesPtrOutput) EmailSubscriptionAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VulnerabilityAssessmentRecurringScansProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EmailSubscriptionAdmins
	}).(pulumi.BoolPtrOutput)
}

// Specifies an array of e-mail addresses to which the scan notification is sent.
func (o VulnerabilityAssessmentRecurringScansPropertiesPtrOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VulnerabilityAssessmentRecurringScansProperties) []string {
		if v == nil {
			return nil
		}
		return v.Emails
	}).(pulumi.StringArrayOutput)
}

// Recurring scans state.
func (o VulnerabilityAssessmentRecurringScansPropertiesPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VulnerabilityAssessmentRecurringScansProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Properties of a Vulnerability Assessment recurring scans.
type VulnerabilityAssessmentRecurringScansPropertiesResponse struct {
	// Specifies that the schedule scan notification will be is sent to the subscription administrators.
	EmailSubscriptionAdmins *bool `pulumi:"emailSubscriptionAdmins"`
	// Specifies an array of e-mail addresses to which the scan notification is sent.
	Emails []string `pulumi:"emails"`
	// Recurring scans state.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// Defaults sets the appropriate defaults for VulnerabilityAssessmentRecurringScansPropertiesResponse
func (val *VulnerabilityAssessmentRecurringScansPropertiesResponse) Defaults() *VulnerabilityAssessmentRecurringScansPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.EmailSubscriptionAdmins) {
		emailSubscriptionAdmins_ := true
		tmp.EmailSubscriptionAdmins = &emailSubscriptionAdmins_
	}
	return &tmp
}

// Properties of a Vulnerability Assessment recurring scans.
type VulnerabilityAssessmentRecurringScansPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VulnerabilityAssessmentRecurringScansPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityAssessmentRecurringScansPropertiesResponse)(nil)).Elem()
}

func (o VulnerabilityAssessmentRecurringScansPropertiesResponseOutput) ToVulnerabilityAssessmentRecurringScansPropertiesResponseOutput() VulnerabilityAssessmentRecurringScansPropertiesResponseOutput {
	return o
}

func (o VulnerabilityAssessmentRecurringScansPropertiesResponseOutput) ToVulnerabilityAssessmentRecurringScansPropertiesResponseOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesResponseOutput {
	return o
}

// Specifies that the schedule scan notification will be is sent to the subscription administrators.
func (o VulnerabilityAssessmentRecurringScansPropertiesResponseOutput) EmailSubscriptionAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VulnerabilityAssessmentRecurringScansPropertiesResponse) *bool {
		return v.EmailSubscriptionAdmins
	}).(pulumi.BoolPtrOutput)
}

// Specifies an array of e-mail addresses to which the scan notification is sent.
func (o VulnerabilityAssessmentRecurringScansPropertiesResponseOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VulnerabilityAssessmentRecurringScansPropertiesResponse) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

// Recurring scans state.
func (o VulnerabilityAssessmentRecurringScansPropertiesResponseOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VulnerabilityAssessmentRecurringScansPropertiesResponse) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityAssessmentRecurringScansPropertiesResponse)(nil)).Elem()
}

func (o VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput) ToVulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput() VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
	return o
}

func (o VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput) ToVulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutputWithContext(ctx context.Context) VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
	return o
}

func (o VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput) Elem() VulnerabilityAssessmentRecurringScansPropertiesResponseOutput {
	return o.ApplyT(func(v *VulnerabilityAssessmentRecurringScansPropertiesResponse) VulnerabilityAssessmentRecurringScansPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret VulnerabilityAssessmentRecurringScansPropertiesResponse
		return ret
	}).(VulnerabilityAssessmentRecurringScansPropertiesResponseOutput)
}

// Specifies that the schedule scan notification will be is sent to the subscription administrators.
func (o VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput) EmailSubscriptionAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VulnerabilityAssessmentRecurringScansPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EmailSubscriptionAdmins
	}).(pulumi.BoolPtrOutput)
}

// Specifies an array of e-mail addresses to which the scan notification is sent.
func (o VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VulnerabilityAssessmentRecurringScansPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Emails
	}).(pulumi.StringArrayOutput)
}

// Recurring scans state.
func (o VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VulnerabilityAssessmentRecurringScansPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Details of the customer managed key associated with the workspace
type WorkspaceKeyDetails struct {
	// Workspace Key sub-resource key vault url
	KeyVaultUrl *string `pulumi:"keyVaultUrl"`
	// Workspace Key sub-resource name
	Name *string `pulumi:"name"`
}

// WorkspaceKeyDetailsInput is an input type that accepts WorkspaceKeyDetailsArgs and WorkspaceKeyDetailsOutput values.
// You can construct a concrete instance of `WorkspaceKeyDetailsInput` via:
//
//	WorkspaceKeyDetailsArgs{...}
type WorkspaceKeyDetailsInput interface {
	pulumi.Input

	ToWorkspaceKeyDetailsOutput() WorkspaceKeyDetailsOutput
	ToWorkspaceKeyDetailsOutputWithContext(context.Context) WorkspaceKeyDetailsOutput
}

// Details of the customer managed key associated with the workspace
type WorkspaceKeyDetailsArgs struct {
	// Workspace Key sub-resource key vault url
	KeyVaultUrl pulumi.StringPtrInput `pulumi:"keyVaultUrl"`
	// Workspace Key sub-resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WorkspaceKeyDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceKeyDetails)(nil)).Elem()
}

func (i WorkspaceKeyDetailsArgs) ToWorkspaceKeyDetailsOutput() WorkspaceKeyDetailsOutput {
	return i.ToWorkspaceKeyDetailsOutputWithContext(context.Background())
}

func (i WorkspaceKeyDetailsArgs) ToWorkspaceKeyDetailsOutputWithContext(ctx context.Context) WorkspaceKeyDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceKeyDetailsOutput)
}

func (i WorkspaceKeyDetailsArgs) ToWorkspaceKeyDetailsPtrOutput() WorkspaceKeyDetailsPtrOutput {
	return i.ToWorkspaceKeyDetailsPtrOutputWithContext(context.Background())
}

func (i WorkspaceKeyDetailsArgs) ToWorkspaceKeyDetailsPtrOutputWithContext(ctx context.Context) WorkspaceKeyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceKeyDetailsOutput).ToWorkspaceKeyDetailsPtrOutputWithContext(ctx)
}

// WorkspaceKeyDetailsPtrInput is an input type that accepts WorkspaceKeyDetailsArgs, WorkspaceKeyDetailsPtr and WorkspaceKeyDetailsPtrOutput values.
// You can construct a concrete instance of `WorkspaceKeyDetailsPtrInput` via:
//
//	        WorkspaceKeyDetailsArgs{...}
//
//	or:
//
//	        nil
type WorkspaceKeyDetailsPtrInput interface {
	pulumi.Input

	ToWorkspaceKeyDetailsPtrOutput() WorkspaceKeyDetailsPtrOutput
	ToWorkspaceKeyDetailsPtrOutputWithContext(context.Context) WorkspaceKeyDetailsPtrOutput
}

type workspaceKeyDetailsPtrType WorkspaceKeyDetailsArgs

func WorkspaceKeyDetailsPtr(v *WorkspaceKeyDetailsArgs) WorkspaceKeyDetailsPtrInput {
	return (*workspaceKeyDetailsPtrType)(v)
}

func (*workspaceKeyDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceKeyDetails)(nil)).Elem()
}

func (i *workspaceKeyDetailsPtrType) ToWorkspaceKeyDetailsPtrOutput() WorkspaceKeyDetailsPtrOutput {
	return i.ToWorkspaceKeyDetailsPtrOutputWithContext(context.Background())
}

func (i *workspaceKeyDetailsPtrType) ToWorkspaceKeyDetailsPtrOutputWithContext(ctx context.Context) WorkspaceKeyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceKeyDetailsPtrOutput)
}

// Details of the customer managed key associated with the workspace
type WorkspaceKeyDetailsOutput struct{ *pulumi.OutputState }

func (WorkspaceKeyDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceKeyDetails)(nil)).Elem()
}

func (o WorkspaceKeyDetailsOutput) ToWorkspaceKeyDetailsOutput() WorkspaceKeyDetailsOutput {
	return o
}

func (o WorkspaceKeyDetailsOutput) ToWorkspaceKeyDetailsOutputWithContext(ctx context.Context) WorkspaceKeyDetailsOutput {
	return o
}

func (o WorkspaceKeyDetailsOutput) ToWorkspaceKeyDetailsPtrOutput() WorkspaceKeyDetailsPtrOutput {
	return o.ToWorkspaceKeyDetailsPtrOutputWithContext(context.Background())
}

func (o WorkspaceKeyDetailsOutput) ToWorkspaceKeyDetailsPtrOutputWithContext(ctx context.Context) WorkspaceKeyDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceKeyDetails) *WorkspaceKeyDetails {
		return &v
	}).(WorkspaceKeyDetailsPtrOutput)
}

// Workspace Key sub-resource key vault url
func (o WorkspaceKeyDetailsOutput) KeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceKeyDetails) *string { return v.KeyVaultUrl }).(pulumi.StringPtrOutput)
}

// Workspace Key sub-resource name
func (o WorkspaceKeyDetailsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceKeyDetails) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WorkspaceKeyDetailsPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceKeyDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceKeyDetails)(nil)).Elem()
}

func (o WorkspaceKeyDetailsPtrOutput) ToWorkspaceKeyDetailsPtrOutput() WorkspaceKeyDetailsPtrOutput {
	return o
}

func (o WorkspaceKeyDetailsPtrOutput) ToWorkspaceKeyDetailsPtrOutputWithContext(ctx context.Context) WorkspaceKeyDetailsPtrOutput {
	return o
}

func (o WorkspaceKeyDetailsPtrOutput) Elem() WorkspaceKeyDetailsOutput {
	return o.ApplyT(func(v *WorkspaceKeyDetails) WorkspaceKeyDetails {
		if v != nil {
			return *v
		}
		var ret WorkspaceKeyDetails
		return ret
	}).(WorkspaceKeyDetailsOutput)
}

// Workspace Key sub-resource key vault url
func (o WorkspaceKeyDetailsPtrOutput) KeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceKeyDetails) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultUrl
	}).(pulumi.StringPtrOutput)
}

// Workspace Key sub-resource name
func (o WorkspaceKeyDetailsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceKeyDetails) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Details of the customer managed key associated with the workspace
type WorkspaceKeyDetailsResponse struct {
	// Workspace Key sub-resource key vault url
	KeyVaultUrl *string `pulumi:"keyVaultUrl"`
	// Workspace Key sub-resource name
	Name *string `pulumi:"name"`
}

// Details of the customer managed key associated with the workspace
type WorkspaceKeyDetailsResponseOutput struct{ *pulumi.OutputState }

func (WorkspaceKeyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceKeyDetailsResponse)(nil)).Elem()
}

func (o WorkspaceKeyDetailsResponseOutput) ToWorkspaceKeyDetailsResponseOutput() WorkspaceKeyDetailsResponseOutput {
	return o
}

func (o WorkspaceKeyDetailsResponseOutput) ToWorkspaceKeyDetailsResponseOutputWithContext(ctx context.Context) WorkspaceKeyDetailsResponseOutput {
	return o
}

// Workspace Key sub-resource key vault url
func (o WorkspaceKeyDetailsResponseOutput) KeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceKeyDetailsResponse) *string { return v.KeyVaultUrl }).(pulumi.StringPtrOutput)
}

// Workspace Key sub-resource name
func (o WorkspaceKeyDetailsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceKeyDetailsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WorkspaceKeyDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkspaceKeyDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceKeyDetailsResponse)(nil)).Elem()
}

func (o WorkspaceKeyDetailsResponsePtrOutput) ToWorkspaceKeyDetailsResponsePtrOutput() WorkspaceKeyDetailsResponsePtrOutput {
	return o
}

func (o WorkspaceKeyDetailsResponsePtrOutput) ToWorkspaceKeyDetailsResponsePtrOutputWithContext(ctx context.Context) WorkspaceKeyDetailsResponsePtrOutput {
	return o
}

func (o WorkspaceKeyDetailsResponsePtrOutput) Elem() WorkspaceKeyDetailsResponseOutput {
	return o.ApplyT(func(v *WorkspaceKeyDetailsResponse) WorkspaceKeyDetailsResponse {
		if v != nil {
			return *v
		}
		var ret WorkspaceKeyDetailsResponse
		return ret
	}).(WorkspaceKeyDetailsResponseOutput)
}

// Workspace Key sub-resource key vault url
func (o WorkspaceKeyDetailsResponsePtrOutput) KeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceKeyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultUrl
	}).(pulumi.StringPtrOutput)
}

// Workspace Key sub-resource name
func (o WorkspaceKeyDetailsResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceKeyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Git integration settings
type WorkspaceRepositoryConfiguration struct {
	// Account name
	AccountName *string `pulumi:"accountName"`
	// GitHub bring your own app client id
	ClientId *string `pulumi:"clientId"`
	// GitHub bring your own app client secret information.
	ClientSecret *GitHubClientSecret `pulumi:"clientSecret"`
	// Collaboration branch
	CollaborationBranch *string `pulumi:"collaborationBranch"`
	// GitHub Enterprise host name. For example: https://github.mydomain.com
	HostName *string `pulumi:"hostName"`
	// The last commit ID
	LastCommitId *string `pulumi:"lastCommitId"`
	// VSTS project name
	ProjectName *string `pulumi:"projectName"`
	// Repository name
	RepositoryName *string `pulumi:"repositoryName"`
	// Root folder to use in the repository
	RootFolder *string `pulumi:"rootFolder"`
	// The VSTS tenant ID
	TenantId *string `pulumi:"tenantId"`
	// Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration
	Type *string `pulumi:"type"`
}

// WorkspaceRepositoryConfigurationInput is an input type that accepts WorkspaceRepositoryConfigurationArgs and WorkspaceRepositoryConfigurationOutput values.
// You can construct a concrete instance of `WorkspaceRepositoryConfigurationInput` via:
//
//	WorkspaceRepositoryConfigurationArgs{...}
type WorkspaceRepositoryConfigurationInput interface {
	pulumi.Input

	ToWorkspaceRepositoryConfigurationOutput() WorkspaceRepositoryConfigurationOutput
	ToWorkspaceRepositoryConfigurationOutputWithContext(context.Context) WorkspaceRepositoryConfigurationOutput
}

// Git integration settings
type WorkspaceRepositoryConfigurationArgs struct {
	// Account name
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// GitHub bring your own app client id
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// GitHub bring your own app client secret information.
	ClientSecret GitHubClientSecretPtrInput `pulumi:"clientSecret"`
	// Collaboration branch
	CollaborationBranch pulumi.StringPtrInput `pulumi:"collaborationBranch"`
	// GitHub Enterprise host name. For example: https://github.mydomain.com
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// The last commit ID
	LastCommitId pulumi.StringPtrInput `pulumi:"lastCommitId"`
	// VSTS project name
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// Repository name
	RepositoryName pulumi.StringPtrInput `pulumi:"repositoryName"`
	// Root folder to use in the repository
	RootFolder pulumi.StringPtrInput `pulumi:"rootFolder"`
	// The VSTS tenant ID
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (WorkspaceRepositoryConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceRepositoryConfiguration)(nil)).Elem()
}

func (i WorkspaceRepositoryConfigurationArgs) ToWorkspaceRepositoryConfigurationOutput() WorkspaceRepositoryConfigurationOutput {
	return i.ToWorkspaceRepositoryConfigurationOutputWithContext(context.Background())
}

func (i WorkspaceRepositoryConfigurationArgs) ToWorkspaceRepositoryConfigurationOutputWithContext(ctx context.Context) WorkspaceRepositoryConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceRepositoryConfigurationOutput)
}

func (i WorkspaceRepositoryConfigurationArgs) ToWorkspaceRepositoryConfigurationPtrOutput() WorkspaceRepositoryConfigurationPtrOutput {
	return i.ToWorkspaceRepositoryConfigurationPtrOutputWithContext(context.Background())
}

func (i WorkspaceRepositoryConfigurationArgs) ToWorkspaceRepositoryConfigurationPtrOutputWithContext(ctx context.Context) WorkspaceRepositoryConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceRepositoryConfigurationOutput).ToWorkspaceRepositoryConfigurationPtrOutputWithContext(ctx)
}

// WorkspaceRepositoryConfigurationPtrInput is an input type that accepts WorkspaceRepositoryConfigurationArgs, WorkspaceRepositoryConfigurationPtr and WorkspaceRepositoryConfigurationPtrOutput values.
// You can construct a concrete instance of `WorkspaceRepositoryConfigurationPtrInput` via:
//
//	        WorkspaceRepositoryConfigurationArgs{...}
//
//	or:
//
//	        nil
type WorkspaceRepositoryConfigurationPtrInput interface {
	pulumi.Input

	ToWorkspaceRepositoryConfigurationPtrOutput() WorkspaceRepositoryConfigurationPtrOutput
	ToWorkspaceRepositoryConfigurationPtrOutputWithContext(context.Context) WorkspaceRepositoryConfigurationPtrOutput
}

type workspaceRepositoryConfigurationPtrType WorkspaceRepositoryConfigurationArgs

func WorkspaceRepositoryConfigurationPtr(v *WorkspaceRepositoryConfigurationArgs) WorkspaceRepositoryConfigurationPtrInput {
	return (*workspaceRepositoryConfigurationPtrType)(v)
}

func (*workspaceRepositoryConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceRepositoryConfiguration)(nil)).Elem()
}

func (i *workspaceRepositoryConfigurationPtrType) ToWorkspaceRepositoryConfigurationPtrOutput() WorkspaceRepositoryConfigurationPtrOutput {
	return i.ToWorkspaceRepositoryConfigurationPtrOutputWithContext(context.Background())
}

func (i *workspaceRepositoryConfigurationPtrType) ToWorkspaceRepositoryConfigurationPtrOutputWithContext(ctx context.Context) WorkspaceRepositoryConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceRepositoryConfigurationPtrOutput)
}

// Git integration settings
type WorkspaceRepositoryConfigurationOutput struct{ *pulumi.OutputState }

func (WorkspaceRepositoryConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceRepositoryConfiguration)(nil)).Elem()
}

func (o WorkspaceRepositoryConfigurationOutput) ToWorkspaceRepositoryConfigurationOutput() WorkspaceRepositoryConfigurationOutput {
	return o
}

func (o WorkspaceRepositoryConfigurationOutput) ToWorkspaceRepositoryConfigurationOutputWithContext(ctx context.Context) WorkspaceRepositoryConfigurationOutput {
	return o
}

func (o WorkspaceRepositoryConfigurationOutput) ToWorkspaceRepositoryConfigurationPtrOutput() WorkspaceRepositoryConfigurationPtrOutput {
	return o.ToWorkspaceRepositoryConfigurationPtrOutputWithContext(context.Background())
}

func (o WorkspaceRepositoryConfigurationOutput) ToWorkspaceRepositoryConfigurationPtrOutputWithContext(ctx context.Context) WorkspaceRepositoryConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceRepositoryConfiguration) *WorkspaceRepositoryConfiguration {
		return &v
	}).(WorkspaceRepositoryConfigurationPtrOutput)
}

// Account name
func (o WorkspaceRepositoryConfigurationOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfiguration) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// GitHub bring your own app client id
func (o WorkspaceRepositoryConfigurationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfiguration) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// GitHub bring your own app client secret information.
func (o WorkspaceRepositoryConfigurationOutput) ClientSecret() GitHubClientSecretPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfiguration) *GitHubClientSecret { return v.ClientSecret }).(GitHubClientSecretPtrOutput)
}

// Collaboration branch
func (o WorkspaceRepositoryConfigurationOutput) CollaborationBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfiguration) *string { return v.CollaborationBranch }).(pulumi.StringPtrOutput)
}

// GitHub Enterprise host name. For example: https://github.mydomain.com
func (o WorkspaceRepositoryConfigurationOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfiguration) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// The last commit ID
func (o WorkspaceRepositoryConfigurationOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfiguration) *string { return v.LastCommitId }).(pulumi.StringPtrOutput)
}

// VSTS project name
func (o WorkspaceRepositoryConfigurationOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfiguration) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// Repository name
func (o WorkspaceRepositoryConfigurationOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfiguration) *string { return v.RepositoryName }).(pulumi.StringPtrOutput)
}

// Root folder to use in the repository
func (o WorkspaceRepositoryConfigurationOutput) RootFolder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfiguration) *string { return v.RootFolder }).(pulumi.StringPtrOutput)
}

// The VSTS tenant ID
func (o WorkspaceRepositoryConfigurationOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfiguration) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration
func (o WorkspaceRepositoryConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type WorkspaceRepositoryConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceRepositoryConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceRepositoryConfiguration)(nil)).Elem()
}

func (o WorkspaceRepositoryConfigurationPtrOutput) ToWorkspaceRepositoryConfigurationPtrOutput() WorkspaceRepositoryConfigurationPtrOutput {
	return o
}

func (o WorkspaceRepositoryConfigurationPtrOutput) ToWorkspaceRepositoryConfigurationPtrOutputWithContext(ctx context.Context) WorkspaceRepositoryConfigurationPtrOutput {
	return o
}

func (o WorkspaceRepositoryConfigurationPtrOutput) Elem() WorkspaceRepositoryConfigurationOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfiguration) WorkspaceRepositoryConfiguration {
		if v != nil {
			return *v
		}
		var ret WorkspaceRepositoryConfiguration
		return ret
	}).(WorkspaceRepositoryConfigurationOutput)
}

// Account name
func (o WorkspaceRepositoryConfigurationPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

// GitHub bring your own app client id
func (o WorkspaceRepositoryConfigurationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// GitHub bring your own app client secret information.
func (o WorkspaceRepositoryConfigurationPtrOutput) ClientSecret() GitHubClientSecretPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfiguration) *GitHubClientSecret {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(GitHubClientSecretPtrOutput)
}

// Collaboration branch
func (o WorkspaceRepositoryConfigurationPtrOutput) CollaborationBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CollaborationBranch
	}).(pulumi.StringPtrOutput)
}

// GitHub Enterprise host name. For example: https://github.mydomain.com
func (o WorkspaceRepositoryConfigurationPtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.HostName
	}).(pulumi.StringPtrOutput)
}

// The last commit ID
func (o WorkspaceRepositoryConfigurationPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// VSTS project name
func (o WorkspaceRepositoryConfigurationPtrOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ProjectName
	}).(pulumi.StringPtrOutput)
}

// Repository name
func (o WorkspaceRepositoryConfigurationPtrOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RepositoryName
	}).(pulumi.StringPtrOutput)
}

// Root folder to use in the repository
func (o WorkspaceRepositoryConfigurationPtrOutput) RootFolder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RootFolder
	}).(pulumi.StringPtrOutput)
}

// The VSTS tenant ID
func (o WorkspaceRepositoryConfigurationPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration
func (o WorkspaceRepositoryConfigurationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Git integration settings
type WorkspaceRepositoryConfigurationResponse struct {
	// Account name
	AccountName *string `pulumi:"accountName"`
	// GitHub bring your own app client id
	ClientId *string `pulumi:"clientId"`
	// GitHub bring your own app client secret information.
	ClientSecret *GitHubClientSecretResponse `pulumi:"clientSecret"`
	// Collaboration branch
	CollaborationBranch *string `pulumi:"collaborationBranch"`
	// GitHub Enterprise host name. For example: https://github.mydomain.com
	HostName *string `pulumi:"hostName"`
	// The last commit ID
	LastCommitId *string `pulumi:"lastCommitId"`
	// VSTS project name
	ProjectName *string `pulumi:"projectName"`
	// Repository name
	RepositoryName *string `pulumi:"repositoryName"`
	// Root folder to use in the repository
	RootFolder *string `pulumi:"rootFolder"`
	// The VSTS tenant ID
	TenantId *string `pulumi:"tenantId"`
	// Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration
	Type *string `pulumi:"type"`
}

// Git integration settings
type WorkspaceRepositoryConfigurationResponseOutput struct{ *pulumi.OutputState }

func (WorkspaceRepositoryConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceRepositoryConfigurationResponse)(nil)).Elem()
}

func (o WorkspaceRepositoryConfigurationResponseOutput) ToWorkspaceRepositoryConfigurationResponseOutput() WorkspaceRepositoryConfigurationResponseOutput {
	return o
}

func (o WorkspaceRepositoryConfigurationResponseOutput) ToWorkspaceRepositoryConfigurationResponseOutputWithContext(ctx context.Context) WorkspaceRepositoryConfigurationResponseOutput {
	return o
}

// Account name
func (o WorkspaceRepositoryConfigurationResponseOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfigurationResponse) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// GitHub bring your own app client id
func (o WorkspaceRepositoryConfigurationResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfigurationResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// GitHub bring your own app client secret information.
func (o WorkspaceRepositoryConfigurationResponseOutput) ClientSecret() GitHubClientSecretResponsePtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfigurationResponse) *GitHubClientSecretResponse { return v.ClientSecret }).(GitHubClientSecretResponsePtrOutput)
}

// Collaboration branch
func (o WorkspaceRepositoryConfigurationResponseOutput) CollaborationBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfigurationResponse) *string { return v.CollaborationBranch }).(pulumi.StringPtrOutput)
}

// GitHub Enterprise host name. For example: https://github.mydomain.com
func (o WorkspaceRepositoryConfigurationResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfigurationResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// The last commit ID
func (o WorkspaceRepositoryConfigurationResponseOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfigurationResponse) *string { return v.LastCommitId }).(pulumi.StringPtrOutput)
}

// VSTS project name
func (o WorkspaceRepositoryConfigurationResponseOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfigurationResponse) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// Repository name
func (o WorkspaceRepositoryConfigurationResponseOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfigurationResponse) *string { return v.RepositoryName }).(pulumi.StringPtrOutput)
}

// Root folder to use in the repository
func (o WorkspaceRepositoryConfigurationResponseOutput) RootFolder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfigurationResponse) *string { return v.RootFolder }).(pulumi.StringPtrOutput)
}

// The VSTS tenant ID
func (o WorkspaceRepositoryConfigurationResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfigurationResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration
func (o WorkspaceRepositoryConfigurationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceRepositoryConfigurationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type WorkspaceRepositoryConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkspaceRepositoryConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceRepositoryConfigurationResponse)(nil)).Elem()
}

func (o WorkspaceRepositoryConfigurationResponsePtrOutput) ToWorkspaceRepositoryConfigurationResponsePtrOutput() WorkspaceRepositoryConfigurationResponsePtrOutput {
	return o
}

func (o WorkspaceRepositoryConfigurationResponsePtrOutput) ToWorkspaceRepositoryConfigurationResponsePtrOutputWithContext(ctx context.Context) WorkspaceRepositoryConfigurationResponsePtrOutput {
	return o
}

func (o WorkspaceRepositoryConfigurationResponsePtrOutput) Elem() WorkspaceRepositoryConfigurationResponseOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfigurationResponse) WorkspaceRepositoryConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret WorkspaceRepositoryConfigurationResponse
		return ret
	}).(WorkspaceRepositoryConfigurationResponseOutput)
}

// Account name
func (o WorkspaceRepositoryConfigurationResponsePtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

// GitHub bring your own app client id
func (o WorkspaceRepositoryConfigurationResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// GitHub bring your own app client secret information.
func (o WorkspaceRepositoryConfigurationResponsePtrOutput) ClientSecret() GitHubClientSecretResponsePtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfigurationResponse) *GitHubClientSecretResponse {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(GitHubClientSecretResponsePtrOutput)
}

// Collaboration branch
func (o WorkspaceRepositoryConfigurationResponsePtrOutput) CollaborationBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.CollaborationBranch
	}).(pulumi.StringPtrOutput)
}

// GitHub Enterprise host name. For example: https://github.mydomain.com
func (o WorkspaceRepositoryConfigurationResponsePtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostName
	}).(pulumi.StringPtrOutput)
}

// The last commit ID
func (o WorkspaceRepositoryConfigurationResponsePtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// VSTS project name
func (o WorkspaceRepositoryConfigurationResponsePtrOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProjectName
	}).(pulumi.StringPtrOutput)
}

// Repository name
func (o WorkspaceRepositoryConfigurationResponsePtrOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RepositoryName
	}).(pulumi.StringPtrOutput)
}

// Root folder to use in the repository
func (o WorkspaceRepositoryConfigurationResponsePtrOutput) RootFolder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RootFolder
	}).(pulumi.StringPtrOutput)
}

// The VSTS tenant ID
func (o WorkspaceRepositoryConfigurationResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration
func (o WorkspaceRepositoryConfigurationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRepositoryConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AutoPausePropertiesOutput{})
	pulumi.RegisterOutputType(AutoPausePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AutoPausePropertiesResponseOutput{})
	pulumi.RegisterOutputType(AutoPausePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoScalePropertiesOutput{})
	pulumi.RegisterOutputType(AutoScalePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AutoScalePropertiesResponseOutput{})
	pulumi.RegisterOutputType(AutoScalePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomerManagedKeyDetailsOutput{})
	pulumi.RegisterOutputType(CustomerManagedKeyDetailsPtrOutput{})
	pulumi.RegisterOutputType(CustomerManagedKeyDetailsResponseOutput{})
	pulumi.RegisterOutputType(CustomerManagedKeyDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(DataLakeStorageAccountDetailsOutput{})
	pulumi.RegisterOutputType(DataLakeStorageAccountDetailsPtrOutput{})
	pulumi.RegisterOutputType(DataLakeStorageAccountDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataLakeStorageAccountDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(DynamicExecutorAllocationOutput{})
	pulumi.RegisterOutputType(DynamicExecutorAllocationPtrOutput{})
	pulumi.RegisterOutputType(DynamicExecutorAllocationResponseOutput{})
	pulumi.RegisterOutputType(DynamicExecutorAllocationResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionDetailsOutput{})
	pulumi.RegisterOutputType(EncryptionDetailsPtrOutput{})
	pulumi.RegisterOutputType(EncryptionDetailsResponseOutput{})
	pulumi.RegisterOutputType(EncryptionDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(GitHubClientSecretOutput{})
	pulumi.RegisterOutputType(GitHubClientSecretPtrOutput{})
	pulumi.RegisterOutputType(GitHubClientSecretResponseOutput{})
	pulumi.RegisterOutputType(GitHubClientSecretResponsePtrOutput{})
	pulumi.RegisterOutputType(LibraryInfoOutput{})
	pulumi.RegisterOutputType(LibraryInfoArrayOutput{})
	pulumi.RegisterOutputType(LibraryInfoResponseOutput{})
	pulumi.RegisterOutputType(LibraryInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(LibraryRequirementsOutput{})
	pulumi.RegisterOutputType(LibraryRequirementsPtrOutput{})
	pulumi.RegisterOutputType(LibraryRequirementsResponseOutput{})
	pulumi.RegisterOutputType(LibraryRequirementsResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedIdentityOutput{})
	pulumi.RegisterOutputType(ManagedIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedVirtualNetworkSettingsOutput{})
	pulumi.RegisterOutputType(ManagedVirtualNetworkSettingsPtrOutput{})
	pulumi.RegisterOutputType(ManagedVirtualNetworkSettingsResponseOutput{})
	pulumi.RegisterOutputType(ManagedVirtualNetworkSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionTypeOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionTypeArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionForPrivateLinkHubBasicResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionForPrivateLinkHubBasicResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(PurviewConfigurationOutput{})
	pulumi.RegisterOutputType(PurviewConfigurationPtrOutput{})
	pulumi.RegisterOutputType(PurviewConfigurationResponseOutput{})
	pulumi.RegisterOutputType(PurviewConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SqlPoolVulnerabilityAssessmentRuleBaselineItemOutput{})
	pulumi.RegisterOutputType(SqlPoolVulnerabilityAssessmentRuleBaselineItemArrayOutput{})
	pulumi.RegisterOutputType(SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseOutput{})
	pulumi.RegisterOutputType(SqlPoolVulnerabilityAssessmentRuleBaselineItemResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VulnerabilityAssessmentRecurringScansPropertiesOutput{})
	pulumi.RegisterOutputType(VulnerabilityAssessmentRecurringScansPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VulnerabilityAssessmentRecurringScansPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkspaceKeyDetailsOutput{})
	pulumi.RegisterOutputType(WorkspaceKeyDetailsPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceKeyDetailsResponseOutput{})
	pulumi.RegisterOutputType(WorkspaceKeyDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkspaceRepositoryConfigurationOutput{})
	pulumi.RegisterOutputType(WorkspaceRepositoryConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceRepositoryConfigurationResponseOutput{})
	pulumi.RegisterOutputType(WorkspaceRepositoryConfigurationResponsePtrOutput{})
}
