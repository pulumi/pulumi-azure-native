// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200401preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A sql pool resource.
type SqlPoolsV3 struct {
	pulumi.CustomResourceState

	// The current service level objective name of the sql pool.
	CurrentServiceObjectiveName pulumi.StringOutput `pulumi:"currentServiceObjectiveName"`
	// Kind of SqlPool.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The requested service level objective name of the sql pool.
	RequestedServiceObjectiveName pulumi.StringOutput `pulumi:"requestedServiceObjectiveName"`
	// The sql pool SKU. The list of SKUs may vary by region and support offer.
	Sku SkuResponsePtrOutput `pulumi:"sku"`
	// The Guid of the sql pool.
	SqlPoolGuid pulumi.StringOutput `pulumi:"sqlPoolGuid"`
	// The status of the sql pool.
	Status pulumi.StringOutput `pulumi:"status"`
	// SystemData of SqlPool.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSqlPoolsV3 registers a new resource with the given unique name, arguments, and options.
func NewSqlPoolsV3(ctx *pulumi.Context,
	name string, args *SqlPoolsV3Args, opts ...pulumi.ResourceOption) (*SqlPoolsV3, error) {
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.SqlPoolName == nil {
		return nil, errors.New("missing required argument 'SqlPoolName'")
	}
	if args == nil || args.WorkspaceName == nil {
		return nil, errors.New("missing required argument 'WorkspaceName'")
	}
	if args == nil {
		args = &SqlPoolsV3Args{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:synapse/v20190601preview:SqlPoolsV3"),
		},
	})
	opts = append(opts, aliases)
	var resource SqlPoolsV3
	err := ctx.RegisterResource("azure-nextgen:synapse/v20200401preview:SqlPoolsV3", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSqlPoolsV3 gets an existing SqlPoolsV3 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSqlPoolsV3(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SqlPoolsV3State, opts ...pulumi.ResourceOption) (*SqlPoolsV3, error) {
	var resource SqlPoolsV3
	err := ctx.ReadResource("azure-nextgen:synapse/v20200401preview:SqlPoolsV3", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SqlPoolsV3 resources.
type sqlPoolsV3State struct {
	// The current service level objective name of the sql pool.
	CurrentServiceObjectiveName *string `pulumi:"currentServiceObjectiveName"`
	// Kind of SqlPool.
	Kind *string `pulumi:"kind"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// The requested service level objective name of the sql pool.
	RequestedServiceObjectiveName *string `pulumi:"requestedServiceObjectiveName"`
	// The sql pool SKU. The list of SKUs may vary by region and support offer.
	Sku *SkuResponse `pulumi:"sku"`
	// The Guid of the sql pool.
	SqlPoolGuid *string `pulumi:"sqlPoolGuid"`
	// The status of the sql pool.
	Status *string `pulumi:"status"`
	// SystemData of SqlPool.
	SystemData *SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `pulumi:"type"`
}

type SqlPoolsV3State struct {
	// The current service level objective name of the sql pool.
	CurrentServiceObjectiveName pulumi.StringPtrInput
	// Kind of SqlPool.
	Kind pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource
	Name pulumi.StringPtrInput
	// The requested service level objective name of the sql pool.
	RequestedServiceObjectiveName pulumi.StringPtrInput
	// The sql pool SKU. The list of SKUs may vary by region and support offer.
	Sku SkuResponsePtrInput
	// The Guid of the sql pool.
	SqlPoolGuid pulumi.StringPtrInput
	// The status of the sql pool.
	Status pulumi.StringPtrInput
	// SystemData of SqlPool.
	SystemData SystemDataResponsePtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringPtrInput
}

func (SqlPoolsV3State) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlPoolsV3State)(nil)).Elem()
}

type sqlPoolsV3Args struct {
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The sql pool SKU. The list of SKUs may vary by region and support offer.
	Sku *Sku `pulumi:"sku"`
	// The name of the sql pool.
	SqlPoolName string `pulumi:"sqlPoolName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The name of the workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a SqlPoolsV3 resource.
type SqlPoolsV3Args struct {
	// The geo-location where the resource lives
	Location pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The sql pool SKU. The list of SKUs may vary by region and support offer.
	Sku SkuPtrInput
	// The name of the sql pool.
	SqlPoolName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The name of the workspace.
	WorkspaceName pulumi.StringInput
}

func (SqlPoolsV3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlPoolsV3Args)(nil)).Elem()
}
