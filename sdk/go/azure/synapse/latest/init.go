// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure-native/sdk/go/azure"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure-native:synapse/latest:BigDataPool":
		r, err = NewBigDataPool(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:synapse/latest:IntegrationRuntime":
		r, err = NewIntegrationRuntime(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:synapse/latest:IpFirewallRule":
		r, err = NewIpFirewallRule(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:synapse/latest:Key":
		r, err = NewKey(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:synapse/latest:PrivateEndpointConnection":
		r, err = NewPrivateEndpointConnection(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:synapse/latest:PrivateLinkHub":
		r, err = NewPrivateLinkHub(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:synapse/latest:SqlPool":
		r, err = NewSqlPool(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:synapse/latest:SqlPoolSensitivityLabel":
		r, err = NewSqlPoolSensitivityLabel(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:synapse/latest:SqlPoolTransparentDataEncryption":
		r, err = NewSqlPoolTransparentDataEncryption(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:synapse/latest:SqlPoolVulnerabilityAssessment":
		r, err = NewSqlPoolVulnerabilityAssessment(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:synapse/latest:SqlPoolVulnerabilityAssessmentRuleBaseline":
		r, err = NewSqlPoolVulnerabilityAssessmentRuleBaseline(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:synapse/latest:SqlPoolWorkloadClassifier":
		r, err = NewSqlPoolWorkloadClassifier(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:synapse/latest:SqlPoolWorkloadGroup":
		r, err = NewSqlPoolWorkloadGroup(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:synapse/latest:Workspace":
		r, err = NewWorkspace(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:synapse/latest:WorkspaceAadAdmin":
		r, err = NewWorkspaceAadAdmin(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:synapse/latest:WorkspaceManagedSqlServerVulnerabilityAssessment":
		r, err = NewWorkspaceManagedSqlServerVulnerabilityAssessment(ctx, name, nil, pulumi.URN_(urn))
	case "azure-native:synapse/latest:WorkspaceSqlAadAdmin":
		r, err = NewWorkspaceSqlAadAdmin(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := azure.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"azure-native",
		"synapse/latest",
		&module{version},
	)
}
