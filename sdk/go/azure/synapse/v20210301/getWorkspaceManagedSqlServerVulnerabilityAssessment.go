


package v20210301

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupWorkspaceManagedSqlServerVulnerabilityAssessment(ctx *pulumi.Context, args *LookupWorkspaceManagedSqlServerVulnerabilityAssessmentArgs, opts ...pulumi.InvokeOption) (*LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult, error) {
	var rv LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult
	err := ctx.Invoke("azure-native:synapse/v20210301:getWorkspaceManagedSqlServerVulnerabilityAssessment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupWorkspaceManagedSqlServerVulnerabilityAssessmentArgs struct {
	ResourceGroupName           string `pulumi:"resourceGroupName"`
	VulnerabilityAssessmentName string `pulumi:"vulnerabilityAssessmentName"`
	WorkspaceName               string `pulumi:"workspaceName"`
}


type LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult struct {
	Id                   string                                                   `pulumi:"id"`
	Name                 string                                                   `pulumi:"name"`
	RecurringScans       *VulnerabilityAssessmentRecurringScansPropertiesResponse `pulumi:"recurringScans"`
	StorageContainerPath string                                                   `pulumi:"storageContainerPath"`
	Type                 string                                                   `pulumi:"type"`
}


func (val *LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult) Defaults() *LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.RecurringScans = tmp.RecurringScans.Defaults()

	return &tmp
}

func LookupWorkspaceManagedSqlServerVulnerabilityAssessmentOutput(ctx *pulumi.Context, args LookupWorkspaceManagedSqlServerVulnerabilityAssessmentOutputArgs, opts ...pulumi.InvokeOption) LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult, error) {
			args := v.(LookupWorkspaceManagedSqlServerVulnerabilityAssessmentArgs)
			r, err := LookupWorkspaceManagedSqlServerVulnerabilityAssessment(ctx, &args, opts...)
			var s LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput)
}

type LookupWorkspaceManagedSqlServerVulnerabilityAssessmentOutputArgs struct {
	ResourceGroupName           pulumi.StringInput `pulumi:"resourceGroupName"`
	VulnerabilityAssessmentName pulumi.StringInput `pulumi:"vulnerabilityAssessmentName"`
	WorkspaceName               pulumi.StringInput `pulumi:"workspaceName"`
}

func (LookupWorkspaceManagedSqlServerVulnerabilityAssessmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceManagedSqlServerVulnerabilityAssessmentArgs)(nil)).Elem()
}


type LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput struct{ *pulumi.OutputState }

func (LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult)(nil)).Elem()
}

func (o LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput) ToLookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput() LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput {
	return o
}

func (o LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput) ToLookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutputWithContext(ctx context.Context) LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput {
	return o
}

func (o LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput) RecurringScans() VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult) *VulnerabilityAssessmentRecurringScansPropertiesResponse {
		return v.RecurringScans
	}).(VulnerabilityAssessmentRecurringScansPropertiesResponsePtrOutput)
}

func (o LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput) StorageContainerPath() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult) string {
		return v.StorageContainerPath
	}).(pulumi.StringOutput)
}

func (o LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkspaceManagedSqlServerVulnerabilityAssessmentResultOutput{})
}
