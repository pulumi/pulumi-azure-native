// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210601

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Plan accessibility
type Accessibility string

const (
	AccessibilityUnknown                    = Accessibility("Unknown")
	AccessibilityPublic                     = Accessibility("Public")
	AccessibilityPrivateTenantOnLevel       = Accessibility("PrivateTenantOnLevel")
	AccessibilityPrivateSubscriptionOnLevel = Accessibility("PrivateSubscriptionOnLevel")
)

func (Accessibility) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessibility)(nil)).Elem()
}

func (e Accessibility) ToAccessibilityOutput() AccessibilityOutput {
	return pulumi.ToOutput(e).(AccessibilityOutput)
}

func (e Accessibility) ToAccessibilityOutputWithContext(ctx context.Context) AccessibilityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AccessibilityOutput)
}

func (e Accessibility) ToAccessibilityPtrOutput() AccessibilityPtrOutput {
	return e.ToAccessibilityPtrOutputWithContext(context.Background())
}

func (e Accessibility) ToAccessibilityPtrOutputWithContext(ctx context.Context) AccessibilityPtrOutput {
	return Accessibility(e).ToAccessibilityOutputWithContext(ctx).ToAccessibilityPtrOutputWithContext(ctx)
}

func (e Accessibility) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Accessibility) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Accessibility) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Accessibility) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AccessibilityOutput struct{ *pulumi.OutputState }

func (AccessibilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Accessibility)(nil)).Elem()
}

func (o AccessibilityOutput) ToAccessibilityOutput() AccessibilityOutput {
	return o
}

func (o AccessibilityOutput) ToAccessibilityOutputWithContext(ctx context.Context) AccessibilityOutput {
	return o
}

func (o AccessibilityOutput) ToAccessibilityPtrOutput() AccessibilityPtrOutput {
	return o.ToAccessibilityPtrOutputWithContext(context.Background())
}

func (o AccessibilityOutput) ToAccessibilityPtrOutputWithContext(ctx context.Context) AccessibilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Accessibility) *Accessibility {
		return &v
	}).(AccessibilityPtrOutput)
}

func (o AccessibilityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AccessibilityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Accessibility) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AccessibilityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessibilityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Accessibility) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AccessibilityPtrOutput struct{ *pulumi.OutputState }

func (AccessibilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Accessibility)(nil)).Elem()
}

func (o AccessibilityPtrOutput) ToAccessibilityPtrOutput() AccessibilityPtrOutput {
	return o
}

func (o AccessibilityPtrOutput) ToAccessibilityPtrOutputWithContext(ctx context.Context) AccessibilityPtrOutput {
	return o
}

func (o AccessibilityPtrOutput) Elem() AccessibilityOutput {
	return o.ApplyT(func(v *Accessibility) Accessibility {
		if v != nil {
			return *v
		}
		var ret Accessibility
		return ret
	}).(AccessibilityOutput)
}

func (o AccessibilityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessibilityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Accessibility) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AccessibilityInput is an input type that accepts AccessibilityArgs and AccessibilityOutput values.
// You can construct a concrete instance of `AccessibilityInput` via:
//
//          AccessibilityArgs{...}
type AccessibilityInput interface {
	pulumi.Input

	ToAccessibilityOutput() AccessibilityOutput
	ToAccessibilityOutputWithContext(context.Context) AccessibilityOutput
}

var accessibilityPtrType = reflect.TypeOf((**Accessibility)(nil)).Elem()

type AccessibilityPtrInput interface {
	pulumi.Input

	ToAccessibilityPtrOutput() AccessibilityPtrOutput
	ToAccessibilityPtrOutputWithContext(context.Context) AccessibilityPtrOutput
}

type accessibilityPtr string

func AccessibilityPtr(v string) AccessibilityPtrInput {
	return (*accessibilityPtr)(&v)
}

func (*accessibilityPtr) ElementType() reflect.Type {
	return accessibilityPtrType
}

func (in *accessibilityPtr) ToAccessibilityPtrOutput() AccessibilityPtrOutput {
	return pulumi.ToOutput(in).(AccessibilityPtrOutput)
}

func (in *accessibilityPtr) ToAccessibilityPtrOutputWithContext(ctx context.Context) AccessibilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AccessibilityPtrOutput)
}

// Indicates private store availability
type Availability string

const (
	AvailabilityEnabled  = Availability("enabled")
	AvailabilityDisabled = Availability("disabled")
)

func (Availability) ElementType() reflect.Type {
	return reflect.TypeOf((*Availability)(nil)).Elem()
}

func (e Availability) ToAvailabilityOutput() AvailabilityOutput {
	return pulumi.ToOutput(e).(AvailabilityOutput)
}

func (e Availability) ToAvailabilityOutputWithContext(ctx context.Context) AvailabilityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AvailabilityOutput)
}

func (e Availability) ToAvailabilityPtrOutput() AvailabilityPtrOutput {
	return e.ToAvailabilityPtrOutputWithContext(context.Background())
}

func (e Availability) ToAvailabilityPtrOutputWithContext(ctx context.Context) AvailabilityPtrOutput {
	return Availability(e).ToAvailabilityOutputWithContext(ctx).ToAvailabilityPtrOutputWithContext(ctx)
}

func (e Availability) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Availability) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Availability) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Availability) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AvailabilityOutput struct{ *pulumi.OutputState }

func (AvailabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Availability)(nil)).Elem()
}

func (o AvailabilityOutput) ToAvailabilityOutput() AvailabilityOutput {
	return o
}

func (o AvailabilityOutput) ToAvailabilityOutputWithContext(ctx context.Context) AvailabilityOutput {
	return o
}

func (o AvailabilityOutput) ToAvailabilityPtrOutput() AvailabilityPtrOutput {
	return o.ToAvailabilityPtrOutputWithContext(context.Background())
}

func (o AvailabilityOutput) ToAvailabilityPtrOutputWithContext(ctx context.Context) AvailabilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Availability) *Availability {
		return &v
	}).(AvailabilityPtrOutput)
}

func (o AvailabilityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AvailabilityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Availability) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AvailabilityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AvailabilityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Availability) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AvailabilityPtrOutput struct{ *pulumi.OutputState }

func (AvailabilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Availability)(nil)).Elem()
}

func (o AvailabilityPtrOutput) ToAvailabilityPtrOutput() AvailabilityPtrOutput {
	return o
}

func (o AvailabilityPtrOutput) ToAvailabilityPtrOutputWithContext(ctx context.Context) AvailabilityPtrOutput {
	return o
}

func (o AvailabilityPtrOutput) Elem() AvailabilityOutput {
	return o.ApplyT(func(v *Availability) Availability {
		if v != nil {
			return *v
		}
		var ret Availability
		return ret
	}).(AvailabilityOutput)
}

func (o AvailabilityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AvailabilityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Availability) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AvailabilityInput is an input type that accepts AvailabilityArgs and AvailabilityOutput values.
// You can construct a concrete instance of `AvailabilityInput` via:
//
//          AvailabilityArgs{...}
type AvailabilityInput interface {
	pulumi.Input

	ToAvailabilityOutput() AvailabilityOutput
	ToAvailabilityOutputWithContext(context.Context) AvailabilityOutput
}

var availabilityPtrType = reflect.TypeOf((**Availability)(nil)).Elem()

type AvailabilityPtrInput interface {
	pulumi.Input

	ToAvailabilityPtrOutput() AvailabilityPtrOutput
	ToAvailabilityPtrOutputWithContext(context.Context) AvailabilityPtrOutput
}

type availabilityPtr string

func AvailabilityPtr(v string) AvailabilityPtrInput {
	return (*availabilityPtr)(&v)
}

func (*availabilityPtr) ElementType() reflect.Type {
	return availabilityPtrType
}

func (in *availabilityPtr) ToAvailabilityPtrOutput() AvailabilityPtrOutput {
	return pulumi.ToOutput(in).(AvailabilityPtrOutput)
}

func (in *availabilityPtr) ToAvailabilityPtrOutputWithContext(ctx context.Context) AvailabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AvailabilityPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessibilityOutput{})
	pulumi.RegisterOutputType(AccessibilityPtrOutput{})
	pulumi.RegisterOutputType(AvailabilityOutput{})
	pulumi.RegisterOutputType(AvailabilityPtrOutput{})
}
