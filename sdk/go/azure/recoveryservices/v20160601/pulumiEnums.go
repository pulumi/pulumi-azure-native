// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20160601

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The backup management type associated with the backup item.
type BackupManagementType string

const (
	BackupManagementTypeInvalid           = BackupManagementType("Invalid")
	BackupManagementTypeAzureIaasVM       = BackupManagementType("AzureIaasVM")
	BackupManagementTypeMAB               = BackupManagementType("MAB")
	BackupManagementTypeDPM               = BackupManagementType("DPM")
	BackupManagementTypeAzureBackupServer = BackupManagementType("AzureBackupServer")
	BackupManagementTypeAzureSql          = BackupManagementType("AzureSql")
)

func (BackupManagementType) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupManagementType)(nil)).Elem()
}

func (e BackupManagementType) ToBackupManagementTypeOutput() BackupManagementTypeOutput {
	return pulumi.ToOutput(e).(BackupManagementTypeOutput)
}

func (e BackupManagementType) ToBackupManagementTypeOutputWithContext(ctx context.Context) BackupManagementTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BackupManagementTypeOutput)
}

func (e BackupManagementType) ToBackupManagementTypePtrOutput() BackupManagementTypePtrOutput {
	return e.ToBackupManagementTypePtrOutputWithContext(context.Background())
}

func (e BackupManagementType) ToBackupManagementTypePtrOutputWithContext(ctx context.Context) BackupManagementTypePtrOutput {
	return BackupManagementType(e).ToBackupManagementTypeOutputWithContext(ctx).ToBackupManagementTypePtrOutputWithContext(ctx)
}

func (e BackupManagementType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupManagementType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupManagementType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackupManagementType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BackupManagementTypeOutput struct{ *pulumi.OutputState }

func (BackupManagementTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupManagementType)(nil)).Elem()
}

func (o BackupManagementTypeOutput) ToBackupManagementTypeOutput() BackupManagementTypeOutput {
	return o
}

func (o BackupManagementTypeOutput) ToBackupManagementTypeOutputWithContext(ctx context.Context) BackupManagementTypeOutput {
	return o
}

func (o BackupManagementTypeOutput) ToBackupManagementTypePtrOutput() BackupManagementTypePtrOutput {
	return o.ToBackupManagementTypePtrOutputWithContext(context.Background())
}

func (o BackupManagementTypeOutput) ToBackupManagementTypePtrOutputWithContext(ctx context.Context) BackupManagementTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupManagementType) *BackupManagementType {
		return &v
	}).(BackupManagementTypePtrOutput)
}

func (o BackupManagementTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BackupManagementTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackupManagementType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BackupManagementTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackupManagementTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackupManagementType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BackupManagementTypePtrOutput struct{ *pulumi.OutputState }

func (BackupManagementTypePtrOutput) ElementType() reflect.Type {
	return backupManagementTypePtrType
}

func (o BackupManagementTypePtrOutput) ToBackupManagementTypePtrOutput() BackupManagementTypePtrOutput {
	return o
}

func (o BackupManagementTypePtrOutput) ToBackupManagementTypePtrOutputWithContext(ctx context.Context) BackupManagementTypePtrOutput {
	return o
}

func (o BackupManagementTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackupManagementTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BackupManagementType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o BackupManagementTypePtrOutput) Elem() BackupManagementTypeOutput {
	return o.ApplyT(func(v *BackupManagementType) BackupManagementType {
		var ret BackupManagementType
		if v != nil {
			ret = *v
		}
		return ret
	}).(BackupManagementTypeOutput)
}

// BackupManagementTypeInput is an input type that accepts BackupManagementTypeArgs and BackupManagementTypeOutput values.
// You can construct a concrete instance of `BackupManagementTypeInput` via:
//
//          BackupManagementTypeArgs{...}
type BackupManagementTypeInput interface {
	pulumi.Input

	ToBackupManagementTypeOutput() BackupManagementTypeOutput
	ToBackupManagementTypeOutputWithContext(context.Context) BackupManagementTypeOutput
}

var backupManagementTypePtrType = reflect.TypeOf((**BackupManagementType)(nil)).Elem()

type BackupManagementTypePtrInput interface {
	pulumi.Input

	ToBackupManagementTypePtrOutput() BackupManagementTypePtrOutput
	ToBackupManagementTypePtrOutputWithContext(context.Context) BackupManagementTypePtrOutput
}

type backupManagementTypePtr string

func BackupManagementTypePtr(v string) BackupManagementTypePtrInput {
	return (*backupManagementTypePtr)(&v)
}

func (*backupManagementTypePtr) ElementType() reflect.Type {
	return backupManagementTypePtrType
}

func (in *backupManagementTypePtr) ToBackupManagementTypePtrOutput() BackupManagementTypePtrOutput {
	return pulumi.ToOutput(in).(BackupManagementTypePtrOutput)
}

func (in *backupManagementTypePtr) ToBackupManagementTypePtrOutputWithContext(ctx context.Context) BackupManagementTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BackupManagementTypePtrOutput)
}

// The workload type for this item.
type DataSourceType string

const (
	DataSourceTypeInvalid    = DataSourceType("Invalid")
	DataSourceTypeVM         = DataSourceType("VM")
	DataSourceTypeFileFolder = DataSourceType("FileFolder")
	DataSourceTypeAzureSqlDb = DataSourceType("AzureSqlDb")
	DataSourceTypeSQLDB      = DataSourceType("SQLDB")
	DataSourceTypeExchange   = DataSourceType("Exchange")
	DataSourceTypeSharepoint = DataSourceType("Sharepoint")
	DataSourceTypeDPMUnknown = DataSourceType("DPMUnknown")
)

func (DataSourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceType)(nil)).Elem()
}

func (e DataSourceType) ToDataSourceTypeOutput() DataSourceTypeOutput {
	return pulumi.ToOutput(e).(DataSourceTypeOutput)
}

func (e DataSourceType) ToDataSourceTypeOutputWithContext(ctx context.Context) DataSourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceTypeOutput)
}

func (e DataSourceType) ToDataSourceTypePtrOutput() DataSourceTypePtrOutput {
	return e.ToDataSourceTypePtrOutputWithContext(context.Background())
}

func (e DataSourceType) ToDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceTypePtrOutput {
	return DataSourceType(e).ToDataSourceTypeOutputWithContext(ctx).ToDataSourceTypePtrOutputWithContext(ctx)
}

func (e DataSourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceTypeOutput struct{ *pulumi.OutputState }

func (DataSourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceType)(nil)).Elem()
}

func (o DataSourceTypeOutput) ToDataSourceTypeOutput() DataSourceTypeOutput {
	return o
}

func (o DataSourceTypeOutput) ToDataSourceTypeOutputWithContext(ctx context.Context) DataSourceTypeOutput {
	return o
}

func (o DataSourceTypeOutput) ToDataSourceTypePtrOutput() DataSourceTypePtrOutput {
	return o.ToDataSourceTypePtrOutputWithContext(context.Background())
}

func (o DataSourceTypeOutput) ToDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceType) *DataSourceType {
		return &v
	}).(DataSourceTypePtrOutput)
}

func (o DataSourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceTypePtrOutput struct{ *pulumi.OutputState }

func (DataSourceTypePtrOutput) ElementType() reflect.Type {
	return dataSourceTypePtrType
}

func (o DataSourceTypePtrOutput) ToDataSourceTypePtrOutput() DataSourceTypePtrOutput {
	return o
}

func (o DataSourceTypePtrOutput) ToDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceTypePtrOutput {
	return o
}

func (o DataSourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceTypePtrOutput) Elem() DataSourceTypeOutput {
	return o.ApplyT(func(v *DataSourceType) DataSourceType {
		var ret DataSourceType
		if v != nil {
			ret = *v
		}
		return ret
	}).(DataSourceTypeOutput)
}

// DataSourceTypeInput is an input type that accepts DataSourceTypeArgs and DataSourceTypeOutput values.
// You can construct a concrete instance of `DataSourceTypeInput` via:
//
//          DataSourceTypeArgs{...}
type DataSourceTypeInput interface {
	pulumi.Input

	ToDataSourceTypeOutput() DataSourceTypeOutput
	ToDataSourceTypeOutputWithContext(context.Context) DataSourceTypeOutput
}

var dataSourceTypePtrType = reflect.TypeOf((**DataSourceType)(nil)).Elem()

type DataSourceTypePtrInput interface {
	pulumi.Input

	ToDataSourceTypePtrOutput() DataSourceTypePtrOutput
	ToDataSourceTypePtrOutputWithContext(context.Context) DataSourceTypePtrOutput
}

type dataSourceTypePtr string

func DataSourceTypePtr(v string) DataSourceTypePtrInput {
	return (*dataSourceTypePtr)(&v)
}

func (*dataSourceTypePtr) ElementType() reflect.Type {
	return dataSourceTypePtrType
}

func (in *dataSourceTypePtr) ToDataSourceTypePtrOutput() DataSourceTypePtrOutput {
	return pulumi.ToOutput(in).(DataSourceTypePtrOutput)
}

func (in *dataSourceTypePtr) ToDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceTypePtrOutput)
}

type DayOfWeek string

const (
	DayOfWeekSunday    = DayOfWeek("Sunday")
	DayOfWeekMonday    = DayOfWeek("Monday")
	DayOfWeekTuesday   = DayOfWeek("Tuesday")
	DayOfWeekWednesday = DayOfWeek("Wednesday")
	DayOfWeekThursday  = DayOfWeek("Thursday")
	DayOfWeekFriday    = DayOfWeek("Friday")
	DayOfWeekSaturday  = DayOfWeek("Saturday")
)

func (DayOfWeek) ElementType() reflect.Type {
	return reflect.TypeOf((*DayOfWeek)(nil)).Elem()
}

func (e DayOfWeek) ToDayOfWeekOutput() DayOfWeekOutput {
	return pulumi.ToOutput(e).(DayOfWeekOutput)
}

func (e DayOfWeek) ToDayOfWeekOutputWithContext(ctx context.Context) DayOfWeekOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DayOfWeekOutput)
}

func (e DayOfWeek) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return e.ToDayOfWeekPtrOutputWithContext(context.Background())
}

func (e DayOfWeek) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return DayOfWeek(e).ToDayOfWeekOutputWithContext(ctx).ToDayOfWeekPtrOutputWithContext(ctx)
}

func (e DayOfWeek) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DayOfWeek) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DayOfWeek) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DayOfWeek) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DayOfWeekOutput struct{ *pulumi.OutputState }

func (DayOfWeekOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DayOfWeek)(nil)).Elem()
}

func (o DayOfWeekOutput) ToDayOfWeekOutput() DayOfWeekOutput {
	return o
}

func (o DayOfWeekOutput) ToDayOfWeekOutputWithContext(ctx context.Context) DayOfWeekOutput {
	return o
}

func (o DayOfWeekOutput) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return o.ToDayOfWeekPtrOutputWithContext(context.Background())
}

func (o DayOfWeekOutput) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DayOfWeek) *DayOfWeek {
		return &v
	}).(DayOfWeekPtrOutput)
}

func (o DayOfWeekOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DayOfWeekOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DayOfWeek) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DayOfWeekOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DayOfWeekOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DayOfWeek) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DayOfWeekPtrOutput struct{ *pulumi.OutputState }

func (DayOfWeekPtrOutput) ElementType() reflect.Type {
	return dayOfWeekPtrType
}

func (o DayOfWeekPtrOutput) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return o
}

func (o DayOfWeekPtrOutput) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return o
}

func (o DayOfWeekPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DayOfWeekPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DayOfWeek) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o DayOfWeekPtrOutput) Elem() DayOfWeekOutput {
	return o.ApplyT(func(v *DayOfWeek) DayOfWeek {
		var ret DayOfWeek
		if v != nil {
			ret = *v
		}
		return ret
	}).(DayOfWeekOutput)
}

// DayOfWeekInput is an input type that accepts DayOfWeekArgs and DayOfWeekOutput values.
// You can construct a concrete instance of `DayOfWeekInput` via:
//
//          DayOfWeekArgs{...}
type DayOfWeekInput interface {
	pulumi.Input

	ToDayOfWeekOutput() DayOfWeekOutput
	ToDayOfWeekOutputWithContext(context.Context) DayOfWeekOutput
}

var dayOfWeekPtrType = reflect.TypeOf((**DayOfWeek)(nil)).Elem()

type DayOfWeekPtrInput interface {
	pulumi.Input

	ToDayOfWeekPtrOutput() DayOfWeekPtrOutput
	ToDayOfWeekPtrOutputWithContext(context.Context) DayOfWeekPtrOutput
}

type dayOfWeekPtr string

func DayOfWeekPtr(v string) DayOfWeekPtrInput {
	return (*dayOfWeekPtr)(&v)
}

func (*dayOfWeekPtr) ElementType() reflect.Type {
	return dayOfWeekPtrType
}

func (in *dayOfWeekPtr) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return pulumi.ToOutput(in).(DayOfWeekPtrOutput)
}

func (in *dayOfWeekPtr) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DayOfWeekPtrOutput)
}

// DayOfWeekArrayInput is an input type that accepts DayOfWeekArray and DayOfWeekArrayOutput values.
// You can construct a concrete instance of `DayOfWeekArrayInput` via:
//
//          DayOfWeekArray{ DayOfWeekArgs{...} }
type DayOfWeekArrayInput interface {
	pulumi.Input

	ToDayOfWeekArrayOutput() DayOfWeekArrayOutput
	ToDayOfWeekArrayOutputWithContext(context.Context) DayOfWeekArrayOutput
}

type DayOfWeekArray []DayOfWeek

func (DayOfWeekArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DayOfWeek)(nil)).Elem()
}

func (i DayOfWeekArray) ToDayOfWeekArrayOutput() DayOfWeekArrayOutput {
	return i.ToDayOfWeekArrayOutputWithContext(context.Background())
}

func (i DayOfWeekArray) ToDayOfWeekArrayOutputWithContext(ctx context.Context) DayOfWeekArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayOfWeekArrayOutput)
}

type DayOfWeekArrayOutput struct{ *pulumi.OutputState }

func (DayOfWeekArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DayOfWeek)(nil)).Elem()
}

func (o DayOfWeekArrayOutput) ToDayOfWeekArrayOutput() DayOfWeekArrayOutput {
	return o
}

func (o DayOfWeekArrayOutput) ToDayOfWeekArrayOutputWithContext(ctx context.Context) DayOfWeekArrayOutput {
	return o
}

func (o DayOfWeekArrayOutput) Index(i pulumi.IntInput) DayOfWeekOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DayOfWeekOutput {
		return vs[0].([]DayOfWeek)[vs[1].(int)].ToDayOfWeekOutput()
	}).(DayOfWeekOutput)
}

type MonthOfYear string

const (
	MonthOfYearInvalid   = MonthOfYear("Invalid")
	MonthOfYearJanuary   = MonthOfYear("January")
	MonthOfYearFebruary  = MonthOfYear("February")
	MonthOfYearMarch     = MonthOfYear("March")
	MonthOfYearApril     = MonthOfYear("April")
	MonthOfYearMay       = MonthOfYear("May")
	MonthOfYearJune      = MonthOfYear("June")
	MonthOfYearJuly      = MonthOfYear("July")
	MonthOfYearAugust    = MonthOfYear("August")
	MonthOfYearSeptember = MonthOfYear("September")
	MonthOfYearOctober   = MonthOfYear("October")
	MonthOfYearNovember  = MonthOfYear("November")
	MonthOfYearDecember  = MonthOfYear("December")
)

func (MonthOfYear) ElementType() reflect.Type {
	return reflect.TypeOf((*MonthOfYear)(nil)).Elem()
}

func (e MonthOfYear) ToMonthOfYearOutput() MonthOfYearOutput {
	return pulumi.ToOutput(e).(MonthOfYearOutput)
}

func (e MonthOfYear) ToMonthOfYearOutputWithContext(ctx context.Context) MonthOfYearOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MonthOfYearOutput)
}

func (e MonthOfYear) ToMonthOfYearPtrOutput() MonthOfYearPtrOutput {
	return e.ToMonthOfYearPtrOutputWithContext(context.Background())
}

func (e MonthOfYear) ToMonthOfYearPtrOutputWithContext(ctx context.Context) MonthOfYearPtrOutput {
	return MonthOfYear(e).ToMonthOfYearOutputWithContext(ctx).ToMonthOfYearPtrOutputWithContext(ctx)
}

func (e MonthOfYear) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MonthOfYear) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MonthOfYear) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MonthOfYear) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MonthOfYearOutput struct{ *pulumi.OutputState }

func (MonthOfYearOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonthOfYear)(nil)).Elem()
}

func (o MonthOfYearOutput) ToMonthOfYearOutput() MonthOfYearOutput {
	return o
}

func (o MonthOfYearOutput) ToMonthOfYearOutputWithContext(ctx context.Context) MonthOfYearOutput {
	return o
}

func (o MonthOfYearOutput) ToMonthOfYearPtrOutput() MonthOfYearPtrOutput {
	return o.ToMonthOfYearPtrOutputWithContext(context.Background())
}

func (o MonthOfYearOutput) ToMonthOfYearPtrOutputWithContext(ctx context.Context) MonthOfYearPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonthOfYear) *MonthOfYear {
		return &v
	}).(MonthOfYearPtrOutput)
}

func (o MonthOfYearOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MonthOfYearOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MonthOfYear) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MonthOfYearOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MonthOfYearOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MonthOfYear) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MonthOfYearPtrOutput struct{ *pulumi.OutputState }

func (MonthOfYearPtrOutput) ElementType() reflect.Type {
	return monthOfYearPtrType
}

func (o MonthOfYearPtrOutput) ToMonthOfYearPtrOutput() MonthOfYearPtrOutput {
	return o
}

func (o MonthOfYearPtrOutput) ToMonthOfYearPtrOutputWithContext(ctx context.Context) MonthOfYearPtrOutput {
	return o
}

func (o MonthOfYearPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MonthOfYearPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MonthOfYear) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o MonthOfYearPtrOutput) Elem() MonthOfYearOutput {
	return o.ApplyT(func(v *MonthOfYear) MonthOfYear {
		var ret MonthOfYear
		if v != nil {
			ret = *v
		}
		return ret
	}).(MonthOfYearOutput)
}

// MonthOfYearInput is an input type that accepts MonthOfYearArgs and MonthOfYearOutput values.
// You can construct a concrete instance of `MonthOfYearInput` via:
//
//          MonthOfYearArgs{...}
type MonthOfYearInput interface {
	pulumi.Input

	ToMonthOfYearOutput() MonthOfYearOutput
	ToMonthOfYearOutputWithContext(context.Context) MonthOfYearOutput
}

var monthOfYearPtrType = reflect.TypeOf((**MonthOfYear)(nil)).Elem()

type MonthOfYearPtrInput interface {
	pulumi.Input

	ToMonthOfYearPtrOutput() MonthOfYearPtrOutput
	ToMonthOfYearPtrOutputWithContext(context.Context) MonthOfYearPtrOutput
}

type monthOfYearPtr string

func MonthOfYearPtr(v string) MonthOfYearPtrInput {
	return (*monthOfYearPtr)(&v)
}

func (*monthOfYearPtr) ElementType() reflect.Type {
	return monthOfYearPtrType
}

func (in *monthOfYearPtr) ToMonthOfYearPtrOutput() MonthOfYearPtrOutput {
	return pulumi.ToOutput(in).(MonthOfYearPtrOutput)
}

func (in *monthOfYearPtr) ToMonthOfYearPtrOutputWithContext(ctx context.Context) MonthOfYearPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MonthOfYearPtrOutput)
}

// MonthOfYearArrayInput is an input type that accepts MonthOfYearArray and MonthOfYearArrayOutput values.
// You can construct a concrete instance of `MonthOfYearArrayInput` via:
//
//          MonthOfYearArray{ MonthOfYearArgs{...} }
type MonthOfYearArrayInput interface {
	pulumi.Input

	ToMonthOfYearArrayOutput() MonthOfYearArrayOutput
	ToMonthOfYearArrayOutputWithContext(context.Context) MonthOfYearArrayOutput
}

type MonthOfYearArray []MonthOfYear

func (MonthOfYearArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonthOfYear)(nil)).Elem()
}

func (i MonthOfYearArray) ToMonthOfYearArrayOutput() MonthOfYearArrayOutput {
	return i.ToMonthOfYearArrayOutputWithContext(context.Background())
}

func (i MonthOfYearArray) ToMonthOfYearArrayOutputWithContext(ctx context.Context) MonthOfYearArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonthOfYearArrayOutput)
}

type MonthOfYearArrayOutput struct{ *pulumi.OutputState }

func (MonthOfYearArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonthOfYear)(nil)).Elem()
}

func (o MonthOfYearArrayOutput) ToMonthOfYearArrayOutput() MonthOfYearArrayOutput {
	return o
}

func (o MonthOfYearArrayOutput) ToMonthOfYearArrayOutputWithContext(ctx context.Context) MonthOfYearArrayOutput {
	return o
}

func (o MonthOfYearArrayOutput) Index(i pulumi.IntInput) MonthOfYearOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonthOfYearOutput {
		return vs[0].([]MonthOfYear)[vs[1].(int)].ToMonthOfYearOutput()
	}).(MonthOfYearOutput)
}

// The backup state of the backup item.
type ProtectedItemState string

const (
	ProtectedItemStateInvalid           = ProtectedItemState("Invalid")
	ProtectedItemStateIRPending         = ProtectedItemState("IRPending")
	ProtectedItemStateProtected         = ProtectedItemState("Protected")
	ProtectedItemStateProtectionError   = ProtectedItemState("ProtectionError")
	ProtectedItemStateProtectionStopped = ProtectedItemState("ProtectionStopped")
	ProtectedItemStateProtectionPaused  = ProtectedItemState("ProtectionPaused")
)

func (ProtectedItemState) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectedItemState)(nil)).Elem()
}

func (e ProtectedItemState) ToProtectedItemStateOutput() ProtectedItemStateOutput {
	return pulumi.ToOutput(e).(ProtectedItemStateOutput)
}

func (e ProtectedItemState) ToProtectedItemStateOutputWithContext(ctx context.Context) ProtectedItemStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProtectedItemStateOutput)
}

func (e ProtectedItemState) ToProtectedItemStatePtrOutput() ProtectedItemStatePtrOutput {
	return e.ToProtectedItemStatePtrOutputWithContext(context.Background())
}

func (e ProtectedItemState) ToProtectedItemStatePtrOutputWithContext(ctx context.Context) ProtectedItemStatePtrOutput {
	return ProtectedItemState(e).ToProtectedItemStateOutputWithContext(ctx).ToProtectedItemStatePtrOutputWithContext(ctx)
}

func (e ProtectedItemState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProtectedItemState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProtectedItemState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProtectedItemState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProtectedItemStateOutput struct{ *pulumi.OutputState }

func (ProtectedItemStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectedItemState)(nil)).Elem()
}

func (o ProtectedItemStateOutput) ToProtectedItemStateOutput() ProtectedItemStateOutput {
	return o
}

func (o ProtectedItemStateOutput) ToProtectedItemStateOutputWithContext(ctx context.Context) ProtectedItemStateOutput {
	return o
}

func (o ProtectedItemStateOutput) ToProtectedItemStatePtrOutput() ProtectedItemStatePtrOutput {
	return o.ToProtectedItemStatePtrOutputWithContext(context.Background())
}

func (o ProtectedItemStateOutput) ToProtectedItemStatePtrOutputWithContext(ctx context.Context) ProtectedItemStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProtectedItemState) *ProtectedItemState {
		return &v
	}).(ProtectedItemStatePtrOutput)
}

func (o ProtectedItemStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProtectedItemStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProtectedItemState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProtectedItemStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtectedItemStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProtectedItemState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProtectedItemStatePtrOutput struct{ *pulumi.OutputState }

func (ProtectedItemStatePtrOutput) ElementType() reflect.Type {
	return protectedItemStatePtrType
}

func (o ProtectedItemStatePtrOutput) ToProtectedItemStatePtrOutput() ProtectedItemStatePtrOutput {
	return o
}

func (o ProtectedItemStatePtrOutput) ToProtectedItemStatePtrOutputWithContext(ctx context.Context) ProtectedItemStatePtrOutput {
	return o
}

func (o ProtectedItemStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtectedItemStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProtectedItemState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o ProtectedItemStatePtrOutput) Elem() ProtectedItemStateOutput {
	return o.ApplyT(func(v *ProtectedItemState) ProtectedItemState {
		var ret ProtectedItemState
		if v != nil {
			ret = *v
		}
		return ret
	}).(ProtectedItemStateOutput)
}

// ProtectedItemStateInput is an input type that accepts ProtectedItemStateArgs and ProtectedItemStateOutput values.
// You can construct a concrete instance of `ProtectedItemStateInput` via:
//
//          ProtectedItemStateArgs{...}
type ProtectedItemStateInput interface {
	pulumi.Input

	ToProtectedItemStateOutput() ProtectedItemStateOutput
	ToProtectedItemStateOutputWithContext(context.Context) ProtectedItemStateOutput
}

var protectedItemStatePtrType = reflect.TypeOf((**ProtectedItemState)(nil)).Elem()

type ProtectedItemStatePtrInput interface {
	pulumi.Input

	ToProtectedItemStatePtrOutput() ProtectedItemStatePtrOutput
	ToProtectedItemStatePtrOutputWithContext(context.Context) ProtectedItemStatePtrOutput
}

type protectedItemStatePtr string

func ProtectedItemStatePtr(v string) ProtectedItemStatePtrInput {
	return (*protectedItemStatePtr)(&v)
}

func (*protectedItemStatePtr) ElementType() reflect.Type {
	return protectedItemStatePtrType
}

func (in *protectedItemStatePtr) ToProtectedItemStatePtrOutput() ProtectedItemStatePtrOutput {
	return pulumi.ToOutput(in).(ProtectedItemStatePtrOutput)
}

func (in *protectedItemStatePtr) ToProtectedItemStatePtrOutputWithContext(ctx context.Context) ProtectedItemStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProtectedItemStatePtrOutput)
}

// The backup state of this backup item.
type ProtectionState string

const (
	ProtectionStateInvalid           = ProtectionState("Invalid")
	ProtectionStateIRPending         = ProtectionState("IRPending")
	ProtectionStateProtected         = ProtectionState("Protected")
	ProtectionStateProtectionError   = ProtectionState("ProtectionError")
	ProtectionStateProtectionStopped = ProtectionState("ProtectionStopped")
	ProtectionStateProtectionPaused  = ProtectionState("ProtectionPaused")
)

func (ProtectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionState)(nil)).Elem()
}

func (e ProtectionState) ToProtectionStateOutput() ProtectionStateOutput {
	return pulumi.ToOutput(e).(ProtectionStateOutput)
}

func (e ProtectionState) ToProtectionStateOutputWithContext(ctx context.Context) ProtectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProtectionStateOutput)
}

func (e ProtectionState) ToProtectionStatePtrOutput() ProtectionStatePtrOutput {
	return e.ToProtectionStatePtrOutputWithContext(context.Background())
}

func (e ProtectionState) ToProtectionStatePtrOutputWithContext(ctx context.Context) ProtectionStatePtrOutput {
	return ProtectionState(e).ToProtectionStateOutputWithContext(ctx).ToProtectionStatePtrOutputWithContext(ctx)
}

func (e ProtectionState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProtectionState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProtectionState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProtectionState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProtectionStateOutput struct{ *pulumi.OutputState }

func (ProtectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionState)(nil)).Elem()
}

func (o ProtectionStateOutput) ToProtectionStateOutput() ProtectionStateOutput {
	return o
}

func (o ProtectionStateOutput) ToProtectionStateOutputWithContext(ctx context.Context) ProtectionStateOutput {
	return o
}

func (o ProtectionStateOutput) ToProtectionStatePtrOutput() ProtectionStatePtrOutput {
	return o.ToProtectionStatePtrOutputWithContext(context.Background())
}

func (o ProtectionStateOutput) ToProtectionStatePtrOutputWithContext(ctx context.Context) ProtectionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProtectionState) *ProtectionState {
		return &v
	}).(ProtectionStatePtrOutput)
}

func (o ProtectionStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProtectionStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProtectionState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProtectionStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtectionStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProtectionState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProtectionStatePtrOutput struct{ *pulumi.OutputState }

func (ProtectionStatePtrOutput) ElementType() reflect.Type {
	return protectionStatePtrType
}

func (o ProtectionStatePtrOutput) ToProtectionStatePtrOutput() ProtectionStatePtrOutput {
	return o
}

func (o ProtectionStatePtrOutput) ToProtectionStatePtrOutputWithContext(ctx context.Context) ProtectionStatePtrOutput {
	return o
}

func (o ProtectionStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtectionStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProtectionState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o ProtectionStatePtrOutput) Elem() ProtectionStateOutput {
	return o.ApplyT(func(v *ProtectionState) ProtectionState {
		var ret ProtectionState
		if v != nil {
			ret = *v
		}
		return ret
	}).(ProtectionStateOutput)
}

// ProtectionStateInput is an input type that accepts ProtectionStateArgs and ProtectionStateOutput values.
// You can construct a concrete instance of `ProtectionStateInput` via:
//
//          ProtectionStateArgs{...}
type ProtectionStateInput interface {
	pulumi.Input

	ToProtectionStateOutput() ProtectionStateOutput
	ToProtectionStateOutputWithContext(context.Context) ProtectionStateOutput
}

var protectionStatePtrType = reflect.TypeOf((**ProtectionState)(nil)).Elem()

type ProtectionStatePtrInput interface {
	pulumi.Input

	ToProtectionStatePtrOutput() ProtectionStatePtrOutput
	ToProtectionStatePtrOutputWithContext(context.Context) ProtectionStatePtrOutput
}

type protectionStatePtr string

func ProtectionStatePtr(v string) ProtectionStatePtrInput {
	return (*protectionStatePtr)(&v)
}

func (*protectionStatePtr) ElementType() reflect.Type {
	return protectionStatePtrType
}

func (in *protectionStatePtr) ToProtectionStatePtrOutput() ProtectionStatePtrOutput {
	return pulumi.ToOutput(in).(ProtectionStatePtrOutput)
}

func (in *protectionStatePtr) ToProtectionStatePtrOutputWithContext(ctx context.Context) ProtectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProtectionStatePtrOutput)
}

// The identity type.
type ResourceIdentityType string

const (
	ResourceIdentityTypeSystemAssigned = ResourceIdentityType("SystemAssigned")
	ResourceIdentityTypeNone           = ResourceIdentityType("None")
)

func (ResourceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return e.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return ResourceIdentityType(e).ToResourceIdentityTypeOutputWithContext(ctx).ToResourceIdentityTypePtrOutputWithContext(ctx)
}

func (e ResourceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentityType) *ResourceIdentityType {
		return &v
	}).(ResourceIdentityTypePtrOutput)
}

func (o ResourceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypePtrOutput) ElementType() reflect.Type {
	return resourceIdentityTypePtrType
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o ResourceIdentityTypePtrOutput) Elem() ResourceIdentityTypeOutput {
	return o.ApplyT(func(v *ResourceIdentityType) ResourceIdentityType {
		var ret ResourceIdentityType
		if v != nil {
			ret = *v
		}
		return ret
	}).(ResourceIdentityTypeOutput)
}

// ResourceIdentityTypeInput is an input type that accepts ResourceIdentityTypeArgs and ResourceIdentityTypeOutput values.
// You can construct a concrete instance of `ResourceIdentityTypeInput` via:
//
//          ResourceIdentityTypeArgs{...}
type ResourceIdentityTypeInput interface {
	pulumi.Input

	ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput
	ToResourceIdentityTypeOutputWithContext(context.Context) ResourceIdentityTypeOutput
}

var resourceIdentityTypePtrType = reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()

type ResourceIdentityTypePtrInput interface {
	pulumi.Input

	ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput
	ToResourceIdentityTypePtrOutputWithContext(context.Context) ResourceIdentityTypePtrOutput
}

type resourceIdentityTypePtr string

func ResourceIdentityTypePtr(v string) ResourceIdentityTypePtrInput {
	return (*resourceIdentityTypePtr)(&v)
}

func (*resourceIdentityTypePtr) ElementType() reflect.Type {
	return resourceIdentityTypePtrType
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ResourceIdentityTypePtrOutput)
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceIdentityTypePtrOutput)
}

// The retention duration type of the retention policy.
type RetentionDurationType string

const (
	RetentionDurationTypeInvalid = RetentionDurationType("Invalid")
	RetentionDurationTypeDays    = RetentionDurationType("Days")
	RetentionDurationTypeWeeks   = RetentionDurationType("Weeks")
	RetentionDurationTypeMonths  = RetentionDurationType("Months")
	RetentionDurationTypeYears   = RetentionDurationType("Years")
)

func (RetentionDurationType) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionDurationType)(nil)).Elem()
}

func (e RetentionDurationType) ToRetentionDurationTypeOutput() RetentionDurationTypeOutput {
	return pulumi.ToOutput(e).(RetentionDurationTypeOutput)
}

func (e RetentionDurationType) ToRetentionDurationTypeOutputWithContext(ctx context.Context) RetentionDurationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RetentionDurationTypeOutput)
}

func (e RetentionDurationType) ToRetentionDurationTypePtrOutput() RetentionDurationTypePtrOutput {
	return e.ToRetentionDurationTypePtrOutputWithContext(context.Background())
}

func (e RetentionDurationType) ToRetentionDurationTypePtrOutputWithContext(ctx context.Context) RetentionDurationTypePtrOutput {
	return RetentionDurationType(e).ToRetentionDurationTypeOutputWithContext(ctx).ToRetentionDurationTypePtrOutputWithContext(ctx)
}

func (e RetentionDurationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RetentionDurationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RetentionDurationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RetentionDurationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RetentionDurationTypeOutput struct{ *pulumi.OutputState }

func (RetentionDurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionDurationType)(nil)).Elem()
}

func (o RetentionDurationTypeOutput) ToRetentionDurationTypeOutput() RetentionDurationTypeOutput {
	return o
}

func (o RetentionDurationTypeOutput) ToRetentionDurationTypeOutputWithContext(ctx context.Context) RetentionDurationTypeOutput {
	return o
}

func (o RetentionDurationTypeOutput) ToRetentionDurationTypePtrOutput() RetentionDurationTypePtrOutput {
	return o.ToRetentionDurationTypePtrOutputWithContext(context.Background())
}

func (o RetentionDurationTypeOutput) ToRetentionDurationTypePtrOutputWithContext(ctx context.Context) RetentionDurationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RetentionDurationType) *RetentionDurationType {
		return &v
	}).(RetentionDurationTypePtrOutput)
}

func (o RetentionDurationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RetentionDurationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RetentionDurationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RetentionDurationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RetentionDurationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RetentionDurationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RetentionDurationTypePtrOutput struct{ *pulumi.OutputState }

func (RetentionDurationTypePtrOutput) ElementType() reflect.Type {
	return retentionDurationTypePtrType
}

func (o RetentionDurationTypePtrOutput) ToRetentionDurationTypePtrOutput() RetentionDurationTypePtrOutput {
	return o
}

func (o RetentionDurationTypePtrOutput) ToRetentionDurationTypePtrOutputWithContext(ctx context.Context) RetentionDurationTypePtrOutput {
	return o
}

func (o RetentionDurationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RetentionDurationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RetentionDurationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o RetentionDurationTypePtrOutput) Elem() RetentionDurationTypeOutput {
	return o.ApplyT(func(v *RetentionDurationType) RetentionDurationType {
		var ret RetentionDurationType
		if v != nil {
			ret = *v
		}
		return ret
	}).(RetentionDurationTypeOutput)
}

// RetentionDurationTypeInput is an input type that accepts RetentionDurationTypeArgs and RetentionDurationTypeOutput values.
// You can construct a concrete instance of `RetentionDurationTypeInput` via:
//
//          RetentionDurationTypeArgs{...}
type RetentionDurationTypeInput interface {
	pulumi.Input

	ToRetentionDurationTypeOutput() RetentionDurationTypeOutput
	ToRetentionDurationTypeOutputWithContext(context.Context) RetentionDurationTypeOutput
}

var retentionDurationTypePtrType = reflect.TypeOf((**RetentionDurationType)(nil)).Elem()

type RetentionDurationTypePtrInput interface {
	pulumi.Input

	ToRetentionDurationTypePtrOutput() RetentionDurationTypePtrOutput
	ToRetentionDurationTypePtrOutputWithContext(context.Context) RetentionDurationTypePtrOutput
}

type retentionDurationTypePtr string

func RetentionDurationTypePtr(v string) RetentionDurationTypePtrInput {
	return (*retentionDurationTypePtr)(&v)
}

func (*retentionDurationTypePtr) ElementType() reflect.Type {
	return retentionDurationTypePtrType
}

func (in *retentionDurationTypePtr) ToRetentionDurationTypePtrOutput() RetentionDurationTypePtrOutput {
	return pulumi.ToOutput(in).(RetentionDurationTypePtrOutput)
}

func (in *retentionDurationTypePtr) ToRetentionDurationTypePtrOutputWithContext(ctx context.Context) RetentionDurationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RetentionDurationTypePtrOutput)
}

// Retention schedule format for the yearly retention policy.
type RetentionScheduleFormat string

const (
	RetentionScheduleFormatInvalid = RetentionScheduleFormat("Invalid")
	RetentionScheduleFormatDaily   = RetentionScheduleFormat("Daily")
	RetentionScheduleFormatWeekly  = RetentionScheduleFormat("Weekly")
)

func (RetentionScheduleFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionScheduleFormat)(nil)).Elem()
}

func (e RetentionScheduleFormat) ToRetentionScheduleFormatOutput() RetentionScheduleFormatOutput {
	return pulumi.ToOutput(e).(RetentionScheduleFormatOutput)
}

func (e RetentionScheduleFormat) ToRetentionScheduleFormatOutputWithContext(ctx context.Context) RetentionScheduleFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RetentionScheduleFormatOutput)
}

func (e RetentionScheduleFormat) ToRetentionScheduleFormatPtrOutput() RetentionScheduleFormatPtrOutput {
	return e.ToRetentionScheduleFormatPtrOutputWithContext(context.Background())
}

func (e RetentionScheduleFormat) ToRetentionScheduleFormatPtrOutputWithContext(ctx context.Context) RetentionScheduleFormatPtrOutput {
	return RetentionScheduleFormat(e).ToRetentionScheduleFormatOutputWithContext(ctx).ToRetentionScheduleFormatPtrOutputWithContext(ctx)
}

func (e RetentionScheduleFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RetentionScheduleFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RetentionScheduleFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RetentionScheduleFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RetentionScheduleFormatOutput struct{ *pulumi.OutputState }

func (RetentionScheduleFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionScheduleFormat)(nil)).Elem()
}

func (o RetentionScheduleFormatOutput) ToRetentionScheduleFormatOutput() RetentionScheduleFormatOutput {
	return o
}

func (o RetentionScheduleFormatOutput) ToRetentionScheduleFormatOutputWithContext(ctx context.Context) RetentionScheduleFormatOutput {
	return o
}

func (o RetentionScheduleFormatOutput) ToRetentionScheduleFormatPtrOutput() RetentionScheduleFormatPtrOutput {
	return o.ToRetentionScheduleFormatPtrOutputWithContext(context.Background())
}

func (o RetentionScheduleFormatOutput) ToRetentionScheduleFormatPtrOutputWithContext(ctx context.Context) RetentionScheduleFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RetentionScheduleFormat) *RetentionScheduleFormat {
		return &v
	}).(RetentionScheduleFormatPtrOutput)
}

func (o RetentionScheduleFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RetentionScheduleFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RetentionScheduleFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RetentionScheduleFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RetentionScheduleFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RetentionScheduleFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RetentionScheduleFormatPtrOutput struct{ *pulumi.OutputState }

func (RetentionScheduleFormatPtrOutput) ElementType() reflect.Type {
	return retentionScheduleFormatPtrType
}

func (o RetentionScheduleFormatPtrOutput) ToRetentionScheduleFormatPtrOutput() RetentionScheduleFormatPtrOutput {
	return o
}

func (o RetentionScheduleFormatPtrOutput) ToRetentionScheduleFormatPtrOutputWithContext(ctx context.Context) RetentionScheduleFormatPtrOutput {
	return o
}

func (o RetentionScheduleFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RetentionScheduleFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RetentionScheduleFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o RetentionScheduleFormatPtrOutput) Elem() RetentionScheduleFormatOutput {
	return o.ApplyT(func(v *RetentionScheduleFormat) RetentionScheduleFormat {
		var ret RetentionScheduleFormat
		if v != nil {
			ret = *v
		}
		return ret
	}).(RetentionScheduleFormatOutput)
}

// RetentionScheduleFormatInput is an input type that accepts RetentionScheduleFormatArgs and RetentionScheduleFormatOutput values.
// You can construct a concrete instance of `RetentionScheduleFormatInput` via:
//
//          RetentionScheduleFormatArgs{...}
type RetentionScheduleFormatInput interface {
	pulumi.Input

	ToRetentionScheduleFormatOutput() RetentionScheduleFormatOutput
	ToRetentionScheduleFormatOutputWithContext(context.Context) RetentionScheduleFormatOutput
}

var retentionScheduleFormatPtrType = reflect.TypeOf((**RetentionScheduleFormat)(nil)).Elem()

type RetentionScheduleFormatPtrInput interface {
	pulumi.Input

	ToRetentionScheduleFormatPtrOutput() RetentionScheduleFormatPtrOutput
	ToRetentionScheduleFormatPtrOutputWithContext(context.Context) RetentionScheduleFormatPtrOutput
}

type retentionScheduleFormatPtr string

func RetentionScheduleFormatPtr(v string) RetentionScheduleFormatPtrInput {
	return (*retentionScheduleFormatPtr)(&v)
}

func (*retentionScheduleFormatPtr) ElementType() reflect.Type {
	return retentionScheduleFormatPtrType
}

func (in *retentionScheduleFormatPtr) ToRetentionScheduleFormatPtrOutput() RetentionScheduleFormatPtrOutput {
	return pulumi.ToOutput(in).(RetentionScheduleFormatPtrOutput)
}

func (in *retentionScheduleFormatPtr) ToRetentionScheduleFormatPtrOutputWithContext(ctx context.Context) RetentionScheduleFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RetentionScheduleFormatPtrOutput)
}

// Defines the frequency interval (daily or weekly) for the schedule policy.
type ScheduleRunType string

const (
	ScheduleRunTypeInvalid = ScheduleRunType("Invalid")
	ScheduleRunTypeDaily   = ScheduleRunType("Daily")
	ScheduleRunTypeWeekly  = ScheduleRunType("Weekly")
)

func (ScheduleRunType) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRunType)(nil)).Elem()
}

func (e ScheduleRunType) ToScheduleRunTypeOutput() ScheduleRunTypeOutput {
	return pulumi.ToOutput(e).(ScheduleRunTypeOutput)
}

func (e ScheduleRunType) ToScheduleRunTypeOutputWithContext(ctx context.Context) ScheduleRunTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScheduleRunTypeOutput)
}

func (e ScheduleRunType) ToScheduleRunTypePtrOutput() ScheduleRunTypePtrOutput {
	return e.ToScheduleRunTypePtrOutputWithContext(context.Background())
}

func (e ScheduleRunType) ToScheduleRunTypePtrOutputWithContext(ctx context.Context) ScheduleRunTypePtrOutput {
	return ScheduleRunType(e).ToScheduleRunTypeOutputWithContext(ctx).ToScheduleRunTypePtrOutputWithContext(ctx)
}

func (e ScheduleRunType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScheduleRunType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScheduleRunType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScheduleRunType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScheduleRunTypeOutput struct{ *pulumi.OutputState }

func (ScheduleRunTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleRunType)(nil)).Elem()
}

func (o ScheduleRunTypeOutput) ToScheduleRunTypeOutput() ScheduleRunTypeOutput {
	return o
}

func (o ScheduleRunTypeOutput) ToScheduleRunTypeOutputWithContext(ctx context.Context) ScheduleRunTypeOutput {
	return o
}

func (o ScheduleRunTypeOutput) ToScheduleRunTypePtrOutput() ScheduleRunTypePtrOutput {
	return o.ToScheduleRunTypePtrOutputWithContext(context.Background())
}

func (o ScheduleRunTypeOutput) ToScheduleRunTypePtrOutputWithContext(ctx context.Context) ScheduleRunTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduleRunType) *ScheduleRunType {
		return &v
	}).(ScheduleRunTypePtrOutput)
}

func (o ScheduleRunTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScheduleRunTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScheduleRunType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScheduleRunTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScheduleRunTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScheduleRunType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScheduleRunTypePtrOutput struct{ *pulumi.OutputState }

func (ScheduleRunTypePtrOutput) ElementType() reflect.Type {
	return scheduleRunTypePtrType
}

func (o ScheduleRunTypePtrOutput) ToScheduleRunTypePtrOutput() ScheduleRunTypePtrOutput {
	return o
}

func (o ScheduleRunTypePtrOutput) ToScheduleRunTypePtrOutputWithContext(ctx context.Context) ScheduleRunTypePtrOutput {
	return o
}

func (o ScheduleRunTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScheduleRunTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScheduleRunType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o ScheduleRunTypePtrOutput) Elem() ScheduleRunTypeOutput {
	return o.ApplyT(func(v *ScheduleRunType) ScheduleRunType {
		var ret ScheduleRunType
		if v != nil {
			ret = *v
		}
		return ret
	}).(ScheduleRunTypeOutput)
}

// ScheduleRunTypeInput is an input type that accepts ScheduleRunTypeArgs and ScheduleRunTypeOutput values.
// You can construct a concrete instance of `ScheduleRunTypeInput` via:
//
//          ScheduleRunTypeArgs{...}
type ScheduleRunTypeInput interface {
	pulumi.Input

	ToScheduleRunTypeOutput() ScheduleRunTypeOutput
	ToScheduleRunTypeOutputWithContext(context.Context) ScheduleRunTypeOutput
}

var scheduleRunTypePtrType = reflect.TypeOf((**ScheduleRunType)(nil)).Elem()

type ScheduleRunTypePtrInput interface {
	pulumi.Input

	ToScheduleRunTypePtrOutput() ScheduleRunTypePtrOutput
	ToScheduleRunTypePtrOutputWithContext(context.Context) ScheduleRunTypePtrOutput
}

type scheduleRunTypePtr string

func ScheduleRunTypePtr(v string) ScheduleRunTypePtrInput {
	return (*scheduleRunTypePtr)(&v)
}

func (*scheduleRunTypePtr) ElementType() reflect.Type {
	return scheduleRunTypePtrType
}

func (in *scheduleRunTypePtr) ToScheduleRunTypePtrOutput() ScheduleRunTypePtrOutput {
	return pulumi.ToOutput(in).(ScheduleRunTypePtrOutput)
}

func (in *scheduleRunTypePtr) ToScheduleRunTypePtrOutputWithContext(ctx context.Context) ScheduleRunTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScheduleRunTypePtrOutput)
}

// The Sku name.
type SkuName string

const (
	SkuNameStandard = SkuName("Standard")
	SkuNameRS0      = SkuName("RS0")
)

func (SkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (e SkuName) ToSkuNameOutput() SkuNameOutput {
	return pulumi.ToOutput(e).(SkuNameOutput)
}

func (e SkuName) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuNameOutput)
}

func (e SkuName) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return e.ToSkuNamePtrOutputWithContext(context.Background())
}

func (e SkuName) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return SkuName(e).ToSkuNameOutputWithContext(ctx).ToSkuNamePtrOutputWithContext(ctx)
}

func (e SkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuNameOutput struct{ *pulumi.OutputState }

func (SkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (o SkuNameOutput) ToSkuNameOutput() SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o.ToSkuNamePtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuName) *SkuName {
		return &v
	}).(SkuNamePtrOutput)
}

func (o SkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuNamePtrOutput struct{ *pulumi.OutputState }

func (SkuNamePtrOutput) ElementType() reflect.Type {
	return skuNamePtrType
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o SkuNamePtrOutput) Elem() SkuNameOutput {
	return o.ApplyT(func(v *SkuName) SkuName {
		var ret SkuName
		if v != nil {
			ret = *v
		}
		return ret
	}).(SkuNameOutput)
}

// SkuNameInput is an input type that accepts SkuNameArgs and SkuNameOutput values.
// You can construct a concrete instance of `SkuNameInput` via:
//
//          SkuNameArgs{...}
type SkuNameInput interface {
	pulumi.Input

	ToSkuNameOutput() SkuNameOutput
	ToSkuNameOutputWithContext(context.Context) SkuNameOutput
}

var skuNamePtrType = reflect.TypeOf((**SkuName)(nil)).Elem()

type SkuNamePtrInput interface {
	pulumi.Input

	ToSkuNamePtrOutput() SkuNamePtrOutput
	ToSkuNamePtrOutputWithContext(context.Context) SkuNamePtrOutput
}

type skuNamePtr string

func SkuNamePtr(v string) SkuNamePtrInput {
	return (*skuNamePtr)(&v)
}

func (*skuNamePtr) ElementType() reflect.Type {
	return skuNamePtrType
}

func (in *skuNamePtr) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return pulumi.ToOutput(in).(SkuNamePtrOutput)
}

func (in *skuNamePtr) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuNamePtrOutput)
}

type WeekOfMonth string

const (
	WeekOfMonthFirst  = WeekOfMonth("First")
	WeekOfMonthSecond = WeekOfMonth("Second")
	WeekOfMonthThird  = WeekOfMonth("Third")
	WeekOfMonthFourth = WeekOfMonth("Fourth")
	WeekOfMonthLast   = WeekOfMonth("Last")
)

func (WeekOfMonth) ElementType() reflect.Type {
	return reflect.TypeOf((*WeekOfMonth)(nil)).Elem()
}

func (e WeekOfMonth) ToWeekOfMonthOutput() WeekOfMonthOutput {
	return pulumi.ToOutput(e).(WeekOfMonthOutput)
}

func (e WeekOfMonth) ToWeekOfMonthOutputWithContext(ctx context.Context) WeekOfMonthOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WeekOfMonthOutput)
}

func (e WeekOfMonth) ToWeekOfMonthPtrOutput() WeekOfMonthPtrOutput {
	return e.ToWeekOfMonthPtrOutputWithContext(context.Background())
}

func (e WeekOfMonth) ToWeekOfMonthPtrOutputWithContext(ctx context.Context) WeekOfMonthPtrOutput {
	return WeekOfMonth(e).ToWeekOfMonthOutputWithContext(ctx).ToWeekOfMonthPtrOutputWithContext(ctx)
}

func (e WeekOfMonth) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WeekOfMonth) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WeekOfMonth) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WeekOfMonth) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WeekOfMonthOutput struct{ *pulumi.OutputState }

func (WeekOfMonthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeekOfMonth)(nil)).Elem()
}

func (o WeekOfMonthOutput) ToWeekOfMonthOutput() WeekOfMonthOutput {
	return o
}

func (o WeekOfMonthOutput) ToWeekOfMonthOutputWithContext(ctx context.Context) WeekOfMonthOutput {
	return o
}

func (o WeekOfMonthOutput) ToWeekOfMonthPtrOutput() WeekOfMonthPtrOutput {
	return o.ToWeekOfMonthPtrOutputWithContext(context.Background())
}

func (o WeekOfMonthOutput) ToWeekOfMonthPtrOutputWithContext(ctx context.Context) WeekOfMonthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WeekOfMonth) *WeekOfMonth {
		return &v
	}).(WeekOfMonthPtrOutput)
}

func (o WeekOfMonthOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WeekOfMonthOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WeekOfMonth) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WeekOfMonthOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WeekOfMonthOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WeekOfMonth) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WeekOfMonthPtrOutput struct{ *pulumi.OutputState }

func (WeekOfMonthPtrOutput) ElementType() reflect.Type {
	return weekOfMonthPtrType
}

func (o WeekOfMonthPtrOutput) ToWeekOfMonthPtrOutput() WeekOfMonthPtrOutput {
	return o
}

func (o WeekOfMonthPtrOutput) ToWeekOfMonthPtrOutputWithContext(ctx context.Context) WeekOfMonthPtrOutput {
	return o
}

func (o WeekOfMonthPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WeekOfMonthPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WeekOfMonth) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o WeekOfMonthPtrOutput) Elem() WeekOfMonthOutput {
	return o.ApplyT(func(v *WeekOfMonth) WeekOfMonth {
		var ret WeekOfMonth
		if v != nil {
			ret = *v
		}
		return ret
	}).(WeekOfMonthOutput)
}

// WeekOfMonthInput is an input type that accepts WeekOfMonthArgs and WeekOfMonthOutput values.
// You can construct a concrete instance of `WeekOfMonthInput` via:
//
//          WeekOfMonthArgs{...}
type WeekOfMonthInput interface {
	pulumi.Input

	ToWeekOfMonthOutput() WeekOfMonthOutput
	ToWeekOfMonthOutputWithContext(context.Context) WeekOfMonthOutput
}

var weekOfMonthPtrType = reflect.TypeOf((**WeekOfMonth)(nil)).Elem()

type WeekOfMonthPtrInput interface {
	pulumi.Input

	ToWeekOfMonthPtrOutput() WeekOfMonthPtrOutput
	ToWeekOfMonthPtrOutputWithContext(context.Context) WeekOfMonthPtrOutput
}

type weekOfMonthPtr string

func WeekOfMonthPtr(v string) WeekOfMonthPtrInput {
	return (*weekOfMonthPtr)(&v)
}

func (*weekOfMonthPtr) ElementType() reflect.Type {
	return weekOfMonthPtrType
}

func (in *weekOfMonthPtr) ToWeekOfMonthPtrOutput() WeekOfMonthPtrOutput {
	return pulumi.ToOutput(in).(WeekOfMonthPtrOutput)
}

func (in *weekOfMonthPtr) ToWeekOfMonthPtrOutputWithContext(ctx context.Context) WeekOfMonthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WeekOfMonthPtrOutput)
}

// WeekOfMonthArrayInput is an input type that accepts WeekOfMonthArray and WeekOfMonthArrayOutput values.
// You can construct a concrete instance of `WeekOfMonthArrayInput` via:
//
//          WeekOfMonthArray{ WeekOfMonthArgs{...} }
type WeekOfMonthArrayInput interface {
	pulumi.Input

	ToWeekOfMonthArrayOutput() WeekOfMonthArrayOutput
	ToWeekOfMonthArrayOutputWithContext(context.Context) WeekOfMonthArrayOutput
}

type WeekOfMonthArray []WeekOfMonth

func (WeekOfMonthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WeekOfMonth)(nil)).Elem()
}

func (i WeekOfMonthArray) ToWeekOfMonthArrayOutput() WeekOfMonthArrayOutput {
	return i.ToWeekOfMonthArrayOutputWithContext(context.Background())
}

func (i WeekOfMonthArray) ToWeekOfMonthArrayOutputWithContext(ctx context.Context) WeekOfMonthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeekOfMonthArrayOutput)
}

type WeekOfMonthArrayOutput struct{ *pulumi.OutputState }

func (WeekOfMonthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WeekOfMonth)(nil)).Elem()
}

func (o WeekOfMonthArrayOutput) ToWeekOfMonthArrayOutput() WeekOfMonthArrayOutput {
	return o
}

func (o WeekOfMonthArrayOutput) ToWeekOfMonthArrayOutputWithContext(ctx context.Context) WeekOfMonthArrayOutput {
	return o
}

func (o WeekOfMonthArrayOutput) Index(i pulumi.IntInput) WeekOfMonthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WeekOfMonthOutput {
		return vs[0].([]WeekOfMonth)[vs[1].(int)].ToWeekOfMonthOutput()
	}).(WeekOfMonthOutput)
}

func init() {
	pulumi.RegisterOutputType(BackupManagementTypeOutput{})
	pulumi.RegisterOutputType(BackupManagementTypePtrOutput{})
	pulumi.RegisterOutputType(DataSourceTypeOutput{})
	pulumi.RegisterOutputType(DataSourceTypePtrOutput{})
	pulumi.RegisterOutputType(DayOfWeekOutput{})
	pulumi.RegisterOutputType(DayOfWeekPtrOutput{})
	pulumi.RegisterOutputType(DayOfWeekArrayOutput{})
	pulumi.RegisterOutputType(MonthOfYearOutput{})
	pulumi.RegisterOutputType(MonthOfYearPtrOutput{})
	pulumi.RegisterOutputType(MonthOfYearArrayOutput{})
	pulumi.RegisterOutputType(ProtectedItemStateOutput{})
	pulumi.RegisterOutputType(ProtectedItemStatePtrOutput{})
	pulumi.RegisterOutputType(ProtectionStateOutput{})
	pulumi.RegisterOutputType(ProtectionStatePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(RetentionDurationTypeOutput{})
	pulumi.RegisterOutputType(RetentionDurationTypePtrOutput{})
	pulumi.RegisterOutputType(RetentionScheduleFormatOutput{})
	pulumi.RegisterOutputType(RetentionScheduleFormatPtrOutput{})
	pulumi.RegisterOutputType(ScheduleRunTypeOutput{})
	pulumi.RegisterOutputType(ScheduleRunTypePtrOutput{})
	pulumi.RegisterOutputType(SkuNameOutput{})
	pulumi.RegisterOutputType(SkuNamePtrOutput{})
	pulumi.RegisterOutputType(WeekOfMonthOutput{})
	pulumi.RegisterOutputType(WeekOfMonthPtrOutput{})
	pulumi.RegisterOutputType(WeekOfMonthArrayOutput{})
}
