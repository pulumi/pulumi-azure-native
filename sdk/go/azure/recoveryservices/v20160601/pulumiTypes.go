// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20160601

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Azure VM (also known as IaaS VM) workload-specific backup policy.
type AzureIaaSVMProtectionPolicy struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureIaasVM'.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// The number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// The retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// The backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
}

// Azure VM (also known as IaaS VM) workload-specific backup policy.
type AzureIaaSVMProtectionPolicyResponse struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureIaasVM'.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// The number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// The retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// The backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
}

// The Azure SQL workload-specific backup policy.
type AzureSqlProtectionPolicy struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureSql'.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// The number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// The retention policy details.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
}

// The Azure SQL workload-specific backup policy.
type AzureSqlProtectionPolicyResponse struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureSql'.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// The number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// The retention policy details.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
}

// Daily retention format.
type DailyRetentionFormat struct {
	// List of days of the month.
	DaysOfTheMonth []Day `pulumi:"daysOfTheMonth"`
}

// Daily retention format.
type DailyRetentionFormatResponse struct {
	// List of days of the month.
	DaysOfTheMonth []DayResponse `pulumi:"daysOfTheMonth"`
}

// Daily retention schedule.
type DailyRetentionSchedule struct {
	// The retention duration of retention policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// The retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Daily retention schedule.
type DailyRetentionScheduleResponse struct {
	// The retention duration of retention policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// The retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Day of the week.
type Day struct {
	Date   *int  `pulumi:"date"`
	IsLast *bool `pulumi:"isLast"`
}

// Day of the week.
type DayResponse struct {
	Date   *int  `pulumi:"date"`
	IsLast *bool `pulumi:"isLast"`
}

// Identity for the resource.
type IdentityData struct {
	// The identity type.
	Type string `pulumi:"type"`
}

// IdentityDataInput is an input type that accepts IdentityDataArgs and IdentityDataOutput values.
// You can construct a concrete instance of `IdentityDataInput` via:
//
//	IdentityDataArgs{...}
type IdentityDataInput interface {
	pulumi.Input

	ToIdentityDataOutput() IdentityDataOutput
	ToIdentityDataOutputWithContext(context.Context) IdentityDataOutput
}

// Identity for the resource.
type IdentityDataArgs struct {
	// The identity type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IdentityDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityData)(nil)).Elem()
}

func (i IdentityDataArgs) ToIdentityDataOutput() IdentityDataOutput {
	return i.ToIdentityDataOutputWithContext(context.Background())
}

func (i IdentityDataArgs) ToIdentityDataOutputWithContext(ctx context.Context) IdentityDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityDataOutput)
}

func (i IdentityDataArgs) ToIdentityDataPtrOutput() IdentityDataPtrOutput {
	return i.ToIdentityDataPtrOutputWithContext(context.Background())
}

func (i IdentityDataArgs) ToIdentityDataPtrOutputWithContext(ctx context.Context) IdentityDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityDataOutput).ToIdentityDataPtrOutputWithContext(ctx)
}

// IdentityDataPtrInput is an input type that accepts IdentityDataArgs, IdentityDataPtr and IdentityDataPtrOutput values.
// You can construct a concrete instance of `IdentityDataPtrInput` via:
//
//	        IdentityDataArgs{...}
//
//	or:
//
//	        nil
type IdentityDataPtrInput interface {
	pulumi.Input

	ToIdentityDataPtrOutput() IdentityDataPtrOutput
	ToIdentityDataPtrOutputWithContext(context.Context) IdentityDataPtrOutput
}

type identityDataPtrType IdentityDataArgs

func IdentityDataPtr(v *IdentityDataArgs) IdentityDataPtrInput {
	return (*identityDataPtrType)(v)
}

func (*identityDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityData)(nil)).Elem()
}

func (i *identityDataPtrType) ToIdentityDataPtrOutput() IdentityDataPtrOutput {
	return i.ToIdentityDataPtrOutputWithContext(context.Background())
}

func (i *identityDataPtrType) ToIdentityDataPtrOutputWithContext(ctx context.Context) IdentityDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityDataPtrOutput)
}

// Identity for the resource.
type IdentityDataOutput struct{ *pulumi.OutputState }

func (IdentityDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityData)(nil)).Elem()
}

func (o IdentityDataOutput) ToIdentityDataOutput() IdentityDataOutput {
	return o
}

func (o IdentityDataOutput) ToIdentityDataOutputWithContext(ctx context.Context) IdentityDataOutput {
	return o
}

func (o IdentityDataOutput) ToIdentityDataPtrOutput() IdentityDataPtrOutput {
	return o.ToIdentityDataPtrOutputWithContext(context.Background())
}

func (o IdentityDataOutput) ToIdentityDataPtrOutputWithContext(ctx context.Context) IdentityDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityData) *IdentityData {
		return &v
	}).(IdentityDataPtrOutput)
}

// The identity type.
func (o IdentityDataOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityData) string { return v.Type }).(pulumi.StringOutput)
}

type IdentityDataPtrOutput struct{ *pulumi.OutputState }

func (IdentityDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityData)(nil)).Elem()
}

func (o IdentityDataPtrOutput) ToIdentityDataPtrOutput() IdentityDataPtrOutput {
	return o
}

func (o IdentityDataPtrOutput) ToIdentityDataPtrOutputWithContext(ctx context.Context) IdentityDataPtrOutput {
	return o
}

func (o IdentityDataPtrOutput) Elem() IdentityDataOutput {
	return o.ApplyT(func(v *IdentityData) IdentityData {
		if v != nil {
			return *v
		}
		var ret IdentityData
		return ret
	}).(IdentityDataOutput)
}

// The identity type.
func (o IdentityDataPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityData) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type IdentityDataResponse struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// The identity type.
	Type string `pulumi:"type"`
}

// Identity for the resource.
type IdentityDataResponseOutput struct{ *pulumi.OutputState }

func (IdentityDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityDataResponse)(nil)).Elem()
}

func (o IdentityDataResponseOutput) ToIdentityDataResponseOutput() IdentityDataResponseOutput {
	return o
}

func (o IdentityDataResponseOutput) ToIdentityDataResponseOutputWithContext(ctx context.Context) IdentityDataResponseOutput {
	return o
}

// The principal ID of resource identity.
func (o IdentityDataResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityDataResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o IdentityDataResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityDataResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type.
func (o IdentityDataResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityDataResponse) string { return v.Type }).(pulumi.StringOutput)
}

type IdentityDataResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityDataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityDataResponse)(nil)).Elem()
}

func (o IdentityDataResponsePtrOutput) ToIdentityDataResponsePtrOutput() IdentityDataResponsePtrOutput {
	return o
}

func (o IdentityDataResponsePtrOutput) ToIdentityDataResponsePtrOutputWithContext(ctx context.Context) IdentityDataResponsePtrOutput {
	return o
}

func (o IdentityDataResponsePtrOutput) Elem() IdentityDataResponseOutput {
	return o.ApplyT(func(v *IdentityDataResponse) IdentityDataResponse {
		if v != nil {
			return *v
		}
		var ret IdentityDataResponse
		return ret
	}).(IdentityDataResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityDataResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityDataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityDataResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityDataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityDataResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityDataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Long-term retention policy.
type LongTermRetentionPolicy struct {
	// Daily retention schedule of the backup policy.
	DailySchedule *DailyRetentionSchedule `pulumi:"dailySchedule"`
	// Monthly retention schedule of the backup policy.
	MonthlySchedule *MonthlyRetentionSchedule `pulumi:"monthlySchedule"`
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermRetentionPolicy'.
	RetentionPolicyType *string `pulumi:"retentionPolicyType"`
	// Weekly retention schedule of the backup policy.
	WeeklySchedule *WeeklyRetentionSchedule `pulumi:"weeklySchedule"`
	// Yearly retention schedule of the backup policy.
	YearlySchedule *YearlyRetentionSchedule `pulumi:"yearlySchedule"`
}

// Long-term retention policy.
type LongTermRetentionPolicyResponse struct {
	// Daily retention schedule of the backup policy.
	DailySchedule *DailyRetentionScheduleResponse `pulumi:"dailySchedule"`
	// Monthly retention schedule of the backup policy.
	MonthlySchedule *MonthlyRetentionScheduleResponse `pulumi:"monthlySchedule"`
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermRetentionPolicy'.
	RetentionPolicyType *string `pulumi:"retentionPolicyType"`
	// Weekly retention schedule of the backup policy.
	WeeklySchedule *WeeklyRetentionScheduleResponse `pulumi:"weeklySchedule"`
	// Yearly retention schedule of the backup policy.
	YearlySchedule *YearlyRetentionScheduleResponse `pulumi:"yearlySchedule"`
}

// Long-term policy schedule.
type LongTermSchedulePolicy struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermSchedulePolicy'.
	SchedulePolicyType *string `pulumi:"schedulePolicyType"`
}

// Long-term policy schedule.
type LongTermSchedulePolicyResponse struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermSchedulePolicy'.
	SchedulePolicyType *string `pulumi:"schedulePolicyType"`
}

// The backup policy for the file or folder container.
type MabProtectionPolicy struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'MAB'.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// The number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// The details specified in the Retention policy.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// The schedule specified in the backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
}

// The backup policy for the file or folder container.
type MabProtectionPolicyResponse struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'MAB'.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// The number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// The details specified in the Retention policy.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// The schedule specified in the backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
}

// The monthly retention schedule.
type MonthlyRetentionSchedule struct {
	// Retention duration of the retention policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// Daily retention format for the monthly retention policy.
	RetentionScheduleDaily *DailyRetentionFormat `pulumi:"retentionScheduleDaily"`
	// Retention schedule format type for monthly retention policy.
	RetentionScheduleFormatType *RetentionScheduleFormat `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for the monthly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormat `pulumi:"retentionScheduleWeekly"`
	// Retention times of the retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// The monthly retention schedule.
type MonthlyRetentionScheduleResponse struct {
	// Retention duration of the retention policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// Daily retention format for the monthly retention policy.
	RetentionScheduleDaily *DailyRetentionFormatResponse `pulumi:"retentionScheduleDaily"`
	// Retention schedule format type for monthly retention policy.
	RetentionScheduleFormatType *string `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for the monthly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormatResponse `pulumi:"retentionScheduleWeekly"`
	// Retention times of the retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Information to be stored in Vault properties as an element of privateEndpointConnections List.
type PrivateEndpointConnectionVaultPropertiesResponse struct {
	// Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.
	Id string `pulumi:"id"`
	// Private Endpoint Connection Response Properties.
	Properties VaultPrivateEndpointConnectionResponse `pulumi:"properties"`
}

// Information to be stored in Vault properties as an element of privateEndpointConnections List.
type PrivateEndpointConnectionVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionVaultPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) ToPrivateEndpointConnectionVaultPropertiesResponseOutput() PrivateEndpointConnectionVaultPropertiesResponseOutput {
	return o
}

func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) ToPrivateEndpointConnectionVaultPropertiesResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionVaultPropertiesResponseOutput {
	return o
}

// Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Private Endpoint Connection Response Properties.
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Properties() VaultPrivateEndpointConnectionResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) VaultPrivateEndpointConnectionResponse {
		return v.Properties
	}).(VaultPrivateEndpointConnectionResponseOutput)
}

type PrivateEndpointConnectionVaultPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionVaultPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) ToPrivateEndpointConnectionVaultPropertiesResponseArrayOutput() PrivateEndpointConnectionVaultPropertiesResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) ToPrivateEndpointConnectionVaultPropertiesResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionVaultPropertiesResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionVaultPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionVaultPropertiesResponse {
		return vs[0].([]PrivateEndpointConnectionVaultPropertiesResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionVaultPropertiesResponseOutput)
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection.
type PrivateEndpointResponse struct {
	// Gets or sets id.
	Id string `pulumi:"id"`
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// Gets or sets id.
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Retention duration.
type RetentionDuration struct {
	// Count of the duration types. Retention duration is determined by the combining the Count times and durationType.
	//    For example, if Count = 3 and durationType = Weeks, then the retention duration is three weeks.
	Count *int `pulumi:"count"`
	// The retention duration type of the retention policy.
	DurationType *RetentionDurationType `pulumi:"durationType"`
}

// Retention duration.
type RetentionDurationResponse struct {
	// Count of the duration types. Retention duration is determined by the combining the Count times and durationType.
	//    For example, if Count = 3 and durationType = Weeks, then the retention duration is three weeks.
	Count *int `pulumi:"count"`
	// The retention duration type of the retention policy.
	DurationType *string `pulumi:"durationType"`
}

// Simple policy retention.
type SimpleRetentionPolicy struct {
	// Retention duration of the protection policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleRetentionPolicy'.
	RetentionPolicyType *string `pulumi:"retentionPolicyType"`
}

// Simple policy retention.
type SimpleRetentionPolicyResponse struct {
	// Retention duration of the protection policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleRetentionPolicy'.
	RetentionPolicyType *string `pulumi:"retentionPolicyType"`
}

// Simple policy schedule.
type SimpleSchedulePolicy struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleSchedulePolicy'.
	SchedulePolicyType *string `pulumi:"schedulePolicyType"`
	// This list is the days of the week when the schedule runs.
	ScheduleRunDays []DayOfWeek `pulumi:"scheduleRunDays"`
	// Defines the frequency interval (daily or weekly) for the schedule policy.
	ScheduleRunFrequency *ScheduleRunType `pulumi:"scheduleRunFrequency"`
	// List of times, during a day, when the schedule runs.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
	// The number of times per week the schedule runs.
	ScheduleWeeklyFrequency *int `pulumi:"scheduleWeeklyFrequency"`
}

// Simple policy schedule.
type SimpleSchedulePolicyResponse struct {
	// This property is used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleSchedulePolicy'.
	SchedulePolicyType *string `pulumi:"schedulePolicyType"`
	// This list is the days of the week when the schedule runs.
	ScheduleRunDays []string `pulumi:"scheduleRunDays"`
	// Defines the frequency interval (daily or weekly) for the schedule policy.
	ScheduleRunFrequency *string `pulumi:"scheduleRunFrequency"`
	// List of times, during a day, when the schedule runs.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
	// The number of times per week the schedule runs.
	ScheduleWeeklyFrequency *int `pulumi:"scheduleWeeklyFrequency"`
}

// Identifies the unique system identifier for each Azure resource.
type Sku struct {
	// The Sku name.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// Identifies the unique system identifier for each Azure resource.
type SkuArgs struct {
	// The Sku name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// Identifies the unique system identifier for each Azure resource.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The Sku name.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// The Sku name.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Identifies the unique system identifier for each Azure resource.
type SkuResponse struct {
	// The Sku name.
	Name string `pulumi:"name"`
}

// Identifies the unique system identifier for each Azure resource.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The Sku name.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// The Sku name.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Details for upgrading vault.
type UpgradeDetailsResponse struct {
	// UTC time at which the upgrade operation has ended.
	EndTimeUtc string `pulumi:"endTimeUtc"`
	// UTC time at which the upgrade operation status was last updated.
	LastUpdatedTimeUtc string `pulumi:"lastUpdatedTimeUtc"`
	// Message to the user containing information about the upgrade operation.
	Message string `pulumi:"message"`
	// ID of the vault upgrade operation.
	OperationId string `pulumi:"operationId"`
	// Resource ID of the vault before the upgrade.
	PreviousResourceId string `pulumi:"previousResourceId"`
	// UTC time at which the upgrade operation has started.
	StartTimeUtc string `pulumi:"startTimeUtc"`
	// Status of the vault upgrade operation.
	Status string `pulumi:"status"`
	// The way the vault upgrade was triggered.
	TriggerType string `pulumi:"triggerType"`
	// Resource ID of the upgraded vault.
	UpgradedResourceId string `pulumi:"upgradedResourceId"`
}

// Details for upgrading vault.
type UpgradeDetailsResponseOutput struct{ *pulumi.OutputState }

func (UpgradeDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpgradeDetailsResponse)(nil)).Elem()
}

func (o UpgradeDetailsResponseOutput) ToUpgradeDetailsResponseOutput() UpgradeDetailsResponseOutput {
	return o
}

func (o UpgradeDetailsResponseOutput) ToUpgradeDetailsResponseOutputWithContext(ctx context.Context) UpgradeDetailsResponseOutput {
	return o
}

// UTC time at which the upgrade operation has ended.
func (o UpgradeDetailsResponseOutput) EndTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.EndTimeUtc }).(pulumi.StringOutput)
}

// UTC time at which the upgrade operation status was last updated.
func (o UpgradeDetailsResponseOutput) LastUpdatedTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.LastUpdatedTimeUtc }).(pulumi.StringOutput)
}

// Message to the user containing information about the upgrade operation.
func (o UpgradeDetailsResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.Message }).(pulumi.StringOutput)
}

// ID of the vault upgrade operation.
func (o UpgradeDetailsResponseOutput) OperationId() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.OperationId }).(pulumi.StringOutput)
}

// Resource ID of the vault before the upgrade.
func (o UpgradeDetailsResponseOutput) PreviousResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.PreviousResourceId }).(pulumi.StringOutput)
}

// UTC time at which the upgrade operation has started.
func (o UpgradeDetailsResponseOutput) StartTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.StartTimeUtc }).(pulumi.StringOutput)
}

// Status of the vault upgrade operation.
func (o UpgradeDetailsResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.Status }).(pulumi.StringOutput)
}

// The way the vault upgrade was triggered.
func (o UpgradeDetailsResponseOutput) TriggerType() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.TriggerType }).(pulumi.StringOutput)
}

// Resource ID of the upgraded vault.
func (o UpgradeDetailsResponseOutput) UpgradedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.UpgradedResourceId }).(pulumi.StringOutput)
}

type UpgradeDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (UpgradeDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpgradeDetailsResponse)(nil)).Elem()
}

func (o UpgradeDetailsResponsePtrOutput) ToUpgradeDetailsResponsePtrOutput() UpgradeDetailsResponsePtrOutput {
	return o
}

func (o UpgradeDetailsResponsePtrOutput) ToUpgradeDetailsResponsePtrOutputWithContext(ctx context.Context) UpgradeDetailsResponsePtrOutput {
	return o
}

func (o UpgradeDetailsResponsePtrOutput) Elem() UpgradeDetailsResponseOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) UpgradeDetailsResponse {
		if v != nil {
			return *v
		}
		var ret UpgradeDetailsResponse
		return ret
	}).(UpgradeDetailsResponseOutput)
}

// UTC time at which the upgrade operation has ended.
func (o UpgradeDetailsResponsePtrOutput) EndTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EndTimeUtc
	}).(pulumi.StringPtrOutput)
}

// UTC time at which the upgrade operation status was last updated.
func (o UpgradeDetailsResponsePtrOutput) LastUpdatedTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUpdatedTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Message to the user containing information about the upgrade operation.
func (o UpgradeDetailsResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// ID of the vault upgrade operation.
func (o UpgradeDetailsResponsePtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OperationId
	}).(pulumi.StringPtrOutput)
}

// Resource ID of the vault before the upgrade.
func (o UpgradeDetailsResponsePtrOutput) PreviousResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PreviousResourceId
	}).(pulumi.StringPtrOutput)
}

// UTC time at which the upgrade operation has started.
func (o UpgradeDetailsResponsePtrOutput) StartTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StartTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Status of the vault upgrade operation.
func (o UpgradeDetailsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The way the vault upgrade was triggered.
func (o UpgradeDetailsResponsePtrOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TriggerType
	}).(pulumi.StringPtrOutput)
}

// Resource ID of the upgraded vault.
func (o UpgradeDetailsResponsePtrOutput) UpgradedResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpgradedResourceId
	}).(pulumi.StringPtrOutput)
}

// Private Endpoint Connection Response Properties.
type VaultPrivateEndpointConnectionResponse struct {
	// The Private Endpoint network resource that is linked to the Private Endpoint connection.
	PrivateEndpoint PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// Gets or sets private link service connection state.
	PrivateLinkServiceConnectionState VaultPrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// Gets or sets provisioning state of the private endpoint connection.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Private Endpoint Connection Response Properties.
type VaultPrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (VaultPrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o VaultPrivateEndpointConnectionResponseOutput) ToVaultPrivateEndpointConnectionResponseOutput() VaultPrivateEndpointConnectionResponseOutput {
	return o
}

func (o VaultPrivateEndpointConnectionResponseOutput) ToVaultPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) VaultPrivateEndpointConnectionResponseOutput {
	return o
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection.
func (o VaultPrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v VaultPrivateEndpointConnectionResponse) PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponseOutput)
}

// Gets or sets private link service connection state.
func (o VaultPrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() VaultPrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v VaultPrivateEndpointConnectionResponse) VaultPrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(VaultPrivateLinkServiceConnectionStateResponseOutput)
}

// Gets or sets provisioning state of the private endpoint connection.
func (o VaultPrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets or sets private link service connection state.
type VaultPrivateLinkServiceConnectionStateResponse struct {
	// Gets or sets actions required.
	ActionsRequired string `pulumi:"actionsRequired"`
	// Gets or sets description.
	Description string `pulumi:"description"`
	// Gets or sets the status.
	Status string `pulumi:"status"`
}

// Gets or sets private link service connection state.
type VaultPrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (VaultPrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o VaultPrivateLinkServiceConnectionStateResponseOutput) ToVaultPrivateLinkServiceConnectionStateResponseOutput() VaultPrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o VaultPrivateLinkServiceConnectionStateResponseOutput) ToVaultPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) VaultPrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// Gets or sets actions required.
func (o VaultPrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPrivateLinkServiceConnectionStateResponse) string { return v.ActionsRequired }).(pulumi.StringOutput)
}

// Gets or sets description.
func (o VaultPrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPrivateLinkServiceConnectionStateResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Gets or sets the status.
func (o VaultPrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPrivateLinkServiceConnectionStateResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Properties of the vault.
type VaultPropertiesResponse struct {
	// List of private endpoint connection.
	PrivateEndpointConnections []PrivateEndpointConnectionVaultPropertiesResponse `pulumi:"privateEndpointConnections"`
	// Private endpoint state for backup.
	PrivateEndpointStateForBackup string `pulumi:"privateEndpointStateForBackup"`
	// Private endpoint state for site recovery.
	PrivateEndpointStateForSiteRecovery string `pulumi:"privateEndpointStateForSiteRecovery"`
	// Provisioning State.
	ProvisioningState string `pulumi:"provisioningState"`
	// Details for upgrading vault.
	UpgradeDetails *UpgradeDetailsResponse `pulumi:"upgradeDetails"`
}

// Properties of the vault.
type VaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesResponse)(nil)).Elem()
}

func (o VaultPropertiesResponseOutput) ToVaultPropertiesResponseOutput() VaultPropertiesResponseOutput {
	return o
}

func (o VaultPropertiesResponseOutput) ToVaultPropertiesResponseOutputWithContext(ctx context.Context) VaultPropertiesResponseOutput {
	return o
}

// List of private endpoint connection.
func (o VaultPropertiesResponseOutput) PrivateEndpointConnections() PrivateEndpointConnectionVaultPropertiesResponseArrayOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) []PrivateEndpointConnectionVaultPropertiesResponse {
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionVaultPropertiesResponseArrayOutput)
}

// Private endpoint state for backup.
func (o VaultPropertiesResponseOutput) PrivateEndpointStateForBackup() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.PrivateEndpointStateForBackup }).(pulumi.StringOutput)
}

// Private endpoint state for site recovery.
func (o VaultPropertiesResponseOutput) PrivateEndpointStateForSiteRecovery() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.PrivateEndpointStateForSiteRecovery }).(pulumi.StringOutput)
}

// Provisioning State.
func (o VaultPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Details for upgrading vault.
func (o VaultPropertiesResponseOutput) UpgradeDetails() UpgradeDetailsResponsePtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *UpgradeDetailsResponse { return v.UpgradeDetails }).(UpgradeDetailsResponsePtrOutput)
}

// Weekly retention format.
type WeeklyRetentionFormat struct {
	// List of days of the week.
	DaysOfTheWeek []DayOfWeek `pulumi:"daysOfTheWeek"`
	// List of weeks of the month.
	WeeksOfTheMonth []WeekOfMonth `pulumi:"weeksOfTheMonth"`
}

// Weekly retention format.
type WeeklyRetentionFormatResponse struct {
	// List of days of the week.
	DaysOfTheWeek []string `pulumi:"daysOfTheWeek"`
	// List of weeks of the month.
	WeeksOfTheMonth []string `pulumi:"weeksOfTheMonth"`
}

// Weekly retention schedule.
type WeeklyRetentionSchedule struct {
	// List of the days of the week for the weekly retention policy.
	DaysOfTheWeek []DayOfWeek `pulumi:"daysOfTheWeek"`
	// Retention duration of retention policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// Retention times of the retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Weekly retention schedule.
type WeeklyRetentionScheduleResponse struct {
	// List of the days of the week for the weekly retention policy.
	DaysOfTheWeek []string `pulumi:"daysOfTheWeek"`
	// Retention duration of retention policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// Retention times of the retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Yearly retention schedule.
type YearlyRetentionSchedule struct {
	// List of the months of year for the yearly retention policy.
	MonthsOfYear []MonthOfYear `pulumi:"monthsOfYear"`
	// Retention duration for the retention policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// Daily retention format for the yearly retention policy.
	RetentionScheduleDaily *DailyRetentionFormat `pulumi:"retentionScheduleDaily"`
	// Retention schedule format for the yearly retention policy.
	RetentionScheduleFormatType *RetentionScheduleFormat `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for the yearly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormat `pulumi:"retentionScheduleWeekly"`
	// Retention times for the retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Yearly retention schedule.
type YearlyRetentionScheduleResponse struct {
	// List of the months of year for the yearly retention policy.
	MonthsOfYear []string `pulumi:"monthsOfYear"`
	// Retention duration for the retention policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// Daily retention format for the yearly retention policy.
	RetentionScheduleDaily *DailyRetentionFormatResponse `pulumi:"retentionScheduleDaily"`
	// Retention schedule format for the yearly retention policy.
	RetentionScheduleFormatType *string `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for the yearly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormatResponse `pulumi:"retentionScheduleWeekly"`
	// Retention times for the retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

func init() {
	pulumi.RegisterOutputType(IdentityDataOutput{})
	pulumi.RegisterOutputType(IdentityDataPtrOutput{})
	pulumi.RegisterOutputType(IdentityDataResponseOutput{})
	pulumi.RegisterOutputType(IdentityDataResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionVaultPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(UpgradeDetailsResponseOutput{})
	pulumi.RegisterOutputType(UpgradeDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(VaultPrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(VaultPrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseOutput{})
}
