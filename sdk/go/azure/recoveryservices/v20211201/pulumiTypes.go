// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A2A container mapping input.
type A2AContainerMappingInput struct {
	// A value indicating whether the auto update is enabled.
	AgentAutoUpdateStatus *string `pulumi:"agentAutoUpdateStatus"`
	// The automation account arm id.
	AutomationAccountArmId *string `pulumi:"automationAccountArmId"`
	// A value indicating the type authentication to use for automation Account.
	AutomationAccountAuthenticationType *string `pulumi:"automationAccountAuthenticationType"`
	// The class type.
	// Expected value is 'A2A'.
	InstanceType string `pulumi:"instanceType"`
}

// Defaults sets the appropriate defaults for A2AContainerMappingInput
func (val *A2AContainerMappingInput) Defaults() *A2AContainerMappingInput {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.AutomationAccountAuthenticationType) {
		automationAccountAuthenticationType_ := "RunAsAccount"
		tmp.AutomationAccountAuthenticationType = &automationAccountAuthenticationType_
	}
	return &tmp
}

// A2A Cross-Cluster Migration enable protection input.
type A2ACrossClusterMigrationEnableProtectionInput struct {
	// The fabric specific object Id of the virtual machine.
	FabricObjectId *string `pulumi:"fabricObjectId"`
	// The class type.
	// Expected value is 'A2ACrossClusterMigration'.
	InstanceType string `pulumi:"instanceType"`
	// The recovery container Id.
	RecoveryContainerId *string `pulumi:"recoveryContainerId"`
}

// A2A Cross-Cluster Migration Policy creation input.
type A2ACrossClusterMigrationPolicyCreationInput struct {
	// The class type.
	// Expected value is 'A2ACrossClusterMigration'.
	InstanceType string `pulumi:"instanceType"`
}

// A2A provider specific settings.
type A2ACrossClusterMigrationReplicationDetailsResponse struct {
	// The fabric specific object Id of the virtual machine.
	FabricObjectId *string `pulumi:"fabricObjectId"`
	// Gets the Instance type.
	// Expected value is 'A2ACrossClusterMigration'.
	InstanceType string `pulumi:"instanceType"`
	// An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that denotes the "same" protected item even though other internal Ids/ARM Id might be changing.
	LifecycleId *string `pulumi:"lifecycleId"`
	// The type of operating system.
	OsType *string `pulumi:"osType"`
	// Primary fabric location.
	PrimaryFabricLocation *string `pulumi:"primaryFabricLocation"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// A2A enable protection input.
type A2AEnableProtectionInput struct {
	// The recovery disk encryption information (for two pass flows).
	DiskEncryptionInfo *DiskEncryptionInfo `pulumi:"diskEncryptionInfo"`
	// The fabric specific object Id of the virtual machine.
	FabricObjectId string `pulumi:"fabricObjectId"`
	// The class type.
	// Expected value is 'A2A'.
	InstanceType string `pulumi:"instanceType"`
	// The multi vm group id.
	MultiVmGroupId *string `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// The recovery availability set Id.
	RecoveryAvailabilitySetId *string `pulumi:"recoveryAvailabilitySetId"`
	// The recovery availability zone.
	RecoveryAvailabilityZone *string `pulumi:"recoveryAvailabilityZone"`
	// The recovery Azure virtual network ARM id.
	RecoveryAzureNetworkId *string `pulumi:"recoveryAzureNetworkId"`
	// The boot diagnostic storage account.
	RecoveryBootDiagStorageAccountId *string `pulumi:"recoveryBootDiagStorageAccountId"`
	// The recovery capacity reservation group Id.
	RecoveryCapacityReservationGroupId *string `pulumi:"recoveryCapacityReservationGroupId"`
	// The recovery cloud service Id. Valid for V1 scenarios.
	RecoveryCloudServiceId *string `pulumi:"recoveryCloudServiceId"`
	// The recovery container Id.
	RecoveryContainerId *string `pulumi:"recoveryContainerId"`
	// The recovery extended location.
	RecoveryExtendedLocation *ExtendedLocation `pulumi:"recoveryExtendedLocation"`
	// The recovery proximity placement group Id.
	RecoveryProximityPlacementGroupId *string `pulumi:"recoveryProximityPlacementGroupId"`
	// The recovery resource group Id. Valid for V2 scenarios.
	RecoveryResourceGroupId *string `pulumi:"recoveryResourceGroupId"`
	// The recovery subnet name.
	RecoverySubnetName *string `pulumi:"recoverySubnetName"`
	// The virtual machine scale set Id.
	RecoveryVirtualMachineScaleSetId *string `pulumi:"recoveryVirtualMachineScaleSetId"`
	// The list of vm disk details.
	VmDisks []A2AVmDiskInputDetails `pulumi:"vmDisks"`
	// The list of vm managed disk details.
	VmManagedDisks []A2AVmManagedDiskInputDetails `pulumi:"vmManagedDisks"`
}

// A2A Policy creation input.
type A2APolicyCreationInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	// Expected value is 'A2A'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
}

// A2A specific policy details.
type A2APolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency in minutes.
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'A2A'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// A2A protected disk details.
type A2AProtectedDiskDetailsResponse struct {
	// The disk level operations list.
	AllowedDiskLevelOperation []string `pulumi:"allowedDiskLevelOperation"`
	// The data pending at source virtual machine in MB.
	DataPendingAtSourceAgentInMB *float64 `pulumi:"dataPendingAtSourceAgentInMB"`
	// The data pending for replication in MB at staging account.
	DataPendingInStagingStorageAccountInMB *float64 `pulumi:"dataPendingInStagingStorageAccountInMB"`
	// The KeyVault resource id for secret (BEK).
	DekKeyVaultArmId *string `pulumi:"dekKeyVaultArmId"`
	// The disk capacity in bytes.
	DiskCapacityInBytes *float64 `pulumi:"diskCapacityInBytes"`
	// The disk name.
	DiskName *string `pulumi:"diskName"`
	// The disk state.
	DiskState *string `pulumi:"diskState"`
	// The type of disk.
	DiskType *string `pulumi:"diskType"`
	// The disk uri.
	DiskUri *string `pulumi:"diskUri"`
	// The failover name for the managed disk.
	FailoverDiskName *string `pulumi:"failoverDiskName"`
	// A value indicating whether vm has encrypted os disk or not.
	IsDiskEncrypted *bool `pulumi:"isDiskEncrypted"`
	// A value indicating whether disk key got encrypted or not.
	IsDiskKeyEncrypted *bool `pulumi:"isDiskKeyEncrypted"`
	// The KeyVault resource id for key (KEK).
	KekKeyVaultArmId *string `pulumi:"kekKeyVaultArmId"`
	// The key URL / identifier (KEK).
	KeyIdentifier *string `pulumi:"keyIdentifier"`
	// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
	MonitoringJobType *string `pulumi:"monitoringJobType"`
	// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
	MonitoringPercentageCompletion *int `pulumi:"monitoringPercentageCompletion"`
	// The primary disk storage account.
	PrimaryDiskAzureStorageAccountId *string `pulumi:"primaryDiskAzureStorageAccountId"`
	// The primary staging storage account.
	PrimaryStagingAzureStorageAccountId *string `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery disk storage account.
	RecoveryAzureStorageAccountId *string `pulumi:"recoveryAzureStorageAccountId"`
	// Recovery disk uri.
	RecoveryDiskUri *string `pulumi:"recoveryDiskUri"`
	// A value indicating whether resync is required for this disk.
	ResyncRequired *bool `pulumi:"resyncRequired"`
	// The secret URL / identifier (BEK).
	SecretIdentifier *string `pulumi:"secretIdentifier"`
	// The test failover name for the managed disk.
	TfoDiskName *string `pulumi:"tfoDiskName"`
}

// A2A protected managed disk details.
type A2AProtectedManagedDiskDetailsResponse struct {
	// The disk level operations list.
	AllowedDiskLevelOperation []string `pulumi:"allowedDiskLevelOperation"`
	// The data pending at source virtual machine in MB.
	DataPendingAtSourceAgentInMB *float64 `pulumi:"dataPendingAtSourceAgentInMB"`
	// The data pending for replication in MB at staging account.
	DataPendingInStagingStorageAccountInMB *float64 `pulumi:"dataPendingInStagingStorageAccountInMB"`
	// The KeyVault resource id for secret (BEK).
	DekKeyVaultArmId *string `pulumi:"dekKeyVaultArmId"`
	// The disk capacity in bytes.
	DiskCapacityInBytes *float64 `pulumi:"diskCapacityInBytes"`
	// The managed disk Arm id.
	DiskId *string `pulumi:"diskId"`
	// The disk name.
	DiskName *string `pulumi:"diskName"`
	// The disk state.
	DiskState *string `pulumi:"diskState"`
	// The type of disk.
	DiskType *string `pulumi:"diskType"`
	// The failover name for the managed disk.
	FailoverDiskName *string `pulumi:"failoverDiskName"`
	// A value indicating whether vm has encrypted os disk or not.
	IsDiskEncrypted *bool `pulumi:"isDiskEncrypted"`
	// A value indicating whether disk key got encrypted or not.
	IsDiskKeyEncrypted *bool `pulumi:"isDiskKeyEncrypted"`
	// The KeyVault resource id for key (KEK).
	KekKeyVaultArmId *string `pulumi:"kekKeyVaultArmId"`
	// The key URL / identifier (KEK).
	KeyIdentifier *string `pulumi:"keyIdentifier"`
	// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
	MonitoringJobType *string `pulumi:"monitoringJobType"`
	// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
	MonitoringPercentageCompletion *int `pulumi:"monitoringPercentageCompletion"`
	// The primary disk encryption set Id.
	PrimaryDiskEncryptionSetId *string `pulumi:"primaryDiskEncryptionSetId"`
	// The primary staging storage account.
	PrimaryStagingAzureStorageAccountId *string `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery disk encryption set Id.
	RecoveryDiskEncryptionSetId *string `pulumi:"recoveryDiskEncryptionSetId"`
	// Recovery original target disk Arm Id.
	RecoveryOrignalTargetDiskId *string `pulumi:"recoveryOrignalTargetDiskId"`
	// The replica disk type. Its an optional value and will be same as source disk type if not user provided.
	RecoveryReplicaDiskAccountType *string `pulumi:"recoveryReplicaDiskAccountType"`
	// Recovery replica disk Arm Id.
	RecoveryReplicaDiskId *string `pulumi:"recoveryReplicaDiskId"`
	// The recovery disk resource group Arm Id.
	RecoveryResourceGroupId *string `pulumi:"recoveryResourceGroupId"`
	// The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.
	RecoveryTargetDiskAccountType *string `pulumi:"recoveryTargetDiskAccountType"`
	// Recovery target disk Arm Id.
	RecoveryTargetDiskId *string `pulumi:"recoveryTargetDiskId"`
	// A value indicating whether resync is required for this disk.
	ResyncRequired *bool `pulumi:"resyncRequired"`
	// The secret URL / identifier (BEK).
	SecretIdentifier *string `pulumi:"secretIdentifier"`
	// The test failover name for the managed disk.
	TfoDiskName *string `pulumi:"tfoDiskName"`
}

// A2A provider specific settings.
type A2AProtectionContainerMappingDetailsResponse struct {
	// A value indicating whether the auto update is enabled.
	AgentAutoUpdateStatus *string `pulumi:"agentAutoUpdateStatus"`
	// The automation account arm id.
	AutomationAccountArmId *string `pulumi:"automationAccountArmId"`
	// A value indicating the type authentication to use for automation Account.
	AutomationAccountAuthenticationType *string `pulumi:"automationAccountAuthenticationType"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'A2A'.
	InstanceType string `pulumi:"instanceType"`
	// The job schedule arm name.
	JobScheduleName *string `pulumi:"jobScheduleName"`
	// The schedule arm name.
	ScheduleName *string `pulumi:"scheduleName"`
}

// Defaults sets the appropriate defaults for A2AProtectionContainerMappingDetailsResponse
func (val *A2AProtectionContainerMappingDetailsResponse) Defaults() *A2AProtectionContainerMappingDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.AutomationAccountAuthenticationType) {
		automationAccountAuthenticationType_ := "RunAsAccount"
		tmp.AutomationAccountAuthenticationType = &automationAccountAuthenticationType_
	}
	return &tmp
}

// A2A provider specific settings.
type A2AReplicationDetailsResponse struct {
	// Agent certificate expiry date.
	AgentCertificateExpiryDate string `pulumi:"agentCertificateExpiryDate"`
	// Agent expiry date.
	AgentExpiryDate *string `pulumi:"agentExpiryDate"`
	// The agent version.
	AgentVersion *string `pulumi:"agentVersion"`
	// A value indicating whether the auto protection is enabled.
	AutoProtectionOfDataDisk *string `pulumi:"autoProtectionOfDataDisk"`
	// The fabric specific object Id of the virtual machine.
	FabricObjectId *string `pulumi:"fabricObjectId"`
	// The initial primary extended location.
	InitialPrimaryExtendedLocation *ExtendedLocationResponse `pulumi:"initialPrimaryExtendedLocation"`
	// The initial primary fabric location.
	InitialPrimaryFabricLocation string `pulumi:"initialPrimaryFabricLocation"`
	// The initial primary availability zone.
	InitialPrimaryZone string `pulumi:"initialPrimaryZone"`
	// The initial recovery extended location.
	InitialRecoveryExtendedLocation *ExtendedLocationResponse `pulumi:"initialRecoveryExtendedLocation"`
	// The initial recovery fabric location.
	InitialRecoveryFabricLocation string `pulumi:"initialRecoveryFabricLocation"`
	// The initial recovery availability zone.
	InitialRecoveryZone string `pulumi:"initialRecoveryZone"`
	// Gets the Instance type.
	// Expected value is 'A2A'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether agent certificate update is required.
	IsReplicationAgentCertificateUpdateRequired *bool `pulumi:"isReplicationAgentCertificateUpdateRequired"`
	// A value indicating whether replication agent update is required.
	IsReplicationAgentUpdateRequired *bool `pulumi:"isReplicationAgentUpdateRequired"`
	// The last heartbeat received from the source server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The time (in UTC) when the last RPO value was calculated by Protection Service.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that denotes the "same" protected item even though other internal Ids/ARM Id might be changing.
	LifecycleId *string `pulumi:"lifecycleId"`
	// The management Id.
	ManagementId *string `pulumi:"managementId"`
	// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
	MonitoringJobType *string `pulumi:"monitoringJobType"`
	// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
	MonitoringPercentageCompletion *int `pulumi:"monitoringPercentageCompletion"`
	// Whether Multi VM group is auto created or specified by user.
	MultiVmGroupCreateOption *string `pulumi:"multiVmGroupCreateOption"`
	// The multi vm group Id.
	MultiVmGroupId *string `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// The type of operating system.
	OsType *string `pulumi:"osType"`
	// The primary availability zone.
	PrimaryAvailabilityZone *string `pulumi:"primaryAvailabilityZone"`
	// The primary Extended Location.
	PrimaryExtendedLocation *ExtendedLocationResponse `pulumi:"primaryExtendedLocation"`
	// Primary fabric location.
	PrimaryFabricLocation *string `pulumi:"primaryFabricLocation"`
	// The list of protected disks.
	ProtectedDisks []A2AProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The list of protected managed disks.
	ProtectedManagedDisks []A2AProtectedManagedDiskDetailsResponse `pulumi:"protectedManagedDisks"`
	// The recovery availability set.
	RecoveryAvailabilitySet *string `pulumi:"recoveryAvailabilitySet"`
	// The recovery availability zone.
	RecoveryAvailabilityZone *string `pulumi:"recoveryAvailabilityZone"`
	// The recovery azure generation.
	RecoveryAzureGeneration string `pulumi:"recoveryAzureGeneration"`
	// The recovery resource group.
	RecoveryAzureResourceGroupId *string `pulumi:"recoveryAzureResourceGroupId"`
	// The name of recovery virtual machine.
	RecoveryAzureVMName *string `pulumi:"recoveryAzureVMName"`
	// The size of recovery virtual machine.
	RecoveryAzureVMSize *string `pulumi:"recoveryAzureVMSize"`
	// The recovery boot diagnostic storage account Arm Id.
	RecoveryBootDiagStorageAccountId *string `pulumi:"recoveryBootDiagStorageAccountId"`
	// The recovery capacity reservation group Id.
	RecoveryCapacityReservationGroupId *string `pulumi:"recoveryCapacityReservationGroupId"`
	// The recovery cloud service.
	RecoveryCloudService *string `pulumi:"recoveryCloudService"`
	// The recovery Extended Location.
	RecoveryExtendedLocation *ExtendedLocationResponse `pulumi:"recoveryExtendedLocation"`
	// The recovery fabric location.
	RecoveryFabricLocation *string `pulumi:"recoveryFabricLocation"`
	// The recovery fabric object Id.
	RecoveryFabricObjectId *string `pulumi:"recoveryFabricObjectId"`
	// The recovery proximity placement group Id.
	RecoveryProximityPlacementGroupId *string `pulumi:"recoveryProximityPlacementGroupId"`
	// The recovery virtual machine scale set id.
	RecoveryVirtualMachineScaleSetId *string `pulumi:"recoveryVirtualMachineScaleSetId"`
	// The last RPO value in seconds.
	RpoInSeconds *float64 `pulumi:"rpoInSeconds"`
	// The recovery virtual network.
	SelectedRecoveryAzureNetworkId *string `pulumi:"selectedRecoveryAzureNetworkId"`
	// The test failover virtual network.
	SelectedTfoAzureNetworkId *string `pulumi:"selectedTfoAzureNetworkId"`
	// The test failover fabric object Id.
	TestFailoverRecoveryFabricObjectId *string `pulumi:"testFailoverRecoveryFabricObjectId"`
	// The test failover vm name.
	TfoAzureVMName *string `pulumi:"tfoAzureVMName"`
	// The list of unprotected disks.
	UnprotectedDisks []A2AUnprotectedDiskDetailsResponse `pulumi:"unprotectedDisks"`
	// The encryption type of the VM.
	VmEncryptionType string `pulumi:"vmEncryptionType"`
	// The virtual machine nic details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
	// The synced configuration details.
	VmSyncedConfigDetails *AzureToAzureVmSyncedConfigDetailsResponse `pulumi:"vmSyncedConfigDetails"`
}

// A2A unprotected disk details.
type A2AUnprotectedDiskDetailsResponse struct {
	// A value indicating whether the disk auto protection is enabled.
	DiskAutoProtectionStatus *string `pulumi:"diskAutoProtectionStatus"`
	// The source lun Id for the data disk.
	DiskLunId *int `pulumi:"diskLunId"`
}

// A2A disk input details.
type A2AVmDiskInputDetails struct {
	// The disk Uri.
	DiskUri string `pulumi:"diskUri"`
	// The primary staging storage account Id.
	PrimaryStagingAzureStorageAccountId string `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery VHD storage account Id.
	RecoveryAzureStorageAccountId string `pulumi:"recoveryAzureStorageAccountId"`
}

// A2A managed disk input details.
type A2AVmManagedDiskInputDetails struct {
	// The recovery disk encryption information (for one / single pass flows).
	DiskEncryptionInfo *DiskEncryptionInfo `pulumi:"diskEncryptionInfo"`
	// The disk Id.
	DiskId string `pulumi:"diskId"`
	// The primary staging storage account Arm Id.
	PrimaryStagingAzureStorageAccountId string `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery disk encryption set Id.
	RecoveryDiskEncryptionSetId *string `pulumi:"recoveryDiskEncryptionSetId"`
	// The replica disk type. Its an optional value and will be same as source disk type if not user provided.
	RecoveryReplicaDiskAccountType *string `pulumi:"recoveryReplicaDiskAccountType"`
	// The target resource group Arm Id.
	RecoveryResourceGroupId string `pulumi:"recoveryResourceGroupId"`
	// The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.
	RecoveryTargetDiskAccountType *string `pulumi:"recoveryTargetDiskAccountType"`
}

// Zone details data.
type A2AZoneDetailsResponse struct {
	// Source zone info.
	Source *string `pulumi:"source"`
	// The target zone info.
	Target *string `pulumi:"target"`
}

// The properties of an add provider request.
type AddRecoveryServicesProviderInputProperties struct {
	// The identity provider input for DRA authentication.
	AuthenticationIdentityInput IdentityProviderInput `pulumi:"authenticationIdentityInput"`
	// The Bios Id of the machine.
	BiosId *string `pulumi:"biosId"`
	// The identity provider input for data plane authentication.
	DataPlaneAuthenticationIdentityInput *IdentityProviderInput `pulumi:"dataPlaneAuthenticationIdentityInput"`
	// The Id of the machine where the provider is getting added.
	MachineId *string `pulumi:"machineId"`
	// The name of the machine where the provider is getting added.
	MachineName string `pulumi:"machineName"`
	// The identity provider input for resource access.
	ResourceAccessIdentityInput IdentityProviderInput `pulumi:"resourceAccessIdentityInput"`
}

// AddRecoveryServicesProviderInputPropertiesInput is an input type that accepts AddRecoveryServicesProviderInputPropertiesArgs and AddRecoveryServicesProviderInputPropertiesOutput values.
// You can construct a concrete instance of `AddRecoveryServicesProviderInputPropertiesInput` via:
//
//	AddRecoveryServicesProviderInputPropertiesArgs{...}
type AddRecoveryServicesProviderInputPropertiesInput interface {
	pulumi.Input

	ToAddRecoveryServicesProviderInputPropertiesOutput() AddRecoveryServicesProviderInputPropertiesOutput
	ToAddRecoveryServicesProviderInputPropertiesOutputWithContext(context.Context) AddRecoveryServicesProviderInputPropertiesOutput
}

// The properties of an add provider request.
type AddRecoveryServicesProviderInputPropertiesArgs struct {
	// The identity provider input for DRA authentication.
	AuthenticationIdentityInput IdentityProviderInputInput `pulumi:"authenticationIdentityInput"`
	// The Bios Id of the machine.
	BiosId pulumi.StringPtrInput `pulumi:"biosId"`
	// The identity provider input for data plane authentication.
	DataPlaneAuthenticationIdentityInput IdentityProviderInputPtrInput `pulumi:"dataPlaneAuthenticationIdentityInput"`
	// The Id of the machine where the provider is getting added.
	MachineId pulumi.StringPtrInput `pulumi:"machineId"`
	// The name of the machine where the provider is getting added.
	MachineName pulumi.StringInput `pulumi:"machineName"`
	// The identity provider input for resource access.
	ResourceAccessIdentityInput IdentityProviderInputInput `pulumi:"resourceAccessIdentityInput"`
}

func (AddRecoveryServicesProviderInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddRecoveryServicesProviderInputProperties)(nil)).Elem()
}

func (i AddRecoveryServicesProviderInputPropertiesArgs) ToAddRecoveryServicesProviderInputPropertiesOutput() AddRecoveryServicesProviderInputPropertiesOutput {
	return i.ToAddRecoveryServicesProviderInputPropertiesOutputWithContext(context.Background())
}

func (i AddRecoveryServicesProviderInputPropertiesArgs) ToAddRecoveryServicesProviderInputPropertiesOutputWithContext(ctx context.Context) AddRecoveryServicesProviderInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddRecoveryServicesProviderInputPropertiesOutput)
}

// The properties of an add provider request.
type AddRecoveryServicesProviderInputPropertiesOutput struct{ *pulumi.OutputState }

func (AddRecoveryServicesProviderInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddRecoveryServicesProviderInputProperties)(nil)).Elem()
}

func (o AddRecoveryServicesProviderInputPropertiesOutput) ToAddRecoveryServicesProviderInputPropertiesOutput() AddRecoveryServicesProviderInputPropertiesOutput {
	return o
}

func (o AddRecoveryServicesProviderInputPropertiesOutput) ToAddRecoveryServicesProviderInputPropertiesOutputWithContext(ctx context.Context) AddRecoveryServicesProviderInputPropertiesOutput {
	return o
}

// The identity provider input for DRA authentication.
func (o AddRecoveryServicesProviderInputPropertiesOutput) AuthenticationIdentityInput() IdentityProviderInputOutput {
	return o.ApplyT(func(v AddRecoveryServicesProviderInputProperties) IdentityProviderInput {
		return v.AuthenticationIdentityInput
	}).(IdentityProviderInputOutput)
}

// The Bios Id of the machine.
func (o AddRecoveryServicesProviderInputPropertiesOutput) BiosId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddRecoveryServicesProviderInputProperties) *string { return v.BiosId }).(pulumi.StringPtrOutput)
}

// The identity provider input for data plane authentication.
func (o AddRecoveryServicesProviderInputPropertiesOutput) DataPlaneAuthenticationIdentityInput() IdentityProviderInputPtrOutput {
	return o.ApplyT(func(v AddRecoveryServicesProviderInputProperties) *IdentityProviderInput {
		return v.DataPlaneAuthenticationIdentityInput
	}).(IdentityProviderInputPtrOutput)
}

// The Id of the machine where the provider is getting added.
func (o AddRecoveryServicesProviderInputPropertiesOutput) MachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddRecoveryServicesProviderInputProperties) *string { return v.MachineId }).(pulumi.StringPtrOutput)
}

// The name of the machine where the provider is getting added.
func (o AddRecoveryServicesProviderInputPropertiesOutput) MachineName() pulumi.StringOutput {
	return o.ApplyT(func(v AddRecoveryServicesProviderInputProperties) string { return v.MachineName }).(pulumi.StringOutput)
}

// The identity provider input for resource access.
func (o AddRecoveryServicesProviderInputPropertiesOutput) ResourceAccessIdentityInput() IdentityProviderInputOutput {
	return o.ApplyT(func(v AddRecoveryServicesProviderInputProperties) IdentityProviderInput {
		return v.ResourceAccessIdentityInput
	}).(IdentityProviderInputOutput)
}

// The properties of an add vCenter request.
type AddVCenterRequestProperties struct {
	// The friendly name of the vCenter.
	FriendlyName *string `pulumi:"friendlyName"`
	// The IP address of the vCenter to be discovered.
	IpAddress *string `pulumi:"ipAddress"`
	// The port number for discovery.
	Port *string `pulumi:"port"`
	// The process server Id from where the discovery is orchestrated.
	ProcessServerId *string `pulumi:"processServerId"`
	// The account Id which has privileges to discover the vCenter.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
}

// AddVCenterRequestPropertiesInput is an input type that accepts AddVCenterRequestPropertiesArgs and AddVCenterRequestPropertiesOutput values.
// You can construct a concrete instance of `AddVCenterRequestPropertiesInput` via:
//
//	AddVCenterRequestPropertiesArgs{...}
type AddVCenterRequestPropertiesInput interface {
	pulumi.Input

	ToAddVCenterRequestPropertiesOutput() AddVCenterRequestPropertiesOutput
	ToAddVCenterRequestPropertiesOutputWithContext(context.Context) AddVCenterRequestPropertiesOutput
}

// The properties of an add vCenter request.
type AddVCenterRequestPropertiesArgs struct {
	// The friendly name of the vCenter.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// The IP address of the vCenter to be discovered.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The port number for discovery.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The process server Id from where the discovery is orchestrated.
	ProcessServerId pulumi.StringPtrInput `pulumi:"processServerId"`
	// The account Id which has privileges to discover the vCenter.
	RunAsAccountId pulumi.StringPtrInput `pulumi:"runAsAccountId"`
}

func (AddVCenterRequestPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddVCenterRequestProperties)(nil)).Elem()
}

func (i AddVCenterRequestPropertiesArgs) ToAddVCenterRequestPropertiesOutput() AddVCenterRequestPropertiesOutput {
	return i.ToAddVCenterRequestPropertiesOutputWithContext(context.Background())
}

func (i AddVCenterRequestPropertiesArgs) ToAddVCenterRequestPropertiesOutputWithContext(ctx context.Context) AddVCenterRequestPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddVCenterRequestPropertiesOutput)
}

func (i AddVCenterRequestPropertiesArgs) ToAddVCenterRequestPropertiesPtrOutput() AddVCenterRequestPropertiesPtrOutput {
	return i.ToAddVCenterRequestPropertiesPtrOutputWithContext(context.Background())
}

func (i AddVCenterRequestPropertiesArgs) ToAddVCenterRequestPropertiesPtrOutputWithContext(ctx context.Context) AddVCenterRequestPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddVCenterRequestPropertiesOutput).ToAddVCenterRequestPropertiesPtrOutputWithContext(ctx)
}

// AddVCenterRequestPropertiesPtrInput is an input type that accepts AddVCenterRequestPropertiesArgs, AddVCenterRequestPropertiesPtr and AddVCenterRequestPropertiesPtrOutput values.
// You can construct a concrete instance of `AddVCenterRequestPropertiesPtrInput` via:
//
//	        AddVCenterRequestPropertiesArgs{...}
//
//	or:
//
//	        nil
type AddVCenterRequestPropertiesPtrInput interface {
	pulumi.Input

	ToAddVCenterRequestPropertiesPtrOutput() AddVCenterRequestPropertiesPtrOutput
	ToAddVCenterRequestPropertiesPtrOutputWithContext(context.Context) AddVCenterRequestPropertiesPtrOutput
}

type addVCenterRequestPropertiesPtrType AddVCenterRequestPropertiesArgs

func AddVCenterRequestPropertiesPtr(v *AddVCenterRequestPropertiesArgs) AddVCenterRequestPropertiesPtrInput {
	return (*addVCenterRequestPropertiesPtrType)(v)
}

func (*addVCenterRequestPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddVCenterRequestProperties)(nil)).Elem()
}

func (i *addVCenterRequestPropertiesPtrType) ToAddVCenterRequestPropertiesPtrOutput() AddVCenterRequestPropertiesPtrOutput {
	return i.ToAddVCenterRequestPropertiesPtrOutputWithContext(context.Background())
}

func (i *addVCenterRequestPropertiesPtrType) ToAddVCenterRequestPropertiesPtrOutputWithContext(ctx context.Context) AddVCenterRequestPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddVCenterRequestPropertiesPtrOutput)
}

// The properties of an add vCenter request.
type AddVCenterRequestPropertiesOutput struct{ *pulumi.OutputState }

func (AddVCenterRequestPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddVCenterRequestProperties)(nil)).Elem()
}

func (o AddVCenterRequestPropertiesOutput) ToAddVCenterRequestPropertiesOutput() AddVCenterRequestPropertiesOutput {
	return o
}

func (o AddVCenterRequestPropertiesOutput) ToAddVCenterRequestPropertiesOutputWithContext(ctx context.Context) AddVCenterRequestPropertiesOutput {
	return o
}

func (o AddVCenterRequestPropertiesOutput) ToAddVCenterRequestPropertiesPtrOutput() AddVCenterRequestPropertiesPtrOutput {
	return o.ToAddVCenterRequestPropertiesPtrOutputWithContext(context.Background())
}

func (o AddVCenterRequestPropertiesOutput) ToAddVCenterRequestPropertiesPtrOutputWithContext(ctx context.Context) AddVCenterRequestPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddVCenterRequestProperties) *AddVCenterRequestProperties {
		return &v
	}).(AddVCenterRequestPropertiesPtrOutput)
}

// The friendly name of the vCenter.
func (o AddVCenterRequestPropertiesOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddVCenterRequestProperties) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The IP address of the vCenter to be discovered.
func (o AddVCenterRequestPropertiesOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddVCenterRequestProperties) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The port number for discovery.
func (o AddVCenterRequestPropertiesOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddVCenterRequestProperties) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The process server Id from where the discovery is orchestrated.
func (o AddVCenterRequestPropertiesOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddVCenterRequestProperties) *string { return v.ProcessServerId }).(pulumi.StringPtrOutput)
}

// The account Id which has privileges to discover the vCenter.
func (o AddVCenterRequestPropertiesOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddVCenterRequestProperties) *string { return v.RunAsAccountId }).(pulumi.StringPtrOutput)
}

type AddVCenterRequestPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AddVCenterRequestPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddVCenterRequestProperties)(nil)).Elem()
}

func (o AddVCenterRequestPropertiesPtrOutput) ToAddVCenterRequestPropertiesPtrOutput() AddVCenterRequestPropertiesPtrOutput {
	return o
}

func (o AddVCenterRequestPropertiesPtrOutput) ToAddVCenterRequestPropertiesPtrOutputWithContext(ctx context.Context) AddVCenterRequestPropertiesPtrOutput {
	return o
}

func (o AddVCenterRequestPropertiesPtrOutput) Elem() AddVCenterRequestPropertiesOutput {
	return o.ApplyT(func(v *AddVCenterRequestProperties) AddVCenterRequestProperties {
		if v != nil {
			return *v
		}
		var ret AddVCenterRequestProperties
		return ret
	}).(AddVCenterRequestPropertiesOutput)
}

// The friendly name of the vCenter.
func (o AddVCenterRequestPropertiesPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddVCenterRequestProperties) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// The IP address of the vCenter to be discovered.
func (o AddVCenterRequestPropertiesPtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddVCenterRequestProperties) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The port number for discovery.
func (o AddVCenterRequestPropertiesPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddVCenterRequestProperties) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// The process server Id from where the discovery is orchestrated.
func (o AddVCenterRequestPropertiesPtrOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddVCenterRequestProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProcessServerId
	}).(pulumi.StringPtrOutput)
}

// The account Id which has privileges to discover the vCenter.
func (o AddVCenterRequestPropertiesPtrOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddVCenterRequestProperties) *string {
		if v == nil {
			return nil
		}
		return v.RunAsAccountId
	}).(pulumi.StringPtrOutput)
}

// Agent details.
type AgentDetailsResponse struct {
	// The Id of the agent running on the server.
	AgentId string `pulumi:"agentId"`
	// The machine BIOS Id.
	BiosId string `pulumi:"biosId"`
	// The disks.
	Disks []AgentDiskDetailsResponse `pulumi:"disks"`
	// The machine FQDN.
	Fqdn string `pulumi:"fqdn"`
	// The Id of the machine to which the agent is registered.
	MachineId string `pulumi:"machineId"`
}

// Agent disk details.
type AgentDiskDetailsResponse struct {
	// The disk capacity in bytes.
	CapacityInBytes float64 `pulumi:"capacityInBytes"`
	// The disk Id.
	DiskId string `pulumi:"diskId"`
	// The disk name.
	DiskName string `pulumi:"diskName"`
	// A value indicating whether the disk is the OS disk.
	IsOSDisk string `pulumi:"isOSDisk"`
	// The lun of disk.
	LunId int `pulumi:"lunId"`
}

// AzureBackupServer (DPMVenus) workload-specific protection container.
type AzureBackupServerContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister *bool `pulumi:"canReRegister"`
	// ID of container.
	ContainerId *string `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureBackupServerContainer'.
	ContainerType string `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion *string `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers []string `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo *DPMContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable *bool `pulumi:"upgradeAvailable"`
}

// AzureBackupServer (DPMVenus) workload-specific protection container.
type AzureBackupServerContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister *bool `pulumi:"canReRegister"`
	// ID of container.
	ContainerId *string `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureBackupServerContainer'.
	ContainerType string `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion *string `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers []string `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo *DPMContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable *bool `pulumi:"upgradeAvailable"`
}

// Fabric provider specific settings.
type AzureFabricCreationInput struct {
	// Gets the class type.
	// Expected value is 'Azure'.
	InstanceType string `pulumi:"instanceType"`
	// The Location.
	Location *string `pulumi:"location"`
}

// Azure Fabric Specific Details.
type AzureFabricSpecificDetailsResponse struct {
	// The container Ids for the Azure fabric.
	ContainerIds []string `pulumi:"containerIds"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'Azure'.
	InstanceType string `pulumi:"instanceType"`
	// The Location for the Azure fabric.
	Location *string `pulumi:"location"`
	// The zones.
	Zones []A2AZoneDetailsResponse `pulumi:"zones"`
}

// AzureStorage backup policy.
type AzureFileShareProtectionPolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureStorage'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
	// Type of workload for the backup management
	WorkLoadType *string `pulumi:"workLoadType"`
}

// AzureStorage backup policy.
type AzureFileShareProtectionPolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureStorage'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
	// Type of workload for the backup management
	WorkLoadType *string `pulumi:"workLoadType"`
}

// Azure File Share workload-specific backup item.
type AzureFileshareProtectedItem struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo *AzureFileshareProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the fileshare represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'AzureFileShareProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Additional information about Azure File Share backup item.
type AzureFileshareProtectedItemExtendedInfo struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Additional information about Azure File Share backup item.
type AzureFileshareProtectedItemExtendedInfoResponse struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
	// Indicates the state of this resource. Possible values are from enum ResourceState {Invalid, Active, SoftDeleted, Deleted}
	ResourceState string `pulumi:"resourceState"`
	// The resource state sync time for this backup item.
	ResourceStateSyncTime string `pulumi:"resourceStateSyncTime"`
}

// Azure File Share workload-specific backup item.
type AzureFileshareProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo *AzureFileshareProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the fileshare represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'AzureFileShareProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// IaaS VM workload-specific backup item representing a classic virtual machine.
type AzureIaaSClassicComputeVMContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// IaaS VM workload-specific backup item representing a classic virtual machine.
type AzureIaaSClassicComputeVMContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// IaaS VM workload-specific backup item representing the Classic Compute VM.
type AzureIaaSClassicComputeVMProtectedItem struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedProperties `pulumi:"extendedProperties"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Health status of protected item.
	HealthStatus *string `pulumi:"healthStatus"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataId *string `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Fully qualified ARM ID of the virtual machine represented by this item.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// IaaS VM workload-specific backup item representing the Classic Compute VM.
type AzureIaaSClassicComputeVMProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedPropertiesResponse `pulumi:"extendedProperties"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Health details on this backup item.
	HealthDetails []AzureIaaSVMHealthDetailsResponse `pulumi:"healthDetails"`
	// Health status of protected item.
	HealthStatus *string `pulumi:"healthStatus"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataId *string `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Fully qualified ARM ID of the virtual machine represented by this item.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.
type AzureIaaSComputeVMContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.
type AzureIaaSComputeVMContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// IaaS VM workload-specific backup item representing the Azure Resource Manager VM.
type AzureIaaSComputeVMProtectedItem struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedProperties `pulumi:"extendedProperties"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Health status of protected item.
	HealthStatus *string `pulumi:"healthStatus"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataId *string `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Fully qualified ARM ID of the virtual machine represented by this item.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// IaaS VM workload-specific backup item representing the Azure Resource Manager VM.
type AzureIaaSComputeVMProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedPropertiesResponse `pulumi:"extendedProperties"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Health details on this backup item.
	HealthDetails []AzureIaaSVMHealthDetailsResponse `pulumi:"healthDetails"`
	// Health status of protected item.
	HealthStatus *string `pulumi:"healthStatus"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataId *string `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Fully qualified ARM ID of the virtual machine represented by this item.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Azure IaaS VM workload-specific Health Details.
type AzureIaaSVMHealthDetailsResponse struct {
	// Health Code
	Code int `pulumi:"code"`
	// Health Message
	Message string `pulumi:"message"`
	// Health Recommended Actions
	Recommendations []string `pulumi:"recommendations"`
	// Health Title
	Title string `pulumi:"title"`
}

// IaaS VM workload-specific backup item.
type AzureIaaSVMProtectedItem struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedProperties `pulumi:"extendedProperties"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Health status of protected item.
	HealthStatus *string `pulumi:"healthStatus"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataId *string `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'AzureIaaSVMProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Fully qualified ARM ID of the virtual machine represented by this item.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Additional information on Azure IaaS VM specific backup item.
type AzureIaaSVMProtectedItemExtendedInfo struct {
	// The latest backup copy available for this backup item in archive tier
	NewestRecoveryPointInArchive *string `pulumi:"newestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item across all tiers.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// The oldest backup copy available for this backup item in archive tier
	OldestRecoveryPointInArchive *string `pulumi:"oldestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item in vault tier
	OldestRecoveryPointInVault *string `pulumi:"oldestRecoveryPointInVault"`
	// Specifies if backup policy associated with the backup item is inconsistent.
	PolicyInconsistent *bool `pulumi:"policyInconsistent"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Additional information on Azure IaaS VM specific backup item.
type AzureIaaSVMProtectedItemExtendedInfoResponse struct {
	// The latest backup copy available for this backup item in archive tier
	NewestRecoveryPointInArchive *string `pulumi:"newestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item across all tiers.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// The oldest backup copy available for this backup item in archive tier
	OldestRecoveryPointInArchive *string `pulumi:"oldestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item in vault tier
	OldestRecoveryPointInVault *string `pulumi:"oldestRecoveryPointInVault"`
	// Specifies if backup policy associated with the backup item is inconsistent.
	PolicyInconsistent *bool `pulumi:"policyInconsistent"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// IaaS VM workload-specific backup item.
type AzureIaaSVMProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedPropertiesResponse `pulumi:"extendedProperties"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Health details on this backup item.
	HealthDetails []AzureIaaSVMHealthDetailsResponse `pulumi:"healthDetails"`
	// Health status of protected item.
	HealthStatus *string `pulumi:"healthStatus"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataId *string `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'AzureIaaSVMProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Fully qualified ARM ID of the virtual machine represented by this item.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// IaaS VM workload-specific backup policy.
type AzureIaaSVMProtectionPolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureIaasVM'.
	BackupManagementType string                      `pulumi:"backupManagementType"`
	InstantRPDetails     *InstantRPAdditionalDetails `pulumi:"instantRPDetails"`
	// Instant RP retention policy range in days
	InstantRpRetentionRangeInDays *int    `pulumi:"instantRpRetentionRangeInDays"`
	PolicyType                    *string `pulumi:"policyType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
	// Tiering policy to automatically move RPs to another tier
	// Key is Target Tier, defined in RecoveryPointTierType enum.
	// Tiering policy specifies the criteria to move RP to the target tier.
	TieringPolicy map[string]TieringPolicy `pulumi:"tieringPolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
}

// IaaS VM workload-specific backup policy.
type AzureIaaSVMProtectionPolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureIaasVM'.
	BackupManagementType string                              `pulumi:"backupManagementType"`
	InstantRPDetails     *InstantRPAdditionalDetailsResponse `pulumi:"instantRPDetails"`
	// Instant RP retention policy range in days
	InstantRpRetentionRangeInDays *int    `pulumi:"instantRpRetentionRangeInDays"`
	PolicyType                    *string `pulumi:"policyType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
	// Tiering policy to automatically move RPs to another tier
	// Key is Target Tier, defined in RecoveryPointTierType enum.
	// Tiering policy specifies the criteria to move RP to the target tier.
	TieringPolicy map[string]TieringPolicyResponse `pulumi:"tieringPolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
}

// Azure Recovery Services Vault specific protection intent item.
type AzureRecoveryServiceVaultProtectionIntent struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'RecoveryServiceVaultItem'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// Azure Recovery Services Vault specific protection intent item.
type AzureRecoveryServiceVaultProtectionIntentResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'RecoveryServiceVaultItem'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// IaaS VM specific backup protection intent item.
type AzureResourceProtectionIntent struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureResourceItem'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// IaaS VM specific backup protection intent item.
type AzureResourceProtectionIntentResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureResourceItem'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// Container for SQL workloads under SQL Availability Group.
type AzureSQLAGWorkloadContainerProtectionContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'SQLAGWorkLoadContainer'.
	ContainerType string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// Container for SQL workloads under SQL Availability Group.
type AzureSQLAGWorkloadContainerProtectionContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'SQLAGWorkLoadContainer'.
	ContainerType string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// Azure Sql workload-specific container.
type AzureSqlContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureSqlContainer'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// Azure Sql workload-specific container.
type AzureSqlContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureSqlContainer'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// Azure SQL workload-specific backup item.
type AzureSqlProtectedItem struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureSqlProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
	ProtectedItemDataId *string `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'Microsoft.Sql/servers/databases'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of the backed up item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Additional information on Azure Sql specific protected item.
type AzureSqlProtectedItemExtendedInfo struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// State of the backup policy associated with this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Additional information on Azure Sql specific protected item.
type AzureSqlProtectedItemExtendedInfoResponse struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// State of the backup policy associated with this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Azure SQL workload-specific backup item.
type AzureSqlProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureSqlProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
	ProtectedItemDataId *string `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'Microsoft.Sql/servers/databases'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of the backed up item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Azure SQL workload-specific backup policy.
type AzureSqlProtectionPolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureSql'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy details.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
}

// Azure SQL workload-specific backup policy.
type AzureSqlProtectionPolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureSql'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy details.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
}

// Azure Storage Account workload-specific container.
type AzureStorageContainer struct {
	// Whether storage account lock is to be acquired for this container or not.
	AcquireStorageAccountLock *string `pulumi:"acquireStorageAccountLock"`
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'StorageContainer'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of items backed up in this container.
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Storage account version.
	StorageAccountVersion *string `pulumi:"storageAccountVersion"`
}

// Azure Storage Account workload-specific container.
type AzureStorageContainerResponse struct {
	// Whether storage account lock is to be acquired for this container or not.
	AcquireStorageAccountLock *string `pulumi:"acquireStorageAccountLock"`
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'StorageContainer'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of items backed up in this container.
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Storage account version.
	StorageAccountVersion *string `pulumi:"storageAccountVersion"`
}

// Create network mappings input properties/behavior specific to Azure to Azure Network mapping.
type AzureToAzureCreateNetworkMappingInput struct {
	// The instance type.
	// Expected value is 'AzureToAzure'.
	InstanceType string `pulumi:"instanceType"`
	// The primary azure vnet Id.
	PrimaryNetworkId string `pulumi:"primaryNetworkId"`
}

// A2A Network Mapping fabric specific settings.
type AzureToAzureNetworkMappingSettingsResponse struct {
	// Gets the Instance type.
	// Expected value is 'AzureToAzure'.
	InstanceType string `pulumi:"instanceType"`
	// The primary fabric location.
	PrimaryFabricLocation *string `pulumi:"primaryFabricLocation"`
	// The recovery fabric location.
	RecoveryFabricLocation *string `pulumi:"recoveryFabricLocation"`
}

// Azure to Azure VM synced configuration details.
type AzureToAzureVmSyncedConfigDetailsResponse struct {
	// The Azure VM input endpoints.
	InputEndpoints []InputEndpointResponse `pulumi:"inputEndpoints"`
	// The Azure VM tags.
	Tags map[string]string `pulumi:"tags"`
}

// Container for SQL workloads under Azure Virtual Machines.
type AzureVMAppContainerProtectionContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'VMAppContainer'.
	ContainerType string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// Container for SQL workloads under Azure Virtual Machines.
type AzureVMAppContainerProtectionContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'VMAppContainer'.
	ContainerType string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// Disk details for E2A provider.
type AzureVmDiskDetailsResponse struct {
	// The custom target Azure disk name.
	CustomTargetDiskName *string `pulumi:"customTargetDiskName"`
	// The DiskEncryptionSet ARM ID.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The disk resource id.
	DiskId *string `pulumi:"diskId"`
	// Ordinal\LunId of the disk for the Azure VM.
	LunId *string `pulumi:"lunId"`
	// Max side in MB.
	MaxSizeMB *string `pulumi:"maxSizeMB"`
	// Blob uri of the Azure disk.
	TargetDiskLocation *string `pulumi:"targetDiskLocation"`
	// The target Azure disk name.
	TargetDiskName *string `pulumi:"targetDiskName"`
	// The VHD id.
	VhdId *string `pulumi:"vhdId"`
	// VHD name.
	VhdName *string `pulumi:"vhdName"`
	// VHD type.
	VhdType *string `pulumi:"vhdType"`
}

// Azure VM workload-specific protected item.
type AzureVmWorkloadProtectedItem struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Additional information on Azure Workload for SQL specific backup item.
type AzureVmWorkloadProtectedItemExtendedInfo struct {
	// The latest backup copy available for this backup item in archive tier
	NewestRecoveryPointInArchive *string `pulumi:"newestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item across all tiers.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// The oldest backup copy available for this backup item in archive tier
	OldestRecoveryPointInArchive *string `pulumi:"oldestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item in vault tier
	OldestRecoveryPointInVault *string `pulumi:"oldestRecoveryPointInVault"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Indicates consistency of policy object and policy applied to this backup item.
	RecoveryModel *string `pulumi:"recoveryModel"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Additional information on Azure Workload for SQL specific backup item.
type AzureVmWorkloadProtectedItemExtendedInfoResponse struct {
	// The latest backup copy available for this backup item in archive tier
	NewestRecoveryPointInArchive *string `pulumi:"newestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item across all tiers.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// The oldest backup copy available for this backup item in archive tier
	OldestRecoveryPointInArchive *string `pulumi:"oldestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item in vault tier
	OldestRecoveryPointInVault *string `pulumi:"oldestRecoveryPointInVault"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Indicates consistency of policy object and policy applied to this backup item.
	RecoveryModel *string `pulumi:"recoveryModel"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Azure VM workload-specific protected item.
type AzureVmWorkloadProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Error details in last backup
	LastBackupErrorDetail *ErrorDetailResponse `pulumi:"lastBackupErrorDetail"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Azure VM (Mercury) workload-specific backup policy.
type AzureVmWorkloadProtectionPolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureWorkload'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Fix the policy inconsistency
	MakePolicyConsistent *bool `pulumi:"makePolicyConsistent"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Common settings for the backup management
	Settings *Settings `pulumi:"settings"`
	// List of sub-protection policies which includes schedule and retention
	SubProtectionPolicy []SubProtectionPolicy `pulumi:"subProtectionPolicy"`
	// Type of workload for the backup management
	WorkLoadType *string `pulumi:"workLoadType"`
}

// Azure VM (Mercury) workload-specific backup policy.
type AzureVmWorkloadProtectionPolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureWorkload'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Fix the policy inconsistency
	MakePolicyConsistent *bool `pulumi:"makePolicyConsistent"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Common settings for the backup management
	Settings *SettingsResponse `pulumi:"settings"`
	// List of sub-protection policies which includes schedule and retention
	SubProtectionPolicy []SubProtectionPolicyResponse `pulumi:"subProtectionPolicy"`
	// Type of workload for the backup management
	WorkLoadType *string `pulumi:"workLoadType"`
}

// Azure VM workload-specific protected item representing SAP ASE Database.
type AzureVmWorkloadSAPAseDatabaseProtectedItem struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPAseDatabase'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Azure VM workload-specific protected item representing SAP ASE Database.
type AzureVmWorkloadSAPAseDatabaseProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Error details in last backup
	LastBackupErrorDetail *ErrorDetailResponse `pulumi:"lastBackupErrorDetail"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPAseDatabase'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Azure VM workload-specific protected item representing SAP HANA Database.
type AzureVmWorkloadSAPHanaDatabaseProtectedItem struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPHanaDatabase'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Azure VM workload-specific protected item representing SAP HANA Database.
type AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Error details in last backup
	LastBackupErrorDetail *ErrorDetailResponse `pulumi:"lastBackupErrorDetail"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPHanaDatabase'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Azure VM workload-specific protected item representing SQL Database.
type AzureVmWorkloadSQLDatabaseProtectedItem struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSQLDatabase'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Azure VM workload-specific protected item representing SQL Database.
type AzureVmWorkloadSQLDatabaseProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Error details in last backup
	LastBackupErrorDetail *ErrorDetailResponse `pulumi:"lastBackupErrorDetail"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSQLDatabase'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Azure Recovery Services Vault specific protection intent item.
type AzureWorkloadAutoProtectionIntent struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadAutoProtectionIntent'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// Azure Recovery Services Vault specific protection intent item.
type AzureWorkloadAutoProtectionIntentResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadAutoProtectionIntent'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// Container for the workloads running inside Azure Compute or Classic Compute.
type AzureWorkloadContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureWorkloadContainer'.
	ContainerType string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// Azure workload specific protection intent item.
type AzureWorkloadContainerAutoProtectionIntent struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadContainerAutoProtectionIntent'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// Azure workload specific protection intent item.
type AzureWorkloadContainerAutoProtectionIntentResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadContainerAutoProtectionIntent'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// Extended information of the container.
type AzureWorkloadContainerExtendedInfo struct {
	// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
	HostServerName *string `pulumi:"hostServerName"`
	// Inquiry Status for the container.
	InquiryInfo *InquiryInfo `pulumi:"inquiryInfo"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfo `pulumi:"nodesList"`
}

// Extended information of the container.
type AzureWorkloadContainerExtendedInfoResponse struct {
	// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
	HostServerName *string `pulumi:"hostServerName"`
	// Inquiry Status for the container.
	InquiryInfo *InquiryInfoResponse `pulumi:"inquiryInfo"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfoResponse `pulumi:"nodesList"`
}

// Container for the workloads running inside Azure Compute or Classic Compute.
type AzureWorkloadContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureWorkloadContainer'.
	ContainerType string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// Azure Workload SQL Auto Protection intent item.
type AzureWorkloadSQLAutoProtectionIntent struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadSQLAutoProtectionIntent'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload item type of the item for which intent is to be set
	WorkloadItemType *string `pulumi:"workloadItemType"`
}

// Azure Workload SQL Auto Protection intent item.
type AzureWorkloadSQLAutoProtectionIntentResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadSQLAutoProtectionIntent'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload item type of the item for which intent is to be set
	WorkloadItemType *string `pulumi:"workloadItemType"`
}

// The details of the identity used for CMK
type CmkKekIdentity struct {
	// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
	UseSystemAssignedIdentity *bool `pulumi:"useSystemAssignedIdentity"`
	// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
	UserAssignedIdentity *string `pulumi:"userAssignedIdentity"`
}

// CmkKekIdentityInput is an input type that accepts CmkKekIdentityArgs and CmkKekIdentityOutput values.
// You can construct a concrete instance of `CmkKekIdentityInput` via:
//
//	CmkKekIdentityArgs{...}
type CmkKekIdentityInput interface {
	pulumi.Input

	ToCmkKekIdentityOutput() CmkKekIdentityOutput
	ToCmkKekIdentityOutputWithContext(context.Context) CmkKekIdentityOutput
}

// The details of the identity used for CMK
type CmkKekIdentityArgs struct {
	// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
	UseSystemAssignedIdentity pulumi.BoolPtrInput `pulumi:"useSystemAssignedIdentity"`
	// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
	UserAssignedIdentity pulumi.StringPtrInput `pulumi:"userAssignedIdentity"`
}

func (CmkKekIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkKekIdentity)(nil)).Elem()
}

func (i CmkKekIdentityArgs) ToCmkKekIdentityOutput() CmkKekIdentityOutput {
	return i.ToCmkKekIdentityOutputWithContext(context.Background())
}

func (i CmkKekIdentityArgs) ToCmkKekIdentityOutputWithContext(ctx context.Context) CmkKekIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CmkKekIdentityOutput)
}

func (i CmkKekIdentityArgs) ToCmkKekIdentityPtrOutput() CmkKekIdentityPtrOutput {
	return i.ToCmkKekIdentityPtrOutputWithContext(context.Background())
}

func (i CmkKekIdentityArgs) ToCmkKekIdentityPtrOutputWithContext(ctx context.Context) CmkKekIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CmkKekIdentityOutput).ToCmkKekIdentityPtrOutputWithContext(ctx)
}

// CmkKekIdentityPtrInput is an input type that accepts CmkKekIdentityArgs, CmkKekIdentityPtr and CmkKekIdentityPtrOutput values.
// You can construct a concrete instance of `CmkKekIdentityPtrInput` via:
//
//	        CmkKekIdentityArgs{...}
//
//	or:
//
//	        nil
type CmkKekIdentityPtrInput interface {
	pulumi.Input

	ToCmkKekIdentityPtrOutput() CmkKekIdentityPtrOutput
	ToCmkKekIdentityPtrOutputWithContext(context.Context) CmkKekIdentityPtrOutput
}

type cmkKekIdentityPtrType CmkKekIdentityArgs

func CmkKekIdentityPtr(v *CmkKekIdentityArgs) CmkKekIdentityPtrInput {
	return (*cmkKekIdentityPtrType)(v)
}

func (*cmkKekIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkKekIdentity)(nil)).Elem()
}

func (i *cmkKekIdentityPtrType) ToCmkKekIdentityPtrOutput() CmkKekIdentityPtrOutput {
	return i.ToCmkKekIdentityPtrOutputWithContext(context.Background())
}

func (i *cmkKekIdentityPtrType) ToCmkKekIdentityPtrOutputWithContext(ctx context.Context) CmkKekIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CmkKekIdentityPtrOutput)
}

// The details of the identity used for CMK
type CmkKekIdentityOutput struct{ *pulumi.OutputState }

func (CmkKekIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkKekIdentity)(nil)).Elem()
}

func (o CmkKekIdentityOutput) ToCmkKekIdentityOutput() CmkKekIdentityOutput {
	return o
}

func (o CmkKekIdentityOutput) ToCmkKekIdentityOutputWithContext(ctx context.Context) CmkKekIdentityOutput {
	return o
}

func (o CmkKekIdentityOutput) ToCmkKekIdentityPtrOutput() CmkKekIdentityPtrOutput {
	return o.ToCmkKekIdentityPtrOutputWithContext(context.Background())
}

func (o CmkKekIdentityOutput) ToCmkKekIdentityPtrOutputWithContext(ctx context.Context) CmkKekIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CmkKekIdentity) *CmkKekIdentity {
		return &v
	}).(CmkKekIdentityPtrOutput)
}

// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
func (o CmkKekIdentityOutput) UseSystemAssignedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CmkKekIdentity) *bool { return v.UseSystemAssignedIdentity }).(pulumi.BoolPtrOutput)
}

// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
func (o CmkKekIdentityOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CmkKekIdentity) *string { return v.UserAssignedIdentity }).(pulumi.StringPtrOutput)
}

type CmkKekIdentityPtrOutput struct{ *pulumi.OutputState }

func (CmkKekIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkKekIdentity)(nil)).Elem()
}

func (o CmkKekIdentityPtrOutput) ToCmkKekIdentityPtrOutput() CmkKekIdentityPtrOutput {
	return o
}

func (o CmkKekIdentityPtrOutput) ToCmkKekIdentityPtrOutputWithContext(ctx context.Context) CmkKekIdentityPtrOutput {
	return o
}

func (o CmkKekIdentityPtrOutput) Elem() CmkKekIdentityOutput {
	return o.ApplyT(func(v *CmkKekIdentity) CmkKekIdentity {
		if v != nil {
			return *v
		}
		var ret CmkKekIdentity
		return ret
	}).(CmkKekIdentityOutput)
}

// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
func (o CmkKekIdentityPtrOutput) UseSystemAssignedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CmkKekIdentity) *bool {
		if v == nil {
			return nil
		}
		return v.UseSystemAssignedIdentity
	}).(pulumi.BoolPtrOutput)
}

// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
func (o CmkKekIdentityPtrOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CmkKekIdentity) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentity
	}).(pulumi.StringPtrOutput)
}

// The details of the identity used for CMK
type CmkKekIdentityResponse struct {
	// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
	UseSystemAssignedIdentity *bool `pulumi:"useSystemAssignedIdentity"`
	// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
	UserAssignedIdentity *string `pulumi:"userAssignedIdentity"`
}

// The details of the identity used for CMK
type CmkKekIdentityResponseOutput struct{ *pulumi.OutputState }

func (CmkKekIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkKekIdentityResponse)(nil)).Elem()
}

func (o CmkKekIdentityResponseOutput) ToCmkKekIdentityResponseOutput() CmkKekIdentityResponseOutput {
	return o
}

func (o CmkKekIdentityResponseOutput) ToCmkKekIdentityResponseOutputWithContext(ctx context.Context) CmkKekIdentityResponseOutput {
	return o
}

// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
func (o CmkKekIdentityResponseOutput) UseSystemAssignedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CmkKekIdentityResponse) *bool { return v.UseSystemAssignedIdentity }).(pulumi.BoolPtrOutput)
}

// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
func (o CmkKekIdentityResponseOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CmkKekIdentityResponse) *string { return v.UserAssignedIdentity }).(pulumi.StringPtrOutput)
}

type CmkKekIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (CmkKekIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkKekIdentityResponse)(nil)).Elem()
}

func (o CmkKekIdentityResponsePtrOutput) ToCmkKekIdentityResponsePtrOutput() CmkKekIdentityResponsePtrOutput {
	return o
}

func (o CmkKekIdentityResponsePtrOutput) ToCmkKekIdentityResponsePtrOutputWithContext(ctx context.Context) CmkKekIdentityResponsePtrOutput {
	return o
}

func (o CmkKekIdentityResponsePtrOutput) Elem() CmkKekIdentityResponseOutput {
	return o.ApplyT(func(v *CmkKekIdentityResponse) CmkKekIdentityResponse {
		if v != nil {
			return *v
		}
		var ret CmkKekIdentityResponse
		return ret
	}).(CmkKekIdentityResponseOutput)
}

// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
func (o CmkKekIdentityResponsePtrOutput) UseSystemAssignedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CmkKekIdentityResponse) *bool {
		if v == nil {
			return nil
		}
		return v.UseSystemAssignedIdentity
	}).(pulumi.BoolPtrOutput)
}

// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
func (o CmkKekIdentityResponsePtrOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CmkKekIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentity
	}).(pulumi.StringPtrOutput)
}

// The properties of the Key Vault which hosts CMK
type CmkKeyVaultProperties struct {
	// The key uri of the Customer Managed Key
	KeyUri *string `pulumi:"keyUri"`
}

// CmkKeyVaultPropertiesInput is an input type that accepts CmkKeyVaultPropertiesArgs and CmkKeyVaultPropertiesOutput values.
// You can construct a concrete instance of `CmkKeyVaultPropertiesInput` via:
//
//	CmkKeyVaultPropertiesArgs{...}
type CmkKeyVaultPropertiesInput interface {
	pulumi.Input

	ToCmkKeyVaultPropertiesOutput() CmkKeyVaultPropertiesOutput
	ToCmkKeyVaultPropertiesOutputWithContext(context.Context) CmkKeyVaultPropertiesOutput
}

// The properties of the Key Vault which hosts CMK
type CmkKeyVaultPropertiesArgs struct {
	// The key uri of the Customer Managed Key
	KeyUri pulumi.StringPtrInput `pulumi:"keyUri"`
}

func (CmkKeyVaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkKeyVaultProperties)(nil)).Elem()
}

func (i CmkKeyVaultPropertiesArgs) ToCmkKeyVaultPropertiesOutput() CmkKeyVaultPropertiesOutput {
	return i.ToCmkKeyVaultPropertiesOutputWithContext(context.Background())
}

func (i CmkKeyVaultPropertiesArgs) ToCmkKeyVaultPropertiesOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CmkKeyVaultPropertiesOutput)
}

func (i CmkKeyVaultPropertiesArgs) ToCmkKeyVaultPropertiesPtrOutput() CmkKeyVaultPropertiesPtrOutput {
	return i.ToCmkKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i CmkKeyVaultPropertiesArgs) ToCmkKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CmkKeyVaultPropertiesOutput).ToCmkKeyVaultPropertiesPtrOutputWithContext(ctx)
}

// CmkKeyVaultPropertiesPtrInput is an input type that accepts CmkKeyVaultPropertiesArgs, CmkKeyVaultPropertiesPtr and CmkKeyVaultPropertiesPtrOutput values.
// You can construct a concrete instance of `CmkKeyVaultPropertiesPtrInput` via:
//
//	        CmkKeyVaultPropertiesArgs{...}
//
//	or:
//
//	        nil
type CmkKeyVaultPropertiesPtrInput interface {
	pulumi.Input

	ToCmkKeyVaultPropertiesPtrOutput() CmkKeyVaultPropertiesPtrOutput
	ToCmkKeyVaultPropertiesPtrOutputWithContext(context.Context) CmkKeyVaultPropertiesPtrOutput
}

type cmkKeyVaultPropertiesPtrType CmkKeyVaultPropertiesArgs

func CmkKeyVaultPropertiesPtr(v *CmkKeyVaultPropertiesArgs) CmkKeyVaultPropertiesPtrInput {
	return (*cmkKeyVaultPropertiesPtrType)(v)
}

func (*cmkKeyVaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkKeyVaultProperties)(nil)).Elem()
}

func (i *cmkKeyVaultPropertiesPtrType) ToCmkKeyVaultPropertiesPtrOutput() CmkKeyVaultPropertiesPtrOutput {
	return i.ToCmkKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *cmkKeyVaultPropertiesPtrType) ToCmkKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CmkKeyVaultPropertiesPtrOutput)
}

// The properties of the Key Vault which hosts CMK
type CmkKeyVaultPropertiesOutput struct{ *pulumi.OutputState }

func (CmkKeyVaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkKeyVaultProperties)(nil)).Elem()
}

func (o CmkKeyVaultPropertiesOutput) ToCmkKeyVaultPropertiesOutput() CmkKeyVaultPropertiesOutput {
	return o
}

func (o CmkKeyVaultPropertiesOutput) ToCmkKeyVaultPropertiesOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesOutput {
	return o
}

func (o CmkKeyVaultPropertiesOutput) ToCmkKeyVaultPropertiesPtrOutput() CmkKeyVaultPropertiesPtrOutput {
	return o.ToCmkKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o CmkKeyVaultPropertiesOutput) ToCmkKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CmkKeyVaultProperties) *CmkKeyVaultProperties {
		return &v
	}).(CmkKeyVaultPropertiesPtrOutput)
}

// The key uri of the Customer Managed Key
func (o CmkKeyVaultPropertiesOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CmkKeyVaultProperties) *string { return v.KeyUri }).(pulumi.StringPtrOutput)
}

type CmkKeyVaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CmkKeyVaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkKeyVaultProperties)(nil)).Elem()
}

func (o CmkKeyVaultPropertiesPtrOutput) ToCmkKeyVaultPropertiesPtrOutput() CmkKeyVaultPropertiesPtrOutput {
	return o
}

func (o CmkKeyVaultPropertiesPtrOutput) ToCmkKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesPtrOutput {
	return o
}

func (o CmkKeyVaultPropertiesPtrOutput) Elem() CmkKeyVaultPropertiesOutput {
	return o.ApplyT(func(v *CmkKeyVaultProperties) CmkKeyVaultProperties {
		if v != nil {
			return *v
		}
		var ret CmkKeyVaultProperties
		return ret
	}).(CmkKeyVaultPropertiesOutput)
}

// The key uri of the Customer Managed Key
func (o CmkKeyVaultPropertiesPtrOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CmkKeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyUri
	}).(pulumi.StringPtrOutput)
}

// The properties of the Key Vault which hosts CMK
type CmkKeyVaultPropertiesResponse struct {
	// The key uri of the Customer Managed Key
	KeyUri *string `pulumi:"keyUri"`
}

// The properties of the Key Vault which hosts CMK
type CmkKeyVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CmkKeyVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkKeyVaultPropertiesResponse)(nil)).Elem()
}

func (o CmkKeyVaultPropertiesResponseOutput) ToCmkKeyVaultPropertiesResponseOutput() CmkKeyVaultPropertiesResponseOutput {
	return o
}

func (o CmkKeyVaultPropertiesResponseOutput) ToCmkKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesResponseOutput {
	return o
}

// The key uri of the Customer Managed Key
func (o CmkKeyVaultPropertiesResponseOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CmkKeyVaultPropertiesResponse) *string { return v.KeyUri }).(pulumi.StringPtrOutput)
}

type CmkKeyVaultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CmkKeyVaultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkKeyVaultPropertiesResponse)(nil)).Elem()
}

func (o CmkKeyVaultPropertiesResponsePtrOutput) ToCmkKeyVaultPropertiesResponsePtrOutput() CmkKeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o CmkKeyVaultPropertiesResponsePtrOutput) ToCmkKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o CmkKeyVaultPropertiesResponsePtrOutput) Elem() CmkKeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v *CmkKeyVaultPropertiesResponse) CmkKeyVaultPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret CmkKeyVaultPropertiesResponse
		return ret
	}).(CmkKeyVaultPropertiesResponseOutput)
}

// The key uri of the Customer Managed Key
func (o CmkKeyVaultPropertiesResponsePtrOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CmkKeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyUri
	}).(pulumi.StringPtrOutput)
}

// Container identity information
type ContainerIdentityInfo struct {
	// Protection container identity - AAD Tenant
	AadTenantId *string `pulumi:"aadTenantId"`
	// Protection container identity - Audience
	Audience *string `pulumi:"audience"`
	// Protection container identity - AAD Service Principal
	ServicePrincipalClientId *string `pulumi:"servicePrincipalClientId"`
	// Unique name of the container
	UniqueName *string `pulumi:"uniqueName"`
}

// Container identity information
type ContainerIdentityInfoResponse struct {
	// Protection container identity - AAD Tenant
	AadTenantId *string `pulumi:"aadTenantId"`
	// Protection container identity - Audience
	Audience *string `pulumi:"audience"`
	// Protection container identity - AAD Service Principal
	ServicePrincipalClientId *string `pulumi:"servicePrincipalClientId"`
	// Unique name of the container
	UniqueName *string `pulumi:"uniqueName"`
}

// Common input details for network mapping operation.
type CreateNetworkMappingInputProperties struct {
	// Fabric specific input properties.
	FabricSpecificDetails interface{} `pulumi:"fabricSpecificDetails"`
	// Recovery fabric Name.
	RecoveryFabricName *string `pulumi:"recoveryFabricName"`
	// Recovery network Id.
	RecoveryNetworkId string `pulumi:"recoveryNetworkId"`
}

// CreateNetworkMappingInputPropertiesInput is an input type that accepts CreateNetworkMappingInputPropertiesArgs and CreateNetworkMappingInputPropertiesOutput values.
// You can construct a concrete instance of `CreateNetworkMappingInputPropertiesInput` via:
//
//	CreateNetworkMappingInputPropertiesArgs{...}
type CreateNetworkMappingInputPropertiesInput interface {
	pulumi.Input

	ToCreateNetworkMappingInputPropertiesOutput() CreateNetworkMappingInputPropertiesOutput
	ToCreateNetworkMappingInputPropertiesOutputWithContext(context.Context) CreateNetworkMappingInputPropertiesOutput
}

// Common input details for network mapping operation.
type CreateNetworkMappingInputPropertiesArgs struct {
	// Fabric specific input properties.
	FabricSpecificDetails pulumi.Input `pulumi:"fabricSpecificDetails"`
	// Recovery fabric Name.
	RecoveryFabricName pulumi.StringPtrInput `pulumi:"recoveryFabricName"`
	// Recovery network Id.
	RecoveryNetworkId pulumi.StringInput `pulumi:"recoveryNetworkId"`
}

func (CreateNetworkMappingInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateNetworkMappingInputProperties)(nil)).Elem()
}

func (i CreateNetworkMappingInputPropertiesArgs) ToCreateNetworkMappingInputPropertiesOutput() CreateNetworkMappingInputPropertiesOutput {
	return i.ToCreateNetworkMappingInputPropertiesOutputWithContext(context.Background())
}

func (i CreateNetworkMappingInputPropertiesArgs) ToCreateNetworkMappingInputPropertiesOutputWithContext(ctx context.Context) CreateNetworkMappingInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateNetworkMappingInputPropertiesOutput)
}

// Common input details for network mapping operation.
type CreateNetworkMappingInputPropertiesOutput struct{ *pulumi.OutputState }

func (CreateNetworkMappingInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateNetworkMappingInputProperties)(nil)).Elem()
}

func (o CreateNetworkMappingInputPropertiesOutput) ToCreateNetworkMappingInputPropertiesOutput() CreateNetworkMappingInputPropertiesOutput {
	return o
}

func (o CreateNetworkMappingInputPropertiesOutput) ToCreateNetworkMappingInputPropertiesOutputWithContext(ctx context.Context) CreateNetworkMappingInputPropertiesOutput {
	return o
}

// Fabric specific input properties.
func (o CreateNetworkMappingInputPropertiesOutput) FabricSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v CreateNetworkMappingInputProperties) interface{} { return v.FabricSpecificDetails }).(pulumi.AnyOutput)
}

// Recovery fabric Name.
func (o CreateNetworkMappingInputPropertiesOutput) RecoveryFabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CreateNetworkMappingInputProperties) *string { return v.RecoveryFabricName }).(pulumi.StringPtrOutput)
}

// Recovery network Id.
func (o CreateNetworkMappingInputPropertiesOutput) RecoveryNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v CreateNetworkMappingInputProperties) string { return v.RecoveryNetworkId }).(pulumi.StringOutput)
}

// Policy creation properties.
type CreatePolicyInputProperties struct {
	// The ReplicationProviderSettings.
	ProviderSpecificInput interface{} `pulumi:"providerSpecificInput"`
}

// CreatePolicyInputPropertiesInput is an input type that accepts CreatePolicyInputPropertiesArgs and CreatePolicyInputPropertiesOutput values.
// You can construct a concrete instance of `CreatePolicyInputPropertiesInput` via:
//
//	CreatePolicyInputPropertiesArgs{...}
type CreatePolicyInputPropertiesInput interface {
	pulumi.Input

	ToCreatePolicyInputPropertiesOutput() CreatePolicyInputPropertiesOutput
	ToCreatePolicyInputPropertiesOutputWithContext(context.Context) CreatePolicyInputPropertiesOutput
}

// Policy creation properties.
type CreatePolicyInputPropertiesArgs struct {
	// The ReplicationProviderSettings.
	ProviderSpecificInput pulumi.Input `pulumi:"providerSpecificInput"`
}

func (CreatePolicyInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreatePolicyInputProperties)(nil)).Elem()
}

func (i CreatePolicyInputPropertiesArgs) ToCreatePolicyInputPropertiesOutput() CreatePolicyInputPropertiesOutput {
	return i.ToCreatePolicyInputPropertiesOutputWithContext(context.Background())
}

func (i CreatePolicyInputPropertiesArgs) ToCreatePolicyInputPropertiesOutputWithContext(ctx context.Context) CreatePolicyInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreatePolicyInputPropertiesOutput)
}

func (i CreatePolicyInputPropertiesArgs) ToCreatePolicyInputPropertiesPtrOutput() CreatePolicyInputPropertiesPtrOutput {
	return i.ToCreatePolicyInputPropertiesPtrOutputWithContext(context.Background())
}

func (i CreatePolicyInputPropertiesArgs) ToCreatePolicyInputPropertiesPtrOutputWithContext(ctx context.Context) CreatePolicyInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreatePolicyInputPropertiesOutput).ToCreatePolicyInputPropertiesPtrOutputWithContext(ctx)
}

// CreatePolicyInputPropertiesPtrInput is an input type that accepts CreatePolicyInputPropertiesArgs, CreatePolicyInputPropertiesPtr and CreatePolicyInputPropertiesPtrOutput values.
// You can construct a concrete instance of `CreatePolicyInputPropertiesPtrInput` via:
//
//	        CreatePolicyInputPropertiesArgs{...}
//
//	or:
//
//	        nil
type CreatePolicyInputPropertiesPtrInput interface {
	pulumi.Input

	ToCreatePolicyInputPropertiesPtrOutput() CreatePolicyInputPropertiesPtrOutput
	ToCreatePolicyInputPropertiesPtrOutputWithContext(context.Context) CreatePolicyInputPropertiesPtrOutput
}

type createPolicyInputPropertiesPtrType CreatePolicyInputPropertiesArgs

func CreatePolicyInputPropertiesPtr(v *CreatePolicyInputPropertiesArgs) CreatePolicyInputPropertiesPtrInput {
	return (*createPolicyInputPropertiesPtrType)(v)
}

func (*createPolicyInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreatePolicyInputProperties)(nil)).Elem()
}

func (i *createPolicyInputPropertiesPtrType) ToCreatePolicyInputPropertiesPtrOutput() CreatePolicyInputPropertiesPtrOutput {
	return i.ToCreatePolicyInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *createPolicyInputPropertiesPtrType) ToCreatePolicyInputPropertiesPtrOutputWithContext(ctx context.Context) CreatePolicyInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreatePolicyInputPropertiesPtrOutput)
}

// Policy creation properties.
type CreatePolicyInputPropertiesOutput struct{ *pulumi.OutputState }

func (CreatePolicyInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreatePolicyInputProperties)(nil)).Elem()
}

func (o CreatePolicyInputPropertiesOutput) ToCreatePolicyInputPropertiesOutput() CreatePolicyInputPropertiesOutput {
	return o
}

func (o CreatePolicyInputPropertiesOutput) ToCreatePolicyInputPropertiesOutputWithContext(ctx context.Context) CreatePolicyInputPropertiesOutput {
	return o
}

func (o CreatePolicyInputPropertiesOutput) ToCreatePolicyInputPropertiesPtrOutput() CreatePolicyInputPropertiesPtrOutput {
	return o.ToCreatePolicyInputPropertiesPtrOutputWithContext(context.Background())
}

func (o CreatePolicyInputPropertiesOutput) ToCreatePolicyInputPropertiesPtrOutputWithContext(ctx context.Context) CreatePolicyInputPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CreatePolicyInputProperties) *CreatePolicyInputProperties {
		return &v
	}).(CreatePolicyInputPropertiesPtrOutput)
}

// The ReplicationProviderSettings.
func (o CreatePolicyInputPropertiesOutput) ProviderSpecificInput() pulumi.AnyOutput {
	return o.ApplyT(func(v CreatePolicyInputProperties) interface{} { return v.ProviderSpecificInput }).(pulumi.AnyOutput)
}

type CreatePolicyInputPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CreatePolicyInputPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreatePolicyInputProperties)(nil)).Elem()
}

func (o CreatePolicyInputPropertiesPtrOutput) ToCreatePolicyInputPropertiesPtrOutput() CreatePolicyInputPropertiesPtrOutput {
	return o
}

func (o CreatePolicyInputPropertiesPtrOutput) ToCreatePolicyInputPropertiesPtrOutputWithContext(ctx context.Context) CreatePolicyInputPropertiesPtrOutput {
	return o
}

func (o CreatePolicyInputPropertiesPtrOutput) Elem() CreatePolicyInputPropertiesOutput {
	return o.ApplyT(func(v *CreatePolicyInputProperties) CreatePolicyInputProperties {
		if v != nil {
			return *v
		}
		var ret CreatePolicyInputProperties
		return ret
	}).(CreatePolicyInputPropertiesOutput)
}

// The ReplicationProviderSettings.
func (o CreatePolicyInputPropertiesPtrOutput) ProviderSpecificInput() pulumi.AnyOutput {
	return o.ApplyT(func(v *CreatePolicyInputProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.ProviderSpecificInput
	}).(pulumi.AnyOutput)
}

// Configure pairing input properties.
type CreateProtectionContainerMappingInputProperties struct {
	// Applicable policy.
	PolicyId *string `pulumi:"policyId"`
	// Provider specific input for pairing.
	ProviderSpecificInput interface{} `pulumi:"providerSpecificInput"`
	// The target unique protection container name.
	TargetProtectionContainerId *string `pulumi:"targetProtectionContainerId"`
}

// CreateProtectionContainerMappingInputPropertiesInput is an input type that accepts CreateProtectionContainerMappingInputPropertiesArgs and CreateProtectionContainerMappingInputPropertiesOutput values.
// You can construct a concrete instance of `CreateProtectionContainerMappingInputPropertiesInput` via:
//
//	CreateProtectionContainerMappingInputPropertiesArgs{...}
type CreateProtectionContainerMappingInputPropertiesInput interface {
	pulumi.Input

	ToCreateProtectionContainerMappingInputPropertiesOutput() CreateProtectionContainerMappingInputPropertiesOutput
	ToCreateProtectionContainerMappingInputPropertiesOutputWithContext(context.Context) CreateProtectionContainerMappingInputPropertiesOutput
}

// Configure pairing input properties.
type CreateProtectionContainerMappingInputPropertiesArgs struct {
	// Applicable policy.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Provider specific input for pairing.
	ProviderSpecificInput pulumi.Input `pulumi:"providerSpecificInput"`
	// The target unique protection container name.
	TargetProtectionContainerId pulumi.StringPtrInput `pulumi:"targetProtectionContainerId"`
}

func (CreateProtectionContainerMappingInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateProtectionContainerMappingInputProperties)(nil)).Elem()
}

func (i CreateProtectionContainerMappingInputPropertiesArgs) ToCreateProtectionContainerMappingInputPropertiesOutput() CreateProtectionContainerMappingInputPropertiesOutput {
	return i.ToCreateProtectionContainerMappingInputPropertiesOutputWithContext(context.Background())
}

func (i CreateProtectionContainerMappingInputPropertiesArgs) ToCreateProtectionContainerMappingInputPropertiesOutputWithContext(ctx context.Context) CreateProtectionContainerMappingInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateProtectionContainerMappingInputPropertiesOutput)
}

func (i CreateProtectionContainerMappingInputPropertiesArgs) ToCreateProtectionContainerMappingInputPropertiesPtrOutput() CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return i.ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i CreateProtectionContainerMappingInputPropertiesArgs) ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(ctx context.Context) CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateProtectionContainerMappingInputPropertiesOutput).ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(ctx)
}

// CreateProtectionContainerMappingInputPropertiesPtrInput is an input type that accepts CreateProtectionContainerMappingInputPropertiesArgs, CreateProtectionContainerMappingInputPropertiesPtr and CreateProtectionContainerMappingInputPropertiesPtrOutput values.
// You can construct a concrete instance of `CreateProtectionContainerMappingInputPropertiesPtrInput` via:
//
//	        CreateProtectionContainerMappingInputPropertiesArgs{...}
//
//	or:
//
//	        nil
type CreateProtectionContainerMappingInputPropertiesPtrInput interface {
	pulumi.Input

	ToCreateProtectionContainerMappingInputPropertiesPtrOutput() CreateProtectionContainerMappingInputPropertiesPtrOutput
	ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(context.Context) CreateProtectionContainerMappingInputPropertiesPtrOutput
}

type createProtectionContainerMappingInputPropertiesPtrType CreateProtectionContainerMappingInputPropertiesArgs

func CreateProtectionContainerMappingInputPropertiesPtr(v *CreateProtectionContainerMappingInputPropertiesArgs) CreateProtectionContainerMappingInputPropertiesPtrInput {
	return (*createProtectionContainerMappingInputPropertiesPtrType)(v)
}

func (*createProtectionContainerMappingInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateProtectionContainerMappingInputProperties)(nil)).Elem()
}

func (i *createProtectionContainerMappingInputPropertiesPtrType) ToCreateProtectionContainerMappingInputPropertiesPtrOutput() CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return i.ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *createProtectionContainerMappingInputPropertiesPtrType) ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(ctx context.Context) CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateProtectionContainerMappingInputPropertiesPtrOutput)
}

// Configure pairing input properties.
type CreateProtectionContainerMappingInputPropertiesOutput struct{ *pulumi.OutputState }

func (CreateProtectionContainerMappingInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateProtectionContainerMappingInputProperties)(nil)).Elem()
}

func (o CreateProtectionContainerMappingInputPropertiesOutput) ToCreateProtectionContainerMappingInputPropertiesOutput() CreateProtectionContainerMappingInputPropertiesOutput {
	return o
}

func (o CreateProtectionContainerMappingInputPropertiesOutput) ToCreateProtectionContainerMappingInputPropertiesOutputWithContext(ctx context.Context) CreateProtectionContainerMappingInputPropertiesOutput {
	return o
}

func (o CreateProtectionContainerMappingInputPropertiesOutput) ToCreateProtectionContainerMappingInputPropertiesPtrOutput() CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return o.ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (o CreateProtectionContainerMappingInputPropertiesOutput) ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(ctx context.Context) CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CreateProtectionContainerMappingInputProperties) *CreateProtectionContainerMappingInputProperties {
		return &v
	}).(CreateProtectionContainerMappingInputPropertiesPtrOutput)
}

// Applicable policy.
func (o CreateProtectionContainerMappingInputPropertiesOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CreateProtectionContainerMappingInputProperties) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Provider specific input for pairing.
func (o CreateProtectionContainerMappingInputPropertiesOutput) ProviderSpecificInput() pulumi.AnyOutput {
	return o.ApplyT(func(v CreateProtectionContainerMappingInputProperties) interface{} { return v.ProviderSpecificInput }).(pulumi.AnyOutput)
}

// The target unique protection container name.
func (o CreateProtectionContainerMappingInputPropertiesOutput) TargetProtectionContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CreateProtectionContainerMappingInputProperties) *string { return v.TargetProtectionContainerId }).(pulumi.StringPtrOutput)
}

type CreateProtectionContainerMappingInputPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CreateProtectionContainerMappingInputPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateProtectionContainerMappingInputProperties)(nil)).Elem()
}

func (o CreateProtectionContainerMappingInputPropertiesPtrOutput) ToCreateProtectionContainerMappingInputPropertiesPtrOutput() CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return o
}

func (o CreateProtectionContainerMappingInputPropertiesPtrOutput) ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(ctx context.Context) CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return o
}

func (o CreateProtectionContainerMappingInputPropertiesPtrOutput) Elem() CreateProtectionContainerMappingInputPropertiesOutput {
	return o.ApplyT(func(v *CreateProtectionContainerMappingInputProperties) CreateProtectionContainerMappingInputProperties {
		if v != nil {
			return *v
		}
		var ret CreateProtectionContainerMappingInputProperties
		return ret
	}).(CreateProtectionContainerMappingInputPropertiesOutput)
}

// Applicable policy.
func (o CreateProtectionContainerMappingInputPropertiesPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CreateProtectionContainerMappingInputProperties) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Provider specific input for pairing.
func (o CreateProtectionContainerMappingInputPropertiesPtrOutput) ProviderSpecificInput() pulumi.AnyOutput {
	return o.ApplyT(func(v *CreateProtectionContainerMappingInputProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.ProviderSpecificInput
	}).(pulumi.AnyOutput)
}

// The target unique protection container name.
func (o CreateProtectionContainerMappingInputPropertiesPtrOutput) TargetProtectionContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CreateProtectionContainerMappingInputProperties) *string {
		if v == nil {
			return nil
		}
		return v.TargetProtectionContainerId
	}).(pulumi.StringPtrOutput)
}

// Recovery plan creation properties.
type CreateRecoveryPlanInputProperties struct {
	// The failover deployment model.
	FailoverDeploymentModel *string `pulumi:"failoverDeploymentModel"`
	// The recovery plan groups.
	Groups []RecoveryPlanGroup `pulumi:"groups"`
	// The primary fabric Id.
	PrimaryFabricId string `pulumi:"primaryFabricId"`
	// The provider specific input.
	ProviderSpecificInput []RecoveryPlanA2AInput `pulumi:"providerSpecificInput"`
	// The recovery fabric Id.
	RecoveryFabricId string `pulumi:"recoveryFabricId"`
}

// CreateRecoveryPlanInputPropertiesInput is an input type that accepts CreateRecoveryPlanInputPropertiesArgs and CreateRecoveryPlanInputPropertiesOutput values.
// You can construct a concrete instance of `CreateRecoveryPlanInputPropertiesInput` via:
//
//	CreateRecoveryPlanInputPropertiesArgs{...}
type CreateRecoveryPlanInputPropertiesInput interface {
	pulumi.Input

	ToCreateRecoveryPlanInputPropertiesOutput() CreateRecoveryPlanInputPropertiesOutput
	ToCreateRecoveryPlanInputPropertiesOutputWithContext(context.Context) CreateRecoveryPlanInputPropertiesOutput
}

// Recovery plan creation properties.
type CreateRecoveryPlanInputPropertiesArgs struct {
	// The failover deployment model.
	FailoverDeploymentModel pulumi.StringPtrInput `pulumi:"failoverDeploymentModel"`
	// The recovery plan groups.
	Groups RecoveryPlanGroupArrayInput `pulumi:"groups"`
	// The primary fabric Id.
	PrimaryFabricId pulumi.StringInput `pulumi:"primaryFabricId"`
	// The provider specific input.
	ProviderSpecificInput RecoveryPlanA2AInputArrayInput `pulumi:"providerSpecificInput"`
	// The recovery fabric Id.
	RecoveryFabricId pulumi.StringInput `pulumi:"recoveryFabricId"`
}

func (CreateRecoveryPlanInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateRecoveryPlanInputProperties)(nil)).Elem()
}

func (i CreateRecoveryPlanInputPropertiesArgs) ToCreateRecoveryPlanInputPropertiesOutput() CreateRecoveryPlanInputPropertiesOutput {
	return i.ToCreateRecoveryPlanInputPropertiesOutputWithContext(context.Background())
}

func (i CreateRecoveryPlanInputPropertiesArgs) ToCreateRecoveryPlanInputPropertiesOutputWithContext(ctx context.Context) CreateRecoveryPlanInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateRecoveryPlanInputPropertiesOutput)
}

// Recovery plan creation properties.
type CreateRecoveryPlanInputPropertiesOutput struct{ *pulumi.OutputState }

func (CreateRecoveryPlanInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateRecoveryPlanInputProperties)(nil)).Elem()
}

func (o CreateRecoveryPlanInputPropertiesOutput) ToCreateRecoveryPlanInputPropertiesOutput() CreateRecoveryPlanInputPropertiesOutput {
	return o
}

func (o CreateRecoveryPlanInputPropertiesOutput) ToCreateRecoveryPlanInputPropertiesOutputWithContext(ctx context.Context) CreateRecoveryPlanInputPropertiesOutput {
	return o
}

// The failover deployment model.
func (o CreateRecoveryPlanInputPropertiesOutput) FailoverDeploymentModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CreateRecoveryPlanInputProperties) *string { return v.FailoverDeploymentModel }).(pulumi.StringPtrOutput)
}

// The recovery plan groups.
func (o CreateRecoveryPlanInputPropertiesOutput) Groups() RecoveryPlanGroupArrayOutput {
	return o.ApplyT(func(v CreateRecoveryPlanInputProperties) []RecoveryPlanGroup { return v.Groups }).(RecoveryPlanGroupArrayOutput)
}

// The primary fabric Id.
func (o CreateRecoveryPlanInputPropertiesOutput) PrimaryFabricId() pulumi.StringOutput {
	return o.ApplyT(func(v CreateRecoveryPlanInputProperties) string { return v.PrimaryFabricId }).(pulumi.StringOutput)
}

// The provider specific input.
func (o CreateRecoveryPlanInputPropertiesOutput) ProviderSpecificInput() RecoveryPlanA2AInputArrayOutput {
	return o.ApplyT(func(v CreateRecoveryPlanInputProperties) []RecoveryPlanA2AInput { return v.ProviderSpecificInput }).(RecoveryPlanA2AInputArrayOutput)
}

// The recovery fabric Id.
func (o CreateRecoveryPlanInputPropertiesOutput) RecoveryFabricId() pulumi.StringOutput {
	return o.ApplyT(func(v CreateRecoveryPlanInputProperties) string { return v.RecoveryFabricId }).(pulumi.StringOutput)
}

// Current job details of the migration item.
type CurrentJobDetailsResponse struct {
	// The ARM Id of the job being executed.
	JobId string `pulumi:"jobId"`
	// The job name.
	JobName string `pulumi:"jobName"`
	// The start time of the job.
	StartTime string `pulumi:"startTime"`
}

// Current job details of the migration item.
type CurrentJobDetailsResponseOutput struct{ *pulumi.OutputState }

func (CurrentJobDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CurrentJobDetailsResponse)(nil)).Elem()
}

func (o CurrentJobDetailsResponseOutput) ToCurrentJobDetailsResponseOutput() CurrentJobDetailsResponseOutput {
	return o
}

func (o CurrentJobDetailsResponseOutput) ToCurrentJobDetailsResponseOutputWithContext(ctx context.Context) CurrentJobDetailsResponseOutput {
	return o
}

// The ARM Id of the job being executed.
func (o CurrentJobDetailsResponseOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v CurrentJobDetailsResponse) string { return v.JobId }).(pulumi.StringOutput)
}

// The job name.
func (o CurrentJobDetailsResponseOutput) JobName() pulumi.StringOutput {
	return o.ApplyT(func(v CurrentJobDetailsResponse) string { return v.JobName }).(pulumi.StringOutput)
}

// The start time of the job.
func (o CurrentJobDetailsResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v CurrentJobDetailsResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// Current scenario details of the protected entity.
type CurrentScenarioDetailsResponse struct {
	// ARM Id of the job being executed.
	JobId *string `pulumi:"jobId"`
	// Scenario name.
	ScenarioName *string `pulumi:"scenarioName"`
	// Start time of the workflow.
	StartTime *string `pulumi:"startTime"`
}

// Current scenario details of the protected entity.
type CurrentScenarioDetailsResponseOutput struct{ *pulumi.OutputState }

func (CurrentScenarioDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CurrentScenarioDetailsResponse)(nil)).Elem()
}

func (o CurrentScenarioDetailsResponseOutput) ToCurrentScenarioDetailsResponseOutput() CurrentScenarioDetailsResponseOutput {
	return o
}

func (o CurrentScenarioDetailsResponseOutput) ToCurrentScenarioDetailsResponseOutputWithContext(ctx context.Context) CurrentScenarioDetailsResponseOutput {
	return o
}

// ARM Id of the job being executed.
func (o CurrentScenarioDetailsResponseOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CurrentScenarioDetailsResponse) *string { return v.JobId }).(pulumi.StringPtrOutput)
}

// Scenario name.
func (o CurrentScenarioDetailsResponseOutput) ScenarioName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CurrentScenarioDetailsResponse) *string { return v.ScenarioName }).(pulumi.StringPtrOutput)
}

// Start time of the workflow.
func (o CurrentScenarioDetailsResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CurrentScenarioDetailsResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type CurrentScenarioDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (CurrentScenarioDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CurrentScenarioDetailsResponse)(nil)).Elem()
}

func (o CurrentScenarioDetailsResponsePtrOutput) ToCurrentScenarioDetailsResponsePtrOutput() CurrentScenarioDetailsResponsePtrOutput {
	return o
}

func (o CurrentScenarioDetailsResponsePtrOutput) ToCurrentScenarioDetailsResponsePtrOutputWithContext(ctx context.Context) CurrentScenarioDetailsResponsePtrOutput {
	return o
}

func (o CurrentScenarioDetailsResponsePtrOutput) Elem() CurrentScenarioDetailsResponseOutput {
	return o.ApplyT(func(v *CurrentScenarioDetailsResponse) CurrentScenarioDetailsResponse {
		if v != nil {
			return *v
		}
		var ret CurrentScenarioDetailsResponse
		return ret
	}).(CurrentScenarioDetailsResponseOutput)
}

// ARM Id of the job being executed.
func (o CurrentScenarioDetailsResponsePtrOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CurrentScenarioDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.JobId
	}).(pulumi.StringPtrOutput)
}

// Scenario name.
func (o CurrentScenarioDetailsResponsePtrOutput) ScenarioName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CurrentScenarioDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScenarioName
	}).(pulumi.StringPtrOutput)
}

// Start time of the workflow.
func (o CurrentScenarioDetailsResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CurrentScenarioDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Additional information of the DPMContainer.
type DPMContainerExtendedInfo struct {
	// Last refresh time of the DPMContainer.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
}

// Additional information of the DPMContainer.
type DPMContainerExtendedInfoResponse struct {
	// Last refresh time of the DPMContainer.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
}

// Additional information on Backup engine specific backup item.
type DPMProtectedItem struct {
	// Backup Management server protecting this backup item
	BackupEngineName *string `pulumi:"backupEngineName"`
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Extended info of the backup item.
	ExtendedInfo *DPMProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the managed item
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'DPMProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Protection state of the backup engine
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Additional information of DPM Protected item.
type DPMProtectedItemExtendedInfo struct {
	// Used Disk storage in bytes.
	DiskStorageUsedInBytes *string `pulumi:"diskStorageUsedInBytes"`
	// To check if backup item is collocated.
	IsCollocated *bool `pulumi:"isCollocated"`
	// To check if backup item is cloud protected.
	IsPresentOnCloud *bool `pulumi:"isPresentOnCloud"`
	// Last backup status information on backup item.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Last refresh time on backup item.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// Oldest cloud recovery point time.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// latest disk recovery point time.
	OnPremiseLatestRecoveryPoint *string `pulumi:"onPremiseLatestRecoveryPoint"`
	// Oldest disk recovery point time.
	OnPremiseOldestRecoveryPoint *string `pulumi:"onPremiseOldestRecoveryPoint"`
	// disk recovery point count.
	OnPremiseRecoveryPointCount *int `pulumi:"onPremiseRecoveryPointCount"`
	// Attribute to provide information on various DBs.
	ProtectableObjectLoadPath map[string]string `pulumi:"protectableObjectLoadPath"`
	// To check if backup item is disk protected.
	Protected *bool `pulumi:"protected"`
	// Protection group name of the backup item.
	ProtectionGroupName *string `pulumi:"protectionGroupName"`
	// cloud recovery point count.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
	// total Disk storage in bytes.
	TotalDiskStorageSizeInBytes *string `pulumi:"totalDiskStorageSizeInBytes"`
}

// Additional information of DPM Protected item.
type DPMProtectedItemExtendedInfoResponse struct {
	// Used Disk storage in bytes.
	DiskStorageUsedInBytes *string `pulumi:"diskStorageUsedInBytes"`
	// To check if backup item is collocated.
	IsCollocated *bool `pulumi:"isCollocated"`
	// To check if backup item is cloud protected.
	IsPresentOnCloud *bool `pulumi:"isPresentOnCloud"`
	// Last backup status information on backup item.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Last refresh time on backup item.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// Oldest cloud recovery point time.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// latest disk recovery point time.
	OnPremiseLatestRecoveryPoint *string `pulumi:"onPremiseLatestRecoveryPoint"`
	// Oldest disk recovery point time.
	OnPremiseOldestRecoveryPoint *string `pulumi:"onPremiseOldestRecoveryPoint"`
	// disk recovery point count.
	OnPremiseRecoveryPointCount *int `pulumi:"onPremiseRecoveryPointCount"`
	// Attribute to provide information on various DBs.
	ProtectableObjectLoadPath map[string]string `pulumi:"protectableObjectLoadPath"`
	// To check if backup item is disk protected.
	Protected *bool `pulumi:"protected"`
	// Protection group name of the backup item.
	ProtectionGroupName *string `pulumi:"protectionGroupName"`
	// cloud recovery point count.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
	// total Disk storage in bytes.
	TotalDiskStorageSizeInBytes *string `pulumi:"totalDiskStorageSizeInBytes"`
}

// Additional information on Backup engine specific backup item.
type DPMProtectedItemResponse struct {
	// Backup Management server protecting this backup item
	BackupEngineName *string `pulumi:"backupEngineName"`
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Extended info of the backup item.
	ExtendedInfo *DPMProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the managed item
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'DPMProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Protection state of the backup engine
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Daily retention format.
type DailyRetentionFormat struct {
	// List of days of the month.
	DaysOfTheMonth []Day `pulumi:"daysOfTheMonth"`
}

// Daily retention format.
type DailyRetentionFormatResponse struct {
	// List of days of the month.
	DaysOfTheMonth []DayResponse `pulumi:"daysOfTheMonth"`
}

// Daily retention schedule.
type DailyRetentionSchedule struct {
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Daily retention schedule.
type DailyRetentionScheduleResponse struct {
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

type DailySchedule struct {
	// List of times of day this schedule has to be run.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
}

type DailyScheduleResponse struct {
	// List of times of day this schedule has to be run.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
}

// The datastore details of the MT.
type DataStoreResponse struct {
	// The capacity of data store in GBs.
	Capacity *string `pulumi:"capacity"`
	// The free space of data store in GBs.
	FreeSpace *string `pulumi:"freeSpace"`
	// The symbolic name of data store.
	SymbolicName *string `pulumi:"symbolicName"`
	// The type of data store.
	Type *string `pulumi:"type"`
	// The uuid of data store.
	Uuid *string `pulumi:"uuid"`
}

// Day of the week.
type Day struct {
	// Date of the month
	Date *int `pulumi:"date"`
	// Whether Date is last date of month
	IsLast *bool `pulumi:"isLast"`
}

// Day of the week.
type DayResponse struct {
	// Date of the month
	Date *int `pulumi:"date"`
	// Whether Date is last date of month
	IsLast *bool `pulumi:"isLast"`
}

// Onprem disk details data.
type DiskDetailsResponse struct {
	// The hard disk max size in MB.
	MaxSizeMB *float64 `pulumi:"maxSizeMB"`
	// The VHD Id.
	VhdId *string `pulumi:"vhdId"`
	// The VHD name.
	VhdName *string `pulumi:"vhdName"`
	// The type of the volume.
	VhdType *string `pulumi:"vhdType"`
}

// Recovery disk encryption info (BEK and KEK).
type DiskEncryptionInfo struct {
	// The recovery KeyVault reference for secret.
	DiskEncryptionKeyInfo *DiskEncryptionKeyInfo `pulumi:"diskEncryptionKeyInfo"`
	// The recovery KeyVault reference for key.
	KeyEncryptionKeyInfo *KeyEncryptionKeyInfo `pulumi:"keyEncryptionKeyInfo"`
}

// Disk Encryption Key Information (BitLocker Encryption Key (BEK) on Windows).
type DiskEncryptionKeyInfo struct {
	// The KeyVault resource ARM id for secret.
	KeyVaultResourceArmId *string `pulumi:"keyVaultResourceArmId"`
	// The secret url / identifier.
	SecretIdentifier *string `pulumi:"secretIdentifier"`
}

type DiskExclusionProperties struct {
	// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
	DiskLunList []int `pulumi:"diskLunList"`
	// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
	IsInclusionList *bool `pulumi:"isInclusionList"`
}

type DiskExclusionPropertiesResponse struct {
	// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
	DiskLunList []int `pulumi:"diskLunList"`
	// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
	IsInclusionList *bool `pulumi:"isInclusionList"`
}

// This is used to represent the various nodes of the distributed container.
type DistributedNodesInfo struct {
	// Name of the node under a distributed container.
	NodeName *string `pulumi:"nodeName"`
	// Status of this Node.
	// Failed | Succeeded
	Status *string `pulumi:"status"`
}

// This is used to represent the various nodes of the distributed container.
type DistributedNodesInfoResponse struct {
	// Error Details if the Status is non-success.
	ErrorDetail *ErrorDetailResponse `pulumi:"errorDetail"`
	// Name of the node under a distributed container.
	NodeName *string `pulumi:"nodeName"`
	// Status of this Node.
	// Failed | Succeeded
	Status *string `pulumi:"status"`
}

// DPM workload-specific protection container.
type DpmContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister *bool `pulumi:"canReRegister"`
	// ID of container.
	ContainerId *string `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'DPMContainer'.
	ContainerType string `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion *string `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers []string `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo *DPMContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable *bool `pulumi:"upgradeAvailable"`
}

// DPM workload-specific protection container.
type DpmContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister *bool `pulumi:"canReRegister"`
	// ID of container.
	ContainerId *string `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'DPMContainer'.
	ContainerType string `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion *string `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers []string `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo *DPMContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable *bool `pulumi:"upgradeAvailable"`
}

// DRA details.
type DraDetailsResponse struct {
	// The DRA Bios Id.
	BiosId string `pulumi:"biosId"`
	// The count of protected items which are protected in forward direction.
	ForwardProtectedItemCount int `pulumi:"forwardProtectedItemCount"`
	// The health.
	Health string `pulumi:"health"`
	// The health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The DRA Id.
	Id string `pulumi:"id"`
	// The last heartbeat received from the DRA.
	LastHeartbeatUtc string `pulumi:"lastHeartbeatUtc"`
	// The DRA name.
	Name string `pulumi:"name"`
	// The count of protected items which are protected in reverse direction.
	ReverseProtectedItemCount int `pulumi:"reverseProtectedItemCount"`
	// The version.
	Version string `pulumi:"version"`
}

// Enable migration input properties.
type EnableMigrationInputProperties struct {
	// The policy Id.
	PolicyId string `pulumi:"policyId"`
	// The provider specific details.
	ProviderSpecificDetails VMwareCbtEnableMigrationInput `pulumi:"providerSpecificDetails"`
}

// EnableMigrationInputPropertiesInput is an input type that accepts EnableMigrationInputPropertiesArgs and EnableMigrationInputPropertiesOutput values.
// You can construct a concrete instance of `EnableMigrationInputPropertiesInput` via:
//
//	EnableMigrationInputPropertiesArgs{...}
type EnableMigrationInputPropertiesInput interface {
	pulumi.Input

	ToEnableMigrationInputPropertiesOutput() EnableMigrationInputPropertiesOutput
	ToEnableMigrationInputPropertiesOutputWithContext(context.Context) EnableMigrationInputPropertiesOutput
}

// Enable migration input properties.
type EnableMigrationInputPropertiesArgs struct {
	// The policy Id.
	PolicyId pulumi.StringInput `pulumi:"policyId"`
	// The provider specific details.
	ProviderSpecificDetails VMwareCbtEnableMigrationInputInput `pulumi:"providerSpecificDetails"`
}

func (EnableMigrationInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableMigrationInputProperties)(nil)).Elem()
}

func (i EnableMigrationInputPropertiesArgs) ToEnableMigrationInputPropertiesOutput() EnableMigrationInputPropertiesOutput {
	return i.ToEnableMigrationInputPropertiesOutputWithContext(context.Background())
}

func (i EnableMigrationInputPropertiesArgs) ToEnableMigrationInputPropertiesOutputWithContext(ctx context.Context) EnableMigrationInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableMigrationInputPropertiesOutput)
}

// Enable migration input properties.
type EnableMigrationInputPropertiesOutput struct{ *pulumi.OutputState }

func (EnableMigrationInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableMigrationInputProperties)(nil)).Elem()
}

func (o EnableMigrationInputPropertiesOutput) ToEnableMigrationInputPropertiesOutput() EnableMigrationInputPropertiesOutput {
	return o
}

func (o EnableMigrationInputPropertiesOutput) ToEnableMigrationInputPropertiesOutputWithContext(ctx context.Context) EnableMigrationInputPropertiesOutput {
	return o
}

// The policy Id.
func (o EnableMigrationInputPropertiesOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v EnableMigrationInputProperties) string { return v.PolicyId }).(pulumi.StringOutput)
}

// The provider specific details.
func (o EnableMigrationInputPropertiesOutput) ProviderSpecificDetails() VMwareCbtEnableMigrationInputOutput {
	return o.ApplyT(func(v EnableMigrationInputProperties) VMwareCbtEnableMigrationInput { return v.ProviderSpecificDetails }).(VMwareCbtEnableMigrationInputOutput)
}

// Enable protection input properties.
type EnableProtectionInputProperties struct {
	// The Policy Id.
	PolicyId *string `pulumi:"policyId"`
	// The protectable item Id.
	ProtectableItemId *string `pulumi:"protectableItemId"`
	// The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null.
	ProviderSpecificDetails interface{} `pulumi:"providerSpecificDetails"`
}

// EnableProtectionInputPropertiesInput is an input type that accepts EnableProtectionInputPropertiesArgs and EnableProtectionInputPropertiesOutput values.
// You can construct a concrete instance of `EnableProtectionInputPropertiesInput` via:
//
//	EnableProtectionInputPropertiesArgs{...}
type EnableProtectionInputPropertiesInput interface {
	pulumi.Input

	ToEnableProtectionInputPropertiesOutput() EnableProtectionInputPropertiesOutput
	ToEnableProtectionInputPropertiesOutputWithContext(context.Context) EnableProtectionInputPropertiesOutput
}

// Enable protection input properties.
type EnableProtectionInputPropertiesArgs struct {
	// The Policy Id.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// The protectable item Id.
	ProtectableItemId pulumi.StringPtrInput `pulumi:"protectableItemId"`
	// The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null.
	ProviderSpecificDetails pulumi.Input `pulumi:"providerSpecificDetails"`
}

func (EnableProtectionInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableProtectionInputProperties)(nil)).Elem()
}

func (i EnableProtectionInputPropertiesArgs) ToEnableProtectionInputPropertiesOutput() EnableProtectionInputPropertiesOutput {
	return i.ToEnableProtectionInputPropertiesOutputWithContext(context.Background())
}

func (i EnableProtectionInputPropertiesArgs) ToEnableProtectionInputPropertiesOutputWithContext(ctx context.Context) EnableProtectionInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableProtectionInputPropertiesOutput)
}

func (i EnableProtectionInputPropertiesArgs) ToEnableProtectionInputPropertiesPtrOutput() EnableProtectionInputPropertiesPtrOutput {
	return i.ToEnableProtectionInputPropertiesPtrOutputWithContext(context.Background())
}

func (i EnableProtectionInputPropertiesArgs) ToEnableProtectionInputPropertiesPtrOutputWithContext(ctx context.Context) EnableProtectionInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableProtectionInputPropertiesOutput).ToEnableProtectionInputPropertiesPtrOutputWithContext(ctx)
}

// EnableProtectionInputPropertiesPtrInput is an input type that accepts EnableProtectionInputPropertiesArgs, EnableProtectionInputPropertiesPtr and EnableProtectionInputPropertiesPtrOutput values.
// You can construct a concrete instance of `EnableProtectionInputPropertiesPtrInput` via:
//
//	        EnableProtectionInputPropertiesArgs{...}
//
//	or:
//
//	        nil
type EnableProtectionInputPropertiesPtrInput interface {
	pulumi.Input

	ToEnableProtectionInputPropertiesPtrOutput() EnableProtectionInputPropertiesPtrOutput
	ToEnableProtectionInputPropertiesPtrOutputWithContext(context.Context) EnableProtectionInputPropertiesPtrOutput
}

type enableProtectionInputPropertiesPtrType EnableProtectionInputPropertiesArgs

func EnableProtectionInputPropertiesPtr(v *EnableProtectionInputPropertiesArgs) EnableProtectionInputPropertiesPtrInput {
	return (*enableProtectionInputPropertiesPtrType)(v)
}

func (*enableProtectionInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnableProtectionInputProperties)(nil)).Elem()
}

func (i *enableProtectionInputPropertiesPtrType) ToEnableProtectionInputPropertiesPtrOutput() EnableProtectionInputPropertiesPtrOutput {
	return i.ToEnableProtectionInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *enableProtectionInputPropertiesPtrType) ToEnableProtectionInputPropertiesPtrOutputWithContext(ctx context.Context) EnableProtectionInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableProtectionInputPropertiesPtrOutput)
}

// Enable protection input properties.
type EnableProtectionInputPropertiesOutput struct{ *pulumi.OutputState }

func (EnableProtectionInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableProtectionInputProperties)(nil)).Elem()
}

func (o EnableProtectionInputPropertiesOutput) ToEnableProtectionInputPropertiesOutput() EnableProtectionInputPropertiesOutput {
	return o
}

func (o EnableProtectionInputPropertiesOutput) ToEnableProtectionInputPropertiesOutputWithContext(ctx context.Context) EnableProtectionInputPropertiesOutput {
	return o
}

func (o EnableProtectionInputPropertiesOutput) ToEnableProtectionInputPropertiesPtrOutput() EnableProtectionInputPropertiesPtrOutput {
	return o.ToEnableProtectionInputPropertiesPtrOutputWithContext(context.Background())
}

func (o EnableProtectionInputPropertiesOutput) ToEnableProtectionInputPropertiesPtrOutputWithContext(ctx context.Context) EnableProtectionInputPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnableProtectionInputProperties) *EnableProtectionInputProperties {
		return &v
	}).(EnableProtectionInputPropertiesPtrOutput)
}

// The Policy Id.
func (o EnableProtectionInputPropertiesOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnableProtectionInputProperties) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// The protectable item Id.
func (o EnableProtectionInputPropertiesOutput) ProtectableItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnableProtectionInputProperties) *string { return v.ProtectableItemId }).(pulumi.StringPtrOutput)
}

// The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null.
func (o EnableProtectionInputPropertiesOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v EnableProtectionInputProperties) interface{} { return v.ProviderSpecificDetails }).(pulumi.AnyOutput)
}

type EnableProtectionInputPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EnableProtectionInputPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnableProtectionInputProperties)(nil)).Elem()
}

func (o EnableProtectionInputPropertiesPtrOutput) ToEnableProtectionInputPropertiesPtrOutput() EnableProtectionInputPropertiesPtrOutput {
	return o
}

func (o EnableProtectionInputPropertiesPtrOutput) ToEnableProtectionInputPropertiesPtrOutputWithContext(ctx context.Context) EnableProtectionInputPropertiesPtrOutput {
	return o
}

func (o EnableProtectionInputPropertiesPtrOutput) Elem() EnableProtectionInputPropertiesOutput {
	return o.ApplyT(func(v *EnableProtectionInputProperties) EnableProtectionInputProperties {
		if v != nil {
			return *v
		}
		var ret EnableProtectionInputProperties
		return ret
	}).(EnableProtectionInputPropertiesOutput)
}

// The Policy Id.
func (o EnableProtectionInputPropertiesPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnableProtectionInputProperties) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// The protectable item Id.
func (o EnableProtectionInputPropertiesPtrOutput) ProtectableItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnableProtectionInputProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableItemId
	}).(pulumi.StringPtrOutput)
}

// The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null.
func (o EnableProtectionInputPropertiesPtrOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *EnableProtectionInputProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.ProviderSpecificDetails
	}).(pulumi.AnyOutput)
}

// Encryption details for the fabric.
type EncryptionDetailsResponse struct {
	// The key encryption key certificate expiry date.
	KekCertExpiryDate *string `pulumi:"kekCertExpiryDate"`
	// The key encryption key certificate thumbprint.
	KekCertThumbprint *string `pulumi:"kekCertThumbprint"`
	// The key encryption key state for the Vmm.
	KekState *string `pulumi:"kekState"`
}

// Encryption details for the fabric.
type EncryptionDetailsResponseOutput struct{ *pulumi.OutputState }

func (EncryptionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionDetailsResponse)(nil)).Elem()
}

func (o EncryptionDetailsResponseOutput) ToEncryptionDetailsResponseOutput() EncryptionDetailsResponseOutput {
	return o
}

func (o EncryptionDetailsResponseOutput) ToEncryptionDetailsResponseOutputWithContext(ctx context.Context) EncryptionDetailsResponseOutput {
	return o
}

// The key encryption key certificate expiry date.
func (o EncryptionDetailsResponseOutput) KekCertExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionDetailsResponse) *string { return v.KekCertExpiryDate }).(pulumi.StringPtrOutput)
}

// The key encryption key certificate thumbprint.
func (o EncryptionDetailsResponseOutput) KekCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionDetailsResponse) *string { return v.KekCertThumbprint }).(pulumi.StringPtrOutput)
}

// The key encryption key state for the Vmm.
func (o EncryptionDetailsResponseOutput) KekState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionDetailsResponse) *string { return v.KekState }).(pulumi.StringPtrOutput)
}

type EncryptionDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionDetailsResponse)(nil)).Elem()
}

func (o EncryptionDetailsResponsePtrOutput) ToEncryptionDetailsResponsePtrOutput() EncryptionDetailsResponsePtrOutput {
	return o
}

func (o EncryptionDetailsResponsePtrOutput) ToEncryptionDetailsResponsePtrOutputWithContext(ctx context.Context) EncryptionDetailsResponsePtrOutput {
	return o
}

func (o EncryptionDetailsResponsePtrOutput) Elem() EncryptionDetailsResponseOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) EncryptionDetailsResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionDetailsResponse
		return ret
	}).(EncryptionDetailsResponseOutput)
}

// The key encryption key certificate expiry date.
func (o EncryptionDetailsResponsePtrOutput) KekCertExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.KekCertExpiryDate
	}).(pulumi.StringPtrOutput)
}

// The key encryption key certificate thumbprint.
func (o EncryptionDetailsResponsePtrOutput) KekCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.KekCertThumbprint
	}).(pulumi.StringPtrOutput)
}

// The key encryption key state for the Vmm.
func (o EncryptionDetailsResponsePtrOutput) KekState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.KekState
	}).(pulumi.StringPtrOutput)
}

// Error Detail class which encapsulates Code, Message and Recommendations.
type ErrorDetailResponse struct {
	// Error code.
	Code string `pulumi:"code"`
	// Error Message related to the Code.
	Message string `pulumi:"message"`
	// List of recommendation strings.
	Recommendations []string `pulumi:"recommendations"`
}

// Extended location of the resource.
type ExtendedLocation struct {
	// The name of the extended location.
	Name string `pulumi:"name"`
	// The extended location type.
	Type string `pulumi:"type"`
}

// ExtendedLocationInput is an input type that accepts ExtendedLocationArgs and ExtendedLocationOutput values.
// You can construct a concrete instance of `ExtendedLocationInput` via:
//
//	ExtendedLocationArgs{...}
type ExtendedLocationInput interface {
	pulumi.Input

	ToExtendedLocationOutput() ExtendedLocationOutput
	ToExtendedLocationOutputWithContext(context.Context) ExtendedLocationOutput
}

// Extended location of the resource.
type ExtendedLocationArgs struct {
	// The name of the extended location.
	Name pulumi.StringInput `pulumi:"name"`
	// The extended location type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (i ExtendedLocationArgs) ToExtendedLocationOutput() ExtendedLocationOutput {
	return i.ToExtendedLocationOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput)
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput).ToExtendedLocationPtrOutputWithContext(ctx)
}

// ExtendedLocationPtrInput is an input type that accepts ExtendedLocationArgs, ExtendedLocationPtr and ExtendedLocationPtrOutput values.
// You can construct a concrete instance of `ExtendedLocationPtrInput` via:
//
//	        ExtendedLocationArgs{...}
//
//	or:
//
//	        nil
type ExtendedLocationPtrInput interface {
	pulumi.Input

	ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput
	ToExtendedLocationPtrOutputWithContext(context.Context) ExtendedLocationPtrOutput
}

type extendedLocationPtrType ExtendedLocationArgs

func ExtendedLocationPtr(v *ExtendedLocationArgs) ExtendedLocationPtrInput {
	return (*extendedLocationPtrType)(v)
}

func (*extendedLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationPtrOutput)
}

// Extended location of the resource.
type ExtendedLocationOutput struct{ *pulumi.OutputState }

func (ExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationOutput) ToExtendedLocationOutput() ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedLocation) *ExtendedLocation {
		return &v
	}).(ExtendedLocationPtrOutput)
}

// The name of the extended location.
func (o ExtendedLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocation) string { return v.Name }).(pulumi.StringOutput)
}

// The extended location type.
func (o ExtendedLocationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocation) string { return v.Type }).(pulumi.StringOutput)
}

type ExtendedLocationPtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) Elem() ExtendedLocationOutput {
	return o.ApplyT(func(v *ExtendedLocation) ExtendedLocation {
		if v != nil {
			return *v
		}
		var ret ExtendedLocation
		return ret
	}).(ExtendedLocationOutput)
}

// The name of the extended location.
func (o ExtendedLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The extended location type.
func (o ExtendedLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Extended location of the resource.
type ExtendedLocationResponse struct {
	// The name of the extended location.
	Name string `pulumi:"name"`
	// The extended location type.
	Type string `pulumi:"type"`
}

// Extended Properties for Azure IaasVM Backup.
type ExtendedProperties struct {
	// Extended Properties for Disk Exclusion.
	DiskExclusionProperties *DiskExclusionProperties `pulumi:"diskExclusionProperties"`
	// Linux VM name
	LinuxVmApplicationName *string `pulumi:"linuxVmApplicationName"`
}

// Extended Properties for Azure IaasVM Backup.
type ExtendedPropertiesResponse struct {
	// Extended Properties for Disk Exclusion.
	DiskExclusionProperties *DiskExclusionPropertiesResponse `pulumi:"diskExclusionProperties"`
	// Linux VM name
	LinuxVmApplicationName *string `pulumi:"linuxVmApplicationName"`
}

// Properties of site details provided during the time of site creation.
type FabricCreationInputProperties struct {
	// Fabric provider specific creation input.
	CustomDetails interface{} `pulumi:"customDetails"`
}

// FabricCreationInputPropertiesInput is an input type that accepts FabricCreationInputPropertiesArgs and FabricCreationInputPropertiesOutput values.
// You can construct a concrete instance of `FabricCreationInputPropertiesInput` via:
//
//	FabricCreationInputPropertiesArgs{...}
type FabricCreationInputPropertiesInput interface {
	pulumi.Input

	ToFabricCreationInputPropertiesOutput() FabricCreationInputPropertiesOutput
	ToFabricCreationInputPropertiesOutputWithContext(context.Context) FabricCreationInputPropertiesOutput
}

// Properties of site details provided during the time of site creation.
type FabricCreationInputPropertiesArgs struct {
	// Fabric provider specific creation input.
	CustomDetails pulumi.Input `pulumi:"customDetails"`
}

func (FabricCreationInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FabricCreationInputProperties)(nil)).Elem()
}

func (i FabricCreationInputPropertiesArgs) ToFabricCreationInputPropertiesOutput() FabricCreationInputPropertiesOutput {
	return i.ToFabricCreationInputPropertiesOutputWithContext(context.Background())
}

func (i FabricCreationInputPropertiesArgs) ToFabricCreationInputPropertiesOutputWithContext(ctx context.Context) FabricCreationInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricCreationInputPropertiesOutput)
}

func (i FabricCreationInputPropertiesArgs) ToFabricCreationInputPropertiesPtrOutput() FabricCreationInputPropertiesPtrOutput {
	return i.ToFabricCreationInputPropertiesPtrOutputWithContext(context.Background())
}

func (i FabricCreationInputPropertiesArgs) ToFabricCreationInputPropertiesPtrOutputWithContext(ctx context.Context) FabricCreationInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricCreationInputPropertiesOutput).ToFabricCreationInputPropertiesPtrOutputWithContext(ctx)
}

// FabricCreationInputPropertiesPtrInput is an input type that accepts FabricCreationInputPropertiesArgs, FabricCreationInputPropertiesPtr and FabricCreationInputPropertiesPtrOutput values.
// You can construct a concrete instance of `FabricCreationInputPropertiesPtrInput` via:
//
//	        FabricCreationInputPropertiesArgs{...}
//
//	or:
//
//	        nil
type FabricCreationInputPropertiesPtrInput interface {
	pulumi.Input

	ToFabricCreationInputPropertiesPtrOutput() FabricCreationInputPropertiesPtrOutput
	ToFabricCreationInputPropertiesPtrOutputWithContext(context.Context) FabricCreationInputPropertiesPtrOutput
}

type fabricCreationInputPropertiesPtrType FabricCreationInputPropertiesArgs

func FabricCreationInputPropertiesPtr(v *FabricCreationInputPropertiesArgs) FabricCreationInputPropertiesPtrInput {
	return (*fabricCreationInputPropertiesPtrType)(v)
}

func (*fabricCreationInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FabricCreationInputProperties)(nil)).Elem()
}

func (i *fabricCreationInputPropertiesPtrType) ToFabricCreationInputPropertiesPtrOutput() FabricCreationInputPropertiesPtrOutput {
	return i.ToFabricCreationInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *fabricCreationInputPropertiesPtrType) ToFabricCreationInputPropertiesPtrOutputWithContext(ctx context.Context) FabricCreationInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricCreationInputPropertiesPtrOutput)
}

// Properties of site details provided during the time of site creation.
type FabricCreationInputPropertiesOutput struct{ *pulumi.OutputState }

func (FabricCreationInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FabricCreationInputProperties)(nil)).Elem()
}

func (o FabricCreationInputPropertiesOutput) ToFabricCreationInputPropertiesOutput() FabricCreationInputPropertiesOutput {
	return o
}

func (o FabricCreationInputPropertiesOutput) ToFabricCreationInputPropertiesOutputWithContext(ctx context.Context) FabricCreationInputPropertiesOutput {
	return o
}

func (o FabricCreationInputPropertiesOutput) ToFabricCreationInputPropertiesPtrOutput() FabricCreationInputPropertiesPtrOutput {
	return o.ToFabricCreationInputPropertiesPtrOutputWithContext(context.Background())
}

func (o FabricCreationInputPropertiesOutput) ToFabricCreationInputPropertiesPtrOutputWithContext(ctx context.Context) FabricCreationInputPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FabricCreationInputProperties) *FabricCreationInputProperties {
		return &v
	}).(FabricCreationInputPropertiesPtrOutput)
}

// Fabric provider specific creation input.
func (o FabricCreationInputPropertiesOutput) CustomDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v FabricCreationInputProperties) interface{} { return v.CustomDetails }).(pulumi.AnyOutput)
}

type FabricCreationInputPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FabricCreationInputPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FabricCreationInputProperties)(nil)).Elem()
}

func (o FabricCreationInputPropertiesPtrOutput) ToFabricCreationInputPropertiesPtrOutput() FabricCreationInputPropertiesPtrOutput {
	return o
}

func (o FabricCreationInputPropertiesPtrOutput) ToFabricCreationInputPropertiesPtrOutputWithContext(ctx context.Context) FabricCreationInputPropertiesPtrOutput {
	return o
}

func (o FabricCreationInputPropertiesPtrOutput) Elem() FabricCreationInputPropertiesOutput {
	return o.ApplyT(func(v *FabricCreationInputProperties) FabricCreationInputProperties {
		if v != nil {
			return *v
		}
		var ret FabricCreationInputProperties
		return ret
	}).(FabricCreationInputPropertiesOutput)
}

// Fabric provider specific creation input.
func (o FabricCreationInputPropertiesPtrOutput) CustomDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *FabricCreationInputProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.CustomDetails
	}).(pulumi.AnyOutput)
}

// Fabric properties.
type FabricPropertiesResponse struct {
	// BCDR state of the fabric.
	BcdrState *string `pulumi:"bcdrState"`
	// Fabric specific settings.
	CustomDetails interface{} `pulumi:"customDetails"`
	// Encryption details for the fabric.
	EncryptionDetails *EncryptionDetailsResponse `pulumi:"encryptionDetails"`
	// Friendly name of the fabric.
	FriendlyName *string `pulumi:"friendlyName"`
	// Health of fabric.
	Health *string `pulumi:"health"`
	// Fabric health error details.
	HealthErrorDetails []HealthErrorResponse `pulumi:"healthErrorDetails"`
	// Dra Registration Id.
	InternalIdentifier *string `pulumi:"internalIdentifier"`
	// Rollover encryption details for the fabric.
	RolloverEncryptionDetails *EncryptionDetailsResponse `pulumi:"rolloverEncryptionDetails"`
}

// Fabric properties.
type FabricPropertiesResponseOutput struct{ *pulumi.OutputState }

func (FabricPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FabricPropertiesResponse)(nil)).Elem()
}

func (o FabricPropertiesResponseOutput) ToFabricPropertiesResponseOutput() FabricPropertiesResponseOutput {
	return o
}

func (o FabricPropertiesResponseOutput) ToFabricPropertiesResponseOutputWithContext(ctx context.Context) FabricPropertiesResponseOutput {
	return o
}

// BCDR state of the fabric.
func (o FabricPropertiesResponseOutput) BcdrState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *string { return v.BcdrState }).(pulumi.StringPtrOutput)
}

// Fabric specific settings.
func (o FabricPropertiesResponseOutput) CustomDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) interface{} { return v.CustomDetails }).(pulumi.AnyOutput)
}

// Encryption details for the fabric.
func (o FabricPropertiesResponseOutput) EncryptionDetails() EncryptionDetailsResponsePtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *EncryptionDetailsResponse { return v.EncryptionDetails }).(EncryptionDetailsResponsePtrOutput)
}

// Friendly name of the fabric.
func (o FabricPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Health of fabric.
func (o FabricPropertiesResponseOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *string { return v.Health }).(pulumi.StringPtrOutput)
}

// Fabric health error details.
func (o FabricPropertiesResponseOutput) HealthErrorDetails() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) []HealthErrorResponse { return v.HealthErrorDetails }).(HealthErrorResponseArrayOutput)
}

// Dra Registration Id.
func (o FabricPropertiesResponseOutput) InternalIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *string { return v.InternalIdentifier }).(pulumi.StringPtrOutput)
}

// Rollover encryption details for the fabric.
func (o FabricPropertiesResponseOutput) RolloverEncryptionDetails() EncryptionDetailsResponsePtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *EncryptionDetailsResponse { return v.RolloverEncryptionDetails }).(EncryptionDetailsResponsePtrOutput)
}

// Base class for generic container of backup items
type GenericContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'GenericContainer'.
	ContainerType string `pulumi:"containerType"`
	// Extended information (not returned in List container API calls)
	ExtendedInformation *GenericContainerExtendedInfo `pulumi:"extendedInformation"`
	// Name of the container's fabric
	FabricName *string `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// Container extended information
type GenericContainerExtendedInfo struct {
	// Container identity information
	ContainerIdentityInfo *ContainerIdentityInfo `pulumi:"containerIdentityInfo"`
	// Public key of container cert
	RawCertData *string `pulumi:"rawCertData"`
	// Azure Backup Service Endpoints for the container
	ServiceEndpoints map[string]string `pulumi:"serviceEndpoints"`
}

// Container extended information
type GenericContainerExtendedInfoResponse struct {
	// Container identity information
	ContainerIdentityInfo *ContainerIdentityInfoResponse `pulumi:"containerIdentityInfo"`
	// Public key of container cert
	RawCertData *string `pulumi:"rawCertData"`
	// Azure Backup Service Endpoints for the container
	ServiceEndpoints map[string]string `pulumi:"serviceEndpoints"`
}

// Base class for generic container of backup items
type GenericContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'GenericContainer'.
	ContainerType string `pulumi:"containerType"`
	// Extended information (not returned in List container API calls)
	ExtendedInformation *GenericContainerExtendedInfoResponse `pulumi:"extendedInformation"`
	// Name of the container's fabric
	FabricName *string `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// Base class for backup items.
type GenericProtectedItem struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Name of this backup item's fabric.
	FabricName *string `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Data Plane Service ID of the protected item.
	ProtectedItemId *float64 `pulumi:"protectedItemId"`
	// backup item type.
	// Expected value is 'GenericProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Loosely coupled (type, value) associations (example - parent of a protected item)
	SourceAssociations map[string]string `pulumi:"sourceAssociations"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Base class for backup items.
type GenericProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Name of this backup item's fabric.
	FabricName *string `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Data Plane Service ID of the protected item.
	ProtectedItemId *float64 `pulumi:"protectedItemId"`
	// backup item type.
	// Expected value is 'GenericProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Loosely coupled (type, value) associations (example - parent of a protected item)
	SourceAssociations map[string]string `pulumi:"sourceAssociations"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Azure VM (Mercury) workload-specific backup policy.
type GenericProtectionPolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'GenericProtectionPolicy'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of this policy's fabric.
	FabricName *string `pulumi:"fabricName"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// List of sub-protection policies which includes schedule and retention
	SubProtectionPolicy []SubProtectionPolicy `pulumi:"subProtectionPolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
}

// Azure VM (Mercury) workload-specific backup policy.
type GenericProtectionPolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'GenericProtectionPolicy'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of this policy's fabric.
	FabricName *string `pulumi:"fabricName"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// List of sub-protection policies which includes schedule and retention
	SubProtectionPolicy []SubProtectionPolicyResponse `pulumi:"subProtectionPolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
}

// Health Error.
type HealthErrorResponse struct {
	// Error creation time (UTC).
	CreationTimeUtc *string `pulumi:"creationTimeUtc"`
	// Value indicating whether the health error is customer resolvable.
	CustomerResolvability *string `pulumi:"customerResolvability"`
	// ID of the entity.
	EntityId *string `pulumi:"entityId"`
	// Category of error.
	ErrorCategory *string `pulumi:"errorCategory"`
	// Error code.
	ErrorCode *string `pulumi:"errorCode"`
	// The health error unique id.
	ErrorId *string `pulumi:"errorId"`
	// Level of error.
	ErrorLevel *string `pulumi:"errorLevel"`
	// Error message.
	ErrorMessage *string `pulumi:"errorMessage"`
	// Source of error.
	ErrorSource *string `pulumi:"errorSource"`
	// Type of error.
	ErrorType *string `pulumi:"errorType"`
	// The inner health errors. HealthError having a list of HealthError as child errors is problematic. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.
	InnerHealthErrors []InnerHealthErrorResponse `pulumi:"innerHealthErrors"`
	// Possible causes of error.
	PossibleCauses *string `pulumi:"possibleCauses"`
	// Recommended action to resolve error.
	RecommendedAction *string `pulumi:"recommendedAction"`
	// DRA error message.
	RecoveryProviderErrorMessage *string `pulumi:"recoveryProviderErrorMessage"`
	// Summary message of the entity.
	SummaryMessage *string `pulumi:"summaryMessage"`
}

// Health Error.
type HealthErrorResponseOutput struct{ *pulumi.OutputState }

func (HealthErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthErrorResponse)(nil)).Elem()
}

func (o HealthErrorResponseOutput) ToHealthErrorResponseOutput() HealthErrorResponseOutput {
	return o
}

func (o HealthErrorResponseOutput) ToHealthErrorResponseOutputWithContext(ctx context.Context) HealthErrorResponseOutput {
	return o
}

// Error creation time (UTC).
func (o HealthErrorResponseOutput) CreationTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.CreationTimeUtc }).(pulumi.StringPtrOutput)
}

// Value indicating whether the health error is customer resolvable.
func (o HealthErrorResponseOutput) CustomerResolvability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.CustomerResolvability }).(pulumi.StringPtrOutput)
}

// ID of the entity.
func (o HealthErrorResponseOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// Category of error.
func (o HealthErrorResponseOutput) ErrorCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorCategory }).(pulumi.StringPtrOutput)
}

// Error code.
func (o HealthErrorResponseOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorCode }).(pulumi.StringPtrOutput)
}

// The health error unique id.
func (o HealthErrorResponseOutput) ErrorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorId }).(pulumi.StringPtrOutput)
}

// Level of error.
func (o HealthErrorResponseOutput) ErrorLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorLevel }).(pulumi.StringPtrOutput)
}

// Error message.
func (o HealthErrorResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Source of error.
func (o HealthErrorResponseOutput) ErrorSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorSource }).(pulumi.StringPtrOutput)
}

// Type of error.
func (o HealthErrorResponseOutput) ErrorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorType }).(pulumi.StringPtrOutput)
}

// The inner health errors. HealthError having a list of HealthError as child errors is problematic. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.
func (o HealthErrorResponseOutput) InnerHealthErrors() InnerHealthErrorResponseArrayOutput {
	return o.ApplyT(func(v HealthErrorResponse) []InnerHealthErrorResponse { return v.InnerHealthErrors }).(InnerHealthErrorResponseArrayOutput)
}

// Possible causes of error.
func (o HealthErrorResponseOutput) PossibleCauses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.PossibleCauses }).(pulumi.StringPtrOutput)
}

// Recommended action to resolve error.
func (o HealthErrorResponseOutput) RecommendedAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.RecommendedAction }).(pulumi.StringPtrOutput)
}

// DRA error message.
func (o HealthErrorResponseOutput) RecoveryProviderErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.RecoveryProviderErrorMessage }).(pulumi.StringPtrOutput)
}

// Summary message of the entity.
func (o HealthErrorResponseOutput) SummaryMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.SummaryMessage }).(pulumi.StringPtrOutput)
}

type HealthErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (HealthErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthErrorResponse)(nil)).Elem()
}

func (o HealthErrorResponseArrayOutput) ToHealthErrorResponseArrayOutput() HealthErrorResponseArrayOutput {
	return o
}

func (o HealthErrorResponseArrayOutput) ToHealthErrorResponseArrayOutputWithContext(ctx context.Context) HealthErrorResponseArrayOutput {
	return o
}

func (o HealthErrorResponseArrayOutput) Index(i pulumi.IntInput) HealthErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HealthErrorResponse {
		return vs[0].([]HealthErrorResponse)[vs[1].(int)]
	}).(HealthErrorResponseOutput)
}

type HourlySchedule struct {
	// Interval at which backup needs to be triggered. For hourly the value
	//  can be 4/6/8/12
	Interval *int `pulumi:"interval"`
	// To specify duration of the backup window
	ScheduleWindowDuration *int `pulumi:"scheduleWindowDuration"`
	// To specify start time of the backup window
	ScheduleWindowStartTime *string `pulumi:"scheduleWindowStartTime"`
}

type HourlyScheduleResponse struct {
	// Interval at which backup needs to be triggered. For hourly the value
	//  can be 4/6/8/12
	Interval *int `pulumi:"interval"`
	// To specify duration of the backup window
	ScheduleWindowDuration *int `pulumi:"scheduleWindowDuration"`
	// To specify start time of the backup window
	ScheduleWindowStartTime *string `pulumi:"scheduleWindowStartTime"`
}

// Hyper-V host details.
type HyperVHostDetailsResponse struct {
	// The Hyper-V host Id.
	Id string `pulumi:"id"`
	// The Mars agent version.
	MarsAgentVersion string `pulumi:"marsAgentVersion"`
	// The Hyper-V host name.
	Name string `pulumi:"name"`
}

// Disk input details.
type HyperVReplicaAzureDiskInputDetails struct {
	// The DiskEncryptionSet ARM ID.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The DiskId.
	DiskId *string `pulumi:"diskId"`
	// The DiskType.
	DiskType *string `pulumi:"diskType"`
	// The LogStorageAccountId.
	LogStorageAccountId *string `pulumi:"logStorageAccountId"`
}

// HyperVReplicaAzure specific enable protection input.
type HyperVReplicaAzureEnableProtectionInput struct {
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The DiskType.
	DiskType *string `pulumi:"diskType"`
	// The list of VHD Ids of disks to be protected.
	DisksToInclude []string `pulumi:"disksToInclude"`
	// The disks to include list for managed disks.
	DisksToIncludeForManagedDisks []HyperVReplicaAzureDiskInputDetails `pulumi:"disksToIncludeForManagedDisks"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
	EnableRdpOnTargetOption *string `pulumi:"enableRdpOnTargetOption"`
	// The Hyper-V host VM Id.
	HvHostVmId *string `pulumi:"hvHostVmId"`
	// The class type.
	// Expected value is 'HyperVReplicaAzure'.
	InstanceType string `pulumi:"instanceType"`
	// License type.
	LicenseType *string `pulumi:"licenseType"`
	// The storage account to be used for logging during replication.
	LogStorageAccountId *string `pulumi:"logStorageAccountId"`
	// The OS type associated with VM.
	OsType *string `pulumi:"osType"`
	// The tags for the seed managed disks.
	SeedManagedDiskTags map[string]string `pulumi:"seedManagedDiskTags"`
	// The SQL Server license type.
	SqlServerLicenseType *string `pulumi:"sqlServerLicenseType"`
	// The target availability set ARM Id for resource manager deployment.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The selected target Azure network Id.
	TargetAzureNetworkId *string `pulumi:"targetAzureNetworkId"`
	// The selected target Azure subnet Id.
	TargetAzureSubnetId *string `pulumi:"targetAzureSubnetId"`
	// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
	TargetAzureV1ResourceGroupId *string `pulumi:"targetAzureV1ResourceGroupId"`
	// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
	TargetAzureV2ResourceGroupId *string `pulumi:"targetAzureV2ResourceGroupId"`
	// The target azure VM Name.
	TargetAzureVmName *string `pulumi:"targetAzureVmName"`
	// The tags for the target managed disks.
	TargetManagedDiskTags map[string]string `pulumi:"targetManagedDiskTags"`
	// The tags for the target NICs.
	TargetNicTags map[string]string `pulumi:"targetNicTags"`
	// The proximity placement group ARM Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// The storage account Id.
	TargetStorageAccountId *string `pulumi:"targetStorageAccountId"`
	// The target VM size.
	TargetVmSize *string `pulumi:"targetVmSize"`
	// The target VM tags.
	TargetVmTags map[string]string `pulumi:"targetVmTags"`
	// A value indicating whether managed disks should be used during failover.
	UseManagedDisks *string `pulumi:"useManagedDisks"`
	// A value indicating whether managed disks should be used during replication.
	UseManagedDisksForReplication *string `pulumi:"useManagedDisksForReplication"`
	// The OS disk VHD id associated with VM.
	VhdId *string `pulumi:"vhdId"`
	// The VM Name.
	VmName *string `pulumi:"vmName"`
}

// Hyper-V Managed disk details.
type HyperVReplicaAzureManagedDiskDetailsResponse struct {
	// The disk encryption set ARM Id.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The disk Id.
	DiskId *string `pulumi:"diskId"`
	// The replica disk type.
	ReplicaDiskType *string `pulumi:"replicaDiskType"`
	// Seed managed disk Id.
	SeedManagedDiskId *string `pulumi:"seedManagedDiskId"`
}

// Hyper-V Replica Azure specific protection profile details.
type HyperVReplicaAzurePolicyDetailsResponse struct {
	// The active storage account Id.
	ActiveStorageAccountId *string `pulumi:"activeStorageAccountId"`
	// The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether encryption is enabled for virtual machines in this cloud.
	Encryption *string `pulumi:"encryption"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'HyperVReplicaAzure'.
	InstanceType string `pulumi:"instanceType"`
	// The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// The duration (in hours) to which point the recovery history needs to be maintained.
	RecoveryPointHistoryDurationInHours *int `pulumi:"recoveryPointHistoryDurationInHours"`
	// The replication interval.
	ReplicationInterval *int `pulumi:"replicationInterval"`
}

// Hyper-V Replica Azure specific input for creating a protection profile.
type HyperVReplicaAzurePolicyInput struct {
	// The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// The class type.
	// Expected value is 'HyperVReplicaAzure'.
	InstanceType string `pulumi:"instanceType"`
	// The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// The duration (in hours) to which point the recovery history needs to be maintained.
	RecoveryPointHistoryDuration *int `pulumi:"recoveryPointHistoryDuration"`
	// The replication interval.
	ReplicationInterval *int `pulumi:"replicationInterval"`
	// The list of storage accounts to which the VMs in the primary cloud can replicate to.
	StorageAccounts []string `pulumi:"storageAccounts"`
}

// Hyper V Replica Azure provider specific settings.
type HyperVReplicaAzureReplicationDetailsResponse struct {
	// Azure VM Disk details.
	AzureVmDiskDetails []AzureVmDiskDetailsResponse `pulumi:"azureVmDiskDetails"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
	EnableRdpOnTargetOption *string `pulumi:"enableRdpOnTargetOption"`
	// The encryption info.
	Encryption *string `pulumi:"encryption"`
	// Initial replication details.
	InitialReplicationDetails *InitialReplicationDetailsResponse `pulumi:"initialReplicationDetails"`
	// Gets the Instance type.
	// Expected value is 'HyperVReplicaAzure'.
	InstanceType string `pulumi:"instanceType"`
	// The last recovery point received time.
	LastRecoveryPointReceived string `pulumi:"lastRecoveryPointReceived"`
	// The Last replication time.
	LastReplicatedTime *string `pulumi:"lastReplicatedTime"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// License Type of the VM to be used.
	LicenseType *string `pulumi:"licenseType"`
	// The operating system info.
	OSDetails *OSDetailsResponse `pulumi:"oSDetails"`
	// The list of protected managed disks.
	ProtectedManagedDisks []HyperVReplicaAzureManagedDiskDetailsResponse `pulumi:"protectedManagedDisks"`
	// The recovery availability set Id.
	RecoveryAvailabilitySetId *string `pulumi:"recoveryAvailabilitySetId"`
	// The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
	RecoveryAzureLogStorageAccountId *string `pulumi:"recoveryAzureLogStorageAccountId"`
	// The target resource group Id.
	RecoveryAzureResourceGroupId *string `pulumi:"recoveryAzureResourceGroupId"`
	// The recovery Azure storage account.
	RecoveryAzureStorageAccount *string `pulumi:"recoveryAzureStorageAccount"`
	// The Recovery Azure VM size.
	RecoveryAzureVMSize *string `pulumi:"recoveryAzureVMSize"`
	// Recovery Azure given name.
	RecoveryAzureVmName *string `pulumi:"recoveryAzureVmName"`
	// Last RPO value.
	RpoInSeconds *float64 `pulumi:"rpoInSeconds"`
	// The tags for the seed managed disks.
	SeedManagedDiskTags map[string]string `pulumi:"seedManagedDiskTags"`
	// The selected recovery azure network Id.
	SelectedRecoveryAzureNetworkId *string `pulumi:"selectedRecoveryAzureNetworkId"`
	// The selected source nic Id which will be used as the primary nic during failover.
	SelectedSourceNicId *string `pulumi:"selectedSourceNicId"`
	// The CPU count of the VM on the primary side.
	SourceVmCpuCount *int `pulumi:"sourceVmCpuCount"`
	// The RAM size of the VM on the primary side.
	SourceVmRamSizeInMB *int `pulumi:"sourceVmRamSizeInMB"`
	// The SQL Server license type.
	SqlServerLicenseType *string `pulumi:"sqlServerLicenseType"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The tags for the target managed disks.
	TargetManagedDiskTags map[string]string `pulumi:"targetManagedDiskTags"`
	// The tags for the target NICs.
	TargetNicTags map[string]string `pulumi:"targetNicTags"`
	// The target proximity placement group Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// The target VM tags.
	TargetVmTags map[string]string `pulumi:"targetVmTags"`
	// A value indicating whether managed disks should be used during failover.
	UseManagedDisks *string `pulumi:"useManagedDisks"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// Base class for HyperVReplica policy details.
type HyperVReplicaBasePolicyDetailsResponse struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'HyperVReplicaBasePolicyDetails'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud.
	ReplicaDeletionOption *string `pulumi:"replicaDeletionOption"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// Hyper V replica provider specific settings base class.
type HyperVReplicaBaseReplicationDetailsResponse struct {
	// Initial replication details.
	InitialReplicationDetails *InitialReplicationDetailsResponse `pulumi:"initialReplicationDetails"`
	// Gets the Instance type.
	// Expected value is 'HyperVReplicaBaseReplicationDetails'.
	InstanceType string `pulumi:"instanceType"`
	// The Last replication time.
	LastReplicatedTime *string `pulumi:"lastReplicatedTime"`
	// VM disk details.
	VMDiskDetails []DiskDetailsResponse `pulumi:"vMDiskDetails"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// Hyper-V Replica Blue specific protection profile details.
type HyperVReplicaBluePolicyDetailsResponse struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'HyperVReplica2012R2'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
	ReplicaDeletionOption *string `pulumi:"replicaDeletionOption"`
	// A value indicating the replication interval.
	ReplicationFrequencyInSeconds *int `pulumi:"replicationFrequencyInSeconds"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// HyperV Replica Blue policy input.
type HyperVReplicaBluePolicyInput struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// Expected value is 'HyperVReplica2012R2'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted.
	ReplicaDeletion *string `pulumi:"replicaDeletion"`
	// A value indicating the replication interval.
	ReplicationFrequencyInSeconds *int `pulumi:"replicationFrequencyInSeconds"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// HyperV replica 2012 R2 (Blue) replication details.
type HyperVReplicaBlueReplicationDetailsResponse struct {
	// Initial replication details.
	InitialReplicationDetails *InitialReplicationDetailsResponse `pulumi:"initialReplicationDetails"`
	// Gets the Instance type.
	// Expected value is 'HyperVReplica2012R2'.
	InstanceType string `pulumi:"instanceType"`
	// The Last replication time.
	LastReplicatedTime *string `pulumi:"lastReplicatedTime"`
	// VM disk details.
	VMDiskDetails []DiskDetailsResponse `pulumi:"vMDiskDetails"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// Hyper-V Replica Blue specific protection profile details.
type HyperVReplicaPolicyDetailsResponse struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'HyperVReplica2012'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
	ReplicaDeletionOption *string `pulumi:"replicaDeletionOption"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// Hyper-V Replica specific policy Input.
type HyperVReplicaPolicyInput struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// The class type.
	// Expected value is 'HyperVReplica2012'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted.
	ReplicaDeletion *string `pulumi:"replicaDeletion"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// HyperV replica 2012 replication details.
type HyperVReplicaReplicationDetailsResponse struct {
	// Initial replication details.
	InitialReplicationDetails *InitialReplicationDetailsResponse `pulumi:"initialReplicationDetails"`
	// Gets the Instance type.
	// Expected value is 'HyperVReplica2012'.
	InstanceType string `pulumi:"instanceType"`
	// The Last replication time.
	LastReplicatedTime *string `pulumi:"lastReplicatedTime"`
	// VM disk details.
	VMDiskDetails []DiskDetailsResponse `pulumi:"vMDiskDetails"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// HyperVSite fabric specific details.
type HyperVSiteDetailsResponse struct {
	// The list of Hyper-V hosts associated with the fabric.
	HyperVHosts []HyperVHostDetailsResponse `pulumi:"hyperVHosts"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'HyperVSite'.
	InstanceType string `pulumi:"instanceType"`
}

type IPConfigDetailsResponse struct {
	IpAddressType                   *string  `pulumi:"ipAddressType"`
	IsPrimary                       *bool    `pulumi:"isPrimary"`
	IsSeletedForFailover            *bool    `pulumi:"isSeletedForFailover"`
	Name                            *string  `pulumi:"name"`
	RecoveryIPAddressType           *string  `pulumi:"recoveryIPAddressType"`
	RecoveryLBBackendAddressPoolIds []string `pulumi:"recoveryLBBackendAddressPoolIds"`
	RecoveryPublicIPAddressId       *string  `pulumi:"recoveryPublicIPAddressId"`
	RecoveryStaticIPAddress         *string  `pulumi:"recoveryStaticIPAddress"`
	RecoverySubnetName              *string  `pulumi:"recoverySubnetName"`
	StaticIPAddress                 *string  `pulumi:"staticIPAddress"`
	SubnetName                      *string  `pulumi:"subnetName"`
	TfoLBBackendAddressPoolIds      []string `pulumi:"tfoLBBackendAddressPoolIds"`
	TfoPublicIPAddressId            *string  `pulumi:"tfoPublicIPAddressId"`
	TfoStaticIPAddress              *string  `pulumi:"tfoStaticIPAddress"`
	TfoSubnetName                   *string  `pulumi:"tfoSubnetName"`
}

// IaaS VM workload-specific container.
type IaaSVMContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'IaasVMContainer'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// IaaS VM workload-specific container.
type IaaSVMContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'IaasVMContainer'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// Identity for the resource.
type IdentityData struct {
	// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
	Type string `pulumi:"type"`
	// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]interface{} `pulumi:"userAssignedIdentities"`
}

// IdentityDataInput is an input type that accepts IdentityDataArgs and IdentityDataOutput values.
// You can construct a concrete instance of `IdentityDataInput` via:
//
//	IdentityDataArgs{...}
type IdentityDataInput interface {
	pulumi.Input

	ToIdentityDataOutput() IdentityDataOutput
	ToIdentityDataOutputWithContext(context.Context) IdentityDataOutput
}

// Identity for the resource.
type IdentityDataArgs struct {
	// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
	Type pulumi.StringInput `pulumi:"type"`
	// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.MapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityData)(nil)).Elem()
}

func (i IdentityDataArgs) ToIdentityDataOutput() IdentityDataOutput {
	return i.ToIdentityDataOutputWithContext(context.Background())
}

func (i IdentityDataArgs) ToIdentityDataOutputWithContext(ctx context.Context) IdentityDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityDataOutput)
}

func (i IdentityDataArgs) ToIdentityDataPtrOutput() IdentityDataPtrOutput {
	return i.ToIdentityDataPtrOutputWithContext(context.Background())
}

func (i IdentityDataArgs) ToIdentityDataPtrOutputWithContext(ctx context.Context) IdentityDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityDataOutput).ToIdentityDataPtrOutputWithContext(ctx)
}

// IdentityDataPtrInput is an input type that accepts IdentityDataArgs, IdentityDataPtr and IdentityDataPtrOutput values.
// You can construct a concrete instance of `IdentityDataPtrInput` via:
//
//	        IdentityDataArgs{...}
//
//	or:
//
//	        nil
type IdentityDataPtrInput interface {
	pulumi.Input

	ToIdentityDataPtrOutput() IdentityDataPtrOutput
	ToIdentityDataPtrOutputWithContext(context.Context) IdentityDataPtrOutput
}

type identityDataPtrType IdentityDataArgs

func IdentityDataPtr(v *IdentityDataArgs) IdentityDataPtrInput {
	return (*identityDataPtrType)(v)
}

func (*identityDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityData)(nil)).Elem()
}

func (i *identityDataPtrType) ToIdentityDataPtrOutput() IdentityDataPtrOutput {
	return i.ToIdentityDataPtrOutputWithContext(context.Background())
}

func (i *identityDataPtrType) ToIdentityDataPtrOutputWithContext(ctx context.Context) IdentityDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityDataPtrOutput)
}

// Identity for the resource.
type IdentityDataOutput struct{ *pulumi.OutputState }

func (IdentityDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityData)(nil)).Elem()
}

func (o IdentityDataOutput) ToIdentityDataOutput() IdentityDataOutput {
	return o
}

func (o IdentityDataOutput) ToIdentityDataOutputWithContext(ctx context.Context) IdentityDataOutput {
	return o
}

func (o IdentityDataOutput) ToIdentityDataPtrOutput() IdentityDataPtrOutput {
	return o.ToIdentityDataPtrOutputWithContext(context.Background())
}

func (o IdentityDataOutput) ToIdentityDataPtrOutputWithContext(ctx context.Context) IdentityDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityData) *IdentityData {
		return &v
	}).(IdentityDataPtrOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o IdentityDataOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityData) string { return v.Type }).(pulumi.StringOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityDataOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v IdentityData) map[string]interface{} { return v.UserAssignedIdentities }).(pulumi.MapOutput)
}

type IdentityDataPtrOutput struct{ *pulumi.OutputState }

func (IdentityDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityData)(nil)).Elem()
}

func (o IdentityDataPtrOutput) ToIdentityDataPtrOutput() IdentityDataPtrOutput {
	return o
}

func (o IdentityDataPtrOutput) ToIdentityDataPtrOutputWithContext(ctx context.Context) IdentityDataPtrOutput {
	return o
}

func (o IdentityDataPtrOutput) Elem() IdentityDataOutput {
	return o.ApplyT(func(v *IdentityData) IdentityData {
		if v != nil {
			return *v
		}
		var ret IdentityData
		return ret
	}).(IdentityDataOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o IdentityDataPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityData) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityDataPtrOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v *IdentityData) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.MapOutput)
}

// Identity for the resource.
type IdentityDataResponse struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
	Type string `pulumi:"type"`
	// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]UserIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Identity for the resource.
type IdentityDataResponseOutput struct{ *pulumi.OutputState }

func (IdentityDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityDataResponse)(nil)).Elem()
}

func (o IdentityDataResponseOutput) ToIdentityDataResponseOutput() IdentityDataResponseOutput {
	return o
}

func (o IdentityDataResponseOutput) ToIdentityDataResponseOutputWithContext(ctx context.Context) IdentityDataResponseOutput {
	return o
}

// The principal ID of resource identity.
func (o IdentityDataResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityDataResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o IdentityDataResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityDataResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o IdentityDataResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityDataResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityDataResponseOutput) UserAssignedIdentities() UserIdentityResponseMapOutput {
	return o.ApplyT(func(v IdentityDataResponse) map[string]UserIdentityResponse { return v.UserAssignedIdentities }).(UserIdentityResponseMapOutput)
}

type IdentityDataResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityDataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityDataResponse)(nil)).Elem()
}

func (o IdentityDataResponsePtrOutput) ToIdentityDataResponsePtrOutput() IdentityDataResponsePtrOutput {
	return o
}

func (o IdentityDataResponsePtrOutput) ToIdentityDataResponsePtrOutputWithContext(ctx context.Context) IdentityDataResponsePtrOutput {
	return o
}

func (o IdentityDataResponsePtrOutput) Elem() IdentityDataResponseOutput {
	return o.ApplyT(func(v *IdentityDataResponse) IdentityDataResponse {
		if v != nil {
			return *v
		}
		var ret IdentityDataResponse
		return ret
	}).(IdentityDataResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityDataResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityDataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityDataResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityDataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o IdentityDataResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityDataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityDataResponsePtrOutput) UserAssignedIdentities() UserIdentityResponseMapOutput {
	return o.ApplyT(func(v *IdentityDataResponse) map[string]UserIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserIdentityResponseMapOutput)
}

// Identity provider details.
type IdentityProviderDetailsResponse struct {
	// The base authority for Azure Active Directory authentication.
	AadAuthority *string `pulumi:"aadAuthority"`
	// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	ApplicationId *string `pulumi:"applicationId"`
	// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	Audience *string `pulumi:"audience"`
	// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	ObjectId *string `pulumi:"objectId"`
	// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	TenantId *string `pulumi:"tenantId"`
}

// Identity provider details.
type IdentityProviderDetailsResponseOutput struct{ *pulumi.OutputState }

func (IdentityProviderDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderDetailsResponse)(nil)).Elem()
}

func (o IdentityProviderDetailsResponseOutput) ToIdentityProviderDetailsResponseOutput() IdentityProviderDetailsResponseOutput {
	return o
}

func (o IdentityProviderDetailsResponseOutput) ToIdentityProviderDetailsResponseOutputWithContext(ctx context.Context) IdentityProviderDetailsResponseOutput {
	return o
}

// The base authority for Azure Active Directory authentication.
func (o IdentityProviderDetailsResponseOutput) AadAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderDetailsResponse) *string { return v.AadAuthority }).(pulumi.StringPtrOutput)
}

// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponseOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderDetailsResponse) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponseOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderDetailsResponse) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderDetailsResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderDetailsResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type IdentityProviderDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityProviderDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviderDetailsResponse)(nil)).Elem()
}

func (o IdentityProviderDetailsResponsePtrOutput) ToIdentityProviderDetailsResponsePtrOutput() IdentityProviderDetailsResponsePtrOutput {
	return o
}

func (o IdentityProviderDetailsResponsePtrOutput) ToIdentityProviderDetailsResponsePtrOutputWithContext(ctx context.Context) IdentityProviderDetailsResponsePtrOutput {
	return o
}

func (o IdentityProviderDetailsResponsePtrOutput) Elem() IdentityProviderDetailsResponseOutput {
	return o.ApplyT(func(v *IdentityProviderDetailsResponse) IdentityProviderDetailsResponse {
		if v != nil {
			return *v
		}
		var ret IdentityProviderDetailsResponse
		return ret
	}).(IdentityProviderDetailsResponseOutput)
}

// The base authority for Azure Active Directory authentication.
func (o IdentityProviderDetailsResponsePtrOutput) AadAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadAuthority
	}).(pulumi.StringPtrOutput)
}

// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponsePtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponsePtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Identity provider input.
type IdentityProviderInput struct {
	// The base authority for Azure Active Directory authentication.
	AadAuthority string `pulumi:"aadAuthority"`
	// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	ApplicationId string `pulumi:"applicationId"`
	// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	Audience string `pulumi:"audience"`
	// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	ObjectId string `pulumi:"objectId"`
	// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	TenantId string `pulumi:"tenantId"`
}

// IdentityProviderInputInput is an input type that accepts IdentityProviderInputArgs and IdentityProviderInputOutput values.
// You can construct a concrete instance of `IdentityProviderInputInput` via:
//
//	IdentityProviderInputArgs{...}
type IdentityProviderInputInput interface {
	pulumi.Input

	ToIdentityProviderInputOutput() IdentityProviderInputOutput
	ToIdentityProviderInputOutputWithContext(context.Context) IdentityProviderInputOutput
}

// Identity provider input.
type IdentityProviderInputArgs struct {
	// The base authority for Azure Active Directory authentication.
	AadAuthority pulumi.StringInput `pulumi:"aadAuthority"`
	// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	Audience pulumi.StringInput `pulumi:"audience"`
	// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (IdentityProviderInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderInput)(nil)).Elem()
}

func (i IdentityProviderInputArgs) ToIdentityProviderInputOutput() IdentityProviderInputOutput {
	return i.ToIdentityProviderInputOutputWithContext(context.Background())
}

func (i IdentityProviderInputArgs) ToIdentityProviderInputOutputWithContext(ctx context.Context) IdentityProviderInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderInputOutput)
}

func (i IdentityProviderInputArgs) ToIdentityProviderInputPtrOutput() IdentityProviderInputPtrOutput {
	return i.ToIdentityProviderInputPtrOutputWithContext(context.Background())
}

func (i IdentityProviderInputArgs) ToIdentityProviderInputPtrOutputWithContext(ctx context.Context) IdentityProviderInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderInputOutput).ToIdentityProviderInputPtrOutputWithContext(ctx)
}

// IdentityProviderInputPtrInput is an input type that accepts IdentityProviderInputArgs, IdentityProviderInputPtr and IdentityProviderInputPtrOutput values.
// You can construct a concrete instance of `IdentityProviderInputPtrInput` via:
//
//	        IdentityProviderInputArgs{...}
//
//	or:
//
//	        nil
type IdentityProviderInputPtrInput interface {
	pulumi.Input

	ToIdentityProviderInputPtrOutput() IdentityProviderInputPtrOutput
	ToIdentityProviderInputPtrOutputWithContext(context.Context) IdentityProviderInputPtrOutput
}

type identityProviderInputPtrType IdentityProviderInputArgs

func IdentityProviderInputPtr(v *IdentityProviderInputArgs) IdentityProviderInputPtrInput {
	return (*identityProviderInputPtrType)(v)
}

func (*identityProviderInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviderInput)(nil)).Elem()
}

func (i *identityProviderInputPtrType) ToIdentityProviderInputPtrOutput() IdentityProviderInputPtrOutput {
	return i.ToIdentityProviderInputPtrOutputWithContext(context.Background())
}

func (i *identityProviderInputPtrType) ToIdentityProviderInputPtrOutputWithContext(ctx context.Context) IdentityProviderInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderInputPtrOutput)
}

// Identity provider input.
type IdentityProviderInputOutput struct{ *pulumi.OutputState }

func (IdentityProviderInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderInput)(nil)).Elem()
}

func (o IdentityProviderInputOutput) ToIdentityProviderInputOutput() IdentityProviderInputOutput {
	return o
}

func (o IdentityProviderInputOutput) ToIdentityProviderInputOutputWithContext(ctx context.Context) IdentityProviderInputOutput {
	return o
}

func (o IdentityProviderInputOutput) ToIdentityProviderInputPtrOutput() IdentityProviderInputPtrOutput {
	return o.ToIdentityProviderInputPtrOutputWithContext(context.Background())
}

func (o IdentityProviderInputOutput) ToIdentityProviderInputPtrOutputWithContext(ctx context.Context) IdentityProviderInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityProviderInput) *IdentityProviderInput {
		return &v
	}).(IdentityProviderInputPtrOutput)
}

// The base authority for Azure Active Directory authentication.
func (o IdentityProviderInputOutput) AadAuthority() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderInput) string { return v.AadAuthority }).(pulumi.StringOutput)
}

// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderInputOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderInput) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderInputOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderInput) string { return v.Audience }).(pulumi.StringOutput)
}

// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderInputOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderInput) string { return v.ObjectId }).(pulumi.StringOutput)
}

// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderInputOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderInput) string { return v.TenantId }).(pulumi.StringOutput)
}

type IdentityProviderInputPtrOutput struct{ *pulumi.OutputState }

func (IdentityProviderInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviderInput)(nil)).Elem()
}

func (o IdentityProviderInputPtrOutput) ToIdentityProviderInputPtrOutput() IdentityProviderInputPtrOutput {
	return o
}

func (o IdentityProviderInputPtrOutput) ToIdentityProviderInputPtrOutputWithContext(ctx context.Context) IdentityProviderInputPtrOutput {
	return o
}

func (o IdentityProviderInputPtrOutput) Elem() IdentityProviderInputOutput {
	return o.ApplyT(func(v *IdentityProviderInput) IdentityProviderInput {
		if v != nil {
			return *v
		}
		var ret IdentityProviderInput
		return ret
	}).(IdentityProviderInputOutput)
}

// The base authority for Azure Active Directory authentication.
func (o IdentityProviderInputPtrOutput) AadAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderInput) *string {
		if v == nil {
			return nil
		}
		return &v.AadAuthority
	}).(pulumi.StringPtrOutput)
}

// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderInputPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderInput) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderInputPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderInput) *string {
		if v == nil {
			return nil
		}
		return &v.Audience
	}).(pulumi.StringPtrOutput)
}

// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderInputPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderInput) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderInputPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderInput) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The details of the InMage agent.
type InMageAgentDetailsResponse struct {
	// Agent expiry date.
	AgentExpiryDate *string `pulumi:"agentExpiryDate"`
	// A value indicating whether installed agent needs to be updated.
	AgentUpdateStatus *string `pulumi:"agentUpdateStatus"`
	// The agent version.
	AgentVersion *string `pulumi:"agentVersion"`
	// A value indicating whether reboot is required after update is applied.
	PostUpdateRebootStatus *string `pulumi:"postUpdateRebootStatus"`
}

// Disk input details.
type InMageAzureV2DiskInputDetails struct {
	// The DiskEncryptionSet ARM ID.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The DiskId.
	DiskId *string `pulumi:"diskId"`
	// The DiskType.
	DiskType *string `pulumi:"diskType"`
	// The LogStorageAccountId.
	LogStorageAccountId *string `pulumi:"logStorageAccountId"`
}

// VMware Azure specific enable protection input.
type InMageAzureV2EnableProtectionInput struct {
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The DiskType.
	DiskType *string `pulumi:"diskType"`
	// The disks to include list.
	DisksToInclude []InMageAzureV2DiskInputDetails `pulumi:"disksToInclude"`
	// The selected option to enable RDP\SSH on target VM after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
	EnableRdpOnTargetOption *string `pulumi:"enableRdpOnTargetOption"`
	// The class type.
	// Expected value is 'InMageAzureV2'.
	InstanceType string `pulumi:"instanceType"`
	// License type.
	LicenseType *string `pulumi:"licenseType"`
	// The storage account to be used for logging during replication.
	LogStorageAccountId *string `pulumi:"logStorageAccountId"`
	// The Master target Id.
	MasterTargetId *string `pulumi:"masterTargetId"`
	// The multi VM group Id.
	MultiVmGroupId *string `pulumi:"multiVmGroupId"`
	// The multi VM group name.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// The Process Server Id.
	ProcessServerId *string `pulumi:"processServerId"`
	// The CS account Id.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
	// The tags for the seed managed disks.
	SeedManagedDiskTags map[string]string `pulumi:"seedManagedDiskTags"`
	// The SQL Server license type.
	SqlServerLicenseType *string `pulumi:"sqlServerLicenseType"`
	// The storage account Id.
	StorageAccountId *string `pulumi:"storageAccountId"`
	// The target availability set ARM Id for resource manager deployment.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The selected target Azure network Id.
	TargetAzureNetworkId *string `pulumi:"targetAzureNetworkId"`
	// The selected target Azure subnet Id.
	TargetAzureSubnetId *string `pulumi:"targetAzureSubnetId"`
	// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
	TargetAzureV1ResourceGroupId *string `pulumi:"targetAzureV1ResourceGroupId"`
	// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
	TargetAzureV2ResourceGroupId *string `pulumi:"targetAzureV2ResourceGroupId"`
	// The target azure VM Name.
	TargetAzureVmName *string `pulumi:"targetAzureVmName"`
	// The tags for the target managed disks.
	TargetManagedDiskTags map[string]string `pulumi:"targetManagedDiskTags"`
	// The tags for the target NICs.
	TargetNicTags map[string]string `pulumi:"targetNicTags"`
	// The proximity placement group ARM Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// The target VM size.
	TargetVmSize *string `pulumi:"targetVmSize"`
	// The target VM tags.
	TargetVmTags map[string]string `pulumi:"targetVmTags"`
}

// InMageAzureV2 Managed disk details.
type InMageAzureV2ManagedDiskDetailsResponse struct {
	// The DiskEncryptionSet ARM ID.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The disk id.
	DiskId *string `pulumi:"diskId"`
	// The replica disk type.
	ReplicaDiskType *string `pulumi:"replicaDiskType"`
	// Seed managed disk Id.
	SeedManagedDiskId *string `pulumi:"seedManagedDiskId"`
	// The target disk name.
	TargetDiskName *string `pulumi:"targetDiskName"`
}

// InMage Azure v2 specific protection profile details.
type InMageAzureV2PolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency in minutes.
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'InMageAzureV2'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// VMWare Azure specific policy Input.
type InMageAzureV2PolicyInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	// Expected value is 'InMageAzureV2'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// InMageAzureV2 protected disk details.
type InMageAzureV2ProtectedDiskDetailsResponse struct {
	// The disk capacity in bytes.
	DiskCapacityInBytes *float64 `pulumi:"diskCapacityInBytes"`
	// The disk id.
	DiskId *string `pulumi:"diskId"`
	// The disk name.
	DiskName *string `pulumi:"diskName"`
	// A value indicating whether disk is resized.
	DiskResized *string `pulumi:"diskResized"`
	// The disk file system capacity in bytes.
	FileSystemCapacityInBytes *float64 `pulumi:"fileSystemCapacityInBytes"`
	// The health error code for the disk.
	HealthErrorCode *string `pulumi:"healthErrorCode"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// The Progress Health.
	ProgressHealth *string `pulumi:"progressHealth"`
	// The Progress Status.
	ProgressStatus *string `pulumi:"progressStatus"`
	// The protection stage.
	ProtectionStage *string `pulumi:"protectionStage"`
	// The PS data transit in MB.
	PsDataInMegaBytes *float64 `pulumi:"psDataInMegaBytes"`
	// The resync duration in seconds.
	ResyncDurationInSeconds *float64 `pulumi:"resyncDurationInSeconds"`
	// The resync last 15 minutes transferred bytes.
	ResyncLast15MinutesTransferredBytes *float64 `pulumi:"resyncLast15MinutesTransferredBytes"`
	// The last data transfer time in UTC.
	ResyncLastDataTransferTimeUTC *string `pulumi:"resyncLastDataTransferTimeUTC"`
	// The resync processed bytes.
	ResyncProcessedBytes *float64 `pulumi:"resyncProcessedBytes"`
	// The resync progress percentage.
	ResyncProgressPercentage *int `pulumi:"resyncProgressPercentage"`
	// A value indicating whether resync is required for this disk.
	ResyncRequired *string `pulumi:"resyncRequired"`
	// The resync start time.
	ResyncStartTime *string `pulumi:"resyncStartTime"`
	// The resync total transferred bytes.
	ResyncTotalTransferredBytes *float64 `pulumi:"resyncTotalTransferredBytes"`
	// The RPO in seconds.
	RpoInSeconds *float64 `pulumi:"rpoInSeconds"`
	// The seconds to take for switch provider.
	SecondsToTakeSwitchProvider *float64 `pulumi:"secondsToTakeSwitchProvider"`
	// The source data transit in MB.
	SourceDataInMegaBytes *float64 `pulumi:"sourceDataInMegaBytes"`
	// The target data transit in MB.
	TargetDataInMegaBytes *float64 `pulumi:"targetDataInMegaBytes"`
}

// InMageAzureV2 provider specific settings.
type InMageAzureV2ReplicationDetailsResponse struct {
	// Agent expiry date.
	AgentExpiryDate *string `pulumi:"agentExpiryDate"`
	// The agent version.
	AgentVersion *string `pulumi:"agentVersion"`
	// Azure VM Disk details.
	AzureVMDiskDetails []AzureVmDiskDetailsResponse `pulumi:"azureVMDiskDetails"`
	// The target generation for this protected item.
	AzureVmGeneration *string `pulumi:"azureVmGeneration"`
	// The compressed data change rate in MB.
	CompressedDataRateInMB *float64 `pulumi:"compressedDataRateInMB"`
	// The datastores of the on-premise machine. Value can be list of strings that contain datastore names.
	Datastores []string `pulumi:"datastores"`
	// A value indicating the discovery type of the machine. Value can be vCenter or physical.
	DiscoveryType *string `pulumi:"discoveryType"`
	// A value indicating whether any disk is resized for this VM.
	DiskResized *string `pulumi:"diskResized"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
	EnableRdpOnTargetOption *string `pulumi:"enableRdpOnTargetOption"`
	// The firmware type of this protected item.
	FirmwareType *string `pulumi:"firmwareType"`
	// The infrastructure VM Id.
	InfrastructureVmId *string `pulumi:"infrastructureVmId"`
	// Gets the Instance type.
	// Expected value is 'InMageAzureV2'.
	InstanceType string `pulumi:"instanceType"`
	// The source IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// A value indicating whether additional IR stats are available or not.
	IsAdditionalStatsAvailable *bool `pulumi:"isAdditionalStatsAvailable"`
	// A value indicating whether installed agent needs to be updated.
	IsAgentUpdateRequired *string `pulumi:"isAgentUpdateRequired"`
	// A value indicating whether the source server requires a restart after update.
	IsRebootAfterUpdateRequired *string `pulumi:"isRebootAfterUpdateRequired"`
	// The last heartbeat received from the source server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The last recovery point received time.
	LastRecoveryPointReceived string `pulumi:"lastRecoveryPointReceived"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// The last update time received from on-prem components.
	LastUpdateReceivedTime *string `pulumi:"lastUpdateReceivedTime"`
	// License Type of the VM to be used.
	LicenseType *string `pulumi:"licenseType"`
	// The master target Id.
	MasterTargetId *string `pulumi:"masterTargetId"`
	// The multi vm group Id.
	MultiVmGroupId *string `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// A value indicating whether multi vm sync is enabled or disabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The id of the disk containing the OS.
	OsDiskId *string `pulumi:"osDiskId"`
	// The type of the OS on the VM.
	OsType *string `pulumi:"osType"`
	// The OS Version of the protected item.
	OsVersion *string `pulumi:"osVersion"`
	// The process server Id.
	ProcessServerId *string `pulumi:"processServerId"`
	// The process server name.
	ProcessServerName *string `pulumi:"processServerName"`
	// The list of protected disks.
	ProtectedDisks []InMageAzureV2ProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The list of protected managed disks.
	ProtectedManagedDisks []InMageAzureV2ManagedDiskDetailsResponse `pulumi:"protectedManagedDisks"`
	// The protection stage.
	ProtectionStage *string `pulumi:"protectionStage"`
	// The recovery availability set Id.
	RecoveryAvailabilitySetId *string `pulumi:"recoveryAvailabilitySetId"`
	// The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
	RecoveryAzureLogStorageAccountId *string `pulumi:"recoveryAzureLogStorageAccountId"`
	// The target resource group Id.
	RecoveryAzureResourceGroupId *string `pulumi:"recoveryAzureResourceGroupId"`
	// The recovery Azure storage account.
	RecoveryAzureStorageAccount *string `pulumi:"recoveryAzureStorageAccount"`
	// Recovery Azure given name.
	RecoveryAzureVMName *string `pulumi:"recoveryAzureVMName"`
	// The Recovery Azure VM size.
	RecoveryAzureVMSize *string `pulumi:"recoveryAzureVMSize"`
	// The replica id of the protected item.
	ReplicaId *string `pulumi:"replicaId"`
	// The resync progress percentage.
	ResyncProgressPercentage *int `pulumi:"resyncProgressPercentage"`
	// The RPO in seconds.
	RpoInSeconds *float64 `pulumi:"rpoInSeconds"`
	// The tags for the seed managed disks.
	SeedManagedDiskTags map[string]string `pulumi:"seedManagedDiskTags"`
	// The selected recovery azure network Id.
	SelectedRecoveryAzureNetworkId *string `pulumi:"selectedRecoveryAzureNetworkId"`
	// The selected source nic Id which will be used as the primary nic during failover.
	SelectedSourceNicId *string `pulumi:"selectedSourceNicId"`
	// The test failover virtual network.
	SelectedTfoAzureNetworkId *string `pulumi:"selectedTfoAzureNetworkId"`
	// The CPU count of the VM on the primary side.
	SourceVmCpuCount *int `pulumi:"sourceVmCpuCount"`
	// The RAM size of the VM on the primary side.
	SourceVmRamSizeInMB *int `pulumi:"sourceVmRamSizeInMB"`
	// The SQL Server license type.
	SqlServerLicenseType *string `pulumi:"sqlServerLicenseType"`
	// The switch provider blocking error information.
	SwitchProviderBlockingErrorDetails []InMageAzureV2SwitchProviderBlockingErrorDetailsResponse `pulumi:"switchProviderBlockingErrorDetails"`
	// The switch provider blocking error information.
	SwitchProviderDetails *InMageAzureV2SwitchProviderDetailsResponse `pulumi:"switchProviderDetails"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The tags for the target managed disks.
	TargetManagedDiskTags map[string]string `pulumi:"targetManagedDiskTags"`
	// The tags for the target NICs.
	TargetNicTags map[string]string `pulumi:"targetNicTags"`
	// The target proximity placement group Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM.
	TargetVmId *string `pulumi:"targetVmId"`
	// The target VM tags.
	TargetVmTags map[string]string `pulumi:"targetVmTags"`
	// The total transferred data in bytes.
	TotalDataTransferred *float64 `pulumi:"totalDataTransferred"`
	// The progress health.
	TotalProgressHealth *string `pulumi:"totalProgressHealth"`
	// The uncompressed data change rate in MB.
	UncompressedDataRateInMB *float64 `pulumi:"uncompressedDataRateInMB"`
	// A value indicating whether managed disks should be used during failover.
	UseManagedDisks *string `pulumi:"useManagedDisks"`
	// The vCenter infrastructure Id.
	VCenterInfrastructureId *string `pulumi:"vCenterInfrastructureId"`
	// The validation errors of the on-premise machine Value can be list of validation errors.
	ValidationErrors []HealthErrorResponse `pulumi:"validationErrors"`
	// The OS disk VHD name.
	VhdName *string `pulumi:"vhdName"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// InMageAzureV2 switch provider blocking error details.
type InMageAzureV2SwitchProviderBlockingErrorDetailsResponse struct {
	// The error code.
	ErrorCode string `pulumi:"errorCode"`
	// The error message.
	ErrorMessage string `pulumi:"errorMessage"`
	// The error message parameters.
	ErrorMessageParameters map[string]string `pulumi:"errorMessageParameters"`
	// The error tags.
	ErrorTags map[string]string `pulumi:"errorTags"`
	// The possible causes.
	PossibleCauses string `pulumi:"possibleCauses"`
	// The recommended action.
	RecommendedAction string `pulumi:"recommendedAction"`
}

// InMageAzureV2 switch provider details.
type InMageAzureV2SwitchProviderDetailsResponse struct {
	// The target appliance Id.
	TargetApplianceId string `pulumi:"targetApplianceId"`
	// The target fabric Id.
	TargetFabricId string `pulumi:"targetFabricId"`
	// The target resource Id.
	TargetResourceId string `pulumi:"targetResourceId"`
	// The target vault Id.
	TargetVaultId string `pulumi:"targetVaultId"`
}

// Base class for the policies of providers using InMage replication.
type InMageBasePolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'InMageBasePolicyDetails'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// DiskExclusionInput when doing enable protection of virtual machine in InMage provider.
type InMageDiskExclusionInput struct {
	// The guest disk signature based option for disk exclusion.
	DiskSignatureOptions []InMageDiskSignatureExclusionOptions `pulumi:"diskSignatureOptions"`
	// The volume label based option for disk exclusion.
	VolumeOptions []InMageVolumeExclusionOptions `pulumi:"volumeOptions"`
}

// Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.
type InMageDiskSignatureExclusionOptions struct {
	// The guest signature of disk to be excluded from replication.
	DiskSignature *string `pulumi:"diskSignature"`
}

// VMware Azure specific enable protection input.
type InMageEnableProtectionInput struct {
	// The target datastore name.
	DatastoreName *string `pulumi:"datastoreName"`
	// The enable disk exclusion input.
	DiskExclusionInput *InMageDiskExclusionInput `pulumi:"diskExclusionInput"`
	// The disks to include list.
	DisksToInclude []string `pulumi:"disksToInclude"`
	// The class type.
	// Expected value is 'InMage'.
	InstanceType string `pulumi:"instanceType"`
	// The Master Target Id.
	MasterTargetId string `pulumi:"masterTargetId"`
	// The multi VM group Id.
	MultiVmGroupId string `pulumi:"multiVmGroupId"`
	// The multi VM group name.
	MultiVmGroupName string `pulumi:"multiVmGroupName"`
	// The Process Server Id.
	ProcessServerId string `pulumi:"processServerId"`
	// The retention drive to use on the MT.
	RetentionDrive string `pulumi:"retentionDrive"`
	// The CS account Id.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
	// The VM Name.
	VmFriendlyName *string `pulumi:"vmFriendlyName"`
}

// InMageFabric switch provider blocking error details.
type InMageFabricSwitchProviderBlockingErrorDetailsResponse struct {
	// The error code.
	ErrorCode string `pulumi:"errorCode"`
	// The error message.
	ErrorMessage string `pulumi:"errorMessage"`
	// The error message parameters.
	ErrorMessageParameters map[string]string `pulumi:"errorMessageParameters"`
	// The error tags.
	ErrorTags map[string]string `pulumi:"errorTags"`
	// The possible causes.
	PossibleCauses string `pulumi:"possibleCauses"`
	// The recommended action.
	RecommendedAction string `pulumi:"recommendedAction"`
}

// InMage specific protection profile details.
type InMagePolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'InMage'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// VMWare Azure specific protection profile Input.
type InMagePolicyInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The class type.
	// Expected value is 'InMage'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// InMage protected disk details.
type InMageProtectedDiskDetailsResponse struct {
	// The disk capacity in bytes.
	DiskCapacityInBytes *float64 `pulumi:"diskCapacityInBytes"`
	// The disk id.
	DiskId *string `pulumi:"diskId"`
	// The disk name.
	DiskName *string `pulumi:"diskName"`
	// A value indicating whether disk is resized.
	DiskResized *string `pulumi:"diskResized"`
	// The file system capacity in bytes.
	FileSystemCapacityInBytes *float64 `pulumi:"fileSystemCapacityInBytes"`
	// The health error code for the disk.
	HealthErrorCode *string `pulumi:"healthErrorCode"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// The Progress Health.
	ProgressHealth *string `pulumi:"progressHealth"`
	// The Progress Status.
	ProgressStatus *string `pulumi:"progressStatus"`
	// The protection stage.
	ProtectionStage *string `pulumi:"protectionStage"`
	// The PS data transit in MB.
	PsDataInMB *float64 `pulumi:"psDataInMB"`
	// The resync duration in seconds.
	ResyncDurationInSeconds *float64 `pulumi:"resyncDurationInSeconds"`
	// The resync last 15 minutes transferred bytes.
	ResyncLast15MinutesTransferredBytes *float64 `pulumi:"resyncLast15MinutesTransferredBytes"`
	// The last data transfer time in UTC.
	ResyncLastDataTransferTimeUTC *string `pulumi:"resyncLastDataTransferTimeUTC"`
	// The resync processed bytes.
	ResyncProcessedBytes *float64 `pulumi:"resyncProcessedBytes"`
	// The resync progress percentage.
	ResyncProgressPercentage *int `pulumi:"resyncProgressPercentage"`
	// A value indicating whether resync is required for this disk.
	ResyncRequired *string `pulumi:"resyncRequired"`
	// The resync start time.
	ResyncStartTime *string `pulumi:"resyncStartTime"`
	// The resync total transferred bytes.
	ResyncTotalTransferredBytes *float64 `pulumi:"resyncTotalTransferredBytes"`
	// The RPO in seconds.
	RpoInSeconds *float64 `pulumi:"rpoInSeconds"`
	// The source data transit in MB.
	SourceDataInMB *float64 `pulumi:"sourceDataInMB"`
	// The target data transit in MB.
	TargetDataInMB *float64 `pulumi:"targetDataInMB"`
}

// InMageRcm source agent upgrade blocking error details.
type InMageRcmAgentUpgradeBlockingErrorDetailsResponse struct {
	// The error code.
	ErrorCode string `pulumi:"errorCode"`
	// The error message.
	ErrorMessage string `pulumi:"errorMessage"`
	// The error message parameters.
	ErrorMessageParameters map[string]string `pulumi:"errorMessageParameters"`
	// The error tags.
	ErrorTags map[string]string `pulumi:"errorTags"`
	// The possible causes.
	PossibleCauses string `pulumi:"possibleCauses"`
	// The recommended action.
	RecommendedAction string `pulumi:"recommendedAction"`
}

// InMageRcm discovered protected VM details.
type InMageRcmDiscoveredProtectedVmDetailsResponse struct {
	// The SDS created timestamp.
	CreatedTimestamp string `pulumi:"createdTimestamp"`
	// The list of datastores.
	Datastores []string `pulumi:"datastores"`
	// The list of IP addresses.
	IpAddresses []string `pulumi:"ipAddresses"`
	// A value indicating whether the VM is deleted.
	IsDeleted bool `pulumi:"isDeleted"`
	// The last time when SDS information discovered in SRS.
	LastDiscoveryTimeInUtc string `pulumi:"lastDiscoveryTimeInUtc"`
	// The VM's OS name.
	OsName string `pulumi:"osName"`
	// The VM power status.
	PowerStatus string `pulumi:"powerStatus"`
	// The SDS updated timestamp.
	UpdatedTimestamp string `pulumi:"updatedTimestamp"`
	// The VCenter fqdn.
	VCenterFqdn string `pulumi:"vCenterFqdn"`
	// The VCenter Id.
	VCenterId string `pulumi:"vCenterId"`
	// The VM fqdn.
	VmFqdn string `pulumi:"vmFqdn"`
	// The VMware tools status.
	VmwareToolsStatus string `pulumi:"vmwareToolsStatus"`
}

// InMageRcm disk input.
type InMageRcmDiskInput struct {
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The disk Id.
	DiskId string `pulumi:"diskId"`
	// The disk type.
	DiskType string `pulumi:"diskType"`
	// The log storage account ARM Id.
	LogStorageAccountId string `pulumi:"logStorageAccountId"`
}

// InMageRcm disk input.
type InMageRcmDisksDefaultInput struct {
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The disk type.
	DiskType string `pulumi:"diskType"`
	// The log storage account ARM Id.
	LogStorageAccountId string `pulumi:"logStorageAccountId"`
}

// InMageRcm specific enable protection input.
type InMageRcmEnableProtectionInput struct {
	// The default disk input.
	DisksDefault *InMageRcmDisksDefaultInput `pulumi:"disksDefault"`
	// The disks to include list.
	DisksToInclude []InMageRcmDiskInput `pulumi:"disksToInclude"`
	// The ARM Id of discovered machine.
	FabricDiscoveryMachineId string `pulumi:"fabricDiscoveryMachineId"`
	// The class type.
	// Expected value is 'InMageRcm'.
	InstanceType string `pulumi:"instanceType"`
	// The license type.
	LicenseType *string `pulumi:"licenseType"`
	// The multi VM group name.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// The process server Id.
	ProcessServerId string `pulumi:"processServerId"`
	// The run-as account Id.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
	// The target availability set ARM Id.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The target boot diagnostics storage account ARM Id.
	TargetBootDiagnosticsStorageAccountId *string `pulumi:"targetBootDiagnosticsStorageAccountId"`
	// The selected target network ARM Id.
	TargetNetworkId *string `pulumi:"targetNetworkId"`
	// The target proximity placement group Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// The target resource group ARM Id.
	TargetResourceGroupId string `pulumi:"targetResourceGroupId"`
	// The selected target subnet name.
	TargetSubnetName *string `pulumi:"targetSubnetName"`
	// The target VM name.
	TargetVmName *string `pulumi:"targetVmName"`
	// The target VM size.
	TargetVmSize *string `pulumi:"targetVmSize"`
	// The selected test network ARM Id.
	TestNetworkId *string `pulumi:"testNetworkId"`
	// The selected test subnet name.
	TestSubnetName *string `pulumi:"testSubnetName"`
}

// InMageRcm fabric provider specific settings.
type InMageRcmFabricCreationInput struct {
	// Gets the class type.
	// Expected value is 'InMageRcm'.
	InstanceType string `pulumi:"instanceType"`
	// The ARM Id of the physical site.
	PhysicalSiteId string `pulumi:"physicalSiteId"`
	// The identity provider input for source agent authentication.
	SourceAgentIdentity IdentityProviderInput `pulumi:"sourceAgentIdentity"`
	// The ARM Id of the VMware site.
	VmwareSiteId string `pulumi:"vmwareSiteId"`
}

// InMageRcm fabric specific details.
type InMageRcmFabricSpecificDetailsResponse struct {
	// The list of agent details.
	AgentDetails []AgentDetailsResponse `pulumi:"agentDetails"`
	// The control plane Uri.
	ControlPlaneUri string `pulumi:"controlPlaneUri"`
	// The data plane Uri.
	DataPlaneUri string `pulumi:"dataPlaneUri"`
	// The list of DRAs.
	Dras []DraDetailsResponse `pulumi:"dras"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'InMageRcm'.
	InstanceType string `pulumi:"instanceType"`
	// The list of Mars agents.
	MarsAgents []MarsAgentDetailsResponse `pulumi:"marsAgents"`
	// The ARM Id of the physical site.
	PhysicalSiteId string `pulumi:"physicalSiteId"`
	// The list of process servers.
	ProcessServers []ProcessServerDetailsResponse `pulumi:"processServers"`
	// The list of push installers.
	PushInstallers []PushInstallerDetailsResponse `pulumi:"pushInstallers"`
	// The list of RCM proxies.
	RcmProxies []RcmProxyDetailsResponse `pulumi:"rcmProxies"`
	// The list of replication agents.
	ReplicationAgents []ReplicationAgentDetailsResponse `pulumi:"replicationAgents"`
	// The list of reprotect agents.
	ReprotectAgents []ReprotectAgentDetailsResponse `pulumi:"reprotectAgents"`
	// The service container Id.
	ServiceContainerId string `pulumi:"serviceContainerId"`
	// The service endpoint.
	ServiceEndpoint string `pulumi:"serviceEndpoint"`
	// The service resource Id.
	ServiceResourceId string `pulumi:"serviceResourceId"`
	// The source agent identity details.
	SourceAgentIdentityDetails *IdentityProviderDetailsResponse `pulumi:"sourceAgentIdentityDetails"`
	// The ARM Id of the VMware site.
	VmwareSiteId string `pulumi:"vmwareSiteId"`
}

// InMageRcmFailback discovered VM details.
type InMageRcmFailbackDiscoveredProtectedVmDetailsResponse struct {
	// The SDS created timestamp.
	CreatedTimestamp string `pulumi:"createdTimestamp"`
	// The list of datastores.
	Datastores []string `pulumi:"datastores"`
	// The list of IP addresses.
	IpAddresses []string `pulumi:"ipAddresses"`
	// A value indicating whether the VM is deleted.
	IsDeleted bool `pulumi:"isDeleted"`
	// The last time when SDS information discovered in SRS.
	LastDiscoveryTimeInUtc string `pulumi:"lastDiscoveryTimeInUtc"`
	// The VM's OS name.
	OsName string `pulumi:"osName"`
	// The VM power status.
	PowerStatus string `pulumi:"powerStatus"`
	// The SDS updated timestamp.
	UpdatedTimestamp string `pulumi:"updatedTimestamp"`
	// The VCenter fqdn.
	VCenterFqdn string `pulumi:"vCenterFqdn"`
	// The VCenter Id.
	VCenterId string `pulumi:"vCenterId"`
	// The VM fqdn.
	VmFqdn string `pulumi:"vmFqdn"`
	// The VMware tools status.
	VmwareToolsStatus string `pulumi:"vmwareToolsStatus"`
}

// InMageRcmFailback mobility agent details.
type InMageRcmFailbackMobilityAgentDetailsResponse struct {
	// The agent version expiry date.
	AgentVersionExpiryDate string `pulumi:"agentVersionExpiryDate"`
	// The driver version.
	DriverVersion string `pulumi:"driverVersion"`
	// The driver version expiry date.
	DriverVersionExpiryDate string `pulumi:"driverVersionExpiryDate"`
	// A value indicating whether agent is upgradeable or not.
	IsUpgradeable string `pulumi:"isUpgradeable"`
	// The time of the last heartbeat received from the agent.
	LastHeartbeatUtc string `pulumi:"lastHeartbeatUtc"`
	// The latest upgradeable version available without reboot.
	LatestUpgradableVersionWithoutReboot string `pulumi:"latestUpgradableVersionWithoutReboot"`
	// The latest agent version available.
	LatestVersion string `pulumi:"latestVersion"`
	// The whether update is possible or not.
	ReasonsBlockingUpgrade []string `pulumi:"reasonsBlockingUpgrade"`
	// The agent version.
	Version string `pulumi:"version"`
}

// InMageRcmFailback NIC details.
type InMageRcmFailbackNicDetailsResponse struct {
	// The adapter type.
	AdapterType string `pulumi:"adapterType"`
	// The mac address.
	MacAddress string `pulumi:"macAddress"`
	// The network name.
	NetworkName string `pulumi:"networkName"`
	// The IP address.
	SourceIpAddress string `pulumi:"sourceIpAddress"`
}

// InMageRcmFailback policy creation input.
type InMageRcmFailbackPolicyCreationInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	// Expected value is 'InMageRcmFailback'.
	InstanceType string `pulumi:"instanceType"`
}

// InMageRcm failback specific policy details.
type InMageRcmFailbackPolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency in minutes.
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'InMageRcmFailback'.
	InstanceType string `pulumi:"instanceType"`
}

// InMageRcmFailback protected disk details.
type InMageRcmFailbackProtectedDiskDetailsResponse struct {
	// The disk capacity in bytes.
	CapacityInBytes float64 `pulumi:"capacityInBytes"`
	// The data pending at source agent in MB.
	DataPendingAtSourceAgentInMB float64 `pulumi:"dataPendingAtSourceAgentInMB"`
	// The data pending in log data store in MB.
	DataPendingInLogDataStoreInMB float64 `pulumi:"dataPendingInLogDataStoreInMB"`
	// The disk Id (reported by source agent).
	DiskId string `pulumi:"diskId"`
	// The disk name.
	DiskName string `pulumi:"diskName"`
	// The disk Uuid (reported by vCenter).
	DiskUuid string `pulumi:"diskUuid"`
	// The initial replication details.
	IrDetails *InMageRcmFailbackSyncDetailsResponse `pulumi:"irDetails"`
	// A value indicating whether initial replication is complete or not.
	IsInitialReplicationComplete string `pulumi:"isInitialReplicationComplete"`
	// A value indicating whether the disk is the OS disk.
	IsOSDisk string `pulumi:"isOSDisk"`
	// The last sync time.
	LastSyncTime string `pulumi:"lastSyncTime"`
	// The resync details.
	ResyncDetails *InMageRcmFailbackSyncDetailsResponse `pulumi:"resyncDetails"`
}

// InMageRcmFailback provider specific details.
type InMageRcmFailbackReplicationDetailsResponse struct {
	// The ARM Id of the azure VM.
	AzureVirtualMachineId string `pulumi:"azureVirtualMachineId"`
	// The discovered VM information.
	DiscoveredVmDetails *InMageRcmFailbackDiscoveredProtectedVmDetailsResponse `pulumi:"discoveredVmDetails"`
	// The initial replication processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
	InitialReplicationProcessedBytes float64 `pulumi:"initialReplicationProcessedBytes"`
	// The initial replication progress health.
	InitialReplicationProgressHealth string `pulumi:"initialReplicationProgressHealth"`
	// The initial replication progress percentage.
	InitialReplicationProgressPercentage int `pulumi:"initialReplicationProgressPercentage"`
	// The initial replication transferred bytes from source VM to target for all selected disks on source VM.
	InitialReplicationTransferredBytes float64 `pulumi:"initialReplicationTransferredBytes"`
	// Gets the Instance type.
	// Expected value is 'InMageRcmFailback'.
	InstanceType string `pulumi:"instanceType"`
	// The virtual machine internal identifier.
	InternalIdentifier string `pulumi:"internalIdentifier"`
	// A value indicating whether agent registration was successful after failover.
	IsAgentRegistrationSuccessfulAfterFailover bool `pulumi:"isAgentRegistrationSuccessfulAfterFailover"`
	// The last planned failover start time.
	LastPlannedFailoverStartTime string `pulumi:"lastPlannedFailoverStartTime"`
	// The last planned failover status.
	LastPlannedFailoverStatus string `pulumi:"lastPlannedFailoverStatus"`
	// The policy friendly name used by the forward replication.
	LastUsedPolicyFriendlyName string `pulumi:"lastUsedPolicyFriendlyName"`
	// The policy Id used by the forward replication.
	LastUsedPolicyId string `pulumi:"lastUsedPolicyId"`
	// The log storage account ARM Id.
	LogStorageAccountId string `pulumi:"logStorageAccountId"`
	// The mobility agent information.
	MobilityAgentDetails *InMageRcmFailbackMobilityAgentDetailsResponse `pulumi:"mobilityAgentDetails"`
	// The multi VM group name.
	MultiVmGroupName string `pulumi:"multiVmGroupName"`
	// The type of the OS on the VM.
	OsType string `pulumi:"osType"`
	// The list of protected disks.
	ProtectedDisks []InMageRcmFailbackProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The reprotect agent Id.
	ReprotectAgentId string `pulumi:"reprotectAgentId"`
	// The reprotect agent name.
	ReprotectAgentName string `pulumi:"reprotectAgentName"`
	// The resync processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
	ResyncProcessedBytes float64 `pulumi:"resyncProcessedBytes"`
	// The resync progress health.
	ResyncProgressHealth string `pulumi:"resyncProgressHealth"`
	// The resync progress percentage.
	ResyncProgressPercentage int `pulumi:"resyncProgressPercentage"`
	// A value indicating whether resync is required.
	ResyncRequired string `pulumi:"resyncRequired"`
	// The resync state.
	ResyncState string `pulumi:"resyncState"`
	// The resync transferred bytes from source VM to target for all selected disks on source VM.
	ResyncTransferredBytes float64 `pulumi:"resyncTransferredBytes"`
	// The target datastore name.
	TargetDataStoreName string `pulumi:"targetDataStoreName"`
	// The target VM name.
	TargetVmName string `pulumi:"targetVmName"`
	// The target vCenter Id.
	TargetvCenterId string `pulumi:"targetvCenterId"`
	// The network details.
	VmNics []InMageRcmFailbackNicDetailsResponse `pulumi:"vmNics"`
}

// InMageRcmFailback disk level sync details.
type InMageRcmFailbackSyncDetailsResponse struct {
	// The bytes transferred in last 15 minutes from source VM to target.
	Last15MinutesTransferredBytes float64 `pulumi:"last15MinutesTransferredBytes"`
	// The time of the last data transfer from source VM to target.
	LastDataTransferTimeUtc string `pulumi:"lastDataTransferTimeUtc"`
	// The last refresh time.
	LastRefreshTime string `pulumi:"lastRefreshTime"`
	// The total processed bytes. This includes bytes that are transferred from source VM to target and matched bytes.
	ProcessedBytes float64 `pulumi:"processedBytes"`
	// The progress health.
	ProgressHealth string `pulumi:"progressHealth"`
	// Progress in percentage. Progress percentage is calculated based on processed bytes.
	ProgressPercentage int `pulumi:"progressPercentage"`
	// The start time.
	StartTime string `pulumi:"startTime"`
	// The transferred bytes from source VM to azure for the disk.
	TransferredBytes float64 `pulumi:"transferredBytes"`
}

// InMageRcm last source agent upgrade error details.
type InMageRcmLastAgentUpgradeErrorDetailsResponse struct {
	// The error code.
	ErrorCode string `pulumi:"errorCode"`
	// The error message.
	ErrorMessage string `pulumi:"errorMessage"`
	// The error message parameters.
	ErrorMessageParameters map[string]string `pulumi:"errorMessageParameters"`
	// The error tags.
	ErrorTags map[string]string `pulumi:"errorTags"`
	// The possible causes.
	PossibleCauses string `pulumi:"possibleCauses"`
	// The recommended action.
	RecommendedAction string `pulumi:"recommendedAction"`
}

// InMageRcm mobility agent details.
type InMageRcmMobilityAgentDetailsResponse struct {
	// The agent version expiry date.
	AgentVersionExpiryDate string `pulumi:"agentVersionExpiryDate"`
	// The driver version.
	DriverVersion string `pulumi:"driverVersion"`
	// The driver version expiry date.
	DriverVersionExpiryDate string `pulumi:"driverVersionExpiryDate"`
	// A value indicating whether agent is upgradeable or not.
	IsUpgradeable string `pulumi:"isUpgradeable"`
	// The time of the last heartbeat received from the agent.
	LastHeartbeatUtc string `pulumi:"lastHeartbeatUtc"`
	// The latest agent version release date.
	LatestAgentReleaseDate string `pulumi:"latestAgentReleaseDate"`
	// The latest upgradeable version available without reboot.
	LatestUpgradableVersionWithoutReboot string `pulumi:"latestUpgradableVersionWithoutReboot"`
	// The latest agent version available.
	LatestVersion string `pulumi:"latestVersion"`
	// The whether update is possible or not.
	ReasonsBlockingUpgrade []string `pulumi:"reasonsBlockingUpgrade"`
	// The agent version.
	Version string `pulumi:"version"`
}

// InMageRcm NIC details.
type InMageRcmNicDetailsResponse struct {
	// A value indicating whether this is the primary NIC.
	IsPrimaryNic *string `pulumi:"isPrimaryNic"`
	// A value indicating whether this NIC is selected for failover.
	IsSelectedForFailover *string `pulumi:"isSelectedForFailover"`
	// The NIC Id.
	NicId string `pulumi:"nicId"`
	// The source IP address.
	SourceIPAddress string `pulumi:"sourceIPAddress"`
	// The source IP address type.
	SourceIPAddressType string `pulumi:"sourceIPAddressType"`
	// Source network Id.
	SourceNetworkId string `pulumi:"sourceNetworkId"`
	// Source subnet name.
	SourceSubnetName string `pulumi:"sourceSubnetName"`
	// The target IP address.
	TargetIPAddress *string `pulumi:"targetIPAddress"`
	// The target IP address type.
	TargetIPAddressType *string `pulumi:"targetIPAddressType"`
	// Target subnet name.
	TargetSubnetName *string `pulumi:"targetSubnetName"`
	// The test IP address.
	TestIPAddress *string `pulumi:"testIPAddress"`
	// The test IP address type.
	TestIPAddressType *string `pulumi:"testIPAddressType"`
	// Test subnet name.
	TestSubnetName *string `pulumi:"testSubnetName"`
}

// InMageRcm policy creation input.
type InMageRcmPolicyCreationInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// A value indicating whether multi-VM sync has to be enabled.
	EnableMultiVmSync *string `pulumi:"enableMultiVmSync"`
	// The class type.
	// Expected value is 'InMageRcm'.
	InstanceType string `pulumi:"instanceType"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistoryInMinutes *int `pulumi:"recoveryPointHistoryInMinutes"`
}

// InMageRcm specific policy details.
type InMageRcmPolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency in minutes.
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// A value indicating whether multi-VM sync has to be enabled.
	EnableMultiVmSync *string `pulumi:"enableMultiVmSync"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'InMageRcm'.
	InstanceType string `pulumi:"instanceType"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistoryInMinutes *int `pulumi:"recoveryPointHistoryInMinutes"`
}

// InMageRcm protected disk details.
type InMageRcmProtectedDiskDetailsResponse struct {
	// The disk capacity in bytes.
	CapacityInBytes float64 `pulumi:"capacityInBytes"`
	// The data pending at source agent in MB.
	DataPendingAtSourceAgentInMB float64 `pulumi:"dataPendingAtSourceAgentInMB"`
	// The data pending in log data store in MB.
	DataPendingInLogDataStoreInMB float64 `pulumi:"dataPendingInLogDataStoreInMB"`
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId string `pulumi:"diskEncryptionSetId"`
	// The disk Id.
	DiskId string `pulumi:"diskId"`
	// The disk name.
	DiskName string `pulumi:"diskName"`
	// The disk type.
	DiskType *string `pulumi:"diskType"`
	// The initial replication details.
	IrDetails *InMageRcmSyncDetailsResponse `pulumi:"irDetails"`
	// A value indicating whether initial replication is complete or not.
	IsInitialReplicationComplete string `pulumi:"isInitialReplicationComplete"`
	// A value indicating whether the disk is the OS disk.
	IsOSDisk string `pulumi:"isOSDisk"`
	// The log storage account ARM Id.
	LogStorageAccountId string `pulumi:"logStorageAccountId"`
	// The resync details.
	ResyncDetails *InMageRcmSyncDetailsResponse `pulumi:"resyncDetails"`
	// The ARM Id of the seed managed disk.
	SeedManagedDiskId string `pulumi:"seedManagedDiskId"`
	// The ARM Id of the target managed disk.
	TargetManagedDiskId string `pulumi:"targetManagedDiskId"`
}

// InMageRcm provider specific container mapping details.
type InMageRcmProtectionContainerMappingDetailsResponse struct {
	// A value indicating whether the flag for enable agent auto upgrade.
	EnableAgentAutoUpgrade string `pulumi:"enableAgentAutoUpgrade"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'InMageRcm'.
	InstanceType string `pulumi:"instanceType"`
}

// InMageRcm provider specific details.
type InMageRcmReplicationDetailsResponse struct {
	// The agent version to which last agent upgrade was attempted.
	AgentUpgradeAttemptToVersion string `pulumi:"agentUpgradeAttemptToVersion"`
	// The agent upgrade blocking error information.
	AgentUpgradeBlockingErrorDetails []InMageRcmAgentUpgradeBlockingErrorDetailsResponse `pulumi:"agentUpgradeBlockingErrorDetails"`
	// The agent upgrade job Id.
	AgentUpgradeJobId string `pulumi:"agentUpgradeJobId"`
	// The agent auto upgrade state.
	AgentUpgradeState string `pulumi:"agentUpgradeState"`
	// The allocated memory in MB.
	AllocatedMemoryInMB float64 `pulumi:"allocatedMemoryInMB"`
	// The discovered VM details.
	DiscoveredVmDetails *InMageRcmDiscoveredProtectedVmDetailsResponse `pulumi:"discoveredVmDetails"`
	// The type of the discovered VM.
	DiscoveryType string `pulumi:"discoveryType"`
	// The ARM Id of the discovered VM.
	FabricDiscoveryMachineId string `pulumi:"fabricDiscoveryMachineId"`
	// The recovery point Id to which the VM was failed over.
	FailoverRecoveryPointId string `pulumi:"failoverRecoveryPointId"`
	// The firmware type.
	FirmwareType string `pulumi:"firmwareType"`
	// The initial replication processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
	InitialReplicationProcessedBytes float64 `pulumi:"initialReplicationProcessedBytes"`
	// The initial replication progress health.
	InitialReplicationProgressHealth string `pulumi:"initialReplicationProgressHealth"`
	// The initial replication progress percentage. This is calculated based on total bytes processed for all disks in the source VM.
	InitialReplicationProgressPercentage int `pulumi:"initialReplicationProgressPercentage"`
	// The initial replication transferred bytes from source VM to azure for all selected disks on source VM.
	InitialReplicationTransferredBytes float64 `pulumi:"initialReplicationTransferredBytes"`
	// Gets the Instance type.
	// Expected value is 'InMageRcm'.
	InstanceType string `pulumi:"instanceType"`
	// The virtual machine internal identifier.
	InternalIdentifier string `pulumi:"internalIdentifier"`
	// A value indicating whether agent registration was successful after failover.
	IsAgentRegistrationSuccessfulAfterFailover bool `pulumi:"isAgentRegistrationSuccessfulAfterFailover"`
	// A value indicating whether last agent upgrade was successful or not.
	IsLastUpgradeSuccessful string `pulumi:"isLastUpgradeSuccessful"`
	// The last agent upgrade error information.
	LastAgentUpgradeErrorDetails []InMageRcmLastAgentUpgradeErrorDetailsResponse `pulumi:"lastAgentUpgradeErrorDetails"`
	// The last agent upgrade type.
	LastAgentUpgradeType string `pulumi:"lastAgentUpgradeType"`
	// The last recovery point Id.
	LastRecoveryPointId string `pulumi:"lastRecoveryPointId"`
	// The last recovery point received time.
	LastRecoveryPointReceived string `pulumi:"lastRecoveryPointReceived"`
	// The last recovery point objective calculated time.
	LastRpoCalculatedTime string `pulumi:"lastRpoCalculatedTime"`
	// The last recovery point objective value.
	LastRpoInSeconds float64 `pulumi:"lastRpoInSeconds"`
	// License Type of the VM to be used.
	LicenseType *string `pulumi:"licenseType"`
	// The mobility agent information.
	MobilityAgentDetails *InMageRcmMobilityAgentDetailsResponse `pulumi:"mobilityAgentDetails"`
	// The multi VM group name.
	MultiVmGroupName string `pulumi:"multiVmGroupName"`
	// The type of the OS on the VM.
	OsType string `pulumi:"osType"`
	// The IP address of the primary network interface.
	PrimaryNicIpAddress string `pulumi:"primaryNicIpAddress"`
	// The process server Id.
	ProcessServerId string `pulumi:"processServerId"`
	// The process server name.
	ProcessServerName string `pulumi:"processServerName"`
	// The processor core count.
	ProcessorCoreCount int `pulumi:"processorCoreCount"`
	// The list of protected disks.
	ProtectedDisks []InMageRcmProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The resync processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
	ResyncProcessedBytes float64 `pulumi:"resyncProcessedBytes"`
	// The resync progress health.
	ResyncProgressHealth string `pulumi:"resyncProgressHealth"`
	// The resync progress percentage. This is calculated based on total bytes processed for all disks in the source VM.
	ResyncProgressPercentage int `pulumi:"resyncProgressPercentage"`
	// A value indicating whether resync is required.
	ResyncRequired string `pulumi:"resyncRequired"`
	// The resync state.
	ResyncState string `pulumi:"resyncState"`
	// The resync transferred bytes from source VM to azure for all selected disks on source VM.
	ResyncTransferredBytes float64 `pulumi:"resyncTransferredBytes"`
	// The run-as account Id.
	RunAsAccountId string `pulumi:"runAsAccountId"`
	// The target availability set Id.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The target boot diagnostics storage account ARM Id.
	TargetBootDiagnosticsStorageAccountId *string `pulumi:"targetBootDiagnosticsStorageAccountId"`
	// The target generation.
	TargetGeneration string `pulumi:"targetGeneration"`
	// The target location.
	TargetLocation *string `pulumi:"targetLocation"`
	// The target network Id.
	TargetNetworkId *string `pulumi:"targetNetworkId"`
	// The target proximity placement group Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// The target resource group Id.
	TargetResourceGroupId *string `pulumi:"targetResourceGroupId"`
	// Target VM name.
	TargetVmName *string `pulumi:"targetVmName"`
	// The target VM size.
	TargetVmSize *string `pulumi:"targetVmSize"`
	// The test network Id.
	TestNetworkId *string `pulumi:"testNetworkId"`
	// The network details.
	VmNics []InMageRcmNicDetailsResponse `pulumi:"vmNics"`
}

// InMageRcm disk level sync details.
type InMageRcmSyncDetailsResponse struct {
	// The bytes transferred in last 15 minutes from source VM to azure.
	Last15MinutesTransferredBytes float64 `pulumi:"last15MinutesTransferredBytes"`
	// The time of the last data transfer from source VM to azure.
	LastDataTransferTimeUtc string `pulumi:"lastDataTransferTimeUtc"`
	// The last refresh time.
	LastRefreshTime string `pulumi:"lastRefreshTime"`
	// The total processed bytes. This includes bytes that are transferred from source VM to azure and matched bytes.
	ProcessedBytes float64 `pulumi:"processedBytes"`
	// The progress health.
	ProgressHealth string `pulumi:"progressHealth"`
	// Progress in percentage. Progress percentage is calculated based on processed bytes.
	ProgressPercentage int `pulumi:"progressPercentage"`
	// The start time.
	StartTime string `pulumi:"startTime"`
	// The transferred bytes from source VM to azure for the disk.
	TransferredBytes float64 `pulumi:"transferredBytes"`
}

// InMage provider specific settings.
type InMageReplicationDetailsResponse struct {
	// The active location of the VM. If the VM is being protected from Azure, this field will take values from { Azure, OnPrem }. If the VM is being protected between two data-centers, this field will be OnPrem always.
	ActiveSiteType *string `pulumi:"activeSiteType"`
	// The agent details.
	AgentDetails *InMageAgentDetailsResponse `pulumi:"agentDetails"`
	// A value indicating the underlying Azure storage account. If the VM is not running in Azure, this value shall be set to null.
	AzureStorageAccountId *string `pulumi:"azureStorageAccountId"`
	// The compressed data change rate in MB.
	CompressedDataRateInMB *float64 `pulumi:"compressedDataRateInMB"`
	// The collection of Consistency points.
	ConsistencyPoints map[string]string `pulumi:"consistencyPoints"`
	// The datastores of the on-premise machine Value can be list of strings that contain datastore names.
	Datastores []string `pulumi:"datastores"`
	// A value indicating the discovery type of the machine.
	DiscoveryType *string `pulumi:"discoveryType"`
	// A value indicating whether any disk is resized for this VM.
	DiskResized *string `pulumi:"diskResized"`
	// The infrastructure VM Id.
	InfrastructureVmId *string `pulumi:"infrastructureVmId"`
	// Gets the Instance type.
	// Expected value is 'InMage'.
	InstanceType string `pulumi:"instanceType"`
	// The source IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// A value indicating whether additional IR stats are available or not.
	IsAdditionalStatsAvailable *bool `pulumi:"isAdditionalStatsAvailable"`
	// The last heartbeat received from the source server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// The last update time received from on-prem components.
	LastUpdateReceivedTime *string `pulumi:"lastUpdateReceivedTime"`
	// The master target Id.
	MasterTargetId *string `pulumi:"masterTargetId"`
	// The multi vm group Id, if any.
	MultiVmGroupId *string `pulumi:"multiVmGroupId"`
	// The multi vm group name, if any.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// A value indicating whether the multi vm sync is enabled or disabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The OS details.
	OsDetails *OSDiskDetailsResponse `pulumi:"osDetails"`
	// The OS Version of the protected item.
	OsVersion *string `pulumi:"osVersion"`
	// The process server Id.
	ProcessServerId *string `pulumi:"processServerId"`
	// The list of protected disks.
	ProtectedDisks []InMageProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The protection stage.
	ProtectionStage *string `pulumi:"protectionStage"`
	// A value indicating whether the source server requires a restart after update.
	RebootAfterUpdateStatus *string `pulumi:"rebootAfterUpdateStatus"`
	// The replica id of the protected item.
	ReplicaId *string `pulumi:"replicaId"`
	// The resync details of the machine.
	ResyncDetails *InitialReplicationDetailsResponse `pulumi:"resyncDetails"`
	// The retention window end time.
	RetentionWindowEnd *string `pulumi:"retentionWindowEnd"`
	// The retention window start time.
	RetentionWindowStart *string `pulumi:"retentionWindowStart"`
	// The RPO in seconds.
	RpoInSeconds *float64 `pulumi:"rpoInSeconds"`
	// The CPU count of the VM on the primary side.
	SourceVmCpuCount *int `pulumi:"sourceVmCpuCount"`
	// The RAM size of the VM on the primary side.
	SourceVmRamSizeInMB *int `pulumi:"sourceVmRamSizeInMB"`
	// The total transferred data in bytes.
	TotalDataTransferred *float64 `pulumi:"totalDataTransferred"`
	// The progress health.
	TotalProgressHealth *string `pulumi:"totalProgressHealth"`
	// The uncompressed data change rate in MB.
	UncompressedDataRateInMB *float64 `pulumi:"uncompressedDataRateInMB"`
	// The vCenter infrastructure Id.
	VCenterInfrastructureId *string `pulumi:"vCenterInfrastructureId"`
	// The validation errors of the on-premise machine Value can be list of validation errors.
	ValidationErrors []HealthErrorResponse `pulumi:"validationErrors"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.
type InMageVolumeExclusionOptions struct {
	// The value indicating whether to exclude multi volume disk or not. If a disk has multiple volumes and one of the volume has label matching with VolumeLabel this disk will be excluded from replication if OnlyExcludeIfSingleVolume is false.
	OnlyExcludeIfSingleVolume *string `pulumi:"onlyExcludeIfSingleVolume"`
	// The volume label. The disk having any volume with this label will be excluded from replication.
	VolumeLabel *string `pulumi:"volumeLabel"`
}

// Initial replication details.
type InitialReplicationDetailsResponse struct {
	// The initial replication progress percentage.
	InitialReplicationProgressPercentage *string `pulumi:"initialReplicationProgressPercentage"`
	// Initial replication type.
	InitialReplicationType *string `pulumi:"initialReplicationType"`
}

// Implements InnerHealthError class. HealthError object has a list of InnerHealthErrors as child errors. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.
type InnerHealthErrorResponse struct {
	// Error creation time (UTC).
	CreationTimeUtc *string `pulumi:"creationTimeUtc"`
	// Value indicating whether the health error is customer resolvable.
	CustomerResolvability *string `pulumi:"customerResolvability"`
	// ID of the entity.
	EntityId *string `pulumi:"entityId"`
	// Category of error.
	ErrorCategory *string `pulumi:"errorCategory"`
	// Error code.
	ErrorCode *string `pulumi:"errorCode"`
	// The health error unique id.
	ErrorId *string `pulumi:"errorId"`
	// Level of error.
	ErrorLevel *string `pulumi:"errorLevel"`
	// Error message.
	ErrorMessage *string `pulumi:"errorMessage"`
	// Source of error.
	ErrorSource *string `pulumi:"errorSource"`
	// Type of error.
	ErrorType *string `pulumi:"errorType"`
	// Possible causes of error.
	PossibleCauses *string `pulumi:"possibleCauses"`
	// Recommended action to resolve error.
	RecommendedAction *string `pulumi:"recommendedAction"`
	// DRA error message.
	RecoveryProviderErrorMessage *string `pulumi:"recoveryProviderErrorMessage"`
	// Summary message of the entity.
	SummaryMessage *string `pulumi:"summaryMessage"`
}

// Implements InnerHealthError class. HealthError object has a list of InnerHealthErrors as child errors. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.
type InnerHealthErrorResponseOutput struct{ *pulumi.OutputState }

func (InnerHealthErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InnerHealthErrorResponse)(nil)).Elem()
}

func (o InnerHealthErrorResponseOutput) ToInnerHealthErrorResponseOutput() InnerHealthErrorResponseOutput {
	return o
}

func (o InnerHealthErrorResponseOutput) ToInnerHealthErrorResponseOutputWithContext(ctx context.Context) InnerHealthErrorResponseOutput {
	return o
}

// Error creation time (UTC).
func (o InnerHealthErrorResponseOutput) CreationTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.CreationTimeUtc }).(pulumi.StringPtrOutput)
}

// Value indicating whether the health error is customer resolvable.
func (o InnerHealthErrorResponseOutput) CustomerResolvability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.CustomerResolvability }).(pulumi.StringPtrOutput)
}

// ID of the entity.
func (o InnerHealthErrorResponseOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// Category of error.
func (o InnerHealthErrorResponseOutput) ErrorCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorCategory }).(pulumi.StringPtrOutput)
}

// Error code.
func (o InnerHealthErrorResponseOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorCode }).(pulumi.StringPtrOutput)
}

// The health error unique id.
func (o InnerHealthErrorResponseOutput) ErrorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorId }).(pulumi.StringPtrOutput)
}

// Level of error.
func (o InnerHealthErrorResponseOutput) ErrorLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorLevel }).(pulumi.StringPtrOutput)
}

// Error message.
func (o InnerHealthErrorResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Source of error.
func (o InnerHealthErrorResponseOutput) ErrorSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorSource }).(pulumi.StringPtrOutput)
}

// Type of error.
func (o InnerHealthErrorResponseOutput) ErrorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorType }).(pulumi.StringPtrOutput)
}

// Possible causes of error.
func (o InnerHealthErrorResponseOutput) PossibleCauses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.PossibleCauses }).(pulumi.StringPtrOutput)
}

// Recommended action to resolve error.
func (o InnerHealthErrorResponseOutput) RecommendedAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.RecommendedAction }).(pulumi.StringPtrOutput)
}

// DRA error message.
func (o InnerHealthErrorResponseOutput) RecoveryProviderErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.RecoveryProviderErrorMessage }).(pulumi.StringPtrOutput)
}

// Summary message of the entity.
func (o InnerHealthErrorResponseOutput) SummaryMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.SummaryMessage }).(pulumi.StringPtrOutput)
}

type InnerHealthErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (InnerHealthErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InnerHealthErrorResponse)(nil)).Elem()
}

func (o InnerHealthErrorResponseArrayOutput) ToInnerHealthErrorResponseArrayOutput() InnerHealthErrorResponseArrayOutput {
	return o
}

func (o InnerHealthErrorResponseArrayOutput) ToInnerHealthErrorResponseArrayOutputWithContext(ctx context.Context) InnerHealthErrorResponseArrayOutput {
	return o
}

func (o InnerHealthErrorResponseArrayOutput) Index(i pulumi.IntInput) InnerHealthErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InnerHealthErrorResponse {
		return vs[0].([]InnerHealthErrorResponse)[vs[1].(int)]
	}).(InnerHealthErrorResponseOutput)
}

type InputEndpointResponse struct {
	EndpointName *string `pulumi:"endpointName"`
	PrivatePort  *int    `pulumi:"privatePort"`
	Protocol     *string `pulumi:"protocol"`
	PublicPort   *int    `pulumi:"publicPort"`
}

// Details about inquired protectable items under a given container.
type InquiryInfo struct {
	// Inquiry Details which will have workload specific details.
	// For e.g. - For SQL and oracle this will contain different details.
	InquiryDetails []WorkloadInquiryDetails `pulumi:"inquiryDetails"`
	// Inquiry Status for this container such as
	// InProgress | Failed | Succeeded
	Status *string `pulumi:"status"`
}

// Details about inquired protectable items under a given container.
type InquiryInfoResponse struct {
	// Error Details if the Status is non-success.
	ErrorDetail *ErrorDetailResponse `pulumi:"errorDetail"`
	// Inquiry Details which will have workload specific details.
	// For e.g. - For SQL and oracle this will contain different details.
	InquiryDetails []WorkloadInquiryDetailsResponse `pulumi:"inquiryDetails"`
	// Inquiry Status for this container such as
	// InProgress | Failed | Succeeded
	Status *string `pulumi:"status"`
}

// Validation for inquired protectable items under a given container.
type InquiryValidation struct {
	// Status for the Inquiry Validation.
	Status *string `pulumi:"status"`
}

// Validation for inquired protectable items under a given container.
type InquiryValidationResponse struct {
	// Error Additional Detail in case the status is non-success.
	AdditionalDetail string `pulumi:"additionalDetail"`
	// Error Detail in case the status is non-success.
	ErrorDetail *ErrorDetailResponse `pulumi:"errorDetail"`
	// Status for the Inquiry Validation.
	Status *string `pulumi:"status"`
}

type InstantRPAdditionalDetails struct {
	AzureBackupRGNamePrefix *string `pulumi:"azureBackupRGNamePrefix"`
	AzureBackupRGNameSuffix *string `pulumi:"azureBackupRGNameSuffix"`
}

type InstantRPAdditionalDetailsResponse struct {
	AzureBackupRGNamePrefix *string `pulumi:"azureBackupRGNamePrefix"`
	AzureBackupRGNameSuffix *string `pulumi:"azureBackupRGNameSuffix"`
}

// KPI Resource Health Details
type KPIResourceHealthDetails struct {
	// Resource Health Status
	ResourceHealthStatus *string `pulumi:"resourceHealthStatus"`
}

// KPI Resource Health Details
type KPIResourceHealthDetailsResponse struct {
	// Resource Health Status
	ResourceHealthDetails []ResourceHealthDetailsResponse `pulumi:"resourceHealthDetails"`
	// Resource Health Status
	ResourceHealthStatus *string `pulumi:"resourceHealthStatus"`
}

// Key Encryption Key (KEK) information.
type KeyEncryptionKeyInfo struct {
	// The key URL / identifier.
	KeyIdentifier *string `pulumi:"keyIdentifier"`
	// The KeyVault resource ARM Id for key.
	KeyVaultResourceArmId *string `pulumi:"keyVaultResourceArmId"`
}

// Log policy schedule.
type LogSchedulePolicy struct {
	// Frequency of the log schedule operation of this policy in minutes.
	ScheduleFrequencyInMins *int `pulumi:"scheduleFrequencyInMins"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LogSchedulePolicy'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
}

// Log policy schedule.
type LogSchedulePolicyResponse struct {
	// Frequency of the log schedule operation of this policy in minutes.
	ScheduleFrequencyInMins *int `pulumi:"scheduleFrequencyInMins"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LogSchedulePolicy'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
}

// Long term retention policy.
type LongTermRetentionPolicy struct {
	// Daily retention schedule of the protection policy.
	DailySchedule *DailyRetentionSchedule `pulumi:"dailySchedule"`
	// Monthly retention schedule of the protection policy.
	MonthlySchedule *MonthlyRetentionSchedule `pulumi:"monthlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermRetentionPolicy'.
	RetentionPolicyType string `pulumi:"retentionPolicyType"`
	// Weekly retention schedule of the protection policy.
	WeeklySchedule *WeeklyRetentionSchedule `pulumi:"weeklySchedule"`
	// Yearly retention schedule of the protection policy.
	YearlySchedule *YearlyRetentionSchedule `pulumi:"yearlySchedule"`
}

// Long term retention policy.
type LongTermRetentionPolicyResponse struct {
	// Daily retention schedule of the protection policy.
	DailySchedule *DailyRetentionScheduleResponse `pulumi:"dailySchedule"`
	// Monthly retention schedule of the protection policy.
	MonthlySchedule *MonthlyRetentionScheduleResponse `pulumi:"monthlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermRetentionPolicy'.
	RetentionPolicyType string `pulumi:"retentionPolicyType"`
	// Weekly retention schedule of the protection policy.
	WeeklySchedule *WeeklyRetentionScheduleResponse `pulumi:"weeklySchedule"`
	// Yearly retention schedule of the protection policy.
	YearlySchedule *YearlyRetentionScheduleResponse `pulumi:"yearlySchedule"`
}

// Long term policy schedule.
type LongTermSchedulePolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermSchedulePolicy'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
}

// Long term policy schedule.
type LongTermSchedulePolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermSchedulePolicy'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
}

// MAB workload-specific Health Details.
type MABContainerHealthDetails struct {
	// Health Code
	Code *int `pulumi:"code"`
	// Health Message
	Message *string `pulumi:"message"`
	// Health Recommended Actions
	Recommendations []string `pulumi:"recommendations"`
	// Health Title
	Title *string `pulumi:"title"`
}

// MAB workload-specific Health Details.
type MABContainerHealthDetailsResponse struct {
	// Health Code
	Code *int `pulumi:"code"`
	// Health Message
	Message *string `pulumi:"message"`
	// Health Recommended Actions
	Recommendations []string `pulumi:"recommendations"`
	// Health Title
	Title *string `pulumi:"title"`
}

// Container with items backed up using MAB backup engine.
type MabContainer struct {
	// Agent version of this container.
	AgentVersion *string `pulumi:"agentVersion"`
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Can the container be registered one more time.
	CanReRegister *bool `pulumi:"canReRegister"`
	// Health state of mab container.
	ContainerHealthState *string `pulumi:"containerHealthState"`
	// ContainerID represents the container.
	ContainerId *float64 `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Windows'.
	ContainerType string `pulumi:"containerType"`
	// Additional information for this container
	ExtendedInfo *MabContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Health details on this mab container.
	MabContainerHealthDetails []MABContainerHealthDetails `pulumi:"mabContainerHealthDetails"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of items backed up in this container.
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// Additional information of the container.
type MabContainerExtendedInfo struct {
	// Type of backup items associated with this container.
	BackupItemType *string `pulumi:"backupItemType"`
	// List of backup items associated with this container.
	BackupItems []string `pulumi:"backupItems"`
	// Latest backup status of this container.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Time stamp when this container was refreshed.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// Backup policy associated with this container.
	PolicyName *string `pulumi:"policyName"`
}

// Additional information of the container.
type MabContainerExtendedInfoResponse struct {
	// Type of backup items associated with this container.
	BackupItemType *string `pulumi:"backupItemType"`
	// List of backup items associated with this container.
	BackupItems []string `pulumi:"backupItems"`
	// Latest backup status of this container.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Time stamp when this container was refreshed.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// Backup policy associated with this container.
	PolicyName *string `pulumi:"policyName"`
}

// Container with items backed up using MAB backup engine.
type MabContainerResponse struct {
	// Agent version of this container.
	AgentVersion *string `pulumi:"agentVersion"`
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Can the container be registered one more time.
	CanReRegister *bool `pulumi:"canReRegister"`
	// Health state of mab container.
	ContainerHealthState *string `pulumi:"containerHealthState"`
	// ContainerID represents the container.
	ContainerId *float64 `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Windows'.
	ContainerType string `pulumi:"containerType"`
	// Additional information for this container
	ExtendedInfo *MabContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Health details on this mab container.
	MabContainerHealthDetails []MABContainerHealthDetailsResponse `pulumi:"mabContainerHealthDetails"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of items backed up in this container.
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// MAB workload-specific backup item.
type MabFileFolderProtectedItem struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Name of the computer associated with this backup item.
	ComputerName *string `pulumi:"computerName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Sync time for deferred deletion in UTC
	DeferredDeleteSyncTimeInUTC *float64 `pulumi:"deferredDeleteSyncTimeInUTC"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo *MabFileFolderProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Status of last backup operation.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'MabFileFolderProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Protected, ProtectionStopped, IRPending or ProtectionError
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Additional information on the backed up item.
type MabFileFolderProtectedItemExtendedInfo struct {
	// Last time when the agent data synced to service.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// The oldest backup copy available.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Number of backup copies associated with the backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Additional information on the backed up item.
type MabFileFolderProtectedItemExtendedInfoResponse struct {
	// Last time when the agent data synced to service.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// The oldest backup copy available.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Number of backup copies associated with the backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// MAB workload-specific backup item.
type MabFileFolderProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Name of the computer associated with this backup item.
	ComputerName *string `pulumi:"computerName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Sync time for deferred deletion in UTC
	DeferredDeleteSyncTimeInUTC *float64 `pulumi:"deferredDeleteSyncTimeInUTC"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo *MabFileFolderProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Status of last backup operation.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'MabFileFolderProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Protected, ProtectionStopped, IRPending or ProtectionError
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Type of workload this item represents.
	WorkloadType *string `pulumi:"workloadType"`
}

// Mab container-specific backup policy.
type MabProtectionPolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'MAB'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy details.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
}

// Mab container-specific backup policy.
type MabProtectionPolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'MAB'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy details.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
}

// Mars agent details.
type MarsAgentDetailsResponse struct {
	// The Mars agent Bios Id.
	BiosId string `pulumi:"biosId"`
	// The fabric object Id.
	FabricObjectId string `pulumi:"fabricObjectId"`
	// The Mars agent Fqdn.
	Fqdn string `pulumi:"fqdn"`
	// The health of the Mars agent.
	Health string `pulumi:"health"`
	// The health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The Mars agent Id.
	Id string `pulumi:"id"`
	// The last heartbeat received from the Mars agent.
	LastHeartbeatUtc string `pulumi:"lastHeartbeatUtc"`
	// The Mars agent name.
	Name string `pulumi:"name"`
	// The version.
	Version string `pulumi:"version"`
}

// Details of a Master Target Server.
type MasterTargetServerResponse struct {
	// Agent expiry date.
	AgentExpiryDate *string `pulumi:"agentExpiryDate"`
	// The version of the scout component on the server.
	AgentVersion *string `pulumi:"agentVersion"`
	// Agent version details.
	AgentVersionDetails *VersionDetailsResponse `pulumi:"agentVersionDetails"`
	// The list of data stores in the fabric.
	DataStores []DataStoreResponse `pulumi:"dataStores"`
	// Disk count of the master target.
	DiskCount *int `pulumi:"diskCount"`
	// Health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The server Id.
	Id *string `pulumi:"id"`
	// The IP address of the server.
	IpAddress *string `pulumi:"ipAddress"`
	// The last heartbeat received from the server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// MARS agent expiry date.
	MarsAgentExpiryDate *string `pulumi:"marsAgentExpiryDate"`
	// MARS agent version.
	MarsAgentVersion *string `pulumi:"marsAgentVersion"`
	// Mars agent version details.
	MarsAgentVersionDetails *VersionDetailsResponse `pulumi:"marsAgentVersionDetails"`
	// The server name.
	Name *string `pulumi:"name"`
	// The OS type of the server.
	OsType *string `pulumi:"osType"`
	// OS Version of the master target.
	OsVersion *string `pulumi:"osVersion"`
	// The retention volumes of Master target Server.
	RetentionVolumes []RetentionVolumeResponse `pulumi:"retentionVolumes"`
	// Validation errors.
	ValidationErrors []HealthErrorResponse `pulumi:"validationErrors"`
	// Version status.
	VersionStatus *string `pulumi:"versionStatus"`
}

// Migration item properties.
type MigrationItemPropertiesResponse struct {
	// The allowed operations on the migration item based on the current migration state of the item.
	AllowedOperations []string `pulumi:"allowedOperations"`
	// The current job details.
	CurrentJob CurrentJobDetailsResponse `pulumi:"currentJob"`
	// The correlation Id for events associated with this migration item.
	EventCorrelationId string `pulumi:"eventCorrelationId"`
	// The consolidated health.
	Health string `pulumi:"health"`
	// The list of health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The status of the last test migration.
	LastTestMigrationStatus string `pulumi:"lastTestMigrationStatus"`
	// The last test migration time.
	LastTestMigrationTime string `pulumi:"lastTestMigrationTime"`
	// The on-premise virtual machine name.
	MachineName string `pulumi:"machineName"`
	// The migration status.
	MigrationState string `pulumi:"migrationState"`
	// The migration state description.
	MigrationStateDescription string `pulumi:"migrationStateDescription"`
	// The name of policy governing this item.
	PolicyFriendlyName string `pulumi:"policyFriendlyName"`
	// The ARM Id of policy governing this item.
	PolicyId string `pulumi:"policyId"`
	// The migration provider custom settings.
	ProviderSpecificDetails *VMwareCbtMigrationDetailsResponse `pulumi:"providerSpecificDetails"`
	// The test migrate state.
	TestMigrateState string `pulumi:"testMigrateState"`
	// The test migrate state description.
	TestMigrateStateDescription string `pulumi:"testMigrateStateDescription"`
}

// Migration item properties.
type MigrationItemPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrationItemPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationItemPropertiesResponse)(nil)).Elem()
}

func (o MigrationItemPropertiesResponseOutput) ToMigrationItemPropertiesResponseOutput() MigrationItemPropertiesResponseOutput {
	return o
}

func (o MigrationItemPropertiesResponseOutput) ToMigrationItemPropertiesResponseOutputWithContext(ctx context.Context) MigrationItemPropertiesResponseOutput {
	return o
}

// The allowed operations on the migration item based on the current migration state of the item.
func (o MigrationItemPropertiesResponseOutput) AllowedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) []string { return v.AllowedOperations }).(pulumi.StringArrayOutput)
}

// The current job details.
func (o MigrationItemPropertiesResponseOutput) CurrentJob() CurrentJobDetailsResponseOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) CurrentJobDetailsResponse { return v.CurrentJob }).(CurrentJobDetailsResponseOutput)
}

// The correlation Id for events associated with this migration item.
func (o MigrationItemPropertiesResponseOutput) EventCorrelationId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.EventCorrelationId }).(pulumi.StringOutput)
}

// The consolidated health.
func (o MigrationItemPropertiesResponseOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.Health }).(pulumi.StringOutput)
}

// The list of health errors.
func (o MigrationItemPropertiesResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The status of the last test migration.
func (o MigrationItemPropertiesResponseOutput) LastTestMigrationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.LastTestMigrationStatus }).(pulumi.StringOutput)
}

// The last test migration time.
func (o MigrationItemPropertiesResponseOutput) LastTestMigrationTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.LastTestMigrationTime }).(pulumi.StringOutput)
}

// The on-premise virtual machine name.
func (o MigrationItemPropertiesResponseOutput) MachineName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.MachineName }).(pulumi.StringOutput)
}

// The migration status.
func (o MigrationItemPropertiesResponseOutput) MigrationState() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.MigrationState }).(pulumi.StringOutput)
}

// The migration state description.
func (o MigrationItemPropertiesResponseOutput) MigrationStateDescription() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.MigrationStateDescription }).(pulumi.StringOutput)
}

// The name of policy governing this item.
func (o MigrationItemPropertiesResponseOutput) PolicyFriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.PolicyFriendlyName }).(pulumi.StringOutput)
}

// The ARM Id of policy governing this item.
func (o MigrationItemPropertiesResponseOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.PolicyId }).(pulumi.StringOutput)
}

// The migration provider custom settings.
func (o MigrationItemPropertiesResponseOutput) ProviderSpecificDetails() VMwareCbtMigrationDetailsResponsePtrOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) *VMwareCbtMigrationDetailsResponse {
		return v.ProviderSpecificDetails
	}).(VMwareCbtMigrationDetailsResponsePtrOutput)
}

// The test migrate state.
func (o MigrationItemPropertiesResponseOutput) TestMigrateState() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.TestMigrateState }).(pulumi.StringOutput)
}

// The test migrate state description.
func (o MigrationItemPropertiesResponseOutput) TestMigrateStateDescription() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.TestMigrateStateDescription }).(pulumi.StringOutput)
}

// The Mobility Service update details.
type MobilityServiceUpdateResponse struct {
	// The OS type.
	OsType *string `pulumi:"osType"`
	// The reboot status of the update - whether it is required or not.
	RebootStatus *string `pulumi:"rebootStatus"`
	// The version of the latest update.
	Version *string `pulumi:"version"`
}

// Monthly retention schedule.
type MonthlyRetentionSchedule struct {
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// Daily retention format for monthly retention policy.
	RetentionScheduleDaily *DailyRetentionFormat `pulumi:"retentionScheduleDaily"`
	// Retention schedule format type for monthly retention policy.
	RetentionScheduleFormatType *string `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for monthly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormat `pulumi:"retentionScheduleWeekly"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Monthly retention schedule.
type MonthlyRetentionScheduleResponse struct {
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// Daily retention format for monthly retention policy.
	RetentionScheduleDaily *DailyRetentionFormatResponse `pulumi:"retentionScheduleDaily"`
	// Retention schedule format type for monthly retention policy.
	RetentionScheduleFormatType *string `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for monthly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormatResponse `pulumi:"retentionScheduleWeekly"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Network Mapping Properties.
type NetworkMappingPropertiesResponse struct {
	// The fabric specific settings.
	FabricSpecificSettings interface{} `pulumi:"fabricSpecificSettings"`
	// The primary fabric friendly name.
	PrimaryFabricFriendlyName *string `pulumi:"primaryFabricFriendlyName"`
	// The primary network friendly name.
	PrimaryNetworkFriendlyName *string `pulumi:"primaryNetworkFriendlyName"`
	// The primary network id for network mapping.
	PrimaryNetworkId *string `pulumi:"primaryNetworkId"`
	// The recovery fabric ARM id.
	RecoveryFabricArmId *string `pulumi:"recoveryFabricArmId"`
	// The recovery fabric friendly name.
	RecoveryFabricFriendlyName *string `pulumi:"recoveryFabricFriendlyName"`
	// The recovery network friendly name.
	RecoveryNetworkFriendlyName *string `pulumi:"recoveryNetworkFriendlyName"`
	// The recovery network id for network mapping.
	RecoveryNetworkId *string `pulumi:"recoveryNetworkId"`
	// The pairing state for network mapping.
	State *string `pulumi:"state"`
}

// Network Mapping Properties.
type NetworkMappingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (NetworkMappingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkMappingPropertiesResponse)(nil)).Elem()
}

func (o NetworkMappingPropertiesResponseOutput) ToNetworkMappingPropertiesResponseOutput() NetworkMappingPropertiesResponseOutput {
	return o
}

func (o NetworkMappingPropertiesResponseOutput) ToNetworkMappingPropertiesResponseOutputWithContext(ctx context.Context) NetworkMappingPropertiesResponseOutput {
	return o
}

// The fabric specific settings.
func (o NetworkMappingPropertiesResponseOutput) FabricSpecificSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) interface{} { return v.FabricSpecificSettings }).(pulumi.AnyOutput)
}

// The primary fabric friendly name.
func (o NetworkMappingPropertiesResponseOutput) PrimaryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.PrimaryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The primary network friendly name.
func (o NetworkMappingPropertiesResponseOutput) PrimaryNetworkFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.PrimaryNetworkFriendlyName }).(pulumi.StringPtrOutput)
}

// The primary network id for network mapping.
func (o NetworkMappingPropertiesResponseOutput) PrimaryNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.PrimaryNetworkId }).(pulumi.StringPtrOutput)
}

// The recovery fabric ARM id.
func (o NetworkMappingPropertiesResponseOutput) RecoveryFabricArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.RecoveryFabricArmId }).(pulumi.StringPtrOutput)
}

// The recovery fabric friendly name.
func (o NetworkMappingPropertiesResponseOutput) RecoveryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.RecoveryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery network friendly name.
func (o NetworkMappingPropertiesResponseOutput) RecoveryNetworkFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.RecoveryNetworkFriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery network id for network mapping.
func (o NetworkMappingPropertiesResponseOutput) RecoveryNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.RecoveryNetworkId }).(pulumi.StringPtrOutput)
}

// The pairing state for network mapping.
func (o NetworkMappingPropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Disk Details.
type OSDetailsResponse struct {
	// The OS Major Version.
	OSMajorVersion *string `pulumi:"oSMajorVersion"`
	// The OS Minor Version.
	OSMinorVersion *string `pulumi:"oSMinorVersion"`
	// The OS Version.
	OSVersion *string `pulumi:"oSVersion"`
	// The OSEdition.
	OsEdition *string `pulumi:"osEdition"`
	// VM Disk details.
	OsType *string `pulumi:"osType"`
	// Product type.
	ProductType *string `pulumi:"productType"`
}

// Details of the OS Disk.
type OSDiskDetailsResponse struct {
	// The type of the OS on the VM.
	OsType *string `pulumi:"osType"`
	// The id of the disk containing the OS.
	OsVhdId *string `pulumi:"osVhdId"`
	// The OS disk VHD name.
	VhdName *string `pulumi:"vhdName"`
}

// Protection profile custom data details.
type PolicyPropertiesResponse struct {
	// The FriendlyName.
	FriendlyName *string `pulumi:"friendlyName"`
	// The ReplicationChannelSetting.
	ProviderSpecificDetails interface{} `pulumi:"providerSpecificDetails"`
}

// Protection profile custom data details.
type PolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPropertiesResponse)(nil)).Elem()
}

func (o PolicyPropertiesResponseOutput) ToPolicyPropertiesResponseOutput() PolicyPropertiesResponseOutput {
	return o
}

func (o PolicyPropertiesResponseOutput) ToPolicyPropertiesResponseOutputWithContext(ctx context.Context) PolicyPropertiesResponseOutput {
	return o
}

// The FriendlyName.
func (o PolicyPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The ReplicationChannelSetting.
func (o PolicyPropertiesResponseOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v PolicyPropertiesResponse) interface{} { return v.ProviderSpecificDetails }).(pulumi.AnyOutput)
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection
type PrivateEndpoint struct {
	// Gets or sets id
	Id *string `pulumi:"id"`
}

// PrivateEndpointInput is an input type that accepts PrivateEndpointArgs and PrivateEndpointOutput values.
// You can construct a concrete instance of `PrivateEndpointInput` via:
//
//	PrivateEndpointArgs{...}
type PrivateEndpointInput interface {
	pulumi.Input

	ToPrivateEndpointOutput() PrivateEndpointOutput
	ToPrivateEndpointOutputWithContext(context.Context) PrivateEndpointOutput
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection
type PrivateEndpointArgs struct {
	// Gets or sets id
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (PrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpoint)(nil)).Elem()
}

func (i PrivateEndpointArgs) ToPrivateEndpointOutput() PrivateEndpointOutput {
	return i.ToPrivateEndpointOutputWithContext(context.Background())
}

func (i PrivateEndpointArgs) ToPrivateEndpointOutputWithContext(ctx context.Context) PrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointOutput)
}

func (i PrivateEndpointArgs) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return i.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (i PrivateEndpointArgs) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointOutput).ToPrivateEndpointPtrOutputWithContext(ctx)
}

// PrivateEndpointPtrInput is an input type that accepts PrivateEndpointArgs, PrivateEndpointPtr and PrivateEndpointPtrOutput values.
// You can construct a concrete instance of `PrivateEndpointPtrInput` via:
//
//	        PrivateEndpointArgs{...}
//
//	or:
//
//	        nil
type PrivateEndpointPtrInput interface {
	pulumi.Input

	ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput
	ToPrivateEndpointPtrOutputWithContext(context.Context) PrivateEndpointPtrOutput
}

type privateEndpointPtrType PrivateEndpointArgs

func PrivateEndpointPtr(v *PrivateEndpointArgs) PrivateEndpointPtrInput {
	return (*privateEndpointPtrType)(v)
}

func (*privateEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpoint)(nil)).Elem()
}

func (i *privateEndpointPtrType) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return i.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (i *privateEndpointPtrType) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointPtrOutput)
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection
type PrivateEndpointOutput struct{ *pulumi.OutputState }

func (PrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpoint)(nil)).Elem()
}

func (o PrivateEndpointOutput) ToPrivateEndpointOutput() PrivateEndpointOutput {
	return o
}

func (o PrivateEndpointOutput) ToPrivateEndpointOutputWithContext(ctx context.Context) PrivateEndpointOutput {
	return o
}

func (o PrivateEndpointOutput) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return o.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointOutput) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpoint) *PrivateEndpoint {
		return &v
	}).(PrivateEndpointPtrOutput)
}

// Gets or sets id
func (o PrivateEndpointOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpoint) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type PrivateEndpointPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpoint)(nil)).Elem()
}

func (o PrivateEndpointPtrOutput) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return o
}

func (o PrivateEndpointPtrOutput) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return o
}

func (o PrivateEndpointPtrOutput) Elem() PrivateEndpointOutput {
	return o.ApplyT(func(v *PrivateEndpoint) PrivateEndpoint {
		if v != nil {
			return *v
		}
		var ret PrivateEndpoint
		return ret
	}).(PrivateEndpointOutput)
}

// Gets or sets id
func (o PrivateEndpointPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Private Endpoint Connection Response Properties
type PrivateEndpointConnectionType struct {
	// Gets or sets private endpoint associated with the private endpoint connection
	PrivateEndpoint *PrivateEndpoint `pulumi:"privateEndpoint"`
	// Gets or sets private link service connection state
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState `pulumi:"privateLinkServiceConnectionState"`
	// Gets or sets provisioning state of the private endpoint connection
	ProvisioningState *string `pulumi:"provisioningState"`
}

// PrivateEndpointConnectionTypeInput is an input type that accepts PrivateEndpointConnectionTypeArgs and PrivateEndpointConnectionTypeOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionTypeInput` via:
//
//	PrivateEndpointConnectionTypeArgs{...}
type PrivateEndpointConnectionTypeInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionTypeOutput() PrivateEndpointConnectionTypeOutput
	ToPrivateEndpointConnectionTypeOutputWithContext(context.Context) PrivateEndpointConnectionTypeOutput
}

// Private Endpoint Connection Response Properties
type PrivateEndpointConnectionTypeArgs struct {
	// Gets or sets private endpoint associated with the private endpoint connection
	PrivateEndpoint PrivateEndpointPtrInput `pulumi:"privateEndpoint"`
	// Gets or sets private link service connection state
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStatePtrInput `pulumi:"privateLinkServiceConnectionState"`
	// Gets or sets provisioning state of the private endpoint connection
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (PrivateEndpointConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionType)(nil)).Elem()
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypeOutput() PrivateEndpointConnectionTypeOutput {
	return i.ToPrivateEndpointConnectionTypeOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypeOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionTypeOutput)
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypePtrOutput() PrivateEndpointConnectionTypePtrOutput {
	return i.ToPrivateEndpointConnectionTypePtrOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionTypeOutput).ToPrivateEndpointConnectionTypePtrOutputWithContext(ctx)
}

// PrivateEndpointConnectionTypePtrInput is an input type that accepts PrivateEndpointConnectionTypeArgs, PrivateEndpointConnectionTypePtr and PrivateEndpointConnectionTypePtrOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionTypePtrInput` via:
//
//	        PrivateEndpointConnectionTypeArgs{...}
//
//	or:
//
//	        nil
type PrivateEndpointConnectionTypePtrInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionTypePtrOutput() PrivateEndpointConnectionTypePtrOutput
	ToPrivateEndpointConnectionTypePtrOutputWithContext(context.Context) PrivateEndpointConnectionTypePtrOutput
}

type privateEndpointConnectionTypePtrType PrivateEndpointConnectionTypeArgs

func PrivateEndpointConnectionTypePtr(v *PrivateEndpointConnectionTypeArgs) PrivateEndpointConnectionTypePtrInput {
	return (*privateEndpointConnectionTypePtrType)(v)
}

func (*privateEndpointConnectionTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionType)(nil)).Elem()
}

func (i *privateEndpointConnectionTypePtrType) ToPrivateEndpointConnectionTypePtrOutput() PrivateEndpointConnectionTypePtrOutput {
	return i.ToPrivateEndpointConnectionTypePtrOutputWithContext(context.Background())
}

func (i *privateEndpointConnectionTypePtrType) ToPrivateEndpointConnectionTypePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionTypePtrOutput)
}

// Private Endpoint Connection Response Properties
type PrivateEndpointConnectionTypeOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionType)(nil)).Elem()
}

func (o PrivateEndpointConnectionTypeOutput) ToPrivateEndpointConnectionTypeOutput() PrivateEndpointConnectionTypeOutput {
	return o
}

func (o PrivateEndpointConnectionTypeOutput) ToPrivateEndpointConnectionTypeOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypeOutput {
	return o
}

func (o PrivateEndpointConnectionTypeOutput) ToPrivateEndpointConnectionTypePtrOutput() PrivateEndpointConnectionTypePtrOutput {
	return o.ToPrivateEndpointConnectionTypePtrOutputWithContext(context.Background())
}

func (o PrivateEndpointConnectionTypeOutput) ToPrivateEndpointConnectionTypePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpointConnectionType) *PrivateEndpointConnectionType {
		return &v
	}).(PrivateEndpointConnectionTypePtrOutput)
}

// Gets or sets private endpoint associated with the private endpoint connection
func (o PrivateEndpointConnectionTypeOutput) PrivateEndpoint() PrivateEndpointPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionType) *PrivateEndpoint { return v.PrivateEndpoint }).(PrivateEndpointPtrOutput)
}

// Gets or sets private link service connection state
func (o PrivateEndpointConnectionTypeOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionType) *PrivateLinkServiceConnectionState {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// Gets or sets provisioning state of the private endpoint connection
func (o PrivateEndpointConnectionTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type PrivateEndpointConnectionTypePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionType)(nil)).Elem()
}

func (o PrivateEndpointConnectionTypePtrOutput) ToPrivateEndpointConnectionTypePtrOutput() PrivateEndpointConnectionTypePtrOutput {
	return o
}

func (o PrivateEndpointConnectionTypePtrOutput) ToPrivateEndpointConnectionTypePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypePtrOutput {
	return o
}

func (o PrivateEndpointConnectionTypePtrOutput) Elem() PrivateEndpointConnectionTypeOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionType) PrivateEndpointConnectionType {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointConnectionType
		return ret
	}).(PrivateEndpointConnectionTypeOutput)
}

// Gets or sets private endpoint associated with the private endpoint connection
func (o PrivateEndpointConnectionTypePtrOutput) PrivateEndpoint() PrivateEndpointPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionType) *PrivateEndpoint {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoint
	}).(PrivateEndpointPtrOutput)
}

// Gets or sets private link service connection state
func (o PrivateEndpointConnectionTypePtrOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionType) *PrivateLinkServiceConnectionState {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// Gets or sets provisioning state of the private endpoint connection
func (o PrivateEndpointConnectionTypePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionType) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Private Endpoint Connection Response Properties
type PrivateEndpointConnectionResponse struct {
	// Gets or sets private endpoint associated with the private endpoint connection
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// Gets or sets private link service connection state
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// Gets or sets provisioning state of the private endpoint connection
	ProvisioningState *string `pulumi:"provisioningState"`
}

// Private Endpoint Connection Response Properties
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// Gets or sets private endpoint associated with the private endpoint connection
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// Gets or sets private link service connection state
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// Gets or sets provisioning state of the private endpoint connection
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Information to be stored in Vault properties as an element of privateEndpointConnections List.
type PrivateEndpointConnectionVaultPropertiesResponse struct {
	// Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.
	Id string `pulumi:"id"`
	// The location of the private Endpoint connection
	Location string `pulumi:"location"`
	// The name of the private Endpoint Connection
	Name string `pulumi:"name"`
	// Private Endpoint Connection Response Properties.
	Properties VaultPrivateEndpointConnectionResponse `pulumi:"properties"`
	// The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections
	Type string `pulumi:"type"`
}

// Information to be stored in Vault properties as an element of privateEndpointConnections List.
type PrivateEndpointConnectionVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionVaultPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) ToPrivateEndpointConnectionVaultPropertiesResponseOutput() PrivateEndpointConnectionVaultPropertiesResponseOutput {
	return o
}

func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) ToPrivateEndpointConnectionVaultPropertiesResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionVaultPropertiesResponseOutput {
	return o
}

// Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the private Endpoint connection
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the private Endpoint Connection
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Private Endpoint Connection Response Properties.
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Properties() VaultPrivateEndpointConnectionResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) VaultPrivateEndpointConnectionResponse {
		return v.Properties
	}).(VaultPrivateEndpointConnectionResponseOutput)
}

// The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionVaultPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionVaultPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) ToPrivateEndpointConnectionVaultPropertiesResponseArrayOutput() PrivateEndpointConnectionVaultPropertiesResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) ToPrivateEndpointConnectionVaultPropertiesResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionVaultPropertiesResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionVaultPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionVaultPropertiesResponse {
		return vs[0].([]PrivateEndpointConnectionVaultPropertiesResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionVaultPropertiesResponseOutput)
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection.
type PrivateEndpointResponse struct {
	// Gets or sets id.
	Id string `pulumi:"id"`
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// Gets or sets id.
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// Gets or sets id.
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Private Link Service Connection State
type PrivateLinkServiceConnectionState struct {
	// Gets or sets actions required
	ActionRequired *string `pulumi:"actionRequired"`
	// Gets or sets description
	Description *string `pulumi:"description"`
	// Gets or sets the status
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//	PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// Private Link Service Connection State
type PrivateLinkServiceConnectionStateArgs struct {
	// Gets or sets actions required
	ActionRequired pulumi.StringPtrInput `pulumi:"actionRequired"`
	// Gets or sets description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Gets or sets the status
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput).ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStatePtrInput is an input type that accepts PrivateLinkServiceConnectionStateArgs, PrivateLinkServiceConnectionStatePtr and PrivateLinkServiceConnectionStatePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStatePtrInput` via:
//
//	        PrivateLinkServiceConnectionStateArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkServiceConnectionStatePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput
	ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStatePtrOutput
}

type privateLinkServiceConnectionStatePtrType PrivateLinkServiceConnectionStateArgs

func PrivateLinkServiceConnectionStatePtr(v *PrivateLinkServiceConnectionStateArgs) PrivateLinkServiceConnectionStatePtrInput {
	return (*privateLinkServiceConnectionStatePtrType)(v)
}

func (*privateLinkServiceConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStatePtrOutput)
}

// Private Link Service Connection State
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkServiceConnectionState) *PrivateLinkServiceConnectionState {
		return &v
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// Gets or sets actions required
func (o PrivateLinkServiceConnectionStateOutput) ActionRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionRequired }).(pulumi.StringPtrOutput)
}

// Gets or sets description
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets or sets the status
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) Elem() PrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) PrivateLinkServiceConnectionState {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionState
		return ret
	}).(PrivateLinkServiceConnectionStateOutput)
}

// Gets or sets actions required
func (o PrivateLinkServiceConnectionStatePtrOutput) ActionRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionRequired
	}).(pulumi.StringPtrOutput)
}

// Gets or sets description
func (o PrivateLinkServiceConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the status
func (o PrivateLinkServiceConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Private Link Service Connection State
type PrivateLinkServiceConnectionStateResponse struct {
	// Gets or sets actions required
	ActionRequired *string `pulumi:"actionRequired"`
	// Gets or sets description
	Description *string `pulumi:"description"`
	// Gets or sets the status
	Status *string `pulumi:"status"`
}

// Private Link Service Connection State
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// Gets or sets actions required
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionRequired }).(pulumi.StringPtrOutput)
}

// Gets or sets description
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets or sets the status
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Elem() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) PrivateLinkServiceConnectionStateResponse {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionStateResponse
		return ret
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// Gets or sets actions required
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ActionRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionRequired
	}).(pulumi.StringPtrOutput)
}

// Gets or sets description
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the status
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Process server details.
type ProcessServerDetailsResponse struct {
	// The available memory.
	AvailableMemoryInBytes float64 `pulumi:"availableMemoryInBytes"`
	// The available disk space.
	AvailableSpaceInBytes float64 `pulumi:"availableSpaceInBytes"`
	// The process server Bios Id.
	BiosId string `pulumi:"biosId"`
	// The disk usage status.
	DiskUsageStatus string `pulumi:"diskUsageStatus"`
	// The fabric object Id.
	FabricObjectId string `pulumi:"fabricObjectId"`
	// The process server Fqdn.
	Fqdn string `pulumi:"fqdn"`
	// The free disk space percentage.
	FreeSpacePercentage float64 `pulumi:"freeSpacePercentage"`
	// The health of the process server.
	Health string `pulumi:"health"`
	// The health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The historic health of the process server based on the health in last 24 hours.
	HistoricHealth string `pulumi:"historicHealth"`
	// The process server Id.
	Id string `pulumi:"id"`
	// The list of IP addresses for communicating with the RCM component.
	IpAddresses []string `pulumi:"ipAddresses"`
	// The last heartbeat received from the process server.
	LastHeartbeatUtc string `pulumi:"lastHeartbeatUtc"`
	// The memory usage percentage.
	MemoryUsagePercentage float64 `pulumi:"memoryUsagePercentage"`
	// The memory usage status.
	MemoryUsageStatus string `pulumi:"memoryUsageStatus"`
	// The process server name.
	Name string `pulumi:"name"`
	// The processor usage percentage.
	ProcessorUsagePercentage float64 `pulumi:"processorUsagePercentage"`
	// The processor usage status.
	ProcessorUsageStatus string `pulumi:"processorUsageStatus"`
	// The protected item count.
	ProtectedItemCount int `pulumi:"protectedItemCount"`
	// The system load.
	SystemLoad float64 `pulumi:"systemLoad"`
	// The system load status.
	SystemLoadStatus string `pulumi:"systemLoadStatus"`
	// The throughput in bytes.
	ThroughputInBytes float64 `pulumi:"throughputInBytes"`
	// The throughput status.
	ThroughputStatus string `pulumi:"throughputStatus"`
	// The uploading pending data in bytes.
	ThroughputUploadPendingDataInBytes float64 `pulumi:"throughputUploadPendingDataInBytes"`
	// The total memory.
	TotalMemoryInBytes float64 `pulumi:"totalMemoryInBytes"`
	// The total disk space.
	TotalSpaceInBytes float64 `pulumi:"totalSpaceInBytes"`
	// The used memory.
	UsedMemoryInBytes float64 `pulumi:"usedMemoryInBytes"`
	// The used disk space.
	UsedSpaceInBytes float64 `pulumi:"usedSpaceInBytes"`
	// The version.
	Version string `pulumi:"version"`
}

// Details of the Process Server.
type ProcessServerResponse struct {
	// Agent expiry date.
	AgentExpiryDate *string `pulumi:"agentExpiryDate"`
	// The version of the scout component on the server.
	AgentVersion *string `pulumi:"agentVersion"`
	// The agent version details.
	AgentVersionDetails *VersionDetailsResponse `pulumi:"agentVersionDetails"`
	// The available memory.
	AvailableMemoryInBytes *float64 `pulumi:"availableMemoryInBytes"`
	// The available space.
	AvailableSpaceInBytes *float64 `pulumi:"availableSpaceInBytes"`
	// The percentage of the CPU load.
	CpuLoad *string `pulumi:"cpuLoad"`
	// The CPU load status.
	CpuLoadStatus *string `pulumi:"cpuLoadStatus"`
	// The Process Server's friendly name.
	FriendlyName *string `pulumi:"friendlyName"`
	// The health of Process Server.
	Health string `pulumi:"health"`
	// Health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The agent generated Id.
	HostId *string `pulumi:"hostId"`
	// The Process Server Id.
	Id *string `pulumi:"id"`
	// The IP address of the server.
	IpAddress *string `pulumi:"ipAddress"`
	// The last heartbeat received from the server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The servers configured with this PS.
	MachineCount *string `pulumi:"machineCount"`
	// The MARS communication status.
	MarsCommunicationStatus string `pulumi:"marsCommunicationStatus"`
	// The MARS registration status.
	MarsRegistrationStatus string `pulumi:"marsRegistrationStatus"`
	// The memory usage status.
	MemoryUsageStatus *string `pulumi:"memoryUsageStatus"`
	// The list of the mobility service updates available on the Process Server.
	MobilityServiceUpdates []MobilityServiceUpdateResponse `pulumi:"mobilityServiceUpdates"`
	// The OS type of the server.
	OsType *string `pulumi:"osType"`
	// OS Version of the process server. Note: This will get populated if user has CS version greater than 9.12.0.0.
	OsVersion *string `pulumi:"osVersion"`
	// The PS service status.
	PsServiceStatus *string `pulumi:"psServiceStatus"`
	// The process server stats refresh time.
	PsStatsRefreshTime string `pulumi:"psStatsRefreshTime"`
	// The number of replication pairs configured in this PS.
	ReplicationPairCount *string `pulumi:"replicationPairCount"`
	// The space usage status.
	SpaceUsageStatus *string `pulumi:"spaceUsageStatus"`
	// The PS SSL cert expiry date.
	SslCertExpiryDate *string `pulumi:"sslCertExpiryDate"`
	// CS SSL cert expiry date.
	SslCertExpiryRemainingDays *int `pulumi:"sslCertExpiryRemainingDays"`
	// The percentage of the system load.
	SystemLoad *string `pulumi:"systemLoad"`
	// The system load status.
	SystemLoadStatus *string `pulumi:"systemLoadStatus"`
	// The throughput in bytes.
	ThroughputInBytes float64 `pulumi:"throughputInBytes"`
	// The throughput in MBps.
	ThroughputInMBps float64 `pulumi:"throughputInMBps"`
	// The throughput status.
	ThroughputStatus string `pulumi:"throughputStatus"`
	// The uploading pending data in bytes.
	ThroughputUploadPendingDataInBytes float64 `pulumi:"throughputUploadPendingDataInBytes"`
	// The total memory.
	TotalMemoryInBytes *float64 `pulumi:"totalMemoryInBytes"`
	// The total space.
	TotalSpaceInBytes *float64 `pulumi:"totalSpaceInBytes"`
	// Version status.
	VersionStatus *string `pulumi:"versionStatus"`
}

// Protection container mapping properties.
type ProtectionContainerMappingPropertiesResponse struct {
	// Health of pairing.
	Health *string `pulumi:"health"`
	// Health error.
	HealthErrorDetails []HealthErrorResponse `pulumi:"healthErrorDetails"`
	// Friendly name of replication policy.
	PolicyFriendlyName *string `pulumi:"policyFriendlyName"`
	// Policy ARM Id.
	PolicyId *string `pulumi:"policyId"`
	// Provider specific provider details.
	ProviderSpecificDetails interface{} `pulumi:"providerSpecificDetails"`
	// Friendly name of source fabric.
	SourceFabricFriendlyName *string `pulumi:"sourceFabricFriendlyName"`
	// Friendly name of source protection container.
	SourceProtectionContainerFriendlyName *string `pulumi:"sourceProtectionContainerFriendlyName"`
	// Association Status.
	State *string `pulumi:"state"`
	// Friendly name of target fabric.
	TargetFabricFriendlyName *string `pulumi:"targetFabricFriendlyName"`
	// Friendly name of paired container.
	TargetProtectionContainerFriendlyName *string `pulumi:"targetProtectionContainerFriendlyName"`
	// Paired protection container ARM ID.
	TargetProtectionContainerId *string `pulumi:"targetProtectionContainerId"`
}

// Protection container mapping properties.
type ProtectionContainerMappingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ProtectionContainerMappingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionContainerMappingPropertiesResponse)(nil)).Elem()
}

func (o ProtectionContainerMappingPropertiesResponseOutput) ToProtectionContainerMappingPropertiesResponseOutput() ProtectionContainerMappingPropertiesResponseOutput {
	return o
}

func (o ProtectionContainerMappingPropertiesResponseOutput) ToProtectionContainerMappingPropertiesResponseOutputWithContext(ctx context.Context) ProtectionContainerMappingPropertiesResponseOutput {
	return o
}

// Health of pairing.
func (o ProtectionContainerMappingPropertiesResponseOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.Health }).(pulumi.StringPtrOutput)
}

// Health error.
func (o ProtectionContainerMappingPropertiesResponseOutput) HealthErrorDetails() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) []HealthErrorResponse {
		return v.HealthErrorDetails
	}).(HealthErrorResponseArrayOutput)
}

// Friendly name of replication policy.
func (o ProtectionContainerMappingPropertiesResponseOutput) PolicyFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.PolicyFriendlyName }).(pulumi.StringPtrOutput)
}

// Policy ARM Id.
func (o ProtectionContainerMappingPropertiesResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Provider specific provider details.
func (o ProtectionContainerMappingPropertiesResponseOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) interface{} { return v.ProviderSpecificDetails }).(pulumi.AnyOutput)
}

// Friendly name of source fabric.
func (o ProtectionContainerMappingPropertiesResponseOutput) SourceFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.SourceFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// Friendly name of source protection container.
func (o ProtectionContainerMappingPropertiesResponseOutput) SourceProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string {
		return v.SourceProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Association Status.
func (o ProtectionContainerMappingPropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Friendly name of target fabric.
func (o ProtectionContainerMappingPropertiesResponseOutput) TargetFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.TargetFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// Friendly name of paired container.
func (o ProtectionContainerMappingPropertiesResponseOutput) TargetProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string {
		return v.TargetProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Paired protection container ARM ID.
func (o ProtectionContainerMappingPropertiesResponseOutput) TargetProtectionContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.TargetProtectionContainerId }).(pulumi.StringPtrOutput)
}

// Push installer details.
type PushInstallerDetailsResponse struct {
	// The push installer Bios Id.
	BiosId string `pulumi:"biosId"`
	// The fabric object Id.
	FabricObjectId string `pulumi:"fabricObjectId"`
	// The push installer Fqdn.
	Fqdn string `pulumi:"fqdn"`
	// The health of the push installer.
	Health string `pulumi:"health"`
	// The health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The push installer Id.
	Id string `pulumi:"id"`
	// The last heartbeat received from the push installer.
	LastHeartbeatUtc string `pulumi:"lastHeartbeatUtc"`
	// The push installer name.
	Name string `pulumi:"name"`
	// The version.
	Version string `pulumi:"version"`
}

// RCM proxy details.
type RcmProxyDetailsResponse struct {
	// The RCM proxy Bios Id.
	BiosId string `pulumi:"biosId"`
	// The client authentication type.
	ClientAuthenticationType string `pulumi:"clientAuthenticationType"`
	// The fabric object Id.
	FabricObjectId string `pulumi:"fabricObjectId"`
	// The RCM proxy Fqdn.
	Fqdn string `pulumi:"fqdn"`
	// The health of the RCM proxy.
	Health string `pulumi:"health"`
	// The health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The RCM proxy Id.
	Id string `pulumi:"id"`
	// The last heartbeat received from the RCM proxy.
	LastHeartbeatUtc string `pulumi:"lastHeartbeatUtc"`
	// The RCM proxy name.
	Name string `pulumi:"name"`
	// The version.
	Version string `pulumi:"version"`
}

// Recovery plan A2A specific details.
type RecoveryPlanA2ADetailsResponse struct {
	// Gets the Instance type.
	// Expected value is 'A2A'.
	InstanceType string `pulumi:"instanceType"`
	// The primary zone.
	PrimaryZone *string `pulumi:"primaryZone"`
	// The recovery zone.
	RecoveryZone *string `pulumi:"recoveryZone"`
}

// Recovery plan A2A specific details.
type RecoveryPlanA2ADetailsResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanA2ADetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanA2ADetailsResponse)(nil)).Elem()
}

func (o RecoveryPlanA2ADetailsResponseOutput) ToRecoveryPlanA2ADetailsResponseOutput() RecoveryPlanA2ADetailsResponseOutput {
	return o
}

func (o RecoveryPlanA2ADetailsResponseOutput) ToRecoveryPlanA2ADetailsResponseOutputWithContext(ctx context.Context) RecoveryPlanA2ADetailsResponseOutput {
	return o
}

// Gets the Instance type.
// Expected value is 'A2A'.
func (o RecoveryPlanA2ADetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanA2ADetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The primary zone.
func (o RecoveryPlanA2ADetailsResponseOutput) PrimaryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanA2ADetailsResponse) *string { return v.PrimaryZone }).(pulumi.StringPtrOutput)
}

// The recovery zone.
func (o RecoveryPlanA2ADetailsResponseOutput) RecoveryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanA2ADetailsResponse) *string { return v.RecoveryZone }).(pulumi.StringPtrOutput)
}

type RecoveryPlanA2ADetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanA2ADetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanA2ADetailsResponse)(nil)).Elem()
}

func (o RecoveryPlanA2ADetailsResponseArrayOutput) ToRecoveryPlanA2ADetailsResponseArrayOutput() RecoveryPlanA2ADetailsResponseArrayOutput {
	return o
}

func (o RecoveryPlanA2ADetailsResponseArrayOutput) ToRecoveryPlanA2ADetailsResponseArrayOutputWithContext(ctx context.Context) RecoveryPlanA2ADetailsResponseArrayOutput {
	return o
}

func (o RecoveryPlanA2ADetailsResponseArrayOutput) Index(i pulumi.IntInput) RecoveryPlanA2ADetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanA2ADetailsResponse {
		return vs[0].([]RecoveryPlanA2ADetailsResponse)[vs[1].(int)]
	}).(RecoveryPlanA2ADetailsResponseOutput)
}

// Recovery plan A2A input.
type RecoveryPlanA2AInput struct {
	// Gets the Instance type.
	// Expected value is 'A2A'.
	InstanceType string `pulumi:"instanceType"`
	// The primary extended location.
	PrimaryExtendedLocation *ExtendedLocation `pulumi:"primaryExtendedLocation"`
	// The primary zone.
	PrimaryZone *string `pulumi:"primaryZone"`
	// The recovery extended location.
	RecoveryExtendedLocation *ExtendedLocation `pulumi:"recoveryExtendedLocation"`
	// The recovery zone.
	RecoveryZone *string `pulumi:"recoveryZone"`
}

// RecoveryPlanA2AInputInput is an input type that accepts RecoveryPlanA2AInputArgs and RecoveryPlanA2AInputOutput values.
// You can construct a concrete instance of `RecoveryPlanA2AInputInput` via:
//
//	RecoveryPlanA2AInputArgs{...}
type RecoveryPlanA2AInputInput interface {
	pulumi.Input

	ToRecoveryPlanA2AInputOutput() RecoveryPlanA2AInputOutput
	ToRecoveryPlanA2AInputOutputWithContext(context.Context) RecoveryPlanA2AInputOutput
}

// Recovery plan A2A input.
type RecoveryPlanA2AInputArgs struct {
	// Gets the Instance type.
	// Expected value is 'A2A'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The primary extended location.
	PrimaryExtendedLocation ExtendedLocationPtrInput `pulumi:"primaryExtendedLocation"`
	// The primary zone.
	PrimaryZone pulumi.StringPtrInput `pulumi:"primaryZone"`
	// The recovery extended location.
	RecoveryExtendedLocation ExtendedLocationPtrInput `pulumi:"recoveryExtendedLocation"`
	// The recovery zone.
	RecoveryZone pulumi.StringPtrInput `pulumi:"recoveryZone"`
}

func (RecoveryPlanA2AInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanA2AInput)(nil)).Elem()
}

func (i RecoveryPlanA2AInputArgs) ToRecoveryPlanA2AInputOutput() RecoveryPlanA2AInputOutput {
	return i.ToRecoveryPlanA2AInputOutputWithContext(context.Background())
}

func (i RecoveryPlanA2AInputArgs) ToRecoveryPlanA2AInputOutputWithContext(ctx context.Context) RecoveryPlanA2AInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanA2AInputOutput)
}

// RecoveryPlanA2AInputArrayInput is an input type that accepts RecoveryPlanA2AInputArray and RecoveryPlanA2AInputArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanA2AInputArrayInput` via:
//
//	RecoveryPlanA2AInputArray{ RecoveryPlanA2AInputArgs{...} }
type RecoveryPlanA2AInputArrayInput interface {
	pulumi.Input

	ToRecoveryPlanA2AInputArrayOutput() RecoveryPlanA2AInputArrayOutput
	ToRecoveryPlanA2AInputArrayOutputWithContext(context.Context) RecoveryPlanA2AInputArrayOutput
}

type RecoveryPlanA2AInputArray []RecoveryPlanA2AInputInput

func (RecoveryPlanA2AInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanA2AInput)(nil)).Elem()
}

func (i RecoveryPlanA2AInputArray) ToRecoveryPlanA2AInputArrayOutput() RecoveryPlanA2AInputArrayOutput {
	return i.ToRecoveryPlanA2AInputArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanA2AInputArray) ToRecoveryPlanA2AInputArrayOutputWithContext(ctx context.Context) RecoveryPlanA2AInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanA2AInputArrayOutput)
}

// Recovery plan A2A input.
type RecoveryPlanA2AInputOutput struct{ *pulumi.OutputState }

func (RecoveryPlanA2AInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanA2AInput)(nil)).Elem()
}

func (o RecoveryPlanA2AInputOutput) ToRecoveryPlanA2AInputOutput() RecoveryPlanA2AInputOutput {
	return o
}

func (o RecoveryPlanA2AInputOutput) ToRecoveryPlanA2AInputOutputWithContext(ctx context.Context) RecoveryPlanA2AInputOutput {
	return o
}

// Gets the Instance type.
// Expected value is 'A2A'.
func (o RecoveryPlanA2AInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanA2AInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The primary extended location.
func (o RecoveryPlanA2AInputOutput) PrimaryExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v RecoveryPlanA2AInput) *ExtendedLocation { return v.PrimaryExtendedLocation }).(ExtendedLocationPtrOutput)
}

// The primary zone.
func (o RecoveryPlanA2AInputOutput) PrimaryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanA2AInput) *string { return v.PrimaryZone }).(pulumi.StringPtrOutput)
}

// The recovery extended location.
func (o RecoveryPlanA2AInputOutput) RecoveryExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v RecoveryPlanA2AInput) *ExtendedLocation { return v.RecoveryExtendedLocation }).(ExtendedLocationPtrOutput)
}

// The recovery zone.
func (o RecoveryPlanA2AInputOutput) RecoveryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanA2AInput) *string { return v.RecoveryZone }).(pulumi.StringPtrOutput)
}

type RecoveryPlanA2AInputArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanA2AInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanA2AInput)(nil)).Elem()
}

func (o RecoveryPlanA2AInputArrayOutput) ToRecoveryPlanA2AInputArrayOutput() RecoveryPlanA2AInputArrayOutput {
	return o
}

func (o RecoveryPlanA2AInputArrayOutput) ToRecoveryPlanA2AInputArrayOutputWithContext(ctx context.Context) RecoveryPlanA2AInputArrayOutput {
	return o
}

func (o RecoveryPlanA2AInputArrayOutput) Index(i pulumi.IntInput) RecoveryPlanA2AInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanA2AInput {
		return vs[0].([]RecoveryPlanA2AInput)[vs[1].(int)]
	}).(RecoveryPlanA2AInputOutput)
}

// Recovery plan action details.
type RecoveryPlanAction struct {
	// The action name.
	ActionName string `pulumi:"actionName"`
	// The custom details.
	CustomDetails interface{} `pulumi:"customDetails"`
	// The list of failover directions.
	FailoverDirections []string `pulumi:"failoverDirections"`
	// The list of failover types.
	FailoverTypes []string `pulumi:"failoverTypes"`
}

// RecoveryPlanActionInput is an input type that accepts RecoveryPlanActionArgs and RecoveryPlanActionOutput values.
// You can construct a concrete instance of `RecoveryPlanActionInput` via:
//
//	RecoveryPlanActionArgs{...}
type RecoveryPlanActionInput interface {
	pulumi.Input

	ToRecoveryPlanActionOutput() RecoveryPlanActionOutput
	ToRecoveryPlanActionOutputWithContext(context.Context) RecoveryPlanActionOutput
}

// Recovery plan action details.
type RecoveryPlanActionArgs struct {
	// The action name.
	ActionName pulumi.StringInput `pulumi:"actionName"`
	// The custom details.
	CustomDetails pulumi.Input `pulumi:"customDetails"`
	// The list of failover directions.
	FailoverDirections pulumi.StringArrayInput `pulumi:"failoverDirections"`
	// The list of failover types.
	FailoverTypes pulumi.StringArrayInput `pulumi:"failoverTypes"`
}

func (RecoveryPlanActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanAction)(nil)).Elem()
}

func (i RecoveryPlanActionArgs) ToRecoveryPlanActionOutput() RecoveryPlanActionOutput {
	return i.ToRecoveryPlanActionOutputWithContext(context.Background())
}

func (i RecoveryPlanActionArgs) ToRecoveryPlanActionOutputWithContext(ctx context.Context) RecoveryPlanActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanActionOutput)
}

// RecoveryPlanActionArrayInput is an input type that accepts RecoveryPlanActionArray and RecoveryPlanActionArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanActionArrayInput` via:
//
//	RecoveryPlanActionArray{ RecoveryPlanActionArgs{...} }
type RecoveryPlanActionArrayInput interface {
	pulumi.Input

	ToRecoveryPlanActionArrayOutput() RecoveryPlanActionArrayOutput
	ToRecoveryPlanActionArrayOutputWithContext(context.Context) RecoveryPlanActionArrayOutput
}

type RecoveryPlanActionArray []RecoveryPlanActionInput

func (RecoveryPlanActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanAction)(nil)).Elem()
}

func (i RecoveryPlanActionArray) ToRecoveryPlanActionArrayOutput() RecoveryPlanActionArrayOutput {
	return i.ToRecoveryPlanActionArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanActionArray) ToRecoveryPlanActionArrayOutputWithContext(ctx context.Context) RecoveryPlanActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanActionArrayOutput)
}

// Recovery plan action details.
type RecoveryPlanActionOutput struct{ *pulumi.OutputState }

func (RecoveryPlanActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanAction)(nil)).Elem()
}

func (o RecoveryPlanActionOutput) ToRecoveryPlanActionOutput() RecoveryPlanActionOutput {
	return o
}

func (o RecoveryPlanActionOutput) ToRecoveryPlanActionOutputWithContext(ctx context.Context) RecoveryPlanActionOutput {
	return o
}

// The action name.
func (o RecoveryPlanActionOutput) ActionName() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanAction) string { return v.ActionName }).(pulumi.StringOutput)
}

// The custom details.
func (o RecoveryPlanActionOutput) CustomDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v RecoveryPlanAction) interface{} { return v.CustomDetails }).(pulumi.AnyOutput)
}

// The list of failover directions.
func (o RecoveryPlanActionOutput) FailoverDirections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanAction) []string { return v.FailoverDirections }).(pulumi.StringArrayOutput)
}

// The list of failover types.
func (o RecoveryPlanActionOutput) FailoverTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanAction) []string { return v.FailoverTypes }).(pulumi.StringArrayOutput)
}

type RecoveryPlanActionArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanAction)(nil)).Elem()
}

func (o RecoveryPlanActionArrayOutput) ToRecoveryPlanActionArrayOutput() RecoveryPlanActionArrayOutput {
	return o
}

func (o RecoveryPlanActionArrayOutput) ToRecoveryPlanActionArrayOutputWithContext(ctx context.Context) RecoveryPlanActionArrayOutput {
	return o
}

func (o RecoveryPlanActionArrayOutput) Index(i pulumi.IntInput) RecoveryPlanActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanAction {
		return vs[0].([]RecoveryPlanAction)[vs[1].(int)]
	}).(RecoveryPlanActionOutput)
}

// Recovery plan action details.
type RecoveryPlanActionResponse struct {
	// The action name.
	ActionName string `pulumi:"actionName"`
	// The custom details.
	CustomDetails interface{} `pulumi:"customDetails"`
	// The list of failover directions.
	FailoverDirections []string `pulumi:"failoverDirections"`
	// The list of failover types.
	FailoverTypes []string `pulumi:"failoverTypes"`
}

// Recovery plan action details.
type RecoveryPlanActionResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanActionResponse)(nil)).Elem()
}

func (o RecoveryPlanActionResponseOutput) ToRecoveryPlanActionResponseOutput() RecoveryPlanActionResponseOutput {
	return o
}

func (o RecoveryPlanActionResponseOutput) ToRecoveryPlanActionResponseOutputWithContext(ctx context.Context) RecoveryPlanActionResponseOutput {
	return o
}

// The action name.
func (o RecoveryPlanActionResponseOutput) ActionName() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanActionResponse) string { return v.ActionName }).(pulumi.StringOutput)
}

// The custom details.
func (o RecoveryPlanActionResponseOutput) CustomDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v RecoveryPlanActionResponse) interface{} { return v.CustomDetails }).(pulumi.AnyOutput)
}

// The list of failover directions.
func (o RecoveryPlanActionResponseOutput) FailoverDirections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanActionResponse) []string { return v.FailoverDirections }).(pulumi.StringArrayOutput)
}

// The list of failover types.
func (o RecoveryPlanActionResponseOutput) FailoverTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanActionResponse) []string { return v.FailoverTypes }).(pulumi.StringArrayOutput)
}

type RecoveryPlanActionResponseArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanActionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanActionResponse)(nil)).Elem()
}

func (o RecoveryPlanActionResponseArrayOutput) ToRecoveryPlanActionResponseArrayOutput() RecoveryPlanActionResponseArrayOutput {
	return o
}

func (o RecoveryPlanActionResponseArrayOutput) ToRecoveryPlanActionResponseArrayOutputWithContext(ctx context.Context) RecoveryPlanActionResponseArrayOutput {
	return o
}

func (o RecoveryPlanActionResponseArrayOutput) Index(i pulumi.IntInput) RecoveryPlanActionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanActionResponse {
		return vs[0].([]RecoveryPlanActionResponse)[vs[1].(int)]
	}).(RecoveryPlanActionResponseOutput)
}

// Recovery plan Automation runbook action details.
type RecoveryPlanAutomationRunbookActionDetails struct {
	// The fabric location.
	FabricLocation string `pulumi:"fabricLocation"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	// Expected value is 'AutomationRunbookActionDetails'.
	InstanceType string `pulumi:"instanceType"`
	// The runbook ARM Id.
	RunbookId *string `pulumi:"runbookId"`
	// The runbook timeout.
	Timeout *string `pulumi:"timeout"`
}

// Recovery plan Automation runbook action details.
type RecoveryPlanAutomationRunbookActionDetailsResponse struct {
	// The fabric location.
	FabricLocation string `pulumi:"fabricLocation"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	// Expected value is 'AutomationRunbookActionDetails'.
	InstanceType string `pulumi:"instanceType"`
	// The runbook ARM Id.
	RunbookId *string `pulumi:"runbookId"`
	// The runbook timeout.
	Timeout *string `pulumi:"timeout"`
}

// Recovery plan group details.
type RecoveryPlanGroup struct {
	// The end group actions.
	EndGroupActions []RecoveryPlanAction `pulumi:"endGroupActions"`
	// The group type.
	GroupType string `pulumi:"groupType"`
	// The list of protected items.
	ReplicationProtectedItems []RecoveryPlanProtectedItem `pulumi:"replicationProtectedItems"`
	// The start group actions.
	StartGroupActions []RecoveryPlanAction `pulumi:"startGroupActions"`
}

// RecoveryPlanGroupInput is an input type that accepts RecoveryPlanGroupArgs and RecoveryPlanGroupOutput values.
// You can construct a concrete instance of `RecoveryPlanGroupInput` via:
//
//	RecoveryPlanGroupArgs{...}
type RecoveryPlanGroupInput interface {
	pulumi.Input

	ToRecoveryPlanGroupOutput() RecoveryPlanGroupOutput
	ToRecoveryPlanGroupOutputWithContext(context.Context) RecoveryPlanGroupOutput
}

// Recovery plan group details.
type RecoveryPlanGroupArgs struct {
	// The end group actions.
	EndGroupActions RecoveryPlanActionArrayInput `pulumi:"endGroupActions"`
	// The group type.
	GroupType pulumi.StringInput `pulumi:"groupType"`
	// The list of protected items.
	ReplicationProtectedItems RecoveryPlanProtectedItemArrayInput `pulumi:"replicationProtectedItems"`
	// The start group actions.
	StartGroupActions RecoveryPlanActionArrayInput `pulumi:"startGroupActions"`
}

func (RecoveryPlanGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanGroup)(nil)).Elem()
}

func (i RecoveryPlanGroupArgs) ToRecoveryPlanGroupOutput() RecoveryPlanGroupOutput {
	return i.ToRecoveryPlanGroupOutputWithContext(context.Background())
}

func (i RecoveryPlanGroupArgs) ToRecoveryPlanGroupOutputWithContext(ctx context.Context) RecoveryPlanGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanGroupOutput)
}

// RecoveryPlanGroupArrayInput is an input type that accepts RecoveryPlanGroupArray and RecoveryPlanGroupArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanGroupArrayInput` via:
//
//	RecoveryPlanGroupArray{ RecoveryPlanGroupArgs{...} }
type RecoveryPlanGroupArrayInput interface {
	pulumi.Input

	ToRecoveryPlanGroupArrayOutput() RecoveryPlanGroupArrayOutput
	ToRecoveryPlanGroupArrayOutputWithContext(context.Context) RecoveryPlanGroupArrayOutput
}

type RecoveryPlanGroupArray []RecoveryPlanGroupInput

func (RecoveryPlanGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanGroup)(nil)).Elem()
}

func (i RecoveryPlanGroupArray) ToRecoveryPlanGroupArrayOutput() RecoveryPlanGroupArrayOutput {
	return i.ToRecoveryPlanGroupArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanGroupArray) ToRecoveryPlanGroupArrayOutputWithContext(ctx context.Context) RecoveryPlanGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanGroupArrayOutput)
}

// Recovery plan group details.
type RecoveryPlanGroupOutput struct{ *pulumi.OutputState }

func (RecoveryPlanGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanGroup)(nil)).Elem()
}

func (o RecoveryPlanGroupOutput) ToRecoveryPlanGroupOutput() RecoveryPlanGroupOutput {
	return o
}

func (o RecoveryPlanGroupOutput) ToRecoveryPlanGroupOutputWithContext(ctx context.Context) RecoveryPlanGroupOutput {
	return o
}

// The end group actions.
func (o RecoveryPlanGroupOutput) EndGroupActions() RecoveryPlanActionArrayOutput {
	return o.ApplyT(func(v RecoveryPlanGroup) []RecoveryPlanAction { return v.EndGroupActions }).(RecoveryPlanActionArrayOutput)
}

// The group type.
func (o RecoveryPlanGroupOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanGroup) string { return v.GroupType }).(pulumi.StringOutput)
}

// The list of protected items.
func (o RecoveryPlanGroupOutput) ReplicationProtectedItems() RecoveryPlanProtectedItemArrayOutput {
	return o.ApplyT(func(v RecoveryPlanGroup) []RecoveryPlanProtectedItem { return v.ReplicationProtectedItems }).(RecoveryPlanProtectedItemArrayOutput)
}

// The start group actions.
func (o RecoveryPlanGroupOutput) StartGroupActions() RecoveryPlanActionArrayOutput {
	return o.ApplyT(func(v RecoveryPlanGroup) []RecoveryPlanAction { return v.StartGroupActions }).(RecoveryPlanActionArrayOutput)
}

type RecoveryPlanGroupArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanGroup)(nil)).Elem()
}

func (o RecoveryPlanGroupArrayOutput) ToRecoveryPlanGroupArrayOutput() RecoveryPlanGroupArrayOutput {
	return o
}

func (o RecoveryPlanGroupArrayOutput) ToRecoveryPlanGroupArrayOutputWithContext(ctx context.Context) RecoveryPlanGroupArrayOutput {
	return o
}

func (o RecoveryPlanGroupArrayOutput) Index(i pulumi.IntInput) RecoveryPlanGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanGroup {
		return vs[0].([]RecoveryPlanGroup)[vs[1].(int)]
	}).(RecoveryPlanGroupOutput)
}

// Recovery plan group details.
type RecoveryPlanGroupResponse struct {
	// The end group actions.
	EndGroupActions []RecoveryPlanActionResponse `pulumi:"endGroupActions"`
	// The group type.
	GroupType string `pulumi:"groupType"`
	// The list of protected items.
	ReplicationProtectedItems []RecoveryPlanProtectedItemResponse `pulumi:"replicationProtectedItems"`
	// The start group actions.
	StartGroupActions []RecoveryPlanActionResponse `pulumi:"startGroupActions"`
}

// Recovery plan group details.
type RecoveryPlanGroupResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanGroupResponse)(nil)).Elem()
}

func (o RecoveryPlanGroupResponseOutput) ToRecoveryPlanGroupResponseOutput() RecoveryPlanGroupResponseOutput {
	return o
}

func (o RecoveryPlanGroupResponseOutput) ToRecoveryPlanGroupResponseOutputWithContext(ctx context.Context) RecoveryPlanGroupResponseOutput {
	return o
}

// The end group actions.
func (o RecoveryPlanGroupResponseOutput) EndGroupActions() RecoveryPlanActionResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanGroupResponse) []RecoveryPlanActionResponse { return v.EndGroupActions }).(RecoveryPlanActionResponseArrayOutput)
}

// The group type.
func (o RecoveryPlanGroupResponseOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanGroupResponse) string { return v.GroupType }).(pulumi.StringOutput)
}

// The list of protected items.
func (o RecoveryPlanGroupResponseOutput) ReplicationProtectedItems() RecoveryPlanProtectedItemResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanGroupResponse) []RecoveryPlanProtectedItemResponse {
		return v.ReplicationProtectedItems
	}).(RecoveryPlanProtectedItemResponseArrayOutput)
}

// The start group actions.
func (o RecoveryPlanGroupResponseOutput) StartGroupActions() RecoveryPlanActionResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanGroupResponse) []RecoveryPlanActionResponse { return v.StartGroupActions }).(RecoveryPlanActionResponseArrayOutput)
}

type RecoveryPlanGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanGroupResponse)(nil)).Elem()
}

func (o RecoveryPlanGroupResponseArrayOutput) ToRecoveryPlanGroupResponseArrayOutput() RecoveryPlanGroupResponseArrayOutput {
	return o
}

func (o RecoveryPlanGroupResponseArrayOutput) ToRecoveryPlanGroupResponseArrayOutputWithContext(ctx context.Context) RecoveryPlanGroupResponseArrayOutput {
	return o
}

func (o RecoveryPlanGroupResponseArrayOutput) Index(i pulumi.IntInput) RecoveryPlanGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanGroupResponse {
		return vs[0].([]RecoveryPlanGroupResponse)[vs[1].(int)]
	}).(RecoveryPlanGroupResponseOutput)
}

// Recovery plan manual action details.
type RecoveryPlanManualActionDetails struct {
	// The manual action description.
	Description *string `pulumi:"description"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	// Expected value is 'ManualActionDetails'.
	InstanceType string `pulumi:"instanceType"`
}

// Recovery plan manual action details.
type RecoveryPlanManualActionDetailsResponse struct {
	// The manual action description.
	Description *string `pulumi:"description"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	// Expected value is 'ManualActionDetails'.
	InstanceType string `pulumi:"instanceType"`
}

// Recovery plan properties.
type RecoveryPlanPropertiesResponse struct {
	// The list of allowed operations.
	AllowedOperations []string `pulumi:"allowedOperations"`
	// The current scenario details.
	CurrentScenario *CurrentScenarioDetailsResponse `pulumi:"currentScenario"`
	// The recovery plan status.
	CurrentScenarioStatus *string `pulumi:"currentScenarioStatus"`
	// The recovery plan status description.
	CurrentScenarioStatusDescription *string `pulumi:"currentScenarioStatusDescription"`
	// The failover deployment model.
	FailoverDeploymentModel *string `pulumi:"failoverDeploymentModel"`
	// The friendly name.
	FriendlyName *string `pulumi:"friendlyName"`
	// The recovery plan groups.
	Groups []RecoveryPlanGroupResponse `pulumi:"groups"`
	// The start time of the last planned failover.
	LastPlannedFailoverTime *string `pulumi:"lastPlannedFailoverTime"`
	// The start time of the last test failover.
	LastTestFailoverTime *string `pulumi:"lastTestFailoverTime"`
	// The start time of the last unplanned failover.
	LastUnplannedFailoverTime *string `pulumi:"lastUnplannedFailoverTime"`
	// The primary fabric friendly name.
	PrimaryFabricFriendlyName *string `pulumi:"primaryFabricFriendlyName"`
	// The primary fabric Id.
	PrimaryFabricId *string `pulumi:"primaryFabricId"`
	// The provider id and provider specific details.
	ProviderSpecificDetails []RecoveryPlanA2ADetailsResponse `pulumi:"providerSpecificDetails"`
	// The recovery fabric friendly name.
	RecoveryFabricFriendlyName *string `pulumi:"recoveryFabricFriendlyName"`
	// The recovery fabric Id.
	RecoveryFabricId *string `pulumi:"recoveryFabricId"`
	// The list of replication providers.
	ReplicationProviders []string `pulumi:"replicationProviders"`
}

// Recovery plan properties.
type RecoveryPlanPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanPropertiesResponse)(nil)).Elem()
}

func (o RecoveryPlanPropertiesResponseOutput) ToRecoveryPlanPropertiesResponseOutput() RecoveryPlanPropertiesResponseOutput {
	return o
}

func (o RecoveryPlanPropertiesResponseOutput) ToRecoveryPlanPropertiesResponseOutputWithContext(ctx context.Context) RecoveryPlanPropertiesResponseOutput {
	return o
}

// The list of allowed operations.
func (o RecoveryPlanPropertiesResponseOutput) AllowedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) []string { return v.AllowedOperations }).(pulumi.StringArrayOutput)
}

// The current scenario details.
func (o RecoveryPlanPropertiesResponseOutput) CurrentScenario() CurrentScenarioDetailsResponsePtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *CurrentScenarioDetailsResponse { return v.CurrentScenario }).(CurrentScenarioDetailsResponsePtrOutput)
}

// The recovery plan status.
func (o RecoveryPlanPropertiesResponseOutput) CurrentScenarioStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.CurrentScenarioStatus }).(pulumi.StringPtrOutput)
}

// The recovery plan status description.
func (o RecoveryPlanPropertiesResponseOutput) CurrentScenarioStatusDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.CurrentScenarioStatusDescription }).(pulumi.StringPtrOutput)
}

// The failover deployment model.
func (o RecoveryPlanPropertiesResponseOutput) FailoverDeploymentModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.FailoverDeploymentModel }).(pulumi.StringPtrOutput)
}

// The friendly name.
func (o RecoveryPlanPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery plan groups.
func (o RecoveryPlanPropertiesResponseOutput) Groups() RecoveryPlanGroupResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) []RecoveryPlanGroupResponse { return v.Groups }).(RecoveryPlanGroupResponseArrayOutput)
}

// The start time of the last planned failover.
func (o RecoveryPlanPropertiesResponseOutput) LastPlannedFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.LastPlannedFailoverTime }).(pulumi.StringPtrOutput)
}

// The start time of the last test failover.
func (o RecoveryPlanPropertiesResponseOutput) LastTestFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.LastTestFailoverTime }).(pulumi.StringPtrOutput)
}

// The start time of the last unplanned failover.
func (o RecoveryPlanPropertiesResponseOutput) LastUnplannedFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.LastUnplannedFailoverTime }).(pulumi.StringPtrOutput)
}

// The primary fabric friendly name.
func (o RecoveryPlanPropertiesResponseOutput) PrimaryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.PrimaryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The primary fabric Id.
func (o RecoveryPlanPropertiesResponseOutput) PrimaryFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.PrimaryFabricId }).(pulumi.StringPtrOutput)
}

// The provider id and provider specific details.
func (o RecoveryPlanPropertiesResponseOutput) ProviderSpecificDetails() RecoveryPlanA2ADetailsResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) []RecoveryPlanA2ADetailsResponse {
		return v.ProviderSpecificDetails
	}).(RecoveryPlanA2ADetailsResponseArrayOutput)
}

// The recovery fabric friendly name.
func (o RecoveryPlanPropertiesResponseOutput) RecoveryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.RecoveryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery fabric Id.
func (o RecoveryPlanPropertiesResponseOutput) RecoveryFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.RecoveryFabricId }).(pulumi.StringPtrOutput)
}

// The list of replication providers.
func (o RecoveryPlanPropertiesResponseOutput) ReplicationProviders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) []string { return v.ReplicationProviders }).(pulumi.StringArrayOutput)
}

// Recovery plan protected item.
type RecoveryPlanProtectedItem struct {
	// The ARM Id of the recovery plan protected item.
	Id *string `pulumi:"id"`
	// The virtual machine Id.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
}

// RecoveryPlanProtectedItemInput is an input type that accepts RecoveryPlanProtectedItemArgs and RecoveryPlanProtectedItemOutput values.
// You can construct a concrete instance of `RecoveryPlanProtectedItemInput` via:
//
//	RecoveryPlanProtectedItemArgs{...}
type RecoveryPlanProtectedItemInput interface {
	pulumi.Input

	ToRecoveryPlanProtectedItemOutput() RecoveryPlanProtectedItemOutput
	ToRecoveryPlanProtectedItemOutputWithContext(context.Context) RecoveryPlanProtectedItemOutput
}

// Recovery plan protected item.
type RecoveryPlanProtectedItemArgs struct {
	// The ARM Id of the recovery plan protected item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The virtual machine Id.
	VirtualMachineId pulumi.StringPtrInput `pulumi:"virtualMachineId"`
}

func (RecoveryPlanProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanProtectedItem)(nil)).Elem()
}

func (i RecoveryPlanProtectedItemArgs) ToRecoveryPlanProtectedItemOutput() RecoveryPlanProtectedItemOutput {
	return i.ToRecoveryPlanProtectedItemOutputWithContext(context.Background())
}

func (i RecoveryPlanProtectedItemArgs) ToRecoveryPlanProtectedItemOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanProtectedItemOutput)
}

// RecoveryPlanProtectedItemArrayInput is an input type that accepts RecoveryPlanProtectedItemArray and RecoveryPlanProtectedItemArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanProtectedItemArrayInput` via:
//
//	RecoveryPlanProtectedItemArray{ RecoveryPlanProtectedItemArgs{...} }
type RecoveryPlanProtectedItemArrayInput interface {
	pulumi.Input

	ToRecoveryPlanProtectedItemArrayOutput() RecoveryPlanProtectedItemArrayOutput
	ToRecoveryPlanProtectedItemArrayOutputWithContext(context.Context) RecoveryPlanProtectedItemArrayOutput
}

type RecoveryPlanProtectedItemArray []RecoveryPlanProtectedItemInput

func (RecoveryPlanProtectedItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanProtectedItem)(nil)).Elem()
}

func (i RecoveryPlanProtectedItemArray) ToRecoveryPlanProtectedItemArrayOutput() RecoveryPlanProtectedItemArrayOutput {
	return i.ToRecoveryPlanProtectedItemArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanProtectedItemArray) ToRecoveryPlanProtectedItemArrayOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanProtectedItemArrayOutput)
}

// Recovery plan protected item.
type RecoveryPlanProtectedItemOutput struct{ *pulumi.OutputState }

func (RecoveryPlanProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanProtectedItem)(nil)).Elem()
}

func (o RecoveryPlanProtectedItemOutput) ToRecoveryPlanProtectedItemOutput() RecoveryPlanProtectedItemOutput {
	return o
}

func (o RecoveryPlanProtectedItemOutput) ToRecoveryPlanProtectedItemOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemOutput {
	return o
}

// The ARM Id of the recovery plan protected item.
func (o RecoveryPlanProtectedItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanProtectedItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The virtual machine Id.
func (o RecoveryPlanProtectedItemOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanProtectedItem) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

type RecoveryPlanProtectedItemArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanProtectedItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanProtectedItem)(nil)).Elem()
}

func (o RecoveryPlanProtectedItemArrayOutput) ToRecoveryPlanProtectedItemArrayOutput() RecoveryPlanProtectedItemArrayOutput {
	return o
}

func (o RecoveryPlanProtectedItemArrayOutput) ToRecoveryPlanProtectedItemArrayOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemArrayOutput {
	return o
}

func (o RecoveryPlanProtectedItemArrayOutput) Index(i pulumi.IntInput) RecoveryPlanProtectedItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanProtectedItem {
		return vs[0].([]RecoveryPlanProtectedItem)[vs[1].(int)]
	}).(RecoveryPlanProtectedItemOutput)
}

// Recovery plan protected item.
type RecoveryPlanProtectedItemResponse struct {
	// The ARM Id of the recovery plan protected item.
	Id *string `pulumi:"id"`
	// The virtual machine Id.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
}

// Recovery plan protected item.
type RecoveryPlanProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanProtectedItemResponse)(nil)).Elem()
}

func (o RecoveryPlanProtectedItemResponseOutput) ToRecoveryPlanProtectedItemResponseOutput() RecoveryPlanProtectedItemResponseOutput {
	return o
}

func (o RecoveryPlanProtectedItemResponseOutput) ToRecoveryPlanProtectedItemResponseOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemResponseOutput {
	return o
}

// The ARM Id of the recovery plan protected item.
func (o RecoveryPlanProtectedItemResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanProtectedItemResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The virtual machine Id.
func (o RecoveryPlanProtectedItemResponseOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanProtectedItemResponse) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

type RecoveryPlanProtectedItemResponseArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanProtectedItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanProtectedItemResponse)(nil)).Elem()
}

func (o RecoveryPlanProtectedItemResponseArrayOutput) ToRecoveryPlanProtectedItemResponseArrayOutput() RecoveryPlanProtectedItemResponseArrayOutput {
	return o
}

func (o RecoveryPlanProtectedItemResponseArrayOutput) ToRecoveryPlanProtectedItemResponseArrayOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemResponseArrayOutput {
	return o
}

func (o RecoveryPlanProtectedItemResponseArrayOutput) Index(i pulumi.IntInput) RecoveryPlanProtectedItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanProtectedItemResponse {
		return vs[0].([]RecoveryPlanProtectedItemResponse)[vs[1].(int)]
	}).(RecoveryPlanProtectedItemResponseOutput)
}

// Recovery plan script action details.
type RecoveryPlanScriptActionDetails struct {
	// The fabric location.
	FabricLocation string `pulumi:"fabricLocation"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	// Expected value is 'ScriptActionDetails'.
	InstanceType string `pulumi:"instanceType"`
	// The script path.
	Path string `pulumi:"path"`
	// The script timeout.
	Timeout *string `pulumi:"timeout"`
}

// Recovery plan script action details.
type RecoveryPlanScriptActionDetailsResponse struct {
	// The fabric location.
	FabricLocation string `pulumi:"fabricLocation"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	// Expected value is 'ScriptActionDetails'.
	InstanceType string `pulumi:"instanceType"`
	// The script path.
	Path string `pulumi:"path"`
	// The script timeout.
	Timeout *string `pulumi:"timeout"`
}

// Recovery services provider properties.
type RecoveryServicesProviderPropertiesResponse struct {
	// The scenarios allowed on this provider.
	AllowedScenarios []string `pulumi:"allowedScenarios"`
	// The authentication identity details.
	AuthenticationIdentityDetails *IdentityProviderDetailsResponse `pulumi:"authenticationIdentityDetails"`
	// The Bios Id.
	BiosId *string `pulumi:"biosId"`
	// A value indicating whether DRA is responsive.
	ConnectionStatus *string `pulumi:"connectionStatus"`
	// The data plane authentication identity details.
	DataPlaneAuthenticationIdentityDetails *IdentityProviderDetailsResponse `pulumi:"dataPlaneAuthenticationIdentityDetails"`
	// The DRA Id.
	DraIdentifier *string `pulumi:"draIdentifier"`
	// The fabric friendly name.
	FabricFriendlyName *string `pulumi:"fabricFriendlyName"`
	// Type of the site.
	FabricType *string `pulumi:"fabricType"`
	// Friendly name of the DRA.
	FriendlyName *string `pulumi:"friendlyName"`
	// The recovery services provider health error details.
	HealthErrorDetails []HealthErrorResponse `pulumi:"healthErrorDetails"`
	// Time when last heartbeat was sent by the DRA.
	LastHeartBeat *string `pulumi:"lastHeartBeat"`
	// The machine Id.
	MachineId *string `pulumi:"machineId"`
	// The machine name.
	MachineName *string `pulumi:"machineName"`
	// Number of protected VMs currently managed by the DRA.
	ProtectedItemCount *int `pulumi:"protectedItemCount"`
	// The provider version.
	ProviderVersion *string `pulumi:"providerVersion"`
	// The provider version details.
	ProviderVersionDetails *VersionDetailsResponse `pulumi:"providerVersionDetails"`
	// Expiry date of the version.
	ProviderVersionExpiryDate *string `pulumi:"providerVersionExpiryDate"`
	// DRA version status.
	ProviderVersionState *string `pulumi:"providerVersionState"`
	// The resource access identity details.
	ResourceAccessIdentityDetails *IdentityProviderDetailsResponse `pulumi:"resourceAccessIdentityDetails"`
	// The fabric provider.
	ServerVersion *string `pulumi:"serverVersion"`
}

// Recovery services provider properties.
type RecoveryServicesProviderPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RecoveryServicesProviderPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryServicesProviderPropertiesResponse)(nil)).Elem()
}

func (o RecoveryServicesProviderPropertiesResponseOutput) ToRecoveryServicesProviderPropertiesResponseOutput() RecoveryServicesProviderPropertiesResponseOutput {
	return o
}

func (o RecoveryServicesProviderPropertiesResponseOutput) ToRecoveryServicesProviderPropertiesResponseOutputWithContext(ctx context.Context) RecoveryServicesProviderPropertiesResponseOutput {
	return o
}

// The scenarios allowed on this provider.
func (o RecoveryServicesProviderPropertiesResponseOutput) AllowedScenarios() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) []string { return v.AllowedScenarios }).(pulumi.StringArrayOutput)
}

// The authentication identity details.
func (o RecoveryServicesProviderPropertiesResponseOutput) AuthenticationIdentityDetails() IdentityProviderDetailsResponsePtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *IdentityProviderDetailsResponse {
		return v.AuthenticationIdentityDetails
	}).(IdentityProviderDetailsResponsePtrOutput)
}

// The Bios Id.
func (o RecoveryServicesProviderPropertiesResponseOutput) BiosId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.BiosId }).(pulumi.StringPtrOutput)
}

// A value indicating whether DRA is responsive.
func (o RecoveryServicesProviderPropertiesResponseOutput) ConnectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.ConnectionStatus }).(pulumi.StringPtrOutput)
}

// The data plane authentication identity details.
func (o RecoveryServicesProviderPropertiesResponseOutput) DataPlaneAuthenticationIdentityDetails() IdentityProviderDetailsResponsePtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *IdentityProviderDetailsResponse {
		return v.DataPlaneAuthenticationIdentityDetails
	}).(IdentityProviderDetailsResponsePtrOutput)
}

// The DRA Id.
func (o RecoveryServicesProviderPropertiesResponseOutput) DraIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.DraIdentifier }).(pulumi.StringPtrOutput)
}

// The fabric friendly name.
func (o RecoveryServicesProviderPropertiesResponseOutput) FabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.FabricFriendlyName }).(pulumi.StringPtrOutput)
}

// Type of the site.
func (o RecoveryServicesProviderPropertiesResponseOutput) FabricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.FabricType }).(pulumi.StringPtrOutput)
}

// Friendly name of the DRA.
func (o RecoveryServicesProviderPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery services provider health error details.
func (o RecoveryServicesProviderPropertiesResponseOutput) HealthErrorDetails() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) []HealthErrorResponse { return v.HealthErrorDetails }).(HealthErrorResponseArrayOutput)
}

// Time when last heartbeat was sent by the DRA.
func (o RecoveryServicesProviderPropertiesResponseOutput) LastHeartBeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.LastHeartBeat }).(pulumi.StringPtrOutput)
}

// The machine Id.
func (o RecoveryServicesProviderPropertiesResponseOutput) MachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.MachineId }).(pulumi.StringPtrOutput)
}

// The machine name.
func (o RecoveryServicesProviderPropertiesResponseOutput) MachineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.MachineName }).(pulumi.StringPtrOutput)
}

// Number of protected VMs currently managed by the DRA.
func (o RecoveryServicesProviderPropertiesResponseOutput) ProtectedItemCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *int { return v.ProtectedItemCount }).(pulumi.IntPtrOutput)
}

// The provider version.
func (o RecoveryServicesProviderPropertiesResponseOutput) ProviderVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.ProviderVersion }).(pulumi.StringPtrOutput)
}

// The provider version details.
func (o RecoveryServicesProviderPropertiesResponseOutput) ProviderVersionDetails() VersionDetailsResponsePtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *VersionDetailsResponse {
		return v.ProviderVersionDetails
	}).(VersionDetailsResponsePtrOutput)
}

// Expiry date of the version.
func (o RecoveryServicesProviderPropertiesResponseOutput) ProviderVersionExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.ProviderVersionExpiryDate }).(pulumi.StringPtrOutput)
}

// DRA version status.
func (o RecoveryServicesProviderPropertiesResponseOutput) ProviderVersionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.ProviderVersionState }).(pulumi.StringPtrOutput)
}

// The resource access identity details.
func (o RecoveryServicesProviderPropertiesResponseOutput) ResourceAccessIdentityDetails() IdentityProviderDetailsResponsePtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *IdentityProviderDetailsResponse {
		return v.ResourceAccessIdentityDetails
	}).(IdentityProviderDetailsResponsePtrOutput)
}

// The fabric provider.
func (o RecoveryServicesProviderPropertiesResponseOutput) ServerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.ServerVersion }).(pulumi.StringPtrOutput)
}

// Replication agent details.
type ReplicationAgentDetailsResponse struct {
	// The replication agent Bios Id.
	BiosId string `pulumi:"biosId"`
	// The fabric object Id.
	FabricObjectId string `pulumi:"fabricObjectId"`
	// The replication agent Fqdn.
	Fqdn string `pulumi:"fqdn"`
	// The health of the replication agent.
	Health string `pulumi:"health"`
	// The health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The replication agent Id.
	Id string `pulumi:"id"`
	// The last heartbeat received from the replication agent.
	LastHeartbeatUtc string `pulumi:"lastHeartbeatUtc"`
	// The replication agent name.
	Name string `pulumi:"name"`
	// The version.
	Version string `pulumi:"version"`
}

// Replication protected item custom data details.
type ReplicationProtectedItemPropertiesResponse struct {
	// The Current active location of the PE.
	ActiveLocation *string `pulumi:"activeLocation"`
	// The allowed operations on the Replication protected item.
	AllowedOperations []string `pulumi:"allowedOperations"`
	// The current scenario.
	CurrentScenario *CurrentScenarioDetailsResponse `pulumi:"currentScenario"`
	// The correlation Id for events associated with this protected item.
	EventCorrelationId *string `pulumi:"eventCorrelationId"`
	// The consolidated failover health for the VM.
	FailoverHealth *string `pulumi:"failoverHealth"`
	// The recovery point ARM Id to which the Vm was failed over.
	FailoverRecoveryPointId *string `pulumi:"failoverRecoveryPointId"`
	// The name.
	FriendlyName *string `pulumi:"friendlyName"`
	// List of health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The Last successful failover time.
	LastSuccessfulFailoverTime *string `pulumi:"lastSuccessfulFailoverTime"`
	// The Last successful test failover time.
	LastSuccessfulTestFailoverTime *string `pulumi:"lastSuccessfulTestFailoverTime"`
	// The name of Policy governing this PE.
	PolicyFriendlyName *string `pulumi:"policyFriendlyName"`
	// The ID of Policy governing this PE.
	PolicyId *string `pulumi:"policyId"`
	// The friendly name of the primary fabric.
	PrimaryFabricFriendlyName *string `pulumi:"primaryFabricFriendlyName"`
	// The fabric provider of the primary fabric.
	PrimaryFabricProvider *string `pulumi:"primaryFabricProvider"`
	// The name of primary protection container friendly name.
	PrimaryProtectionContainerFriendlyName *string `pulumi:"primaryProtectionContainerFriendlyName"`
	// The protected item ARM Id.
	ProtectableItemId *string `pulumi:"protectableItemId"`
	// The type of protected item type.
	ProtectedItemType *string `pulumi:"protectedItemType"`
	// The protection status.
	ProtectionState *string `pulumi:"protectionState"`
	// The protection state description.
	ProtectionStateDescription *string `pulumi:"protectionStateDescription"`
	// The Replication provider custom settings.
	ProviderSpecificDetails interface{} `pulumi:"providerSpecificDetails"`
	// The recovery container Id.
	RecoveryContainerId *string `pulumi:"recoveryContainerId"`
	// The friendly name of recovery fabric.
	RecoveryFabricFriendlyName *string `pulumi:"recoveryFabricFriendlyName"`
	// The Arm Id of recovery fabric.
	RecoveryFabricId *string `pulumi:"recoveryFabricId"`
	// The name of recovery container friendly name.
	RecoveryProtectionContainerFriendlyName *string `pulumi:"recoveryProtectionContainerFriendlyName"`
	// The recovery provider ARM Id.
	RecoveryServicesProviderId *string `pulumi:"recoveryServicesProviderId"`
	// The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration.
	ReplicationHealth *string `pulumi:"replicationHealth"`
	// The switch provider state.
	SwitchProviderState *string `pulumi:"switchProviderState"`
	// The switch provider state description.
	SwitchProviderStateDescription *string `pulumi:"switchProviderStateDescription"`
	// The Test failover state.
	TestFailoverState *string `pulumi:"testFailoverState"`
	// The Test failover state description.
	TestFailoverStateDescription *string `pulumi:"testFailoverStateDescription"`
}

// Replication protected item custom data details.
type ReplicationProtectedItemPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ReplicationProtectedItemPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationProtectedItemPropertiesResponse)(nil)).Elem()
}

func (o ReplicationProtectedItemPropertiesResponseOutput) ToReplicationProtectedItemPropertiesResponseOutput() ReplicationProtectedItemPropertiesResponseOutput {
	return o
}

func (o ReplicationProtectedItemPropertiesResponseOutput) ToReplicationProtectedItemPropertiesResponseOutputWithContext(ctx context.Context) ReplicationProtectedItemPropertiesResponseOutput {
	return o
}

// The Current active location of the PE.
func (o ReplicationProtectedItemPropertiesResponseOutput) ActiveLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ActiveLocation }).(pulumi.StringPtrOutput)
}

// The allowed operations on the Replication protected item.
func (o ReplicationProtectedItemPropertiesResponseOutput) AllowedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) []string { return v.AllowedOperations }).(pulumi.StringArrayOutput)
}

// The current scenario.
func (o ReplicationProtectedItemPropertiesResponseOutput) CurrentScenario() CurrentScenarioDetailsResponsePtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *CurrentScenarioDetailsResponse {
		return v.CurrentScenario
	}).(CurrentScenarioDetailsResponsePtrOutput)
}

// The correlation Id for events associated with this protected item.
func (o ReplicationProtectedItemPropertiesResponseOutput) EventCorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.EventCorrelationId }).(pulumi.StringPtrOutput)
}

// The consolidated failover health for the VM.
func (o ReplicationProtectedItemPropertiesResponseOutput) FailoverHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.FailoverHealth }).(pulumi.StringPtrOutput)
}

// The recovery point ARM Id to which the Vm was failed over.
func (o ReplicationProtectedItemPropertiesResponseOutput) FailoverRecoveryPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.FailoverRecoveryPointId }).(pulumi.StringPtrOutput)
}

// The name.
func (o ReplicationProtectedItemPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// List of health errors.
func (o ReplicationProtectedItemPropertiesResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The Last successful failover time.
func (o ReplicationProtectedItemPropertiesResponseOutput) LastSuccessfulFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.LastSuccessfulFailoverTime }).(pulumi.StringPtrOutput)
}

// The Last successful test failover time.
func (o ReplicationProtectedItemPropertiesResponseOutput) LastSuccessfulTestFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.LastSuccessfulTestFailoverTime }).(pulumi.StringPtrOutput)
}

// The name of Policy governing this PE.
func (o ReplicationProtectedItemPropertiesResponseOutput) PolicyFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.PolicyFriendlyName }).(pulumi.StringPtrOutput)
}

// The ID of Policy governing this PE.
func (o ReplicationProtectedItemPropertiesResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// The friendly name of the primary fabric.
func (o ReplicationProtectedItemPropertiesResponseOutput) PrimaryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.PrimaryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The fabric provider of the primary fabric.
func (o ReplicationProtectedItemPropertiesResponseOutput) PrimaryFabricProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.PrimaryFabricProvider }).(pulumi.StringPtrOutput)
}

// The name of primary protection container friendly name.
func (o ReplicationProtectedItemPropertiesResponseOutput) PrimaryProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string {
		return v.PrimaryProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The protected item ARM Id.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProtectableItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ProtectableItemId }).(pulumi.StringPtrOutput)
}

// The type of protected item type.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ProtectedItemType }).(pulumi.StringPtrOutput)
}

// The protection status.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// The Replication provider custom settings.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) interface{} { return v.ProviderSpecificDetails }).(pulumi.AnyOutput)
}

// The recovery container Id.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.RecoveryContainerId }).(pulumi.StringPtrOutput)
}

// The friendly name of recovery fabric.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.RecoveryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The Arm Id of recovery fabric.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.RecoveryFabricId }).(pulumi.StringPtrOutput)
}

// The name of recovery container friendly name.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string {
		return v.RecoveryProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The recovery provider ARM Id.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryServicesProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.RecoveryServicesProviderId }).(pulumi.StringPtrOutput)
}

// The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration.
func (o ReplicationProtectedItemPropertiesResponseOutput) ReplicationHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ReplicationHealth }).(pulumi.StringPtrOutput)
}

// The switch provider state.
func (o ReplicationProtectedItemPropertiesResponseOutput) SwitchProviderState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.SwitchProviderState }).(pulumi.StringPtrOutput)
}

// The switch provider state description.
func (o ReplicationProtectedItemPropertiesResponseOutput) SwitchProviderStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.SwitchProviderStateDescription }).(pulumi.StringPtrOutput)
}

// The Test failover state.
func (o ReplicationProtectedItemPropertiesResponseOutput) TestFailoverState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.TestFailoverState }).(pulumi.StringPtrOutput)
}

// The Test failover state description.
func (o ReplicationProtectedItemPropertiesResponseOutput) TestFailoverStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.TestFailoverStateDescription }).(pulumi.StringPtrOutput)
}

// Reprotect agent details.
type ReprotectAgentDetailsResponse struct {
	// The list of accessible datastores fetched from discovery.
	AccessibleDatastores []string `pulumi:"accessibleDatastores"`
	// The reprotect agent Bios Id.
	BiosId string `pulumi:"biosId"`
	// The fabric object Id.
	FabricObjectId string `pulumi:"fabricObjectId"`
	// The reprotect agent Fqdn.
	Fqdn string `pulumi:"fqdn"`
	// The health of the reprotect agent.
	Health string `pulumi:"health"`
	// The health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The reprotect agent Id.
	Id string `pulumi:"id"`
	// The last time when SDS information discovered in SRS.
	LastDiscoveryInUtc string `pulumi:"lastDiscoveryInUtc"`
	// The last heartbeat received from the reprotect agent.
	LastHeartbeatUtc string `pulumi:"lastHeartbeatUtc"`
	// The reprotect agent name.
	Name string `pulumi:"name"`
	// The protected item count.
	ProtectedItemCount int `pulumi:"protectedItemCount"`
	// The Vcenter Id.
	VcenterId string `pulumi:"vcenterId"`
	// The version.
	Version string `pulumi:"version"`
}

type ResourceGuardOperationDetailResponse struct {
	DefaultResourceRequest *string `pulumi:"defaultResourceRequest"`
	VaultCriticalOperation *string `pulumi:"vaultCriticalOperation"`
}

type ResourceGuardOperationDetailResponseOutput struct{ *pulumi.OutputState }

func (ResourceGuardOperationDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGuardOperationDetailResponse)(nil)).Elem()
}

func (o ResourceGuardOperationDetailResponseOutput) ToResourceGuardOperationDetailResponseOutput() ResourceGuardOperationDetailResponseOutput {
	return o
}

func (o ResourceGuardOperationDetailResponseOutput) ToResourceGuardOperationDetailResponseOutputWithContext(ctx context.Context) ResourceGuardOperationDetailResponseOutput {
	return o
}

func (o ResourceGuardOperationDetailResponseOutput) DefaultResourceRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardOperationDetailResponse) *string { return v.DefaultResourceRequest }).(pulumi.StringPtrOutput)
}

func (o ResourceGuardOperationDetailResponseOutput) VaultCriticalOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardOperationDetailResponse) *string { return v.VaultCriticalOperation }).(pulumi.StringPtrOutput)
}

type ResourceGuardOperationDetailResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceGuardOperationDetailResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGuardOperationDetailResponse)(nil)).Elem()
}

func (o ResourceGuardOperationDetailResponseArrayOutput) ToResourceGuardOperationDetailResponseArrayOutput() ResourceGuardOperationDetailResponseArrayOutput {
	return o
}

func (o ResourceGuardOperationDetailResponseArrayOutput) ToResourceGuardOperationDetailResponseArrayOutputWithContext(ctx context.Context) ResourceGuardOperationDetailResponseArrayOutput {
	return o
}

func (o ResourceGuardOperationDetailResponseArrayOutput) Index(i pulumi.IntInput) ResourceGuardOperationDetailResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGuardOperationDetailResponse {
		return vs[0].([]ResourceGuardOperationDetailResponse)[vs[1].(int)]
	}).(ResourceGuardOperationDetailResponseOutput)
}

type ResourceGuardProxyBaseResponse struct {
	Description                   *string                                `pulumi:"description"`
	LastUpdatedTime               *string                                `pulumi:"lastUpdatedTime"`
	ResourceGuardOperationDetails []ResourceGuardOperationDetailResponse `pulumi:"resourceGuardOperationDetails"`
	ResourceGuardResourceId       *string                                `pulumi:"resourceGuardResourceId"`
}

type ResourceGuardProxyBaseResponseOutput struct{ *pulumi.OutputState }

func (ResourceGuardProxyBaseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGuardProxyBaseResponse)(nil)).Elem()
}

func (o ResourceGuardProxyBaseResponseOutput) ToResourceGuardProxyBaseResponseOutput() ResourceGuardProxyBaseResponseOutput {
	return o
}

func (o ResourceGuardProxyBaseResponseOutput) ToResourceGuardProxyBaseResponseOutputWithContext(ctx context.Context) ResourceGuardProxyBaseResponseOutput {
	return o
}

func (o ResourceGuardProxyBaseResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardProxyBaseResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ResourceGuardProxyBaseResponseOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardProxyBaseResponse) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

func (o ResourceGuardProxyBaseResponseOutput) ResourceGuardOperationDetails() ResourceGuardOperationDetailResponseArrayOutput {
	return o.ApplyT(func(v ResourceGuardProxyBaseResponse) []ResourceGuardOperationDetailResponse {
		return v.ResourceGuardOperationDetails
	}).(ResourceGuardOperationDetailResponseArrayOutput)
}

func (o ResourceGuardProxyBaseResponseOutput) ResourceGuardResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardProxyBaseResponse) *string { return v.ResourceGuardResourceId }).(pulumi.StringPtrOutput)
}

// Health Details for backup items.
type ResourceHealthDetailsResponse struct {
	// Health Code
	Code int `pulumi:"code"`
	// Health Message
	Message string `pulumi:"message"`
	// Health Recommended Actions
	Recommendations []string `pulumi:"recommendations"`
	// Health Title
	Title string `pulumi:"title"`
}

// Retention duration.
type RetentionDuration struct {
	// Count of duration types. Retention duration is obtained by the counting the duration type Count times.
	// For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
	Count *int `pulumi:"count"`
	// Retention duration type of retention policy.
	DurationType *string `pulumi:"durationType"`
}

// Retention duration.
type RetentionDurationResponse struct {
	// Count of duration types. Retention duration is obtained by the counting the duration type Count times.
	// For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
	Count *int `pulumi:"count"`
	// Retention duration type of retention policy.
	DurationType *string `pulumi:"durationType"`
}

// The retention details of the MT.
type RetentionVolumeResponse struct {
	// The volume capacity.
	CapacityInBytes *float64 `pulumi:"capacityInBytes"`
	// The free space available in this volume.
	FreeSpaceInBytes *float64 `pulumi:"freeSpaceInBytes"`
	// The threshold percentage.
	ThresholdPercentage *int `pulumi:"thresholdPercentage"`
	// The volume name.
	VolumeName *string `pulumi:"volumeName"`
}

// CS Accounts Details.
type RunAsAccountResponse struct {
	// The CS RunAs account Id.
	AccountId *string `pulumi:"accountId"`
	// The CS RunAs account name.
	AccountName *string `pulumi:"accountName"`
}

// Common settings field for backup management
type Settings struct {
	// Workload compression flag. This has been added so that 'isSqlCompression'
	// will be deprecated once clients upgrade to consider this flag.
	IsCompression *bool `pulumi:"isCompression"`
	// SQL compression flag
	Issqlcompression *bool `pulumi:"issqlcompression"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
}

// Common settings field for backup management
type SettingsResponse struct {
	// Workload compression flag. This has been added so that 'isSqlCompression'
	// will be deprecated once clients upgrade to consider this flag.
	IsCompression *bool `pulumi:"isCompression"`
	// SQL compression flag
	Issqlcompression *bool `pulumi:"issqlcompression"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
}

// Simple policy retention.
type SimpleRetentionPolicy struct {
	// Retention duration of the protection policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleRetentionPolicy'.
	RetentionPolicyType string `pulumi:"retentionPolicyType"`
}

// Simple policy retention.
type SimpleRetentionPolicyResponse struct {
	// Retention duration of the protection policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleRetentionPolicy'.
	RetentionPolicyType string `pulumi:"retentionPolicyType"`
}

// Simple policy schedule.
type SimpleSchedulePolicy struct {
	// Hourly Schedule of this Policy
	HourlySchedule *HourlySchedule `pulumi:"hourlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleSchedulePolicy'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
	// List of days of week this schedule has to be run.
	ScheduleRunDays []DayOfWeek `pulumi:"scheduleRunDays"`
	// Frequency of the schedule operation of this policy.
	ScheduleRunFrequency *string `pulumi:"scheduleRunFrequency"`
	// List of times of day this schedule has to be run.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
	// At every number weeks this schedule has to be run.
	ScheduleWeeklyFrequency *int `pulumi:"scheduleWeeklyFrequency"`
}

// Simple policy schedule.
type SimpleSchedulePolicyResponse struct {
	// Hourly Schedule of this Policy
	HourlySchedule *HourlyScheduleResponse `pulumi:"hourlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleSchedulePolicy'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
	// List of days of week this schedule has to be run.
	ScheduleRunDays []string `pulumi:"scheduleRunDays"`
	// Frequency of the schedule operation of this policy.
	ScheduleRunFrequency *string `pulumi:"scheduleRunFrequency"`
	// List of times of day this schedule has to be run.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
	// At every number weeks this schedule has to be run.
	ScheduleWeeklyFrequency *int `pulumi:"scheduleWeeklyFrequency"`
}

// The V2 policy schedule for IaaS that supports hourly backups.
type SimpleSchedulePolicyV2 struct {
	// Daily schedule of this policy
	DailySchedule *DailySchedule `pulumi:"dailySchedule"`
	// hourly schedule of this policy
	HourlySchedule *HourlySchedule `pulumi:"hourlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleSchedulePolicyV2'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
	// Frequency of the schedule operation of this policy.
	ScheduleRunFrequency *string `pulumi:"scheduleRunFrequency"`
	// Weekly schedule of this policy
	WeeklySchedule *WeeklySchedule `pulumi:"weeklySchedule"`
}

// The V2 policy schedule for IaaS that supports hourly backups.
type SimpleSchedulePolicyV2Response struct {
	// Daily schedule of this policy
	DailySchedule *DailyScheduleResponse `pulumi:"dailySchedule"`
	// hourly schedule of this policy
	HourlySchedule *HourlyScheduleResponse `pulumi:"hourlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleSchedulePolicyV2'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
	// Frequency of the schedule operation of this policy.
	ScheduleRunFrequency *string `pulumi:"scheduleRunFrequency"`
	// Weekly schedule of this policy
	WeeklySchedule *WeeklyScheduleResponse `pulumi:"weeklySchedule"`
}

// Identifies the unique system identifier for each Azure resource.
type Sku struct {
	// The sku capacity
	Capacity *string `pulumi:"capacity"`
	// The sku family
	Family *string `pulumi:"family"`
	// The Sku name.
	Name string `pulumi:"name"`
	// The sku size
	Size *string `pulumi:"size"`
	// The Sku tier.
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// Identifies the unique system identifier for each Azure resource.
type SkuArgs struct {
	// The sku capacity
	Capacity pulumi.StringPtrInput `pulumi:"capacity"`
	// The sku family
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The Sku name.
	Name pulumi.StringInput `pulumi:"name"`
	// The sku size
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The Sku tier.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// Identifies the unique system identifier for each Azure resource.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The sku capacity
func (o SkuOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Capacity }).(pulumi.StringPtrOutput)
}

// The sku family
func (o SkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The Sku name.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The sku size
func (o SkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The Sku tier.
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// The sku capacity
func (o SkuPtrOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.StringPtrOutput)
}

// The sku family
func (o SkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The Sku name.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The sku size
func (o SkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The Sku tier.
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Identifies the unique system identifier for each Azure resource.
type SkuResponse struct {
	// The sku capacity
	Capacity *string `pulumi:"capacity"`
	// The sku family
	Family *string `pulumi:"family"`
	// The Sku name.
	Name string `pulumi:"name"`
	// The sku size
	Size *string `pulumi:"size"`
	// The Sku tier.
	Tier *string `pulumi:"tier"`
}

// Identifies the unique system identifier for each Azure resource.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The sku capacity
func (o SkuResponseOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Capacity }).(pulumi.StringPtrOutput)
}

// The sku family
func (o SkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The Sku name.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The sku size
func (o SkuResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The Sku tier.
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// The sku capacity
func (o SkuResponsePtrOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.StringPtrOutput)
}

// The sku family
func (o SkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The Sku name.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The sku size
func (o SkuResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The Sku tier.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Storage mapping properties.
type StorageClassificationMappingPropertiesResponse struct {
	// Target storage object Id.
	TargetStorageClassificationId *string `pulumi:"targetStorageClassificationId"`
}

// Storage mapping properties.
type StorageClassificationMappingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StorageClassificationMappingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClassificationMappingPropertiesResponse)(nil)).Elem()
}

func (o StorageClassificationMappingPropertiesResponseOutput) ToStorageClassificationMappingPropertiesResponseOutput() StorageClassificationMappingPropertiesResponseOutput {
	return o
}

func (o StorageClassificationMappingPropertiesResponseOutput) ToStorageClassificationMappingPropertiesResponseOutputWithContext(ctx context.Context) StorageClassificationMappingPropertiesResponseOutput {
	return o
}

// Target storage object Id.
func (o StorageClassificationMappingPropertiesResponseOutput) TargetStorageClassificationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClassificationMappingPropertiesResponse) *string { return v.TargetStorageClassificationId }).(pulumi.StringPtrOutput)
}

// Storage mapping input properties.
type StorageMappingInputProperties struct {
	// The ID of the storage object.
	TargetStorageClassificationId *string `pulumi:"targetStorageClassificationId"`
}

// StorageMappingInputPropertiesInput is an input type that accepts StorageMappingInputPropertiesArgs and StorageMappingInputPropertiesOutput values.
// You can construct a concrete instance of `StorageMappingInputPropertiesInput` via:
//
//	StorageMappingInputPropertiesArgs{...}
type StorageMappingInputPropertiesInput interface {
	pulumi.Input

	ToStorageMappingInputPropertiesOutput() StorageMappingInputPropertiesOutput
	ToStorageMappingInputPropertiesOutputWithContext(context.Context) StorageMappingInputPropertiesOutput
}

// Storage mapping input properties.
type StorageMappingInputPropertiesArgs struct {
	// The ID of the storage object.
	TargetStorageClassificationId pulumi.StringPtrInput `pulumi:"targetStorageClassificationId"`
}

func (StorageMappingInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageMappingInputProperties)(nil)).Elem()
}

func (i StorageMappingInputPropertiesArgs) ToStorageMappingInputPropertiesOutput() StorageMappingInputPropertiesOutput {
	return i.ToStorageMappingInputPropertiesOutputWithContext(context.Background())
}

func (i StorageMappingInputPropertiesArgs) ToStorageMappingInputPropertiesOutputWithContext(ctx context.Context) StorageMappingInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageMappingInputPropertiesOutput)
}

func (i StorageMappingInputPropertiesArgs) ToStorageMappingInputPropertiesPtrOutput() StorageMappingInputPropertiesPtrOutput {
	return i.ToStorageMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i StorageMappingInputPropertiesArgs) ToStorageMappingInputPropertiesPtrOutputWithContext(ctx context.Context) StorageMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageMappingInputPropertiesOutput).ToStorageMappingInputPropertiesPtrOutputWithContext(ctx)
}

// StorageMappingInputPropertiesPtrInput is an input type that accepts StorageMappingInputPropertiesArgs, StorageMappingInputPropertiesPtr and StorageMappingInputPropertiesPtrOutput values.
// You can construct a concrete instance of `StorageMappingInputPropertiesPtrInput` via:
//
//	        StorageMappingInputPropertiesArgs{...}
//
//	or:
//
//	        nil
type StorageMappingInputPropertiesPtrInput interface {
	pulumi.Input

	ToStorageMappingInputPropertiesPtrOutput() StorageMappingInputPropertiesPtrOutput
	ToStorageMappingInputPropertiesPtrOutputWithContext(context.Context) StorageMappingInputPropertiesPtrOutput
}

type storageMappingInputPropertiesPtrType StorageMappingInputPropertiesArgs

func StorageMappingInputPropertiesPtr(v *StorageMappingInputPropertiesArgs) StorageMappingInputPropertiesPtrInput {
	return (*storageMappingInputPropertiesPtrType)(v)
}

func (*storageMappingInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageMappingInputProperties)(nil)).Elem()
}

func (i *storageMappingInputPropertiesPtrType) ToStorageMappingInputPropertiesPtrOutput() StorageMappingInputPropertiesPtrOutput {
	return i.ToStorageMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *storageMappingInputPropertiesPtrType) ToStorageMappingInputPropertiesPtrOutputWithContext(ctx context.Context) StorageMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageMappingInputPropertiesPtrOutput)
}

// Storage mapping input properties.
type StorageMappingInputPropertiesOutput struct{ *pulumi.OutputState }

func (StorageMappingInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageMappingInputProperties)(nil)).Elem()
}

func (o StorageMappingInputPropertiesOutput) ToStorageMappingInputPropertiesOutput() StorageMappingInputPropertiesOutput {
	return o
}

func (o StorageMappingInputPropertiesOutput) ToStorageMappingInputPropertiesOutputWithContext(ctx context.Context) StorageMappingInputPropertiesOutput {
	return o
}

func (o StorageMappingInputPropertiesOutput) ToStorageMappingInputPropertiesPtrOutput() StorageMappingInputPropertiesPtrOutput {
	return o.ToStorageMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (o StorageMappingInputPropertiesOutput) ToStorageMappingInputPropertiesPtrOutputWithContext(ctx context.Context) StorageMappingInputPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageMappingInputProperties) *StorageMappingInputProperties {
		return &v
	}).(StorageMappingInputPropertiesPtrOutput)
}

// The ID of the storage object.
func (o StorageMappingInputPropertiesOutput) TargetStorageClassificationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageMappingInputProperties) *string { return v.TargetStorageClassificationId }).(pulumi.StringPtrOutput)
}

type StorageMappingInputPropertiesPtrOutput struct{ *pulumi.OutputState }

func (StorageMappingInputPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageMappingInputProperties)(nil)).Elem()
}

func (o StorageMappingInputPropertiesPtrOutput) ToStorageMappingInputPropertiesPtrOutput() StorageMappingInputPropertiesPtrOutput {
	return o
}

func (o StorageMappingInputPropertiesPtrOutput) ToStorageMappingInputPropertiesPtrOutputWithContext(ctx context.Context) StorageMappingInputPropertiesPtrOutput {
	return o
}

func (o StorageMappingInputPropertiesPtrOutput) Elem() StorageMappingInputPropertiesOutput {
	return o.ApplyT(func(v *StorageMappingInputProperties) StorageMappingInputProperties {
		if v != nil {
			return *v
		}
		var ret StorageMappingInputProperties
		return ret
	}).(StorageMappingInputPropertiesOutput)
}

// The ID of the storage object.
func (o StorageMappingInputPropertiesPtrOutput) TargetStorageClassificationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageMappingInputProperties) *string {
		if v == nil {
			return nil
		}
		return v.TargetStorageClassificationId
	}).(pulumi.StringPtrOutput)
}

// Sub-protection policy which includes schedule and retention
type SubProtectionPolicy struct {
	// Type of backup policy type
	PolicyType *string `pulumi:"policyType"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
	// Tiering policy to automatically move RPs to another tier.
	// Key is Target Tier, defined in RecoveryPointTierType enum.
	// Tiering policy specifies the criteria to move RP to the target tier.
	TieringPolicy map[string]TieringPolicy `pulumi:"tieringPolicy"`
}

// Sub-protection policy which includes schedule and retention
type SubProtectionPolicyResponse struct {
	// Type of backup policy type
	PolicyType *string `pulumi:"policyType"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
	// Tiering policy to automatically move RPs to another tier.
	// Key is Target Tier, defined in RecoveryPointTierType enum.
	// Tiering policy specifies the criteria to move RP to the target tier.
	TieringPolicy map[string]TieringPolicyResponse `pulumi:"tieringPolicy"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The type of identity that last modified the resource.
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Tiering Policy for a target tier.
// If the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier
type TieringPolicy struct {
	// Number of days/weeks/months/years to retain backups in current tier before tiering.
	// Used only if TieringMode is set to TierAfter
	Duration *int `pulumi:"duration"`
	// Retention duration type: days/weeks/months/years
	// Used only if TieringMode is set to TierAfter
	DurationType *string `pulumi:"durationType"`
	// Tiering Mode to control automatic tiering of recovery points. Supported values are:
	// 1. TierRecommended: Tier all recovery points recommended to be tiered
	// 2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.
	// 3. DoNotTier: Do not tier any recovery points
	TieringMode *string `pulumi:"tieringMode"`
}

// Tiering Policy for a target tier.
// If the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier
type TieringPolicyResponse struct {
	// Number of days/weeks/months/years to retain backups in current tier before tiering.
	// Used only if TieringMode is set to TierAfter
	Duration *int `pulumi:"duration"`
	// Retention duration type: days/weeks/months/years
	// Used only if TieringMode is set to TierAfter
	DurationType *string `pulumi:"durationType"`
	// Tiering Mode to control automatic tiering of recovery points. Supported values are:
	// 1. TierRecommended: Tier all recovery points recommended to be tiered
	// 2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.
	// 3. DoNotTier: Do not tier any recovery points
	TieringMode *string `pulumi:"tieringMode"`
}

// Details for upgrading vault.
type UpgradeDetailsResponse struct {
	// UTC time at which the upgrade operation has ended.
	EndTimeUtc string `pulumi:"endTimeUtc"`
	// UTC time at which the upgrade operation status was last updated.
	LastUpdatedTimeUtc string `pulumi:"lastUpdatedTimeUtc"`
	// Message to the user containing information about the upgrade operation.
	Message string `pulumi:"message"`
	// ID of the vault upgrade operation.
	OperationId string `pulumi:"operationId"`
	// Resource ID of the vault before the upgrade.
	PreviousResourceId string `pulumi:"previousResourceId"`
	// UTC time at which the upgrade operation has started.
	StartTimeUtc string `pulumi:"startTimeUtc"`
	// Status of the vault upgrade operation.
	Status string `pulumi:"status"`
	// The way the vault upgrade was triggered.
	TriggerType string `pulumi:"triggerType"`
	// Resource ID of the upgraded vault.
	UpgradedResourceId string `pulumi:"upgradedResourceId"`
}

// Details for upgrading vault.
type UpgradeDetailsResponseOutput struct{ *pulumi.OutputState }

func (UpgradeDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpgradeDetailsResponse)(nil)).Elem()
}

func (o UpgradeDetailsResponseOutput) ToUpgradeDetailsResponseOutput() UpgradeDetailsResponseOutput {
	return o
}

func (o UpgradeDetailsResponseOutput) ToUpgradeDetailsResponseOutputWithContext(ctx context.Context) UpgradeDetailsResponseOutput {
	return o
}

// UTC time at which the upgrade operation has ended.
func (o UpgradeDetailsResponseOutput) EndTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.EndTimeUtc }).(pulumi.StringOutput)
}

// UTC time at which the upgrade operation status was last updated.
func (o UpgradeDetailsResponseOutput) LastUpdatedTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.LastUpdatedTimeUtc }).(pulumi.StringOutput)
}

// Message to the user containing information about the upgrade operation.
func (o UpgradeDetailsResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.Message }).(pulumi.StringOutput)
}

// ID of the vault upgrade operation.
func (o UpgradeDetailsResponseOutput) OperationId() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.OperationId }).(pulumi.StringOutput)
}

// Resource ID of the vault before the upgrade.
func (o UpgradeDetailsResponseOutput) PreviousResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.PreviousResourceId }).(pulumi.StringOutput)
}

// UTC time at which the upgrade operation has started.
func (o UpgradeDetailsResponseOutput) StartTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.StartTimeUtc }).(pulumi.StringOutput)
}

// Status of the vault upgrade operation.
func (o UpgradeDetailsResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.Status }).(pulumi.StringOutput)
}

// The way the vault upgrade was triggered.
func (o UpgradeDetailsResponseOutput) TriggerType() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.TriggerType }).(pulumi.StringOutput)
}

// Resource ID of the upgraded vault.
func (o UpgradeDetailsResponseOutput) UpgradedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.UpgradedResourceId }).(pulumi.StringOutput)
}

type UpgradeDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (UpgradeDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpgradeDetailsResponse)(nil)).Elem()
}

func (o UpgradeDetailsResponsePtrOutput) ToUpgradeDetailsResponsePtrOutput() UpgradeDetailsResponsePtrOutput {
	return o
}

func (o UpgradeDetailsResponsePtrOutput) ToUpgradeDetailsResponsePtrOutputWithContext(ctx context.Context) UpgradeDetailsResponsePtrOutput {
	return o
}

func (o UpgradeDetailsResponsePtrOutput) Elem() UpgradeDetailsResponseOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) UpgradeDetailsResponse {
		if v != nil {
			return *v
		}
		var ret UpgradeDetailsResponse
		return ret
	}).(UpgradeDetailsResponseOutput)
}

// UTC time at which the upgrade operation has ended.
func (o UpgradeDetailsResponsePtrOutput) EndTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EndTimeUtc
	}).(pulumi.StringPtrOutput)
}

// UTC time at which the upgrade operation status was last updated.
func (o UpgradeDetailsResponsePtrOutput) LastUpdatedTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUpdatedTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Message to the user containing information about the upgrade operation.
func (o UpgradeDetailsResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// ID of the vault upgrade operation.
func (o UpgradeDetailsResponsePtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OperationId
	}).(pulumi.StringPtrOutput)
}

// Resource ID of the vault before the upgrade.
func (o UpgradeDetailsResponsePtrOutput) PreviousResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PreviousResourceId
	}).(pulumi.StringPtrOutput)
}

// UTC time at which the upgrade operation has started.
func (o UpgradeDetailsResponsePtrOutput) StartTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StartTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Status of the vault upgrade operation.
func (o UpgradeDetailsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The way the vault upgrade was triggered.
func (o UpgradeDetailsResponsePtrOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TriggerType
	}).(pulumi.StringPtrOutput)
}

// Resource ID of the upgraded vault.
func (o UpgradeDetailsResponsePtrOutput) UpgradedResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpgradedResourceId
	}).(pulumi.StringPtrOutput)
}

// A resource identity that is managed by the user of the service.
type UserIdentityResponse struct {
	// The client ID of the user-assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the user-assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// A resource identity that is managed by the user of the service.
type UserIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityResponse)(nil)).Elem()
}

func (o UserIdentityResponseOutput) ToUserIdentityResponseOutput() UserIdentityResponseOutput {
	return o
}

func (o UserIdentityResponseOutput) ToUserIdentityResponseOutputWithContext(ctx context.Context) UserIdentityResponseOutput {
	return o
}

// The client ID of the user-assigned identity.
func (o UserIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the user-assigned identity.
func (o UserIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityResponse)(nil)).Elem()
}

func (o UserIdentityResponseMapOutput) ToUserIdentityResponseMapOutput() UserIdentityResponseMapOutput {
	return o
}

func (o UserIdentityResponseMapOutput) ToUserIdentityResponseMapOutputWithContext(ctx context.Context) UserIdentityResponseMapOutput {
	return o
}

func (o UserIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserIdentityResponse {
		return vs[0].(map[string]UserIdentityResponse)[vs[1].(string)]
	}).(UserIdentityResponseOutput)
}

// vCenter properties.
type VCenterPropertiesResponse struct {
	// The VCenter discovery status.
	DiscoveryStatus *string `pulumi:"discoveryStatus"`
	// The ARM resource name of the fabric containing this VCenter.
	FabricArmResourceName *string `pulumi:"fabricArmResourceName"`
	// Friendly name of the vCenter.
	FriendlyName *string `pulumi:"friendlyName"`
	// The health errors for this VCenter.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The infrastructure Id of vCenter.
	InfrastructureId *string `pulumi:"infrastructureId"`
	// VCenter internal ID.
	InternalId *string `pulumi:"internalId"`
	// The IP address of the vCenter.
	IpAddress *string `pulumi:"ipAddress"`
	// The time when the last heartbeat was received by vCenter.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The port number for discovery.
	Port *string `pulumi:"port"`
	// The process server Id.
	ProcessServerId *string `pulumi:"processServerId"`
	// The account Id which has privileges to discover the vCenter.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
}

// vCenter properties.
type VCenterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VCenterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VCenterPropertiesResponse)(nil)).Elem()
}

func (o VCenterPropertiesResponseOutput) ToVCenterPropertiesResponseOutput() VCenterPropertiesResponseOutput {
	return o
}

func (o VCenterPropertiesResponseOutput) ToVCenterPropertiesResponseOutputWithContext(ctx context.Context) VCenterPropertiesResponseOutput {
	return o
}

// The VCenter discovery status.
func (o VCenterPropertiesResponseOutput) DiscoveryStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.DiscoveryStatus }).(pulumi.StringPtrOutput)
}

// The ARM resource name of the fabric containing this VCenter.
func (o VCenterPropertiesResponseOutput) FabricArmResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.FabricArmResourceName }).(pulumi.StringPtrOutput)
}

// Friendly name of the vCenter.
func (o VCenterPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The health errors for this VCenter.
func (o VCenterPropertiesResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The infrastructure Id of vCenter.
func (o VCenterPropertiesResponseOutput) InfrastructureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.InfrastructureId }).(pulumi.StringPtrOutput)
}

// VCenter internal ID.
func (o VCenterPropertiesResponseOutput) InternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.InternalId }).(pulumi.StringPtrOutput)
}

// The IP address of the vCenter.
func (o VCenterPropertiesResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The time when the last heartbeat was received by vCenter.
func (o VCenterPropertiesResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The port number for discovery.
func (o VCenterPropertiesResponseOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The process server Id.
func (o VCenterPropertiesResponseOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.ProcessServerId }).(pulumi.StringPtrOutput)
}

// The account Id which has privileges to discover the vCenter.
func (o VCenterPropertiesResponseOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.RunAsAccountId }).(pulumi.StringPtrOutput)
}

// Hyper V VM network details.
type VMNicDetailsResponse struct {
	// A value indicating whether the NIC has accelerated networking enabled.
	EnableAcceleratedNetworkingOnRecovery *bool `pulumi:"enableAcceleratedNetworkingOnRecovery"`
	// Whether the TFO NIC has accelerated networking enabled.
	EnableAcceleratedNetworkingOnTfo *bool `pulumi:"enableAcceleratedNetworkingOnTfo"`
	// The IP configurations of the NIC.
	IpConfigs []IPConfigDetailsResponse `pulumi:"ipConfigs"`
	// The nic Id.
	NicId *string `pulumi:"nicId"`
	// The id of the NSG associated with the NIC.
	RecoveryNetworkSecurityGroupId *string `pulumi:"recoveryNetworkSecurityGroupId"`
	// The name of the NIC to be used when creating target NICs.
	RecoveryNicName *string `pulumi:"recoveryNicName"`
	// The resource group of the NIC to be used when creating target NICs.
	RecoveryNicResourceGroupName *string `pulumi:"recoveryNicResourceGroupName"`
	// Recovery VM network Id.
	RecoveryVMNetworkId *string `pulumi:"recoveryVMNetworkId"`
	// The replica nic Id.
	ReplicaNicId *string `pulumi:"replicaNicId"`
	// A value indicating whether an existing NIC is allowed to be reused during failover subject to availability.
	ReuseExistingNic *bool `pulumi:"reuseExistingNic"`
	// Selection type for failover.
	SelectionType *string `pulumi:"selectionType"`
	// The source nic ARM Id.
	SourceNicArmId *string `pulumi:"sourceNicArmId"`
	// Target NIC name.
	TargetNicName *string `pulumi:"targetNicName"`
	// The NSG to be used by NIC during test failover.
	TfoNetworkSecurityGroupId *string `pulumi:"tfoNetworkSecurityGroupId"`
	// The name of the NIC to be used when creating target NICs in TFO.
	TfoRecoveryNicName *string `pulumi:"tfoRecoveryNicName"`
	// The resource group of the NIC to be used when creating target NICs in TFO.
	TfoRecoveryNicResourceGroupName *string `pulumi:"tfoRecoveryNicResourceGroupName"`
	// A value indicating whether an existing NIC is allowed to be reused during test failover subject to availability.
	TfoReuseExistingNic *bool `pulumi:"tfoReuseExistingNic"`
	// The network to be used by NIC during test failover.
	TfoVMNetworkId *string `pulumi:"tfoVMNetworkId"`
	// VM network name.
	VMNetworkName *string `pulumi:"vMNetworkName"`
}

// Defaults sets the appropriate defaults for VMNicDetailsResponse
func (val *VMNicDetailsResponse) Defaults() *VMNicDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.ReuseExistingNic) {
		reuseExistingNic_ := false
		tmp.ReuseExistingNic = &reuseExistingNic_
	}
	if isZero(tmp.TfoReuseExistingNic) {
		tfoReuseExistingNic_ := false
		tmp.TfoReuseExistingNic = &tfoReuseExistingNic_
	}
	return &tmp
}

// VMwareCbt container mapping input.
type VMwareCbtContainerMappingInput struct {
	// The class type.
	// Expected value is 'VMwareCbt'.
	InstanceType string `pulumi:"instanceType"`
	// The target key vault ARM Id.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// The target key vault URL.
	KeyVaultUri *string `pulumi:"keyVaultUri"`
	// The secret name of the service bus connection string.
	ServiceBusConnectionStringSecretName *string `pulumi:"serviceBusConnectionStringSecretName"`
	// The storage account ARM Id.
	StorageAccountId string `pulumi:"storageAccountId"`
	// The secret name of the storage account.
	StorageAccountSasSecretName *string `pulumi:"storageAccountSasSecretName"`
	// The target location.
	TargetLocation string `pulumi:"targetLocation"`
}

// VMwareCbt disk input.
type VMwareCbtDiskInput struct {
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The disk Id.
	DiskId string `pulumi:"diskId"`
	// The disk type.
	DiskType *string `pulumi:"diskType"`
	// A value indicating whether the disk is the OS disk.
	IsOSDisk string `pulumi:"isOSDisk"`
	// The log storage account ARM Id.
	LogStorageAccountId string `pulumi:"logStorageAccountId"`
	// The key vault secret name of the log storage account.
	LogStorageAccountSasSecretName string `pulumi:"logStorageAccountSasSecretName"`
}

// VMwareCbtDiskInputInput is an input type that accepts VMwareCbtDiskInputArgs and VMwareCbtDiskInputOutput values.
// You can construct a concrete instance of `VMwareCbtDiskInputInput` via:
//
//	VMwareCbtDiskInputArgs{...}
type VMwareCbtDiskInputInput interface {
	pulumi.Input

	ToVMwareCbtDiskInputOutput() VMwareCbtDiskInputOutput
	ToVMwareCbtDiskInputOutputWithContext(context.Context) VMwareCbtDiskInputOutput
}

// VMwareCbt disk input.
type VMwareCbtDiskInputArgs struct {
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// The disk Id.
	DiskId pulumi.StringInput `pulumi:"diskId"`
	// The disk type.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// A value indicating whether the disk is the OS disk.
	IsOSDisk pulumi.StringInput `pulumi:"isOSDisk"`
	// The log storage account ARM Id.
	LogStorageAccountId pulumi.StringInput `pulumi:"logStorageAccountId"`
	// The key vault secret name of the log storage account.
	LogStorageAccountSasSecretName pulumi.StringInput `pulumi:"logStorageAccountSasSecretName"`
}

func (VMwareCbtDiskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtDiskInput)(nil)).Elem()
}

func (i VMwareCbtDiskInputArgs) ToVMwareCbtDiskInputOutput() VMwareCbtDiskInputOutput {
	return i.ToVMwareCbtDiskInputOutputWithContext(context.Background())
}

func (i VMwareCbtDiskInputArgs) ToVMwareCbtDiskInputOutputWithContext(ctx context.Context) VMwareCbtDiskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtDiskInputOutput)
}

// VMwareCbtDiskInputArrayInput is an input type that accepts VMwareCbtDiskInputArray and VMwareCbtDiskInputArrayOutput values.
// You can construct a concrete instance of `VMwareCbtDiskInputArrayInput` via:
//
//	VMwareCbtDiskInputArray{ VMwareCbtDiskInputArgs{...} }
type VMwareCbtDiskInputArrayInput interface {
	pulumi.Input

	ToVMwareCbtDiskInputArrayOutput() VMwareCbtDiskInputArrayOutput
	ToVMwareCbtDiskInputArrayOutputWithContext(context.Context) VMwareCbtDiskInputArrayOutput
}

type VMwareCbtDiskInputArray []VMwareCbtDiskInputInput

func (VMwareCbtDiskInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareCbtDiskInput)(nil)).Elem()
}

func (i VMwareCbtDiskInputArray) ToVMwareCbtDiskInputArrayOutput() VMwareCbtDiskInputArrayOutput {
	return i.ToVMwareCbtDiskInputArrayOutputWithContext(context.Background())
}

func (i VMwareCbtDiskInputArray) ToVMwareCbtDiskInputArrayOutputWithContext(ctx context.Context) VMwareCbtDiskInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtDiskInputArrayOutput)
}

// VMwareCbt disk input.
type VMwareCbtDiskInputOutput struct{ *pulumi.OutputState }

func (VMwareCbtDiskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtDiskInput)(nil)).Elem()
}

func (o VMwareCbtDiskInputOutput) ToVMwareCbtDiskInputOutput() VMwareCbtDiskInputOutput {
	return o
}

func (o VMwareCbtDiskInputOutput) ToVMwareCbtDiskInputOutputWithContext(ctx context.Context) VMwareCbtDiskInputOutput {
	return o
}

// The DiskEncryptionSet ARM Id.
func (o VMwareCbtDiskInputOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtDiskInput) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The disk Id.
func (o VMwareCbtDiskInputOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtDiskInput) string { return v.DiskId }).(pulumi.StringOutput)
}

// The disk type.
func (o VMwareCbtDiskInputOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtDiskInput) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// A value indicating whether the disk is the OS disk.
func (o VMwareCbtDiskInputOutput) IsOSDisk() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtDiskInput) string { return v.IsOSDisk }).(pulumi.StringOutput)
}

// The log storage account ARM Id.
func (o VMwareCbtDiskInputOutput) LogStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtDiskInput) string { return v.LogStorageAccountId }).(pulumi.StringOutput)
}

// The key vault secret name of the log storage account.
func (o VMwareCbtDiskInputOutput) LogStorageAccountSasSecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtDiskInput) string { return v.LogStorageAccountSasSecretName }).(pulumi.StringOutput)
}

type VMwareCbtDiskInputArrayOutput struct{ *pulumi.OutputState }

func (VMwareCbtDiskInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareCbtDiskInput)(nil)).Elem()
}

func (o VMwareCbtDiskInputArrayOutput) ToVMwareCbtDiskInputArrayOutput() VMwareCbtDiskInputArrayOutput {
	return o
}

func (o VMwareCbtDiskInputArrayOutput) ToVMwareCbtDiskInputArrayOutputWithContext(ctx context.Context) VMwareCbtDiskInputArrayOutput {
	return o
}

func (o VMwareCbtDiskInputArrayOutput) Index(i pulumi.IntInput) VMwareCbtDiskInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareCbtDiskInput {
		return vs[0].([]VMwareCbtDiskInput)[vs[1].(int)]
	}).(VMwareCbtDiskInputOutput)
}

// VMwareCbt specific enable migration input.
type VMwareCbtEnableMigrationInput struct {
	// The data mover run as account Id.
	DataMoverRunAsAccountId string `pulumi:"dataMoverRunAsAccountId"`
	// The disks to include list.
	DisksToInclude []VMwareCbtDiskInput `pulumi:"disksToInclude"`
	// The class type.
	// Expected value is 'VMwareCbt'.
	InstanceType string `pulumi:"instanceType"`
	// License type.
	LicenseType *string `pulumi:"licenseType"`
	// A value indicating whether auto resync is to be done.
	PerformAutoResync *string `pulumi:"performAutoResync"`
	// The tags for the seed disks.
	SeedDiskTags map[string]string `pulumi:"seedDiskTags"`
	// The snapshot run as account Id.
	SnapshotRunAsAccountId string `pulumi:"snapshotRunAsAccountId"`
	// The SQL Server license type.
	SqlServerLicenseType *string `pulumi:"sqlServerLicenseType"`
	// The target availability set ARM Id.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The target boot diagnostics storage account ARM Id.
	TargetBootDiagnosticsStorageAccountId *string `pulumi:"targetBootDiagnosticsStorageAccountId"`
	// The tags for the target disks.
	TargetDiskTags map[string]string `pulumi:"targetDiskTags"`
	// The target network ARM Id.
	TargetNetworkId string `pulumi:"targetNetworkId"`
	// The tags for the target NICs.
	TargetNicTags map[string]string `pulumi:"targetNicTags"`
	// The target proximity placement group ARM Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// The target resource group ARM Id.
	TargetResourceGroupId string `pulumi:"targetResourceGroupId"`
	// The target subnet name.
	TargetSubnetName *string `pulumi:"targetSubnetName"`
	// The target VM name.
	TargetVmName *string `pulumi:"targetVmName"`
	// The target VM size.
	TargetVmSize *string `pulumi:"targetVmSize"`
	// The target VM tags.
	TargetVmTags map[string]string `pulumi:"targetVmTags"`
	// The ARM Id of the VM discovered in VMware.
	VmwareMachineId string `pulumi:"vmwareMachineId"`
}

// VMwareCbtEnableMigrationInputInput is an input type that accepts VMwareCbtEnableMigrationInputArgs and VMwareCbtEnableMigrationInputOutput values.
// You can construct a concrete instance of `VMwareCbtEnableMigrationInputInput` via:
//
//	VMwareCbtEnableMigrationInputArgs{...}
type VMwareCbtEnableMigrationInputInput interface {
	pulumi.Input

	ToVMwareCbtEnableMigrationInputOutput() VMwareCbtEnableMigrationInputOutput
	ToVMwareCbtEnableMigrationInputOutputWithContext(context.Context) VMwareCbtEnableMigrationInputOutput
}

// VMwareCbt specific enable migration input.
type VMwareCbtEnableMigrationInputArgs struct {
	// The data mover run as account Id.
	DataMoverRunAsAccountId pulumi.StringInput `pulumi:"dataMoverRunAsAccountId"`
	// The disks to include list.
	DisksToInclude VMwareCbtDiskInputArrayInput `pulumi:"disksToInclude"`
	// The class type.
	// Expected value is 'VMwareCbt'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// License type.
	LicenseType pulumi.StringPtrInput `pulumi:"licenseType"`
	// A value indicating whether auto resync is to be done.
	PerformAutoResync pulumi.StringPtrInput `pulumi:"performAutoResync"`
	// The tags for the seed disks.
	SeedDiskTags pulumi.StringMapInput `pulumi:"seedDiskTags"`
	// The snapshot run as account Id.
	SnapshotRunAsAccountId pulumi.StringInput `pulumi:"snapshotRunAsAccountId"`
	// The SQL Server license type.
	SqlServerLicenseType pulumi.StringPtrInput `pulumi:"sqlServerLicenseType"`
	// The target availability set ARM Id.
	TargetAvailabilitySetId pulumi.StringPtrInput `pulumi:"targetAvailabilitySetId"`
	// The target availability zone.
	TargetAvailabilityZone pulumi.StringPtrInput `pulumi:"targetAvailabilityZone"`
	// The target boot diagnostics storage account ARM Id.
	TargetBootDiagnosticsStorageAccountId pulumi.StringPtrInput `pulumi:"targetBootDiagnosticsStorageAccountId"`
	// The tags for the target disks.
	TargetDiskTags pulumi.StringMapInput `pulumi:"targetDiskTags"`
	// The target network ARM Id.
	TargetNetworkId pulumi.StringInput `pulumi:"targetNetworkId"`
	// The tags for the target NICs.
	TargetNicTags pulumi.StringMapInput `pulumi:"targetNicTags"`
	// The target proximity placement group ARM Id.
	TargetProximityPlacementGroupId pulumi.StringPtrInput `pulumi:"targetProximityPlacementGroupId"`
	// The target resource group ARM Id.
	TargetResourceGroupId pulumi.StringInput `pulumi:"targetResourceGroupId"`
	// The target subnet name.
	TargetSubnetName pulumi.StringPtrInput `pulumi:"targetSubnetName"`
	// The target VM name.
	TargetVmName pulumi.StringPtrInput `pulumi:"targetVmName"`
	// The target VM size.
	TargetVmSize pulumi.StringPtrInput `pulumi:"targetVmSize"`
	// The target VM tags.
	TargetVmTags pulumi.StringMapInput `pulumi:"targetVmTags"`
	// The ARM Id of the VM discovered in VMware.
	VmwareMachineId pulumi.StringInput `pulumi:"vmwareMachineId"`
}

func (VMwareCbtEnableMigrationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtEnableMigrationInput)(nil)).Elem()
}

func (i VMwareCbtEnableMigrationInputArgs) ToVMwareCbtEnableMigrationInputOutput() VMwareCbtEnableMigrationInputOutput {
	return i.ToVMwareCbtEnableMigrationInputOutputWithContext(context.Background())
}

func (i VMwareCbtEnableMigrationInputArgs) ToVMwareCbtEnableMigrationInputOutputWithContext(ctx context.Context) VMwareCbtEnableMigrationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtEnableMigrationInputOutput)
}

// VMwareCbt specific enable migration input.
type VMwareCbtEnableMigrationInputOutput struct{ *pulumi.OutputState }

func (VMwareCbtEnableMigrationInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtEnableMigrationInput)(nil)).Elem()
}

func (o VMwareCbtEnableMigrationInputOutput) ToVMwareCbtEnableMigrationInputOutput() VMwareCbtEnableMigrationInputOutput {
	return o
}

func (o VMwareCbtEnableMigrationInputOutput) ToVMwareCbtEnableMigrationInputOutputWithContext(ctx context.Context) VMwareCbtEnableMigrationInputOutput {
	return o
}

// The data mover run as account Id.
func (o VMwareCbtEnableMigrationInputOutput) DataMoverRunAsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) string { return v.DataMoverRunAsAccountId }).(pulumi.StringOutput)
}

// The disks to include list.
func (o VMwareCbtEnableMigrationInputOutput) DisksToInclude() VMwareCbtDiskInputArrayOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) []VMwareCbtDiskInput { return v.DisksToInclude }).(VMwareCbtDiskInputArrayOutput)
}

// The class type.
// Expected value is 'VMwareCbt'.
func (o VMwareCbtEnableMigrationInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// License type.
func (o VMwareCbtEnableMigrationInputOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// A value indicating whether auto resync is to be done.
func (o VMwareCbtEnableMigrationInputOutput) PerformAutoResync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.PerformAutoResync }).(pulumi.StringPtrOutput)
}

// The tags for the seed disks.
func (o VMwareCbtEnableMigrationInputOutput) SeedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) map[string]string { return v.SeedDiskTags }).(pulumi.StringMapOutput)
}

// The snapshot run as account Id.
func (o VMwareCbtEnableMigrationInputOutput) SnapshotRunAsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) string { return v.SnapshotRunAsAccountId }).(pulumi.StringOutput)
}

// The SQL Server license type.
func (o VMwareCbtEnableMigrationInputOutput) SqlServerLicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.SqlServerLicenseType }).(pulumi.StringPtrOutput)
}

// The target availability set ARM Id.
func (o VMwareCbtEnableMigrationInputOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.TargetAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// The target availability zone.
func (o VMwareCbtEnableMigrationInputOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.TargetAvailabilityZone }).(pulumi.StringPtrOutput)
}

// The target boot diagnostics storage account ARM Id.
func (o VMwareCbtEnableMigrationInputOutput) TargetBootDiagnosticsStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.TargetBootDiagnosticsStorageAccountId }).(pulumi.StringPtrOutput)
}

// The tags for the target disks.
func (o VMwareCbtEnableMigrationInputOutput) TargetDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) map[string]string { return v.TargetDiskTags }).(pulumi.StringMapOutput)
}

// The target network ARM Id.
func (o VMwareCbtEnableMigrationInputOutput) TargetNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) string { return v.TargetNetworkId }).(pulumi.StringOutput)
}

// The tags for the target NICs.
func (o VMwareCbtEnableMigrationInputOutput) TargetNicTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) map[string]string { return v.TargetNicTags }).(pulumi.StringMapOutput)
}

// The target proximity placement group ARM Id.
func (o VMwareCbtEnableMigrationInputOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.TargetProximityPlacementGroupId }).(pulumi.StringPtrOutput)
}

// The target resource group ARM Id.
func (o VMwareCbtEnableMigrationInputOutput) TargetResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) string { return v.TargetResourceGroupId }).(pulumi.StringOutput)
}

// The target subnet name.
func (o VMwareCbtEnableMigrationInputOutput) TargetSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.TargetSubnetName }).(pulumi.StringPtrOutput)
}

// The target VM name.
func (o VMwareCbtEnableMigrationInputOutput) TargetVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.TargetVmName }).(pulumi.StringPtrOutput)
}

// The target VM size.
func (o VMwareCbtEnableMigrationInputOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.TargetVmSize }).(pulumi.StringPtrOutput)
}

// The target VM tags.
func (o VMwareCbtEnableMigrationInputOutput) TargetVmTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) map[string]string { return v.TargetVmTags }).(pulumi.StringMapOutput)
}

// The ARM Id of the VM discovered in VMware.
func (o VMwareCbtEnableMigrationInputOutput) VmwareMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) string { return v.VmwareMachineId }).(pulumi.StringOutput)
}

// VMwareCbt provider specific settings.
type VMwareCbtMigrationDetailsResponse struct {
	// The data mover run as account Id.
	DataMoverRunAsAccountId string `pulumi:"dataMoverRunAsAccountId"`
	// The firmware type.
	FirmwareType string `pulumi:"firmwareType"`
	// The initial seeding progress percentage.
	InitialSeedingProgressPercentage int `pulumi:"initialSeedingProgressPercentage"`
	// The initial seeding retry count.
	InitialSeedingRetryCount float64 `pulumi:"initialSeedingRetryCount"`
	// Gets the instance type.
	// Expected value is 'VMwareCbt'.
	InstanceType string `pulumi:"instanceType"`
	// The last recovery point Id.
	LastRecoveryPointId string `pulumi:"lastRecoveryPointId"`
	// The last recovery point received time.
	LastRecoveryPointReceived string `pulumi:"lastRecoveryPointReceived"`
	// License Type of the VM to be used.
	LicenseType *string `pulumi:"licenseType"`
	// The migration progress percentage.
	MigrationProgressPercentage int `pulumi:"migrationProgressPercentage"`
	// The recovery point Id to which the VM was migrated.
	MigrationRecoveryPointId string `pulumi:"migrationRecoveryPointId"`
	// The type of the OS on the VM.
	OsType string `pulumi:"osType"`
	// A value indicating whether auto resync is to be done.
	PerformAutoResync *string `pulumi:"performAutoResync"`
	// The list of protected disks.
	ProtectedDisks []VMwareCbtProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The resync progress percentage.
	ResyncProgressPercentage int `pulumi:"resyncProgressPercentage"`
	// A value indicating whether resync is required.
	ResyncRequired string `pulumi:"resyncRequired"`
	// The resync retry count.
	ResyncRetryCount float64 `pulumi:"resyncRetryCount"`
	// The resync state.
	ResyncState string `pulumi:"resyncState"`
	// The tags for the seed disks.
	SeedDiskTags map[string]string `pulumi:"seedDiskTags"`
	// The snapshot run as account Id.
	SnapshotRunAsAccountId string `pulumi:"snapshotRunAsAccountId"`
	// The SQL Server license type.
	SqlServerLicenseType *string `pulumi:"sqlServerLicenseType"`
	// The target availability set Id.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The target boot diagnostics storage account ARM Id.
	TargetBootDiagnosticsStorageAccountId *string `pulumi:"targetBootDiagnosticsStorageAccountId"`
	// The tags for the target disks.
	TargetDiskTags map[string]string `pulumi:"targetDiskTags"`
	// The target generation.
	TargetGeneration string `pulumi:"targetGeneration"`
	// The target location.
	TargetLocation string `pulumi:"targetLocation"`
	// The target network Id.
	TargetNetworkId *string `pulumi:"targetNetworkId"`
	// The tags for the target NICs.
	TargetNicTags map[string]string `pulumi:"targetNicTags"`
	// The target proximity placement group Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// The target resource group Id.
	TargetResourceGroupId *string `pulumi:"targetResourceGroupId"`
	// Target VM name.
	TargetVmName *string `pulumi:"targetVmName"`
	// The target VM size.
	TargetVmSize *string `pulumi:"targetVmSize"`
	// The target VM tags.
	TargetVmTags map[string]string `pulumi:"targetVmTags"`
	// The network details.
	VmNics []VMwareCbtNicDetailsResponse `pulumi:"vmNics"`
	// The ARM Id of the VM discovered in VMware.
	VmwareMachineId string `pulumi:"vmwareMachineId"`
}

// VMwareCbt provider specific settings.
type VMwareCbtMigrationDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMwareCbtMigrationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtMigrationDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtMigrationDetailsResponseOutput) ToVMwareCbtMigrationDetailsResponseOutput() VMwareCbtMigrationDetailsResponseOutput {
	return o
}

func (o VMwareCbtMigrationDetailsResponseOutput) ToVMwareCbtMigrationDetailsResponseOutputWithContext(ctx context.Context) VMwareCbtMigrationDetailsResponseOutput {
	return o
}

// The data mover run as account Id.
func (o VMwareCbtMigrationDetailsResponseOutput) DataMoverRunAsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.DataMoverRunAsAccountId }).(pulumi.StringOutput)
}

// The firmware type.
func (o VMwareCbtMigrationDetailsResponseOutput) FirmwareType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.FirmwareType }).(pulumi.StringOutput)
}

// The initial seeding progress percentage.
func (o VMwareCbtMigrationDetailsResponseOutput) InitialSeedingProgressPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) int { return v.InitialSeedingProgressPercentage }).(pulumi.IntOutput)
}

// The initial seeding retry count.
func (o VMwareCbtMigrationDetailsResponseOutput) InitialSeedingRetryCount() pulumi.Float64Output {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) float64 { return v.InitialSeedingRetryCount }).(pulumi.Float64Output)
}

// Gets the instance type.
// Expected value is 'VMwareCbt'.
func (o VMwareCbtMigrationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The last recovery point Id.
func (o VMwareCbtMigrationDetailsResponseOutput) LastRecoveryPointId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.LastRecoveryPointId }).(pulumi.StringOutput)
}

// The last recovery point received time.
func (o VMwareCbtMigrationDetailsResponseOutput) LastRecoveryPointReceived() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.LastRecoveryPointReceived }).(pulumi.StringOutput)
}

// License Type of the VM to be used.
func (o VMwareCbtMigrationDetailsResponseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// The migration progress percentage.
func (o VMwareCbtMigrationDetailsResponseOutput) MigrationProgressPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) int { return v.MigrationProgressPercentage }).(pulumi.IntOutput)
}

// The recovery point Id to which the VM was migrated.
func (o VMwareCbtMigrationDetailsResponseOutput) MigrationRecoveryPointId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.MigrationRecoveryPointId }).(pulumi.StringOutput)
}

// The type of the OS on the VM.
func (o VMwareCbtMigrationDetailsResponseOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.OsType }).(pulumi.StringOutput)
}

// A value indicating whether auto resync is to be done.
func (o VMwareCbtMigrationDetailsResponseOutput) PerformAutoResync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.PerformAutoResync }).(pulumi.StringPtrOutput)
}

// The list of protected disks.
func (o VMwareCbtMigrationDetailsResponseOutput) ProtectedDisks() VMwareCbtProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) []VMwareCbtProtectedDiskDetailsResponse {
		return v.ProtectedDisks
	}).(VMwareCbtProtectedDiskDetailsResponseArrayOutput)
}

// The resync progress percentage.
func (o VMwareCbtMigrationDetailsResponseOutput) ResyncProgressPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) int { return v.ResyncProgressPercentage }).(pulumi.IntOutput)
}

// A value indicating whether resync is required.
func (o VMwareCbtMigrationDetailsResponseOutput) ResyncRequired() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.ResyncRequired }).(pulumi.StringOutput)
}

// The resync retry count.
func (o VMwareCbtMigrationDetailsResponseOutput) ResyncRetryCount() pulumi.Float64Output {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) float64 { return v.ResyncRetryCount }).(pulumi.Float64Output)
}

// The resync state.
func (o VMwareCbtMigrationDetailsResponseOutput) ResyncState() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.ResyncState }).(pulumi.StringOutput)
}

// The tags for the seed disks.
func (o VMwareCbtMigrationDetailsResponseOutput) SeedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) map[string]string { return v.SeedDiskTags }).(pulumi.StringMapOutput)
}

// The snapshot run as account Id.
func (o VMwareCbtMigrationDetailsResponseOutput) SnapshotRunAsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.SnapshotRunAsAccountId }).(pulumi.StringOutput)
}

// The SQL Server license type.
func (o VMwareCbtMigrationDetailsResponseOutput) SqlServerLicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.SqlServerLicenseType }).(pulumi.StringPtrOutput)
}

// The target availability set Id.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// The target availability zone.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetAvailabilityZone }).(pulumi.StringPtrOutput)
}

// The target boot diagnostics storage account ARM Id.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetBootDiagnosticsStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetBootDiagnosticsStorageAccountId }).(pulumi.StringPtrOutput)
}

// The tags for the target disks.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) map[string]string { return v.TargetDiskTags }).(pulumi.StringMapOutput)
}

// The target generation.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetGeneration() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.TargetGeneration }).(pulumi.StringOutput)
}

// The target location.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetLocation() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.TargetLocation }).(pulumi.StringOutput)
}

// The target network Id.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetNetworkId }).(pulumi.StringPtrOutput)
}

// The tags for the target NICs.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetNicTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) map[string]string { return v.TargetNicTags }).(pulumi.StringMapOutput)
}

// The target proximity placement group Id.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetProximityPlacementGroupId }).(pulumi.StringPtrOutput)
}

// The target resource group Id.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetResourceGroupId }).(pulumi.StringPtrOutput)
}

// Target VM name.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetVmName }).(pulumi.StringPtrOutput)
}

// The target VM size.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetVmSize }).(pulumi.StringPtrOutput)
}

// The target VM tags.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetVmTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) map[string]string { return v.TargetVmTags }).(pulumi.StringMapOutput)
}

// The network details.
func (o VMwareCbtMigrationDetailsResponseOutput) VmNics() VMwareCbtNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) []VMwareCbtNicDetailsResponse { return v.VmNics }).(VMwareCbtNicDetailsResponseArrayOutput)
}

// The ARM Id of the VM discovered in VMware.
func (o VMwareCbtMigrationDetailsResponseOutput) VmwareMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.VmwareMachineId }).(pulumi.StringOutput)
}

type VMwareCbtMigrationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (VMwareCbtMigrationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareCbtMigrationDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtMigrationDetailsResponsePtrOutput) ToVMwareCbtMigrationDetailsResponsePtrOutput() VMwareCbtMigrationDetailsResponsePtrOutput {
	return o
}

func (o VMwareCbtMigrationDetailsResponsePtrOutput) ToVMwareCbtMigrationDetailsResponsePtrOutputWithContext(ctx context.Context) VMwareCbtMigrationDetailsResponsePtrOutput {
	return o
}

func (o VMwareCbtMigrationDetailsResponsePtrOutput) Elem() VMwareCbtMigrationDetailsResponseOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) VMwareCbtMigrationDetailsResponse {
		if v != nil {
			return *v
		}
		var ret VMwareCbtMigrationDetailsResponse
		return ret
	}).(VMwareCbtMigrationDetailsResponseOutput)
}

// The data mover run as account Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) DataMoverRunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataMoverRunAsAccountId
	}).(pulumi.StringPtrOutput)
}

// The firmware type.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) FirmwareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FirmwareType
	}).(pulumi.StringPtrOutput)
}

// The initial seeding progress percentage.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) InitialSeedingProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.InitialSeedingProgressPercentage
	}).(pulumi.IntPtrOutput)
}

// The initial seeding retry count.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) InitialSeedingRetryCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.InitialSeedingRetryCount
	}).(pulumi.Float64PtrOutput)
}

// Gets the instance type.
// Expected value is 'VMwareCbt'.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The last recovery point Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) LastRecoveryPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastRecoveryPointId
	}).(pulumi.StringPtrOutput)
}

// The last recovery point received time.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) LastRecoveryPointReceived() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastRecoveryPointReceived
	}).(pulumi.StringPtrOutput)
}

// License Type of the VM to be used.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LicenseType
	}).(pulumi.StringPtrOutput)
}

// The migration progress percentage.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) MigrationProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MigrationProgressPercentage
	}).(pulumi.IntPtrOutput)
}

// The recovery point Id to which the VM was migrated.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) MigrationRecoveryPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MigrationRecoveryPointId
	}).(pulumi.StringPtrOutput)
}

// The type of the OS on the VM.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OsType
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether auto resync is to be done.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) PerformAutoResync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PerformAutoResync
	}).(pulumi.StringPtrOutput)
}

// The list of protected disks.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) ProtectedDisks() VMwareCbtProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) []VMwareCbtProtectedDiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ProtectedDisks
	}).(VMwareCbtProtectedDiskDetailsResponseArrayOutput)
}

// The resync progress percentage.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) ResyncProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ResyncProgressPercentage
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether resync is required.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) ResyncRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResyncRequired
	}).(pulumi.StringPtrOutput)
}

// The resync retry count.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) ResyncRetryCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.ResyncRetryCount
	}).(pulumi.Float64PtrOutput)
}

// The resync state.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) ResyncState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResyncState
	}).(pulumi.StringPtrOutput)
}

// The tags for the seed disks.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) SeedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.SeedDiskTags
	}).(pulumi.StringMapOutput)
}

// The snapshot run as account Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) SnapshotRunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SnapshotRunAsAccountId
	}).(pulumi.StringPtrOutput)
}

// The SQL Server license type.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) SqlServerLicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SqlServerLicenseType
	}).(pulumi.StringPtrOutput)
}

// The target availability set Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetAvailabilitySetId
	}).(pulumi.StringPtrOutput)
}

// The target availability zone.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetAvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// The target boot diagnostics storage account ARM Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetBootDiagnosticsStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetBootDiagnosticsStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The tags for the target disks.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetDiskTags
	}).(pulumi.StringMapOutput)
}

// The target generation.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetGeneration
	}).(pulumi.StringPtrOutput)
}

// The target location.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetLocation
	}).(pulumi.StringPtrOutput)
}

// The target network Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetNetworkId
	}).(pulumi.StringPtrOutput)
}

// The tags for the target NICs.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetNicTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetNicTags
	}).(pulumi.StringMapOutput)
}

// The target proximity placement group Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetProximityPlacementGroupId
	}).(pulumi.StringPtrOutput)
}

// The target resource group Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// Target VM name.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetVmName
	}).(pulumi.StringPtrOutput)
}

// The target VM size.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetVmSize
	}).(pulumi.StringPtrOutput)
}

// The target VM tags.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetVmTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetVmTags
	}).(pulumi.StringMapOutput)
}

// The network details.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) VmNics() VMwareCbtNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) []VMwareCbtNicDetailsResponse {
		if v == nil {
			return nil
		}
		return v.VmNics
	}).(VMwareCbtNicDetailsResponseArrayOutput)
}

// The ARM Id of the VM discovered in VMware.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) VmwareMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VmwareMachineId
	}).(pulumi.StringPtrOutput)
}

// VMwareCbt NIC details.
type VMwareCbtNicDetailsResponse struct {
	// A value indicating whether this is the primary NIC.
	IsPrimaryNic *string `pulumi:"isPrimaryNic"`
	// A value indicating whether this NIC is selected for migration.
	IsSelectedForMigration *string `pulumi:"isSelectedForMigration"`
	// The NIC Id.
	NicId string `pulumi:"nicId"`
	// The source IP address.
	SourceIPAddress string `pulumi:"sourceIPAddress"`
	// The source IP address type.
	SourceIPAddressType string `pulumi:"sourceIPAddressType"`
	// Source network Id.
	SourceNetworkId string `pulumi:"sourceNetworkId"`
	// The target IP address.
	TargetIPAddress *string `pulumi:"targetIPAddress"`
	// The target IP address type.
	TargetIPAddressType *string `pulumi:"targetIPAddressType"`
	// Target NIC name.
	TargetNicName *string `pulumi:"targetNicName"`
	// Target subnet name.
	TargetSubnetName *string `pulumi:"targetSubnetName"`
}

// VMwareCbt NIC details.
type VMwareCbtNicDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMwareCbtNicDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtNicDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtNicDetailsResponseOutput) ToVMwareCbtNicDetailsResponseOutput() VMwareCbtNicDetailsResponseOutput {
	return o
}

func (o VMwareCbtNicDetailsResponseOutput) ToVMwareCbtNicDetailsResponseOutputWithContext(ctx context.Context) VMwareCbtNicDetailsResponseOutput {
	return o
}

// A value indicating whether this is the primary NIC.
func (o VMwareCbtNicDetailsResponseOutput) IsPrimaryNic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.IsPrimaryNic }).(pulumi.StringPtrOutput)
}

// A value indicating whether this NIC is selected for migration.
func (o VMwareCbtNicDetailsResponseOutput) IsSelectedForMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.IsSelectedForMigration }).(pulumi.StringPtrOutput)
}

// The NIC Id.
func (o VMwareCbtNicDetailsResponseOutput) NicId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) string { return v.NicId }).(pulumi.StringOutput)
}

// The source IP address.
func (o VMwareCbtNicDetailsResponseOutput) SourceIPAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) string { return v.SourceIPAddress }).(pulumi.StringOutput)
}

// The source IP address type.
func (o VMwareCbtNicDetailsResponseOutput) SourceIPAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) string { return v.SourceIPAddressType }).(pulumi.StringOutput)
}

// Source network Id.
func (o VMwareCbtNicDetailsResponseOutput) SourceNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) string { return v.SourceNetworkId }).(pulumi.StringOutput)
}

// The target IP address.
func (o VMwareCbtNicDetailsResponseOutput) TargetIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.TargetIPAddress }).(pulumi.StringPtrOutput)
}

// The target IP address type.
func (o VMwareCbtNicDetailsResponseOutput) TargetIPAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.TargetIPAddressType }).(pulumi.StringPtrOutput)
}

// Target NIC name.
func (o VMwareCbtNicDetailsResponseOutput) TargetNicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.TargetNicName }).(pulumi.StringPtrOutput)
}

// Target subnet name.
func (o VMwareCbtNicDetailsResponseOutput) TargetSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.TargetSubnetName }).(pulumi.StringPtrOutput)
}

type VMwareCbtNicDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (VMwareCbtNicDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareCbtNicDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtNicDetailsResponseArrayOutput) ToVMwareCbtNicDetailsResponseArrayOutput() VMwareCbtNicDetailsResponseArrayOutput {
	return o
}

func (o VMwareCbtNicDetailsResponseArrayOutput) ToVMwareCbtNicDetailsResponseArrayOutputWithContext(ctx context.Context) VMwareCbtNicDetailsResponseArrayOutput {
	return o
}

func (o VMwareCbtNicDetailsResponseArrayOutput) Index(i pulumi.IntInput) VMwareCbtNicDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareCbtNicDetailsResponse {
		return vs[0].([]VMwareCbtNicDetailsResponse)[vs[1].(int)]
	}).(VMwareCbtNicDetailsResponseOutput)
}

// VMware Cbt policy creation input.
type VMwareCbtPolicyCreationInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	// Expected value is 'VMwareCbt'.
	InstanceType string `pulumi:"instanceType"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistoryInMinutes *int `pulumi:"recoveryPointHistoryInMinutes"`
}

// VMwareCbt protected disk details.
type VMwareCbtProtectedDiskDetailsResponse struct {
	// The disk capacity in bytes.
	CapacityInBytes float64 `pulumi:"capacityInBytes"`
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId string `pulumi:"diskEncryptionSetId"`
	// The disk id.
	DiskId string `pulumi:"diskId"`
	// The disk name.
	DiskName string `pulumi:"diskName"`
	// The disk path.
	DiskPath string `pulumi:"diskPath"`
	// The disk type.
	DiskType *string `pulumi:"diskType"`
	// A value indicating whether the disk is the OS disk.
	IsOSDisk string `pulumi:"isOSDisk"`
	// The log storage account ARM Id.
	LogStorageAccountId string `pulumi:"logStorageAccountId"`
	// The key vault secret name of the log storage account.
	LogStorageAccountSasSecretName string `pulumi:"logStorageAccountSasSecretName"`
	// The ARM Id of the seed managed disk.
	SeedManagedDiskId string `pulumi:"seedManagedDiskId"`
	// The name for the target managed disk.
	TargetDiskName *string `pulumi:"targetDiskName"`
	// The ARM Id of the target managed disk.
	TargetManagedDiskId string `pulumi:"targetManagedDiskId"`
}

// VMwareCbt protected disk details.
type VMwareCbtProtectedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMwareCbtProtectedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtProtectedDiskDetailsResponseOutput) ToVMwareCbtProtectedDiskDetailsResponseOutput() VMwareCbtProtectedDiskDetailsResponseOutput {
	return o
}

func (o VMwareCbtProtectedDiskDetailsResponseOutput) ToVMwareCbtProtectedDiskDetailsResponseOutputWithContext(ctx context.Context) VMwareCbtProtectedDiskDetailsResponseOutput {
	return o
}

// The disk capacity in bytes.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) CapacityInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) float64 { return v.CapacityInBytes }).(pulumi.Float64Output)
}

// The DiskEncryptionSet ARM Id.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) DiskEncryptionSetId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.DiskEncryptionSetId }).(pulumi.StringOutput)
}

// The disk id.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.DiskId }).(pulumi.StringOutput)
}

// The disk name.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) DiskName() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.DiskName }).(pulumi.StringOutput)
}

// The disk path.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) DiskPath() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.DiskPath }).(pulumi.StringOutput)
}

// The disk type.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// A value indicating whether the disk is the OS disk.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) IsOSDisk() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.IsOSDisk }).(pulumi.StringOutput)
}

// The log storage account ARM Id.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) LogStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.LogStorageAccountId }).(pulumi.StringOutput)
}

// The key vault secret name of the log storage account.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) LogStorageAccountSasSecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.LogStorageAccountSasSecretName }).(pulumi.StringOutput)
}

// The ARM Id of the seed managed disk.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) SeedManagedDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.SeedManagedDiskId }).(pulumi.StringOutput)
}

// The name for the target managed disk.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) TargetDiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) *string { return v.TargetDiskName }).(pulumi.StringPtrOutput)
}

// The ARM Id of the target managed disk.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) TargetManagedDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.TargetManagedDiskId }).(pulumi.StringOutput)
}

type VMwareCbtProtectedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (VMwareCbtProtectedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareCbtProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtProtectedDiskDetailsResponseArrayOutput) ToVMwareCbtProtectedDiskDetailsResponseArrayOutput() VMwareCbtProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o VMwareCbtProtectedDiskDetailsResponseArrayOutput) ToVMwareCbtProtectedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) VMwareCbtProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o VMwareCbtProtectedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) VMwareCbtProtectedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareCbtProtectedDiskDetailsResponse {
		return vs[0].([]VMwareCbtProtectedDiskDetailsResponse)[vs[1].(int)]
	}).(VMwareCbtProtectedDiskDetailsResponseOutput)
}

// VMwareCbt provider specific container mapping details.
type VMwareCbtProtectionContainerMappingDetailsResponse struct {
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'VMwareCbt'.
	InstanceType string `pulumi:"instanceType"`
	// The target key vault ARM Id.
	KeyVaultId string `pulumi:"keyVaultId"`
	// The target key vault URI.
	KeyVaultUri string `pulumi:"keyVaultUri"`
	// The secret name of the service bus connection string.
	ServiceBusConnectionStringSecretName string `pulumi:"serviceBusConnectionStringSecretName"`
	// The storage account ARM Id.
	StorageAccountId string `pulumi:"storageAccountId"`
	// The secret name of the storage account.
	StorageAccountSasSecretName string `pulumi:"storageAccountSasSecretName"`
	// The target location.
	TargetLocation string `pulumi:"targetLocation"`
}

// Store the fabric details specific to the VMware fabric.
type VMwareDetailsResponse struct {
	// The number of source and target servers configured to talk to this CS.
	AgentCount *string `pulumi:"agentCount"`
	// Agent expiry date.
	AgentExpiryDate *string `pulumi:"agentExpiryDate"`
	// The agent Version.
	AgentVersion *string `pulumi:"agentVersion"`
	// The agent version details.
	AgentVersionDetails *VersionDetailsResponse `pulumi:"agentVersionDetails"`
	// The available memory.
	AvailableMemoryInBytes *float64 `pulumi:"availableMemoryInBytes"`
	// The available space.
	AvailableSpaceInBytes *float64 `pulumi:"availableSpaceInBytes"`
	// The percentage of the CPU load.
	CpuLoad *string `pulumi:"cpuLoad"`
	// The CPU load status.
	CpuLoadStatus *string `pulumi:"cpuLoadStatus"`
	// The CS service status.
	CsServiceStatus *string `pulumi:"csServiceStatus"`
	// The database server load.
	DatabaseServerLoad *string `pulumi:"databaseServerLoad"`
	// The database server load status.
	DatabaseServerLoadStatus *string `pulumi:"databaseServerLoadStatus"`
	// The host name.
	HostName *string `pulumi:"hostName"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'VMware'.
	InstanceType string `pulumi:"instanceType"`
	// The IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// The last heartbeat received from CS server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The list of Master Target servers associated with the fabric.
	MasterTargetServers []MasterTargetServerResponse `pulumi:"masterTargetServers"`
	// The memory usage status.
	MemoryUsageStatus *string `pulumi:"memoryUsageStatus"`
	// The number of process servers.
	ProcessServerCount *string `pulumi:"processServerCount"`
	// The list of Process Servers associated with the fabric.
	ProcessServers []ProcessServerResponse `pulumi:"processServers"`
	// The number of protected servers.
	ProtectedServers *string `pulumi:"protectedServers"`
	// PS template version.
	PsTemplateVersion *string `pulumi:"psTemplateVersion"`
	// The number of replication pairs configured in this CS.
	ReplicationPairCount *string `pulumi:"replicationPairCount"`
	// The list of run as accounts created on the server.
	RunAsAccounts []RunAsAccountResponse `pulumi:"runAsAccounts"`
	// The space usage status.
	SpaceUsageStatus *string `pulumi:"spaceUsageStatus"`
	// CS SSL cert expiry date.
	SslCertExpiryDate *string `pulumi:"sslCertExpiryDate"`
	// CS SSL cert expiry date.
	SslCertExpiryRemainingDays *int `pulumi:"sslCertExpiryRemainingDays"`
	// The switch provider blocking error information.
	SwitchProviderBlockingErrorDetails []InMageFabricSwitchProviderBlockingErrorDetailsResponse `pulumi:"switchProviderBlockingErrorDetails"`
	// The percentage of the system load.
	SystemLoad *string `pulumi:"systemLoad"`
	// The system load status.
	SystemLoadStatus *string `pulumi:"systemLoadStatus"`
	// The total memory.
	TotalMemoryInBytes *float64 `pulumi:"totalMemoryInBytes"`
	// The total space.
	TotalSpaceInBytes *float64 `pulumi:"totalSpaceInBytes"`
	// Version status.
	VersionStatus *string `pulumi:"versionStatus"`
	// The web load.
	WebLoad *string `pulumi:"webLoad"`
	// The web load status.
	WebLoadStatus *string `pulumi:"webLoadStatus"`
}

// VMwareV2 fabric provider specific settings.
type VMwareV2FabricCreationInput struct {
	// Gets the class type.
	// Expected value is 'VMwareV2'.
	InstanceType string `pulumi:"instanceType"`
	// The ARM Id of the migration solution.
	MigrationSolutionId string `pulumi:"migrationSolutionId"`
	// The ARM Id of the physical site.
	PhysicalSiteId *string `pulumi:"physicalSiteId"`
	// The ARM Id of the VMware site.
	VmwareSiteId *string `pulumi:"vmwareSiteId"`
}

// VMwareV2 fabric specific details.
type VMwareV2FabricSpecificDetailsResponse struct {
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'VMwareV2'.
	InstanceType string `pulumi:"instanceType"`
	// The Migration solution ARM Id.
	MigrationSolutionId string `pulumi:"migrationSolutionId"`
	// The ARM Id of the physical site.
	PhysicalSiteId string `pulumi:"physicalSiteId"`
	// The list of process servers.
	ProcessServers []ProcessServerDetailsResponse `pulumi:"processServers"`
	// The service container Id.
	ServiceContainerId string `pulumi:"serviceContainerId"`
	// The service endpoint.
	ServiceEndpoint string `pulumi:"serviceEndpoint"`
	// The service resource Id.
	ServiceResourceId string `pulumi:"serviceResourceId"`
	// The ARM Id of the VMware site.
	VmwareSiteId string `pulumi:"vmwareSiteId"`
}

// Private Endpoint Connection Response Properties.
type VaultPrivateEndpointConnectionResponse struct {
	// The Private Endpoint network resource that is linked to the Private Endpoint connection.
	PrivateEndpoint PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// Gets or sets private link service connection state.
	PrivateLinkServiceConnectionState VaultPrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// Gets or sets provisioning state of the private endpoint connection.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Private Endpoint Connection Response Properties.
type VaultPrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (VaultPrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o VaultPrivateEndpointConnectionResponseOutput) ToVaultPrivateEndpointConnectionResponseOutput() VaultPrivateEndpointConnectionResponseOutput {
	return o
}

func (o VaultPrivateEndpointConnectionResponseOutput) ToVaultPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) VaultPrivateEndpointConnectionResponseOutput {
	return o
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection.
func (o VaultPrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v VaultPrivateEndpointConnectionResponse) PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponseOutput)
}

// Gets or sets private link service connection state.
func (o VaultPrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() VaultPrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v VaultPrivateEndpointConnectionResponse) VaultPrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(VaultPrivateLinkServiceConnectionStateResponseOutput)
}

// Gets or sets provisioning state of the private endpoint connection.
func (o VaultPrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets or sets private link service connection state.
type VaultPrivateLinkServiceConnectionStateResponse struct {
	// Gets or sets actions required.
	ActionsRequired string `pulumi:"actionsRequired"`
	// Gets or sets description.
	Description string `pulumi:"description"`
	// Gets or sets the status.
	Status string `pulumi:"status"`
}

// Gets or sets private link service connection state.
type VaultPrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (VaultPrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o VaultPrivateLinkServiceConnectionStateResponseOutput) ToVaultPrivateLinkServiceConnectionStateResponseOutput() VaultPrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o VaultPrivateLinkServiceConnectionStateResponseOutput) ToVaultPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) VaultPrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// Gets or sets actions required.
func (o VaultPrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPrivateLinkServiceConnectionStateResponse) string { return v.ActionsRequired }).(pulumi.StringOutput)
}

// Gets or sets description.
func (o VaultPrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPrivateLinkServiceConnectionStateResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Gets or sets the status.
func (o VaultPrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPrivateLinkServiceConnectionStateResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Properties of the vault.
type VaultProperties struct {
	// Customer Managed Key details of the resource.
	Encryption *VaultPropertiesEncryption `pulumi:"encryption"`
}

// VaultPropertiesInput is an input type that accepts VaultPropertiesArgs and VaultPropertiesOutput values.
// You can construct a concrete instance of `VaultPropertiesInput` via:
//
//	VaultPropertiesArgs{...}
type VaultPropertiesInput interface {
	pulumi.Input

	ToVaultPropertiesOutput() VaultPropertiesOutput
	ToVaultPropertiesOutputWithContext(context.Context) VaultPropertiesOutput
}

// Properties of the vault.
type VaultPropertiesArgs struct {
	// Customer Managed Key details of the resource.
	Encryption VaultPropertiesEncryptionPtrInput `pulumi:"encryption"`
}

func (VaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultProperties)(nil)).Elem()
}

func (i VaultPropertiesArgs) ToVaultPropertiesOutput() VaultPropertiesOutput {
	return i.ToVaultPropertiesOutputWithContext(context.Background())
}

func (i VaultPropertiesArgs) ToVaultPropertiesOutputWithContext(ctx context.Context) VaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesOutput)
}

func (i VaultPropertiesArgs) ToVaultPropertiesPtrOutput() VaultPropertiesPtrOutput {
	return i.ToVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i VaultPropertiesArgs) ToVaultPropertiesPtrOutputWithContext(ctx context.Context) VaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesOutput).ToVaultPropertiesPtrOutputWithContext(ctx)
}

// VaultPropertiesPtrInput is an input type that accepts VaultPropertiesArgs, VaultPropertiesPtr and VaultPropertiesPtrOutput values.
// You can construct a concrete instance of `VaultPropertiesPtrInput` via:
//
//	        VaultPropertiesArgs{...}
//
//	or:
//
//	        nil
type VaultPropertiesPtrInput interface {
	pulumi.Input

	ToVaultPropertiesPtrOutput() VaultPropertiesPtrOutput
	ToVaultPropertiesPtrOutputWithContext(context.Context) VaultPropertiesPtrOutput
}

type vaultPropertiesPtrType VaultPropertiesArgs

func VaultPropertiesPtr(v *VaultPropertiesArgs) VaultPropertiesPtrInput {
	return (*vaultPropertiesPtrType)(v)
}

func (*vaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultProperties)(nil)).Elem()
}

func (i *vaultPropertiesPtrType) ToVaultPropertiesPtrOutput() VaultPropertiesPtrOutput {
	return i.ToVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *vaultPropertiesPtrType) ToVaultPropertiesPtrOutputWithContext(ctx context.Context) VaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesPtrOutput)
}

// Properties of the vault.
type VaultPropertiesOutput struct{ *pulumi.OutputState }

func (VaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultProperties)(nil)).Elem()
}

func (o VaultPropertiesOutput) ToVaultPropertiesOutput() VaultPropertiesOutput {
	return o
}

func (o VaultPropertiesOutput) ToVaultPropertiesOutputWithContext(ctx context.Context) VaultPropertiesOutput {
	return o
}

func (o VaultPropertiesOutput) ToVaultPropertiesPtrOutput() VaultPropertiesPtrOutput {
	return o.ToVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o VaultPropertiesOutput) ToVaultPropertiesPtrOutputWithContext(ctx context.Context) VaultPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VaultProperties) *VaultProperties {
		return &v
	}).(VaultPropertiesPtrOutput)
}

// Customer Managed Key details of the resource.
func (o VaultPropertiesOutput) Encryption() VaultPropertiesEncryptionPtrOutput {
	return o.ApplyT(func(v VaultProperties) *VaultPropertiesEncryption { return v.Encryption }).(VaultPropertiesEncryptionPtrOutput)
}

type VaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultProperties)(nil)).Elem()
}

func (o VaultPropertiesPtrOutput) ToVaultPropertiesPtrOutput() VaultPropertiesPtrOutput {
	return o
}

func (o VaultPropertiesPtrOutput) ToVaultPropertiesPtrOutputWithContext(ctx context.Context) VaultPropertiesPtrOutput {
	return o
}

func (o VaultPropertiesPtrOutput) Elem() VaultPropertiesOutput {
	return o.ApplyT(func(v *VaultProperties) VaultProperties {
		if v != nil {
			return *v
		}
		var ret VaultProperties
		return ret
	}).(VaultPropertiesOutput)
}

// Customer Managed Key details of the resource.
func (o VaultPropertiesPtrOutput) Encryption() VaultPropertiesEncryptionPtrOutput {
	return o.ApplyT(func(v *VaultProperties) *VaultPropertiesEncryption {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(VaultPropertiesEncryptionPtrOutput)
}

// Customer Managed Key details of the resource.
type VaultPropertiesEncryption struct {
	// Enabling/Disabling the Double Encryption state
	InfrastructureEncryption *string `pulumi:"infrastructureEncryption"`
	// The details of the identity used for CMK
	KekIdentity *CmkKekIdentity `pulumi:"kekIdentity"`
	// The properties of the Key Vault which hosts CMK
	KeyVaultProperties *CmkKeyVaultProperties `pulumi:"keyVaultProperties"`
}

// VaultPropertiesEncryptionInput is an input type that accepts VaultPropertiesEncryptionArgs and VaultPropertiesEncryptionOutput values.
// You can construct a concrete instance of `VaultPropertiesEncryptionInput` via:
//
//	VaultPropertiesEncryptionArgs{...}
type VaultPropertiesEncryptionInput interface {
	pulumi.Input

	ToVaultPropertiesEncryptionOutput() VaultPropertiesEncryptionOutput
	ToVaultPropertiesEncryptionOutputWithContext(context.Context) VaultPropertiesEncryptionOutput
}

// Customer Managed Key details of the resource.
type VaultPropertiesEncryptionArgs struct {
	// Enabling/Disabling the Double Encryption state
	InfrastructureEncryption pulumi.StringPtrInput `pulumi:"infrastructureEncryption"`
	// The details of the identity used for CMK
	KekIdentity CmkKekIdentityPtrInput `pulumi:"kekIdentity"`
	// The properties of the Key Vault which hosts CMK
	KeyVaultProperties CmkKeyVaultPropertiesPtrInput `pulumi:"keyVaultProperties"`
}

func (VaultPropertiesEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesEncryption)(nil)).Elem()
}

func (i VaultPropertiesEncryptionArgs) ToVaultPropertiesEncryptionOutput() VaultPropertiesEncryptionOutput {
	return i.ToVaultPropertiesEncryptionOutputWithContext(context.Background())
}

func (i VaultPropertiesEncryptionArgs) ToVaultPropertiesEncryptionOutputWithContext(ctx context.Context) VaultPropertiesEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesEncryptionOutput)
}

func (i VaultPropertiesEncryptionArgs) ToVaultPropertiesEncryptionPtrOutput() VaultPropertiesEncryptionPtrOutput {
	return i.ToVaultPropertiesEncryptionPtrOutputWithContext(context.Background())
}

func (i VaultPropertiesEncryptionArgs) ToVaultPropertiesEncryptionPtrOutputWithContext(ctx context.Context) VaultPropertiesEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesEncryptionOutput).ToVaultPropertiesEncryptionPtrOutputWithContext(ctx)
}

// VaultPropertiesEncryptionPtrInput is an input type that accepts VaultPropertiesEncryptionArgs, VaultPropertiesEncryptionPtr and VaultPropertiesEncryptionPtrOutput values.
// You can construct a concrete instance of `VaultPropertiesEncryptionPtrInput` via:
//
//	        VaultPropertiesEncryptionArgs{...}
//
//	or:
//
//	        nil
type VaultPropertiesEncryptionPtrInput interface {
	pulumi.Input

	ToVaultPropertiesEncryptionPtrOutput() VaultPropertiesEncryptionPtrOutput
	ToVaultPropertiesEncryptionPtrOutputWithContext(context.Context) VaultPropertiesEncryptionPtrOutput
}

type vaultPropertiesEncryptionPtrType VaultPropertiesEncryptionArgs

func VaultPropertiesEncryptionPtr(v *VaultPropertiesEncryptionArgs) VaultPropertiesEncryptionPtrInput {
	return (*vaultPropertiesEncryptionPtrType)(v)
}

func (*vaultPropertiesEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultPropertiesEncryption)(nil)).Elem()
}

func (i *vaultPropertiesEncryptionPtrType) ToVaultPropertiesEncryptionPtrOutput() VaultPropertiesEncryptionPtrOutput {
	return i.ToVaultPropertiesEncryptionPtrOutputWithContext(context.Background())
}

func (i *vaultPropertiesEncryptionPtrType) ToVaultPropertiesEncryptionPtrOutputWithContext(ctx context.Context) VaultPropertiesEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesEncryptionPtrOutput)
}

// Customer Managed Key details of the resource.
type VaultPropertiesEncryptionOutput struct{ *pulumi.OutputState }

func (VaultPropertiesEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesEncryption)(nil)).Elem()
}

func (o VaultPropertiesEncryptionOutput) ToVaultPropertiesEncryptionOutput() VaultPropertiesEncryptionOutput {
	return o
}

func (o VaultPropertiesEncryptionOutput) ToVaultPropertiesEncryptionOutputWithContext(ctx context.Context) VaultPropertiesEncryptionOutput {
	return o
}

func (o VaultPropertiesEncryptionOutput) ToVaultPropertiesEncryptionPtrOutput() VaultPropertiesEncryptionPtrOutput {
	return o.ToVaultPropertiesEncryptionPtrOutputWithContext(context.Background())
}

func (o VaultPropertiesEncryptionOutput) ToVaultPropertiesEncryptionPtrOutputWithContext(ctx context.Context) VaultPropertiesEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VaultPropertiesEncryption) *VaultPropertiesEncryption {
		return &v
	}).(VaultPropertiesEncryptionPtrOutput)
}

// Enabling/Disabling the Double Encryption state
func (o VaultPropertiesEncryptionOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultPropertiesEncryption) *string { return v.InfrastructureEncryption }).(pulumi.StringPtrOutput)
}

// The details of the identity used for CMK
func (o VaultPropertiesEncryptionOutput) KekIdentity() CmkKekIdentityPtrOutput {
	return o.ApplyT(func(v VaultPropertiesEncryption) *CmkKekIdentity { return v.KekIdentity }).(CmkKekIdentityPtrOutput)
}

// The properties of the Key Vault which hosts CMK
func (o VaultPropertiesEncryptionOutput) KeyVaultProperties() CmkKeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v VaultPropertiesEncryption) *CmkKeyVaultProperties { return v.KeyVaultProperties }).(CmkKeyVaultPropertiesPtrOutput)
}

type VaultPropertiesEncryptionPtrOutput struct{ *pulumi.OutputState }

func (VaultPropertiesEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultPropertiesEncryption)(nil)).Elem()
}

func (o VaultPropertiesEncryptionPtrOutput) ToVaultPropertiesEncryptionPtrOutput() VaultPropertiesEncryptionPtrOutput {
	return o
}

func (o VaultPropertiesEncryptionPtrOutput) ToVaultPropertiesEncryptionPtrOutputWithContext(ctx context.Context) VaultPropertiesEncryptionPtrOutput {
	return o
}

func (o VaultPropertiesEncryptionPtrOutput) Elem() VaultPropertiesEncryptionOutput {
	return o.ApplyT(func(v *VaultPropertiesEncryption) VaultPropertiesEncryption {
		if v != nil {
			return *v
		}
		var ret VaultPropertiesEncryption
		return ret
	}).(VaultPropertiesEncryptionOutput)
}

// Enabling/Disabling the Double Encryption state
func (o VaultPropertiesEncryptionPtrOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesEncryption) *string {
		if v == nil {
			return nil
		}
		return v.InfrastructureEncryption
	}).(pulumi.StringPtrOutput)
}

// The details of the identity used for CMK
func (o VaultPropertiesEncryptionPtrOutput) KekIdentity() CmkKekIdentityPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesEncryption) *CmkKekIdentity {
		if v == nil {
			return nil
		}
		return v.KekIdentity
	}).(CmkKekIdentityPtrOutput)
}

// The properties of the Key Vault which hosts CMK
func (o VaultPropertiesEncryptionPtrOutput) KeyVaultProperties() CmkKeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesEncryption) *CmkKeyVaultProperties {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(CmkKeyVaultPropertiesPtrOutput)
}

// Properties of the vault.
type VaultPropertiesResponse struct {
	// Customer Managed Key details of the resource.
	Encryption *VaultPropertiesResponseEncryption `pulumi:"encryption"`
	// The details of the latest move operation performed on the Azure Resource
	MoveDetails *VaultPropertiesResponseMoveDetails `pulumi:"moveDetails"`
	// The State of the Resource after the move operation
	MoveState string `pulumi:"moveState"`
	// List of private endpoint connection.
	PrivateEndpointConnections []PrivateEndpointConnectionVaultPropertiesResponse `pulumi:"privateEndpointConnections"`
	// Private endpoint state for backup.
	PrivateEndpointStateForBackup string `pulumi:"privateEndpointStateForBackup"`
	// Private endpoint state for site recovery.
	PrivateEndpointStateForSiteRecovery string `pulumi:"privateEndpointStateForSiteRecovery"`
	// Provisioning State.
	ProvisioningState string `pulumi:"provisioningState"`
	// Details for upgrading vault.
	UpgradeDetails *UpgradeDetailsResponse `pulumi:"upgradeDetails"`
}

// Properties of the vault.
type VaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesResponse)(nil)).Elem()
}

func (o VaultPropertiesResponseOutput) ToVaultPropertiesResponseOutput() VaultPropertiesResponseOutput {
	return o
}

func (o VaultPropertiesResponseOutput) ToVaultPropertiesResponseOutputWithContext(ctx context.Context) VaultPropertiesResponseOutput {
	return o
}

// Customer Managed Key details of the resource.
func (o VaultPropertiesResponseOutput) Encryption() VaultPropertiesResponseEncryptionPtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *VaultPropertiesResponseEncryption { return v.Encryption }).(VaultPropertiesResponseEncryptionPtrOutput)
}

// The details of the latest move operation performed on the Azure Resource
func (o VaultPropertiesResponseOutput) MoveDetails() VaultPropertiesResponseMoveDetailsPtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *VaultPropertiesResponseMoveDetails { return v.MoveDetails }).(VaultPropertiesResponseMoveDetailsPtrOutput)
}

// The State of the Resource after the move operation
func (o VaultPropertiesResponseOutput) MoveState() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.MoveState }).(pulumi.StringOutput)
}

// List of private endpoint connection.
func (o VaultPropertiesResponseOutput) PrivateEndpointConnections() PrivateEndpointConnectionVaultPropertiesResponseArrayOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) []PrivateEndpointConnectionVaultPropertiesResponse {
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionVaultPropertiesResponseArrayOutput)
}

// Private endpoint state for backup.
func (o VaultPropertiesResponseOutput) PrivateEndpointStateForBackup() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.PrivateEndpointStateForBackup }).(pulumi.StringOutput)
}

// Private endpoint state for site recovery.
func (o VaultPropertiesResponseOutput) PrivateEndpointStateForSiteRecovery() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.PrivateEndpointStateForSiteRecovery }).(pulumi.StringOutput)
}

// Provisioning State.
func (o VaultPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Details for upgrading vault.
func (o VaultPropertiesResponseOutput) UpgradeDetails() UpgradeDetailsResponsePtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *UpgradeDetailsResponse { return v.UpgradeDetails }).(UpgradeDetailsResponsePtrOutput)
}

// Customer Managed Key details of the resource.
type VaultPropertiesResponseEncryption struct {
	// Enabling/Disabling the Double Encryption state
	InfrastructureEncryption *string `pulumi:"infrastructureEncryption"`
	// The details of the identity used for CMK
	KekIdentity *CmkKekIdentityResponse `pulumi:"kekIdentity"`
	// The properties of the Key Vault which hosts CMK
	KeyVaultProperties *CmkKeyVaultPropertiesResponse `pulumi:"keyVaultProperties"`
}

// Customer Managed Key details of the resource.
type VaultPropertiesResponseEncryptionOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesResponseEncryption)(nil)).Elem()
}

func (o VaultPropertiesResponseEncryptionOutput) ToVaultPropertiesResponseEncryptionOutput() VaultPropertiesResponseEncryptionOutput {
	return o
}

func (o VaultPropertiesResponseEncryptionOutput) ToVaultPropertiesResponseEncryptionOutputWithContext(ctx context.Context) VaultPropertiesResponseEncryptionOutput {
	return o
}

// Enabling/Disabling the Double Encryption state
func (o VaultPropertiesResponseEncryptionOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponseEncryption) *string { return v.InfrastructureEncryption }).(pulumi.StringPtrOutput)
}

// The details of the identity used for CMK
func (o VaultPropertiesResponseEncryptionOutput) KekIdentity() CmkKekIdentityResponsePtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponseEncryption) *CmkKekIdentityResponse { return v.KekIdentity }).(CmkKekIdentityResponsePtrOutput)
}

// The properties of the Key Vault which hosts CMK
func (o VaultPropertiesResponseEncryptionOutput) KeyVaultProperties() CmkKeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponseEncryption) *CmkKeyVaultPropertiesResponse { return v.KeyVaultProperties }).(CmkKeyVaultPropertiesResponsePtrOutput)
}

type VaultPropertiesResponseEncryptionPtrOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultPropertiesResponseEncryption)(nil)).Elem()
}

func (o VaultPropertiesResponseEncryptionPtrOutput) ToVaultPropertiesResponseEncryptionPtrOutput() VaultPropertiesResponseEncryptionPtrOutput {
	return o
}

func (o VaultPropertiesResponseEncryptionPtrOutput) ToVaultPropertiesResponseEncryptionPtrOutputWithContext(ctx context.Context) VaultPropertiesResponseEncryptionPtrOutput {
	return o
}

func (o VaultPropertiesResponseEncryptionPtrOutput) Elem() VaultPropertiesResponseEncryptionOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseEncryption) VaultPropertiesResponseEncryption {
		if v != nil {
			return *v
		}
		var ret VaultPropertiesResponseEncryption
		return ret
	}).(VaultPropertiesResponseEncryptionOutput)
}

// Enabling/Disabling the Double Encryption state
func (o VaultPropertiesResponseEncryptionPtrOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseEncryption) *string {
		if v == nil {
			return nil
		}
		return v.InfrastructureEncryption
	}).(pulumi.StringPtrOutput)
}

// The details of the identity used for CMK
func (o VaultPropertiesResponseEncryptionPtrOutput) KekIdentity() CmkKekIdentityResponsePtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseEncryption) *CmkKekIdentityResponse {
		if v == nil {
			return nil
		}
		return v.KekIdentity
	}).(CmkKekIdentityResponsePtrOutput)
}

// The properties of the Key Vault which hosts CMK
func (o VaultPropertiesResponseEncryptionPtrOutput) KeyVaultProperties() CmkKeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseEncryption) *CmkKeyVaultPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(CmkKeyVaultPropertiesResponsePtrOutput)
}

// The details of the latest move operation performed on the Azure Resource
type VaultPropertiesResponseMoveDetails struct {
	// End Time of the Resource Move Operation
	CompletionTimeUtc string `pulumi:"completionTimeUtc"`
	// OperationId of the Resource Move Operation
	OperationId string `pulumi:"operationId"`
	// Source Resource of the Resource Move Operation
	SourceResourceId string `pulumi:"sourceResourceId"`
	// Start Time of the Resource Move Operation
	StartTimeUtc string `pulumi:"startTimeUtc"`
	// Target Resource of the Resource Move Operation
	TargetResourceId string `pulumi:"targetResourceId"`
}

// The details of the latest move operation performed on the Azure Resource
type VaultPropertiesResponseMoveDetailsOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseMoveDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesResponseMoveDetails)(nil)).Elem()
}

func (o VaultPropertiesResponseMoveDetailsOutput) ToVaultPropertiesResponseMoveDetailsOutput() VaultPropertiesResponseMoveDetailsOutput {
	return o
}

func (o VaultPropertiesResponseMoveDetailsOutput) ToVaultPropertiesResponseMoveDetailsOutputWithContext(ctx context.Context) VaultPropertiesResponseMoveDetailsOutput {
	return o
}

// End Time of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsOutput) CompletionTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponseMoveDetails) string { return v.CompletionTimeUtc }).(pulumi.StringOutput)
}

// OperationId of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsOutput) OperationId() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponseMoveDetails) string { return v.OperationId }).(pulumi.StringOutput)
}

// Source Resource of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsOutput) SourceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponseMoveDetails) string { return v.SourceResourceId }).(pulumi.StringOutput)
}

// Start Time of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsOutput) StartTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponseMoveDetails) string { return v.StartTimeUtc }).(pulumi.StringOutput)
}

// Target Resource of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsOutput) TargetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponseMoveDetails) string { return v.TargetResourceId }).(pulumi.StringOutput)
}

type VaultPropertiesResponseMoveDetailsPtrOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseMoveDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultPropertiesResponseMoveDetails)(nil)).Elem()
}

func (o VaultPropertiesResponseMoveDetailsPtrOutput) ToVaultPropertiesResponseMoveDetailsPtrOutput() VaultPropertiesResponseMoveDetailsPtrOutput {
	return o
}

func (o VaultPropertiesResponseMoveDetailsPtrOutput) ToVaultPropertiesResponseMoveDetailsPtrOutputWithContext(ctx context.Context) VaultPropertiesResponseMoveDetailsPtrOutput {
	return o
}

func (o VaultPropertiesResponseMoveDetailsPtrOutput) Elem() VaultPropertiesResponseMoveDetailsOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseMoveDetails) VaultPropertiesResponseMoveDetails {
		if v != nil {
			return *v
		}
		var ret VaultPropertiesResponseMoveDetails
		return ret
	}).(VaultPropertiesResponseMoveDetailsOutput)
}

// End Time of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsPtrOutput) CompletionTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseMoveDetails) *string {
		if v == nil {
			return nil
		}
		return &v.CompletionTimeUtc
	}).(pulumi.StringPtrOutput)
}

// OperationId of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsPtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseMoveDetails) *string {
		if v == nil {
			return nil
		}
		return &v.OperationId
	}).(pulumi.StringPtrOutput)
}

// Source Resource of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseMoveDetails) *string {
		if v == nil {
			return nil
		}
		return &v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Start Time of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsPtrOutput) StartTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseMoveDetails) *string {
		if v == nil {
			return nil
		}
		return &v.StartTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Target Resource of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsPtrOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseMoveDetails) *string {
		if v == nil {
			return nil
		}
		return &v.TargetResourceId
	}).(pulumi.StringPtrOutput)
}

// Version related details.
type VersionDetailsResponse struct {
	// Version expiry date.
	ExpiryDate *string `pulumi:"expiryDate"`
	// A value indicating whether security update required.
	Status *string `pulumi:"status"`
	// The agent version.
	Version *string `pulumi:"version"`
}

// Version related details.
type VersionDetailsResponseOutput struct{ *pulumi.OutputState }

func (VersionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VersionDetailsResponse)(nil)).Elem()
}

func (o VersionDetailsResponseOutput) ToVersionDetailsResponseOutput() VersionDetailsResponseOutput {
	return o
}

func (o VersionDetailsResponseOutput) ToVersionDetailsResponseOutputWithContext(ctx context.Context) VersionDetailsResponseOutput {
	return o
}

// Version expiry date.
func (o VersionDetailsResponseOutput) ExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VersionDetailsResponse) *string { return v.ExpiryDate }).(pulumi.StringPtrOutput)
}

// A value indicating whether security update required.
func (o VersionDetailsResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VersionDetailsResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The agent version.
func (o VersionDetailsResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VersionDetailsResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type VersionDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (VersionDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VersionDetailsResponse)(nil)).Elem()
}

func (o VersionDetailsResponsePtrOutput) ToVersionDetailsResponsePtrOutput() VersionDetailsResponsePtrOutput {
	return o
}

func (o VersionDetailsResponsePtrOutput) ToVersionDetailsResponsePtrOutputWithContext(ctx context.Context) VersionDetailsResponsePtrOutput {
	return o
}

func (o VersionDetailsResponsePtrOutput) Elem() VersionDetailsResponseOutput {
	return o.ApplyT(func(v *VersionDetailsResponse) VersionDetailsResponse {
		if v != nil {
			return *v
		}
		var ret VersionDetailsResponse
		return ret
	}).(VersionDetailsResponseOutput)
}

// Version expiry date.
func (o VersionDetailsResponsePtrOutput) ExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VersionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExpiryDate
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether security update required.
func (o VersionDetailsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VersionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The agent version.
func (o VersionDetailsResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VersionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// VMM fabric specific details.
type VmmDetailsResponse struct {
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'VMM'.
	InstanceType string `pulumi:"instanceType"`
}

// Create network mappings input properties/behavior specific to Vmm to Azure Network mapping.
type VmmToAzureCreateNetworkMappingInput struct {
	// The instance type.
	// Expected value is 'VmmToAzure'.
	InstanceType string `pulumi:"instanceType"`
}

// E2A Network Mapping fabric specific settings.
type VmmToAzureNetworkMappingSettingsResponse struct {
	// Gets the Instance type.
	// Expected value is 'VmmToAzure'.
	InstanceType string `pulumi:"instanceType"`
}

// Create network mappings input properties/behavior specific to vmm to vmm Network mapping.
type VmmToVmmCreateNetworkMappingInput struct {
	// The instance type.
	// Expected value is 'VmmToVmm'.
	InstanceType string `pulumi:"instanceType"`
}

// E2E Network Mapping fabric specific settings.
type VmmToVmmNetworkMappingSettingsResponse struct {
	// Gets the Instance type.
	// Expected value is 'VmmToVmm'.
	InstanceType string `pulumi:"instanceType"`
}

// VMware Cbt specific policy details.
type VmwareCbtPolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency in minutes.
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'VMwareCbt'.
	InstanceType string `pulumi:"instanceType"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistoryInMinutes *int `pulumi:"recoveryPointHistoryInMinutes"`
}

// Weekly retention format.
type WeeklyRetentionFormat struct {
	// List of days of the week.
	DaysOfTheWeek []DayOfWeek `pulumi:"daysOfTheWeek"`
	// List of weeks of month.
	WeeksOfTheMonth []WeekOfMonth `pulumi:"weeksOfTheMonth"`
}

// Weekly retention format.
type WeeklyRetentionFormatResponse struct {
	// List of days of the week.
	DaysOfTheWeek []string `pulumi:"daysOfTheWeek"`
	// List of weeks of month.
	WeeksOfTheMonth []string `pulumi:"weeksOfTheMonth"`
}

// Weekly retention schedule.
type WeeklyRetentionSchedule struct {
	// List of days of week for weekly retention policy.
	DaysOfTheWeek []DayOfWeek `pulumi:"daysOfTheWeek"`
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Weekly retention schedule.
type WeeklyRetentionScheduleResponse struct {
	// List of days of week for weekly retention policy.
	DaysOfTheWeek []string `pulumi:"daysOfTheWeek"`
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

type WeeklySchedule struct {
	ScheduleRunDays []DayOfWeek `pulumi:"scheduleRunDays"`
	// List of times of day this schedule has to be run.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
}

type WeeklyScheduleResponse struct {
	ScheduleRunDays []string `pulumi:"scheduleRunDays"`
	// List of times of day this schedule has to be run.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
}

// Details of an inquired protectable item.
type WorkloadInquiryDetails struct {
	// Inquiry validation such as permissions and other backup validations.
	InquiryValidation *InquiryValidation `pulumi:"inquiryValidation"`
	// Contains the protectable item Count inside this Container.
	ItemCount *float64 `pulumi:"itemCount"`
	// Type of the Workload such as SQL, Oracle etc.
	Type *string `pulumi:"type"`
}

// Details of an inquired protectable item.
type WorkloadInquiryDetailsResponse struct {
	// Inquiry validation such as permissions and other backup validations.
	InquiryValidation *InquiryValidationResponse `pulumi:"inquiryValidation"`
	// Contains the protectable item Count inside this Container.
	ItemCount *float64 `pulumi:"itemCount"`
	// Type of the Workload such as SQL, Oracle etc.
	Type *string `pulumi:"type"`
}

// Yearly retention schedule.
type YearlyRetentionSchedule struct {
	// List of months of year of yearly retention policy.
	MonthsOfYear []MonthOfYear `pulumi:"monthsOfYear"`
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// Daily retention format for yearly retention policy.
	RetentionScheduleDaily *DailyRetentionFormat `pulumi:"retentionScheduleDaily"`
	// Retention schedule format for yearly retention policy.
	RetentionScheduleFormatType *string `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for yearly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormat `pulumi:"retentionScheduleWeekly"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Yearly retention schedule.
type YearlyRetentionScheduleResponse struct {
	// List of months of year of yearly retention policy.
	MonthsOfYear []string `pulumi:"monthsOfYear"`
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// Daily retention format for yearly retention policy.
	RetentionScheduleDaily *DailyRetentionFormatResponse `pulumi:"retentionScheduleDaily"`
	// Retention schedule format for yearly retention policy.
	RetentionScheduleFormatType *string `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for yearly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormatResponse `pulumi:"retentionScheduleWeekly"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

func init() {
	pulumi.RegisterOutputType(AddRecoveryServicesProviderInputPropertiesOutput{})
	pulumi.RegisterOutputType(AddVCenterRequestPropertiesOutput{})
	pulumi.RegisterOutputType(AddVCenterRequestPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CmkKekIdentityOutput{})
	pulumi.RegisterOutputType(CmkKekIdentityPtrOutput{})
	pulumi.RegisterOutputType(CmkKekIdentityResponseOutput{})
	pulumi.RegisterOutputType(CmkKekIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(CmkKeyVaultPropertiesOutput{})
	pulumi.RegisterOutputType(CmkKeyVaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CmkKeyVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CmkKeyVaultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CreateNetworkMappingInputPropertiesOutput{})
	pulumi.RegisterOutputType(CreatePolicyInputPropertiesOutput{})
	pulumi.RegisterOutputType(CreatePolicyInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CreateProtectionContainerMappingInputPropertiesOutput{})
	pulumi.RegisterOutputType(CreateProtectionContainerMappingInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CreateRecoveryPlanInputPropertiesOutput{})
	pulumi.RegisterOutputType(CurrentJobDetailsResponseOutput{})
	pulumi.RegisterOutputType(CurrentScenarioDetailsResponseOutput{})
	pulumi.RegisterOutputType(CurrentScenarioDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(EnableMigrationInputPropertiesOutput{})
	pulumi.RegisterOutputType(EnableProtectionInputPropertiesOutput{})
	pulumi.RegisterOutputType(EnableProtectionInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionDetailsResponseOutput{})
	pulumi.RegisterOutputType(EncryptionDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationOutput{})
	pulumi.RegisterOutputType(ExtendedLocationPtrOutput{})
	pulumi.RegisterOutputType(FabricCreationInputPropertiesOutput{})
	pulumi.RegisterOutputType(FabricCreationInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FabricPropertiesResponseOutput{})
	pulumi.RegisterOutputType(HealthErrorResponseOutput{})
	pulumi.RegisterOutputType(HealthErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentityDataOutput{})
	pulumi.RegisterOutputType(IdentityDataPtrOutput{})
	pulumi.RegisterOutputType(IdentityDataResponseOutput{})
	pulumi.RegisterOutputType(IdentityDataResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentityProviderDetailsResponseOutput{})
	pulumi.RegisterOutputType(IdentityProviderDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentityProviderInputOutput{})
	pulumi.RegisterOutputType(IdentityProviderInputPtrOutput{})
	pulumi.RegisterOutputType(InnerHealthErrorResponseOutput{})
	pulumi.RegisterOutputType(InnerHealthErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(MigrationItemPropertiesResponseOutput{})
	pulumi.RegisterOutputType(NetworkMappingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionTypeOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionTypePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionVaultPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(ProtectionContainerMappingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanA2ADetailsResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanA2ADetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanA2AInputOutput{})
	pulumi.RegisterOutputType(RecoveryPlanA2AInputArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanActionOutput{})
	pulumi.RegisterOutputType(RecoveryPlanActionArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanActionResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanActionResponseArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanGroupOutput{})
	pulumi.RegisterOutputType(RecoveryPlanGroupArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanGroupResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanProtectedItemOutput{})
	pulumi.RegisterOutputType(RecoveryPlanProtectedItemArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanProtectedItemResponseArrayOutput{})
	pulumi.RegisterOutputType(RecoveryServicesProviderPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ReplicationProtectedItemPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ResourceGuardOperationDetailResponseOutput{})
	pulumi.RegisterOutputType(ResourceGuardOperationDetailResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceGuardProxyBaseResponseOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageClassificationMappingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StorageMappingInputPropertiesOutput{})
	pulumi.RegisterOutputType(StorageMappingInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UpgradeDetailsResponseOutput{})
	pulumi.RegisterOutputType(UpgradeDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(UserIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(VCenterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VMwareCbtDiskInputOutput{})
	pulumi.RegisterOutputType(VMwareCbtDiskInputArrayOutput{})
	pulumi.RegisterOutputType(VMwareCbtEnableMigrationInputOutput{})
	pulumi.RegisterOutputType(VMwareCbtMigrationDetailsResponseOutput{})
	pulumi.RegisterOutputType(VMwareCbtMigrationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(VMwareCbtNicDetailsResponseOutput{})
	pulumi.RegisterOutputType(VMwareCbtNicDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(VMwareCbtProtectedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(VMwareCbtProtectedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(VaultPrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(VaultPrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(VaultPropertiesOutput{})
	pulumi.RegisterOutputType(VaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VaultPropertiesEncryptionOutput{})
	pulumi.RegisterOutputType(VaultPropertiesEncryptionPtrOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseEncryptionOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseEncryptionPtrOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseMoveDetailsOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseMoveDetailsPtrOutput{})
	pulumi.RegisterOutputType(VersionDetailsResponseOutput{})
	pulumi.RegisterOutputType(VersionDetailsResponsePtrOutput{})
}
