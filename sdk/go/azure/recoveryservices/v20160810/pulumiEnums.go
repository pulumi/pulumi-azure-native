// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20160810

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The failover deployment model.
type FailoverDeploymentModel pulumi.String

const (
	FailoverDeploymentModelNotApplicable   = FailoverDeploymentModel("NotApplicable")
	FailoverDeploymentModelClassic         = FailoverDeploymentModel("Classic")
	FailoverDeploymentModelResourceManager = FailoverDeploymentModel("ResourceManager")
)

func (FailoverDeploymentModel) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e FailoverDeploymentModel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FailoverDeploymentModel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FailoverDeploymentModel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FailoverDeploymentModel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PossibleOperationsDirections pulumi.String

const (
	PossibleOperationsDirectionsPrimaryToRecovery = PossibleOperationsDirections("PrimaryToRecovery")
	PossibleOperationsDirectionsRecoveryToPrimary = PossibleOperationsDirections("RecoveryToPrimary")
)

func (PossibleOperationsDirections) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e PossibleOperationsDirections) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PossibleOperationsDirections) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PossibleOperationsDirections) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PossibleOperationsDirections) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// PossibleOperationsDirectionsArrayInput is an input type that accepts PossibleOperationsDirectionsArray and PossibleOperationsDirectionsArrayOutput values.
// You can construct a concrete instance of `PossibleOperationsDirectionsArrayInput` via:
//
//          PossibleOperationsDirectionsArray{ PossibleOperationsDirectionsArgs{...} }
type PossibleOperationsDirectionsArrayInput interface {
	pulumi.Input

	ToPossibleOperationsDirectionsArrayOutput() PossibleOperationsDirectionsArrayOutput
	ToPossibleOperationsDirectionsArrayOutputWithContext(context.Context) PossibleOperationsDirectionsArrayOutput
}

type PossibleOperationsDirectionsArray []PossibleOperationsDirections

func (PossibleOperationsDirectionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PossibleOperationsDirections)(nil)).Elem()
}

func (i PossibleOperationsDirectionsArray) ToPossibleOperationsDirectionsArrayOutput() PossibleOperationsDirectionsArrayOutput {
	return i.ToPossibleOperationsDirectionsArrayOutputWithContext(context.Background())
}

func (i PossibleOperationsDirectionsArray) ToPossibleOperationsDirectionsArrayOutputWithContext(ctx context.Context) PossibleOperationsDirectionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PossibleOperationsDirectionsArrayOutput)
}

type PossibleOperationsDirectionsArrayOutput struct{ *pulumi.OutputState }

func (PossibleOperationsDirectionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PossibleOperationsDirections)(nil)).Elem()
}

func (o PossibleOperationsDirectionsArrayOutput) ToPossibleOperationsDirectionsArrayOutput() PossibleOperationsDirectionsArrayOutput {
	return o
}

func (o PossibleOperationsDirectionsArrayOutput) ToPossibleOperationsDirectionsArrayOutputWithContext(ctx context.Context) PossibleOperationsDirectionsArrayOutput {
	return o
}

func (o PossibleOperationsDirectionsArrayOutput) Index(i pulumi.IntInput) pulumi.StringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) pulumi.StringOutput {
		return vs[0].([]PossibleOperationsDirections)[vs[1].(int)].ToStringOutput()
	}).(pulumi.StringOutput)
}

// The group type.
type RecoveryPlanGroupType pulumi.String

const (
	RecoveryPlanGroupTypeShutdown = RecoveryPlanGroupType("Shutdown")
	RecoveryPlanGroupTypeBoot     = RecoveryPlanGroupType("Boot")
	RecoveryPlanGroupTypeFailover = RecoveryPlanGroupType("Failover")
)

func (RecoveryPlanGroupType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e RecoveryPlanGroupType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecoveryPlanGroupType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecoveryPlanGroupType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RecoveryPlanGroupType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ReplicationProtectedItemOperation pulumi.String

const (
	ReplicationProtectedItemOperationReverseReplicate    = ReplicationProtectedItemOperation("ReverseReplicate")
	ReplicationProtectedItemOperationCommit              = ReplicationProtectedItemOperation("Commit")
	ReplicationProtectedItemOperationPlannedFailover     = ReplicationProtectedItemOperation("PlannedFailover")
	ReplicationProtectedItemOperationUnplannedFailover   = ReplicationProtectedItemOperation("UnplannedFailover")
	ReplicationProtectedItemOperationDisableProtection   = ReplicationProtectedItemOperation("DisableProtection")
	ReplicationProtectedItemOperationTestFailover        = ReplicationProtectedItemOperation("TestFailover")
	ReplicationProtectedItemOperationTestFailoverCleanup = ReplicationProtectedItemOperation("TestFailoverCleanup")
	ReplicationProtectedItemOperationFailback            = ReplicationProtectedItemOperation("Failback")
	ReplicationProtectedItemOperationFinalizeFailback    = ReplicationProtectedItemOperation("FinalizeFailback")
	ReplicationProtectedItemOperationChangePit           = ReplicationProtectedItemOperation("ChangePit")
	ReplicationProtectedItemOperationRepairReplication   = ReplicationProtectedItemOperation("RepairReplication")
	ReplicationProtectedItemOperationSwitchProtection    = ReplicationProtectedItemOperation("SwitchProtection")
	ReplicationProtectedItemOperationCompleteMigration   = ReplicationProtectedItemOperation("CompleteMigration")
)

func (ReplicationProtectedItemOperation) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e ReplicationProtectedItemOperation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReplicationProtectedItemOperation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReplicationProtectedItemOperation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReplicationProtectedItemOperation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// ReplicationProtectedItemOperationArrayInput is an input type that accepts ReplicationProtectedItemOperationArray and ReplicationProtectedItemOperationArrayOutput values.
// You can construct a concrete instance of `ReplicationProtectedItemOperationArrayInput` via:
//
//          ReplicationProtectedItemOperationArray{ ReplicationProtectedItemOperationArgs{...} }
type ReplicationProtectedItemOperationArrayInput interface {
	pulumi.Input

	ToReplicationProtectedItemOperationArrayOutput() ReplicationProtectedItemOperationArrayOutput
	ToReplicationProtectedItemOperationArrayOutputWithContext(context.Context) ReplicationProtectedItemOperationArrayOutput
}

type ReplicationProtectedItemOperationArray []ReplicationProtectedItemOperation

func (ReplicationProtectedItemOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationProtectedItemOperation)(nil)).Elem()
}

func (i ReplicationProtectedItemOperationArray) ToReplicationProtectedItemOperationArrayOutput() ReplicationProtectedItemOperationArrayOutput {
	return i.ToReplicationProtectedItemOperationArrayOutputWithContext(context.Background())
}

func (i ReplicationProtectedItemOperationArray) ToReplicationProtectedItemOperationArrayOutputWithContext(ctx context.Context) ReplicationProtectedItemOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationProtectedItemOperationArrayOutput)
}

type ReplicationProtectedItemOperationArrayOutput struct{ *pulumi.OutputState }

func (ReplicationProtectedItemOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationProtectedItemOperation)(nil)).Elem()
}

func (o ReplicationProtectedItemOperationArrayOutput) ToReplicationProtectedItemOperationArrayOutput() ReplicationProtectedItemOperationArrayOutput {
	return o
}

func (o ReplicationProtectedItemOperationArrayOutput) ToReplicationProtectedItemOperationArrayOutputWithContext(ctx context.Context) ReplicationProtectedItemOperationArrayOutput {
	return o
}

func (o ReplicationProtectedItemOperationArrayOutput) Index(i pulumi.IntInput) pulumi.StringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) pulumi.StringOutput {
		return vs[0].([]ReplicationProtectedItemOperation)[vs[1].(int)].ToStringOutput()
	}).(pulumi.StringOutput)
}

// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
type SetMultiVmSyncStatus pulumi.String

const (
	SetMultiVmSyncStatusEnable  = SetMultiVmSyncStatus("Enable")
	SetMultiVmSyncStatusDisable = SetMultiVmSyncStatus("Disable")
)

func (SetMultiVmSyncStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SetMultiVmSyncStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SetMultiVmSyncStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SetMultiVmSyncStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SetMultiVmSyncStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
