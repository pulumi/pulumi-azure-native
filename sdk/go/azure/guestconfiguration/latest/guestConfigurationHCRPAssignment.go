// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Guest configuration assignment is an association between a machine and guest configuration.
// Latest API Version: 2020-06-25.
type GuestConfigurationHCRPAssignment struct {
	pulumi.CustomResourceState

	// Region where the VM is located.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Name of the guest configuration assignment.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Properties of the Guest configuration assignment.
	Properties GuestConfigurationAssignmentPropertiesResponseOutput `pulumi:"properties"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewGuestConfigurationHCRPAssignment registers a new resource with the given unique name, arguments, and options.
func NewGuestConfigurationHCRPAssignment(ctx *pulumi.Context,
	name string, args *GuestConfigurationHCRPAssignmentArgs, opts ...pulumi.ResourceOption) (*GuestConfigurationHCRPAssignment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GuestConfigurationAssignmentName == nil {
		return nil, errors.New("invalid value for required argument 'GuestConfigurationAssignmentName'")
	}
	if args.MachineName == nil {
		return nil, errors.New("invalid value for required argument 'MachineName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:guestconfiguration/v20181120:GuestConfigurationHCRPAssignment"),
		},
		{
			Type: pulumi.String("azure-nextgen:guestconfiguration/v20200625:GuestConfigurationHCRPAssignment"),
		},
	})
	opts = append(opts, aliases)
	var resource GuestConfigurationHCRPAssignment
	err := ctx.RegisterResource("azure-nextgen:guestconfiguration/latest:GuestConfigurationHCRPAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGuestConfigurationHCRPAssignment gets an existing GuestConfigurationHCRPAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGuestConfigurationHCRPAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GuestConfigurationHCRPAssignmentState, opts ...pulumi.ResourceOption) (*GuestConfigurationHCRPAssignment, error) {
	var resource GuestConfigurationHCRPAssignment
	err := ctx.ReadResource("azure-nextgen:guestconfiguration/latest:GuestConfigurationHCRPAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GuestConfigurationHCRPAssignment resources.
type guestConfigurationHCRPAssignmentState struct {
	// Region where the VM is located.
	Location *string `pulumi:"location"`
	// Name of the guest configuration assignment.
	Name *string `pulumi:"name"`
	// Properties of the Guest configuration assignment.
	Properties *GuestConfigurationAssignmentPropertiesResponse `pulumi:"properties"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

type GuestConfigurationHCRPAssignmentState struct {
	// Region where the VM is located.
	Location pulumi.StringPtrInput
	// Name of the guest configuration assignment.
	Name pulumi.StringPtrInput
	// Properties of the Guest configuration assignment.
	Properties GuestConfigurationAssignmentPropertiesResponsePtrInput
	// The type of the resource.
	Type pulumi.StringPtrInput
}

func (GuestConfigurationHCRPAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*guestConfigurationHCRPAssignmentState)(nil)).Elem()
}

type guestConfigurationHCRPAssignmentArgs struct {
	// Name of the guest configuration assignment.
	GuestConfigurationAssignmentName string `pulumi:"guestConfigurationAssignmentName"`
	// Region where the VM is located.
	Location *string `pulumi:"location"`
	// The name of the ARC machine.
	MachineName string `pulumi:"machineName"`
	// Name of the guest configuration assignment.
	Name *string `pulumi:"name"`
	// Properties of the Guest configuration assignment.
	Properties *GuestConfigurationAssignmentProperties `pulumi:"properties"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a GuestConfigurationHCRPAssignment resource.
type GuestConfigurationHCRPAssignmentArgs struct {
	// Name of the guest configuration assignment.
	GuestConfigurationAssignmentName pulumi.StringInput
	// Region where the VM is located.
	Location pulumi.StringPtrInput
	// The name of the ARC machine.
	MachineName pulumi.StringInput
	// Name of the guest configuration assignment.
	Name pulumi.StringPtrInput
	// Properties of the Guest configuration assignment.
	Properties GuestConfigurationAssignmentPropertiesPtrInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
}

func (GuestConfigurationHCRPAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*guestConfigurationHCRPAssignmentArgs)(nil)).Elem()
}

type GuestConfigurationHCRPAssignmentInput interface {
	pulumi.Input

	ToGuestConfigurationHCRPAssignmentOutput() GuestConfigurationHCRPAssignmentOutput
	ToGuestConfigurationHCRPAssignmentOutputWithContext(ctx context.Context) GuestConfigurationHCRPAssignmentOutput
}

func (*GuestConfigurationHCRPAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestConfigurationHCRPAssignment)(nil))
}

func (i *GuestConfigurationHCRPAssignment) ToGuestConfigurationHCRPAssignmentOutput() GuestConfigurationHCRPAssignmentOutput {
	return i.ToGuestConfigurationHCRPAssignmentOutputWithContext(context.Background())
}

func (i *GuestConfigurationHCRPAssignment) ToGuestConfigurationHCRPAssignmentOutputWithContext(ctx context.Context) GuestConfigurationHCRPAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestConfigurationHCRPAssignmentOutput)
}

type GuestConfigurationHCRPAssignmentOutput struct {
	*pulumi.OutputState
}

func (GuestConfigurationHCRPAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestConfigurationHCRPAssignment)(nil))
}

func (o GuestConfigurationHCRPAssignmentOutput) ToGuestConfigurationHCRPAssignmentOutput() GuestConfigurationHCRPAssignmentOutput {
	return o
}

func (o GuestConfigurationHCRPAssignmentOutput) ToGuestConfigurationHCRPAssignmentOutputWithContext(ctx context.Context) GuestConfigurationHCRPAssignmentOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GuestConfigurationHCRPAssignmentOutput{})
}
