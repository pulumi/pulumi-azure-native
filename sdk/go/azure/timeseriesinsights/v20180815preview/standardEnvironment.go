// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180815preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource. Standard environments have data retention limits.
type StandardEnvironment struct {
	pulumi.CustomResourceState

	// The time the resource was created.
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
	DataAccessFqdn pulumi.StringOutput `pulumi:"dataAccessFqdn"`
	// An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
	DataAccessId pulumi.StringOutput `pulumi:"dataAccessId"`
	// ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
	DataRetentionTime pulumi.StringOutput `pulumi:"dataRetentionTime"`
	// The kind of the environment.
	// Expected value is 'Standard'.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Resource location
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// The list of event properties which will be used to partition data in the environment. Currently, only a single partition key property is supported.
	PartitionKeyProperties TimeSeriesIdPropertyResponseArrayOutput `pulumi:"partitionKeyProperties"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The sku determines the type of environment, either standard (S1 or S2) or long-term (L1). For standard environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
	Sku SkuResponseOutput `pulumi:"sku"`
	// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
	Status EnvironmentStatusResponseOutput `pulumi:"status"`
	// The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
	StorageLimitExceededBehavior pulumi.StringPtrOutput `pulumi:"storageLimitExceededBehavior"`
	// Resource tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewStandardEnvironment registers a new resource with the given unique name, arguments, and options.
func NewStandardEnvironment(ctx *pulumi.Context,
	name string, args *StandardEnvironmentArgs, opts ...pulumi.ResourceOption) (*StandardEnvironment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataRetentionTime == nil {
		return nil, errors.New("invalid value for required argument 'DataRetentionTime'")
	}
	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Sku == nil {
		return nil, errors.New("invalid value for required argument 'Sku'")
	}
	args.Kind = pulumi.String("Standard")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:timeseriesinsights:StandardEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:timeseriesinsights/v20170228preview:StandardEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:timeseriesinsights/v20171115:StandardEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:timeseriesinsights/v20200515:StandardEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:timeseriesinsights/v20210331preview:StandardEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:timeseriesinsights/v20210630preview:StandardEnvironment"),
		},
	})
	opts = append(opts, aliases)
	var resource StandardEnvironment
	err := ctx.RegisterResource("azure-native:timeseriesinsights/v20180815preview:StandardEnvironment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStandardEnvironment gets an existing StandardEnvironment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStandardEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StandardEnvironmentState, opts ...pulumi.ResourceOption) (*StandardEnvironment, error) {
	var resource StandardEnvironment
	err := ctx.ReadResource("azure-native:timeseriesinsights/v20180815preview:StandardEnvironment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StandardEnvironment resources.
type standardEnvironmentState struct {
}

type StandardEnvironmentState struct {
}

func (StandardEnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*standardEnvironmentState)(nil)).Elem()
}

type standardEnvironmentArgs struct {
	// ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
	DataRetentionTime string `pulumi:"dataRetentionTime"`
	// Name of the environment
	EnvironmentName *string `pulumi:"environmentName"`
	// The kind of the environment.
	// Expected value is 'Standard'.
	Kind string `pulumi:"kind"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The list of event properties which will be used to partition data in the environment. Currently, only a single partition key property is supported.
	PartitionKeyProperties []TimeSeriesIdProperty `pulumi:"partitionKeyProperties"`
	// Name of an Azure Resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The sku determines the type of environment, either standard (S1 or S2) or long-term (L1). For standard environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
	Sku Sku `pulumi:"sku"`
	// The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
	StorageLimitExceededBehavior *string `pulumi:"storageLimitExceededBehavior"`
	// Key-value pairs of additional properties for the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a StandardEnvironment resource.
type StandardEnvironmentArgs struct {
	// ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
	DataRetentionTime pulumi.StringInput
	// Name of the environment
	EnvironmentName pulumi.StringPtrInput
	// The kind of the environment.
	// Expected value is 'Standard'.
	Kind pulumi.StringInput
	// The location of the resource.
	Location pulumi.StringPtrInput
	// The list of event properties which will be used to partition data in the environment. Currently, only a single partition key property is supported.
	PartitionKeyProperties TimeSeriesIdPropertyArrayInput
	// Name of an Azure Resource group.
	ResourceGroupName pulumi.StringInput
	// The sku determines the type of environment, either standard (S1 or S2) or long-term (L1). For standard environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
	Sku SkuInput
	// The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
	StorageLimitExceededBehavior pulumi.StringPtrInput
	// Key-value pairs of additional properties for the resource.
	Tags pulumi.StringMapInput
}

func (StandardEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*standardEnvironmentArgs)(nil)).Elem()
}

type StandardEnvironmentInput interface {
	pulumi.Input

	ToStandardEnvironmentOutput() StandardEnvironmentOutput
	ToStandardEnvironmentOutputWithContext(ctx context.Context) StandardEnvironmentOutput
}

func (*StandardEnvironment) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardEnvironment)(nil)).Elem()
}

func (i *StandardEnvironment) ToStandardEnvironmentOutput() StandardEnvironmentOutput {
	return i.ToStandardEnvironmentOutputWithContext(context.Background())
}

func (i *StandardEnvironment) ToStandardEnvironmentOutputWithContext(ctx context.Context) StandardEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardEnvironmentOutput)
}

type StandardEnvironmentOutput struct{ *pulumi.OutputState }

func (StandardEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardEnvironment)(nil)).Elem()
}

func (o StandardEnvironmentOutput) ToStandardEnvironmentOutput() StandardEnvironmentOutput {
	return o
}

func (o StandardEnvironmentOutput) ToStandardEnvironmentOutputWithContext(ctx context.Context) StandardEnvironmentOutput {
	return o
}

// The time the resource was created.
func (o StandardEnvironmentOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *StandardEnvironment) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

// The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
func (o StandardEnvironmentOutput) DataAccessFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *StandardEnvironment) pulumi.StringOutput { return v.DataAccessFqdn }).(pulumi.StringOutput)
}

// An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
func (o StandardEnvironmentOutput) DataAccessId() pulumi.StringOutput {
	return o.ApplyT(func(v *StandardEnvironment) pulumi.StringOutput { return v.DataAccessId }).(pulumi.StringOutput)
}

// ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
func (o StandardEnvironmentOutput) DataRetentionTime() pulumi.StringOutput {
	return o.ApplyT(func(v *StandardEnvironment) pulumi.StringOutput { return v.DataRetentionTime }).(pulumi.StringOutput)
}

// The kind of the environment.
// Expected value is 'Standard'.
func (o StandardEnvironmentOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *StandardEnvironment) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Resource location
func (o StandardEnvironmentOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *StandardEnvironment) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o StandardEnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StandardEnvironment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The list of event properties which will be used to partition data in the environment. Currently, only a single partition key property is supported.
func (o StandardEnvironmentOutput) PartitionKeyProperties() TimeSeriesIdPropertyResponseArrayOutput {
	return o.ApplyT(func(v *StandardEnvironment) TimeSeriesIdPropertyResponseArrayOutput { return v.PartitionKeyProperties }).(TimeSeriesIdPropertyResponseArrayOutput)
}

// Provisioning state of the resource.
func (o StandardEnvironmentOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *StandardEnvironment) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The sku determines the type of environment, either standard (S1 or S2) or long-term (L1). For standard environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
func (o StandardEnvironmentOutput) Sku() SkuResponseOutput {
	return o.ApplyT(func(v *StandardEnvironment) SkuResponseOutput { return v.Sku }).(SkuResponseOutput)
}

// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
func (o StandardEnvironmentOutput) Status() EnvironmentStatusResponseOutput {
	return o.ApplyT(func(v *StandardEnvironment) EnvironmentStatusResponseOutput { return v.Status }).(EnvironmentStatusResponseOutput)
}

// The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
func (o StandardEnvironmentOutput) StorageLimitExceededBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandardEnvironment) pulumi.StringPtrOutput { return v.StorageLimitExceededBehavior }).(pulumi.StringPtrOutput)
}

// Resource tags
func (o StandardEnvironmentOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StandardEnvironment) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o StandardEnvironmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *StandardEnvironment) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(StandardEnvironmentOutput{})
}
