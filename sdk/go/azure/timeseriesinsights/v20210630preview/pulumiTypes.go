// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210630preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An object that contains the details about an environment's state.
type EnvironmentStateDetailsResponse struct {
	// Contains the code that represents the reason of an environment being in a particular state. Can be used to programmatically handle specific cases.
	Code *string `pulumi:"code"`
	// A message that describes the state in detail.
	Message *string `pulumi:"message"`
}

// EnvironmentStateDetailsResponseInput is an input type that accepts EnvironmentStateDetailsResponseArgs and EnvironmentStateDetailsResponseOutput values.
// You can construct a concrete instance of `EnvironmentStateDetailsResponseInput` via:
//
//          EnvironmentStateDetailsResponseArgs{...}
type EnvironmentStateDetailsResponseInput interface {
	pulumi.Input

	ToEnvironmentStateDetailsResponseOutput() EnvironmentStateDetailsResponseOutput
	ToEnvironmentStateDetailsResponseOutputWithContext(context.Context) EnvironmentStateDetailsResponseOutput
}

// An object that contains the details about an environment's state.
type EnvironmentStateDetailsResponseArgs struct {
	// Contains the code that represents the reason of an environment being in a particular state. Can be used to programmatically handle specific cases.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// A message that describes the state in detail.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (EnvironmentStateDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStateDetailsResponse)(nil)).Elem()
}

func (i EnvironmentStateDetailsResponseArgs) ToEnvironmentStateDetailsResponseOutput() EnvironmentStateDetailsResponseOutput {
	return i.ToEnvironmentStateDetailsResponseOutputWithContext(context.Background())
}

func (i EnvironmentStateDetailsResponseArgs) ToEnvironmentStateDetailsResponseOutputWithContext(ctx context.Context) EnvironmentStateDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStateDetailsResponseOutput)
}

func (i EnvironmentStateDetailsResponseArgs) ToEnvironmentStateDetailsResponsePtrOutput() EnvironmentStateDetailsResponsePtrOutput {
	return i.ToEnvironmentStateDetailsResponsePtrOutputWithContext(context.Background())
}

func (i EnvironmentStateDetailsResponseArgs) ToEnvironmentStateDetailsResponsePtrOutputWithContext(ctx context.Context) EnvironmentStateDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStateDetailsResponseOutput).ToEnvironmentStateDetailsResponsePtrOutputWithContext(ctx)
}

// EnvironmentStateDetailsResponsePtrInput is an input type that accepts EnvironmentStateDetailsResponseArgs, EnvironmentStateDetailsResponsePtr and EnvironmentStateDetailsResponsePtrOutput values.
// You can construct a concrete instance of `EnvironmentStateDetailsResponsePtrInput` via:
//
//          EnvironmentStateDetailsResponseArgs{...}
//
//  or:
//
//          nil
type EnvironmentStateDetailsResponsePtrInput interface {
	pulumi.Input

	ToEnvironmentStateDetailsResponsePtrOutput() EnvironmentStateDetailsResponsePtrOutput
	ToEnvironmentStateDetailsResponsePtrOutputWithContext(context.Context) EnvironmentStateDetailsResponsePtrOutput
}

type environmentStateDetailsResponsePtrType EnvironmentStateDetailsResponseArgs

func EnvironmentStateDetailsResponsePtr(v *EnvironmentStateDetailsResponseArgs) EnvironmentStateDetailsResponsePtrInput {
	return (*environmentStateDetailsResponsePtrType)(v)
}

func (*environmentStateDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentStateDetailsResponse)(nil)).Elem()
}

func (i *environmentStateDetailsResponsePtrType) ToEnvironmentStateDetailsResponsePtrOutput() EnvironmentStateDetailsResponsePtrOutput {
	return i.ToEnvironmentStateDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *environmentStateDetailsResponsePtrType) ToEnvironmentStateDetailsResponsePtrOutputWithContext(ctx context.Context) EnvironmentStateDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStateDetailsResponsePtrOutput)
}

// An object that contains the details about an environment's state.
type EnvironmentStateDetailsResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentStateDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStateDetailsResponse)(nil)).Elem()
}

func (o EnvironmentStateDetailsResponseOutput) ToEnvironmentStateDetailsResponseOutput() EnvironmentStateDetailsResponseOutput {
	return o
}

func (o EnvironmentStateDetailsResponseOutput) ToEnvironmentStateDetailsResponseOutputWithContext(ctx context.Context) EnvironmentStateDetailsResponseOutput {
	return o
}

func (o EnvironmentStateDetailsResponseOutput) ToEnvironmentStateDetailsResponsePtrOutput() EnvironmentStateDetailsResponsePtrOutput {
	return o.ToEnvironmentStateDetailsResponsePtrOutputWithContext(context.Background())
}

func (o EnvironmentStateDetailsResponseOutput) ToEnvironmentStateDetailsResponsePtrOutputWithContext(ctx context.Context) EnvironmentStateDetailsResponsePtrOutput {
	return o.ApplyT(func(v EnvironmentStateDetailsResponse) *EnvironmentStateDetailsResponse {
		return &v
	}).(EnvironmentStateDetailsResponsePtrOutput)
}

// Contains the code that represents the reason of an environment being in a particular state. Can be used to programmatically handle specific cases.
func (o EnvironmentStateDetailsResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentStateDetailsResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// A message that describes the state in detail.
func (o EnvironmentStateDetailsResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentStateDetailsResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type EnvironmentStateDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentStateDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentStateDetailsResponse)(nil)).Elem()
}

func (o EnvironmentStateDetailsResponsePtrOutput) ToEnvironmentStateDetailsResponsePtrOutput() EnvironmentStateDetailsResponsePtrOutput {
	return o
}

func (o EnvironmentStateDetailsResponsePtrOutput) ToEnvironmentStateDetailsResponsePtrOutputWithContext(ctx context.Context) EnvironmentStateDetailsResponsePtrOutput {
	return o
}

func (o EnvironmentStateDetailsResponsePtrOutput) Elem() EnvironmentStateDetailsResponseOutput {
	return o.ApplyT(func(v *EnvironmentStateDetailsResponse) EnvironmentStateDetailsResponse { return *v }).(EnvironmentStateDetailsResponseOutput)
}

// Contains the code that represents the reason of an environment being in a particular state. Can be used to programmatically handle specific cases.
func (o EnvironmentStateDetailsResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentStateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// A message that describes the state in detail.
func (o EnvironmentStateDetailsResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentStateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
type EnvironmentStatusResponse struct {
	// An object that represents the status of ingress on an environment.
	Ingress IngressEnvironmentStatusResponse `pulumi:"ingress"`
	// An object that represents the status of warm storage on an environment.
	WarmStorage WarmStorageEnvironmentStatusResponse `pulumi:"warmStorage"`
}

// EnvironmentStatusResponseInput is an input type that accepts EnvironmentStatusResponseArgs and EnvironmentStatusResponseOutput values.
// You can construct a concrete instance of `EnvironmentStatusResponseInput` via:
//
//          EnvironmentStatusResponseArgs{...}
type EnvironmentStatusResponseInput interface {
	pulumi.Input

	ToEnvironmentStatusResponseOutput() EnvironmentStatusResponseOutput
	ToEnvironmentStatusResponseOutputWithContext(context.Context) EnvironmentStatusResponseOutput
}

// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
type EnvironmentStatusResponseArgs struct {
	// An object that represents the status of ingress on an environment.
	Ingress IngressEnvironmentStatusResponseInput `pulumi:"ingress"`
	// An object that represents the status of warm storage on an environment.
	WarmStorage WarmStorageEnvironmentStatusResponseInput `pulumi:"warmStorage"`
}

func (EnvironmentStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStatusResponse)(nil)).Elem()
}

func (i EnvironmentStatusResponseArgs) ToEnvironmentStatusResponseOutput() EnvironmentStatusResponseOutput {
	return i.ToEnvironmentStatusResponseOutputWithContext(context.Background())
}

func (i EnvironmentStatusResponseArgs) ToEnvironmentStatusResponseOutputWithContext(ctx context.Context) EnvironmentStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStatusResponseOutput)
}

func (i EnvironmentStatusResponseArgs) ToEnvironmentStatusResponsePtrOutput() EnvironmentStatusResponsePtrOutput {
	return i.ToEnvironmentStatusResponsePtrOutputWithContext(context.Background())
}

func (i EnvironmentStatusResponseArgs) ToEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) EnvironmentStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStatusResponseOutput).ToEnvironmentStatusResponsePtrOutputWithContext(ctx)
}

// EnvironmentStatusResponsePtrInput is an input type that accepts EnvironmentStatusResponseArgs, EnvironmentStatusResponsePtr and EnvironmentStatusResponsePtrOutput values.
// You can construct a concrete instance of `EnvironmentStatusResponsePtrInput` via:
//
//          EnvironmentStatusResponseArgs{...}
//
//  or:
//
//          nil
type EnvironmentStatusResponsePtrInput interface {
	pulumi.Input

	ToEnvironmentStatusResponsePtrOutput() EnvironmentStatusResponsePtrOutput
	ToEnvironmentStatusResponsePtrOutputWithContext(context.Context) EnvironmentStatusResponsePtrOutput
}

type environmentStatusResponsePtrType EnvironmentStatusResponseArgs

func EnvironmentStatusResponsePtr(v *EnvironmentStatusResponseArgs) EnvironmentStatusResponsePtrInput {
	return (*environmentStatusResponsePtrType)(v)
}

func (*environmentStatusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentStatusResponse)(nil)).Elem()
}

func (i *environmentStatusResponsePtrType) ToEnvironmentStatusResponsePtrOutput() EnvironmentStatusResponsePtrOutput {
	return i.ToEnvironmentStatusResponsePtrOutputWithContext(context.Background())
}

func (i *environmentStatusResponsePtrType) ToEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) EnvironmentStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStatusResponsePtrOutput)
}

// An object that represents the status of the environment, and its internal state in the Time Series Insights service.
type EnvironmentStatusResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStatusResponse)(nil)).Elem()
}

func (o EnvironmentStatusResponseOutput) ToEnvironmentStatusResponseOutput() EnvironmentStatusResponseOutput {
	return o
}

func (o EnvironmentStatusResponseOutput) ToEnvironmentStatusResponseOutputWithContext(ctx context.Context) EnvironmentStatusResponseOutput {
	return o
}

func (o EnvironmentStatusResponseOutput) ToEnvironmentStatusResponsePtrOutput() EnvironmentStatusResponsePtrOutput {
	return o.ToEnvironmentStatusResponsePtrOutputWithContext(context.Background())
}

func (o EnvironmentStatusResponseOutput) ToEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) EnvironmentStatusResponsePtrOutput {
	return o.ApplyT(func(v EnvironmentStatusResponse) *EnvironmentStatusResponse {
		return &v
	}).(EnvironmentStatusResponsePtrOutput)
}

// An object that represents the status of ingress on an environment.
func (o EnvironmentStatusResponseOutput) Ingress() IngressEnvironmentStatusResponseOutput {
	return o.ApplyT(func(v EnvironmentStatusResponse) IngressEnvironmentStatusResponse { return v.Ingress }).(IngressEnvironmentStatusResponseOutput)
}

// An object that represents the status of warm storage on an environment.
func (o EnvironmentStatusResponseOutput) WarmStorage() WarmStorageEnvironmentStatusResponseOutput {
	return o.ApplyT(func(v EnvironmentStatusResponse) WarmStorageEnvironmentStatusResponse { return v.WarmStorage }).(WarmStorageEnvironmentStatusResponseOutput)
}

type EnvironmentStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentStatusResponse)(nil)).Elem()
}

func (o EnvironmentStatusResponsePtrOutput) ToEnvironmentStatusResponsePtrOutput() EnvironmentStatusResponsePtrOutput {
	return o
}

func (o EnvironmentStatusResponsePtrOutput) ToEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) EnvironmentStatusResponsePtrOutput {
	return o
}

func (o EnvironmentStatusResponsePtrOutput) Elem() EnvironmentStatusResponseOutput {
	return o.ApplyT(func(v *EnvironmentStatusResponse) EnvironmentStatusResponse { return *v }).(EnvironmentStatusResponseOutput)
}

// An object that represents the status of ingress on an environment.
func (o EnvironmentStatusResponsePtrOutput) Ingress() IngressEnvironmentStatusResponsePtrOutput {
	return o.ApplyT(func(v *EnvironmentStatusResponse) *IngressEnvironmentStatusResponse {
		if v == nil {
			return nil
		}
		return &v.Ingress
	}).(IngressEnvironmentStatusResponsePtrOutput)
}

// An object that represents the status of warm storage on an environment.
func (o EnvironmentStatusResponsePtrOutput) WarmStorage() WarmStorageEnvironmentStatusResponsePtrOutput {
	return o.ApplyT(func(v *EnvironmentStatusResponse) *WarmStorageEnvironmentStatusResponse {
		if v == nil {
			return nil
		}
		return &v.WarmStorage
	}).(WarmStorageEnvironmentStatusResponsePtrOutput)
}

// The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
type Gen2StorageConfigurationInput struct {
	// The name of the storage account that will hold the environment's Gen2 data.
	AccountName string `pulumi:"accountName"`
	// The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses.
	ManagementKey string `pulumi:"managementKey"`
}

// Gen2StorageConfigurationInputInput is an input type that accepts Gen2StorageConfigurationInputArgs and Gen2StorageConfigurationInputOutput values.
// You can construct a concrete instance of `Gen2StorageConfigurationInputInput` via:
//
//          Gen2StorageConfigurationInputArgs{...}
type Gen2StorageConfigurationInputInput interface {
	pulumi.Input

	ToGen2StorageConfigurationInputOutput() Gen2StorageConfigurationInputOutput
	ToGen2StorageConfigurationInputOutputWithContext(context.Context) Gen2StorageConfigurationInputOutput
}

// The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
type Gen2StorageConfigurationInputArgs struct {
	// The name of the storage account that will hold the environment's Gen2 data.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses.
	ManagementKey pulumi.StringInput `pulumi:"managementKey"`
}

func (Gen2StorageConfigurationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Gen2StorageConfigurationInput)(nil)).Elem()
}

func (i Gen2StorageConfigurationInputArgs) ToGen2StorageConfigurationInputOutput() Gen2StorageConfigurationInputOutput {
	return i.ToGen2StorageConfigurationInputOutputWithContext(context.Background())
}

func (i Gen2StorageConfigurationInputArgs) ToGen2StorageConfigurationInputOutputWithContext(ctx context.Context) Gen2StorageConfigurationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Gen2StorageConfigurationInputOutput)
}

func (i Gen2StorageConfigurationInputArgs) ToGen2StorageConfigurationInputPtrOutput() Gen2StorageConfigurationInputPtrOutput {
	return i.ToGen2StorageConfigurationInputPtrOutputWithContext(context.Background())
}

func (i Gen2StorageConfigurationInputArgs) ToGen2StorageConfigurationInputPtrOutputWithContext(ctx context.Context) Gen2StorageConfigurationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Gen2StorageConfigurationInputOutput).ToGen2StorageConfigurationInputPtrOutputWithContext(ctx)
}

// Gen2StorageConfigurationInputPtrInput is an input type that accepts Gen2StorageConfigurationInputArgs, Gen2StorageConfigurationInputPtr and Gen2StorageConfigurationInputPtrOutput values.
// You can construct a concrete instance of `Gen2StorageConfigurationInputPtrInput` via:
//
//          Gen2StorageConfigurationInputArgs{...}
//
//  or:
//
//          nil
type Gen2StorageConfigurationInputPtrInput interface {
	pulumi.Input

	ToGen2StorageConfigurationInputPtrOutput() Gen2StorageConfigurationInputPtrOutput
	ToGen2StorageConfigurationInputPtrOutputWithContext(context.Context) Gen2StorageConfigurationInputPtrOutput
}

type gen2StorageConfigurationInputPtrType Gen2StorageConfigurationInputArgs

func Gen2StorageConfigurationInputPtr(v *Gen2StorageConfigurationInputArgs) Gen2StorageConfigurationInputPtrInput {
	return (*gen2StorageConfigurationInputPtrType)(v)
}

func (*gen2StorageConfigurationInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Gen2StorageConfigurationInput)(nil)).Elem()
}

func (i *gen2StorageConfigurationInputPtrType) ToGen2StorageConfigurationInputPtrOutput() Gen2StorageConfigurationInputPtrOutput {
	return i.ToGen2StorageConfigurationInputPtrOutputWithContext(context.Background())
}

func (i *gen2StorageConfigurationInputPtrType) ToGen2StorageConfigurationInputPtrOutputWithContext(ctx context.Context) Gen2StorageConfigurationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Gen2StorageConfigurationInputPtrOutput)
}

// The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
type Gen2StorageConfigurationInputOutput struct{ *pulumi.OutputState }

func (Gen2StorageConfigurationInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Gen2StorageConfigurationInput)(nil)).Elem()
}

func (o Gen2StorageConfigurationInputOutput) ToGen2StorageConfigurationInputOutput() Gen2StorageConfigurationInputOutput {
	return o
}

func (o Gen2StorageConfigurationInputOutput) ToGen2StorageConfigurationInputOutputWithContext(ctx context.Context) Gen2StorageConfigurationInputOutput {
	return o
}

func (o Gen2StorageConfigurationInputOutput) ToGen2StorageConfigurationInputPtrOutput() Gen2StorageConfigurationInputPtrOutput {
	return o.ToGen2StorageConfigurationInputPtrOutputWithContext(context.Background())
}

func (o Gen2StorageConfigurationInputOutput) ToGen2StorageConfigurationInputPtrOutputWithContext(ctx context.Context) Gen2StorageConfigurationInputPtrOutput {
	return o.ApplyT(func(v Gen2StorageConfigurationInput) *Gen2StorageConfigurationInput {
		return &v
	}).(Gen2StorageConfigurationInputPtrOutput)
}

// The name of the storage account that will hold the environment's Gen2 data.
func (o Gen2StorageConfigurationInputOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v Gen2StorageConfigurationInput) string { return v.AccountName }).(pulumi.StringOutput)
}

// The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses.
func (o Gen2StorageConfigurationInputOutput) ManagementKey() pulumi.StringOutput {
	return o.ApplyT(func(v Gen2StorageConfigurationInput) string { return v.ManagementKey }).(pulumi.StringOutput)
}

type Gen2StorageConfigurationInputPtrOutput struct{ *pulumi.OutputState }

func (Gen2StorageConfigurationInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Gen2StorageConfigurationInput)(nil)).Elem()
}

func (o Gen2StorageConfigurationInputPtrOutput) ToGen2StorageConfigurationInputPtrOutput() Gen2StorageConfigurationInputPtrOutput {
	return o
}

func (o Gen2StorageConfigurationInputPtrOutput) ToGen2StorageConfigurationInputPtrOutputWithContext(ctx context.Context) Gen2StorageConfigurationInputPtrOutput {
	return o
}

func (o Gen2StorageConfigurationInputPtrOutput) Elem() Gen2StorageConfigurationInputOutput {
	return o.ApplyT(func(v *Gen2StorageConfigurationInput) Gen2StorageConfigurationInput { return *v }).(Gen2StorageConfigurationInputOutput)
}

// The name of the storage account that will hold the environment's Gen2 data.
func (o Gen2StorageConfigurationInputPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Gen2StorageConfigurationInput) *string {
		if v == nil {
			return nil
		}
		return &v.AccountName
	}).(pulumi.StringPtrOutput)
}

// The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses.
func (o Gen2StorageConfigurationInputPtrOutput) ManagementKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Gen2StorageConfigurationInput) *string {
		if v == nil {
			return nil
		}
		return &v.ManagementKey
	}).(pulumi.StringPtrOutput)
}

// The storage configuration provides the non-secret connection details about the customer storage account that is used to store the environment's data.
type Gen2StorageConfigurationOutputResponse struct {
	// The name of the storage account that will hold the environment's Gen2 data.
	AccountName string `pulumi:"accountName"`
}

// Gen2StorageConfigurationOutputResponseInput is an input type that accepts Gen2StorageConfigurationOutputResponseArgs and Gen2StorageConfigurationOutputResponseOutput values.
// You can construct a concrete instance of `Gen2StorageConfigurationOutputResponseInput` via:
//
//          Gen2StorageConfigurationOutputResponseArgs{...}
type Gen2StorageConfigurationOutputResponseInput interface {
	pulumi.Input

	ToGen2StorageConfigurationOutputResponseOutput() Gen2StorageConfigurationOutputResponseOutput
	ToGen2StorageConfigurationOutputResponseOutputWithContext(context.Context) Gen2StorageConfigurationOutputResponseOutput
}

// The storage configuration provides the non-secret connection details about the customer storage account that is used to store the environment's data.
type Gen2StorageConfigurationOutputResponseArgs struct {
	// The name of the storage account that will hold the environment's Gen2 data.
	AccountName pulumi.StringInput `pulumi:"accountName"`
}

func (Gen2StorageConfigurationOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Gen2StorageConfigurationOutputResponse)(nil)).Elem()
}

func (i Gen2StorageConfigurationOutputResponseArgs) ToGen2StorageConfigurationOutputResponseOutput() Gen2StorageConfigurationOutputResponseOutput {
	return i.ToGen2StorageConfigurationOutputResponseOutputWithContext(context.Background())
}

func (i Gen2StorageConfigurationOutputResponseArgs) ToGen2StorageConfigurationOutputResponseOutputWithContext(ctx context.Context) Gen2StorageConfigurationOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Gen2StorageConfigurationOutputResponseOutput)
}

func (i Gen2StorageConfigurationOutputResponseArgs) ToGen2StorageConfigurationOutputResponsePtrOutput() Gen2StorageConfigurationOutputResponsePtrOutput {
	return i.ToGen2StorageConfigurationOutputResponsePtrOutputWithContext(context.Background())
}

func (i Gen2StorageConfigurationOutputResponseArgs) ToGen2StorageConfigurationOutputResponsePtrOutputWithContext(ctx context.Context) Gen2StorageConfigurationOutputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Gen2StorageConfigurationOutputResponseOutput).ToGen2StorageConfigurationOutputResponsePtrOutputWithContext(ctx)
}

// Gen2StorageConfigurationOutputResponsePtrInput is an input type that accepts Gen2StorageConfigurationOutputResponseArgs, Gen2StorageConfigurationOutputResponsePtr and Gen2StorageConfigurationOutputResponsePtrOutput values.
// You can construct a concrete instance of `Gen2StorageConfigurationOutputResponsePtrInput` via:
//
//          Gen2StorageConfigurationOutputResponseArgs{...}
//
//  or:
//
//          nil
type Gen2StorageConfigurationOutputResponsePtrInput interface {
	pulumi.Input

	ToGen2StorageConfigurationOutputResponsePtrOutput() Gen2StorageConfigurationOutputResponsePtrOutput
	ToGen2StorageConfigurationOutputResponsePtrOutputWithContext(context.Context) Gen2StorageConfigurationOutputResponsePtrOutput
}

type gen2StorageConfigurationOutputResponsePtrType Gen2StorageConfigurationOutputResponseArgs

func Gen2StorageConfigurationOutputResponsePtr(v *Gen2StorageConfigurationOutputResponseArgs) Gen2StorageConfigurationOutputResponsePtrInput {
	return (*gen2StorageConfigurationOutputResponsePtrType)(v)
}

func (*gen2StorageConfigurationOutputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Gen2StorageConfigurationOutputResponse)(nil)).Elem()
}

func (i *gen2StorageConfigurationOutputResponsePtrType) ToGen2StorageConfigurationOutputResponsePtrOutput() Gen2StorageConfigurationOutputResponsePtrOutput {
	return i.ToGen2StorageConfigurationOutputResponsePtrOutputWithContext(context.Background())
}

func (i *gen2StorageConfigurationOutputResponsePtrType) ToGen2StorageConfigurationOutputResponsePtrOutputWithContext(ctx context.Context) Gen2StorageConfigurationOutputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Gen2StorageConfigurationOutputResponsePtrOutput)
}

// The storage configuration provides the non-secret connection details about the customer storage account that is used to store the environment's data.
type Gen2StorageConfigurationOutputResponseOutput struct{ *pulumi.OutputState }

func (Gen2StorageConfigurationOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Gen2StorageConfigurationOutputResponse)(nil)).Elem()
}

func (o Gen2StorageConfigurationOutputResponseOutput) ToGen2StorageConfigurationOutputResponseOutput() Gen2StorageConfigurationOutputResponseOutput {
	return o
}

func (o Gen2StorageConfigurationOutputResponseOutput) ToGen2StorageConfigurationOutputResponseOutputWithContext(ctx context.Context) Gen2StorageConfigurationOutputResponseOutput {
	return o
}

func (o Gen2StorageConfigurationOutputResponseOutput) ToGen2StorageConfigurationOutputResponsePtrOutput() Gen2StorageConfigurationOutputResponsePtrOutput {
	return o.ToGen2StorageConfigurationOutputResponsePtrOutputWithContext(context.Background())
}

func (o Gen2StorageConfigurationOutputResponseOutput) ToGen2StorageConfigurationOutputResponsePtrOutputWithContext(ctx context.Context) Gen2StorageConfigurationOutputResponsePtrOutput {
	return o.ApplyT(func(v Gen2StorageConfigurationOutputResponse) *Gen2StorageConfigurationOutputResponse {
		return &v
	}).(Gen2StorageConfigurationOutputResponsePtrOutput)
}

// The name of the storage account that will hold the environment's Gen2 data.
func (o Gen2StorageConfigurationOutputResponseOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v Gen2StorageConfigurationOutputResponse) string { return v.AccountName }).(pulumi.StringOutput)
}

type Gen2StorageConfigurationOutputResponsePtrOutput struct{ *pulumi.OutputState }

func (Gen2StorageConfigurationOutputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Gen2StorageConfigurationOutputResponse)(nil)).Elem()
}

func (o Gen2StorageConfigurationOutputResponsePtrOutput) ToGen2StorageConfigurationOutputResponsePtrOutput() Gen2StorageConfigurationOutputResponsePtrOutput {
	return o
}

func (o Gen2StorageConfigurationOutputResponsePtrOutput) ToGen2StorageConfigurationOutputResponsePtrOutputWithContext(ctx context.Context) Gen2StorageConfigurationOutputResponsePtrOutput {
	return o
}

func (o Gen2StorageConfigurationOutputResponsePtrOutput) Elem() Gen2StorageConfigurationOutputResponseOutput {
	return o.ApplyT(func(v *Gen2StorageConfigurationOutputResponse) Gen2StorageConfigurationOutputResponse { return *v }).(Gen2StorageConfigurationOutputResponseOutput)
}

// The name of the storage account that will hold the environment's Gen2 data.
func (o Gen2StorageConfigurationOutputResponsePtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Gen2StorageConfigurationOutputResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AccountName
	}).(pulumi.StringPtrOutput)
}

// An object that represents the status of ingress on an environment.
type IngressEnvironmentStatusResponse struct {
	// This string represents the state of ingress operations on an environment. It can be "Disabled", "Ready", "Running", "Paused" or "Unknown"
	State *string `pulumi:"state"`
	// An object that contains the details about an environment's state.
	StateDetails EnvironmentStateDetailsResponse `pulumi:"stateDetails"`
}

// IngressEnvironmentStatusResponseInput is an input type that accepts IngressEnvironmentStatusResponseArgs and IngressEnvironmentStatusResponseOutput values.
// You can construct a concrete instance of `IngressEnvironmentStatusResponseInput` via:
//
//          IngressEnvironmentStatusResponseArgs{...}
type IngressEnvironmentStatusResponseInput interface {
	pulumi.Input

	ToIngressEnvironmentStatusResponseOutput() IngressEnvironmentStatusResponseOutput
	ToIngressEnvironmentStatusResponseOutputWithContext(context.Context) IngressEnvironmentStatusResponseOutput
}

// An object that represents the status of ingress on an environment.
type IngressEnvironmentStatusResponseArgs struct {
	// This string represents the state of ingress operations on an environment. It can be "Disabled", "Ready", "Running", "Paused" or "Unknown"
	State pulumi.StringPtrInput `pulumi:"state"`
	// An object that contains the details about an environment's state.
	StateDetails EnvironmentStateDetailsResponseInput `pulumi:"stateDetails"`
}

func (IngressEnvironmentStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressEnvironmentStatusResponse)(nil)).Elem()
}

func (i IngressEnvironmentStatusResponseArgs) ToIngressEnvironmentStatusResponseOutput() IngressEnvironmentStatusResponseOutput {
	return i.ToIngressEnvironmentStatusResponseOutputWithContext(context.Background())
}

func (i IngressEnvironmentStatusResponseArgs) ToIngressEnvironmentStatusResponseOutputWithContext(ctx context.Context) IngressEnvironmentStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressEnvironmentStatusResponseOutput)
}

func (i IngressEnvironmentStatusResponseArgs) ToIngressEnvironmentStatusResponsePtrOutput() IngressEnvironmentStatusResponsePtrOutput {
	return i.ToIngressEnvironmentStatusResponsePtrOutputWithContext(context.Background())
}

func (i IngressEnvironmentStatusResponseArgs) ToIngressEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) IngressEnvironmentStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressEnvironmentStatusResponseOutput).ToIngressEnvironmentStatusResponsePtrOutputWithContext(ctx)
}

// IngressEnvironmentStatusResponsePtrInput is an input type that accepts IngressEnvironmentStatusResponseArgs, IngressEnvironmentStatusResponsePtr and IngressEnvironmentStatusResponsePtrOutput values.
// You can construct a concrete instance of `IngressEnvironmentStatusResponsePtrInput` via:
//
//          IngressEnvironmentStatusResponseArgs{...}
//
//  or:
//
//          nil
type IngressEnvironmentStatusResponsePtrInput interface {
	pulumi.Input

	ToIngressEnvironmentStatusResponsePtrOutput() IngressEnvironmentStatusResponsePtrOutput
	ToIngressEnvironmentStatusResponsePtrOutputWithContext(context.Context) IngressEnvironmentStatusResponsePtrOutput
}

type ingressEnvironmentStatusResponsePtrType IngressEnvironmentStatusResponseArgs

func IngressEnvironmentStatusResponsePtr(v *IngressEnvironmentStatusResponseArgs) IngressEnvironmentStatusResponsePtrInput {
	return (*ingressEnvironmentStatusResponsePtrType)(v)
}

func (*ingressEnvironmentStatusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressEnvironmentStatusResponse)(nil)).Elem()
}

func (i *ingressEnvironmentStatusResponsePtrType) ToIngressEnvironmentStatusResponsePtrOutput() IngressEnvironmentStatusResponsePtrOutput {
	return i.ToIngressEnvironmentStatusResponsePtrOutputWithContext(context.Background())
}

func (i *ingressEnvironmentStatusResponsePtrType) ToIngressEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) IngressEnvironmentStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressEnvironmentStatusResponsePtrOutput)
}

// An object that represents the status of ingress on an environment.
type IngressEnvironmentStatusResponseOutput struct{ *pulumi.OutputState }

func (IngressEnvironmentStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressEnvironmentStatusResponse)(nil)).Elem()
}

func (o IngressEnvironmentStatusResponseOutput) ToIngressEnvironmentStatusResponseOutput() IngressEnvironmentStatusResponseOutput {
	return o
}

func (o IngressEnvironmentStatusResponseOutput) ToIngressEnvironmentStatusResponseOutputWithContext(ctx context.Context) IngressEnvironmentStatusResponseOutput {
	return o
}

func (o IngressEnvironmentStatusResponseOutput) ToIngressEnvironmentStatusResponsePtrOutput() IngressEnvironmentStatusResponsePtrOutput {
	return o.ToIngressEnvironmentStatusResponsePtrOutputWithContext(context.Background())
}

func (o IngressEnvironmentStatusResponseOutput) ToIngressEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) IngressEnvironmentStatusResponsePtrOutput {
	return o.ApplyT(func(v IngressEnvironmentStatusResponse) *IngressEnvironmentStatusResponse {
		return &v
	}).(IngressEnvironmentStatusResponsePtrOutput)
}

// This string represents the state of ingress operations on an environment. It can be "Disabled", "Ready", "Running", "Paused" or "Unknown"
func (o IngressEnvironmentStatusResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngressEnvironmentStatusResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// An object that contains the details about an environment's state.
func (o IngressEnvironmentStatusResponseOutput) StateDetails() EnvironmentStateDetailsResponseOutput {
	return o.ApplyT(func(v IngressEnvironmentStatusResponse) EnvironmentStateDetailsResponse { return v.StateDetails }).(EnvironmentStateDetailsResponseOutput)
}

type IngressEnvironmentStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (IngressEnvironmentStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressEnvironmentStatusResponse)(nil)).Elem()
}

func (o IngressEnvironmentStatusResponsePtrOutput) ToIngressEnvironmentStatusResponsePtrOutput() IngressEnvironmentStatusResponsePtrOutput {
	return o
}

func (o IngressEnvironmentStatusResponsePtrOutput) ToIngressEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) IngressEnvironmentStatusResponsePtrOutput {
	return o
}

func (o IngressEnvironmentStatusResponsePtrOutput) Elem() IngressEnvironmentStatusResponseOutput {
	return o.ApplyT(func(v *IngressEnvironmentStatusResponse) IngressEnvironmentStatusResponse { return *v }).(IngressEnvironmentStatusResponseOutput)
}

// This string represents the state of ingress operations on an environment. It can be "Disabled", "Ready", "Running", "Paused" or "Unknown"
func (o IngressEnvironmentStatusResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IngressEnvironmentStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// An object that contains the details about an environment's state.
func (o IngressEnvironmentStatusResponsePtrOutput) StateDetails() EnvironmentStateDetailsResponsePtrOutput {
	return o.ApplyT(func(v *IngressEnvironmentStatusResponse) *EnvironmentStateDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.StateDetails
	}).(EnvironmentStateDetailsResponsePtrOutput)
}

// An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
type LocalTimestamp struct {
	// An enum that represents the format of the local timestamp property that needs to be set.
	Format *string `pulumi:"format"`
	// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
	TimeZoneOffset *LocalTimestampTimeZoneOffset `pulumi:"timeZoneOffset"`
}

// LocalTimestampInput is an input type that accepts LocalTimestampArgs and LocalTimestampOutput values.
// You can construct a concrete instance of `LocalTimestampInput` via:
//
//          LocalTimestampArgs{...}
type LocalTimestampInput interface {
	pulumi.Input

	ToLocalTimestampOutput() LocalTimestampOutput
	ToLocalTimestampOutputWithContext(context.Context) LocalTimestampOutput
}

// An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
type LocalTimestampArgs struct {
	// An enum that represents the format of the local timestamp property that needs to be set.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
	TimeZoneOffset LocalTimestampTimeZoneOffsetPtrInput `pulumi:"timeZoneOffset"`
}

func (LocalTimestampArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalTimestamp)(nil)).Elem()
}

func (i LocalTimestampArgs) ToLocalTimestampOutput() LocalTimestampOutput {
	return i.ToLocalTimestampOutputWithContext(context.Background())
}

func (i LocalTimestampArgs) ToLocalTimestampOutputWithContext(ctx context.Context) LocalTimestampOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalTimestampOutput)
}

func (i LocalTimestampArgs) ToLocalTimestampPtrOutput() LocalTimestampPtrOutput {
	return i.ToLocalTimestampPtrOutputWithContext(context.Background())
}

func (i LocalTimestampArgs) ToLocalTimestampPtrOutputWithContext(ctx context.Context) LocalTimestampPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalTimestampOutput).ToLocalTimestampPtrOutputWithContext(ctx)
}

// LocalTimestampPtrInput is an input type that accepts LocalTimestampArgs, LocalTimestampPtr and LocalTimestampPtrOutput values.
// You can construct a concrete instance of `LocalTimestampPtrInput` via:
//
//          LocalTimestampArgs{...}
//
//  or:
//
//          nil
type LocalTimestampPtrInput interface {
	pulumi.Input

	ToLocalTimestampPtrOutput() LocalTimestampPtrOutput
	ToLocalTimestampPtrOutputWithContext(context.Context) LocalTimestampPtrOutput
}

type localTimestampPtrType LocalTimestampArgs

func LocalTimestampPtr(v *LocalTimestampArgs) LocalTimestampPtrInput {
	return (*localTimestampPtrType)(v)
}

func (*localTimestampPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalTimestamp)(nil)).Elem()
}

func (i *localTimestampPtrType) ToLocalTimestampPtrOutput() LocalTimestampPtrOutput {
	return i.ToLocalTimestampPtrOutputWithContext(context.Background())
}

func (i *localTimestampPtrType) ToLocalTimestampPtrOutputWithContext(ctx context.Context) LocalTimestampPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalTimestampPtrOutput)
}

// An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
type LocalTimestampOutput struct{ *pulumi.OutputState }

func (LocalTimestampOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalTimestamp)(nil)).Elem()
}

func (o LocalTimestampOutput) ToLocalTimestampOutput() LocalTimestampOutput {
	return o
}

func (o LocalTimestampOutput) ToLocalTimestampOutputWithContext(ctx context.Context) LocalTimestampOutput {
	return o
}

func (o LocalTimestampOutput) ToLocalTimestampPtrOutput() LocalTimestampPtrOutput {
	return o.ToLocalTimestampPtrOutputWithContext(context.Background())
}

func (o LocalTimestampOutput) ToLocalTimestampPtrOutputWithContext(ctx context.Context) LocalTimestampPtrOutput {
	return o.ApplyT(func(v LocalTimestamp) *LocalTimestamp {
		return &v
	}).(LocalTimestampPtrOutput)
}

// An enum that represents the format of the local timestamp property that needs to be set.
func (o LocalTimestampOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalTimestamp) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
func (o LocalTimestampOutput) TimeZoneOffset() LocalTimestampTimeZoneOffsetPtrOutput {
	return o.ApplyT(func(v LocalTimestamp) *LocalTimestampTimeZoneOffset { return v.TimeZoneOffset }).(LocalTimestampTimeZoneOffsetPtrOutput)
}

type LocalTimestampPtrOutput struct{ *pulumi.OutputState }

func (LocalTimestampPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalTimestamp)(nil)).Elem()
}

func (o LocalTimestampPtrOutput) ToLocalTimestampPtrOutput() LocalTimestampPtrOutput {
	return o
}

func (o LocalTimestampPtrOutput) ToLocalTimestampPtrOutputWithContext(ctx context.Context) LocalTimestampPtrOutput {
	return o
}

func (o LocalTimestampPtrOutput) Elem() LocalTimestampOutput {
	return o.ApplyT(func(v *LocalTimestamp) LocalTimestamp { return *v }).(LocalTimestampOutput)
}

// An enum that represents the format of the local timestamp property that needs to be set.
func (o LocalTimestampPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalTimestamp) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
func (o LocalTimestampPtrOutput) TimeZoneOffset() LocalTimestampTimeZoneOffsetPtrOutput {
	return o.ApplyT(func(v *LocalTimestamp) *LocalTimestampTimeZoneOffset {
		if v == nil {
			return nil
		}
		return v.TimeZoneOffset
	}).(LocalTimestampTimeZoneOffsetPtrOutput)
}

// An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
type LocalTimestampResponse struct {
	// An enum that represents the format of the local timestamp property that needs to be set.
	Format *string `pulumi:"format"`
	// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
	TimeZoneOffset *LocalTimestampResponseTimeZoneOffset `pulumi:"timeZoneOffset"`
}

// LocalTimestampResponseInput is an input type that accepts LocalTimestampResponseArgs and LocalTimestampResponseOutput values.
// You can construct a concrete instance of `LocalTimestampResponseInput` via:
//
//          LocalTimestampResponseArgs{...}
type LocalTimestampResponseInput interface {
	pulumi.Input

	ToLocalTimestampResponseOutput() LocalTimestampResponseOutput
	ToLocalTimestampResponseOutputWithContext(context.Context) LocalTimestampResponseOutput
}

// An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
type LocalTimestampResponseArgs struct {
	// An enum that represents the format of the local timestamp property that needs to be set.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
	TimeZoneOffset LocalTimestampResponseTimeZoneOffsetPtrInput `pulumi:"timeZoneOffset"`
}

func (LocalTimestampResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalTimestampResponse)(nil)).Elem()
}

func (i LocalTimestampResponseArgs) ToLocalTimestampResponseOutput() LocalTimestampResponseOutput {
	return i.ToLocalTimestampResponseOutputWithContext(context.Background())
}

func (i LocalTimestampResponseArgs) ToLocalTimestampResponseOutputWithContext(ctx context.Context) LocalTimestampResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalTimestampResponseOutput)
}

func (i LocalTimestampResponseArgs) ToLocalTimestampResponsePtrOutput() LocalTimestampResponsePtrOutput {
	return i.ToLocalTimestampResponsePtrOutputWithContext(context.Background())
}

func (i LocalTimestampResponseArgs) ToLocalTimestampResponsePtrOutputWithContext(ctx context.Context) LocalTimestampResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalTimestampResponseOutput).ToLocalTimestampResponsePtrOutputWithContext(ctx)
}

// LocalTimestampResponsePtrInput is an input type that accepts LocalTimestampResponseArgs, LocalTimestampResponsePtr and LocalTimestampResponsePtrOutput values.
// You can construct a concrete instance of `LocalTimestampResponsePtrInput` via:
//
//          LocalTimestampResponseArgs{...}
//
//  or:
//
//          nil
type LocalTimestampResponsePtrInput interface {
	pulumi.Input

	ToLocalTimestampResponsePtrOutput() LocalTimestampResponsePtrOutput
	ToLocalTimestampResponsePtrOutputWithContext(context.Context) LocalTimestampResponsePtrOutput
}

type localTimestampResponsePtrType LocalTimestampResponseArgs

func LocalTimestampResponsePtr(v *LocalTimestampResponseArgs) LocalTimestampResponsePtrInput {
	return (*localTimestampResponsePtrType)(v)
}

func (*localTimestampResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalTimestampResponse)(nil)).Elem()
}

func (i *localTimestampResponsePtrType) ToLocalTimestampResponsePtrOutput() LocalTimestampResponsePtrOutput {
	return i.ToLocalTimestampResponsePtrOutputWithContext(context.Background())
}

func (i *localTimestampResponsePtrType) ToLocalTimestampResponsePtrOutputWithContext(ctx context.Context) LocalTimestampResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalTimestampResponsePtrOutput)
}

// An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
type LocalTimestampResponseOutput struct{ *pulumi.OutputState }

func (LocalTimestampResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalTimestampResponse)(nil)).Elem()
}

func (o LocalTimestampResponseOutput) ToLocalTimestampResponseOutput() LocalTimestampResponseOutput {
	return o
}

func (o LocalTimestampResponseOutput) ToLocalTimestampResponseOutputWithContext(ctx context.Context) LocalTimestampResponseOutput {
	return o
}

func (o LocalTimestampResponseOutput) ToLocalTimestampResponsePtrOutput() LocalTimestampResponsePtrOutput {
	return o.ToLocalTimestampResponsePtrOutputWithContext(context.Background())
}

func (o LocalTimestampResponseOutput) ToLocalTimestampResponsePtrOutputWithContext(ctx context.Context) LocalTimestampResponsePtrOutput {
	return o.ApplyT(func(v LocalTimestampResponse) *LocalTimestampResponse {
		return &v
	}).(LocalTimestampResponsePtrOutput)
}

// An enum that represents the format of the local timestamp property that needs to be set.
func (o LocalTimestampResponseOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalTimestampResponse) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
func (o LocalTimestampResponseOutput) TimeZoneOffset() LocalTimestampResponseTimeZoneOffsetPtrOutput {
	return o.ApplyT(func(v LocalTimestampResponse) *LocalTimestampResponseTimeZoneOffset { return v.TimeZoneOffset }).(LocalTimestampResponseTimeZoneOffsetPtrOutput)
}

type LocalTimestampResponsePtrOutput struct{ *pulumi.OutputState }

func (LocalTimestampResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalTimestampResponse)(nil)).Elem()
}

func (o LocalTimestampResponsePtrOutput) ToLocalTimestampResponsePtrOutput() LocalTimestampResponsePtrOutput {
	return o
}

func (o LocalTimestampResponsePtrOutput) ToLocalTimestampResponsePtrOutputWithContext(ctx context.Context) LocalTimestampResponsePtrOutput {
	return o
}

func (o LocalTimestampResponsePtrOutput) Elem() LocalTimestampResponseOutput {
	return o.ApplyT(func(v *LocalTimestampResponse) LocalTimestampResponse { return *v }).(LocalTimestampResponseOutput)
}

// An enum that represents the format of the local timestamp property that needs to be set.
func (o LocalTimestampResponsePtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalTimestampResponse) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
func (o LocalTimestampResponsePtrOutput) TimeZoneOffset() LocalTimestampResponseTimeZoneOffsetPtrOutput {
	return o.ApplyT(func(v *LocalTimestampResponse) *LocalTimestampResponseTimeZoneOffset {
		if v == nil {
			return nil
		}
		return v.TimeZoneOffset
	}).(LocalTimestampResponseTimeZoneOffsetPtrOutput)
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
type LocalTimestampResponseTimeZoneOffset struct {
	// The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
	PropertyName *string `pulumi:"propertyName"`
}

// LocalTimestampResponseTimeZoneOffsetInput is an input type that accepts LocalTimestampResponseTimeZoneOffsetArgs and LocalTimestampResponseTimeZoneOffsetOutput values.
// You can construct a concrete instance of `LocalTimestampResponseTimeZoneOffsetInput` via:
//
//          LocalTimestampResponseTimeZoneOffsetArgs{...}
type LocalTimestampResponseTimeZoneOffsetInput interface {
	pulumi.Input

	ToLocalTimestampResponseTimeZoneOffsetOutput() LocalTimestampResponseTimeZoneOffsetOutput
	ToLocalTimestampResponseTimeZoneOffsetOutputWithContext(context.Context) LocalTimestampResponseTimeZoneOffsetOutput
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
type LocalTimestampResponseTimeZoneOffsetArgs struct {
	// The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
	PropertyName pulumi.StringPtrInput `pulumi:"propertyName"`
}

func (LocalTimestampResponseTimeZoneOffsetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalTimestampResponseTimeZoneOffset)(nil)).Elem()
}

func (i LocalTimestampResponseTimeZoneOffsetArgs) ToLocalTimestampResponseTimeZoneOffsetOutput() LocalTimestampResponseTimeZoneOffsetOutput {
	return i.ToLocalTimestampResponseTimeZoneOffsetOutputWithContext(context.Background())
}

func (i LocalTimestampResponseTimeZoneOffsetArgs) ToLocalTimestampResponseTimeZoneOffsetOutputWithContext(ctx context.Context) LocalTimestampResponseTimeZoneOffsetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalTimestampResponseTimeZoneOffsetOutput)
}

func (i LocalTimestampResponseTimeZoneOffsetArgs) ToLocalTimestampResponseTimeZoneOffsetPtrOutput() LocalTimestampResponseTimeZoneOffsetPtrOutput {
	return i.ToLocalTimestampResponseTimeZoneOffsetPtrOutputWithContext(context.Background())
}

func (i LocalTimestampResponseTimeZoneOffsetArgs) ToLocalTimestampResponseTimeZoneOffsetPtrOutputWithContext(ctx context.Context) LocalTimestampResponseTimeZoneOffsetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalTimestampResponseTimeZoneOffsetOutput).ToLocalTimestampResponseTimeZoneOffsetPtrOutputWithContext(ctx)
}

// LocalTimestampResponseTimeZoneOffsetPtrInput is an input type that accepts LocalTimestampResponseTimeZoneOffsetArgs, LocalTimestampResponseTimeZoneOffsetPtr and LocalTimestampResponseTimeZoneOffsetPtrOutput values.
// You can construct a concrete instance of `LocalTimestampResponseTimeZoneOffsetPtrInput` via:
//
//          LocalTimestampResponseTimeZoneOffsetArgs{...}
//
//  or:
//
//          nil
type LocalTimestampResponseTimeZoneOffsetPtrInput interface {
	pulumi.Input

	ToLocalTimestampResponseTimeZoneOffsetPtrOutput() LocalTimestampResponseTimeZoneOffsetPtrOutput
	ToLocalTimestampResponseTimeZoneOffsetPtrOutputWithContext(context.Context) LocalTimestampResponseTimeZoneOffsetPtrOutput
}

type localTimestampResponseTimeZoneOffsetPtrType LocalTimestampResponseTimeZoneOffsetArgs

func LocalTimestampResponseTimeZoneOffsetPtr(v *LocalTimestampResponseTimeZoneOffsetArgs) LocalTimestampResponseTimeZoneOffsetPtrInput {
	return (*localTimestampResponseTimeZoneOffsetPtrType)(v)
}

func (*localTimestampResponseTimeZoneOffsetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalTimestampResponseTimeZoneOffset)(nil)).Elem()
}

func (i *localTimestampResponseTimeZoneOffsetPtrType) ToLocalTimestampResponseTimeZoneOffsetPtrOutput() LocalTimestampResponseTimeZoneOffsetPtrOutput {
	return i.ToLocalTimestampResponseTimeZoneOffsetPtrOutputWithContext(context.Background())
}

func (i *localTimestampResponseTimeZoneOffsetPtrType) ToLocalTimestampResponseTimeZoneOffsetPtrOutputWithContext(ctx context.Context) LocalTimestampResponseTimeZoneOffsetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalTimestampResponseTimeZoneOffsetPtrOutput)
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
type LocalTimestampResponseTimeZoneOffsetOutput struct{ *pulumi.OutputState }

func (LocalTimestampResponseTimeZoneOffsetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalTimestampResponseTimeZoneOffset)(nil)).Elem()
}

func (o LocalTimestampResponseTimeZoneOffsetOutput) ToLocalTimestampResponseTimeZoneOffsetOutput() LocalTimestampResponseTimeZoneOffsetOutput {
	return o
}

func (o LocalTimestampResponseTimeZoneOffsetOutput) ToLocalTimestampResponseTimeZoneOffsetOutputWithContext(ctx context.Context) LocalTimestampResponseTimeZoneOffsetOutput {
	return o
}

func (o LocalTimestampResponseTimeZoneOffsetOutput) ToLocalTimestampResponseTimeZoneOffsetPtrOutput() LocalTimestampResponseTimeZoneOffsetPtrOutput {
	return o.ToLocalTimestampResponseTimeZoneOffsetPtrOutputWithContext(context.Background())
}

func (o LocalTimestampResponseTimeZoneOffsetOutput) ToLocalTimestampResponseTimeZoneOffsetPtrOutputWithContext(ctx context.Context) LocalTimestampResponseTimeZoneOffsetPtrOutput {
	return o.ApplyT(func(v LocalTimestampResponseTimeZoneOffset) *LocalTimestampResponseTimeZoneOffset {
		return &v
	}).(LocalTimestampResponseTimeZoneOffsetPtrOutput)
}

// The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
func (o LocalTimestampResponseTimeZoneOffsetOutput) PropertyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalTimestampResponseTimeZoneOffset) *string { return v.PropertyName }).(pulumi.StringPtrOutput)
}

type LocalTimestampResponseTimeZoneOffsetPtrOutput struct{ *pulumi.OutputState }

func (LocalTimestampResponseTimeZoneOffsetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalTimestampResponseTimeZoneOffset)(nil)).Elem()
}

func (o LocalTimestampResponseTimeZoneOffsetPtrOutput) ToLocalTimestampResponseTimeZoneOffsetPtrOutput() LocalTimestampResponseTimeZoneOffsetPtrOutput {
	return o
}

func (o LocalTimestampResponseTimeZoneOffsetPtrOutput) ToLocalTimestampResponseTimeZoneOffsetPtrOutputWithContext(ctx context.Context) LocalTimestampResponseTimeZoneOffsetPtrOutput {
	return o
}

func (o LocalTimestampResponseTimeZoneOffsetPtrOutput) Elem() LocalTimestampResponseTimeZoneOffsetOutput {
	return o.ApplyT(func(v *LocalTimestampResponseTimeZoneOffset) LocalTimestampResponseTimeZoneOffset { return *v }).(LocalTimestampResponseTimeZoneOffsetOutput)
}

// The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
func (o LocalTimestampResponseTimeZoneOffsetPtrOutput) PropertyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalTimestampResponseTimeZoneOffset) *string {
		if v == nil {
			return nil
		}
		return v.PropertyName
	}).(pulumi.StringPtrOutput)
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
type LocalTimestampTimeZoneOffset struct {
	// The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
	PropertyName *string `pulumi:"propertyName"`
}

// LocalTimestampTimeZoneOffsetInput is an input type that accepts LocalTimestampTimeZoneOffsetArgs and LocalTimestampTimeZoneOffsetOutput values.
// You can construct a concrete instance of `LocalTimestampTimeZoneOffsetInput` via:
//
//          LocalTimestampTimeZoneOffsetArgs{...}
type LocalTimestampTimeZoneOffsetInput interface {
	pulumi.Input

	ToLocalTimestampTimeZoneOffsetOutput() LocalTimestampTimeZoneOffsetOutput
	ToLocalTimestampTimeZoneOffsetOutputWithContext(context.Context) LocalTimestampTimeZoneOffsetOutput
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
type LocalTimestampTimeZoneOffsetArgs struct {
	// The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
	PropertyName pulumi.StringPtrInput `pulumi:"propertyName"`
}

func (LocalTimestampTimeZoneOffsetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalTimestampTimeZoneOffset)(nil)).Elem()
}

func (i LocalTimestampTimeZoneOffsetArgs) ToLocalTimestampTimeZoneOffsetOutput() LocalTimestampTimeZoneOffsetOutput {
	return i.ToLocalTimestampTimeZoneOffsetOutputWithContext(context.Background())
}

func (i LocalTimestampTimeZoneOffsetArgs) ToLocalTimestampTimeZoneOffsetOutputWithContext(ctx context.Context) LocalTimestampTimeZoneOffsetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalTimestampTimeZoneOffsetOutput)
}

func (i LocalTimestampTimeZoneOffsetArgs) ToLocalTimestampTimeZoneOffsetPtrOutput() LocalTimestampTimeZoneOffsetPtrOutput {
	return i.ToLocalTimestampTimeZoneOffsetPtrOutputWithContext(context.Background())
}

func (i LocalTimestampTimeZoneOffsetArgs) ToLocalTimestampTimeZoneOffsetPtrOutputWithContext(ctx context.Context) LocalTimestampTimeZoneOffsetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalTimestampTimeZoneOffsetOutput).ToLocalTimestampTimeZoneOffsetPtrOutputWithContext(ctx)
}

// LocalTimestampTimeZoneOffsetPtrInput is an input type that accepts LocalTimestampTimeZoneOffsetArgs, LocalTimestampTimeZoneOffsetPtr and LocalTimestampTimeZoneOffsetPtrOutput values.
// You can construct a concrete instance of `LocalTimestampTimeZoneOffsetPtrInput` via:
//
//          LocalTimestampTimeZoneOffsetArgs{...}
//
//  or:
//
//          nil
type LocalTimestampTimeZoneOffsetPtrInput interface {
	pulumi.Input

	ToLocalTimestampTimeZoneOffsetPtrOutput() LocalTimestampTimeZoneOffsetPtrOutput
	ToLocalTimestampTimeZoneOffsetPtrOutputWithContext(context.Context) LocalTimestampTimeZoneOffsetPtrOutput
}

type localTimestampTimeZoneOffsetPtrType LocalTimestampTimeZoneOffsetArgs

func LocalTimestampTimeZoneOffsetPtr(v *LocalTimestampTimeZoneOffsetArgs) LocalTimestampTimeZoneOffsetPtrInput {
	return (*localTimestampTimeZoneOffsetPtrType)(v)
}

func (*localTimestampTimeZoneOffsetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalTimestampTimeZoneOffset)(nil)).Elem()
}

func (i *localTimestampTimeZoneOffsetPtrType) ToLocalTimestampTimeZoneOffsetPtrOutput() LocalTimestampTimeZoneOffsetPtrOutput {
	return i.ToLocalTimestampTimeZoneOffsetPtrOutputWithContext(context.Background())
}

func (i *localTimestampTimeZoneOffsetPtrType) ToLocalTimestampTimeZoneOffsetPtrOutputWithContext(ctx context.Context) LocalTimestampTimeZoneOffsetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalTimestampTimeZoneOffsetPtrOutput)
}

// An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
type LocalTimestampTimeZoneOffsetOutput struct{ *pulumi.OutputState }

func (LocalTimestampTimeZoneOffsetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalTimestampTimeZoneOffset)(nil)).Elem()
}

func (o LocalTimestampTimeZoneOffsetOutput) ToLocalTimestampTimeZoneOffsetOutput() LocalTimestampTimeZoneOffsetOutput {
	return o
}

func (o LocalTimestampTimeZoneOffsetOutput) ToLocalTimestampTimeZoneOffsetOutputWithContext(ctx context.Context) LocalTimestampTimeZoneOffsetOutput {
	return o
}

func (o LocalTimestampTimeZoneOffsetOutput) ToLocalTimestampTimeZoneOffsetPtrOutput() LocalTimestampTimeZoneOffsetPtrOutput {
	return o.ToLocalTimestampTimeZoneOffsetPtrOutputWithContext(context.Background())
}

func (o LocalTimestampTimeZoneOffsetOutput) ToLocalTimestampTimeZoneOffsetPtrOutputWithContext(ctx context.Context) LocalTimestampTimeZoneOffsetPtrOutput {
	return o.ApplyT(func(v LocalTimestampTimeZoneOffset) *LocalTimestampTimeZoneOffset {
		return &v
	}).(LocalTimestampTimeZoneOffsetPtrOutput)
}

// The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
func (o LocalTimestampTimeZoneOffsetOutput) PropertyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalTimestampTimeZoneOffset) *string { return v.PropertyName }).(pulumi.StringPtrOutput)
}

type LocalTimestampTimeZoneOffsetPtrOutput struct{ *pulumi.OutputState }

func (LocalTimestampTimeZoneOffsetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalTimestampTimeZoneOffset)(nil)).Elem()
}

func (o LocalTimestampTimeZoneOffsetPtrOutput) ToLocalTimestampTimeZoneOffsetPtrOutput() LocalTimestampTimeZoneOffsetPtrOutput {
	return o
}

func (o LocalTimestampTimeZoneOffsetPtrOutput) ToLocalTimestampTimeZoneOffsetPtrOutputWithContext(ctx context.Context) LocalTimestampTimeZoneOffsetPtrOutput {
	return o
}

func (o LocalTimestampTimeZoneOffsetPtrOutput) Elem() LocalTimestampTimeZoneOffsetOutput {
	return o.ApplyT(func(v *LocalTimestampTimeZoneOffset) LocalTimestampTimeZoneOffset { return *v }).(LocalTimestampTimeZoneOffsetOutput)
}

// The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
func (o LocalTimestampTimeZoneOffsetPtrOutput) PropertyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalTimestampTimeZoneOffset) *string {
		if v == nil {
			return nil
		}
		return v.PropertyName
	}).(pulumi.StringPtrOutput)
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyProperty struct {
	// The name of the key property.
	Name *string `pulumi:"name"`
	// The type of the key property.
	Type *string `pulumi:"type"`
}

// ReferenceDataSetKeyPropertyInput is an input type that accepts ReferenceDataSetKeyPropertyArgs and ReferenceDataSetKeyPropertyOutput values.
// You can construct a concrete instance of `ReferenceDataSetKeyPropertyInput` via:
//
//          ReferenceDataSetKeyPropertyArgs{...}
type ReferenceDataSetKeyPropertyInput interface {
	pulumi.Input

	ToReferenceDataSetKeyPropertyOutput() ReferenceDataSetKeyPropertyOutput
	ToReferenceDataSetKeyPropertyOutputWithContext(context.Context) ReferenceDataSetKeyPropertyOutput
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyArgs struct {
	// The name of the key property.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the key property.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ReferenceDataSetKeyPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetKeyProperty)(nil)).Elem()
}

func (i ReferenceDataSetKeyPropertyArgs) ToReferenceDataSetKeyPropertyOutput() ReferenceDataSetKeyPropertyOutput {
	return i.ToReferenceDataSetKeyPropertyOutputWithContext(context.Background())
}

func (i ReferenceDataSetKeyPropertyArgs) ToReferenceDataSetKeyPropertyOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetKeyPropertyOutput)
}

// ReferenceDataSetKeyPropertyArrayInput is an input type that accepts ReferenceDataSetKeyPropertyArray and ReferenceDataSetKeyPropertyArrayOutput values.
// You can construct a concrete instance of `ReferenceDataSetKeyPropertyArrayInput` via:
//
//          ReferenceDataSetKeyPropertyArray{ ReferenceDataSetKeyPropertyArgs{...} }
type ReferenceDataSetKeyPropertyArrayInput interface {
	pulumi.Input

	ToReferenceDataSetKeyPropertyArrayOutput() ReferenceDataSetKeyPropertyArrayOutput
	ToReferenceDataSetKeyPropertyArrayOutputWithContext(context.Context) ReferenceDataSetKeyPropertyArrayOutput
}

type ReferenceDataSetKeyPropertyArray []ReferenceDataSetKeyPropertyInput

func (ReferenceDataSetKeyPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferenceDataSetKeyProperty)(nil)).Elem()
}

func (i ReferenceDataSetKeyPropertyArray) ToReferenceDataSetKeyPropertyArrayOutput() ReferenceDataSetKeyPropertyArrayOutput {
	return i.ToReferenceDataSetKeyPropertyArrayOutputWithContext(context.Background())
}

func (i ReferenceDataSetKeyPropertyArray) ToReferenceDataSetKeyPropertyArrayOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetKeyPropertyArrayOutput)
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetKeyPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetKeyProperty)(nil)).Elem()
}

func (o ReferenceDataSetKeyPropertyOutput) ToReferenceDataSetKeyPropertyOutput() ReferenceDataSetKeyPropertyOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyOutput) ToReferenceDataSetKeyPropertyOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyOutput {
	return o
}

// The name of the key property.
func (o ReferenceDataSetKeyPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetKeyProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the key property.
func (o ReferenceDataSetKeyPropertyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetKeyProperty) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReferenceDataSetKeyPropertyArrayOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetKeyPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferenceDataSetKeyProperty)(nil)).Elem()
}

func (o ReferenceDataSetKeyPropertyArrayOutput) ToReferenceDataSetKeyPropertyArrayOutput() ReferenceDataSetKeyPropertyArrayOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyArrayOutput) ToReferenceDataSetKeyPropertyArrayOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyArrayOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyArrayOutput) Index(i pulumi.IntInput) ReferenceDataSetKeyPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReferenceDataSetKeyProperty {
		return vs[0].([]ReferenceDataSetKeyProperty)[vs[1].(int)]
	}).(ReferenceDataSetKeyPropertyOutput)
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyResponse struct {
	// The name of the key property.
	Name *string `pulumi:"name"`
	// The type of the key property.
	Type *string `pulumi:"type"`
}

// ReferenceDataSetKeyPropertyResponseInput is an input type that accepts ReferenceDataSetKeyPropertyResponseArgs and ReferenceDataSetKeyPropertyResponseOutput values.
// You can construct a concrete instance of `ReferenceDataSetKeyPropertyResponseInput` via:
//
//          ReferenceDataSetKeyPropertyResponseArgs{...}
type ReferenceDataSetKeyPropertyResponseInput interface {
	pulumi.Input

	ToReferenceDataSetKeyPropertyResponseOutput() ReferenceDataSetKeyPropertyResponseOutput
	ToReferenceDataSetKeyPropertyResponseOutputWithContext(context.Context) ReferenceDataSetKeyPropertyResponseOutput
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyResponseArgs struct {
	// The name of the key property.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the key property.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ReferenceDataSetKeyPropertyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetKeyPropertyResponse)(nil)).Elem()
}

func (i ReferenceDataSetKeyPropertyResponseArgs) ToReferenceDataSetKeyPropertyResponseOutput() ReferenceDataSetKeyPropertyResponseOutput {
	return i.ToReferenceDataSetKeyPropertyResponseOutputWithContext(context.Background())
}

func (i ReferenceDataSetKeyPropertyResponseArgs) ToReferenceDataSetKeyPropertyResponseOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetKeyPropertyResponseOutput)
}

// ReferenceDataSetKeyPropertyResponseArrayInput is an input type that accepts ReferenceDataSetKeyPropertyResponseArray and ReferenceDataSetKeyPropertyResponseArrayOutput values.
// You can construct a concrete instance of `ReferenceDataSetKeyPropertyResponseArrayInput` via:
//
//          ReferenceDataSetKeyPropertyResponseArray{ ReferenceDataSetKeyPropertyResponseArgs{...} }
type ReferenceDataSetKeyPropertyResponseArrayInput interface {
	pulumi.Input

	ToReferenceDataSetKeyPropertyResponseArrayOutput() ReferenceDataSetKeyPropertyResponseArrayOutput
	ToReferenceDataSetKeyPropertyResponseArrayOutputWithContext(context.Context) ReferenceDataSetKeyPropertyResponseArrayOutput
}

type ReferenceDataSetKeyPropertyResponseArray []ReferenceDataSetKeyPropertyResponseInput

func (ReferenceDataSetKeyPropertyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferenceDataSetKeyPropertyResponse)(nil)).Elem()
}

func (i ReferenceDataSetKeyPropertyResponseArray) ToReferenceDataSetKeyPropertyResponseArrayOutput() ReferenceDataSetKeyPropertyResponseArrayOutput {
	return i.ToReferenceDataSetKeyPropertyResponseArrayOutputWithContext(context.Background())
}

func (i ReferenceDataSetKeyPropertyResponseArray) ToReferenceDataSetKeyPropertyResponseArrayOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceDataSetKeyPropertyResponseArrayOutput)
}

// A key property for the reference data set. A reference data set can have multiple key properties.
type ReferenceDataSetKeyPropertyResponseOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetKeyPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceDataSetKeyPropertyResponse)(nil)).Elem()
}

func (o ReferenceDataSetKeyPropertyResponseOutput) ToReferenceDataSetKeyPropertyResponseOutput() ReferenceDataSetKeyPropertyResponseOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyResponseOutput) ToReferenceDataSetKeyPropertyResponseOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyResponseOutput {
	return o
}

// The name of the key property.
func (o ReferenceDataSetKeyPropertyResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetKeyPropertyResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the key property.
func (o ReferenceDataSetKeyPropertyResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceDataSetKeyPropertyResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReferenceDataSetKeyPropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (ReferenceDataSetKeyPropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferenceDataSetKeyPropertyResponse)(nil)).Elem()
}

func (o ReferenceDataSetKeyPropertyResponseArrayOutput) ToReferenceDataSetKeyPropertyResponseArrayOutput() ReferenceDataSetKeyPropertyResponseArrayOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyResponseArrayOutput) ToReferenceDataSetKeyPropertyResponseArrayOutputWithContext(ctx context.Context) ReferenceDataSetKeyPropertyResponseArrayOutput {
	return o
}

func (o ReferenceDataSetKeyPropertyResponseArrayOutput) Index(i pulumi.IntInput) ReferenceDataSetKeyPropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReferenceDataSetKeyPropertyResponse {
		return vs[0].([]ReferenceDataSetKeyPropertyResponse)[vs[1].(int)]
	}).(ReferenceDataSetKeyPropertyResponseOutput)
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type Sku struct {
	// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
	Capacity int `pulumi:"capacity"`
	// The name of this SKU.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type SkuArgs struct {
	// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// The name of this SKU.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
func (o SkuOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v Sku) int { return v.Capacity }).(pulumi.IntOutput)
}

// The name of this SKU.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
func (o SkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Sku) *int {
		if v == nil {
			return nil
		}
		return &v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The name of this SKU.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type SkuResponse struct {
	// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
	Capacity int `pulumi:"capacity"`
	// The name of this SKU.
	Name string `pulumi:"name"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type SkuResponseArgs struct {
	// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// The name of this SKU.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
func (o SkuResponseOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v SkuResponse) int { return v.Capacity }).(pulumi.IntOutput)
}

// The name of this SKU.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created.
func (o SkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The name of this SKU.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The structure of the property that a time series id can have. An environment can have multiple such properties.
type TimeSeriesIdProperty struct {
	// The name of the property.
	Name *string `pulumi:"name"`
	// The type of the property.
	Type *string `pulumi:"type"`
}

// TimeSeriesIdPropertyInput is an input type that accepts TimeSeriesIdPropertyArgs and TimeSeriesIdPropertyOutput values.
// You can construct a concrete instance of `TimeSeriesIdPropertyInput` via:
//
//          TimeSeriesIdPropertyArgs{...}
type TimeSeriesIdPropertyInput interface {
	pulumi.Input

	ToTimeSeriesIdPropertyOutput() TimeSeriesIdPropertyOutput
	ToTimeSeriesIdPropertyOutputWithContext(context.Context) TimeSeriesIdPropertyOutput
}

// The structure of the property that a time series id can have. An environment can have multiple such properties.
type TimeSeriesIdPropertyArgs struct {
	// The name of the property.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the property.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (TimeSeriesIdPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeSeriesIdProperty)(nil)).Elem()
}

func (i TimeSeriesIdPropertyArgs) ToTimeSeriesIdPropertyOutput() TimeSeriesIdPropertyOutput {
	return i.ToTimeSeriesIdPropertyOutputWithContext(context.Background())
}

func (i TimeSeriesIdPropertyArgs) ToTimeSeriesIdPropertyOutputWithContext(ctx context.Context) TimeSeriesIdPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeSeriesIdPropertyOutput)
}

// TimeSeriesIdPropertyArrayInput is an input type that accepts TimeSeriesIdPropertyArray and TimeSeriesIdPropertyArrayOutput values.
// You can construct a concrete instance of `TimeSeriesIdPropertyArrayInput` via:
//
//          TimeSeriesIdPropertyArray{ TimeSeriesIdPropertyArgs{...} }
type TimeSeriesIdPropertyArrayInput interface {
	pulumi.Input

	ToTimeSeriesIdPropertyArrayOutput() TimeSeriesIdPropertyArrayOutput
	ToTimeSeriesIdPropertyArrayOutputWithContext(context.Context) TimeSeriesIdPropertyArrayOutput
}

type TimeSeriesIdPropertyArray []TimeSeriesIdPropertyInput

func (TimeSeriesIdPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimeSeriesIdProperty)(nil)).Elem()
}

func (i TimeSeriesIdPropertyArray) ToTimeSeriesIdPropertyArrayOutput() TimeSeriesIdPropertyArrayOutput {
	return i.ToTimeSeriesIdPropertyArrayOutputWithContext(context.Background())
}

func (i TimeSeriesIdPropertyArray) ToTimeSeriesIdPropertyArrayOutputWithContext(ctx context.Context) TimeSeriesIdPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeSeriesIdPropertyArrayOutput)
}

// The structure of the property that a time series id can have. An environment can have multiple such properties.
type TimeSeriesIdPropertyOutput struct{ *pulumi.OutputState }

func (TimeSeriesIdPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeSeriesIdProperty)(nil)).Elem()
}

func (o TimeSeriesIdPropertyOutput) ToTimeSeriesIdPropertyOutput() TimeSeriesIdPropertyOutput {
	return o
}

func (o TimeSeriesIdPropertyOutput) ToTimeSeriesIdPropertyOutputWithContext(ctx context.Context) TimeSeriesIdPropertyOutput {
	return o
}

// The name of the property.
func (o TimeSeriesIdPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimeSeriesIdProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the property.
func (o TimeSeriesIdPropertyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimeSeriesIdProperty) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TimeSeriesIdPropertyArrayOutput struct{ *pulumi.OutputState }

func (TimeSeriesIdPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimeSeriesIdProperty)(nil)).Elem()
}

func (o TimeSeriesIdPropertyArrayOutput) ToTimeSeriesIdPropertyArrayOutput() TimeSeriesIdPropertyArrayOutput {
	return o
}

func (o TimeSeriesIdPropertyArrayOutput) ToTimeSeriesIdPropertyArrayOutputWithContext(ctx context.Context) TimeSeriesIdPropertyArrayOutput {
	return o
}

func (o TimeSeriesIdPropertyArrayOutput) Index(i pulumi.IntInput) TimeSeriesIdPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimeSeriesIdProperty {
		return vs[0].([]TimeSeriesIdProperty)[vs[1].(int)]
	}).(TimeSeriesIdPropertyOutput)
}

// The structure of the property that a time series id can have. An environment can have multiple such properties.
type TimeSeriesIdPropertyResponse struct {
	// The name of the property.
	Name *string `pulumi:"name"`
	// The type of the property.
	Type *string `pulumi:"type"`
}

// TimeSeriesIdPropertyResponseInput is an input type that accepts TimeSeriesIdPropertyResponseArgs and TimeSeriesIdPropertyResponseOutput values.
// You can construct a concrete instance of `TimeSeriesIdPropertyResponseInput` via:
//
//          TimeSeriesIdPropertyResponseArgs{...}
type TimeSeriesIdPropertyResponseInput interface {
	pulumi.Input

	ToTimeSeriesIdPropertyResponseOutput() TimeSeriesIdPropertyResponseOutput
	ToTimeSeriesIdPropertyResponseOutputWithContext(context.Context) TimeSeriesIdPropertyResponseOutput
}

// The structure of the property that a time series id can have. An environment can have multiple such properties.
type TimeSeriesIdPropertyResponseArgs struct {
	// The name of the property.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the property.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (TimeSeriesIdPropertyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeSeriesIdPropertyResponse)(nil)).Elem()
}

func (i TimeSeriesIdPropertyResponseArgs) ToTimeSeriesIdPropertyResponseOutput() TimeSeriesIdPropertyResponseOutput {
	return i.ToTimeSeriesIdPropertyResponseOutputWithContext(context.Background())
}

func (i TimeSeriesIdPropertyResponseArgs) ToTimeSeriesIdPropertyResponseOutputWithContext(ctx context.Context) TimeSeriesIdPropertyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeSeriesIdPropertyResponseOutput)
}

// TimeSeriesIdPropertyResponseArrayInput is an input type that accepts TimeSeriesIdPropertyResponseArray and TimeSeriesIdPropertyResponseArrayOutput values.
// You can construct a concrete instance of `TimeSeriesIdPropertyResponseArrayInput` via:
//
//          TimeSeriesIdPropertyResponseArray{ TimeSeriesIdPropertyResponseArgs{...} }
type TimeSeriesIdPropertyResponseArrayInput interface {
	pulumi.Input

	ToTimeSeriesIdPropertyResponseArrayOutput() TimeSeriesIdPropertyResponseArrayOutput
	ToTimeSeriesIdPropertyResponseArrayOutputWithContext(context.Context) TimeSeriesIdPropertyResponseArrayOutput
}

type TimeSeriesIdPropertyResponseArray []TimeSeriesIdPropertyResponseInput

func (TimeSeriesIdPropertyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimeSeriesIdPropertyResponse)(nil)).Elem()
}

func (i TimeSeriesIdPropertyResponseArray) ToTimeSeriesIdPropertyResponseArrayOutput() TimeSeriesIdPropertyResponseArrayOutput {
	return i.ToTimeSeriesIdPropertyResponseArrayOutputWithContext(context.Background())
}

func (i TimeSeriesIdPropertyResponseArray) ToTimeSeriesIdPropertyResponseArrayOutputWithContext(ctx context.Context) TimeSeriesIdPropertyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeSeriesIdPropertyResponseArrayOutput)
}

// The structure of the property that a time series id can have. An environment can have multiple such properties.
type TimeSeriesIdPropertyResponseOutput struct{ *pulumi.OutputState }

func (TimeSeriesIdPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeSeriesIdPropertyResponse)(nil)).Elem()
}

func (o TimeSeriesIdPropertyResponseOutput) ToTimeSeriesIdPropertyResponseOutput() TimeSeriesIdPropertyResponseOutput {
	return o
}

func (o TimeSeriesIdPropertyResponseOutput) ToTimeSeriesIdPropertyResponseOutputWithContext(ctx context.Context) TimeSeriesIdPropertyResponseOutput {
	return o
}

// The name of the property.
func (o TimeSeriesIdPropertyResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimeSeriesIdPropertyResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the property.
func (o TimeSeriesIdPropertyResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimeSeriesIdPropertyResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TimeSeriesIdPropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (TimeSeriesIdPropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimeSeriesIdPropertyResponse)(nil)).Elem()
}

func (o TimeSeriesIdPropertyResponseArrayOutput) ToTimeSeriesIdPropertyResponseArrayOutput() TimeSeriesIdPropertyResponseArrayOutput {
	return o
}

func (o TimeSeriesIdPropertyResponseArrayOutput) ToTimeSeriesIdPropertyResponseArrayOutputWithContext(ctx context.Context) TimeSeriesIdPropertyResponseArrayOutput {
	return o
}

func (o TimeSeriesIdPropertyResponseArrayOutput) Index(i pulumi.IntInput) TimeSeriesIdPropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimeSeriesIdPropertyResponse {
		return vs[0].([]TimeSeriesIdPropertyResponse)[vs[1].(int)]
	}).(TimeSeriesIdPropertyResponseOutput)
}

// An object that represents the status of warm storage on an environment.
type WarmStorageEnvironmentStatusResponse struct {
	// A value that represents the number of properties used by the environment for S1/S2 SKU and number of properties used by Warm Store for PAYG SKU
	CurrentCount *int `pulumi:"currentCount"`
	// A value that represents the maximum number of properties used allowed by the environment for S1/S2 SKU and maximum number of properties allowed by Warm Store for PAYG SKU.
	MaxCount *int `pulumi:"maxCount"`
	// This string represents the state of warm storage properties usage. It can be "Ok", "Error", "Unknown".
	State *string `pulumi:"state"`
}

// WarmStorageEnvironmentStatusResponseInput is an input type that accepts WarmStorageEnvironmentStatusResponseArgs and WarmStorageEnvironmentStatusResponseOutput values.
// You can construct a concrete instance of `WarmStorageEnvironmentStatusResponseInput` via:
//
//          WarmStorageEnvironmentStatusResponseArgs{...}
type WarmStorageEnvironmentStatusResponseInput interface {
	pulumi.Input

	ToWarmStorageEnvironmentStatusResponseOutput() WarmStorageEnvironmentStatusResponseOutput
	ToWarmStorageEnvironmentStatusResponseOutputWithContext(context.Context) WarmStorageEnvironmentStatusResponseOutput
}

// An object that represents the status of warm storage on an environment.
type WarmStorageEnvironmentStatusResponseArgs struct {
	// A value that represents the number of properties used by the environment for S1/S2 SKU and number of properties used by Warm Store for PAYG SKU
	CurrentCount pulumi.IntPtrInput `pulumi:"currentCount"`
	// A value that represents the maximum number of properties used allowed by the environment for S1/S2 SKU and maximum number of properties allowed by Warm Store for PAYG SKU.
	MaxCount pulumi.IntPtrInput `pulumi:"maxCount"`
	// This string represents the state of warm storage properties usage. It can be "Ok", "Error", "Unknown".
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (WarmStorageEnvironmentStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarmStorageEnvironmentStatusResponse)(nil)).Elem()
}

func (i WarmStorageEnvironmentStatusResponseArgs) ToWarmStorageEnvironmentStatusResponseOutput() WarmStorageEnvironmentStatusResponseOutput {
	return i.ToWarmStorageEnvironmentStatusResponseOutputWithContext(context.Background())
}

func (i WarmStorageEnvironmentStatusResponseArgs) ToWarmStorageEnvironmentStatusResponseOutputWithContext(ctx context.Context) WarmStorageEnvironmentStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarmStorageEnvironmentStatusResponseOutput)
}

func (i WarmStorageEnvironmentStatusResponseArgs) ToWarmStorageEnvironmentStatusResponsePtrOutput() WarmStorageEnvironmentStatusResponsePtrOutput {
	return i.ToWarmStorageEnvironmentStatusResponsePtrOutputWithContext(context.Background())
}

func (i WarmStorageEnvironmentStatusResponseArgs) ToWarmStorageEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) WarmStorageEnvironmentStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarmStorageEnvironmentStatusResponseOutput).ToWarmStorageEnvironmentStatusResponsePtrOutputWithContext(ctx)
}

// WarmStorageEnvironmentStatusResponsePtrInput is an input type that accepts WarmStorageEnvironmentStatusResponseArgs, WarmStorageEnvironmentStatusResponsePtr and WarmStorageEnvironmentStatusResponsePtrOutput values.
// You can construct a concrete instance of `WarmStorageEnvironmentStatusResponsePtrInput` via:
//
//          WarmStorageEnvironmentStatusResponseArgs{...}
//
//  or:
//
//          nil
type WarmStorageEnvironmentStatusResponsePtrInput interface {
	pulumi.Input

	ToWarmStorageEnvironmentStatusResponsePtrOutput() WarmStorageEnvironmentStatusResponsePtrOutput
	ToWarmStorageEnvironmentStatusResponsePtrOutputWithContext(context.Context) WarmStorageEnvironmentStatusResponsePtrOutput
}

type warmStorageEnvironmentStatusResponsePtrType WarmStorageEnvironmentStatusResponseArgs

func WarmStorageEnvironmentStatusResponsePtr(v *WarmStorageEnvironmentStatusResponseArgs) WarmStorageEnvironmentStatusResponsePtrInput {
	return (*warmStorageEnvironmentStatusResponsePtrType)(v)
}

func (*warmStorageEnvironmentStatusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WarmStorageEnvironmentStatusResponse)(nil)).Elem()
}

func (i *warmStorageEnvironmentStatusResponsePtrType) ToWarmStorageEnvironmentStatusResponsePtrOutput() WarmStorageEnvironmentStatusResponsePtrOutput {
	return i.ToWarmStorageEnvironmentStatusResponsePtrOutputWithContext(context.Background())
}

func (i *warmStorageEnvironmentStatusResponsePtrType) ToWarmStorageEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) WarmStorageEnvironmentStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarmStorageEnvironmentStatusResponsePtrOutput)
}

// An object that represents the status of warm storage on an environment.
type WarmStorageEnvironmentStatusResponseOutput struct{ *pulumi.OutputState }

func (WarmStorageEnvironmentStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarmStorageEnvironmentStatusResponse)(nil)).Elem()
}

func (o WarmStorageEnvironmentStatusResponseOutput) ToWarmStorageEnvironmentStatusResponseOutput() WarmStorageEnvironmentStatusResponseOutput {
	return o
}

func (o WarmStorageEnvironmentStatusResponseOutput) ToWarmStorageEnvironmentStatusResponseOutputWithContext(ctx context.Context) WarmStorageEnvironmentStatusResponseOutput {
	return o
}

func (o WarmStorageEnvironmentStatusResponseOutput) ToWarmStorageEnvironmentStatusResponsePtrOutput() WarmStorageEnvironmentStatusResponsePtrOutput {
	return o.ToWarmStorageEnvironmentStatusResponsePtrOutputWithContext(context.Background())
}

func (o WarmStorageEnvironmentStatusResponseOutput) ToWarmStorageEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) WarmStorageEnvironmentStatusResponsePtrOutput {
	return o.ApplyT(func(v WarmStorageEnvironmentStatusResponse) *WarmStorageEnvironmentStatusResponse {
		return &v
	}).(WarmStorageEnvironmentStatusResponsePtrOutput)
}

// A value that represents the number of properties used by the environment for S1/S2 SKU and number of properties used by Warm Store for PAYG SKU
func (o WarmStorageEnvironmentStatusResponseOutput) CurrentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WarmStorageEnvironmentStatusResponse) *int { return v.CurrentCount }).(pulumi.IntPtrOutput)
}

// A value that represents the maximum number of properties used allowed by the environment for S1/S2 SKU and maximum number of properties allowed by Warm Store for PAYG SKU.
func (o WarmStorageEnvironmentStatusResponseOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WarmStorageEnvironmentStatusResponse) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// This string represents the state of warm storage properties usage. It can be "Ok", "Error", "Unknown".
func (o WarmStorageEnvironmentStatusResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WarmStorageEnvironmentStatusResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type WarmStorageEnvironmentStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (WarmStorageEnvironmentStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarmStorageEnvironmentStatusResponse)(nil)).Elem()
}

func (o WarmStorageEnvironmentStatusResponsePtrOutput) ToWarmStorageEnvironmentStatusResponsePtrOutput() WarmStorageEnvironmentStatusResponsePtrOutput {
	return o
}

func (o WarmStorageEnvironmentStatusResponsePtrOutput) ToWarmStorageEnvironmentStatusResponsePtrOutputWithContext(ctx context.Context) WarmStorageEnvironmentStatusResponsePtrOutput {
	return o
}

func (o WarmStorageEnvironmentStatusResponsePtrOutput) Elem() WarmStorageEnvironmentStatusResponseOutput {
	return o.ApplyT(func(v *WarmStorageEnvironmentStatusResponse) WarmStorageEnvironmentStatusResponse { return *v }).(WarmStorageEnvironmentStatusResponseOutput)
}

// A value that represents the number of properties used by the environment for S1/S2 SKU and number of properties used by Warm Store for PAYG SKU
func (o WarmStorageEnvironmentStatusResponsePtrOutput) CurrentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WarmStorageEnvironmentStatusResponse) *int {
		if v == nil {
			return nil
		}
		return v.CurrentCount
	}).(pulumi.IntPtrOutput)
}

// A value that represents the maximum number of properties used allowed by the environment for S1/S2 SKU and maximum number of properties allowed by Warm Store for PAYG SKU.
func (o WarmStorageEnvironmentStatusResponsePtrOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WarmStorageEnvironmentStatusResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxCount
	}).(pulumi.IntPtrOutput)
}

// This string represents the state of warm storage properties usage. It can be "Ok", "Error", "Unknown".
func (o WarmStorageEnvironmentStatusResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarmStorageEnvironmentStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
type WarmStoreConfigurationProperties struct {
	// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
	DataRetention string `pulumi:"dataRetention"`
}

// WarmStoreConfigurationPropertiesInput is an input type that accepts WarmStoreConfigurationPropertiesArgs and WarmStoreConfigurationPropertiesOutput values.
// You can construct a concrete instance of `WarmStoreConfigurationPropertiesInput` via:
//
//          WarmStoreConfigurationPropertiesArgs{...}
type WarmStoreConfigurationPropertiesInput interface {
	pulumi.Input

	ToWarmStoreConfigurationPropertiesOutput() WarmStoreConfigurationPropertiesOutput
	ToWarmStoreConfigurationPropertiesOutputWithContext(context.Context) WarmStoreConfigurationPropertiesOutput
}

// The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
type WarmStoreConfigurationPropertiesArgs struct {
	// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
	DataRetention pulumi.StringInput `pulumi:"dataRetention"`
}

func (WarmStoreConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarmStoreConfigurationProperties)(nil)).Elem()
}

func (i WarmStoreConfigurationPropertiesArgs) ToWarmStoreConfigurationPropertiesOutput() WarmStoreConfigurationPropertiesOutput {
	return i.ToWarmStoreConfigurationPropertiesOutputWithContext(context.Background())
}

func (i WarmStoreConfigurationPropertiesArgs) ToWarmStoreConfigurationPropertiesOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarmStoreConfigurationPropertiesOutput)
}

func (i WarmStoreConfigurationPropertiesArgs) ToWarmStoreConfigurationPropertiesPtrOutput() WarmStoreConfigurationPropertiesPtrOutput {
	return i.ToWarmStoreConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i WarmStoreConfigurationPropertiesArgs) ToWarmStoreConfigurationPropertiesPtrOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarmStoreConfigurationPropertiesOutput).ToWarmStoreConfigurationPropertiesPtrOutputWithContext(ctx)
}

// WarmStoreConfigurationPropertiesPtrInput is an input type that accepts WarmStoreConfigurationPropertiesArgs, WarmStoreConfigurationPropertiesPtr and WarmStoreConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `WarmStoreConfigurationPropertiesPtrInput` via:
//
//          WarmStoreConfigurationPropertiesArgs{...}
//
//  or:
//
//          nil
type WarmStoreConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToWarmStoreConfigurationPropertiesPtrOutput() WarmStoreConfigurationPropertiesPtrOutput
	ToWarmStoreConfigurationPropertiesPtrOutputWithContext(context.Context) WarmStoreConfigurationPropertiesPtrOutput
}

type warmStoreConfigurationPropertiesPtrType WarmStoreConfigurationPropertiesArgs

func WarmStoreConfigurationPropertiesPtr(v *WarmStoreConfigurationPropertiesArgs) WarmStoreConfigurationPropertiesPtrInput {
	return (*warmStoreConfigurationPropertiesPtrType)(v)
}

func (*warmStoreConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WarmStoreConfigurationProperties)(nil)).Elem()
}

func (i *warmStoreConfigurationPropertiesPtrType) ToWarmStoreConfigurationPropertiesPtrOutput() WarmStoreConfigurationPropertiesPtrOutput {
	return i.ToWarmStoreConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *warmStoreConfigurationPropertiesPtrType) ToWarmStoreConfigurationPropertiesPtrOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarmStoreConfigurationPropertiesPtrOutput)
}

// The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
type WarmStoreConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (WarmStoreConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarmStoreConfigurationProperties)(nil)).Elem()
}

func (o WarmStoreConfigurationPropertiesOutput) ToWarmStoreConfigurationPropertiesOutput() WarmStoreConfigurationPropertiesOutput {
	return o
}

func (o WarmStoreConfigurationPropertiesOutput) ToWarmStoreConfigurationPropertiesOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesOutput {
	return o
}

func (o WarmStoreConfigurationPropertiesOutput) ToWarmStoreConfigurationPropertiesPtrOutput() WarmStoreConfigurationPropertiesPtrOutput {
	return o.ToWarmStoreConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o WarmStoreConfigurationPropertiesOutput) ToWarmStoreConfigurationPropertiesPtrOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v WarmStoreConfigurationProperties) *WarmStoreConfigurationProperties {
		return &v
	}).(WarmStoreConfigurationPropertiesPtrOutput)
}

// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
func (o WarmStoreConfigurationPropertiesOutput) DataRetention() pulumi.StringOutput {
	return o.ApplyT(func(v WarmStoreConfigurationProperties) string { return v.DataRetention }).(pulumi.StringOutput)
}

type WarmStoreConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WarmStoreConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarmStoreConfigurationProperties)(nil)).Elem()
}

func (o WarmStoreConfigurationPropertiesPtrOutput) ToWarmStoreConfigurationPropertiesPtrOutput() WarmStoreConfigurationPropertiesPtrOutput {
	return o
}

func (o WarmStoreConfigurationPropertiesPtrOutput) ToWarmStoreConfigurationPropertiesPtrOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesPtrOutput {
	return o
}

func (o WarmStoreConfigurationPropertiesPtrOutput) Elem() WarmStoreConfigurationPropertiesOutput {
	return o.ApplyT(func(v *WarmStoreConfigurationProperties) WarmStoreConfigurationProperties { return *v }).(WarmStoreConfigurationPropertiesOutput)
}

// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
func (o WarmStoreConfigurationPropertiesPtrOutput) DataRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarmStoreConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DataRetention
	}).(pulumi.StringPtrOutput)
}

// The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
type WarmStoreConfigurationPropertiesResponse struct {
	// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
	DataRetention string `pulumi:"dataRetention"`
}

// WarmStoreConfigurationPropertiesResponseInput is an input type that accepts WarmStoreConfigurationPropertiesResponseArgs and WarmStoreConfigurationPropertiesResponseOutput values.
// You can construct a concrete instance of `WarmStoreConfigurationPropertiesResponseInput` via:
//
//          WarmStoreConfigurationPropertiesResponseArgs{...}
type WarmStoreConfigurationPropertiesResponseInput interface {
	pulumi.Input

	ToWarmStoreConfigurationPropertiesResponseOutput() WarmStoreConfigurationPropertiesResponseOutput
	ToWarmStoreConfigurationPropertiesResponseOutputWithContext(context.Context) WarmStoreConfigurationPropertiesResponseOutput
}

// The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
type WarmStoreConfigurationPropertiesResponseArgs struct {
	// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
	DataRetention pulumi.StringInput `pulumi:"dataRetention"`
}

func (WarmStoreConfigurationPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WarmStoreConfigurationPropertiesResponse)(nil)).Elem()
}

func (i WarmStoreConfigurationPropertiesResponseArgs) ToWarmStoreConfigurationPropertiesResponseOutput() WarmStoreConfigurationPropertiesResponseOutput {
	return i.ToWarmStoreConfigurationPropertiesResponseOutputWithContext(context.Background())
}

func (i WarmStoreConfigurationPropertiesResponseArgs) ToWarmStoreConfigurationPropertiesResponseOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarmStoreConfigurationPropertiesResponseOutput)
}

func (i WarmStoreConfigurationPropertiesResponseArgs) ToWarmStoreConfigurationPropertiesResponsePtrOutput() WarmStoreConfigurationPropertiesResponsePtrOutput {
	return i.ToWarmStoreConfigurationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i WarmStoreConfigurationPropertiesResponseArgs) ToWarmStoreConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarmStoreConfigurationPropertiesResponseOutput).ToWarmStoreConfigurationPropertiesResponsePtrOutputWithContext(ctx)
}

// WarmStoreConfigurationPropertiesResponsePtrInput is an input type that accepts WarmStoreConfigurationPropertiesResponseArgs, WarmStoreConfigurationPropertiesResponsePtr and WarmStoreConfigurationPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `WarmStoreConfigurationPropertiesResponsePtrInput` via:
//
//          WarmStoreConfigurationPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type WarmStoreConfigurationPropertiesResponsePtrInput interface {
	pulumi.Input

	ToWarmStoreConfigurationPropertiesResponsePtrOutput() WarmStoreConfigurationPropertiesResponsePtrOutput
	ToWarmStoreConfigurationPropertiesResponsePtrOutputWithContext(context.Context) WarmStoreConfigurationPropertiesResponsePtrOutput
}

type warmStoreConfigurationPropertiesResponsePtrType WarmStoreConfigurationPropertiesResponseArgs

func WarmStoreConfigurationPropertiesResponsePtr(v *WarmStoreConfigurationPropertiesResponseArgs) WarmStoreConfigurationPropertiesResponsePtrInput {
	return (*warmStoreConfigurationPropertiesResponsePtrType)(v)
}

func (*warmStoreConfigurationPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WarmStoreConfigurationPropertiesResponse)(nil)).Elem()
}

func (i *warmStoreConfigurationPropertiesResponsePtrType) ToWarmStoreConfigurationPropertiesResponsePtrOutput() WarmStoreConfigurationPropertiesResponsePtrOutput {
	return i.ToWarmStoreConfigurationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *warmStoreConfigurationPropertiesResponsePtrType) ToWarmStoreConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WarmStoreConfigurationPropertiesResponsePtrOutput)
}

// The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
type WarmStoreConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (WarmStoreConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WarmStoreConfigurationPropertiesResponse)(nil)).Elem()
}

func (o WarmStoreConfigurationPropertiesResponseOutput) ToWarmStoreConfigurationPropertiesResponseOutput() WarmStoreConfigurationPropertiesResponseOutput {
	return o
}

func (o WarmStoreConfigurationPropertiesResponseOutput) ToWarmStoreConfigurationPropertiesResponseOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesResponseOutput {
	return o
}

func (o WarmStoreConfigurationPropertiesResponseOutput) ToWarmStoreConfigurationPropertiesResponsePtrOutput() WarmStoreConfigurationPropertiesResponsePtrOutput {
	return o.ToWarmStoreConfigurationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o WarmStoreConfigurationPropertiesResponseOutput) ToWarmStoreConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v WarmStoreConfigurationPropertiesResponse) *WarmStoreConfigurationPropertiesResponse {
		return &v
	}).(WarmStoreConfigurationPropertiesResponsePtrOutput)
}

// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
func (o WarmStoreConfigurationPropertiesResponseOutput) DataRetention() pulumi.StringOutput {
	return o.ApplyT(func(v WarmStoreConfigurationPropertiesResponse) string { return v.DataRetention }).(pulumi.StringOutput)
}

type WarmStoreConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (WarmStoreConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WarmStoreConfigurationPropertiesResponse)(nil)).Elem()
}

func (o WarmStoreConfigurationPropertiesResponsePtrOutput) ToWarmStoreConfigurationPropertiesResponsePtrOutput() WarmStoreConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o WarmStoreConfigurationPropertiesResponsePtrOutput) ToWarmStoreConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) WarmStoreConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o WarmStoreConfigurationPropertiesResponsePtrOutput) Elem() WarmStoreConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *WarmStoreConfigurationPropertiesResponse) WarmStoreConfigurationPropertiesResponse { return *v }).(WarmStoreConfigurationPropertiesResponseOutput)
}

// ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
func (o WarmStoreConfigurationPropertiesResponsePtrOutput) DataRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WarmStoreConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataRetention
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(EnvironmentStateDetailsResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentStateDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentStatusResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(Gen2StorageConfigurationInputOutput{})
	pulumi.RegisterOutputType(Gen2StorageConfigurationInputPtrOutput{})
	pulumi.RegisterOutputType(Gen2StorageConfigurationOutputResponseOutput{})
	pulumi.RegisterOutputType(Gen2StorageConfigurationOutputResponsePtrOutput{})
	pulumi.RegisterOutputType(IngressEnvironmentStatusResponseOutput{})
	pulumi.RegisterOutputType(IngressEnvironmentStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(LocalTimestampOutput{})
	pulumi.RegisterOutputType(LocalTimestampPtrOutput{})
	pulumi.RegisterOutputType(LocalTimestampResponseOutput{})
	pulumi.RegisterOutputType(LocalTimestampResponsePtrOutput{})
	pulumi.RegisterOutputType(LocalTimestampResponseTimeZoneOffsetOutput{})
	pulumi.RegisterOutputType(LocalTimestampResponseTimeZoneOffsetPtrOutput{})
	pulumi.RegisterOutputType(LocalTimestampTimeZoneOffsetOutput{})
	pulumi.RegisterOutputType(LocalTimestampTimeZoneOffsetPtrOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetKeyPropertyOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetKeyPropertyArrayOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetKeyPropertyResponseOutput{})
	pulumi.RegisterOutputType(ReferenceDataSetKeyPropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(TimeSeriesIdPropertyOutput{})
	pulumi.RegisterOutputType(TimeSeriesIdPropertyArrayOutput{})
	pulumi.RegisterOutputType(TimeSeriesIdPropertyResponseOutput{})
	pulumi.RegisterOutputType(TimeSeriesIdPropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(WarmStorageEnvironmentStatusResponseOutput{})
	pulumi.RegisterOutputType(WarmStorageEnvironmentStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(WarmStoreConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(WarmStoreConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WarmStoreConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(WarmStoreConfigurationPropertiesResponsePtrOutput{})
}
