// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190501

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The assembly definition.
type IntegrationAccountAssembly struct {
	pulumi.CustomResourceState

	// The resource location.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Gets the resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The assembly properties.
	Properties AssemblyPropertiesResponseOutput `pulumi:"properties"`
	// The resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Gets the resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewIntegrationAccountAssembly registers a new resource with the given unique name, arguments, and options.
func NewIntegrationAccountAssembly(ctx *pulumi.Context,
	name string, args *IntegrationAccountAssemblyArgs, opts ...pulumi.ResourceOption) (*IntegrationAccountAssembly, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IntegrationAccountName == nil {
		return nil, errors.New("invalid value for required argument 'IntegrationAccountName'")
	}
	if args.Properties == nil {
		return nil, errors.New("invalid value for required argument 'Properties'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:logic:IntegrationAccountAssembly"),
		},
		{
			Type: pulumi.String("azure-native:logic/v20160601:IntegrationAccountAssembly"),
		},
		{
			Type: pulumi.String("azure-native:logic/v20180701preview:IntegrationAccountAssembly"),
		},
	})
	opts = append(opts, aliases)
	var resource IntegrationAccountAssembly
	err := ctx.RegisterResource("azure-native:logic/v20190501:IntegrationAccountAssembly", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegrationAccountAssembly gets an existing IntegrationAccountAssembly resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegrationAccountAssembly(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationAccountAssemblyState, opts ...pulumi.ResourceOption) (*IntegrationAccountAssembly, error) {
	var resource IntegrationAccountAssembly
	err := ctx.ReadResource("azure-native:logic/v20190501:IntegrationAccountAssembly", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IntegrationAccountAssembly resources.
type integrationAccountAssemblyState struct {
}

type IntegrationAccountAssemblyState struct {
}

func (IntegrationAccountAssemblyState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationAccountAssemblyState)(nil)).Elem()
}

type integrationAccountAssemblyArgs struct {
	// The assembly artifact name.
	AssemblyArtifactName *string `pulumi:"assemblyArtifactName"`
	// The integration account name.
	IntegrationAccountName string `pulumi:"integrationAccountName"`
	// The resource location.
	Location *string `pulumi:"location"`
	// The assembly properties.
	Properties AssemblyProperties `pulumi:"properties"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a IntegrationAccountAssembly resource.
type IntegrationAccountAssemblyArgs struct {
	// The assembly artifact name.
	AssemblyArtifactName pulumi.StringPtrInput
	// The integration account name.
	IntegrationAccountName pulumi.StringInput
	// The resource location.
	Location pulumi.StringPtrInput
	// The assembly properties.
	Properties AssemblyPropertiesInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
	// The resource tags.
	Tags pulumi.StringMapInput
}

func (IntegrationAccountAssemblyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationAccountAssemblyArgs)(nil)).Elem()
}

type IntegrationAccountAssemblyInput interface {
	pulumi.Input

	ToIntegrationAccountAssemblyOutput() IntegrationAccountAssemblyOutput
	ToIntegrationAccountAssemblyOutputWithContext(ctx context.Context) IntegrationAccountAssemblyOutput
}

func (*IntegrationAccountAssembly) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountAssembly)(nil)).Elem()
}

func (i *IntegrationAccountAssembly) ToIntegrationAccountAssemblyOutput() IntegrationAccountAssemblyOutput {
	return i.ToIntegrationAccountAssemblyOutputWithContext(context.Background())
}

func (i *IntegrationAccountAssembly) ToIntegrationAccountAssemblyOutputWithContext(ctx context.Context) IntegrationAccountAssemblyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountAssemblyOutput)
}

type IntegrationAccountAssemblyOutput struct{ *pulumi.OutputState }

func (IntegrationAccountAssemblyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountAssembly)(nil)).Elem()
}

func (o IntegrationAccountAssemblyOutput) ToIntegrationAccountAssemblyOutput() IntegrationAccountAssemblyOutput {
	return o
}

func (o IntegrationAccountAssemblyOutput) ToIntegrationAccountAssemblyOutputWithContext(ctx context.Context) IntegrationAccountAssemblyOutput {
	return o
}

// The resource location.
func (o IntegrationAccountAssemblyOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountAssembly) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Gets the resource name.
func (o IntegrationAccountAssemblyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationAccountAssembly) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The assembly properties.
func (o IntegrationAccountAssemblyOutput) Properties() AssemblyPropertiesResponseOutput {
	return o.ApplyT(func(v *IntegrationAccountAssembly) AssemblyPropertiesResponseOutput { return v.Properties }).(AssemblyPropertiesResponseOutput)
}

// The resource tags.
func (o IntegrationAccountAssemblyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IntegrationAccountAssembly) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Gets the resource type.
func (o IntegrationAccountAssemblyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationAccountAssembly) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(IntegrationAccountAssemblyOutput{})
}
