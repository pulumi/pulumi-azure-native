// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190501

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The integration service environment managed api.
type IntegrationServiceEnvironmentManagedApi struct {
	pulumi.CustomResourceState

	// The API definition.
	ApiDefinitionUrl pulumi.StringOutput `pulumi:"apiDefinitionUrl"`
	// The api definitions.
	ApiDefinitions ApiResourceDefinitionsResponseOutput `pulumi:"apiDefinitions"`
	// The backend service.
	BackendService ApiResourceBackendServiceResponseOutput `pulumi:"backendService"`
	// The capabilities.
	Capabilities pulumi.StringArrayOutput `pulumi:"capabilities"`
	// The category.
	Category pulumi.StringOutput `pulumi:"category"`
	// The connection parameters.
	ConnectionParameters pulumi.MapOutput `pulumi:"connectionParameters"`
	// The integration service environment managed api deployment parameters.
	DeploymentParameters IntegrationServiceEnvironmentManagedApiDeploymentParametersResponsePtrOutput `pulumi:"deploymentParameters"`
	// The api general information.
	GeneralInformation ApiResourceGeneralInformationResponseOutput `pulumi:"generalInformation"`
	// The integration service environment reference.
	IntegrationServiceEnvironment ResourceReferenceResponsePtrOutput `pulumi:"integrationServiceEnvironment"`
	// The resource location.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The metadata.
	Metadata ApiResourceMetadataResponseOutput `pulumi:"metadata"`
	// Gets the resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The policies for the API.
	Policies ApiResourcePoliciesResponseOutput `pulumi:"policies"`
	// The provisioning state.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The runtime urls.
	RuntimeUrls pulumi.StringArrayOutput `pulumi:"runtimeUrls"`
	// The resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Gets the resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewIntegrationServiceEnvironmentManagedApi registers a new resource with the given unique name, arguments, and options.
func NewIntegrationServiceEnvironmentManagedApi(ctx *pulumi.Context,
	name string, args *IntegrationServiceEnvironmentManagedApiArgs, opts ...pulumi.ResourceOption) (*IntegrationServiceEnvironmentManagedApi, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IntegrationServiceEnvironmentName == nil {
		return nil, errors.New("invalid value for required argument 'IntegrationServiceEnvironmentName'")
	}
	if args.ResourceGroup == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroup'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:logic:IntegrationServiceEnvironmentManagedApi"),
		},
	})
	opts = append(opts, aliases)
	var resource IntegrationServiceEnvironmentManagedApi
	err := ctx.RegisterResource("azure-native:logic/v20190501:IntegrationServiceEnvironmentManagedApi", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegrationServiceEnvironmentManagedApi gets an existing IntegrationServiceEnvironmentManagedApi resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegrationServiceEnvironmentManagedApi(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationServiceEnvironmentManagedApiState, opts ...pulumi.ResourceOption) (*IntegrationServiceEnvironmentManagedApi, error) {
	var resource IntegrationServiceEnvironmentManagedApi
	err := ctx.ReadResource("azure-native:logic/v20190501:IntegrationServiceEnvironmentManagedApi", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IntegrationServiceEnvironmentManagedApi resources.
type integrationServiceEnvironmentManagedApiState struct {
}

type IntegrationServiceEnvironmentManagedApiState struct {
}

func (IntegrationServiceEnvironmentManagedApiState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationServiceEnvironmentManagedApiState)(nil)).Elem()
}

type integrationServiceEnvironmentManagedApiArgs struct {
	// The api name.
	ApiName *string `pulumi:"apiName"`
	// The integration service environment managed api deployment parameters.
	DeploymentParameters *IntegrationServiceEnvironmentManagedApiDeploymentParameters `pulumi:"deploymentParameters"`
	// The integration service environment reference.
	IntegrationServiceEnvironment *ResourceReference `pulumi:"integrationServiceEnvironment"`
	// The integration service environment name.
	IntegrationServiceEnvironmentName string `pulumi:"integrationServiceEnvironmentName"`
	// The resource location.
	Location *string `pulumi:"location"`
	// The resource group name.
	ResourceGroup string `pulumi:"resourceGroup"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a IntegrationServiceEnvironmentManagedApi resource.
type IntegrationServiceEnvironmentManagedApiArgs struct {
	// The api name.
	ApiName pulumi.StringPtrInput
	// The integration service environment managed api deployment parameters.
	DeploymentParameters IntegrationServiceEnvironmentManagedApiDeploymentParametersPtrInput
	// The integration service environment reference.
	IntegrationServiceEnvironment ResourceReferencePtrInput
	// The integration service environment name.
	IntegrationServiceEnvironmentName pulumi.StringInput
	// The resource location.
	Location pulumi.StringPtrInput
	// The resource group name.
	ResourceGroup pulumi.StringInput
	// The resource tags.
	Tags pulumi.StringMapInput
}

func (IntegrationServiceEnvironmentManagedApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationServiceEnvironmentManagedApiArgs)(nil)).Elem()
}

type IntegrationServiceEnvironmentManagedApiInput interface {
	pulumi.Input

	ToIntegrationServiceEnvironmentManagedApiOutput() IntegrationServiceEnvironmentManagedApiOutput
	ToIntegrationServiceEnvironmentManagedApiOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentManagedApiOutput
}

func (*IntegrationServiceEnvironmentManagedApi) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationServiceEnvironmentManagedApi)(nil)).Elem()
}

func (i *IntegrationServiceEnvironmentManagedApi) ToIntegrationServiceEnvironmentManagedApiOutput() IntegrationServiceEnvironmentManagedApiOutput {
	return i.ToIntegrationServiceEnvironmentManagedApiOutputWithContext(context.Background())
}

func (i *IntegrationServiceEnvironmentManagedApi) ToIntegrationServiceEnvironmentManagedApiOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentManagedApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationServiceEnvironmentManagedApiOutput)
}

type IntegrationServiceEnvironmentManagedApiOutput struct{ *pulumi.OutputState }

func (IntegrationServiceEnvironmentManagedApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationServiceEnvironmentManagedApi)(nil)).Elem()
}

func (o IntegrationServiceEnvironmentManagedApiOutput) ToIntegrationServiceEnvironmentManagedApiOutput() IntegrationServiceEnvironmentManagedApiOutput {
	return o
}

func (o IntegrationServiceEnvironmentManagedApiOutput) ToIntegrationServiceEnvironmentManagedApiOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentManagedApiOutput {
	return o
}

// The API definition.
func (o IntegrationServiceEnvironmentManagedApiOutput) ApiDefinitionUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentManagedApi) pulumi.StringOutput { return v.ApiDefinitionUrl }).(pulumi.StringOutput)
}

// The api definitions.
func (o IntegrationServiceEnvironmentManagedApiOutput) ApiDefinitions() ApiResourceDefinitionsResponseOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentManagedApi) ApiResourceDefinitionsResponseOutput {
		return v.ApiDefinitions
	}).(ApiResourceDefinitionsResponseOutput)
}

// The backend service.
func (o IntegrationServiceEnvironmentManagedApiOutput) BackendService() ApiResourceBackendServiceResponseOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentManagedApi) ApiResourceBackendServiceResponseOutput {
		return v.BackendService
	}).(ApiResourceBackendServiceResponseOutput)
}

// The capabilities.
func (o IntegrationServiceEnvironmentManagedApiOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentManagedApi) pulumi.StringArrayOutput { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// The category.
func (o IntegrationServiceEnvironmentManagedApiOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentManagedApi) pulumi.StringOutput { return v.Category }).(pulumi.StringOutput)
}

// The connection parameters.
func (o IntegrationServiceEnvironmentManagedApiOutput) ConnectionParameters() pulumi.MapOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentManagedApi) pulumi.MapOutput { return v.ConnectionParameters }).(pulumi.MapOutput)
}

// The integration service environment managed api deployment parameters.
func (o IntegrationServiceEnvironmentManagedApiOutput) DeploymentParameters() IntegrationServiceEnvironmentManagedApiDeploymentParametersResponsePtrOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentManagedApi) IntegrationServiceEnvironmentManagedApiDeploymentParametersResponsePtrOutput {
		return v.DeploymentParameters
	}).(IntegrationServiceEnvironmentManagedApiDeploymentParametersResponsePtrOutput)
}

// The api general information.
func (o IntegrationServiceEnvironmentManagedApiOutput) GeneralInformation() ApiResourceGeneralInformationResponseOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentManagedApi) ApiResourceGeneralInformationResponseOutput {
		return v.GeneralInformation
	}).(ApiResourceGeneralInformationResponseOutput)
}

// The integration service environment reference.
func (o IntegrationServiceEnvironmentManagedApiOutput) IntegrationServiceEnvironment() ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentManagedApi) ResourceReferenceResponsePtrOutput {
		return v.IntegrationServiceEnvironment
	}).(ResourceReferenceResponsePtrOutput)
}

// The resource location.
func (o IntegrationServiceEnvironmentManagedApiOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentManagedApi) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The metadata.
func (o IntegrationServiceEnvironmentManagedApiOutput) Metadata() ApiResourceMetadataResponseOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentManagedApi) ApiResourceMetadataResponseOutput { return v.Metadata }).(ApiResourceMetadataResponseOutput)
}

// Gets the resource name.
func (o IntegrationServiceEnvironmentManagedApiOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentManagedApi) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The policies for the API.
func (o IntegrationServiceEnvironmentManagedApiOutput) Policies() ApiResourcePoliciesResponseOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentManagedApi) ApiResourcePoliciesResponseOutput { return v.Policies }).(ApiResourcePoliciesResponseOutput)
}

// The provisioning state.
func (o IntegrationServiceEnvironmentManagedApiOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentManagedApi) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The runtime urls.
func (o IntegrationServiceEnvironmentManagedApiOutput) RuntimeUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentManagedApi) pulumi.StringArrayOutput { return v.RuntimeUrls }).(pulumi.StringArrayOutput)
}

// The resource tags.
func (o IntegrationServiceEnvironmentManagedApiOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentManagedApi) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Gets the resource type.
func (o IntegrationServiceEnvironmentManagedApiOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentManagedApi) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(IntegrationServiceEnvironmentManagedApiOutput{})
}
