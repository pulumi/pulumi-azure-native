// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package logic

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The integration account.
// API Version: 2019-05-01.
type IntegrationAccount struct {
	pulumi.CustomResourceState

	// The integration service environment.
	IntegrationServiceEnvironment ResourceReferenceResponsePtrOutput `pulumi:"integrationServiceEnvironment"`
	// The resource location.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Gets the resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The sku.
	Sku IntegrationAccountSkuResponsePtrOutput `pulumi:"sku"`
	// The workflow state.
	State pulumi.StringPtrOutput `pulumi:"state"`
	// The resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Gets the resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewIntegrationAccount registers a new resource with the given unique name, arguments, and options.
func NewIntegrationAccount(ctx *pulumi.Context,
	name string, args *IntegrationAccountArgs, opts ...pulumi.ResourceOption) (*IntegrationAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:logic/v20150801preview:IntegrationAccount"),
		},
		{
			Type: pulumi.String("azure-native:logic/v20160601:IntegrationAccount"),
		},
		{
			Type: pulumi.String("azure-native:logic/v20180701preview:IntegrationAccount"),
		},
		{
			Type: pulumi.String("azure-native:logic/v20190501:IntegrationAccount"),
		},
	})
	opts = append(opts, aliases)
	var resource IntegrationAccount
	err := ctx.RegisterResource("azure-native:logic:IntegrationAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegrationAccount gets an existing IntegrationAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegrationAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationAccountState, opts ...pulumi.ResourceOption) (*IntegrationAccount, error) {
	var resource IntegrationAccount
	err := ctx.ReadResource("azure-native:logic:IntegrationAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IntegrationAccount resources.
type integrationAccountState struct {
}

type IntegrationAccountState struct {
}

func (IntegrationAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationAccountState)(nil)).Elem()
}

type integrationAccountArgs struct {
	// The integration account name.
	IntegrationAccountName *string `pulumi:"integrationAccountName"`
	// The integration service environment.
	IntegrationServiceEnvironment *ResourceReference `pulumi:"integrationServiceEnvironment"`
	// The resource location.
	Location *string `pulumi:"location"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The sku.
	Sku *IntegrationAccountSku `pulumi:"sku"`
	// The workflow state.
	State *string `pulumi:"state"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a IntegrationAccount resource.
type IntegrationAccountArgs struct {
	// The integration account name.
	IntegrationAccountName pulumi.StringPtrInput
	// The integration service environment.
	IntegrationServiceEnvironment ResourceReferencePtrInput
	// The resource location.
	Location pulumi.StringPtrInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
	// The sku.
	Sku IntegrationAccountSkuPtrInput
	// The workflow state.
	State pulumi.StringPtrInput
	// The resource tags.
	Tags pulumi.StringMapInput
}

func (IntegrationAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationAccountArgs)(nil)).Elem()
}

type IntegrationAccountInput interface {
	pulumi.Input

	ToIntegrationAccountOutput() IntegrationAccountOutput
	ToIntegrationAccountOutputWithContext(ctx context.Context) IntegrationAccountOutput
}

func (*IntegrationAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccount)(nil)).Elem()
}

func (i *IntegrationAccount) ToIntegrationAccountOutput() IntegrationAccountOutput {
	return i.ToIntegrationAccountOutputWithContext(context.Background())
}

func (i *IntegrationAccount) ToIntegrationAccountOutputWithContext(ctx context.Context) IntegrationAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountOutput)
}

type IntegrationAccountOutput struct{ *pulumi.OutputState }

func (IntegrationAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccount)(nil)).Elem()
}

func (o IntegrationAccountOutput) ToIntegrationAccountOutput() IntegrationAccountOutput {
	return o
}

func (o IntegrationAccountOutput) ToIntegrationAccountOutputWithContext(ctx context.Context) IntegrationAccountOutput {
	return o
}

// The integration service environment.
func (o IntegrationAccountOutput) IntegrationServiceEnvironment() ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v *IntegrationAccount) ResourceReferenceResponsePtrOutput { return v.IntegrationServiceEnvironment }).(ResourceReferenceResponsePtrOutput)
}

// The resource location.
func (o IntegrationAccountOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccount) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Gets the resource name.
func (o IntegrationAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationAccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The sku.
func (o IntegrationAccountOutput) Sku() IntegrationAccountSkuResponsePtrOutput {
	return o.ApplyT(func(v *IntegrationAccount) IntegrationAccountSkuResponsePtrOutput { return v.Sku }).(IntegrationAccountSkuResponsePtrOutput)
}

// The workflow state.
func (o IntegrationAccountOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccount) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

// The resource tags.
func (o IntegrationAccountOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IntegrationAccount) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Gets the resource type.
func (o IntegrationAccountOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationAccount) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(IntegrationAccountOutput{})
}
