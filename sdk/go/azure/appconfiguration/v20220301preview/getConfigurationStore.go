// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220301preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The configuration store along with all resource properties. The Configuration Store will have all information to begin utilizing it.
func LookupConfigurationStore(ctx *pulumi.Context, args *LookupConfigurationStoreArgs, opts ...pulumi.InvokeOption) (*LookupConfigurationStoreResult, error) {
	var rv LookupConfigurationStoreResult
	err := ctx.Invoke("azure-native:appconfiguration/v20220301preview:getConfigurationStore", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupConfigurationStoreArgs struct {
	// The name of the configuration store.
	ConfigStoreName string `pulumi:"configStoreName"`
	// The name of the resource group to which the container registry belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The configuration store along with all resource properties. The Configuration Store will have all information to begin utilizing it.
type LookupConfigurationStoreResult struct {
	// The creation date of configuration store.
	CreationDate string `pulumi:"creationDate"`
	// Disables all authentication methods other than AAD authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Property specifying whether protection against purge is enabled for this configuration store.
	EnablePurgeProtection *bool `pulumi:"enablePurgeProtection"`
	// The encryption settings of the configuration store.
	Encryption *EncryptionPropertiesResponse `pulumi:"encryption"`
	// The DNS endpoint where the configuration store API will be available.
	Endpoint string `pulumi:"endpoint"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The managed identity information, if configured.
	Identity *ResourceIdentityResponse `pulumi:"identity"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The list of private endpoint connections that are set up for this resource.
	PrivateEndpointConnections []PrivateEndpointConnectionReferenceResponse `pulumi:"privateEndpointConnections"`
	// The provisioning state of the configuration store.
	ProvisioningState string `pulumi:"provisioningState"`
	// Control permission for data plane traffic coming from public networks while private endpoint is enabled.
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// The sku of the configuration store.
	Sku SkuResponse `pulumi:"sku"`
	// The amount of time in days that the configuration store will be retained when it is soft deleted.
	SoftDeleteRetentionInDays *int `pulumi:"softDeleteRetentionInDays"`
	// Resource system metadata.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupConfigurationStoreResult
func (val *LookupConfigurationStoreResult) Defaults() *LookupConfigurationStoreResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.DisableLocalAuth) {
		disableLocalAuth_ := false
		tmp.DisableLocalAuth = &disableLocalAuth_
	}
	if isZero(tmp.EnablePurgeProtection) {
		enablePurgeProtection_ := false
		tmp.EnablePurgeProtection = &enablePurgeProtection_
	}
	if isZero(tmp.SoftDeleteRetentionInDays) {
		softDeleteRetentionInDays_ := 7
		tmp.SoftDeleteRetentionInDays = &softDeleteRetentionInDays_
	}
	return &tmp
}

func LookupConfigurationStoreOutput(ctx *pulumi.Context, args LookupConfigurationStoreOutputArgs, opts ...pulumi.InvokeOption) LookupConfigurationStoreResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConfigurationStoreResult, error) {
			args := v.(LookupConfigurationStoreArgs)
			r, err := LookupConfigurationStore(ctx, &args, opts...)
			var s LookupConfigurationStoreResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConfigurationStoreResultOutput)
}

type LookupConfigurationStoreOutputArgs struct {
	// The name of the configuration store.
	ConfigStoreName pulumi.StringInput `pulumi:"configStoreName"`
	// The name of the resource group to which the container registry belongs.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupConfigurationStoreOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationStoreArgs)(nil)).Elem()
}

// The configuration store along with all resource properties. The Configuration Store will have all information to begin utilizing it.
type LookupConfigurationStoreResultOutput struct{ *pulumi.OutputState }

func (LookupConfigurationStoreResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationStoreResult)(nil)).Elem()
}

func (o LookupConfigurationStoreResultOutput) ToLookupConfigurationStoreResultOutput() LookupConfigurationStoreResultOutput {
	return o
}

func (o LookupConfigurationStoreResultOutput) ToLookupConfigurationStoreResultOutputWithContext(ctx context.Context) LookupConfigurationStoreResultOutput {
	return o
}

// The creation date of configuration store.
func (o LookupConfigurationStoreResultOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) string { return v.CreationDate }).(pulumi.StringOutput)
}

// Disables all authentication methods other than AAD authentication.
func (o LookupConfigurationStoreResultOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// Property specifying whether protection against purge is enabled for this configuration store.
func (o LookupConfigurationStoreResultOutput) EnablePurgeProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) *bool { return v.EnablePurgeProtection }).(pulumi.BoolPtrOutput)
}

// The encryption settings of the configuration store.
func (o LookupConfigurationStoreResultOutput) Encryption() EncryptionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) *EncryptionPropertiesResponse { return v.Encryption }).(EncryptionPropertiesResponsePtrOutput)
}

// The DNS endpoint where the configuration store API will be available.
func (o LookupConfigurationStoreResultOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) string { return v.Endpoint }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupConfigurationStoreResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) string { return v.Id }).(pulumi.StringOutput)
}

// The managed identity information, if configured.
func (o LookupConfigurationStoreResultOutput) Identity() ResourceIdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) *ResourceIdentityResponse { return v.Identity }).(ResourceIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o LookupConfigurationStoreResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupConfigurationStoreResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) string { return v.Name }).(pulumi.StringOutput)
}

// The list of private endpoint connections that are set up for this resource.
func (o LookupConfigurationStoreResultOutput) PrivateEndpointConnections() PrivateEndpointConnectionReferenceResponseArrayOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) []PrivateEndpointConnectionReferenceResponse {
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionReferenceResponseArrayOutput)
}

// The provisioning state of the configuration store.
func (o LookupConfigurationStoreResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Control permission for data plane traffic coming from public networks while private endpoint is enabled.
func (o LookupConfigurationStoreResultOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// The sku of the configuration store.
func (o LookupConfigurationStoreResultOutput) Sku() SkuResponseOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) SkuResponse { return v.Sku }).(SkuResponseOutput)
}

// The amount of time in days that the configuration store will be retained when it is soft deleted.
func (o LookupConfigurationStoreResultOutput) SoftDeleteRetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) *int { return v.SoftDeleteRetentionInDays }).(pulumi.IntPtrOutput)
}

// Resource system metadata.
func (o LookupConfigurationStoreResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupConfigurationStoreResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupConfigurationStoreResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfigurationStoreResultOutput{})
}
