// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210315

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents an instance of a orchestrator.
type OrchestratorInstanceServiceDetails struct {
	pulumi.CustomResourceState

	// K8s APIServer url. Either one of apiServerEndpoint or privateLinkResourceId can be specified
	ApiServerEndpoint pulumi.StringPtrOutput `pulumi:"apiServerEndpoint"`
	// RootCA certificate of kubernetes cluster base64 encoded
	ClusterRootCA pulumi.StringPtrOutput `pulumi:"clusterRootCA"`
	// Properties of the controller.
	ControllerDetails ControllerDetailsResponseOutput `pulumi:"controllerDetails"`
	// The identity of the orchestrator
	Identity OrchestratorIdentityResponsePtrOutput `pulumi:"identity"`
	// The kind of workbook. Choices are user and shared.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Location of the resource.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// AAD ID used with apiserver
	OrchestratorAppId pulumi.StringPtrOutput `pulumi:"orchestratorAppId"`
	// TenantID of server App ID
	OrchestratorTenantId pulumi.StringPtrOutput `pulumi:"orchestratorTenantId"`
	// private link arm resource id. Either one of apiServerEndpoint or privateLinkResourceId can be specified
	PrivateLinkResourceId pulumi.StringPtrOutput `pulumi:"privateLinkResourceId"`
	// The current state of orchestratorInstance resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Resource guid.
	ResourceGuid pulumi.StringOutput `pulumi:"resourceGuid"`
	// The resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewOrchestratorInstanceServiceDetails registers a new resource with the given unique name, arguments, and options.
func NewOrchestratorInstanceServiceDetails(ctx *pulumi.Context,
	name string, args *OrchestratorInstanceServiceDetailsArgs, opts ...pulumi.ResourceOption) (*OrchestratorInstanceServiceDetails, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ControllerDetails == nil {
		return nil, errors.New("invalid value for required argument 'ControllerDetails'")
	}
	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:delegatednetwork:OrchestratorInstanceServiceDetails"),
		},
		{
			Type: pulumi.String("azure-native:delegatednetwork/v20200808preview:OrchestratorInstanceServiceDetails"),
		},
	})
	opts = append(opts, aliases)
	var resource OrchestratorInstanceServiceDetails
	err := ctx.RegisterResource("azure-native:delegatednetwork/v20210315:OrchestratorInstanceServiceDetails", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrchestratorInstanceServiceDetails gets an existing OrchestratorInstanceServiceDetails resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrchestratorInstanceServiceDetails(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrchestratorInstanceServiceDetailsState, opts ...pulumi.ResourceOption) (*OrchestratorInstanceServiceDetails, error) {
	var resource OrchestratorInstanceServiceDetails
	err := ctx.ReadResource("azure-native:delegatednetwork/v20210315:OrchestratorInstanceServiceDetails", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrchestratorInstanceServiceDetails resources.
type orchestratorInstanceServiceDetailsState struct {
}

type OrchestratorInstanceServiceDetailsState struct {
}

func (OrchestratorInstanceServiceDetailsState) ElementType() reflect.Type {
	return reflect.TypeOf((*orchestratorInstanceServiceDetailsState)(nil)).Elem()
}

type orchestratorInstanceServiceDetailsArgs struct {
	// K8s APIServer url. Either one of apiServerEndpoint or privateLinkResourceId can be specified
	ApiServerEndpoint *string `pulumi:"apiServerEndpoint"`
	// RootCA certificate of kubernetes cluster base64 encoded
	ClusterRootCA *string `pulumi:"clusterRootCA"`
	// Properties of the controller.
	ControllerDetails ControllerDetailsType `pulumi:"controllerDetails"`
	// The identity of the orchestrator
	Identity *OrchestratorIdentity `pulumi:"identity"`
	// The kind of workbook. Choices are user and shared.
	Kind string `pulumi:"kind"`
	// Location of the resource.
	Location *string `pulumi:"location"`
	// AAD ID used with apiserver
	OrchestratorAppId *string `pulumi:"orchestratorAppId"`
	// TenantID of server App ID
	OrchestratorTenantId *string `pulumi:"orchestratorTenantId"`
	// private link arm resource id. Either one of apiServerEndpoint or privateLinkResourceId can be specified
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the resource. It must be a minimum of 3 characters, and a maximum of 63.
	ResourceName *string `pulumi:"resourceName"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a OrchestratorInstanceServiceDetails resource.
type OrchestratorInstanceServiceDetailsArgs struct {
	// K8s APIServer url. Either one of apiServerEndpoint or privateLinkResourceId can be specified
	ApiServerEndpoint pulumi.StringPtrInput
	// RootCA certificate of kubernetes cluster base64 encoded
	ClusterRootCA pulumi.StringPtrInput
	// Properties of the controller.
	ControllerDetails ControllerDetailsTypeInput
	// The identity of the orchestrator
	Identity OrchestratorIdentityPtrInput
	// The kind of workbook. Choices are user and shared.
	Kind pulumi.StringInput
	// Location of the resource.
	Location pulumi.StringPtrInput
	// AAD ID used with apiserver
	OrchestratorAppId pulumi.StringPtrInput
	// TenantID of server App ID
	OrchestratorTenantId pulumi.StringPtrInput
	// private link arm resource id. Either one of apiServerEndpoint or privateLinkResourceId can be specified
	PrivateLinkResourceId pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the resource. It must be a minimum of 3 characters, and a maximum of 63.
	ResourceName pulumi.StringPtrInput
	// The resource tags.
	Tags pulumi.StringMapInput
}

func (OrchestratorInstanceServiceDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*orchestratorInstanceServiceDetailsArgs)(nil)).Elem()
}

type OrchestratorInstanceServiceDetailsInput interface {
	pulumi.Input

	ToOrchestratorInstanceServiceDetailsOutput() OrchestratorInstanceServiceDetailsOutput
	ToOrchestratorInstanceServiceDetailsOutputWithContext(ctx context.Context) OrchestratorInstanceServiceDetailsOutput
}

func (*OrchestratorInstanceServiceDetails) ElementType() reflect.Type {
	return reflect.TypeOf((**OrchestratorInstanceServiceDetails)(nil)).Elem()
}

func (i *OrchestratorInstanceServiceDetails) ToOrchestratorInstanceServiceDetailsOutput() OrchestratorInstanceServiceDetailsOutput {
	return i.ToOrchestratorInstanceServiceDetailsOutputWithContext(context.Background())
}

func (i *OrchestratorInstanceServiceDetails) ToOrchestratorInstanceServiceDetailsOutputWithContext(ctx context.Context) OrchestratorInstanceServiceDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrchestratorInstanceServiceDetailsOutput)
}

type OrchestratorInstanceServiceDetailsOutput struct{ *pulumi.OutputState }

func (OrchestratorInstanceServiceDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrchestratorInstanceServiceDetails)(nil)).Elem()
}

func (o OrchestratorInstanceServiceDetailsOutput) ToOrchestratorInstanceServiceDetailsOutput() OrchestratorInstanceServiceDetailsOutput {
	return o
}

func (o OrchestratorInstanceServiceDetailsOutput) ToOrchestratorInstanceServiceDetailsOutputWithContext(ctx context.Context) OrchestratorInstanceServiceDetailsOutput {
	return o
}

// K8s APIServer url. Either one of apiServerEndpoint or privateLinkResourceId can be specified
func (o OrchestratorInstanceServiceDetailsOutput) ApiServerEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrchestratorInstanceServiceDetails) pulumi.StringPtrOutput { return v.ApiServerEndpoint }).(pulumi.StringPtrOutput)
}

// RootCA certificate of kubernetes cluster base64 encoded
func (o OrchestratorInstanceServiceDetailsOutput) ClusterRootCA() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrchestratorInstanceServiceDetails) pulumi.StringPtrOutput { return v.ClusterRootCA }).(pulumi.StringPtrOutput)
}

// Properties of the controller.
func (o OrchestratorInstanceServiceDetailsOutput) ControllerDetails() ControllerDetailsResponseOutput {
	return o.ApplyT(func(v *OrchestratorInstanceServiceDetails) ControllerDetailsResponseOutput {
		return v.ControllerDetails
	}).(ControllerDetailsResponseOutput)
}

// The identity of the orchestrator
func (o OrchestratorInstanceServiceDetailsOutput) Identity() OrchestratorIdentityResponsePtrOutput {
	return o.ApplyT(func(v *OrchestratorInstanceServiceDetails) OrchestratorIdentityResponsePtrOutput { return v.Identity }).(OrchestratorIdentityResponsePtrOutput)
}

// The kind of workbook. Choices are user and shared.
func (o OrchestratorInstanceServiceDetailsOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *OrchestratorInstanceServiceDetails) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Location of the resource.
func (o OrchestratorInstanceServiceDetailsOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrchestratorInstanceServiceDetails) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o OrchestratorInstanceServiceDetailsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OrchestratorInstanceServiceDetails) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// AAD ID used with apiserver
func (o OrchestratorInstanceServiceDetailsOutput) OrchestratorAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrchestratorInstanceServiceDetails) pulumi.StringPtrOutput { return v.OrchestratorAppId }).(pulumi.StringPtrOutput)
}

// TenantID of server App ID
func (o OrchestratorInstanceServiceDetailsOutput) OrchestratorTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrchestratorInstanceServiceDetails) pulumi.StringPtrOutput { return v.OrchestratorTenantId }).(pulumi.StringPtrOutput)
}

// private link arm resource id. Either one of apiServerEndpoint or privateLinkResourceId can be specified
func (o OrchestratorInstanceServiceDetailsOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrchestratorInstanceServiceDetails) pulumi.StringPtrOutput { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// The current state of orchestratorInstance resource.
func (o OrchestratorInstanceServiceDetailsOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *OrchestratorInstanceServiceDetails) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource guid.
func (o OrchestratorInstanceServiceDetailsOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v *OrchestratorInstanceServiceDetails) pulumi.StringOutput { return v.ResourceGuid }).(pulumi.StringOutput)
}

// The resource tags.
func (o OrchestratorInstanceServiceDetailsOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrchestratorInstanceServiceDetails) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of resource.
func (o OrchestratorInstanceServiceDetailsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *OrchestratorInstanceServiceDetails) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(OrchestratorInstanceServiceDetailsOutput{})
}
