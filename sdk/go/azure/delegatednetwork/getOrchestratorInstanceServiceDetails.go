// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package delegatednetwork

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents an instance of a orchestrator.
// API Version: 2021-03-15.
func LookupOrchestratorInstanceServiceDetails(ctx *pulumi.Context, args *LookupOrchestratorInstanceServiceDetailsArgs, opts ...pulumi.InvokeOption) (*LookupOrchestratorInstanceServiceDetailsResult, error) {
	var rv LookupOrchestratorInstanceServiceDetailsResult
	err := ctx.Invoke("azure-native:delegatednetwork:getOrchestratorInstanceServiceDetails", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupOrchestratorInstanceServiceDetailsArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the resource. It must be a minimum of 3 characters, and a maximum of 63.
	ResourceName string `pulumi:"resourceName"`
}

// Represents an instance of a orchestrator.
type LookupOrchestratorInstanceServiceDetailsResult struct {
	// K8s APIServer url. Either one of apiServerEndpoint or privateLinkResourceId can be specified
	ApiServerEndpoint *string `pulumi:"apiServerEndpoint"`
	// RootCA certificate of kubernetes cluster base64 encoded
	ClusterRootCA *string `pulumi:"clusterRootCA"`
	// Properties of the controller.
	ControllerDetails ControllerDetailsResponse `pulumi:"controllerDetails"`
	// An identifier that represents the resource.
	Id string `pulumi:"id"`
	// The identity of the orchestrator
	Identity *OrchestratorIdentityResponse `pulumi:"identity"`
	// The kind of workbook. Choices are user and shared.
	Kind string `pulumi:"kind"`
	// Location of the resource.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// AAD ID used with apiserver
	OrchestratorAppId *string `pulumi:"orchestratorAppId"`
	// TenantID of server App ID
	OrchestratorTenantId *string `pulumi:"orchestratorTenantId"`
	// private link arm resource id. Either one of apiServerEndpoint or privateLinkResourceId can be specified
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// The current state of orchestratorInstance resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource guid.
	ResourceGuid string `pulumi:"resourceGuid"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of resource.
	Type string `pulumi:"type"`
}

func LookupOrchestratorInstanceServiceDetailsOutput(ctx *pulumi.Context, args LookupOrchestratorInstanceServiceDetailsOutputArgs, opts ...pulumi.InvokeOption) LookupOrchestratorInstanceServiceDetailsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOrchestratorInstanceServiceDetailsResult, error) {
			args := v.(LookupOrchestratorInstanceServiceDetailsArgs)
			r, err := LookupOrchestratorInstanceServiceDetails(ctx, &args, opts...)
			var s LookupOrchestratorInstanceServiceDetailsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOrchestratorInstanceServiceDetailsResultOutput)
}

type LookupOrchestratorInstanceServiceDetailsOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the resource. It must be a minimum of 3 characters, and a maximum of 63.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
}

func (LookupOrchestratorInstanceServiceDetailsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrchestratorInstanceServiceDetailsArgs)(nil)).Elem()
}

// Represents an instance of a orchestrator.
type LookupOrchestratorInstanceServiceDetailsResultOutput struct{ *pulumi.OutputState }

func (LookupOrchestratorInstanceServiceDetailsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrchestratorInstanceServiceDetailsResult)(nil)).Elem()
}

func (o LookupOrchestratorInstanceServiceDetailsResultOutput) ToLookupOrchestratorInstanceServiceDetailsResultOutput() LookupOrchestratorInstanceServiceDetailsResultOutput {
	return o
}

func (o LookupOrchestratorInstanceServiceDetailsResultOutput) ToLookupOrchestratorInstanceServiceDetailsResultOutputWithContext(ctx context.Context) LookupOrchestratorInstanceServiceDetailsResultOutput {
	return o
}

// K8s APIServer url. Either one of apiServerEndpoint or privateLinkResourceId can be specified
func (o LookupOrchestratorInstanceServiceDetailsResultOutput) ApiServerEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrchestratorInstanceServiceDetailsResult) *string { return v.ApiServerEndpoint }).(pulumi.StringPtrOutput)
}

// RootCA certificate of kubernetes cluster base64 encoded
func (o LookupOrchestratorInstanceServiceDetailsResultOutput) ClusterRootCA() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrchestratorInstanceServiceDetailsResult) *string { return v.ClusterRootCA }).(pulumi.StringPtrOutput)
}

// Properties of the controller.
func (o LookupOrchestratorInstanceServiceDetailsResultOutput) ControllerDetails() ControllerDetailsResponseOutput {
	return o.ApplyT(func(v LookupOrchestratorInstanceServiceDetailsResult) ControllerDetailsResponse {
		return v.ControllerDetails
	}).(ControllerDetailsResponseOutput)
}

// An identifier that represents the resource.
func (o LookupOrchestratorInstanceServiceDetailsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrchestratorInstanceServiceDetailsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The identity of the orchestrator
func (o LookupOrchestratorInstanceServiceDetailsResultOutput) Identity() OrchestratorIdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupOrchestratorInstanceServiceDetailsResult) *OrchestratorIdentityResponse {
		return v.Identity
	}).(OrchestratorIdentityResponsePtrOutput)
}

// The kind of workbook. Choices are user and shared.
func (o LookupOrchestratorInstanceServiceDetailsResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrchestratorInstanceServiceDetailsResult) string { return v.Kind }).(pulumi.StringOutput)
}

// Location of the resource.
func (o LookupOrchestratorInstanceServiceDetailsResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrchestratorInstanceServiceDetailsResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o LookupOrchestratorInstanceServiceDetailsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrchestratorInstanceServiceDetailsResult) string { return v.Name }).(pulumi.StringOutput)
}

// AAD ID used with apiserver
func (o LookupOrchestratorInstanceServiceDetailsResultOutput) OrchestratorAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrchestratorInstanceServiceDetailsResult) *string { return v.OrchestratorAppId }).(pulumi.StringPtrOutput)
}

// TenantID of server App ID
func (o LookupOrchestratorInstanceServiceDetailsResultOutput) OrchestratorTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrchestratorInstanceServiceDetailsResult) *string { return v.OrchestratorTenantId }).(pulumi.StringPtrOutput)
}

// private link arm resource id. Either one of apiServerEndpoint or privateLinkResourceId can be specified
func (o LookupOrchestratorInstanceServiceDetailsResultOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrchestratorInstanceServiceDetailsResult) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// The current state of orchestratorInstance resource.
func (o LookupOrchestratorInstanceServiceDetailsResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrchestratorInstanceServiceDetailsResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource guid.
func (o LookupOrchestratorInstanceServiceDetailsResultOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrchestratorInstanceServiceDetailsResult) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// The resource tags.
func (o LookupOrchestratorInstanceServiceDetailsResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupOrchestratorInstanceServiceDetailsResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of resource.
func (o LookupOrchestratorInstanceServiceDetailsResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrchestratorInstanceServiceDetailsResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOrchestratorInstanceServiceDetailsResultOutput{})
}
