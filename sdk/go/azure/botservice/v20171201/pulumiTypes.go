// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20171201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The parameters to provide for the Bot.
type BotProperties struct {
	// The description of the bot
	Description *string `pulumi:"description"`
	// The Application Insights key
	DeveloperAppInsightKey *string `pulumi:"developerAppInsightKey"`
	// The Application Insights Api Key
	DeveloperAppInsightsApiKey *string `pulumi:"developerAppInsightsApiKey"`
	// The Application Insights App Id
	DeveloperAppInsightsApplicationId *string `pulumi:"developerAppInsightsApplicationId"`
	// The Name of the bot
	DisplayName string `pulumi:"displayName"`
	// The bot's endpoint
	Endpoint string `pulumi:"endpoint"`
	// The Icon Url of the bot
	IconUrl *string `pulumi:"iconUrl"`
	// Collection of LUIS App Ids
	LuisAppIds []string `pulumi:"luisAppIds"`
	// The LUIS Key
	LuisKey *string `pulumi:"luisKey"`
	// Microsoft App Id for the bot
	MsaAppId string `pulumi:"msaAppId"`
}

// BotPropertiesInput is an input type that accepts BotPropertiesArgs and BotPropertiesOutput values.
// You can construct a concrete instance of `BotPropertiesInput` via:
//
//	BotPropertiesArgs{...}
type BotPropertiesInput interface {
	pulumi.Input

	ToBotPropertiesOutput() BotPropertiesOutput
	ToBotPropertiesOutputWithContext(context.Context) BotPropertiesOutput
}

// The parameters to provide for the Bot.
type BotPropertiesArgs struct {
	// The description of the bot
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Application Insights key
	DeveloperAppInsightKey pulumi.StringPtrInput `pulumi:"developerAppInsightKey"`
	// The Application Insights Api Key
	DeveloperAppInsightsApiKey pulumi.StringPtrInput `pulumi:"developerAppInsightsApiKey"`
	// The Application Insights App Id
	DeveloperAppInsightsApplicationId pulumi.StringPtrInput `pulumi:"developerAppInsightsApplicationId"`
	// The Name of the bot
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The bot's endpoint
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// The Icon Url of the bot
	IconUrl pulumi.StringPtrInput `pulumi:"iconUrl"`
	// Collection of LUIS App Ids
	LuisAppIds pulumi.StringArrayInput `pulumi:"luisAppIds"`
	// The LUIS Key
	LuisKey pulumi.StringPtrInput `pulumi:"luisKey"`
	// Microsoft App Id for the bot
	MsaAppId pulumi.StringInput `pulumi:"msaAppId"`
}

func (BotPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BotProperties)(nil)).Elem()
}

func (i BotPropertiesArgs) ToBotPropertiesOutput() BotPropertiesOutput {
	return i.ToBotPropertiesOutputWithContext(context.Background())
}

func (i BotPropertiesArgs) ToBotPropertiesOutputWithContext(ctx context.Context) BotPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotPropertiesOutput)
}

func (i BotPropertiesArgs) ToBotPropertiesPtrOutput() BotPropertiesPtrOutput {
	return i.ToBotPropertiesPtrOutputWithContext(context.Background())
}

func (i BotPropertiesArgs) ToBotPropertiesPtrOutputWithContext(ctx context.Context) BotPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotPropertiesOutput).ToBotPropertiesPtrOutputWithContext(ctx)
}

// BotPropertiesPtrInput is an input type that accepts BotPropertiesArgs, BotPropertiesPtr and BotPropertiesPtrOutput values.
// You can construct a concrete instance of `BotPropertiesPtrInput` via:
//
//	        BotPropertiesArgs{...}
//
//	or:
//
//	        nil
type BotPropertiesPtrInput interface {
	pulumi.Input

	ToBotPropertiesPtrOutput() BotPropertiesPtrOutput
	ToBotPropertiesPtrOutputWithContext(context.Context) BotPropertiesPtrOutput
}

type botPropertiesPtrType BotPropertiesArgs

func BotPropertiesPtr(v *BotPropertiesArgs) BotPropertiesPtrInput {
	return (*botPropertiesPtrType)(v)
}

func (*botPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BotProperties)(nil)).Elem()
}

func (i *botPropertiesPtrType) ToBotPropertiesPtrOutput() BotPropertiesPtrOutput {
	return i.ToBotPropertiesPtrOutputWithContext(context.Background())
}

func (i *botPropertiesPtrType) ToBotPropertiesPtrOutputWithContext(ctx context.Context) BotPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotPropertiesPtrOutput)
}

// The parameters to provide for the Bot.
type BotPropertiesOutput struct{ *pulumi.OutputState }

func (BotPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BotProperties)(nil)).Elem()
}

func (o BotPropertiesOutput) ToBotPropertiesOutput() BotPropertiesOutput {
	return o
}

func (o BotPropertiesOutput) ToBotPropertiesOutputWithContext(ctx context.Context) BotPropertiesOutput {
	return o
}

func (o BotPropertiesOutput) ToBotPropertiesPtrOutput() BotPropertiesPtrOutput {
	return o.ToBotPropertiesPtrOutputWithContext(context.Background())
}

func (o BotPropertiesOutput) ToBotPropertiesPtrOutputWithContext(ctx context.Context) BotPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BotProperties) *BotProperties {
		return &v
	}).(BotPropertiesPtrOutput)
}

// The description of the bot
func (o BotPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Application Insights key
func (o BotPropertiesOutput) DeveloperAppInsightKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.DeveloperAppInsightKey }).(pulumi.StringPtrOutput)
}

// The Application Insights Api Key
func (o BotPropertiesOutput) DeveloperAppInsightsApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.DeveloperAppInsightsApiKey }).(pulumi.StringPtrOutput)
}

// The Application Insights App Id
func (o BotPropertiesOutput) DeveloperAppInsightsApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.DeveloperAppInsightsApplicationId }).(pulumi.StringPtrOutput)
}

// The Name of the bot
func (o BotPropertiesOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v BotProperties) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The bot's endpoint
func (o BotPropertiesOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v BotProperties) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The Icon Url of the bot
func (o BotPropertiesOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.IconUrl }).(pulumi.StringPtrOutput)
}

// Collection of LUIS App Ids
func (o BotPropertiesOutput) LuisAppIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BotProperties) []string { return v.LuisAppIds }).(pulumi.StringArrayOutput)
}

// The LUIS Key
func (o BotPropertiesOutput) LuisKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotProperties) *string { return v.LuisKey }).(pulumi.StringPtrOutput)
}

// Microsoft App Id for the bot
func (o BotPropertiesOutput) MsaAppId() pulumi.StringOutput {
	return o.ApplyT(func(v BotProperties) string { return v.MsaAppId }).(pulumi.StringOutput)
}

type BotPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BotPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BotProperties)(nil)).Elem()
}

func (o BotPropertiesPtrOutput) ToBotPropertiesPtrOutput() BotPropertiesPtrOutput {
	return o
}

func (o BotPropertiesPtrOutput) ToBotPropertiesPtrOutputWithContext(ctx context.Context) BotPropertiesPtrOutput {
	return o
}

func (o BotPropertiesPtrOutput) Elem() BotPropertiesOutput {
	return o.ApplyT(func(v *BotProperties) BotProperties {
		if v != nil {
			return *v
		}
		var ret BotProperties
		return ret
	}).(BotPropertiesOutput)
}

// The description of the bot
func (o BotPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The Application Insights key
func (o BotPropertiesPtrOutput) DeveloperAppInsightKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeveloperAppInsightKey
	}).(pulumi.StringPtrOutput)
}

// The Application Insights Api Key
func (o BotPropertiesPtrOutput) DeveloperAppInsightsApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeveloperAppInsightsApiKey
	}).(pulumi.StringPtrOutput)
}

// The Application Insights App Id
func (o BotPropertiesPtrOutput) DeveloperAppInsightsApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeveloperAppInsightsApplicationId
	}).(pulumi.StringPtrOutput)
}

// The Name of the bot
func (o BotPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The bot's endpoint
func (o BotPropertiesPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// The Icon Url of the bot
func (o BotPropertiesPtrOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.IconUrl
	}).(pulumi.StringPtrOutput)
}

// Collection of LUIS App Ids
func (o BotPropertiesPtrOutput) LuisAppIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BotProperties) []string {
		if v == nil {
			return nil
		}
		return v.LuisAppIds
	}).(pulumi.StringArrayOutput)
}

// The LUIS Key
func (o BotPropertiesPtrOutput) LuisKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return v.LuisKey
	}).(pulumi.StringPtrOutput)
}

// Microsoft App Id for the bot
func (o BotPropertiesPtrOutput) MsaAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotProperties) *string {
		if v == nil {
			return nil
		}
		return &v.MsaAppId
	}).(pulumi.StringPtrOutput)
}

// The parameters to provide for the Bot.
type BotPropertiesResponse struct {
	// Collection of channels for which the bot is configured
	ConfiguredChannels []string `pulumi:"configuredChannels"`
	// The description of the bot
	Description *string `pulumi:"description"`
	// The Application Insights key
	DeveloperAppInsightKey *string `pulumi:"developerAppInsightKey"`
	// The Application Insights Api Key
	DeveloperAppInsightsApiKey *string `pulumi:"developerAppInsightsApiKey"`
	// The Application Insights App Id
	DeveloperAppInsightsApplicationId *string `pulumi:"developerAppInsightsApplicationId"`
	// The Name of the bot
	DisplayName string `pulumi:"displayName"`
	// Collection of channels for which the bot is enabled
	EnabledChannels []string `pulumi:"enabledChannels"`
	// The bot's endpoint
	Endpoint string `pulumi:"endpoint"`
	// The bot's endpoint version
	EndpointVersion string `pulumi:"endpointVersion"`
	// The Icon Url of the bot
	IconUrl *string `pulumi:"iconUrl"`
	// Collection of LUIS App Ids
	LuisAppIds []string `pulumi:"luisAppIds"`
	// The LUIS Key
	LuisKey *string `pulumi:"luisKey"`
	// Microsoft App Id for the bot
	MsaAppId string `pulumi:"msaAppId"`
}

// The parameters to provide for the Bot.
type BotPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BotPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BotPropertiesResponse)(nil)).Elem()
}

func (o BotPropertiesResponseOutput) ToBotPropertiesResponseOutput() BotPropertiesResponseOutput {
	return o
}

func (o BotPropertiesResponseOutput) ToBotPropertiesResponseOutputWithContext(ctx context.Context) BotPropertiesResponseOutput {
	return o
}

// Collection of channels for which the bot is configured
func (o BotPropertiesResponseOutput) ConfiguredChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BotPropertiesResponse) []string { return v.ConfiguredChannels }).(pulumi.StringArrayOutput)
}

// The description of the bot
func (o BotPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Application Insights key
func (o BotPropertiesResponseOutput) DeveloperAppInsightKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.DeveloperAppInsightKey }).(pulumi.StringPtrOutput)
}

// The Application Insights Api Key
func (o BotPropertiesResponseOutput) DeveloperAppInsightsApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.DeveloperAppInsightsApiKey }).(pulumi.StringPtrOutput)
}

// The Application Insights App Id
func (o BotPropertiesResponseOutput) DeveloperAppInsightsApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.DeveloperAppInsightsApplicationId }).(pulumi.StringPtrOutput)
}

// The Name of the bot
func (o BotPropertiesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v BotPropertiesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Collection of channels for which the bot is enabled
func (o BotPropertiesResponseOutput) EnabledChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BotPropertiesResponse) []string { return v.EnabledChannels }).(pulumi.StringArrayOutput)
}

// The bot's endpoint
func (o BotPropertiesResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v BotPropertiesResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The bot's endpoint version
func (o BotPropertiesResponseOutput) EndpointVersion() pulumi.StringOutput {
	return o.ApplyT(func(v BotPropertiesResponse) string { return v.EndpointVersion }).(pulumi.StringOutput)
}

// The Icon Url of the bot
func (o BotPropertiesResponseOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.IconUrl }).(pulumi.StringPtrOutput)
}

// Collection of LUIS App Ids
func (o BotPropertiesResponseOutput) LuisAppIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BotPropertiesResponse) []string { return v.LuisAppIds }).(pulumi.StringArrayOutput)
}

// The LUIS Key
func (o BotPropertiesResponseOutput) LuisKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotPropertiesResponse) *string { return v.LuisKey }).(pulumi.StringPtrOutput)
}

// Microsoft App Id for the bot
func (o BotPropertiesResponseOutput) MsaAppId() pulumi.StringOutput {
	return o.ApplyT(func(v BotPropertiesResponse) string { return v.MsaAppId }).(pulumi.StringOutput)
}

// Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
type ConnectionSettingParameter struct {
	// Key for the Connection Setting Parameter.
	Key *string `pulumi:"key"`
	// Value associated with the Connection Setting Parameter.
	Value *string `pulumi:"value"`
}

// ConnectionSettingParameterInput is an input type that accepts ConnectionSettingParameterArgs and ConnectionSettingParameterOutput values.
// You can construct a concrete instance of `ConnectionSettingParameterInput` via:
//
//	ConnectionSettingParameterArgs{...}
type ConnectionSettingParameterInput interface {
	pulumi.Input

	ToConnectionSettingParameterOutput() ConnectionSettingParameterOutput
	ToConnectionSettingParameterOutputWithContext(context.Context) ConnectionSettingParameterOutput
}

// Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
type ConnectionSettingParameterArgs struct {
	// Key for the Connection Setting Parameter.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value associated with the Connection Setting Parameter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ConnectionSettingParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSettingParameter)(nil)).Elem()
}

func (i ConnectionSettingParameterArgs) ToConnectionSettingParameterOutput() ConnectionSettingParameterOutput {
	return i.ToConnectionSettingParameterOutputWithContext(context.Background())
}

func (i ConnectionSettingParameterArgs) ToConnectionSettingParameterOutputWithContext(ctx context.Context) ConnectionSettingParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSettingParameterOutput)
}

// ConnectionSettingParameterArrayInput is an input type that accepts ConnectionSettingParameterArray and ConnectionSettingParameterArrayOutput values.
// You can construct a concrete instance of `ConnectionSettingParameterArrayInput` via:
//
//	ConnectionSettingParameterArray{ ConnectionSettingParameterArgs{...} }
type ConnectionSettingParameterArrayInput interface {
	pulumi.Input

	ToConnectionSettingParameterArrayOutput() ConnectionSettingParameterArrayOutput
	ToConnectionSettingParameterArrayOutputWithContext(context.Context) ConnectionSettingParameterArrayOutput
}

type ConnectionSettingParameterArray []ConnectionSettingParameterInput

func (ConnectionSettingParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionSettingParameter)(nil)).Elem()
}

func (i ConnectionSettingParameterArray) ToConnectionSettingParameterArrayOutput() ConnectionSettingParameterArrayOutput {
	return i.ToConnectionSettingParameterArrayOutputWithContext(context.Background())
}

func (i ConnectionSettingParameterArray) ToConnectionSettingParameterArrayOutputWithContext(ctx context.Context) ConnectionSettingParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSettingParameterArrayOutput)
}

// Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
type ConnectionSettingParameterOutput struct{ *pulumi.OutputState }

func (ConnectionSettingParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSettingParameter)(nil)).Elem()
}

func (o ConnectionSettingParameterOutput) ToConnectionSettingParameterOutput() ConnectionSettingParameterOutput {
	return o
}

func (o ConnectionSettingParameterOutput) ToConnectionSettingParameterOutputWithContext(ctx context.Context) ConnectionSettingParameterOutput {
	return o
}

// Key for the Connection Setting Parameter.
func (o ConnectionSettingParameterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingParameter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value associated with the Connection Setting Parameter.
func (o ConnectionSettingParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ConnectionSettingParameterArrayOutput struct{ *pulumi.OutputState }

func (ConnectionSettingParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionSettingParameter)(nil)).Elem()
}

func (o ConnectionSettingParameterArrayOutput) ToConnectionSettingParameterArrayOutput() ConnectionSettingParameterArrayOutput {
	return o
}

func (o ConnectionSettingParameterArrayOutput) ToConnectionSettingParameterArrayOutputWithContext(ctx context.Context) ConnectionSettingParameterArrayOutput {
	return o
}

func (o ConnectionSettingParameterArrayOutput) Index(i pulumi.IntInput) ConnectionSettingParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionSettingParameter {
		return vs[0].([]ConnectionSettingParameter)[vs[1].(int)]
	}).(ConnectionSettingParameterOutput)
}

// Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
type ConnectionSettingParameterResponse struct {
	// Key for the Connection Setting Parameter.
	Key *string `pulumi:"key"`
	// Value associated with the Connection Setting Parameter.
	Value *string `pulumi:"value"`
}

// Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
type ConnectionSettingParameterResponseOutput struct{ *pulumi.OutputState }

func (ConnectionSettingParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSettingParameterResponse)(nil)).Elem()
}

func (o ConnectionSettingParameterResponseOutput) ToConnectionSettingParameterResponseOutput() ConnectionSettingParameterResponseOutput {
	return o
}

func (o ConnectionSettingParameterResponseOutput) ToConnectionSettingParameterResponseOutputWithContext(ctx context.Context) ConnectionSettingParameterResponseOutput {
	return o
}

// Key for the Connection Setting Parameter.
func (o ConnectionSettingParameterResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingParameterResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value associated with the Connection Setting Parameter.
func (o ConnectionSettingParameterResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingParameterResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ConnectionSettingParameterResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectionSettingParameterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionSettingParameterResponse)(nil)).Elem()
}

func (o ConnectionSettingParameterResponseArrayOutput) ToConnectionSettingParameterResponseArrayOutput() ConnectionSettingParameterResponseArrayOutput {
	return o
}

func (o ConnectionSettingParameterResponseArrayOutput) ToConnectionSettingParameterResponseArrayOutputWithContext(ctx context.Context) ConnectionSettingParameterResponseArrayOutput {
	return o
}

func (o ConnectionSettingParameterResponseArrayOutput) Index(i pulumi.IntInput) ConnectionSettingParameterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionSettingParameterResponse {
		return vs[0].([]ConnectionSettingParameterResponse)[vs[1].(int)]
	}).(ConnectionSettingParameterResponseOutput)
}

// Properties for a Connection Setting Item
type ConnectionSettingProperties struct {
	// Client Id associated with the Connection Setting.
	ClientId *string `pulumi:"clientId"`
	// Client Secret associated with the Connection Setting
	ClientSecret *string `pulumi:"clientSecret"`
	// Service Provider Parameters associated with the Connection Setting
	Parameters []ConnectionSettingParameter `pulumi:"parameters"`
	// Scopes associated with the Connection Setting
	Scopes *string `pulumi:"scopes"`
	// Service Provider Display Name associated with the Connection Setting
	ServiceProviderDisplayName *string `pulumi:"serviceProviderDisplayName"`
	// Service Provider Id associated with the Connection Setting
	ServiceProviderId *string `pulumi:"serviceProviderId"`
}

// ConnectionSettingPropertiesInput is an input type that accepts ConnectionSettingPropertiesArgs and ConnectionSettingPropertiesOutput values.
// You can construct a concrete instance of `ConnectionSettingPropertiesInput` via:
//
//	ConnectionSettingPropertiesArgs{...}
type ConnectionSettingPropertiesInput interface {
	pulumi.Input

	ToConnectionSettingPropertiesOutput() ConnectionSettingPropertiesOutput
	ToConnectionSettingPropertiesOutputWithContext(context.Context) ConnectionSettingPropertiesOutput
}

// Properties for a Connection Setting Item
type ConnectionSettingPropertiesArgs struct {
	// Client Id associated with the Connection Setting.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client Secret associated with the Connection Setting
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Service Provider Parameters associated with the Connection Setting
	Parameters ConnectionSettingParameterArrayInput `pulumi:"parameters"`
	// Scopes associated with the Connection Setting
	Scopes pulumi.StringPtrInput `pulumi:"scopes"`
	// Service Provider Display Name associated with the Connection Setting
	ServiceProviderDisplayName pulumi.StringPtrInput `pulumi:"serviceProviderDisplayName"`
	// Service Provider Id associated with the Connection Setting
	ServiceProviderId pulumi.StringPtrInput `pulumi:"serviceProviderId"`
}

func (ConnectionSettingPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSettingProperties)(nil)).Elem()
}

func (i ConnectionSettingPropertiesArgs) ToConnectionSettingPropertiesOutput() ConnectionSettingPropertiesOutput {
	return i.ToConnectionSettingPropertiesOutputWithContext(context.Background())
}

func (i ConnectionSettingPropertiesArgs) ToConnectionSettingPropertiesOutputWithContext(ctx context.Context) ConnectionSettingPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSettingPropertiesOutput)
}

func (i ConnectionSettingPropertiesArgs) ToConnectionSettingPropertiesPtrOutput() ConnectionSettingPropertiesPtrOutput {
	return i.ToConnectionSettingPropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectionSettingPropertiesArgs) ToConnectionSettingPropertiesPtrOutputWithContext(ctx context.Context) ConnectionSettingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSettingPropertiesOutput).ToConnectionSettingPropertiesPtrOutputWithContext(ctx)
}

// ConnectionSettingPropertiesPtrInput is an input type that accepts ConnectionSettingPropertiesArgs, ConnectionSettingPropertiesPtr and ConnectionSettingPropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectionSettingPropertiesPtrInput` via:
//
//	        ConnectionSettingPropertiesArgs{...}
//
//	or:
//
//	        nil
type ConnectionSettingPropertiesPtrInput interface {
	pulumi.Input

	ToConnectionSettingPropertiesPtrOutput() ConnectionSettingPropertiesPtrOutput
	ToConnectionSettingPropertiesPtrOutputWithContext(context.Context) ConnectionSettingPropertiesPtrOutput
}

type connectionSettingPropertiesPtrType ConnectionSettingPropertiesArgs

func ConnectionSettingPropertiesPtr(v *ConnectionSettingPropertiesArgs) ConnectionSettingPropertiesPtrInput {
	return (*connectionSettingPropertiesPtrType)(v)
}

func (*connectionSettingPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSettingProperties)(nil)).Elem()
}

func (i *connectionSettingPropertiesPtrType) ToConnectionSettingPropertiesPtrOutput() ConnectionSettingPropertiesPtrOutput {
	return i.ToConnectionSettingPropertiesPtrOutputWithContext(context.Background())
}

func (i *connectionSettingPropertiesPtrType) ToConnectionSettingPropertiesPtrOutputWithContext(ctx context.Context) ConnectionSettingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSettingPropertiesPtrOutput)
}

// Properties for a Connection Setting Item
type ConnectionSettingPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectionSettingPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSettingProperties)(nil)).Elem()
}

func (o ConnectionSettingPropertiesOutput) ToConnectionSettingPropertiesOutput() ConnectionSettingPropertiesOutput {
	return o
}

func (o ConnectionSettingPropertiesOutput) ToConnectionSettingPropertiesOutputWithContext(ctx context.Context) ConnectionSettingPropertiesOutput {
	return o
}

func (o ConnectionSettingPropertiesOutput) ToConnectionSettingPropertiesPtrOutput() ConnectionSettingPropertiesPtrOutput {
	return o.ToConnectionSettingPropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectionSettingPropertiesOutput) ToConnectionSettingPropertiesPtrOutputWithContext(ctx context.Context) ConnectionSettingPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionSettingProperties) *ConnectionSettingProperties {
		return &v
	}).(ConnectionSettingPropertiesPtrOutput)
}

// Client Id associated with the Connection Setting.
func (o ConnectionSettingPropertiesOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingProperties) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client Secret associated with the Connection Setting
func (o ConnectionSettingPropertiesOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingProperties) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Service Provider Parameters associated with the Connection Setting
func (o ConnectionSettingPropertiesOutput) Parameters() ConnectionSettingParameterArrayOutput {
	return o.ApplyT(func(v ConnectionSettingProperties) []ConnectionSettingParameter { return v.Parameters }).(ConnectionSettingParameterArrayOutput)
}

// Scopes associated with the Connection Setting
func (o ConnectionSettingPropertiesOutput) Scopes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingProperties) *string { return v.Scopes }).(pulumi.StringPtrOutput)
}

// Service Provider Display Name associated with the Connection Setting
func (o ConnectionSettingPropertiesOutput) ServiceProviderDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingProperties) *string { return v.ServiceProviderDisplayName }).(pulumi.StringPtrOutput)
}

// Service Provider Id associated with the Connection Setting
func (o ConnectionSettingPropertiesOutput) ServiceProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingProperties) *string { return v.ServiceProviderId }).(pulumi.StringPtrOutput)
}

type ConnectionSettingPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectionSettingPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSettingProperties)(nil)).Elem()
}

func (o ConnectionSettingPropertiesPtrOutput) ToConnectionSettingPropertiesPtrOutput() ConnectionSettingPropertiesPtrOutput {
	return o
}

func (o ConnectionSettingPropertiesPtrOutput) ToConnectionSettingPropertiesPtrOutputWithContext(ctx context.Context) ConnectionSettingPropertiesPtrOutput {
	return o
}

func (o ConnectionSettingPropertiesPtrOutput) Elem() ConnectionSettingPropertiesOutput {
	return o.ApplyT(func(v *ConnectionSettingProperties) ConnectionSettingProperties {
		if v != nil {
			return *v
		}
		var ret ConnectionSettingProperties
		return ret
	}).(ConnectionSettingPropertiesOutput)
}

// Client Id associated with the Connection Setting.
func (o ConnectionSettingPropertiesPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client Secret associated with the Connection Setting
func (o ConnectionSettingPropertiesPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Service Provider Parameters associated with the Connection Setting
func (o ConnectionSettingPropertiesPtrOutput) Parameters() ConnectionSettingParameterArrayOutput {
	return o.ApplyT(func(v *ConnectionSettingProperties) []ConnectionSettingParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ConnectionSettingParameterArrayOutput)
}

// Scopes associated with the Connection Setting
func (o ConnectionSettingPropertiesPtrOutput) Scopes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingProperties) *string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringPtrOutput)
}

// Service Provider Display Name associated with the Connection Setting
func (o ConnectionSettingPropertiesPtrOutput) ServiceProviderDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderDisplayName
	}).(pulumi.StringPtrOutput)
}

// Service Provider Id associated with the Connection Setting
func (o ConnectionSettingPropertiesPtrOutput) ServiceProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSettingProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderId
	}).(pulumi.StringPtrOutput)
}

// Properties for a Connection Setting Item
type ConnectionSettingPropertiesResponse struct {
	// Client Id associated with the Connection Setting.
	ClientId *string `pulumi:"clientId"`
	// Client Secret associated with the Connection Setting
	ClientSecret *string `pulumi:"clientSecret"`
	// Service Provider Parameters associated with the Connection Setting
	Parameters []ConnectionSettingParameterResponse `pulumi:"parameters"`
	// Scopes associated with the Connection Setting
	Scopes *string `pulumi:"scopes"`
	// Service Provider Display Name associated with the Connection Setting
	ServiceProviderDisplayName *string `pulumi:"serviceProviderDisplayName"`
	// Service Provider Id associated with the Connection Setting
	ServiceProviderId *string `pulumi:"serviceProviderId"`
	// Setting Id set by the service for the Connection Setting.
	SettingId string `pulumi:"settingId"`
}

// Properties for a Connection Setting Item
type ConnectionSettingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectionSettingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSettingPropertiesResponse)(nil)).Elem()
}

func (o ConnectionSettingPropertiesResponseOutput) ToConnectionSettingPropertiesResponseOutput() ConnectionSettingPropertiesResponseOutput {
	return o
}

func (o ConnectionSettingPropertiesResponseOutput) ToConnectionSettingPropertiesResponseOutputWithContext(ctx context.Context) ConnectionSettingPropertiesResponseOutput {
	return o
}

// Client Id associated with the Connection Setting.
func (o ConnectionSettingPropertiesResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client Secret associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Service Provider Parameters associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) Parameters() ConnectionSettingParameterResponseArrayOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) []ConnectionSettingParameterResponse { return v.Parameters }).(ConnectionSettingParameterResponseArrayOutput)
}

// Scopes associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) Scopes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.Scopes }).(pulumi.StringPtrOutput)
}

// Service Provider Display Name associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) ServiceProviderDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.ServiceProviderDisplayName }).(pulumi.StringPtrOutput)
}

// Service Provider Id associated with the Connection Setting
func (o ConnectionSettingPropertiesResponseOutput) ServiceProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) *string { return v.ServiceProviderId }).(pulumi.StringPtrOutput)
}

// Setting Id set by the service for the Connection Setting.
func (o ConnectionSettingPropertiesResponseOutput) SettingId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionSettingPropertiesResponse) string { return v.SettingId }).(pulumi.StringOutput)
}

// Direct Line channel definition
type DirectLineChannel struct {
	// The channel name
	// Expected value is 'DirectLineChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Direct Line channel resource
	Properties *DirectLineChannelProperties `pulumi:"properties"`
}

// The parameters to provide for the Direct Line channel.
type DirectLineChannelProperties struct {
	// The list of Direct Line sites
	Sites []DirectLineSite `pulumi:"sites"`
}

// The parameters to provide for the Direct Line channel.
type DirectLineChannelPropertiesResponse struct {
	// The list of Direct Line sites
	Sites []DirectLineSiteResponse `pulumi:"sites"`
}

// Direct Line channel definition
type DirectLineChannelResponse struct {
	// The channel name
	// Expected value is 'DirectLineChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Direct Line channel resource
	Properties *DirectLineChannelPropertiesResponse `pulumi:"properties"`
}

// A site for the Direct Line channel
type DirectLineSite struct {
	// Whether this site is enabled for DirectLine channel
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this site is enabled for Bot Framework V1 protocol
	IsV1Enabled bool `pulumi:"isV1Enabled"`
	// Whether this site is enabled for Bot Framework V1 protocol
	IsV3Enabled bool `pulumi:"isV3Enabled"`
	// Site name
	SiteName string `pulumi:"siteName"`
}

// A site for the Direct Line channel
type DirectLineSiteResponse struct {
	// Whether this site is enabled for DirectLine channel
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this site is enabled for Bot Framework V1 protocol
	IsV1Enabled bool `pulumi:"isV1Enabled"`
	// Whether this site is enabled for Bot Framework V1 protocol
	IsV3Enabled bool `pulumi:"isV3Enabled"`
	// Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
	Key string `pulumi:"key"`
	// Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
	Key2 string `pulumi:"key2"`
	// Site Id
	SiteId string `pulumi:"siteId"`
	// Site name
	SiteName string `pulumi:"siteName"`
}

// Email channel definition
type EmailChannel struct {
	// The channel name
	// Expected value is 'EmailChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to email channel resource
	Properties *EmailChannelProperties `pulumi:"properties"`
}

// The parameters to provide for the Email channel.
type EmailChannelProperties struct {
	// The email address
	EmailAddress string `pulumi:"emailAddress"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
	Password string `pulumi:"password"`
}

// The parameters to provide for the Email channel.
type EmailChannelPropertiesResponse struct {
	// The email address
	EmailAddress string `pulumi:"emailAddress"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
	Password string `pulumi:"password"`
}

// Email channel definition
type EmailChannelResponse struct {
	// The channel name
	// Expected value is 'EmailChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to email channel resource
	Properties *EmailChannelPropertiesResponse `pulumi:"properties"`
}

// Facebook channel definition
type FacebookChannel struct {
	// The channel name
	// Expected value is 'FacebookChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to bot facebook channel
	Properties *FacebookChannelProperties `pulumi:"properties"`
}

// The parameters to provide for the Facebook channel.
type FacebookChannelProperties struct {
	// Facebook application id
	AppId string `pulumi:"appId"`
	// Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
	AppSecret string `pulumi:"appSecret"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// The list of Facebook pages
	Pages []FacebookPage `pulumi:"pages"`
}

// The parameters to provide for the Facebook channel.
type FacebookChannelPropertiesResponse struct {
	// Facebook application id
	AppId string `pulumi:"appId"`
	// Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
	AppSecret string `pulumi:"appSecret"`
	// Callback Url
	CallbackUrl string `pulumi:"callbackUrl"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// The list of Facebook pages
	Pages []FacebookPageResponse `pulumi:"pages"`
	// Verify token. Value only returned through POST to the action Channel List API, otherwise empty.
	VerifyToken string `pulumi:"verifyToken"`
}

// Facebook channel definition
type FacebookChannelResponse struct {
	// The channel name
	// Expected value is 'FacebookChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to bot facebook channel
	Properties *FacebookChannelPropertiesResponse `pulumi:"properties"`
}

// A Facebook page for Facebook channel registration
type FacebookPage struct {
	// Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty.
	AccessToken string `pulumi:"accessToken"`
	// Page id
	Id string `pulumi:"id"`
}

// A Facebook page for Facebook channel registration
type FacebookPageResponse struct {
	// Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty.
	AccessToken string `pulumi:"accessToken"`
	// Page id
	Id string `pulumi:"id"`
}

// Kik channel definition
type KikChannel struct {
	// The channel name
	// Expected value is 'KikChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Kik channel resource
	Properties *KikChannelProperties `pulumi:"properties"`
}

// The parameters to provide for the Kik channel.
type KikChannelProperties struct {
	// Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.
	ApiKey string `pulumi:"apiKey"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
	// The Kik user name
	UserName string `pulumi:"userName"`
}

// The parameters to provide for the Kik channel.
type KikChannelPropertiesResponse struct {
	// Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.
	ApiKey string `pulumi:"apiKey"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
	// The Kik user name
	UserName string `pulumi:"userName"`
}

// Kik channel definition
type KikChannelResponse struct {
	// The channel name
	// Expected value is 'KikChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Kik channel resource
	Properties *KikChannelPropertiesResponse `pulumi:"properties"`
}

// Microsoft Teams channel definition
type MsTeamsChannel struct {
	// The channel name
	// Expected value is 'MsTeamsChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Microsoft Teams channel resource
	Properties *MsTeamsChannelProperties `pulumi:"properties"`
}

// The parameters to provide for the Microsoft Teams channel.
type MsTeamsChannelProperties struct {
	// Enable messaging for Microsoft Teams channel
	CallMode *string `pulumi:"callMode"`
	// Enable calling for Microsoft Teams channel
	EnableCalling *bool `pulumi:"enableCalling"`
	// Enable media cards for Microsoft Teams channel
	EnableMediaCards *bool `pulumi:"enableMediaCards"`
	// Enable messaging for Microsoft Teams channel
	EnableMessaging *bool `pulumi:"enableMessaging"`
	// Enable video for Microsoft Teams channel
	EnableVideo *bool `pulumi:"enableVideo"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
}

// The parameters to provide for the Microsoft Teams channel.
type MsTeamsChannelPropertiesResponse struct {
	// Enable messaging for Microsoft Teams channel
	CallMode *string `pulumi:"callMode"`
	// Enable calling for Microsoft Teams channel
	EnableCalling *bool `pulumi:"enableCalling"`
	// Enable media cards for Microsoft Teams channel
	EnableMediaCards *bool `pulumi:"enableMediaCards"`
	// Enable messaging for Microsoft Teams channel
	EnableMessaging *bool `pulumi:"enableMessaging"`
	// Enable video for Microsoft Teams channel
	EnableVideo *bool `pulumi:"enableVideo"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
}

// Microsoft Teams channel definition
type MsTeamsChannelResponse struct {
	// The channel name
	// Expected value is 'MsTeamsChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Microsoft Teams channel resource
	Properties *MsTeamsChannelPropertiesResponse `pulumi:"properties"`
}

// Extra Parameters specific to each Service Provider
type ServiceProviderParameterResponse struct {
	// Default Name for the Service Provider
	Default string `pulumi:"default"`
	// Description of the Service Provider
	Description string `pulumi:"description"`
	// Display Name of the Service Provider
	DisplayName string `pulumi:"displayName"`
	// Help Url for the  Service Provider
	HelpUrl string `pulumi:"helpUrl"`
	// Name of the Service Provider
	Name string `pulumi:"name"`
	// Type of the Service Provider
	Type string `pulumi:"type"`
}

// The Object used to describe a Service Provider supported by Bot Service
type ServiceProviderPropertiesResponse struct {
	// Display Name of the Service Provider
	DevPortalUrl string `pulumi:"devPortalUrl"`
	// Display Name of the Service Provider
	DisplayName string `pulumi:"displayName"`
	// Display Name of the Service Provider
	IconUrl string `pulumi:"iconUrl"`
	// Id for Service Provider
	Id string `pulumi:"id"`
	// The list of parameters for the Service Provider
	Parameters []ServiceProviderParameterResponse `pulumi:"parameters"`
	// Display Name of the Service Provider
	ServiceProviderName string `pulumi:"serviceProviderName"`
}

// Service Provider Definition
type ServiceProviderResponse struct {
	// The Properties of a Service Provider Object
	Properties *ServiceProviderPropertiesResponse `pulumi:"properties"`
}

// The SKU of the cognitive services account.
type Sku struct {
	// The sku name
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The SKU of the cognitive services account.
type SkuArgs struct {
	// The sku name
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The SKU of the cognitive services account.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The sku name
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// The sku name
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU of the cognitive services account.
type SkuResponse struct {
	// The sku name
	Name string `pulumi:"name"`
	// Gets the sku tier. This is based on the SKU name.
	Tier string `pulumi:"tier"`
}

// The SKU of the cognitive services account.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The sku name
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Gets the sku tier. This is based on the SKU name.
func (o SkuResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// The sku name
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets the sku tier. This is based on the SKU name.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// Skype channel definition
type SkypeChannel struct {
	// The channel name
	// Expected value is 'SkypeChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Skype channel resource
	Properties *SkypeChannelProperties `pulumi:"properties"`
}

// The parameters to provide for the Microsoft Teams channel.
type SkypeChannelProperties struct {
	// Calling web hook for Skype channel
	CallingWebHook *string `pulumi:"callingWebHook"`
	// Enable calling for Skype channel
	EnableCalling *bool `pulumi:"enableCalling"`
	// Enable groups for Skype channel
	EnableGroups *bool `pulumi:"enableGroups"`
	// Enable media cards for Skype channel
	EnableMediaCards *bool `pulumi:"enableMediaCards"`
	// Enable messaging for Skype channel
	EnableMessaging *bool `pulumi:"enableMessaging"`
	// Enable screen sharing for Skype channel
	EnableScreenSharing *bool `pulumi:"enableScreenSharing"`
	// Enable video for Skype channel
	EnableVideo *bool `pulumi:"enableVideo"`
	// Group mode for Skype channel
	GroupsMode *string `pulumi:"groupsMode"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
}

// The parameters to provide for the Microsoft Teams channel.
type SkypeChannelPropertiesResponse struct {
	// Calling web hook for Skype channel
	CallingWebHook *string `pulumi:"callingWebHook"`
	// Enable calling for Skype channel
	EnableCalling *bool `pulumi:"enableCalling"`
	// Enable groups for Skype channel
	EnableGroups *bool `pulumi:"enableGroups"`
	// Enable media cards for Skype channel
	EnableMediaCards *bool `pulumi:"enableMediaCards"`
	// Enable messaging for Skype channel
	EnableMessaging *bool `pulumi:"enableMessaging"`
	// Enable screen sharing for Skype channel
	EnableScreenSharing *bool `pulumi:"enableScreenSharing"`
	// Enable video for Skype channel
	EnableVideo *bool `pulumi:"enableVideo"`
	// Group mode for Skype channel
	GroupsMode *string `pulumi:"groupsMode"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
}

// Skype channel definition
type SkypeChannelResponse struct {
	// The channel name
	// Expected value is 'SkypeChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Skype channel resource
	Properties *SkypeChannelPropertiesResponse `pulumi:"properties"`
}

// Slack channel definition
type SlackChannel struct {
	// The channel name
	// Expected value is 'SlackChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Slack channel resource
	Properties *SlackChannelProperties `pulumi:"properties"`
}

// The parameters to provide for the Slack channel.
type SlackChannelProperties struct {
	// The Slack client id
	ClientId string `pulumi:"clientId"`
	// The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty.
	ClientSecret string `pulumi:"clientSecret"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// The Slack landing page Url
	LandingPageUrl *string `pulumi:"landingPageUrl"`
	// The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty.
	VerificationToken string `pulumi:"verificationToken"`
}

// The parameters to provide for the Slack channel.
type SlackChannelPropertiesResponse struct {
	// The Slack client id
	ClientId string `pulumi:"clientId"`
	// The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty.
	ClientSecret string `pulumi:"clientSecret"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated bool `pulumi:"isValidated"`
	// The Slack landing page Url
	LandingPageUrl *string `pulumi:"landingPageUrl"`
	// The Sms auth token
	LastSubmissionId string `pulumi:"lastSubmissionId"`
	// The Slack redirect action
	RedirectAction string `pulumi:"redirectAction"`
	// Whether to register the settings before OAuth validation is performed. Recommended to True.
	RegisterBeforeOAuthFlow bool `pulumi:"registerBeforeOAuthFlow"`
	// The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty.
	VerificationToken string `pulumi:"verificationToken"`
}

// Slack channel definition
type SlackChannelResponse struct {
	// The channel name
	// Expected value is 'SlackChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Slack channel resource
	Properties *SlackChannelPropertiesResponse `pulumi:"properties"`
}

// Sms channel definition
type SmsChannel struct {
	// The channel name
	// Expected value is 'SmsChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Sms channel resource
	Properties *SmsChannelProperties `pulumi:"properties"`
}

// The parameters to provide for the Sms channel.
type SmsChannelProperties struct {
	// The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
	AccountSID string `pulumi:"accountSID"`
	// The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
	AuthToken string `pulumi:"authToken"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
	// The Sms phone
	Phone string `pulumi:"phone"`
}

// The parameters to provide for the Sms channel.
type SmsChannelPropertiesResponse struct {
	// The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
	AccountSID string `pulumi:"accountSID"`
	// The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
	AuthToken string `pulumi:"authToken"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
	// The Sms phone
	Phone string `pulumi:"phone"`
}

// Sms channel definition
type SmsChannelResponse struct {
	// The channel name
	// Expected value is 'SmsChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Sms channel resource
	Properties *SmsChannelPropertiesResponse `pulumi:"properties"`
}

// Telegram channel definition
type TelegramChannel struct {
	// The channel name
	// Expected value is 'TelegramChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Telegram channel resource
	Properties *TelegramChannelProperties `pulumi:"properties"`
}

// The parameters to provide for the Telegram channel.
type TelegramChannelProperties struct {
	// The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty.
	AccessToken string `pulumi:"accessToken"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
}

// The parameters to provide for the Telegram channel.
type TelegramChannelPropertiesResponse struct {
	// The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty.
	AccessToken string `pulumi:"accessToken"`
	// Whether this channel is enabled for the bot
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether this channel is validated for the bot
	IsValidated *bool `pulumi:"isValidated"`
}

// Telegram channel definition
type TelegramChannelResponse struct {
	// The channel name
	// Expected value is 'TelegramChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Telegram channel resource
	Properties *TelegramChannelPropertiesResponse `pulumi:"properties"`
}

// Web Chat channel definition
type WebChatChannel struct {
	// The channel name
	// Expected value is 'WebChatChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Web Chat channel resource
	Properties *WebChatChannelProperties `pulumi:"properties"`
}

// The parameters to provide for the Web Chat channel.
type WebChatChannelProperties struct {
	// The list of Web Chat sites
	Sites []WebChatSite `pulumi:"sites"`
}

// The parameters to provide for the Web Chat channel.
type WebChatChannelPropertiesResponse struct {
	// The list of Web Chat sites
	Sites []WebChatSiteResponse `pulumi:"sites"`
	// Web chat control embed code
	WebChatEmbedCode string `pulumi:"webChatEmbedCode"`
}

// Web Chat channel definition
type WebChatChannelResponse struct {
	// The channel name
	// Expected value is 'WebChatChannel'.
	ChannelName string `pulumi:"channelName"`
	// The set of properties specific to Web Chat channel resource
	Properties *WebChatChannelPropertiesResponse `pulumi:"properties"`
}

// A site for the Webchat channel
type WebChatSite struct {
	// Whether this site is enabled for preview versions of Webchat
	EnablePreview bool `pulumi:"enablePreview"`
	// Whether this site is enabled for DirectLine channel
	IsEnabled bool `pulumi:"isEnabled"`
	// Site name
	SiteName string `pulumi:"siteName"`
}

// A site for the Webchat channel
type WebChatSiteResponse struct {
	// Whether this site is enabled for preview versions of Webchat
	EnablePreview bool `pulumi:"enablePreview"`
	// Whether this site is enabled for DirectLine channel
	IsEnabled bool `pulumi:"isEnabled"`
	// Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
	Key string `pulumi:"key"`
	// Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
	Key2 string `pulumi:"key2"`
	// Site Id
	SiteId string `pulumi:"siteId"`
	// Site name
	SiteName string `pulumi:"siteName"`
}

func init() {
	pulumi.RegisterOutputType(BotPropertiesOutput{})
	pulumi.RegisterOutputType(BotPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BotPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectionSettingParameterOutput{})
	pulumi.RegisterOutputType(ConnectionSettingParameterArrayOutput{})
	pulumi.RegisterOutputType(ConnectionSettingParameterResponseOutput{})
	pulumi.RegisterOutputType(ConnectionSettingParameterResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectionSettingPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectionSettingPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectionSettingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
}
