// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180712

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Bot channel resource definition
type BotConnection struct {
	pulumi.CustomResourceState

	// Entity Tag
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// Required. Gets or sets the Kind of the resource.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Specifies the location of the resource.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Specifies the name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The set of properties specific to bot channel resource
	Properties ConnectionSettingPropertiesResponseOutput `pulumi:"properties"`
	// Gets or sets the SKU of the resource.
	Sku SkuResponsePtrOutput `pulumi:"sku"`
	// Contains resource tags defined as key/value pairs.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewBotConnection registers a new resource with the given unique name, arguments, and options.
func NewBotConnection(ctx *pulumi.Context,
	name string, args *BotConnectionArgs, opts ...pulumi.ResourceOption) (*BotConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ResourceName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:botservice:BotConnection"),
		},
		{
			Type: pulumi.String("azure-native:botservice/v20171201:BotConnection"),
		},
		{
			Type: pulumi.String("azure-native:botservice/v20200602:BotConnection"),
		},
		{
			Type: pulumi.String("azure-native:botservice/v20210301:BotConnection"),
		},
		{
			Type: pulumi.String("azure-native:botservice/v20210501preview:BotConnection"),
		},
		{
			Type: pulumi.String("azure-native:botservice/v20220615preview:BotConnection"),
		},
	})
	opts = append(opts, aliases)
	var resource BotConnection
	err := ctx.RegisterResource("azure-native:botservice/v20180712:BotConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBotConnection gets an existing BotConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBotConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BotConnectionState, opts ...pulumi.ResourceOption) (*BotConnection, error) {
	var resource BotConnection
	err := ctx.ReadResource("azure-native:botservice/v20180712:BotConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BotConnection resources.
type botConnectionState struct {
}

type BotConnectionState struct {
}

func (BotConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*botConnectionState)(nil)).Elem()
}

type botConnectionArgs struct {
	// The name of the Bot Service Connection Setting resource
	ConnectionName *string `pulumi:"connectionName"`
	// Required. Gets or sets the Kind of the resource.
	Kind *string `pulumi:"kind"`
	// Specifies the location of the resource.
	Location *string `pulumi:"location"`
	// The set of properties specific to bot channel resource
	Properties *ConnectionSettingProperties `pulumi:"properties"`
	// The name of the Bot resource group in the user subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Bot resource.
	ResourceName string `pulumi:"resourceName"`
	// Gets or sets the SKU of the resource.
	Sku *Sku `pulumi:"sku"`
	// Contains resource tags defined as key/value pairs.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a BotConnection resource.
type BotConnectionArgs struct {
	// The name of the Bot Service Connection Setting resource
	ConnectionName pulumi.StringPtrInput
	// Required. Gets or sets the Kind of the resource.
	Kind pulumi.StringPtrInput
	// Specifies the location of the resource.
	Location pulumi.StringPtrInput
	// The set of properties specific to bot channel resource
	Properties ConnectionSettingPropertiesPtrInput
	// The name of the Bot resource group in the user subscription.
	ResourceGroupName pulumi.StringInput
	// The name of the Bot resource.
	ResourceName pulumi.StringInput
	// Gets or sets the SKU of the resource.
	Sku SkuPtrInput
	// Contains resource tags defined as key/value pairs.
	Tags pulumi.StringMapInput
}

func (BotConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*botConnectionArgs)(nil)).Elem()
}

type BotConnectionInput interface {
	pulumi.Input

	ToBotConnectionOutput() BotConnectionOutput
	ToBotConnectionOutputWithContext(ctx context.Context) BotConnectionOutput
}

func (*BotConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**BotConnection)(nil)).Elem()
}

func (i *BotConnection) ToBotConnectionOutput() BotConnectionOutput {
	return i.ToBotConnectionOutputWithContext(context.Background())
}

func (i *BotConnection) ToBotConnectionOutputWithContext(ctx context.Context) BotConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotConnectionOutput)
}

type BotConnectionOutput struct{ *pulumi.OutputState }

func (BotConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BotConnection)(nil)).Elem()
}

func (o BotConnectionOutput) ToBotConnectionOutput() BotConnectionOutput {
	return o
}

func (o BotConnectionOutput) ToBotConnectionOutputWithContext(ctx context.Context) BotConnectionOutput {
	return o
}

// Entity Tag
func (o BotConnectionOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotConnection) pulumi.StringPtrOutput { return v.Etag }).(pulumi.StringPtrOutput)
}

// Required. Gets or sets the Kind of the resource.
func (o BotConnectionOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotConnection) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Specifies the location of the resource.
func (o BotConnectionOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotConnection) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Specifies the name of the resource.
func (o BotConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BotConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The set of properties specific to bot channel resource
func (o BotConnectionOutput) Properties() ConnectionSettingPropertiesResponseOutput {
	return o.ApplyT(func(v *BotConnection) ConnectionSettingPropertiesResponseOutput { return v.Properties }).(ConnectionSettingPropertiesResponseOutput)
}

// Gets or sets the SKU of the resource.
func (o BotConnectionOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v *BotConnection) SkuResponsePtrOutput { return v.Sku }).(SkuResponsePtrOutput)
}

// Contains resource tags defined as key/value pairs.
func (o BotConnectionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BotConnection) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the type of the resource.
func (o BotConnectionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *BotConnection) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(BotConnectionOutput{})
}
