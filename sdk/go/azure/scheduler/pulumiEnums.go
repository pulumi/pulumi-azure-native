// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scheduler

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DayOfWeek string

const (
	DayOfWeekSunday    = DayOfWeek("Sunday")
	DayOfWeekMonday    = DayOfWeek("Monday")
	DayOfWeekTuesday   = DayOfWeek("Tuesday")
	DayOfWeekWednesday = DayOfWeek("Wednesday")
	DayOfWeekThursday  = DayOfWeek("Thursday")
	DayOfWeekFriday    = DayOfWeek("Friday")
	DayOfWeekSaturday  = DayOfWeek("Saturday")
)

func (DayOfWeek) ElementType() reflect.Type {
	return reflect.TypeOf((*DayOfWeek)(nil)).Elem()
}

func (e DayOfWeek) ToDayOfWeekOutput() DayOfWeekOutput {
	return pulumi.ToOutput(e).(DayOfWeekOutput)
}

func (e DayOfWeek) ToDayOfWeekOutputWithContext(ctx context.Context) DayOfWeekOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DayOfWeekOutput)
}

func (e DayOfWeek) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return e.ToDayOfWeekPtrOutputWithContext(context.Background())
}

func (e DayOfWeek) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return DayOfWeek(e).ToDayOfWeekOutputWithContext(ctx).ToDayOfWeekPtrOutputWithContext(ctx)
}

func (e DayOfWeek) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DayOfWeek) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DayOfWeek) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DayOfWeek) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DayOfWeekOutput struct{ *pulumi.OutputState }

func (DayOfWeekOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DayOfWeek)(nil)).Elem()
}

func (o DayOfWeekOutput) ToDayOfWeekOutput() DayOfWeekOutput {
	return o
}

func (o DayOfWeekOutput) ToDayOfWeekOutputWithContext(ctx context.Context) DayOfWeekOutput {
	return o
}

func (o DayOfWeekOutput) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return o.ToDayOfWeekPtrOutputWithContext(context.Background())
}

func (o DayOfWeekOutput) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DayOfWeek) *DayOfWeek {
		return &v
	}).(DayOfWeekPtrOutput)
}

func (o DayOfWeekOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DayOfWeekOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DayOfWeek) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DayOfWeekOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DayOfWeekOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DayOfWeek) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DayOfWeekPtrOutput struct{ *pulumi.OutputState }

func (DayOfWeekPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DayOfWeek)(nil)).Elem()
}

func (o DayOfWeekPtrOutput) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return o
}

func (o DayOfWeekPtrOutput) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return o
}

func (o DayOfWeekPtrOutput) Elem() DayOfWeekOutput {
	return o.ApplyT(func(v *DayOfWeek) DayOfWeek {
		if v != nil {
			return *v
		}
		var ret DayOfWeek
		return ret
	}).(DayOfWeekOutput)
}

func (o DayOfWeekPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DayOfWeekPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DayOfWeek) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DayOfWeekInput is an input type that accepts DayOfWeekArgs and DayOfWeekOutput values.
// You can construct a concrete instance of `DayOfWeekInput` via:
//
//	DayOfWeekArgs{...}
type DayOfWeekInput interface {
	pulumi.Input

	ToDayOfWeekOutput() DayOfWeekOutput
	ToDayOfWeekOutputWithContext(context.Context) DayOfWeekOutput
}

var dayOfWeekPtrType = reflect.TypeOf((**DayOfWeek)(nil)).Elem()

type DayOfWeekPtrInput interface {
	pulumi.Input

	ToDayOfWeekPtrOutput() DayOfWeekPtrOutput
	ToDayOfWeekPtrOutputWithContext(context.Context) DayOfWeekPtrOutput
}

type dayOfWeekPtr string

func DayOfWeekPtr(v string) DayOfWeekPtrInput {
	return (*dayOfWeekPtr)(&v)
}

func (*dayOfWeekPtr) ElementType() reflect.Type {
	return dayOfWeekPtrType
}

func (in *dayOfWeekPtr) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return pulumi.ToOutput(in).(DayOfWeekPtrOutput)
}

func (in *dayOfWeekPtr) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DayOfWeekPtrOutput)
}

// DayOfWeekArrayInput is an input type that accepts DayOfWeekArray and DayOfWeekArrayOutput values.
// You can construct a concrete instance of `DayOfWeekArrayInput` via:
//
//	DayOfWeekArray{ DayOfWeekArgs{...} }
type DayOfWeekArrayInput interface {
	pulumi.Input

	ToDayOfWeekArrayOutput() DayOfWeekArrayOutput
	ToDayOfWeekArrayOutputWithContext(context.Context) DayOfWeekArrayOutput
}

type DayOfWeekArray []DayOfWeek

func (DayOfWeekArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DayOfWeek)(nil)).Elem()
}

func (i DayOfWeekArray) ToDayOfWeekArrayOutput() DayOfWeekArrayOutput {
	return i.ToDayOfWeekArrayOutputWithContext(context.Background())
}

func (i DayOfWeekArray) ToDayOfWeekArrayOutputWithContext(ctx context.Context) DayOfWeekArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayOfWeekArrayOutput)
}

type DayOfWeekArrayOutput struct{ *pulumi.OutputState }

func (DayOfWeekArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DayOfWeek)(nil)).Elem()
}

func (o DayOfWeekArrayOutput) ToDayOfWeekArrayOutput() DayOfWeekArrayOutput {
	return o
}

func (o DayOfWeekArrayOutput) ToDayOfWeekArrayOutputWithContext(ctx context.Context) DayOfWeekArrayOutput {
	return o
}

func (o DayOfWeekArrayOutput) Index(i pulumi.IntInput) DayOfWeekOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DayOfWeek {
		return vs[0].([]DayOfWeek)[vs[1].(int)]
	}).(DayOfWeekOutput)
}

// Gets or sets the HTTP authentication type.
type HttpAuthenticationType string

const (
	HttpAuthenticationTypeNotSpecified         = HttpAuthenticationType("NotSpecified")
	HttpAuthenticationTypeClientCertificate    = HttpAuthenticationType("ClientCertificate")
	HttpAuthenticationTypeActiveDirectoryOAuth = HttpAuthenticationType("ActiveDirectoryOAuth")
	HttpAuthenticationTypeBasic                = HttpAuthenticationType("Basic")
)

// Gets or sets the job action type.
type JobActionType string

const (
	JobActionTypeHttp            = JobActionType("Http")
	JobActionTypeHttps           = JobActionType("Https")
	JobActionTypeStorageQueue    = JobActionType("StorageQueue")
	JobActionTypeServiceBusQueue = JobActionType("ServiceBusQueue")
	JobActionTypeServiceBusTopic = JobActionType("ServiceBusTopic")
)

func (JobActionType) ElementType() reflect.Type {
	return reflect.TypeOf((*JobActionType)(nil)).Elem()
}

func (e JobActionType) ToJobActionTypeOutput() JobActionTypeOutput {
	return pulumi.ToOutput(e).(JobActionTypeOutput)
}

func (e JobActionType) ToJobActionTypeOutputWithContext(ctx context.Context) JobActionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(JobActionTypeOutput)
}

func (e JobActionType) ToJobActionTypePtrOutput() JobActionTypePtrOutput {
	return e.ToJobActionTypePtrOutputWithContext(context.Background())
}

func (e JobActionType) ToJobActionTypePtrOutputWithContext(ctx context.Context) JobActionTypePtrOutput {
	return JobActionType(e).ToJobActionTypeOutputWithContext(ctx).ToJobActionTypePtrOutputWithContext(ctx)
}

func (e JobActionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobActionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobActionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JobActionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type JobActionTypeOutput struct{ *pulumi.OutputState }

func (JobActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobActionType)(nil)).Elem()
}

func (o JobActionTypeOutput) ToJobActionTypeOutput() JobActionTypeOutput {
	return o
}

func (o JobActionTypeOutput) ToJobActionTypeOutputWithContext(ctx context.Context) JobActionTypeOutput {
	return o
}

func (o JobActionTypeOutput) ToJobActionTypePtrOutput() JobActionTypePtrOutput {
	return o.ToJobActionTypePtrOutputWithContext(context.Background())
}

func (o JobActionTypeOutput) ToJobActionTypePtrOutputWithContext(ctx context.Context) JobActionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobActionType) *JobActionType {
		return &v
	}).(JobActionTypePtrOutput)
}

func (o JobActionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o JobActionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobActionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o JobActionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobActionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobActionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type JobActionTypePtrOutput struct{ *pulumi.OutputState }

func (JobActionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobActionType)(nil)).Elem()
}

func (o JobActionTypePtrOutput) ToJobActionTypePtrOutput() JobActionTypePtrOutput {
	return o
}

func (o JobActionTypePtrOutput) ToJobActionTypePtrOutputWithContext(ctx context.Context) JobActionTypePtrOutput {
	return o
}

func (o JobActionTypePtrOutput) Elem() JobActionTypeOutput {
	return o.ApplyT(func(v *JobActionType) JobActionType {
		if v != nil {
			return *v
		}
		var ret JobActionType
		return ret
	}).(JobActionTypeOutput)
}

func (o JobActionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobActionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *JobActionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// JobActionTypeInput is an input type that accepts JobActionTypeArgs and JobActionTypeOutput values.
// You can construct a concrete instance of `JobActionTypeInput` via:
//
//	JobActionTypeArgs{...}
type JobActionTypeInput interface {
	pulumi.Input

	ToJobActionTypeOutput() JobActionTypeOutput
	ToJobActionTypeOutputWithContext(context.Context) JobActionTypeOutput
}

var jobActionTypePtrType = reflect.TypeOf((**JobActionType)(nil)).Elem()

type JobActionTypePtrInput interface {
	pulumi.Input

	ToJobActionTypePtrOutput() JobActionTypePtrOutput
	ToJobActionTypePtrOutputWithContext(context.Context) JobActionTypePtrOutput
}

type jobActionTypePtr string

func JobActionTypePtr(v string) JobActionTypePtrInput {
	return (*jobActionTypePtr)(&v)
}

func (*jobActionTypePtr) ElementType() reflect.Type {
	return jobActionTypePtrType
}

func (in *jobActionTypePtr) ToJobActionTypePtrOutput() JobActionTypePtrOutput {
	return pulumi.ToOutput(in).(JobActionTypePtrOutput)
}

func (in *jobActionTypePtr) ToJobActionTypePtrOutputWithContext(ctx context.Context) JobActionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(JobActionTypePtrOutput)
}

// Gets or sets the state.
type JobCollectionStateEnum string

const (
	JobCollectionStateEnumEnabled   = JobCollectionStateEnum("Enabled")
	JobCollectionStateEnumDisabled  = JobCollectionStateEnum("Disabled")
	JobCollectionStateEnumSuspended = JobCollectionStateEnum("Suspended")
	JobCollectionStateEnumDeleted   = JobCollectionStateEnum("Deleted")
)

func (JobCollectionStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*JobCollectionStateEnum)(nil)).Elem()
}

func (e JobCollectionStateEnum) ToJobCollectionStateEnumOutput() JobCollectionStateEnumOutput {
	return pulumi.ToOutput(e).(JobCollectionStateEnumOutput)
}

func (e JobCollectionStateEnum) ToJobCollectionStateEnumOutputWithContext(ctx context.Context) JobCollectionStateEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(JobCollectionStateEnumOutput)
}

func (e JobCollectionStateEnum) ToJobCollectionStateEnumPtrOutput() JobCollectionStateEnumPtrOutput {
	return e.ToJobCollectionStateEnumPtrOutputWithContext(context.Background())
}

func (e JobCollectionStateEnum) ToJobCollectionStateEnumPtrOutputWithContext(ctx context.Context) JobCollectionStateEnumPtrOutput {
	return JobCollectionStateEnum(e).ToJobCollectionStateEnumOutputWithContext(ctx).ToJobCollectionStateEnumPtrOutputWithContext(ctx)
}

func (e JobCollectionStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobCollectionStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobCollectionStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JobCollectionStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type JobCollectionStateEnumOutput struct{ *pulumi.OutputState }

func (JobCollectionStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobCollectionStateEnum)(nil)).Elem()
}

func (o JobCollectionStateEnumOutput) ToJobCollectionStateEnumOutput() JobCollectionStateEnumOutput {
	return o
}

func (o JobCollectionStateEnumOutput) ToJobCollectionStateEnumOutputWithContext(ctx context.Context) JobCollectionStateEnumOutput {
	return o
}

func (o JobCollectionStateEnumOutput) ToJobCollectionStateEnumPtrOutput() JobCollectionStateEnumPtrOutput {
	return o.ToJobCollectionStateEnumPtrOutputWithContext(context.Background())
}

func (o JobCollectionStateEnumOutput) ToJobCollectionStateEnumPtrOutputWithContext(ctx context.Context) JobCollectionStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobCollectionStateEnum) *JobCollectionStateEnum {
		return &v
	}).(JobCollectionStateEnumPtrOutput)
}

func (o JobCollectionStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o JobCollectionStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobCollectionStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o JobCollectionStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobCollectionStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobCollectionStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type JobCollectionStateEnumPtrOutput struct{ *pulumi.OutputState }

func (JobCollectionStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobCollectionStateEnum)(nil)).Elem()
}

func (o JobCollectionStateEnumPtrOutput) ToJobCollectionStateEnumPtrOutput() JobCollectionStateEnumPtrOutput {
	return o
}

func (o JobCollectionStateEnumPtrOutput) ToJobCollectionStateEnumPtrOutputWithContext(ctx context.Context) JobCollectionStateEnumPtrOutput {
	return o
}

func (o JobCollectionStateEnumPtrOutput) Elem() JobCollectionStateEnumOutput {
	return o.ApplyT(func(v *JobCollectionStateEnum) JobCollectionStateEnum {
		if v != nil {
			return *v
		}
		var ret JobCollectionStateEnum
		return ret
	}).(JobCollectionStateEnumOutput)
}

func (o JobCollectionStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobCollectionStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *JobCollectionStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// JobCollectionStateEnumInput is an input type that accepts JobCollectionStateEnumArgs and JobCollectionStateEnumOutput values.
// You can construct a concrete instance of `JobCollectionStateEnumInput` via:
//
//	JobCollectionStateEnumArgs{...}
type JobCollectionStateEnumInput interface {
	pulumi.Input

	ToJobCollectionStateEnumOutput() JobCollectionStateEnumOutput
	ToJobCollectionStateEnumOutputWithContext(context.Context) JobCollectionStateEnumOutput
}

var jobCollectionStateEnumPtrType = reflect.TypeOf((**JobCollectionStateEnum)(nil)).Elem()

type JobCollectionStateEnumPtrInput interface {
	pulumi.Input

	ToJobCollectionStateEnumPtrOutput() JobCollectionStateEnumPtrOutput
	ToJobCollectionStateEnumPtrOutputWithContext(context.Context) JobCollectionStateEnumPtrOutput
}

type jobCollectionStateEnumPtr string

func JobCollectionStateEnumPtr(v string) JobCollectionStateEnumPtrInput {
	return (*jobCollectionStateEnumPtr)(&v)
}

func (*jobCollectionStateEnumPtr) ElementType() reflect.Type {
	return jobCollectionStateEnumPtrType
}

func (in *jobCollectionStateEnumPtr) ToJobCollectionStateEnumPtrOutput() JobCollectionStateEnumPtrOutput {
	return pulumi.ToOutput(in).(JobCollectionStateEnumPtrOutput)
}

func (in *jobCollectionStateEnumPtr) ToJobCollectionStateEnumPtrOutputWithContext(ctx context.Context) JobCollectionStateEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(JobCollectionStateEnumPtrOutput)
}

// Gets or sets the day. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.
type JobScheduleDay string

const (
	JobScheduleDayMonday    = JobScheduleDay("Monday")
	JobScheduleDayTuesday   = JobScheduleDay("Tuesday")
	JobScheduleDayWednesday = JobScheduleDay("Wednesday")
	JobScheduleDayThursday  = JobScheduleDay("Thursday")
	JobScheduleDayFriday    = JobScheduleDay("Friday")
	JobScheduleDaySaturday  = JobScheduleDay("Saturday")
	JobScheduleDaySunday    = JobScheduleDay("Sunday")
)

func (JobScheduleDay) ElementType() reflect.Type {
	return reflect.TypeOf((*JobScheduleDay)(nil)).Elem()
}

func (e JobScheduleDay) ToJobScheduleDayOutput() JobScheduleDayOutput {
	return pulumi.ToOutput(e).(JobScheduleDayOutput)
}

func (e JobScheduleDay) ToJobScheduleDayOutputWithContext(ctx context.Context) JobScheduleDayOutput {
	return pulumi.ToOutputWithContext(ctx, e).(JobScheduleDayOutput)
}

func (e JobScheduleDay) ToJobScheduleDayPtrOutput() JobScheduleDayPtrOutput {
	return e.ToJobScheduleDayPtrOutputWithContext(context.Background())
}

func (e JobScheduleDay) ToJobScheduleDayPtrOutputWithContext(ctx context.Context) JobScheduleDayPtrOutput {
	return JobScheduleDay(e).ToJobScheduleDayOutputWithContext(ctx).ToJobScheduleDayPtrOutputWithContext(ctx)
}

func (e JobScheduleDay) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobScheduleDay) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobScheduleDay) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JobScheduleDay) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type JobScheduleDayOutput struct{ *pulumi.OutputState }

func (JobScheduleDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobScheduleDay)(nil)).Elem()
}

func (o JobScheduleDayOutput) ToJobScheduleDayOutput() JobScheduleDayOutput {
	return o
}

func (o JobScheduleDayOutput) ToJobScheduleDayOutputWithContext(ctx context.Context) JobScheduleDayOutput {
	return o
}

func (o JobScheduleDayOutput) ToJobScheduleDayPtrOutput() JobScheduleDayPtrOutput {
	return o.ToJobScheduleDayPtrOutputWithContext(context.Background())
}

func (o JobScheduleDayOutput) ToJobScheduleDayPtrOutputWithContext(ctx context.Context) JobScheduleDayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobScheduleDay) *JobScheduleDay {
		return &v
	}).(JobScheduleDayPtrOutput)
}

func (o JobScheduleDayOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o JobScheduleDayOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobScheduleDay) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o JobScheduleDayOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobScheduleDayOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobScheduleDay) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type JobScheduleDayPtrOutput struct{ *pulumi.OutputState }

func (JobScheduleDayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobScheduleDay)(nil)).Elem()
}

func (o JobScheduleDayPtrOutput) ToJobScheduleDayPtrOutput() JobScheduleDayPtrOutput {
	return o
}

func (o JobScheduleDayPtrOutput) ToJobScheduleDayPtrOutputWithContext(ctx context.Context) JobScheduleDayPtrOutput {
	return o
}

func (o JobScheduleDayPtrOutput) Elem() JobScheduleDayOutput {
	return o.ApplyT(func(v *JobScheduleDay) JobScheduleDay {
		if v != nil {
			return *v
		}
		var ret JobScheduleDay
		return ret
	}).(JobScheduleDayOutput)
}

func (o JobScheduleDayPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobScheduleDayPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *JobScheduleDay) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// JobScheduleDayInput is an input type that accepts JobScheduleDayArgs and JobScheduleDayOutput values.
// You can construct a concrete instance of `JobScheduleDayInput` via:
//
//	JobScheduleDayArgs{...}
type JobScheduleDayInput interface {
	pulumi.Input

	ToJobScheduleDayOutput() JobScheduleDayOutput
	ToJobScheduleDayOutputWithContext(context.Context) JobScheduleDayOutput
}

var jobScheduleDayPtrType = reflect.TypeOf((**JobScheduleDay)(nil)).Elem()

type JobScheduleDayPtrInput interface {
	pulumi.Input

	ToJobScheduleDayPtrOutput() JobScheduleDayPtrOutput
	ToJobScheduleDayPtrOutputWithContext(context.Context) JobScheduleDayPtrOutput
}

type jobScheduleDayPtr string

func JobScheduleDayPtr(v string) JobScheduleDayPtrInput {
	return (*jobScheduleDayPtr)(&v)
}

func (*jobScheduleDayPtr) ElementType() reflect.Type {
	return jobScheduleDayPtrType
}

func (in *jobScheduleDayPtr) ToJobScheduleDayPtrOutput() JobScheduleDayPtrOutput {
	return pulumi.ToOutput(in).(JobScheduleDayPtrOutput)
}

func (in *jobScheduleDayPtr) ToJobScheduleDayPtrOutputWithContext(ctx context.Context) JobScheduleDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(JobScheduleDayPtrOutput)
}

// Gets or set the job state.
type JobStateEnum string

const (
	JobStateEnumEnabled   = JobStateEnum("Enabled")
	JobStateEnumDisabled  = JobStateEnum("Disabled")
	JobStateEnumFaulted   = JobStateEnum("Faulted")
	JobStateEnumCompleted = JobStateEnum("Completed")
)

func (JobStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStateEnum)(nil)).Elem()
}

func (e JobStateEnum) ToJobStateEnumOutput() JobStateEnumOutput {
	return pulumi.ToOutput(e).(JobStateEnumOutput)
}

func (e JobStateEnum) ToJobStateEnumOutputWithContext(ctx context.Context) JobStateEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(JobStateEnumOutput)
}

func (e JobStateEnum) ToJobStateEnumPtrOutput() JobStateEnumPtrOutput {
	return e.ToJobStateEnumPtrOutputWithContext(context.Background())
}

func (e JobStateEnum) ToJobStateEnumPtrOutputWithContext(ctx context.Context) JobStateEnumPtrOutput {
	return JobStateEnum(e).ToJobStateEnumOutputWithContext(ctx).ToJobStateEnumPtrOutputWithContext(ctx)
}

func (e JobStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JobStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type JobStateEnumOutput struct{ *pulumi.OutputState }

func (JobStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStateEnum)(nil)).Elem()
}

func (o JobStateEnumOutput) ToJobStateEnumOutput() JobStateEnumOutput {
	return o
}

func (o JobStateEnumOutput) ToJobStateEnumOutputWithContext(ctx context.Context) JobStateEnumOutput {
	return o
}

func (o JobStateEnumOutput) ToJobStateEnumPtrOutput() JobStateEnumPtrOutput {
	return o.ToJobStateEnumPtrOutputWithContext(context.Background())
}

func (o JobStateEnumOutput) ToJobStateEnumPtrOutputWithContext(ctx context.Context) JobStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobStateEnum) *JobStateEnum {
		return &v
	}).(JobStateEnumPtrOutput)
}

func (o JobStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o JobStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o JobStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type JobStateEnumPtrOutput struct{ *pulumi.OutputState }

func (JobStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStateEnum)(nil)).Elem()
}

func (o JobStateEnumPtrOutput) ToJobStateEnumPtrOutput() JobStateEnumPtrOutput {
	return o
}

func (o JobStateEnumPtrOutput) ToJobStateEnumPtrOutputWithContext(ctx context.Context) JobStateEnumPtrOutput {
	return o
}

func (o JobStateEnumPtrOutput) Elem() JobStateEnumOutput {
	return o.ApplyT(func(v *JobStateEnum) JobStateEnum {
		if v != nil {
			return *v
		}
		var ret JobStateEnum
		return ret
	}).(JobStateEnumOutput)
}

func (o JobStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *JobStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// JobStateEnumInput is an input type that accepts JobStateEnumArgs and JobStateEnumOutput values.
// You can construct a concrete instance of `JobStateEnumInput` via:
//
//	JobStateEnumArgs{...}
type JobStateEnumInput interface {
	pulumi.Input

	ToJobStateEnumOutput() JobStateEnumOutput
	ToJobStateEnumOutputWithContext(context.Context) JobStateEnumOutput
}

var jobStateEnumPtrType = reflect.TypeOf((**JobStateEnum)(nil)).Elem()

type JobStateEnumPtrInput interface {
	pulumi.Input

	ToJobStateEnumPtrOutput() JobStateEnumPtrOutput
	ToJobStateEnumPtrOutputWithContext(context.Context) JobStateEnumPtrOutput
}

type jobStateEnumPtr string

func JobStateEnumPtr(v string) JobStateEnumPtrInput {
	return (*jobStateEnumPtr)(&v)
}

func (*jobStateEnumPtr) ElementType() reflect.Type {
	return jobStateEnumPtrType
}

func (in *jobStateEnumPtr) ToJobStateEnumPtrOutput() JobStateEnumPtrOutput {
	return pulumi.ToOutput(in).(JobStateEnumPtrOutput)
}

func (in *jobStateEnumPtr) ToJobStateEnumPtrOutputWithContext(ctx context.Context) JobStateEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(JobStateEnumPtrOutput)
}

// Gets or sets the frequency of recurrence (second, minute, hour, day, week, month).
type RecurrenceFrequency string

const (
	RecurrenceFrequencyMinute = RecurrenceFrequency("Minute")
	RecurrenceFrequencyHour   = RecurrenceFrequency("Hour")
	RecurrenceFrequencyDay    = RecurrenceFrequency("Day")
	RecurrenceFrequencyWeek   = RecurrenceFrequency("Week")
	RecurrenceFrequencyMonth  = RecurrenceFrequency("Month")
)

func (RecurrenceFrequency) ElementType() reflect.Type {
	return reflect.TypeOf((*RecurrenceFrequency)(nil)).Elem()
}

func (e RecurrenceFrequency) ToRecurrenceFrequencyOutput() RecurrenceFrequencyOutput {
	return pulumi.ToOutput(e).(RecurrenceFrequencyOutput)
}

func (e RecurrenceFrequency) ToRecurrenceFrequencyOutputWithContext(ctx context.Context) RecurrenceFrequencyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RecurrenceFrequencyOutput)
}

func (e RecurrenceFrequency) ToRecurrenceFrequencyPtrOutput() RecurrenceFrequencyPtrOutput {
	return e.ToRecurrenceFrequencyPtrOutputWithContext(context.Background())
}

func (e RecurrenceFrequency) ToRecurrenceFrequencyPtrOutputWithContext(ctx context.Context) RecurrenceFrequencyPtrOutput {
	return RecurrenceFrequency(e).ToRecurrenceFrequencyOutputWithContext(ctx).ToRecurrenceFrequencyPtrOutputWithContext(ctx)
}

func (e RecurrenceFrequency) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecurrenceFrequency) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecurrenceFrequency) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RecurrenceFrequency) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RecurrenceFrequencyOutput struct{ *pulumi.OutputState }

func (RecurrenceFrequencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecurrenceFrequency)(nil)).Elem()
}

func (o RecurrenceFrequencyOutput) ToRecurrenceFrequencyOutput() RecurrenceFrequencyOutput {
	return o
}

func (o RecurrenceFrequencyOutput) ToRecurrenceFrequencyOutputWithContext(ctx context.Context) RecurrenceFrequencyOutput {
	return o
}

func (o RecurrenceFrequencyOutput) ToRecurrenceFrequencyPtrOutput() RecurrenceFrequencyPtrOutput {
	return o.ToRecurrenceFrequencyPtrOutputWithContext(context.Background())
}

func (o RecurrenceFrequencyOutput) ToRecurrenceFrequencyPtrOutputWithContext(ctx context.Context) RecurrenceFrequencyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecurrenceFrequency) *RecurrenceFrequency {
		return &v
	}).(RecurrenceFrequencyPtrOutput)
}

func (o RecurrenceFrequencyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RecurrenceFrequencyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecurrenceFrequency) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RecurrenceFrequencyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecurrenceFrequencyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecurrenceFrequency) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RecurrenceFrequencyPtrOutput struct{ *pulumi.OutputState }

func (RecurrenceFrequencyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecurrenceFrequency)(nil)).Elem()
}

func (o RecurrenceFrequencyPtrOutput) ToRecurrenceFrequencyPtrOutput() RecurrenceFrequencyPtrOutput {
	return o
}

func (o RecurrenceFrequencyPtrOutput) ToRecurrenceFrequencyPtrOutputWithContext(ctx context.Context) RecurrenceFrequencyPtrOutput {
	return o
}

func (o RecurrenceFrequencyPtrOutput) Elem() RecurrenceFrequencyOutput {
	return o.ApplyT(func(v *RecurrenceFrequency) RecurrenceFrequency {
		if v != nil {
			return *v
		}
		var ret RecurrenceFrequency
		return ret
	}).(RecurrenceFrequencyOutput)
}

func (o RecurrenceFrequencyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecurrenceFrequencyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RecurrenceFrequency) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RecurrenceFrequencyInput is an input type that accepts RecurrenceFrequencyArgs and RecurrenceFrequencyOutput values.
// You can construct a concrete instance of `RecurrenceFrequencyInput` via:
//
//	RecurrenceFrequencyArgs{...}
type RecurrenceFrequencyInput interface {
	pulumi.Input

	ToRecurrenceFrequencyOutput() RecurrenceFrequencyOutput
	ToRecurrenceFrequencyOutputWithContext(context.Context) RecurrenceFrequencyOutput
}

var recurrenceFrequencyPtrType = reflect.TypeOf((**RecurrenceFrequency)(nil)).Elem()

type RecurrenceFrequencyPtrInput interface {
	pulumi.Input

	ToRecurrenceFrequencyPtrOutput() RecurrenceFrequencyPtrOutput
	ToRecurrenceFrequencyPtrOutputWithContext(context.Context) RecurrenceFrequencyPtrOutput
}

type recurrenceFrequencyPtr string

func RecurrenceFrequencyPtr(v string) RecurrenceFrequencyPtrInput {
	return (*recurrenceFrequencyPtr)(&v)
}

func (*recurrenceFrequencyPtr) ElementType() reflect.Type {
	return recurrenceFrequencyPtrType
}

func (in *recurrenceFrequencyPtr) ToRecurrenceFrequencyPtrOutput() RecurrenceFrequencyPtrOutput {
	return pulumi.ToOutput(in).(RecurrenceFrequencyPtrOutput)
}

func (in *recurrenceFrequencyPtr) ToRecurrenceFrequencyPtrOutputWithContext(ctx context.Context) RecurrenceFrequencyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RecurrenceFrequencyPtrOutput)
}

// Gets or sets the retry strategy to be used.
type RetryType string

const (
	RetryTypeNone  = RetryType("None")
	RetryTypeFixed = RetryType("Fixed")
)

func (RetryType) ElementType() reflect.Type {
	return reflect.TypeOf((*RetryType)(nil)).Elem()
}

func (e RetryType) ToRetryTypeOutput() RetryTypeOutput {
	return pulumi.ToOutput(e).(RetryTypeOutput)
}

func (e RetryType) ToRetryTypeOutputWithContext(ctx context.Context) RetryTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RetryTypeOutput)
}

func (e RetryType) ToRetryTypePtrOutput() RetryTypePtrOutput {
	return e.ToRetryTypePtrOutputWithContext(context.Background())
}

func (e RetryType) ToRetryTypePtrOutputWithContext(ctx context.Context) RetryTypePtrOutput {
	return RetryType(e).ToRetryTypeOutputWithContext(ctx).ToRetryTypePtrOutputWithContext(ctx)
}

func (e RetryType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RetryType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RetryType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RetryType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RetryTypeOutput struct{ *pulumi.OutputState }

func (RetryTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetryType)(nil)).Elem()
}

func (o RetryTypeOutput) ToRetryTypeOutput() RetryTypeOutput {
	return o
}

func (o RetryTypeOutput) ToRetryTypeOutputWithContext(ctx context.Context) RetryTypeOutput {
	return o
}

func (o RetryTypeOutput) ToRetryTypePtrOutput() RetryTypePtrOutput {
	return o.ToRetryTypePtrOutputWithContext(context.Background())
}

func (o RetryTypeOutput) ToRetryTypePtrOutputWithContext(ctx context.Context) RetryTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RetryType) *RetryType {
		return &v
	}).(RetryTypePtrOutput)
}

func (o RetryTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RetryTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RetryType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RetryTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RetryTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RetryType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RetryTypePtrOutput struct{ *pulumi.OutputState }

func (RetryTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetryType)(nil)).Elem()
}

func (o RetryTypePtrOutput) ToRetryTypePtrOutput() RetryTypePtrOutput {
	return o
}

func (o RetryTypePtrOutput) ToRetryTypePtrOutputWithContext(ctx context.Context) RetryTypePtrOutput {
	return o
}

func (o RetryTypePtrOutput) Elem() RetryTypeOutput {
	return o.ApplyT(func(v *RetryType) RetryType {
		if v != nil {
			return *v
		}
		var ret RetryType
		return ret
	}).(RetryTypeOutput)
}

func (o RetryTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RetryTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RetryType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RetryTypeInput is an input type that accepts RetryTypeArgs and RetryTypeOutput values.
// You can construct a concrete instance of `RetryTypeInput` via:
//
//	RetryTypeArgs{...}
type RetryTypeInput interface {
	pulumi.Input

	ToRetryTypeOutput() RetryTypeOutput
	ToRetryTypeOutputWithContext(context.Context) RetryTypeOutput
}

var retryTypePtrType = reflect.TypeOf((**RetryType)(nil)).Elem()

type RetryTypePtrInput interface {
	pulumi.Input

	ToRetryTypePtrOutput() RetryTypePtrOutput
	ToRetryTypePtrOutputWithContext(context.Context) RetryTypePtrOutput
}

type retryTypePtr string

func RetryTypePtr(v string) RetryTypePtrInput {
	return (*retryTypePtr)(&v)
}

func (*retryTypePtr) ElementType() reflect.Type {
	return retryTypePtrType
}

func (in *retryTypePtr) ToRetryTypePtrOutput() RetryTypePtrOutput {
	return pulumi.ToOutput(in).(RetryTypePtrOutput)
}

func (in *retryTypePtr) ToRetryTypePtrOutputWithContext(ctx context.Context) RetryTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RetryTypePtrOutput)
}

// Gets or sets the authentication type.
type ServiceBusAuthenticationType string

const (
	ServiceBusAuthenticationTypeNotSpecified    = ServiceBusAuthenticationType("NotSpecified")
	ServiceBusAuthenticationTypeSharedAccessKey = ServiceBusAuthenticationType("SharedAccessKey")
)

func (ServiceBusAuthenticationType) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBusAuthenticationType)(nil)).Elem()
}

func (e ServiceBusAuthenticationType) ToServiceBusAuthenticationTypeOutput() ServiceBusAuthenticationTypeOutput {
	return pulumi.ToOutput(e).(ServiceBusAuthenticationTypeOutput)
}

func (e ServiceBusAuthenticationType) ToServiceBusAuthenticationTypeOutputWithContext(ctx context.Context) ServiceBusAuthenticationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceBusAuthenticationTypeOutput)
}

func (e ServiceBusAuthenticationType) ToServiceBusAuthenticationTypePtrOutput() ServiceBusAuthenticationTypePtrOutput {
	return e.ToServiceBusAuthenticationTypePtrOutputWithContext(context.Background())
}

func (e ServiceBusAuthenticationType) ToServiceBusAuthenticationTypePtrOutputWithContext(ctx context.Context) ServiceBusAuthenticationTypePtrOutput {
	return ServiceBusAuthenticationType(e).ToServiceBusAuthenticationTypeOutputWithContext(ctx).ToServiceBusAuthenticationTypePtrOutputWithContext(ctx)
}

func (e ServiceBusAuthenticationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceBusAuthenticationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceBusAuthenticationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceBusAuthenticationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceBusAuthenticationTypeOutput struct{ *pulumi.OutputState }

func (ServiceBusAuthenticationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBusAuthenticationType)(nil)).Elem()
}

func (o ServiceBusAuthenticationTypeOutput) ToServiceBusAuthenticationTypeOutput() ServiceBusAuthenticationTypeOutput {
	return o
}

func (o ServiceBusAuthenticationTypeOutput) ToServiceBusAuthenticationTypeOutputWithContext(ctx context.Context) ServiceBusAuthenticationTypeOutput {
	return o
}

func (o ServiceBusAuthenticationTypeOutput) ToServiceBusAuthenticationTypePtrOutput() ServiceBusAuthenticationTypePtrOutput {
	return o.ToServiceBusAuthenticationTypePtrOutputWithContext(context.Background())
}

func (o ServiceBusAuthenticationTypeOutput) ToServiceBusAuthenticationTypePtrOutputWithContext(ctx context.Context) ServiceBusAuthenticationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceBusAuthenticationType) *ServiceBusAuthenticationType {
		return &v
	}).(ServiceBusAuthenticationTypePtrOutput)
}

func (o ServiceBusAuthenticationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceBusAuthenticationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceBusAuthenticationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceBusAuthenticationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceBusAuthenticationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceBusAuthenticationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceBusAuthenticationTypePtrOutput struct{ *pulumi.OutputState }

func (ServiceBusAuthenticationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBusAuthenticationType)(nil)).Elem()
}

func (o ServiceBusAuthenticationTypePtrOutput) ToServiceBusAuthenticationTypePtrOutput() ServiceBusAuthenticationTypePtrOutput {
	return o
}

func (o ServiceBusAuthenticationTypePtrOutput) ToServiceBusAuthenticationTypePtrOutputWithContext(ctx context.Context) ServiceBusAuthenticationTypePtrOutput {
	return o
}

func (o ServiceBusAuthenticationTypePtrOutput) Elem() ServiceBusAuthenticationTypeOutput {
	return o.ApplyT(func(v *ServiceBusAuthenticationType) ServiceBusAuthenticationType {
		if v != nil {
			return *v
		}
		var ret ServiceBusAuthenticationType
		return ret
	}).(ServiceBusAuthenticationTypeOutput)
}

func (o ServiceBusAuthenticationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceBusAuthenticationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceBusAuthenticationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceBusAuthenticationTypeInput is an input type that accepts ServiceBusAuthenticationTypeArgs and ServiceBusAuthenticationTypeOutput values.
// You can construct a concrete instance of `ServiceBusAuthenticationTypeInput` via:
//
//	ServiceBusAuthenticationTypeArgs{...}
type ServiceBusAuthenticationTypeInput interface {
	pulumi.Input

	ToServiceBusAuthenticationTypeOutput() ServiceBusAuthenticationTypeOutput
	ToServiceBusAuthenticationTypeOutputWithContext(context.Context) ServiceBusAuthenticationTypeOutput
}

var serviceBusAuthenticationTypePtrType = reflect.TypeOf((**ServiceBusAuthenticationType)(nil)).Elem()

type ServiceBusAuthenticationTypePtrInput interface {
	pulumi.Input

	ToServiceBusAuthenticationTypePtrOutput() ServiceBusAuthenticationTypePtrOutput
	ToServiceBusAuthenticationTypePtrOutputWithContext(context.Context) ServiceBusAuthenticationTypePtrOutput
}

type serviceBusAuthenticationTypePtr string

func ServiceBusAuthenticationTypePtr(v string) ServiceBusAuthenticationTypePtrInput {
	return (*serviceBusAuthenticationTypePtr)(&v)
}

func (*serviceBusAuthenticationTypePtr) ElementType() reflect.Type {
	return serviceBusAuthenticationTypePtrType
}

func (in *serviceBusAuthenticationTypePtr) ToServiceBusAuthenticationTypePtrOutput() ServiceBusAuthenticationTypePtrOutput {
	return pulumi.ToOutput(in).(ServiceBusAuthenticationTypePtrOutput)
}

func (in *serviceBusAuthenticationTypePtr) ToServiceBusAuthenticationTypePtrOutputWithContext(ctx context.Context) ServiceBusAuthenticationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceBusAuthenticationTypePtrOutput)
}

// Gets or sets the transport type.
type ServiceBusTransportType string

const (
	ServiceBusTransportTypeNotSpecified = ServiceBusTransportType("NotSpecified")
	ServiceBusTransportTypeNetMessaging = ServiceBusTransportType("NetMessaging")
	ServiceBusTransportTypeAMQP         = ServiceBusTransportType("AMQP")
)

func (ServiceBusTransportType) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBusTransportType)(nil)).Elem()
}

func (e ServiceBusTransportType) ToServiceBusTransportTypeOutput() ServiceBusTransportTypeOutput {
	return pulumi.ToOutput(e).(ServiceBusTransportTypeOutput)
}

func (e ServiceBusTransportType) ToServiceBusTransportTypeOutputWithContext(ctx context.Context) ServiceBusTransportTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceBusTransportTypeOutput)
}

func (e ServiceBusTransportType) ToServiceBusTransportTypePtrOutput() ServiceBusTransportTypePtrOutput {
	return e.ToServiceBusTransportTypePtrOutputWithContext(context.Background())
}

func (e ServiceBusTransportType) ToServiceBusTransportTypePtrOutputWithContext(ctx context.Context) ServiceBusTransportTypePtrOutput {
	return ServiceBusTransportType(e).ToServiceBusTransportTypeOutputWithContext(ctx).ToServiceBusTransportTypePtrOutputWithContext(ctx)
}

func (e ServiceBusTransportType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceBusTransportType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceBusTransportType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceBusTransportType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceBusTransportTypeOutput struct{ *pulumi.OutputState }

func (ServiceBusTransportTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBusTransportType)(nil)).Elem()
}

func (o ServiceBusTransportTypeOutput) ToServiceBusTransportTypeOutput() ServiceBusTransportTypeOutput {
	return o
}

func (o ServiceBusTransportTypeOutput) ToServiceBusTransportTypeOutputWithContext(ctx context.Context) ServiceBusTransportTypeOutput {
	return o
}

func (o ServiceBusTransportTypeOutput) ToServiceBusTransportTypePtrOutput() ServiceBusTransportTypePtrOutput {
	return o.ToServiceBusTransportTypePtrOutputWithContext(context.Background())
}

func (o ServiceBusTransportTypeOutput) ToServiceBusTransportTypePtrOutputWithContext(ctx context.Context) ServiceBusTransportTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceBusTransportType) *ServiceBusTransportType {
		return &v
	}).(ServiceBusTransportTypePtrOutput)
}

func (o ServiceBusTransportTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceBusTransportTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceBusTransportType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceBusTransportTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceBusTransportTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceBusTransportType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceBusTransportTypePtrOutput struct{ *pulumi.OutputState }

func (ServiceBusTransportTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceBusTransportType)(nil)).Elem()
}

func (o ServiceBusTransportTypePtrOutput) ToServiceBusTransportTypePtrOutput() ServiceBusTransportTypePtrOutput {
	return o
}

func (o ServiceBusTransportTypePtrOutput) ToServiceBusTransportTypePtrOutputWithContext(ctx context.Context) ServiceBusTransportTypePtrOutput {
	return o
}

func (o ServiceBusTransportTypePtrOutput) Elem() ServiceBusTransportTypeOutput {
	return o.ApplyT(func(v *ServiceBusTransportType) ServiceBusTransportType {
		if v != nil {
			return *v
		}
		var ret ServiceBusTransportType
		return ret
	}).(ServiceBusTransportTypeOutput)
}

func (o ServiceBusTransportTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceBusTransportTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceBusTransportType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceBusTransportTypeInput is an input type that accepts ServiceBusTransportTypeArgs and ServiceBusTransportTypeOutput values.
// You can construct a concrete instance of `ServiceBusTransportTypeInput` via:
//
//	ServiceBusTransportTypeArgs{...}
type ServiceBusTransportTypeInput interface {
	pulumi.Input

	ToServiceBusTransportTypeOutput() ServiceBusTransportTypeOutput
	ToServiceBusTransportTypeOutputWithContext(context.Context) ServiceBusTransportTypeOutput
}

var serviceBusTransportTypePtrType = reflect.TypeOf((**ServiceBusTransportType)(nil)).Elem()

type ServiceBusTransportTypePtrInput interface {
	pulumi.Input

	ToServiceBusTransportTypePtrOutput() ServiceBusTransportTypePtrOutput
	ToServiceBusTransportTypePtrOutputWithContext(context.Context) ServiceBusTransportTypePtrOutput
}

type serviceBusTransportTypePtr string

func ServiceBusTransportTypePtr(v string) ServiceBusTransportTypePtrInput {
	return (*serviceBusTransportTypePtr)(&v)
}

func (*serviceBusTransportTypePtr) ElementType() reflect.Type {
	return serviceBusTransportTypePtrType
}

func (in *serviceBusTransportTypePtr) ToServiceBusTransportTypePtrOutput() ServiceBusTransportTypePtrOutput {
	return pulumi.ToOutput(in).(ServiceBusTransportTypePtrOutput)
}

func (in *serviceBusTransportTypePtr) ToServiceBusTransportTypePtrOutputWithContext(ctx context.Context) ServiceBusTransportTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceBusTransportTypePtrOutput)
}

// Gets or set the SKU.
type SkuDefinition string

const (
	SkuDefinitionStandard   = SkuDefinition("Standard")
	SkuDefinitionFree       = SkuDefinition("Free")
	SkuDefinitionP10Premium = SkuDefinition("P10Premium")
	SkuDefinitionP20Premium = SkuDefinition("P20Premium")
)

func (SkuDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDefinition)(nil)).Elem()
}

func (e SkuDefinition) ToSkuDefinitionOutput() SkuDefinitionOutput {
	return pulumi.ToOutput(e).(SkuDefinitionOutput)
}

func (e SkuDefinition) ToSkuDefinitionOutputWithContext(ctx context.Context) SkuDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuDefinitionOutput)
}

func (e SkuDefinition) ToSkuDefinitionPtrOutput() SkuDefinitionPtrOutput {
	return e.ToSkuDefinitionPtrOutputWithContext(context.Background())
}

func (e SkuDefinition) ToSkuDefinitionPtrOutputWithContext(ctx context.Context) SkuDefinitionPtrOutput {
	return SkuDefinition(e).ToSkuDefinitionOutputWithContext(ctx).ToSkuDefinitionPtrOutputWithContext(ctx)
}

func (e SkuDefinition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuDefinition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuDefinition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuDefinition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuDefinitionOutput struct{ *pulumi.OutputState }

func (SkuDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDefinition)(nil)).Elem()
}

func (o SkuDefinitionOutput) ToSkuDefinitionOutput() SkuDefinitionOutput {
	return o
}

func (o SkuDefinitionOutput) ToSkuDefinitionOutputWithContext(ctx context.Context) SkuDefinitionOutput {
	return o
}

func (o SkuDefinitionOutput) ToSkuDefinitionPtrOutput() SkuDefinitionPtrOutput {
	return o.ToSkuDefinitionPtrOutputWithContext(context.Background())
}

func (o SkuDefinitionOutput) ToSkuDefinitionPtrOutputWithContext(ctx context.Context) SkuDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuDefinition) *SkuDefinition {
		return &v
	}).(SkuDefinitionPtrOutput)
}

func (o SkuDefinitionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuDefinitionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuDefinition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuDefinitionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuDefinitionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuDefinition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuDefinitionPtrOutput struct{ *pulumi.OutputState }

func (SkuDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDefinition)(nil)).Elem()
}

func (o SkuDefinitionPtrOutput) ToSkuDefinitionPtrOutput() SkuDefinitionPtrOutput {
	return o
}

func (o SkuDefinitionPtrOutput) ToSkuDefinitionPtrOutputWithContext(ctx context.Context) SkuDefinitionPtrOutput {
	return o
}

func (o SkuDefinitionPtrOutput) Elem() SkuDefinitionOutput {
	return o.ApplyT(func(v *SkuDefinition) SkuDefinition {
		if v != nil {
			return *v
		}
		var ret SkuDefinition
		return ret
	}).(SkuDefinitionOutput)
}

func (o SkuDefinitionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuDefinitionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuDefinition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuDefinitionInput is an input type that accepts SkuDefinitionArgs and SkuDefinitionOutput values.
// You can construct a concrete instance of `SkuDefinitionInput` via:
//
//	SkuDefinitionArgs{...}
type SkuDefinitionInput interface {
	pulumi.Input

	ToSkuDefinitionOutput() SkuDefinitionOutput
	ToSkuDefinitionOutputWithContext(context.Context) SkuDefinitionOutput
}

var skuDefinitionPtrType = reflect.TypeOf((**SkuDefinition)(nil)).Elem()

type SkuDefinitionPtrInput interface {
	pulumi.Input

	ToSkuDefinitionPtrOutput() SkuDefinitionPtrOutput
	ToSkuDefinitionPtrOutputWithContext(context.Context) SkuDefinitionPtrOutput
}

type skuDefinitionPtr string

func SkuDefinitionPtr(v string) SkuDefinitionPtrInput {
	return (*skuDefinitionPtr)(&v)
}

func (*skuDefinitionPtr) ElementType() reflect.Type {
	return skuDefinitionPtrType
}

func (in *skuDefinitionPtr) ToSkuDefinitionPtrOutput() SkuDefinitionPtrOutput {
	return pulumi.ToOutput(in).(SkuDefinitionPtrOutput)
}

func (in *skuDefinitionPtr) ToSkuDefinitionPtrOutputWithContext(ctx context.Context) SkuDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuDefinitionPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DayOfWeekOutput{})
	pulumi.RegisterOutputType(DayOfWeekPtrOutput{})
	pulumi.RegisterOutputType(DayOfWeekArrayOutput{})
	pulumi.RegisterOutputType(JobActionTypeOutput{})
	pulumi.RegisterOutputType(JobActionTypePtrOutput{})
	pulumi.RegisterOutputType(JobCollectionStateEnumOutput{})
	pulumi.RegisterOutputType(JobCollectionStateEnumPtrOutput{})
	pulumi.RegisterOutputType(JobScheduleDayOutput{})
	pulumi.RegisterOutputType(JobScheduleDayPtrOutput{})
	pulumi.RegisterOutputType(JobStateEnumOutput{})
	pulumi.RegisterOutputType(JobStateEnumPtrOutput{})
	pulumi.RegisterOutputType(RecurrenceFrequencyOutput{})
	pulumi.RegisterOutputType(RecurrenceFrequencyPtrOutput{})
	pulumi.RegisterOutputType(RetryTypeOutput{})
	pulumi.RegisterOutputType(RetryTypePtrOutput{})
	pulumi.RegisterOutputType(ServiceBusAuthenticationTypeOutput{})
	pulumi.RegisterOutputType(ServiceBusAuthenticationTypePtrOutput{})
	pulumi.RegisterOutputType(ServiceBusTransportTypeOutput{})
	pulumi.RegisterOutputType(ServiceBusTransportTypePtrOutput{})
	pulumi.RegisterOutputType(SkuDefinitionOutput{})
	pulumi.RegisterOutputType(SkuDefinitionPtrOutput{})
}
