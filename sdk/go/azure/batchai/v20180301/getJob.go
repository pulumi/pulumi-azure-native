// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180301

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupJob(ctx *pulumi.Context, args *LookupJobArgs, opts ...pulumi.InvokeOption) (*LookupJobResult, error) {
	var rv LookupJobResult
	err := ctx.Invoke("azure-nextgen:batchai/v20180301:getJob", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupJobArgs struct {
	// The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.
	JobName string `pulumi:"jobName"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Contains information about the job.
type LookupJobResult struct {
	// Specifies the settings for Caffe job.
	CaffeSettings *CaffeSettingsResponse `pulumi:"caffeSettings"`
	// Specifies the settings for Chainer job.
	ChainerSettings *ChainerSettingsResponse `pulumi:"chainerSettings"`
	// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
	Cluster *ResourceIdResponse `pulumi:"cluster"`
	// Specifies the settings for CNTK (aka Microsoft Cognitive Toolkit) job.
	CntkSettings *CNTKsettingsResponse `pulumi:"cntkSettings"`
	// Constraints associated with the Job.
	Constraints *JobPropertiesResponseConstraints `pulumi:"constraints"`
	// If the container was downloaded as part of cluster setup then the same container image will be used. If not provided, the job will run on the VM.
	ContainerSettings *ContainerSettingsResponse `pulumi:"containerSettings"`
	// The creation time of the job.
	CreationTime string `pulumi:"creationTime"`
	// Specifies the settings for a custom tool kit job.
	CustomToolkitSettings *CustomToolkitSettingsResponse `pulumi:"customToolkitSettings"`
	// Batch AI will setup these additional environment variables for the job.
	EnvironmentVariables []EnvironmentVariableResponse `pulumi:"environmentVariables"`
	// Contains information about the execution of a job in the Azure Batch service.
	ExecutionInfo *JobPropertiesResponseExecutionInfo `pulumi:"executionInfo"`
	// The current state of the job. Possible values are: queued - The job is queued and able to run. A job enters this state when it is created, or when it is awaiting a retry after a failed run. running - The job is running on a compute cluster. This includes job-level preparation such as downloading resource files or set up container specified on the job - it does not necessarily mean that the job command line has started executing. terminating - The job is terminated by the user, the terminate operation is in progress. succeeded - The job has completed running successfully and exited with exit code 0. failed - The job has finished unsuccessfully (failed with a non-zero exit code) and has exhausted its retry limit. A job is also marked as failed if an error occurred launching the job.
	ExecutionState *string `pulumi:"executionState"`
	// The time at which the job entered its current execution state.
	ExecutionStateTransitionTime string `pulumi:"executionStateTransitionTime"`
	// Describe the experiment information of the job
	ExperimentName   *string                  `pulumi:"experimentName"`
	InputDirectories []InputDirectoryResponse `pulumi:"inputDirectories"`
	// Batch AI creates job's output directories under an unique path to avoid conflicts between jobs. This value contains a path segment generated by Batch AI to make the path unique and can be used to find the output directory on the node or mounted filesystem.
	JobOutputDirectoryPathSegment *string `pulumi:"jobOutputDirectoryPathSegment"`
	// The specified actions will run on all the nodes that are part of the job
	JobPreparation *JobPreparationResponse `pulumi:"jobPreparation"`
	// The location of the resource
	Location string `pulumi:"location"`
	// These volumes will be mounted before the job execution and will be unmounted after the job completion. The volumes will be mounted at location specified by $AZ_BATCHAI_JOB_MOUNT_ROOT environment variable.
	MountVolumes *MountVolumesResponse `pulumi:"mountVolumes"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The job will be gang scheduled on that many compute nodes
	NodeCount         *int                      `pulumi:"nodeCount"`
	OutputDirectories []OutputDirectoryResponse `pulumi:"outputDirectories"`
	// Priority associated with the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.
	Priority *int `pulumi:"priority"`
	// The provisioned state of the Batch AI job
	ProvisioningState string `pulumi:"provisioningState"`
	// The time at which the job entered its current provisioning state.
	ProvisioningStateTransitionTime string `pulumi:"provisioningStateTransitionTime"`
	// Specifies the settings for pyTorch job.
	PyTorchSettings *PyTorchSettingsResponse `pulumi:"pyTorchSettings"`
	// Batch AI will setup these additional environment variables for the job. Server will never report values of these variables back.
	Secrets []EnvironmentVariableWithSecretValueResponse `pulumi:"secrets"`
	// The path where the Batch AI service will upload stdout and stderror of the job.
	StdOutErrPathPrefix *string `pulumi:"stdOutErrPathPrefix"`
	// The tags of the resource
	Tags map[string]string `pulumi:"tags"`
	// Specifies the settings for TensorFlow job.
	TensorFlowSettings *TensorFlowSettingsResponse `pulumi:"tensorFlowSettings"`
	// Possible values are: cntk, tensorflow, caffe, caffe2, chainer, pytorch, custom.
	ToolType *string `pulumi:"toolType"`
	// The type of the resource
	Type string `pulumi:"type"`
}
