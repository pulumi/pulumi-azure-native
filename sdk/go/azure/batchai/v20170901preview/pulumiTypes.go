// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the pending and running jobs on the cluster.
type AutoScaleSettings struct {
	InitialNodeCount *int `pulumi:"initialNodeCount"`
	MaximumNodeCount int  `pulumi:"maximumNodeCount"`
	MinimumNodeCount int  `pulumi:"minimumNodeCount"`
}

// AutoScaleSettingsInput is an input type that accepts AutoScaleSettingsArgs and AutoScaleSettingsOutput values.
// You can construct a concrete instance of `AutoScaleSettingsInput` via:
//
//          AutoScaleSettingsArgs{...}
type AutoScaleSettingsInput interface {
	pulumi.Input

	ToAutoScaleSettingsOutput() AutoScaleSettingsOutput
	ToAutoScaleSettingsOutputWithContext(context.Context) AutoScaleSettingsOutput
}

// The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the pending and running jobs on the cluster.
type AutoScaleSettingsArgs struct {
	InitialNodeCount pulumi.IntPtrInput `pulumi:"initialNodeCount"`
	MaximumNodeCount pulumi.IntInput    `pulumi:"maximumNodeCount"`
	MinimumNodeCount pulumi.IntInput    `pulumi:"minimumNodeCount"`
}

func (AutoScaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScaleSettings)(nil)).Elem()
}

func (i AutoScaleSettingsArgs) ToAutoScaleSettingsOutput() AutoScaleSettingsOutput {
	return i.ToAutoScaleSettingsOutputWithContext(context.Background())
}

func (i AutoScaleSettingsArgs) ToAutoScaleSettingsOutputWithContext(ctx context.Context) AutoScaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScaleSettingsOutput)
}

func (i AutoScaleSettingsArgs) ToAutoScaleSettingsPtrOutput() AutoScaleSettingsPtrOutput {
	return i.ToAutoScaleSettingsPtrOutputWithContext(context.Background())
}

func (i AutoScaleSettingsArgs) ToAutoScaleSettingsPtrOutputWithContext(ctx context.Context) AutoScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScaleSettingsOutput).ToAutoScaleSettingsPtrOutputWithContext(ctx)
}

// AutoScaleSettingsPtrInput is an input type that accepts AutoScaleSettingsArgs, AutoScaleSettingsPtr and AutoScaleSettingsPtrOutput values.
// You can construct a concrete instance of `AutoScaleSettingsPtrInput` via:
//
//          AutoScaleSettingsArgs{...}
//
//  or:
//
//          nil
type AutoScaleSettingsPtrInput interface {
	pulumi.Input

	ToAutoScaleSettingsPtrOutput() AutoScaleSettingsPtrOutput
	ToAutoScaleSettingsPtrOutputWithContext(context.Context) AutoScaleSettingsPtrOutput
}

type autoScaleSettingsPtrType AutoScaleSettingsArgs

func AutoScaleSettingsPtr(v *AutoScaleSettingsArgs) AutoScaleSettingsPtrInput {
	return (*autoScaleSettingsPtrType)(v)
}

func (*autoScaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScaleSettings)(nil)).Elem()
}

func (i *autoScaleSettingsPtrType) ToAutoScaleSettingsPtrOutput() AutoScaleSettingsPtrOutput {
	return i.ToAutoScaleSettingsPtrOutputWithContext(context.Background())
}

func (i *autoScaleSettingsPtrType) ToAutoScaleSettingsPtrOutputWithContext(ctx context.Context) AutoScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScaleSettingsPtrOutput)
}

// The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the pending and running jobs on the cluster.
type AutoScaleSettingsOutput struct{ *pulumi.OutputState }

func (AutoScaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScaleSettings)(nil)).Elem()
}

func (o AutoScaleSettingsOutput) ToAutoScaleSettingsOutput() AutoScaleSettingsOutput {
	return o
}

func (o AutoScaleSettingsOutput) ToAutoScaleSettingsOutputWithContext(ctx context.Context) AutoScaleSettingsOutput {
	return o
}

func (o AutoScaleSettingsOutput) ToAutoScaleSettingsPtrOutput() AutoScaleSettingsPtrOutput {
	return o.ToAutoScaleSettingsPtrOutputWithContext(context.Background())
}

func (o AutoScaleSettingsOutput) ToAutoScaleSettingsPtrOutputWithContext(ctx context.Context) AutoScaleSettingsPtrOutput {
	return o.ApplyT(func(v AutoScaleSettings) *AutoScaleSettings {
		return &v
	}).(AutoScaleSettingsPtrOutput)
}
func (o AutoScaleSettingsOutput) InitialNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleSettings) *int { return v.InitialNodeCount }).(pulumi.IntPtrOutput)
}

func (o AutoScaleSettingsOutput) MaximumNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v AutoScaleSettings) int { return v.MaximumNodeCount }).(pulumi.IntOutput)
}

func (o AutoScaleSettingsOutput) MinimumNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v AutoScaleSettings) int { return v.MinimumNodeCount }).(pulumi.IntOutput)
}

type AutoScaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (AutoScaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScaleSettings)(nil)).Elem()
}

func (o AutoScaleSettingsPtrOutput) ToAutoScaleSettingsPtrOutput() AutoScaleSettingsPtrOutput {
	return o
}

func (o AutoScaleSettingsPtrOutput) ToAutoScaleSettingsPtrOutputWithContext(ctx context.Context) AutoScaleSettingsPtrOutput {
	return o
}

func (o AutoScaleSettingsPtrOutput) Elem() AutoScaleSettingsOutput {
	return o.ApplyT(func(v *AutoScaleSettings) AutoScaleSettings { return *v }).(AutoScaleSettingsOutput)
}

func (o AutoScaleSettingsPtrOutput) InitialNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.InitialNodeCount
	}).(pulumi.IntPtrOutput)
}

func (o AutoScaleSettingsPtrOutput) MaximumNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleSettings) *int {
		if v == nil {
			return nil
		}
		return &v.MaximumNodeCount
	}).(pulumi.IntPtrOutput)
}

func (o AutoScaleSettingsPtrOutput) MinimumNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleSettings) *int {
		if v == nil {
			return nil
		}
		return &v.MinimumNodeCount
	}).(pulumi.IntPtrOutput)
}

// The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the pending and running jobs on the cluster.
type AutoScaleSettingsResponse struct {
	InitialNodeCount *int `pulumi:"initialNodeCount"`
	MaximumNodeCount int  `pulumi:"maximumNodeCount"`
	MinimumNodeCount int  `pulumi:"minimumNodeCount"`
}

// AutoScaleSettingsResponseInput is an input type that accepts AutoScaleSettingsResponseArgs and AutoScaleSettingsResponseOutput values.
// You can construct a concrete instance of `AutoScaleSettingsResponseInput` via:
//
//          AutoScaleSettingsResponseArgs{...}
type AutoScaleSettingsResponseInput interface {
	pulumi.Input

	ToAutoScaleSettingsResponseOutput() AutoScaleSettingsResponseOutput
	ToAutoScaleSettingsResponseOutputWithContext(context.Context) AutoScaleSettingsResponseOutput
}

// The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the pending and running jobs on the cluster.
type AutoScaleSettingsResponseArgs struct {
	InitialNodeCount pulumi.IntPtrInput `pulumi:"initialNodeCount"`
	MaximumNodeCount pulumi.IntInput    `pulumi:"maximumNodeCount"`
	MinimumNodeCount pulumi.IntInput    `pulumi:"minimumNodeCount"`
}

func (AutoScaleSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScaleSettingsResponse)(nil)).Elem()
}

func (i AutoScaleSettingsResponseArgs) ToAutoScaleSettingsResponseOutput() AutoScaleSettingsResponseOutput {
	return i.ToAutoScaleSettingsResponseOutputWithContext(context.Background())
}

func (i AutoScaleSettingsResponseArgs) ToAutoScaleSettingsResponseOutputWithContext(ctx context.Context) AutoScaleSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScaleSettingsResponseOutput)
}

func (i AutoScaleSettingsResponseArgs) ToAutoScaleSettingsResponsePtrOutput() AutoScaleSettingsResponsePtrOutput {
	return i.ToAutoScaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (i AutoScaleSettingsResponseArgs) ToAutoScaleSettingsResponsePtrOutputWithContext(ctx context.Context) AutoScaleSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScaleSettingsResponseOutput).ToAutoScaleSettingsResponsePtrOutputWithContext(ctx)
}

// AutoScaleSettingsResponsePtrInput is an input type that accepts AutoScaleSettingsResponseArgs, AutoScaleSettingsResponsePtr and AutoScaleSettingsResponsePtrOutput values.
// You can construct a concrete instance of `AutoScaleSettingsResponsePtrInput` via:
//
//          AutoScaleSettingsResponseArgs{...}
//
//  or:
//
//          nil
type AutoScaleSettingsResponsePtrInput interface {
	pulumi.Input

	ToAutoScaleSettingsResponsePtrOutput() AutoScaleSettingsResponsePtrOutput
	ToAutoScaleSettingsResponsePtrOutputWithContext(context.Context) AutoScaleSettingsResponsePtrOutput
}

type autoScaleSettingsResponsePtrType AutoScaleSettingsResponseArgs

func AutoScaleSettingsResponsePtr(v *AutoScaleSettingsResponseArgs) AutoScaleSettingsResponsePtrInput {
	return (*autoScaleSettingsResponsePtrType)(v)
}

func (*autoScaleSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScaleSettingsResponse)(nil)).Elem()
}

func (i *autoScaleSettingsResponsePtrType) ToAutoScaleSettingsResponsePtrOutput() AutoScaleSettingsResponsePtrOutput {
	return i.ToAutoScaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *autoScaleSettingsResponsePtrType) ToAutoScaleSettingsResponsePtrOutputWithContext(ctx context.Context) AutoScaleSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScaleSettingsResponsePtrOutput)
}

// The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the pending and running jobs on the cluster.
type AutoScaleSettingsResponseOutput struct{ *pulumi.OutputState }

func (AutoScaleSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScaleSettingsResponse)(nil)).Elem()
}

func (o AutoScaleSettingsResponseOutput) ToAutoScaleSettingsResponseOutput() AutoScaleSettingsResponseOutput {
	return o
}

func (o AutoScaleSettingsResponseOutput) ToAutoScaleSettingsResponseOutputWithContext(ctx context.Context) AutoScaleSettingsResponseOutput {
	return o
}

func (o AutoScaleSettingsResponseOutput) ToAutoScaleSettingsResponsePtrOutput() AutoScaleSettingsResponsePtrOutput {
	return o.ToAutoScaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (o AutoScaleSettingsResponseOutput) ToAutoScaleSettingsResponsePtrOutputWithContext(ctx context.Context) AutoScaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v AutoScaleSettingsResponse) *AutoScaleSettingsResponse {
		return &v
	}).(AutoScaleSettingsResponsePtrOutput)
}
func (o AutoScaleSettingsResponseOutput) InitialNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleSettingsResponse) *int { return v.InitialNodeCount }).(pulumi.IntPtrOutput)
}

func (o AutoScaleSettingsResponseOutput) MaximumNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v AutoScaleSettingsResponse) int { return v.MaximumNodeCount }).(pulumi.IntOutput)
}

func (o AutoScaleSettingsResponseOutput) MinimumNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v AutoScaleSettingsResponse) int { return v.MinimumNodeCount }).(pulumi.IntOutput)
}

type AutoScaleSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoScaleSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScaleSettingsResponse)(nil)).Elem()
}

func (o AutoScaleSettingsResponsePtrOutput) ToAutoScaleSettingsResponsePtrOutput() AutoScaleSettingsResponsePtrOutput {
	return o
}

func (o AutoScaleSettingsResponsePtrOutput) ToAutoScaleSettingsResponsePtrOutputWithContext(ctx context.Context) AutoScaleSettingsResponsePtrOutput {
	return o
}

func (o AutoScaleSettingsResponsePtrOutput) Elem() AutoScaleSettingsResponseOutput {
	return o.ApplyT(func(v *AutoScaleSettingsResponse) AutoScaleSettingsResponse { return *v }).(AutoScaleSettingsResponseOutput)
}

func (o AutoScaleSettingsResponsePtrOutput) InitialNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.InitialNodeCount
	}).(pulumi.IntPtrOutput)
}

func (o AutoScaleSettingsResponsePtrOutput) MaximumNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MaximumNodeCount
	}).(pulumi.IntPtrOutput)
}

func (o AutoScaleSettingsResponsePtrOutput) MinimumNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MinimumNodeCount
	}).(pulumi.IntPtrOutput)
}

// Provides required information, for the service to be able to mount Azure Blob Storage container on the cluster nodes.
type AzureBlobFileSystemReference struct {
	AccountName   string `pulumi:"accountName"`
	ContainerName string `pulumi:"containerName"`
	// Credentials to access Azure File Share.
	Credentials  AzureStorageCredentialsInfo `pulumi:"credentials"`
	MountOptions *string                     `pulumi:"mountOptions"`
	// Note that all blob file systems will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
	RelativeMountPath string `pulumi:"relativeMountPath"`
}

// AzureBlobFileSystemReferenceInput is an input type that accepts AzureBlobFileSystemReferenceArgs and AzureBlobFileSystemReferenceOutput values.
// You can construct a concrete instance of `AzureBlobFileSystemReferenceInput` via:
//
//          AzureBlobFileSystemReferenceArgs{...}
type AzureBlobFileSystemReferenceInput interface {
	pulumi.Input

	ToAzureBlobFileSystemReferenceOutput() AzureBlobFileSystemReferenceOutput
	ToAzureBlobFileSystemReferenceOutputWithContext(context.Context) AzureBlobFileSystemReferenceOutput
}

// Provides required information, for the service to be able to mount Azure Blob Storage container on the cluster nodes.
type AzureBlobFileSystemReferenceArgs struct {
	AccountName   pulumi.StringInput `pulumi:"accountName"`
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// Credentials to access Azure File Share.
	Credentials  AzureStorageCredentialsInfoInput `pulumi:"credentials"`
	MountOptions pulumi.StringPtrInput            `pulumi:"mountOptions"`
	// Note that all blob file systems will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
	RelativeMountPath pulumi.StringInput `pulumi:"relativeMountPath"`
}

func (AzureBlobFileSystemReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobFileSystemReference)(nil)).Elem()
}

func (i AzureBlobFileSystemReferenceArgs) ToAzureBlobFileSystemReferenceOutput() AzureBlobFileSystemReferenceOutput {
	return i.ToAzureBlobFileSystemReferenceOutputWithContext(context.Background())
}

func (i AzureBlobFileSystemReferenceArgs) ToAzureBlobFileSystemReferenceOutputWithContext(ctx context.Context) AzureBlobFileSystemReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobFileSystemReferenceOutput)
}

// AzureBlobFileSystemReferenceArrayInput is an input type that accepts AzureBlobFileSystemReferenceArray and AzureBlobFileSystemReferenceArrayOutput values.
// You can construct a concrete instance of `AzureBlobFileSystemReferenceArrayInput` via:
//
//          AzureBlobFileSystemReferenceArray{ AzureBlobFileSystemReferenceArgs{...} }
type AzureBlobFileSystemReferenceArrayInput interface {
	pulumi.Input

	ToAzureBlobFileSystemReferenceArrayOutput() AzureBlobFileSystemReferenceArrayOutput
	ToAzureBlobFileSystemReferenceArrayOutputWithContext(context.Context) AzureBlobFileSystemReferenceArrayOutput
}

type AzureBlobFileSystemReferenceArray []AzureBlobFileSystemReferenceInput

func (AzureBlobFileSystemReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureBlobFileSystemReference)(nil)).Elem()
}

func (i AzureBlobFileSystemReferenceArray) ToAzureBlobFileSystemReferenceArrayOutput() AzureBlobFileSystemReferenceArrayOutput {
	return i.ToAzureBlobFileSystemReferenceArrayOutputWithContext(context.Background())
}

func (i AzureBlobFileSystemReferenceArray) ToAzureBlobFileSystemReferenceArrayOutputWithContext(ctx context.Context) AzureBlobFileSystemReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobFileSystemReferenceArrayOutput)
}

// Provides required information, for the service to be able to mount Azure Blob Storage container on the cluster nodes.
type AzureBlobFileSystemReferenceOutput struct{ *pulumi.OutputState }

func (AzureBlobFileSystemReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobFileSystemReference)(nil)).Elem()
}

func (o AzureBlobFileSystemReferenceOutput) ToAzureBlobFileSystemReferenceOutput() AzureBlobFileSystemReferenceOutput {
	return o
}

func (o AzureBlobFileSystemReferenceOutput) ToAzureBlobFileSystemReferenceOutputWithContext(ctx context.Context) AzureBlobFileSystemReferenceOutput {
	return o
}

func (o AzureBlobFileSystemReferenceOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobFileSystemReference) string { return v.AccountName }).(pulumi.StringOutput)
}

func (o AzureBlobFileSystemReferenceOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobFileSystemReference) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Credentials to access Azure File Share.
func (o AzureBlobFileSystemReferenceOutput) Credentials() AzureStorageCredentialsInfoOutput {
	return o.ApplyT(func(v AzureBlobFileSystemReference) AzureStorageCredentialsInfo { return v.Credentials }).(AzureStorageCredentialsInfoOutput)
}

func (o AzureBlobFileSystemReferenceOutput) MountOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobFileSystemReference) *string { return v.MountOptions }).(pulumi.StringPtrOutput)
}

// Note that all blob file systems will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
func (o AzureBlobFileSystemReferenceOutput) RelativeMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobFileSystemReference) string { return v.RelativeMountPath }).(pulumi.StringOutput)
}

type AzureBlobFileSystemReferenceArrayOutput struct{ *pulumi.OutputState }

func (AzureBlobFileSystemReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureBlobFileSystemReference)(nil)).Elem()
}

func (o AzureBlobFileSystemReferenceArrayOutput) ToAzureBlobFileSystemReferenceArrayOutput() AzureBlobFileSystemReferenceArrayOutput {
	return o
}

func (o AzureBlobFileSystemReferenceArrayOutput) ToAzureBlobFileSystemReferenceArrayOutputWithContext(ctx context.Context) AzureBlobFileSystemReferenceArrayOutput {
	return o
}

func (o AzureBlobFileSystemReferenceArrayOutput) Index(i pulumi.IntInput) AzureBlobFileSystemReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureBlobFileSystemReference {
		return vs[0].([]AzureBlobFileSystemReference)[vs[1].(int)]
	}).(AzureBlobFileSystemReferenceOutput)
}

// Provides required information, for the service to be able to mount Azure Blob Storage container on the cluster nodes.
type AzureBlobFileSystemReferenceResponse struct {
	AccountName   string `pulumi:"accountName"`
	ContainerName string `pulumi:"containerName"`
	// Credentials to access Azure File Share.
	Credentials  AzureStorageCredentialsInfoResponse `pulumi:"credentials"`
	MountOptions *string                             `pulumi:"mountOptions"`
	// Note that all blob file systems will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
	RelativeMountPath string `pulumi:"relativeMountPath"`
}

// AzureBlobFileSystemReferenceResponseInput is an input type that accepts AzureBlobFileSystemReferenceResponseArgs and AzureBlobFileSystemReferenceResponseOutput values.
// You can construct a concrete instance of `AzureBlobFileSystemReferenceResponseInput` via:
//
//          AzureBlobFileSystemReferenceResponseArgs{...}
type AzureBlobFileSystemReferenceResponseInput interface {
	pulumi.Input

	ToAzureBlobFileSystemReferenceResponseOutput() AzureBlobFileSystemReferenceResponseOutput
	ToAzureBlobFileSystemReferenceResponseOutputWithContext(context.Context) AzureBlobFileSystemReferenceResponseOutput
}

// Provides required information, for the service to be able to mount Azure Blob Storage container on the cluster nodes.
type AzureBlobFileSystemReferenceResponseArgs struct {
	AccountName   pulumi.StringInput `pulumi:"accountName"`
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// Credentials to access Azure File Share.
	Credentials  AzureStorageCredentialsInfoResponseInput `pulumi:"credentials"`
	MountOptions pulumi.StringPtrInput                    `pulumi:"mountOptions"`
	// Note that all blob file systems will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
	RelativeMountPath pulumi.StringInput `pulumi:"relativeMountPath"`
}

func (AzureBlobFileSystemReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobFileSystemReferenceResponse)(nil)).Elem()
}

func (i AzureBlobFileSystemReferenceResponseArgs) ToAzureBlobFileSystemReferenceResponseOutput() AzureBlobFileSystemReferenceResponseOutput {
	return i.ToAzureBlobFileSystemReferenceResponseOutputWithContext(context.Background())
}

func (i AzureBlobFileSystemReferenceResponseArgs) ToAzureBlobFileSystemReferenceResponseOutputWithContext(ctx context.Context) AzureBlobFileSystemReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobFileSystemReferenceResponseOutput)
}

// AzureBlobFileSystemReferenceResponseArrayInput is an input type that accepts AzureBlobFileSystemReferenceResponseArray and AzureBlobFileSystemReferenceResponseArrayOutput values.
// You can construct a concrete instance of `AzureBlobFileSystemReferenceResponseArrayInput` via:
//
//          AzureBlobFileSystemReferenceResponseArray{ AzureBlobFileSystemReferenceResponseArgs{...} }
type AzureBlobFileSystemReferenceResponseArrayInput interface {
	pulumi.Input

	ToAzureBlobFileSystemReferenceResponseArrayOutput() AzureBlobFileSystemReferenceResponseArrayOutput
	ToAzureBlobFileSystemReferenceResponseArrayOutputWithContext(context.Context) AzureBlobFileSystemReferenceResponseArrayOutput
}

type AzureBlobFileSystemReferenceResponseArray []AzureBlobFileSystemReferenceResponseInput

func (AzureBlobFileSystemReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureBlobFileSystemReferenceResponse)(nil)).Elem()
}

func (i AzureBlobFileSystemReferenceResponseArray) ToAzureBlobFileSystemReferenceResponseArrayOutput() AzureBlobFileSystemReferenceResponseArrayOutput {
	return i.ToAzureBlobFileSystemReferenceResponseArrayOutputWithContext(context.Background())
}

func (i AzureBlobFileSystemReferenceResponseArray) ToAzureBlobFileSystemReferenceResponseArrayOutputWithContext(ctx context.Context) AzureBlobFileSystemReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobFileSystemReferenceResponseArrayOutput)
}

// Provides required information, for the service to be able to mount Azure Blob Storage container on the cluster nodes.
type AzureBlobFileSystemReferenceResponseOutput struct{ *pulumi.OutputState }

func (AzureBlobFileSystemReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobFileSystemReferenceResponse)(nil)).Elem()
}

func (o AzureBlobFileSystemReferenceResponseOutput) ToAzureBlobFileSystemReferenceResponseOutput() AzureBlobFileSystemReferenceResponseOutput {
	return o
}

func (o AzureBlobFileSystemReferenceResponseOutput) ToAzureBlobFileSystemReferenceResponseOutputWithContext(ctx context.Context) AzureBlobFileSystemReferenceResponseOutput {
	return o
}

func (o AzureBlobFileSystemReferenceResponseOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobFileSystemReferenceResponse) string { return v.AccountName }).(pulumi.StringOutput)
}

func (o AzureBlobFileSystemReferenceResponseOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobFileSystemReferenceResponse) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Credentials to access Azure File Share.
func (o AzureBlobFileSystemReferenceResponseOutput) Credentials() AzureStorageCredentialsInfoResponseOutput {
	return o.ApplyT(func(v AzureBlobFileSystemReferenceResponse) AzureStorageCredentialsInfoResponse { return v.Credentials }).(AzureStorageCredentialsInfoResponseOutput)
}

func (o AzureBlobFileSystemReferenceResponseOutput) MountOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobFileSystemReferenceResponse) *string { return v.MountOptions }).(pulumi.StringPtrOutput)
}

// Note that all blob file systems will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
func (o AzureBlobFileSystemReferenceResponseOutput) RelativeMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobFileSystemReferenceResponse) string { return v.RelativeMountPath }).(pulumi.StringOutput)
}

type AzureBlobFileSystemReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureBlobFileSystemReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureBlobFileSystemReferenceResponse)(nil)).Elem()
}

func (o AzureBlobFileSystemReferenceResponseArrayOutput) ToAzureBlobFileSystemReferenceResponseArrayOutput() AzureBlobFileSystemReferenceResponseArrayOutput {
	return o
}

func (o AzureBlobFileSystemReferenceResponseArrayOutput) ToAzureBlobFileSystemReferenceResponseArrayOutputWithContext(ctx context.Context) AzureBlobFileSystemReferenceResponseArrayOutput {
	return o
}

func (o AzureBlobFileSystemReferenceResponseArrayOutput) Index(i pulumi.IntInput) AzureBlobFileSystemReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureBlobFileSystemReferenceResponse {
		return vs[0].([]AzureBlobFileSystemReferenceResponse)[vs[1].(int)]
	}).(AzureBlobFileSystemReferenceResponseOutput)
}

// Details of the Azure File Share to mount on the cluster.
type AzureFileShareReference struct {
	AccountName  string `pulumi:"accountName"`
	AzureFileUrl string `pulumi:"azureFileUrl"`
	// Credentials to access Azure File Share.
	Credentials AzureStorageCredentialsInfo `pulumi:"credentials"`
	// Default value is 0777. Valid only if OS is linux.
	DirectoryMode *string `pulumi:"directoryMode"`
	// Default value is 0777. Valid only if OS is linux.
	FileMode *string `pulumi:"fileMode"`
	// Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
	RelativeMountPath string `pulumi:"relativeMountPath"`
}

// AzureFileShareReferenceInput is an input type that accepts AzureFileShareReferenceArgs and AzureFileShareReferenceOutput values.
// You can construct a concrete instance of `AzureFileShareReferenceInput` via:
//
//          AzureFileShareReferenceArgs{...}
type AzureFileShareReferenceInput interface {
	pulumi.Input

	ToAzureFileShareReferenceOutput() AzureFileShareReferenceOutput
	ToAzureFileShareReferenceOutputWithContext(context.Context) AzureFileShareReferenceOutput
}

// Details of the Azure File Share to mount on the cluster.
type AzureFileShareReferenceArgs struct {
	AccountName  pulumi.StringInput `pulumi:"accountName"`
	AzureFileUrl pulumi.StringInput `pulumi:"azureFileUrl"`
	// Credentials to access Azure File Share.
	Credentials AzureStorageCredentialsInfoInput `pulumi:"credentials"`
	// Default value is 0777. Valid only if OS is linux.
	DirectoryMode pulumi.StringPtrInput `pulumi:"directoryMode"`
	// Default value is 0777. Valid only if OS is linux.
	FileMode pulumi.StringPtrInput `pulumi:"fileMode"`
	// Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
	RelativeMountPath pulumi.StringInput `pulumi:"relativeMountPath"`
}

func (AzureFileShareReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileShareReference)(nil)).Elem()
}

func (i AzureFileShareReferenceArgs) ToAzureFileShareReferenceOutput() AzureFileShareReferenceOutput {
	return i.ToAzureFileShareReferenceOutputWithContext(context.Background())
}

func (i AzureFileShareReferenceArgs) ToAzureFileShareReferenceOutputWithContext(ctx context.Context) AzureFileShareReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileShareReferenceOutput)
}

// AzureFileShareReferenceArrayInput is an input type that accepts AzureFileShareReferenceArray and AzureFileShareReferenceArrayOutput values.
// You can construct a concrete instance of `AzureFileShareReferenceArrayInput` via:
//
//          AzureFileShareReferenceArray{ AzureFileShareReferenceArgs{...} }
type AzureFileShareReferenceArrayInput interface {
	pulumi.Input

	ToAzureFileShareReferenceArrayOutput() AzureFileShareReferenceArrayOutput
	ToAzureFileShareReferenceArrayOutputWithContext(context.Context) AzureFileShareReferenceArrayOutput
}

type AzureFileShareReferenceArray []AzureFileShareReferenceInput

func (AzureFileShareReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFileShareReference)(nil)).Elem()
}

func (i AzureFileShareReferenceArray) ToAzureFileShareReferenceArrayOutput() AzureFileShareReferenceArrayOutput {
	return i.ToAzureFileShareReferenceArrayOutputWithContext(context.Background())
}

func (i AzureFileShareReferenceArray) ToAzureFileShareReferenceArrayOutputWithContext(ctx context.Context) AzureFileShareReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileShareReferenceArrayOutput)
}

// Details of the Azure File Share to mount on the cluster.
type AzureFileShareReferenceOutput struct{ *pulumi.OutputState }

func (AzureFileShareReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileShareReference)(nil)).Elem()
}

func (o AzureFileShareReferenceOutput) ToAzureFileShareReferenceOutput() AzureFileShareReferenceOutput {
	return o
}

func (o AzureFileShareReferenceOutput) ToAzureFileShareReferenceOutputWithContext(ctx context.Context) AzureFileShareReferenceOutput {
	return o
}

func (o AzureFileShareReferenceOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileShareReference) string { return v.AccountName }).(pulumi.StringOutput)
}

func (o AzureFileShareReferenceOutput) AzureFileUrl() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileShareReference) string { return v.AzureFileUrl }).(pulumi.StringOutput)
}

// Credentials to access Azure File Share.
func (o AzureFileShareReferenceOutput) Credentials() AzureStorageCredentialsInfoOutput {
	return o.ApplyT(func(v AzureFileShareReference) AzureStorageCredentialsInfo { return v.Credentials }).(AzureStorageCredentialsInfoOutput)
}

// Default value is 0777. Valid only if OS is linux.
func (o AzureFileShareReferenceOutput) DirectoryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileShareReference) *string { return v.DirectoryMode }).(pulumi.StringPtrOutput)
}

// Default value is 0777. Valid only if OS is linux.
func (o AzureFileShareReferenceOutput) FileMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileShareReference) *string { return v.FileMode }).(pulumi.StringPtrOutput)
}

// Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
func (o AzureFileShareReferenceOutput) RelativeMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileShareReference) string { return v.RelativeMountPath }).(pulumi.StringOutput)
}

type AzureFileShareReferenceArrayOutput struct{ *pulumi.OutputState }

func (AzureFileShareReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFileShareReference)(nil)).Elem()
}

func (o AzureFileShareReferenceArrayOutput) ToAzureFileShareReferenceArrayOutput() AzureFileShareReferenceArrayOutput {
	return o
}

func (o AzureFileShareReferenceArrayOutput) ToAzureFileShareReferenceArrayOutputWithContext(ctx context.Context) AzureFileShareReferenceArrayOutput {
	return o
}

func (o AzureFileShareReferenceArrayOutput) Index(i pulumi.IntInput) AzureFileShareReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFileShareReference {
		return vs[0].([]AzureFileShareReference)[vs[1].(int)]
	}).(AzureFileShareReferenceOutput)
}

// Details of the Azure File Share to mount on the cluster.
type AzureFileShareReferenceResponse struct {
	AccountName  string `pulumi:"accountName"`
	AzureFileUrl string `pulumi:"azureFileUrl"`
	// Credentials to access Azure File Share.
	Credentials AzureStorageCredentialsInfoResponse `pulumi:"credentials"`
	// Default value is 0777. Valid only if OS is linux.
	DirectoryMode *string `pulumi:"directoryMode"`
	// Default value is 0777. Valid only if OS is linux.
	FileMode *string `pulumi:"fileMode"`
	// Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
	RelativeMountPath string `pulumi:"relativeMountPath"`
}

// AzureFileShareReferenceResponseInput is an input type that accepts AzureFileShareReferenceResponseArgs and AzureFileShareReferenceResponseOutput values.
// You can construct a concrete instance of `AzureFileShareReferenceResponseInput` via:
//
//          AzureFileShareReferenceResponseArgs{...}
type AzureFileShareReferenceResponseInput interface {
	pulumi.Input

	ToAzureFileShareReferenceResponseOutput() AzureFileShareReferenceResponseOutput
	ToAzureFileShareReferenceResponseOutputWithContext(context.Context) AzureFileShareReferenceResponseOutput
}

// Details of the Azure File Share to mount on the cluster.
type AzureFileShareReferenceResponseArgs struct {
	AccountName  pulumi.StringInput `pulumi:"accountName"`
	AzureFileUrl pulumi.StringInput `pulumi:"azureFileUrl"`
	// Credentials to access Azure File Share.
	Credentials AzureStorageCredentialsInfoResponseInput `pulumi:"credentials"`
	// Default value is 0777. Valid only if OS is linux.
	DirectoryMode pulumi.StringPtrInput `pulumi:"directoryMode"`
	// Default value is 0777. Valid only if OS is linux.
	FileMode pulumi.StringPtrInput `pulumi:"fileMode"`
	// Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
	RelativeMountPath pulumi.StringInput `pulumi:"relativeMountPath"`
}

func (AzureFileShareReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileShareReferenceResponse)(nil)).Elem()
}

func (i AzureFileShareReferenceResponseArgs) ToAzureFileShareReferenceResponseOutput() AzureFileShareReferenceResponseOutput {
	return i.ToAzureFileShareReferenceResponseOutputWithContext(context.Background())
}

func (i AzureFileShareReferenceResponseArgs) ToAzureFileShareReferenceResponseOutputWithContext(ctx context.Context) AzureFileShareReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileShareReferenceResponseOutput)
}

// AzureFileShareReferenceResponseArrayInput is an input type that accepts AzureFileShareReferenceResponseArray and AzureFileShareReferenceResponseArrayOutput values.
// You can construct a concrete instance of `AzureFileShareReferenceResponseArrayInput` via:
//
//          AzureFileShareReferenceResponseArray{ AzureFileShareReferenceResponseArgs{...} }
type AzureFileShareReferenceResponseArrayInput interface {
	pulumi.Input

	ToAzureFileShareReferenceResponseArrayOutput() AzureFileShareReferenceResponseArrayOutput
	ToAzureFileShareReferenceResponseArrayOutputWithContext(context.Context) AzureFileShareReferenceResponseArrayOutput
}

type AzureFileShareReferenceResponseArray []AzureFileShareReferenceResponseInput

func (AzureFileShareReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFileShareReferenceResponse)(nil)).Elem()
}

func (i AzureFileShareReferenceResponseArray) ToAzureFileShareReferenceResponseArrayOutput() AzureFileShareReferenceResponseArrayOutput {
	return i.ToAzureFileShareReferenceResponseArrayOutputWithContext(context.Background())
}

func (i AzureFileShareReferenceResponseArray) ToAzureFileShareReferenceResponseArrayOutputWithContext(ctx context.Context) AzureFileShareReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileShareReferenceResponseArrayOutput)
}

// Details of the Azure File Share to mount on the cluster.
type AzureFileShareReferenceResponseOutput struct{ *pulumi.OutputState }

func (AzureFileShareReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileShareReferenceResponse)(nil)).Elem()
}

func (o AzureFileShareReferenceResponseOutput) ToAzureFileShareReferenceResponseOutput() AzureFileShareReferenceResponseOutput {
	return o
}

func (o AzureFileShareReferenceResponseOutput) ToAzureFileShareReferenceResponseOutputWithContext(ctx context.Context) AzureFileShareReferenceResponseOutput {
	return o
}

func (o AzureFileShareReferenceResponseOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileShareReferenceResponse) string { return v.AccountName }).(pulumi.StringOutput)
}

func (o AzureFileShareReferenceResponseOutput) AzureFileUrl() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileShareReferenceResponse) string { return v.AzureFileUrl }).(pulumi.StringOutput)
}

// Credentials to access Azure File Share.
func (o AzureFileShareReferenceResponseOutput) Credentials() AzureStorageCredentialsInfoResponseOutput {
	return o.ApplyT(func(v AzureFileShareReferenceResponse) AzureStorageCredentialsInfoResponse { return v.Credentials }).(AzureStorageCredentialsInfoResponseOutput)
}

// Default value is 0777. Valid only if OS is linux.
func (o AzureFileShareReferenceResponseOutput) DirectoryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileShareReferenceResponse) *string { return v.DirectoryMode }).(pulumi.StringPtrOutput)
}

// Default value is 0777. Valid only if OS is linux.
func (o AzureFileShareReferenceResponseOutput) FileMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileShareReferenceResponse) *string { return v.FileMode }).(pulumi.StringPtrOutput)
}

// Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
func (o AzureFileShareReferenceResponseOutput) RelativeMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileShareReferenceResponse) string { return v.RelativeMountPath }).(pulumi.StringOutput)
}

type AzureFileShareReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFileShareReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFileShareReferenceResponse)(nil)).Elem()
}

func (o AzureFileShareReferenceResponseArrayOutput) ToAzureFileShareReferenceResponseArrayOutput() AzureFileShareReferenceResponseArrayOutput {
	return o
}

func (o AzureFileShareReferenceResponseArrayOutput) ToAzureFileShareReferenceResponseArrayOutputWithContext(ctx context.Context) AzureFileShareReferenceResponseArrayOutput {
	return o
}

func (o AzureFileShareReferenceResponseArrayOutput) Index(i pulumi.IntInput) AzureFileShareReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFileShareReferenceResponse {
		return vs[0].([]AzureFileShareReferenceResponse)[vs[1].(int)]
	}).(AzureFileShareReferenceResponseOutput)
}

// Credentials to access Azure File Share.
type AzureStorageCredentialsInfo struct {
	// One of accountKey or accountKeySecretReference must be specified.
	AccountKey *string `pulumi:"accountKey"`
	// Users can store their secrets in Azure KeyVault and pass it to the Batch AI Service to integrate with KeyVault. One of accountKey or accountKeySecretReference must be specified.
	AccountKeySecretReference *KeyVaultSecretReference `pulumi:"accountKeySecretReference"`
}

// AzureStorageCredentialsInfoInput is an input type that accepts AzureStorageCredentialsInfoArgs and AzureStorageCredentialsInfoOutput values.
// You can construct a concrete instance of `AzureStorageCredentialsInfoInput` via:
//
//          AzureStorageCredentialsInfoArgs{...}
type AzureStorageCredentialsInfoInput interface {
	pulumi.Input

	ToAzureStorageCredentialsInfoOutput() AzureStorageCredentialsInfoOutput
	ToAzureStorageCredentialsInfoOutputWithContext(context.Context) AzureStorageCredentialsInfoOutput
}

// Credentials to access Azure File Share.
type AzureStorageCredentialsInfoArgs struct {
	// One of accountKey or accountKeySecretReference must be specified.
	AccountKey pulumi.StringPtrInput `pulumi:"accountKey"`
	// Users can store their secrets in Azure KeyVault and pass it to the Batch AI Service to integrate with KeyVault. One of accountKey or accountKeySecretReference must be specified.
	AccountKeySecretReference KeyVaultSecretReferencePtrInput `pulumi:"accountKeySecretReference"`
}

func (AzureStorageCredentialsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageCredentialsInfo)(nil)).Elem()
}

func (i AzureStorageCredentialsInfoArgs) ToAzureStorageCredentialsInfoOutput() AzureStorageCredentialsInfoOutput {
	return i.ToAzureStorageCredentialsInfoOutputWithContext(context.Background())
}

func (i AzureStorageCredentialsInfoArgs) ToAzureStorageCredentialsInfoOutputWithContext(ctx context.Context) AzureStorageCredentialsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageCredentialsInfoOutput)
}

// Credentials to access Azure File Share.
type AzureStorageCredentialsInfoOutput struct{ *pulumi.OutputState }

func (AzureStorageCredentialsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageCredentialsInfo)(nil)).Elem()
}

func (o AzureStorageCredentialsInfoOutput) ToAzureStorageCredentialsInfoOutput() AzureStorageCredentialsInfoOutput {
	return o
}

func (o AzureStorageCredentialsInfoOutput) ToAzureStorageCredentialsInfoOutputWithContext(ctx context.Context) AzureStorageCredentialsInfoOutput {
	return o
}

// One of accountKey or accountKeySecretReference must be specified.
func (o AzureStorageCredentialsInfoOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageCredentialsInfo) *string { return v.AccountKey }).(pulumi.StringPtrOutput)
}

// Users can store their secrets in Azure KeyVault and pass it to the Batch AI Service to integrate with KeyVault. One of accountKey or accountKeySecretReference must be specified.
func (o AzureStorageCredentialsInfoOutput) AccountKeySecretReference() KeyVaultSecretReferencePtrOutput {
	return o.ApplyT(func(v AzureStorageCredentialsInfo) *KeyVaultSecretReference { return v.AccountKeySecretReference }).(KeyVaultSecretReferencePtrOutput)
}

// Credentials to access Azure File Share.
type AzureStorageCredentialsInfoResponse struct {
	// One of accountKey or accountKeySecretReference must be specified.
	AccountKey *string `pulumi:"accountKey"`
	// Users can store their secrets in Azure KeyVault and pass it to the Batch AI Service to integrate with KeyVault. One of accountKey or accountKeySecretReference must be specified.
	AccountKeySecretReference *KeyVaultSecretReferenceResponse `pulumi:"accountKeySecretReference"`
}

// AzureStorageCredentialsInfoResponseInput is an input type that accepts AzureStorageCredentialsInfoResponseArgs and AzureStorageCredentialsInfoResponseOutput values.
// You can construct a concrete instance of `AzureStorageCredentialsInfoResponseInput` via:
//
//          AzureStorageCredentialsInfoResponseArgs{...}
type AzureStorageCredentialsInfoResponseInput interface {
	pulumi.Input

	ToAzureStorageCredentialsInfoResponseOutput() AzureStorageCredentialsInfoResponseOutput
	ToAzureStorageCredentialsInfoResponseOutputWithContext(context.Context) AzureStorageCredentialsInfoResponseOutput
}

// Credentials to access Azure File Share.
type AzureStorageCredentialsInfoResponseArgs struct {
	// One of accountKey or accountKeySecretReference must be specified.
	AccountKey pulumi.StringPtrInput `pulumi:"accountKey"`
	// Users can store their secrets in Azure KeyVault and pass it to the Batch AI Service to integrate with KeyVault. One of accountKey or accountKeySecretReference must be specified.
	AccountKeySecretReference KeyVaultSecretReferenceResponsePtrInput `pulumi:"accountKeySecretReference"`
}

func (AzureStorageCredentialsInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageCredentialsInfoResponse)(nil)).Elem()
}

func (i AzureStorageCredentialsInfoResponseArgs) ToAzureStorageCredentialsInfoResponseOutput() AzureStorageCredentialsInfoResponseOutput {
	return i.ToAzureStorageCredentialsInfoResponseOutputWithContext(context.Background())
}

func (i AzureStorageCredentialsInfoResponseArgs) ToAzureStorageCredentialsInfoResponseOutputWithContext(ctx context.Context) AzureStorageCredentialsInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageCredentialsInfoResponseOutput)
}

// Credentials to access Azure File Share.
type AzureStorageCredentialsInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureStorageCredentialsInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageCredentialsInfoResponse)(nil)).Elem()
}

func (o AzureStorageCredentialsInfoResponseOutput) ToAzureStorageCredentialsInfoResponseOutput() AzureStorageCredentialsInfoResponseOutput {
	return o
}

func (o AzureStorageCredentialsInfoResponseOutput) ToAzureStorageCredentialsInfoResponseOutputWithContext(ctx context.Context) AzureStorageCredentialsInfoResponseOutput {
	return o
}

// One of accountKey or accountKeySecretReference must be specified.
func (o AzureStorageCredentialsInfoResponseOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageCredentialsInfoResponse) *string { return v.AccountKey }).(pulumi.StringPtrOutput)
}

// Users can store their secrets in Azure KeyVault and pass it to the Batch AI Service to integrate with KeyVault. One of accountKey or accountKeySecretReference must be specified.
func (o AzureStorageCredentialsInfoResponseOutput) AccountKeySecretReference() KeyVaultSecretReferenceResponsePtrOutput {
	return o.ApplyT(func(v AzureStorageCredentialsInfoResponse) *KeyVaultSecretReferenceResponse {
		return v.AccountKeySecretReference
	}).(KeyVaultSecretReferenceResponsePtrOutput)
}

// An error response from the Batch AI service.
type BatchAIErrorResponse struct {
	// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
	Code *string `pulumi:"code"`
	// A list of additional details about the error.
	Details []NameValuePairResponse `pulumi:"details"`
	// A message describing the error, intended to be suitable for display in a user interface.
	Message *string `pulumi:"message"`
}

// BatchAIErrorResponseInput is an input type that accepts BatchAIErrorResponseArgs and BatchAIErrorResponseOutput values.
// You can construct a concrete instance of `BatchAIErrorResponseInput` via:
//
//          BatchAIErrorResponseArgs{...}
type BatchAIErrorResponseInput interface {
	pulumi.Input

	ToBatchAIErrorResponseOutput() BatchAIErrorResponseOutput
	ToBatchAIErrorResponseOutputWithContext(context.Context) BatchAIErrorResponseOutput
}

// An error response from the Batch AI service.
type BatchAIErrorResponseArgs struct {
	// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// A list of additional details about the error.
	Details NameValuePairResponseArrayInput `pulumi:"details"`
	// A message describing the error, intended to be suitable for display in a user interface.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (BatchAIErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchAIErrorResponse)(nil)).Elem()
}

func (i BatchAIErrorResponseArgs) ToBatchAIErrorResponseOutput() BatchAIErrorResponseOutput {
	return i.ToBatchAIErrorResponseOutputWithContext(context.Background())
}

func (i BatchAIErrorResponseArgs) ToBatchAIErrorResponseOutputWithContext(ctx context.Context) BatchAIErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchAIErrorResponseOutput)
}

// BatchAIErrorResponseArrayInput is an input type that accepts BatchAIErrorResponseArray and BatchAIErrorResponseArrayOutput values.
// You can construct a concrete instance of `BatchAIErrorResponseArrayInput` via:
//
//          BatchAIErrorResponseArray{ BatchAIErrorResponseArgs{...} }
type BatchAIErrorResponseArrayInput interface {
	pulumi.Input

	ToBatchAIErrorResponseArrayOutput() BatchAIErrorResponseArrayOutput
	ToBatchAIErrorResponseArrayOutputWithContext(context.Context) BatchAIErrorResponseArrayOutput
}

type BatchAIErrorResponseArray []BatchAIErrorResponseInput

func (BatchAIErrorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BatchAIErrorResponse)(nil)).Elem()
}

func (i BatchAIErrorResponseArray) ToBatchAIErrorResponseArrayOutput() BatchAIErrorResponseArrayOutput {
	return i.ToBatchAIErrorResponseArrayOutputWithContext(context.Background())
}

func (i BatchAIErrorResponseArray) ToBatchAIErrorResponseArrayOutputWithContext(ctx context.Context) BatchAIErrorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchAIErrorResponseArrayOutput)
}

// An error response from the Batch AI service.
type BatchAIErrorResponseOutput struct{ *pulumi.OutputState }

func (BatchAIErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchAIErrorResponse)(nil)).Elem()
}

func (o BatchAIErrorResponseOutput) ToBatchAIErrorResponseOutput() BatchAIErrorResponseOutput {
	return o
}

func (o BatchAIErrorResponseOutput) ToBatchAIErrorResponseOutputWithContext(ctx context.Context) BatchAIErrorResponseOutput {
	return o
}

// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
func (o BatchAIErrorResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchAIErrorResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// A list of additional details about the error.
func (o BatchAIErrorResponseOutput) Details() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v BatchAIErrorResponse) []NameValuePairResponse { return v.Details }).(NameValuePairResponseArrayOutput)
}

// A message describing the error, intended to be suitable for display in a user interface.
func (o BatchAIErrorResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchAIErrorResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type BatchAIErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (BatchAIErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BatchAIErrorResponse)(nil)).Elem()
}

func (o BatchAIErrorResponseArrayOutput) ToBatchAIErrorResponseArrayOutput() BatchAIErrorResponseArrayOutput {
	return o
}

func (o BatchAIErrorResponseArrayOutput) ToBatchAIErrorResponseArrayOutputWithContext(ctx context.Context) BatchAIErrorResponseArrayOutput {
	return o
}

func (o BatchAIErrorResponseArrayOutput) Index(i pulumi.IntInput) BatchAIErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BatchAIErrorResponse {
		return vs[0].([]BatchAIErrorResponse)[vs[1].(int)]
	}).(BatchAIErrorResponseOutput)
}

// Specifies the settings for CNTK (aka Microsoft Cognitive Toolkit) job.
type CNTKsettings struct {
	CommandLineArgs *string `pulumi:"commandLineArgs"`
	// This property can be specified only if the languageType is 'BrainScript'.
	ConfigFilePath *string `pulumi:"configFilePath"`
	// Valid values are 'BrainScript' or 'Python'.
	LanguageType *string `pulumi:"languageType"`
	// The default value for this property is equal to nodeCount property
	ProcessCount *int `pulumi:"processCount"`
	// This property can be specified only if the languageType is 'Python'.
	PythonInterpreterPath *string `pulumi:"pythonInterpreterPath"`
	// This property can be specified only if the languageType is 'Python'.
	PythonScriptFilePath *string `pulumi:"pythonScriptFilePath"`
}

// CNTKsettingsInput is an input type that accepts CNTKsettingsArgs and CNTKsettingsOutput values.
// You can construct a concrete instance of `CNTKsettingsInput` via:
//
//          CNTKsettingsArgs{...}
type CNTKsettingsInput interface {
	pulumi.Input

	ToCNTKsettingsOutput() CNTKsettingsOutput
	ToCNTKsettingsOutputWithContext(context.Context) CNTKsettingsOutput
}

// Specifies the settings for CNTK (aka Microsoft Cognitive Toolkit) job.
type CNTKsettingsArgs struct {
	CommandLineArgs pulumi.StringPtrInput `pulumi:"commandLineArgs"`
	// This property can be specified only if the languageType is 'BrainScript'.
	ConfigFilePath pulumi.StringPtrInput `pulumi:"configFilePath"`
	// Valid values are 'BrainScript' or 'Python'.
	LanguageType pulumi.StringPtrInput `pulumi:"languageType"`
	// The default value for this property is equal to nodeCount property
	ProcessCount pulumi.IntPtrInput `pulumi:"processCount"`
	// This property can be specified only if the languageType is 'Python'.
	PythonInterpreterPath pulumi.StringPtrInput `pulumi:"pythonInterpreterPath"`
	// This property can be specified only if the languageType is 'Python'.
	PythonScriptFilePath pulumi.StringPtrInput `pulumi:"pythonScriptFilePath"`
}

func (CNTKsettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CNTKsettings)(nil)).Elem()
}

func (i CNTKsettingsArgs) ToCNTKsettingsOutput() CNTKsettingsOutput {
	return i.ToCNTKsettingsOutputWithContext(context.Background())
}

func (i CNTKsettingsArgs) ToCNTKsettingsOutputWithContext(ctx context.Context) CNTKsettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CNTKsettingsOutput)
}

func (i CNTKsettingsArgs) ToCNTKsettingsPtrOutput() CNTKsettingsPtrOutput {
	return i.ToCNTKsettingsPtrOutputWithContext(context.Background())
}

func (i CNTKsettingsArgs) ToCNTKsettingsPtrOutputWithContext(ctx context.Context) CNTKsettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CNTKsettingsOutput).ToCNTKsettingsPtrOutputWithContext(ctx)
}

// CNTKsettingsPtrInput is an input type that accepts CNTKsettingsArgs, CNTKsettingsPtr and CNTKsettingsPtrOutput values.
// You can construct a concrete instance of `CNTKsettingsPtrInput` via:
//
//          CNTKsettingsArgs{...}
//
//  or:
//
//          nil
type CNTKsettingsPtrInput interface {
	pulumi.Input

	ToCNTKsettingsPtrOutput() CNTKsettingsPtrOutput
	ToCNTKsettingsPtrOutputWithContext(context.Context) CNTKsettingsPtrOutput
}

type cntksettingsPtrType CNTKsettingsArgs

func CNTKsettingsPtr(v *CNTKsettingsArgs) CNTKsettingsPtrInput {
	return (*cntksettingsPtrType)(v)
}

func (*cntksettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CNTKsettings)(nil)).Elem()
}

func (i *cntksettingsPtrType) ToCNTKsettingsPtrOutput() CNTKsettingsPtrOutput {
	return i.ToCNTKsettingsPtrOutputWithContext(context.Background())
}

func (i *cntksettingsPtrType) ToCNTKsettingsPtrOutputWithContext(ctx context.Context) CNTKsettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CNTKsettingsPtrOutput)
}

// Specifies the settings for CNTK (aka Microsoft Cognitive Toolkit) job.
type CNTKsettingsOutput struct{ *pulumi.OutputState }

func (CNTKsettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CNTKsettings)(nil)).Elem()
}

func (o CNTKsettingsOutput) ToCNTKsettingsOutput() CNTKsettingsOutput {
	return o
}

func (o CNTKsettingsOutput) ToCNTKsettingsOutputWithContext(ctx context.Context) CNTKsettingsOutput {
	return o
}

func (o CNTKsettingsOutput) ToCNTKsettingsPtrOutput() CNTKsettingsPtrOutput {
	return o.ToCNTKsettingsPtrOutputWithContext(context.Background())
}

func (o CNTKsettingsOutput) ToCNTKsettingsPtrOutputWithContext(ctx context.Context) CNTKsettingsPtrOutput {
	return o.ApplyT(func(v CNTKsettings) *CNTKsettings {
		return &v
	}).(CNTKsettingsPtrOutput)
}
func (o CNTKsettingsOutput) CommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CNTKsettings) *string { return v.CommandLineArgs }).(pulumi.StringPtrOutput)
}

// This property can be specified only if the languageType is 'BrainScript'.
func (o CNTKsettingsOutput) ConfigFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CNTKsettings) *string { return v.ConfigFilePath }).(pulumi.StringPtrOutput)
}

// Valid values are 'BrainScript' or 'Python'.
func (o CNTKsettingsOutput) LanguageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CNTKsettings) *string { return v.LanguageType }).(pulumi.StringPtrOutput)
}

// The default value for this property is equal to nodeCount property
func (o CNTKsettingsOutput) ProcessCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CNTKsettings) *int { return v.ProcessCount }).(pulumi.IntPtrOutput)
}

// This property can be specified only if the languageType is 'Python'.
func (o CNTKsettingsOutput) PythonInterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CNTKsettings) *string { return v.PythonInterpreterPath }).(pulumi.StringPtrOutput)
}

// This property can be specified only if the languageType is 'Python'.
func (o CNTKsettingsOutput) PythonScriptFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CNTKsettings) *string { return v.PythonScriptFilePath }).(pulumi.StringPtrOutput)
}

type CNTKsettingsPtrOutput struct{ *pulumi.OutputState }

func (CNTKsettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CNTKsettings)(nil)).Elem()
}

func (o CNTKsettingsPtrOutput) ToCNTKsettingsPtrOutput() CNTKsettingsPtrOutput {
	return o
}

func (o CNTKsettingsPtrOutput) ToCNTKsettingsPtrOutputWithContext(ctx context.Context) CNTKsettingsPtrOutput {
	return o
}

func (o CNTKsettingsPtrOutput) Elem() CNTKsettingsOutput {
	return o.ApplyT(func(v *CNTKsettings) CNTKsettings { return *v }).(CNTKsettingsOutput)
}

func (o CNTKsettingsPtrOutput) CommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CNTKsettings) *string {
		if v == nil {
			return nil
		}
		return v.CommandLineArgs
	}).(pulumi.StringPtrOutput)
}

// This property can be specified only if the languageType is 'BrainScript'.
func (o CNTKsettingsPtrOutput) ConfigFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CNTKsettings) *string {
		if v == nil {
			return nil
		}
		return v.ConfigFilePath
	}).(pulumi.StringPtrOutput)
}

// Valid values are 'BrainScript' or 'Python'.
func (o CNTKsettingsPtrOutput) LanguageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CNTKsettings) *string {
		if v == nil {
			return nil
		}
		return v.LanguageType
	}).(pulumi.StringPtrOutput)
}

// The default value for this property is equal to nodeCount property
func (o CNTKsettingsPtrOutput) ProcessCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CNTKsettings) *int {
		if v == nil {
			return nil
		}
		return v.ProcessCount
	}).(pulumi.IntPtrOutput)
}

// This property can be specified only if the languageType is 'Python'.
func (o CNTKsettingsPtrOutput) PythonInterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CNTKsettings) *string {
		if v == nil {
			return nil
		}
		return v.PythonInterpreterPath
	}).(pulumi.StringPtrOutput)
}

// This property can be specified only if the languageType is 'Python'.
func (o CNTKsettingsPtrOutput) PythonScriptFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CNTKsettings) *string {
		if v == nil {
			return nil
		}
		return v.PythonScriptFilePath
	}).(pulumi.StringPtrOutput)
}

// Specifies the settings for CNTK (aka Microsoft Cognitive Toolkit) job.
type CNTKsettingsResponse struct {
	CommandLineArgs *string `pulumi:"commandLineArgs"`
	// This property can be specified only if the languageType is 'BrainScript'.
	ConfigFilePath *string `pulumi:"configFilePath"`
	// Valid values are 'BrainScript' or 'Python'.
	LanguageType *string `pulumi:"languageType"`
	// The default value for this property is equal to nodeCount property
	ProcessCount *int `pulumi:"processCount"`
	// This property can be specified only if the languageType is 'Python'.
	PythonInterpreterPath *string `pulumi:"pythonInterpreterPath"`
	// This property can be specified only if the languageType is 'Python'.
	PythonScriptFilePath *string `pulumi:"pythonScriptFilePath"`
}

// CNTKsettingsResponseInput is an input type that accepts CNTKsettingsResponseArgs and CNTKsettingsResponseOutput values.
// You can construct a concrete instance of `CNTKsettingsResponseInput` via:
//
//          CNTKsettingsResponseArgs{...}
type CNTKsettingsResponseInput interface {
	pulumi.Input

	ToCNTKsettingsResponseOutput() CNTKsettingsResponseOutput
	ToCNTKsettingsResponseOutputWithContext(context.Context) CNTKsettingsResponseOutput
}

// Specifies the settings for CNTK (aka Microsoft Cognitive Toolkit) job.
type CNTKsettingsResponseArgs struct {
	CommandLineArgs pulumi.StringPtrInput `pulumi:"commandLineArgs"`
	// This property can be specified only if the languageType is 'BrainScript'.
	ConfigFilePath pulumi.StringPtrInput `pulumi:"configFilePath"`
	// Valid values are 'BrainScript' or 'Python'.
	LanguageType pulumi.StringPtrInput `pulumi:"languageType"`
	// The default value for this property is equal to nodeCount property
	ProcessCount pulumi.IntPtrInput `pulumi:"processCount"`
	// This property can be specified only if the languageType is 'Python'.
	PythonInterpreterPath pulumi.StringPtrInput `pulumi:"pythonInterpreterPath"`
	// This property can be specified only if the languageType is 'Python'.
	PythonScriptFilePath pulumi.StringPtrInput `pulumi:"pythonScriptFilePath"`
}

func (CNTKsettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CNTKsettingsResponse)(nil)).Elem()
}

func (i CNTKsettingsResponseArgs) ToCNTKsettingsResponseOutput() CNTKsettingsResponseOutput {
	return i.ToCNTKsettingsResponseOutputWithContext(context.Background())
}

func (i CNTKsettingsResponseArgs) ToCNTKsettingsResponseOutputWithContext(ctx context.Context) CNTKsettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CNTKsettingsResponseOutput)
}

func (i CNTKsettingsResponseArgs) ToCNTKsettingsResponsePtrOutput() CNTKsettingsResponsePtrOutput {
	return i.ToCNTKsettingsResponsePtrOutputWithContext(context.Background())
}

func (i CNTKsettingsResponseArgs) ToCNTKsettingsResponsePtrOutputWithContext(ctx context.Context) CNTKsettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CNTKsettingsResponseOutput).ToCNTKsettingsResponsePtrOutputWithContext(ctx)
}

// CNTKsettingsResponsePtrInput is an input type that accepts CNTKsettingsResponseArgs, CNTKsettingsResponsePtr and CNTKsettingsResponsePtrOutput values.
// You can construct a concrete instance of `CNTKsettingsResponsePtrInput` via:
//
//          CNTKsettingsResponseArgs{...}
//
//  or:
//
//          nil
type CNTKsettingsResponsePtrInput interface {
	pulumi.Input

	ToCNTKsettingsResponsePtrOutput() CNTKsettingsResponsePtrOutput
	ToCNTKsettingsResponsePtrOutputWithContext(context.Context) CNTKsettingsResponsePtrOutput
}

type cntksettingsResponsePtrType CNTKsettingsResponseArgs

func CNTKsettingsResponsePtr(v *CNTKsettingsResponseArgs) CNTKsettingsResponsePtrInput {
	return (*cntksettingsResponsePtrType)(v)
}

func (*cntksettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CNTKsettingsResponse)(nil)).Elem()
}

func (i *cntksettingsResponsePtrType) ToCNTKsettingsResponsePtrOutput() CNTKsettingsResponsePtrOutput {
	return i.ToCNTKsettingsResponsePtrOutputWithContext(context.Background())
}

func (i *cntksettingsResponsePtrType) ToCNTKsettingsResponsePtrOutputWithContext(ctx context.Context) CNTKsettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CNTKsettingsResponsePtrOutput)
}

// Specifies the settings for CNTK (aka Microsoft Cognitive Toolkit) job.
type CNTKsettingsResponseOutput struct{ *pulumi.OutputState }

func (CNTKsettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CNTKsettingsResponse)(nil)).Elem()
}

func (o CNTKsettingsResponseOutput) ToCNTKsettingsResponseOutput() CNTKsettingsResponseOutput {
	return o
}

func (o CNTKsettingsResponseOutput) ToCNTKsettingsResponseOutputWithContext(ctx context.Context) CNTKsettingsResponseOutput {
	return o
}

func (o CNTKsettingsResponseOutput) ToCNTKsettingsResponsePtrOutput() CNTKsettingsResponsePtrOutput {
	return o.ToCNTKsettingsResponsePtrOutputWithContext(context.Background())
}

func (o CNTKsettingsResponseOutput) ToCNTKsettingsResponsePtrOutputWithContext(ctx context.Context) CNTKsettingsResponsePtrOutput {
	return o.ApplyT(func(v CNTKsettingsResponse) *CNTKsettingsResponse {
		return &v
	}).(CNTKsettingsResponsePtrOutput)
}
func (o CNTKsettingsResponseOutput) CommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CNTKsettingsResponse) *string { return v.CommandLineArgs }).(pulumi.StringPtrOutput)
}

// This property can be specified only if the languageType is 'BrainScript'.
func (o CNTKsettingsResponseOutput) ConfigFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CNTKsettingsResponse) *string { return v.ConfigFilePath }).(pulumi.StringPtrOutput)
}

// Valid values are 'BrainScript' or 'Python'.
func (o CNTKsettingsResponseOutput) LanguageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CNTKsettingsResponse) *string { return v.LanguageType }).(pulumi.StringPtrOutput)
}

// The default value for this property is equal to nodeCount property
func (o CNTKsettingsResponseOutput) ProcessCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CNTKsettingsResponse) *int { return v.ProcessCount }).(pulumi.IntPtrOutput)
}

// This property can be specified only if the languageType is 'Python'.
func (o CNTKsettingsResponseOutput) PythonInterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CNTKsettingsResponse) *string { return v.PythonInterpreterPath }).(pulumi.StringPtrOutput)
}

// This property can be specified only if the languageType is 'Python'.
func (o CNTKsettingsResponseOutput) PythonScriptFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CNTKsettingsResponse) *string { return v.PythonScriptFilePath }).(pulumi.StringPtrOutput)
}

type CNTKsettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (CNTKsettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CNTKsettingsResponse)(nil)).Elem()
}

func (o CNTKsettingsResponsePtrOutput) ToCNTKsettingsResponsePtrOutput() CNTKsettingsResponsePtrOutput {
	return o
}

func (o CNTKsettingsResponsePtrOutput) ToCNTKsettingsResponsePtrOutputWithContext(ctx context.Context) CNTKsettingsResponsePtrOutput {
	return o
}

func (o CNTKsettingsResponsePtrOutput) Elem() CNTKsettingsResponseOutput {
	return o.ApplyT(func(v *CNTKsettingsResponse) CNTKsettingsResponse { return *v }).(CNTKsettingsResponseOutput)
}

func (o CNTKsettingsResponsePtrOutput) CommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CNTKsettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CommandLineArgs
	}).(pulumi.StringPtrOutput)
}

// This property can be specified only if the languageType is 'BrainScript'.
func (o CNTKsettingsResponsePtrOutput) ConfigFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CNTKsettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConfigFilePath
	}).(pulumi.StringPtrOutput)
}

// Valid values are 'BrainScript' or 'Python'.
func (o CNTKsettingsResponsePtrOutput) LanguageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CNTKsettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LanguageType
	}).(pulumi.StringPtrOutput)
}

// The default value for this property is equal to nodeCount property
func (o CNTKsettingsResponsePtrOutput) ProcessCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CNTKsettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ProcessCount
	}).(pulumi.IntPtrOutput)
}

// This property can be specified only if the languageType is 'Python'.
func (o CNTKsettingsResponsePtrOutput) PythonInterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CNTKsettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PythonInterpreterPath
	}).(pulumi.StringPtrOutput)
}

// This property can be specified only if the languageType is 'Python'.
func (o CNTKsettingsResponsePtrOutput) PythonScriptFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CNTKsettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PythonScriptFilePath
	}).(pulumi.StringPtrOutput)
}

// Specifies the settings for Caffe2 job.
type Caffe2Settings struct {
	CommandLineArgs       *string `pulumi:"commandLineArgs"`
	PythonInterpreterPath *string `pulumi:"pythonInterpreterPath"`
	PythonScriptFilePath  string  `pulumi:"pythonScriptFilePath"`
}

// Caffe2SettingsInput is an input type that accepts Caffe2SettingsArgs and Caffe2SettingsOutput values.
// You can construct a concrete instance of `Caffe2SettingsInput` via:
//
//          Caffe2SettingsArgs{...}
type Caffe2SettingsInput interface {
	pulumi.Input

	ToCaffe2SettingsOutput() Caffe2SettingsOutput
	ToCaffe2SettingsOutputWithContext(context.Context) Caffe2SettingsOutput
}

// Specifies the settings for Caffe2 job.
type Caffe2SettingsArgs struct {
	CommandLineArgs       pulumi.StringPtrInput `pulumi:"commandLineArgs"`
	PythonInterpreterPath pulumi.StringPtrInput `pulumi:"pythonInterpreterPath"`
	PythonScriptFilePath  pulumi.StringInput    `pulumi:"pythonScriptFilePath"`
}

func (Caffe2SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Caffe2Settings)(nil)).Elem()
}

func (i Caffe2SettingsArgs) ToCaffe2SettingsOutput() Caffe2SettingsOutput {
	return i.ToCaffe2SettingsOutputWithContext(context.Background())
}

func (i Caffe2SettingsArgs) ToCaffe2SettingsOutputWithContext(ctx context.Context) Caffe2SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Caffe2SettingsOutput)
}

func (i Caffe2SettingsArgs) ToCaffe2SettingsPtrOutput() Caffe2SettingsPtrOutput {
	return i.ToCaffe2SettingsPtrOutputWithContext(context.Background())
}

func (i Caffe2SettingsArgs) ToCaffe2SettingsPtrOutputWithContext(ctx context.Context) Caffe2SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Caffe2SettingsOutput).ToCaffe2SettingsPtrOutputWithContext(ctx)
}

// Caffe2SettingsPtrInput is an input type that accepts Caffe2SettingsArgs, Caffe2SettingsPtr and Caffe2SettingsPtrOutput values.
// You can construct a concrete instance of `Caffe2SettingsPtrInput` via:
//
//          Caffe2SettingsArgs{...}
//
//  or:
//
//          nil
type Caffe2SettingsPtrInput interface {
	pulumi.Input

	ToCaffe2SettingsPtrOutput() Caffe2SettingsPtrOutput
	ToCaffe2SettingsPtrOutputWithContext(context.Context) Caffe2SettingsPtrOutput
}

type caffe2SettingsPtrType Caffe2SettingsArgs

func Caffe2SettingsPtr(v *Caffe2SettingsArgs) Caffe2SettingsPtrInput {
	return (*caffe2SettingsPtrType)(v)
}

func (*caffe2SettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Caffe2Settings)(nil)).Elem()
}

func (i *caffe2SettingsPtrType) ToCaffe2SettingsPtrOutput() Caffe2SettingsPtrOutput {
	return i.ToCaffe2SettingsPtrOutputWithContext(context.Background())
}

func (i *caffe2SettingsPtrType) ToCaffe2SettingsPtrOutputWithContext(ctx context.Context) Caffe2SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Caffe2SettingsPtrOutput)
}

// Specifies the settings for Caffe2 job.
type Caffe2SettingsOutput struct{ *pulumi.OutputState }

func (Caffe2SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Caffe2Settings)(nil)).Elem()
}

func (o Caffe2SettingsOutput) ToCaffe2SettingsOutput() Caffe2SettingsOutput {
	return o
}

func (o Caffe2SettingsOutput) ToCaffe2SettingsOutputWithContext(ctx context.Context) Caffe2SettingsOutput {
	return o
}

func (o Caffe2SettingsOutput) ToCaffe2SettingsPtrOutput() Caffe2SettingsPtrOutput {
	return o.ToCaffe2SettingsPtrOutputWithContext(context.Background())
}

func (o Caffe2SettingsOutput) ToCaffe2SettingsPtrOutputWithContext(ctx context.Context) Caffe2SettingsPtrOutput {
	return o.ApplyT(func(v Caffe2Settings) *Caffe2Settings {
		return &v
	}).(Caffe2SettingsPtrOutput)
}
func (o Caffe2SettingsOutput) CommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Caffe2Settings) *string { return v.CommandLineArgs }).(pulumi.StringPtrOutput)
}

func (o Caffe2SettingsOutput) PythonInterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Caffe2Settings) *string { return v.PythonInterpreterPath }).(pulumi.StringPtrOutput)
}

func (o Caffe2SettingsOutput) PythonScriptFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v Caffe2Settings) string { return v.PythonScriptFilePath }).(pulumi.StringOutput)
}

type Caffe2SettingsPtrOutput struct{ *pulumi.OutputState }

func (Caffe2SettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Caffe2Settings)(nil)).Elem()
}

func (o Caffe2SettingsPtrOutput) ToCaffe2SettingsPtrOutput() Caffe2SettingsPtrOutput {
	return o
}

func (o Caffe2SettingsPtrOutput) ToCaffe2SettingsPtrOutputWithContext(ctx context.Context) Caffe2SettingsPtrOutput {
	return o
}

func (o Caffe2SettingsPtrOutput) Elem() Caffe2SettingsOutput {
	return o.ApplyT(func(v *Caffe2Settings) Caffe2Settings { return *v }).(Caffe2SettingsOutput)
}

func (o Caffe2SettingsPtrOutput) CommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Caffe2Settings) *string {
		if v == nil {
			return nil
		}
		return v.CommandLineArgs
	}).(pulumi.StringPtrOutput)
}

func (o Caffe2SettingsPtrOutput) PythonInterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Caffe2Settings) *string {
		if v == nil {
			return nil
		}
		return v.PythonInterpreterPath
	}).(pulumi.StringPtrOutput)
}

func (o Caffe2SettingsPtrOutput) PythonScriptFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Caffe2Settings) *string {
		if v == nil {
			return nil
		}
		return &v.PythonScriptFilePath
	}).(pulumi.StringPtrOutput)
}

// Specifies the settings for Caffe job.
type CaffeSettings struct {
	CommandLineArgs *string `pulumi:"commandLineArgs"`
	// This property cannot be specified if pythonScriptFilePath is specified.
	ConfigFilePath *string `pulumi:"configFilePath"`
	// The default value for this property is equal to nodeCount property
	ProcessCount *int `pulumi:"processCount"`
	// This property can be specified only if the pythonScriptFilePath is specified.
	PythonInterpreterPath *string `pulumi:"pythonInterpreterPath"`
	// This property cannot be specified if configFilePath is specified.
	PythonScriptFilePath *string `pulumi:"pythonScriptFilePath"`
}

// CaffeSettingsInput is an input type that accepts CaffeSettingsArgs and CaffeSettingsOutput values.
// You can construct a concrete instance of `CaffeSettingsInput` via:
//
//          CaffeSettingsArgs{...}
type CaffeSettingsInput interface {
	pulumi.Input

	ToCaffeSettingsOutput() CaffeSettingsOutput
	ToCaffeSettingsOutputWithContext(context.Context) CaffeSettingsOutput
}

// Specifies the settings for Caffe job.
type CaffeSettingsArgs struct {
	CommandLineArgs pulumi.StringPtrInput `pulumi:"commandLineArgs"`
	// This property cannot be specified if pythonScriptFilePath is specified.
	ConfigFilePath pulumi.StringPtrInput `pulumi:"configFilePath"`
	// The default value for this property is equal to nodeCount property
	ProcessCount pulumi.IntPtrInput `pulumi:"processCount"`
	// This property can be specified only if the pythonScriptFilePath is specified.
	PythonInterpreterPath pulumi.StringPtrInput `pulumi:"pythonInterpreterPath"`
	// This property cannot be specified if configFilePath is specified.
	PythonScriptFilePath pulumi.StringPtrInput `pulumi:"pythonScriptFilePath"`
}

func (CaffeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaffeSettings)(nil)).Elem()
}

func (i CaffeSettingsArgs) ToCaffeSettingsOutput() CaffeSettingsOutput {
	return i.ToCaffeSettingsOutputWithContext(context.Background())
}

func (i CaffeSettingsArgs) ToCaffeSettingsOutputWithContext(ctx context.Context) CaffeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaffeSettingsOutput)
}

func (i CaffeSettingsArgs) ToCaffeSettingsPtrOutput() CaffeSettingsPtrOutput {
	return i.ToCaffeSettingsPtrOutputWithContext(context.Background())
}

func (i CaffeSettingsArgs) ToCaffeSettingsPtrOutputWithContext(ctx context.Context) CaffeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaffeSettingsOutput).ToCaffeSettingsPtrOutputWithContext(ctx)
}

// CaffeSettingsPtrInput is an input type that accepts CaffeSettingsArgs, CaffeSettingsPtr and CaffeSettingsPtrOutput values.
// You can construct a concrete instance of `CaffeSettingsPtrInput` via:
//
//          CaffeSettingsArgs{...}
//
//  or:
//
//          nil
type CaffeSettingsPtrInput interface {
	pulumi.Input

	ToCaffeSettingsPtrOutput() CaffeSettingsPtrOutput
	ToCaffeSettingsPtrOutputWithContext(context.Context) CaffeSettingsPtrOutput
}

type caffeSettingsPtrType CaffeSettingsArgs

func CaffeSettingsPtr(v *CaffeSettingsArgs) CaffeSettingsPtrInput {
	return (*caffeSettingsPtrType)(v)
}

func (*caffeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaffeSettings)(nil)).Elem()
}

func (i *caffeSettingsPtrType) ToCaffeSettingsPtrOutput() CaffeSettingsPtrOutput {
	return i.ToCaffeSettingsPtrOutputWithContext(context.Background())
}

func (i *caffeSettingsPtrType) ToCaffeSettingsPtrOutputWithContext(ctx context.Context) CaffeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaffeSettingsPtrOutput)
}

// Specifies the settings for Caffe job.
type CaffeSettingsOutput struct{ *pulumi.OutputState }

func (CaffeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaffeSettings)(nil)).Elem()
}

func (o CaffeSettingsOutput) ToCaffeSettingsOutput() CaffeSettingsOutput {
	return o
}

func (o CaffeSettingsOutput) ToCaffeSettingsOutputWithContext(ctx context.Context) CaffeSettingsOutput {
	return o
}

func (o CaffeSettingsOutput) ToCaffeSettingsPtrOutput() CaffeSettingsPtrOutput {
	return o.ToCaffeSettingsPtrOutputWithContext(context.Background())
}

func (o CaffeSettingsOutput) ToCaffeSettingsPtrOutputWithContext(ctx context.Context) CaffeSettingsPtrOutput {
	return o.ApplyT(func(v CaffeSettings) *CaffeSettings {
		return &v
	}).(CaffeSettingsPtrOutput)
}
func (o CaffeSettingsOutput) CommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaffeSettings) *string { return v.CommandLineArgs }).(pulumi.StringPtrOutput)
}

// This property cannot be specified if pythonScriptFilePath is specified.
func (o CaffeSettingsOutput) ConfigFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaffeSettings) *string { return v.ConfigFilePath }).(pulumi.StringPtrOutput)
}

// The default value for this property is equal to nodeCount property
func (o CaffeSettingsOutput) ProcessCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CaffeSettings) *int { return v.ProcessCount }).(pulumi.IntPtrOutput)
}

// This property can be specified only if the pythonScriptFilePath is specified.
func (o CaffeSettingsOutput) PythonInterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaffeSettings) *string { return v.PythonInterpreterPath }).(pulumi.StringPtrOutput)
}

// This property cannot be specified if configFilePath is specified.
func (o CaffeSettingsOutput) PythonScriptFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaffeSettings) *string { return v.PythonScriptFilePath }).(pulumi.StringPtrOutput)
}

type CaffeSettingsPtrOutput struct{ *pulumi.OutputState }

func (CaffeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaffeSettings)(nil)).Elem()
}

func (o CaffeSettingsPtrOutput) ToCaffeSettingsPtrOutput() CaffeSettingsPtrOutput {
	return o
}

func (o CaffeSettingsPtrOutput) ToCaffeSettingsPtrOutputWithContext(ctx context.Context) CaffeSettingsPtrOutput {
	return o
}

func (o CaffeSettingsPtrOutput) Elem() CaffeSettingsOutput {
	return o.ApplyT(func(v *CaffeSettings) CaffeSettings { return *v }).(CaffeSettingsOutput)
}

func (o CaffeSettingsPtrOutput) CommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaffeSettings) *string {
		if v == nil {
			return nil
		}
		return v.CommandLineArgs
	}).(pulumi.StringPtrOutput)
}

// This property cannot be specified if pythonScriptFilePath is specified.
func (o CaffeSettingsPtrOutput) ConfigFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaffeSettings) *string {
		if v == nil {
			return nil
		}
		return v.ConfigFilePath
	}).(pulumi.StringPtrOutput)
}

// The default value for this property is equal to nodeCount property
func (o CaffeSettingsPtrOutput) ProcessCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CaffeSettings) *int {
		if v == nil {
			return nil
		}
		return v.ProcessCount
	}).(pulumi.IntPtrOutput)
}

// This property can be specified only if the pythonScriptFilePath is specified.
func (o CaffeSettingsPtrOutput) PythonInterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaffeSettings) *string {
		if v == nil {
			return nil
		}
		return v.PythonInterpreterPath
	}).(pulumi.StringPtrOutput)
}

// This property cannot be specified if configFilePath is specified.
func (o CaffeSettingsPtrOutput) PythonScriptFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaffeSettings) *string {
		if v == nil {
			return nil
		}
		return v.PythonScriptFilePath
	}).(pulumi.StringPtrOutput)
}

// Specifies the settings for Caffe job.
type CaffeSettingsResponse struct {
	CommandLineArgs *string `pulumi:"commandLineArgs"`
	// This property cannot be specified if pythonScriptFilePath is specified.
	ConfigFilePath *string `pulumi:"configFilePath"`
	// The default value for this property is equal to nodeCount property
	ProcessCount *int `pulumi:"processCount"`
	// This property can be specified only if the pythonScriptFilePath is specified.
	PythonInterpreterPath *string `pulumi:"pythonInterpreterPath"`
	// This property cannot be specified if configFilePath is specified.
	PythonScriptFilePath *string `pulumi:"pythonScriptFilePath"`
}

// CaffeSettingsResponseInput is an input type that accepts CaffeSettingsResponseArgs and CaffeSettingsResponseOutput values.
// You can construct a concrete instance of `CaffeSettingsResponseInput` via:
//
//          CaffeSettingsResponseArgs{...}
type CaffeSettingsResponseInput interface {
	pulumi.Input

	ToCaffeSettingsResponseOutput() CaffeSettingsResponseOutput
	ToCaffeSettingsResponseOutputWithContext(context.Context) CaffeSettingsResponseOutput
}

// Specifies the settings for Caffe job.
type CaffeSettingsResponseArgs struct {
	CommandLineArgs pulumi.StringPtrInput `pulumi:"commandLineArgs"`
	// This property cannot be specified if pythonScriptFilePath is specified.
	ConfigFilePath pulumi.StringPtrInput `pulumi:"configFilePath"`
	// The default value for this property is equal to nodeCount property
	ProcessCount pulumi.IntPtrInput `pulumi:"processCount"`
	// This property can be specified only if the pythonScriptFilePath is specified.
	PythonInterpreterPath pulumi.StringPtrInput `pulumi:"pythonInterpreterPath"`
	// This property cannot be specified if configFilePath is specified.
	PythonScriptFilePath pulumi.StringPtrInput `pulumi:"pythonScriptFilePath"`
}

func (CaffeSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaffeSettingsResponse)(nil)).Elem()
}

func (i CaffeSettingsResponseArgs) ToCaffeSettingsResponseOutput() CaffeSettingsResponseOutput {
	return i.ToCaffeSettingsResponseOutputWithContext(context.Background())
}

func (i CaffeSettingsResponseArgs) ToCaffeSettingsResponseOutputWithContext(ctx context.Context) CaffeSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaffeSettingsResponseOutput)
}

func (i CaffeSettingsResponseArgs) ToCaffeSettingsResponsePtrOutput() CaffeSettingsResponsePtrOutput {
	return i.ToCaffeSettingsResponsePtrOutputWithContext(context.Background())
}

func (i CaffeSettingsResponseArgs) ToCaffeSettingsResponsePtrOutputWithContext(ctx context.Context) CaffeSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaffeSettingsResponseOutput).ToCaffeSettingsResponsePtrOutputWithContext(ctx)
}

// CaffeSettingsResponsePtrInput is an input type that accepts CaffeSettingsResponseArgs, CaffeSettingsResponsePtr and CaffeSettingsResponsePtrOutput values.
// You can construct a concrete instance of `CaffeSettingsResponsePtrInput` via:
//
//          CaffeSettingsResponseArgs{...}
//
//  or:
//
//          nil
type CaffeSettingsResponsePtrInput interface {
	pulumi.Input

	ToCaffeSettingsResponsePtrOutput() CaffeSettingsResponsePtrOutput
	ToCaffeSettingsResponsePtrOutputWithContext(context.Context) CaffeSettingsResponsePtrOutput
}

type caffeSettingsResponsePtrType CaffeSettingsResponseArgs

func CaffeSettingsResponsePtr(v *CaffeSettingsResponseArgs) CaffeSettingsResponsePtrInput {
	return (*caffeSettingsResponsePtrType)(v)
}

func (*caffeSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaffeSettingsResponse)(nil)).Elem()
}

func (i *caffeSettingsResponsePtrType) ToCaffeSettingsResponsePtrOutput() CaffeSettingsResponsePtrOutput {
	return i.ToCaffeSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *caffeSettingsResponsePtrType) ToCaffeSettingsResponsePtrOutputWithContext(ctx context.Context) CaffeSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaffeSettingsResponsePtrOutput)
}

// Specifies the settings for Caffe job.
type CaffeSettingsResponseOutput struct{ *pulumi.OutputState }

func (CaffeSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaffeSettingsResponse)(nil)).Elem()
}

func (o CaffeSettingsResponseOutput) ToCaffeSettingsResponseOutput() CaffeSettingsResponseOutput {
	return o
}

func (o CaffeSettingsResponseOutput) ToCaffeSettingsResponseOutputWithContext(ctx context.Context) CaffeSettingsResponseOutput {
	return o
}

func (o CaffeSettingsResponseOutput) ToCaffeSettingsResponsePtrOutput() CaffeSettingsResponsePtrOutput {
	return o.ToCaffeSettingsResponsePtrOutputWithContext(context.Background())
}

func (o CaffeSettingsResponseOutput) ToCaffeSettingsResponsePtrOutputWithContext(ctx context.Context) CaffeSettingsResponsePtrOutput {
	return o.ApplyT(func(v CaffeSettingsResponse) *CaffeSettingsResponse {
		return &v
	}).(CaffeSettingsResponsePtrOutput)
}
func (o CaffeSettingsResponseOutput) CommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaffeSettingsResponse) *string { return v.CommandLineArgs }).(pulumi.StringPtrOutput)
}

// This property cannot be specified if pythonScriptFilePath is specified.
func (o CaffeSettingsResponseOutput) ConfigFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaffeSettingsResponse) *string { return v.ConfigFilePath }).(pulumi.StringPtrOutput)
}

// The default value for this property is equal to nodeCount property
func (o CaffeSettingsResponseOutput) ProcessCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CaffeSettingsResponse) *int { return v.ProcessCount }).(pulumi.IntPtrOutput)
}

// This property can be specified only if the pythonScriptFilePath is specified.
func (o CaffeSettingsResponseOutput) PythonInterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaffeSettingsResponse) *string { return v.PythonInterpreterPath }).(pulumi.StringPtrOutput)
}

// This property cannot be specified if configFilePath is specified.
func (o CaffeSettingsResponseOutput) PythonScriptFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaffeSettingsResponse) *string { return v.PythonScriptFilePath }).(pulumi.StringPtrOutput)
}

type CaffeSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (CaffeSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaffeSettingsResponse)(nil)).Elem()
}

func (o CaffeSettingsResponsePtrOutput) ToCaffeSettingsResponsePtrOutput() CaffeSettingsResponsePtrOutput {
	return o
}

func (o CaffeSettingsResponsePtrOutput) ToCaffeSettingsResponsePtrOutputWithContext(ctx context.Context) CaffeSettingsResponsePtrOutput {
	return o
}

func (o CaffeSettingsResponsePtrOutput) Elem() CaffeSettingsResponseOutput {
	return o.ApplyT(func(v *CaffeSettingsResponse) CaffeSettingsResponse { return *v }).(CaffeSettingsResponseOutput)
}

func (o CaffeSettingsResponsePtrOutput) CommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaffeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CommandLineArgs
	}).(pulumi.StringPtrOutput)
}

// This property cannot be specified if pythonScriptFilePath is specified.
func (o CaffeSettingsResponsePtrOutput) ConfigFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaffeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConfigFilePath
	}).(pulumi.StringPtrOutput)
}

// The default value for this property is equal to nodeCount property
func (o CaffeSettingsResponsePtrOutput) ProcessCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CaffeSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ProcessCount
	}).(pulumi.IntPtrOutput)
}

// This property can be specified only if the pythonScriptFilePath is specified.
func (o CaffeSettingsResponsePtrOutput) PythonInterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaffeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PythonInterpreterPath
	}).(pulumi.StringPtrOutput)
}

// This property cannot be specified if configFilePath is specified.
func (o CaffeSettingsResponsePtrOutput) PythonScriptFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaffeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PythonScriptFilePath
	}).(pulumi.StringPtrOutput)
}

// Specifies the settings for Chainer job.
type ChainerSettings struct {
	CommandLineArgs *string `pulumi:"commandLineArgs"`
	// The default value for this property is equal to nodeCount property
	ProcessCount          *int    `pulumi:"processCount"`
	PythonInterpreterPath *string `pulumi:"pythonInterpreterPath"`
	PythonScriptFilePath  string  `pulumi:"pythonScriptFilePath"`
}

// ChainerSettingsInput is an input type that accepts ChainerSettingsArgs and ChainerSettingsOutput values.
// You can construct a concrete instance of `ChainerSettingsInput` via:
//
//          ChainerSettingsArgs{...}
type ChainerSettingsInput interface {
	pulumi.Input

	ToChainerSettingsOutput() ChainerSettingsOutput
	ToChainerSettingsOutputWithContext(context.Context) ChainerSettingsOutput
}

// Specifies the settings for Chainer job.
type ChainerSettingsArgs struct {
	CommandLineArgs pulumi.StringPtrInput `pulumi:"commandLineArgs"`
	// The default value for this property is equal to nodeCount property
	ProcessCount          pulumi.IntPtrInput    `pulumi:"processCount"`
	PythonInterpreterPath pulumi.StringPtrInput `pulumi:"pythonInterpreterPath"`
	PythonScriptFilePath  pulumi.StringInput    `pulumi:"pythonScriptFilePath"`
}

func (ChainerSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChainerSettings)(nil)).Elem()
}

func (i ChainerSettingsArgs) ToChainerSettingsOutput() ChainerSettingsOutput {
	return i.ToChainerSettingsOutputWithContext(context.Background())
}

func (i ChainerSettingsArgs) ToChainerSettingsOutputWithContext(ctx context.Context) ChainerSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainerSettingsOutput)
}

func (i ChainerSettingsArgs) ToChainerSettingsPtrOutput() ChainerSettingsPtrOutput {
	return i.ToChainerSettingsPtrOutputWithContext(context.Background())
}

func (i ChainerSettingsArgs) ToChainerSettingsPtrOutputWithContext(ctx context.Context) ChainerSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainerSettingsOutput).ToChainerSettingsPtrOutputWithContext(ctx)
}

// ChainerSettingsPtrInput is an input type that accepts ChainerSettingsArgs, ChainerSettingsPtr and ChainerSettingsPtrOutput values.
// You can construct a concrete instance of `ChainerSettingsPtrInput` via:
//
//          ChainerSettingsArgs{...}
//
//  or:
//
//          nil
type ChainerSettingsPtrInput interface {
	pulumi.Input

	ToChainerSettingsPtrOutput() ChainerSettingsPtrOutput
	ToChainerSettingsPtrOutputWithContext(context.Context) ChainerSettingsPtrOutput
}

type chainerSettingsPtrType ChainerSettingsArgs

func ChainerSettingsPtr(v *ChainerSettingsArgs) ChainerSettingsPtrInput {
	return (*chainerSettingsPtrType)(v)
}

func (*chainerSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChainerSettings)(nil)).Elem()
}

func (i *chainerSettingsPtrType) ToChainerSettingsPtrOutput() ChainerSettingsPtrOutput {
	return i.ToChainerSettingsPtrOutputWithContext(context.Background())
}

func (i *chainerSettingsPtrType) ToChainerSettingsPtrOutputWithContext(ctx context.Context) ChainerSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainerSettingsPtrOutput)
}

// Specifies the settings for Chainer job.
type ChainerSettingsOutput struct{ *pulumi.OutputState }

func (ChainerSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChainerSettings)(nil)).Elem()
}

func (o ChainerSettingsOutput) ToChainerSettingsOutput() ChainerSettingsOutput {
	return o
}

func (o ChainerSettingsOutput) ToChainerSettingsOutputWithContext(ctx context.Context) ChainerSettingsOutput {
	return o
}

func (o ChainerSettingsOutput) ToChainerSettingsPtrOutput() ChainerSettingsPtrOutput {
	return o.ToChainerSettingsPtrOutputWithContext(context.Background())
}

func (o ChainerSettingsOutput) ToChainerSettingsPtrOutputWithContext(ctx context.Context) ChainerSettingsPtrOutput {
	return o.ApplyT(func(v ChainerSettings) *ChainerSettings {
		return &v
	}).(ChainerSettingsPtrOutput)
}
func (o ChainerSettingsOutput) CommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChainerSettings) *string { return v.CommandLineArgs }).(pulumi.StringPtrOutput)
}

// The default value for this property is equal to nodeCount property
func (o ChainerSettingsOutput) ProcessCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChainerSettings) *int { return v.ProcessCount }).(pulumi.IntPtrOutput)
}

func (o ChainerSettingsOutput) PythonInterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChainerSettings) *string { return v.PythonInterpreterPath }).(pulumi.StringPtrOutput)
}

func (o ChainerSettingsOutput) PythonScriptFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v ChainerSettings) string { return v.PythonScriptFilePath }).(pulumi.StringOutput)
}

type ChainerSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChainerSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChainerSettings)(nil)).Elem()
}

func (o ChainerSettingsPtrOutput) ToChainerSettingsPtrOutput() ChainerSettingsPtrOutput {
	return o
}

func (o ChainerSettingsPtrOutput) ToChainerSettingsPtrOutputWithContext(ctx context.Context) ChainerSettingsPtrOutput {
	return o
}

func (o ChainerSettingsPtrOutput) Elem() ChainerSettingsOutput {
	return o.ApplyT(func(v *ChainerSettings) ChainerSettings { return *v }).(ChainerSettingsOutput)
}

func (o ChainerSettingsPtrOutput) CommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChainerSettings) *string {
		if v == nil {
			return nil
		}
		return v.CommandLineArgs
	}).(pulumi.StringPtrOutput)
}

// The default value for this property is equal to nodeCount property
func (o ChainerSettingsPtrOutput) ProcessCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChainerSettings) *int {
		if v == nil {
			return nil
		}
		return v.ProcessCount
	}).(pulumi.IntPtrOutput)
}

func (o ChainerSettingsPtrOutput) PythonInterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChainerSettings) *string {
		if v == nil {
			return nil
		}
		return v.PythonInterpreterPath
	}).(pulumi.StringPtrOutput)
}

func (o ChainerSettingsPtrOutput) PythonScriptFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChainerSettings) *string {
		if v == nil {
			return nil
		}
		return &v.PythonScriptFilePath
	}).(pulumi.StringPtrOutput)
}

// Specifies the settings for Chainer job.
type ChainerSettingsResponse struct {
	CommandLineArgs *string `pulumi:"commandLineArgs"`
	// The default value for this property is equal to nodeCount property
	ProcessCount          *int    `pulumi:"processCount"`
	PythonInterpreterPath *string `pulumi:"pythonInterpreterPath"`
	PythonScriptFilePath  string  `pulumi:"pythonScriptFilePath"`
}

// ChainerSettingsResponseInput is an input type that accepts ChainerSettingsResponseArgs and ChainerSettingsResponseOutput values.
// You can construct a concrete instance of `ChainerSettingsResponseInput` via:
//
//          ChainerSettingsResponseArgs{...}
type ChainerSettingsResponseInput interface {
	pulumi.Input

	ToChainerSettingsResponseOutput() ChainerSettingsResponseOutput
	ToChainerSettingsResponseOutputWithContext(context.Context) ChainerSettingsResponseOutput
}

// Specifies the settings for Chainer job.
type ChainerSettingsResponseArgs struct {
	CommandLineArgs pulumi.StringPtrInput `pulumi:"commandLineArgs"`
	// The default value for this property is equal to nodeCount property
	ProcessCount          pulumi.IntPtrInput    `pulumi:"processCount"`
	PythonInterpreterPath pulumi.StringPtrInput `pulumi:"pythonInterpreterPath"`
	PythonScriptFilePath  pulumi.StringInput    `pulumi:"pythonScriptFilePath"`
}

func (ChainerSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChainerSettingsResponse)(nil)).Elem()
}

func (i ChainerSettingsResponseArgs) ToChainerSettingsResponseOutput() ChainerSettingsResponseOutput {
	return i.ToChainerSettingsResponseOutputWithContext(context.Background())
}

func (i ChainerSettingsResponseArgs) ToChainerSettingsResponseOutputWithContext(ctx context.Context) ChainerSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainerSettingsResponseOutput)
}

func (i ChainerSettingsResponseArgs) ToChainerSettingsResponsePtrOutput() ChainerSettingsResponsePtrOutput {
	return i.ToChainerSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ChainerSettingsResponseArgs) ToChainerSettingsResponsePtrOutputWithContext(ctx context.Context) ChainerSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainerSettingsResponseOutput).ToChainerSettingsResponsePtrOutputWithContext(ctx)
}

// ChainerSettingsResponsePtrInput is an input type that accepts ChainerSettingsResponseArgs, ChainerSettingsResponsePtr and ChainerSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ChainerSettingsResponsePtrInput` via:
//
//          ChainerSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ChainerSettingsResponsePtrInput interface {
	pulumi.Input

	ToChainerSettingsResponsePtrOutput() ChainerSettingsResponsePtrOutput
	ToChainerSettingsResponsePtrOutputWithContext(context.Context) ChainerSettingsResponsePtrOutput
}

type chainerSettingsResponsePtrType ChainerSettingsResponseArgs

func ChainerSettingsResponsePtr(v *ChainerSettingsResponseArgs) ChainerSettingsResponsePtrInput {
	return (*chainerSettingsResponsePtrType)(v)
}

func (*chainerSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChainerSettingsResponse)(nil)).Elem()
}

func (i *chainerSettingsResponsePtrType) ToChainerSettingsResponsePtrOutput() ChainerSettingsResponsePtrOutput {
	return i.ToChainerSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *chainerSettingsResponsePtrType) ToChainerSettingsResponsePtrOutputWithContext(ctx context.Context) ChainerSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChainerSettingsResponsePtrOutput)
}

// Specifies the settings for Chainer job.
type ChainerSettingsResponseOutput struct{ *pulumi.OutputState }

func (ChainerSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChainerSettingsResponse)(nil)).Elem()
}

func (o ChainerSettingsResponseOutput) ToChainerSettingsResponseOutput() ChainerSettingsResponseOutput {
	return o
}

func (o ChainerSettingsResponseOutput) ToChainerSettingsResponseOutputWithContext(ctx context.Context) ChainerSettingsResponseOutput {
	return o
}

func (o ChainerSettingsResponseOutput) ToChainerSettingsResponsePtrOutput() ChainerSettingsResponsePtrOutput {
	return o.ToChainerSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ChainerSettingsResponseOutput) ToChainerSettingsResponsePtrOutputWithContext(ctx context.Context) ChainerSettingsResponsePtrOutput {
	return o.ApplyT(func(v ChainerSettingsResponse) *ChainerSettingsResponse {
		return &v
	}).(ChainerSettingsResponsePtrOutput)
}
func (o ChainerSettingsResponseOutput) CommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChainerSettingsResponse) *string { return v.CommandLineArgs }).(pulumi.StringPtrOutput)
}

// The default value for this property is equal to nodeCount property
func (o ChainerSettingsResponseOutput) ProcessCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChainerSettingsResponse) *int { return v.ProcessCount }).(pulumi.IntPtrOutput)
}

func (o ChainerSettingsResponseOutput) PythonInterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChainerSettingsResponse) *string { return v.PythonInterpreterPath }).(pulumi.StringPtrOutput)
}

func (o ChainerSettingsResponseOutput) PythonScriptFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v ChainerSettingsResponse) string { return v.PythonScriptFilePath }).(pulumi.StringOutput)
}

type ChainerSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ChainerSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChainerSettingsResponse)(nil)).Elem()
}

func (o ChainerSettingsResponsePtrOutput) ToChainerSettingsResponsePtrOutput() ChainerSettingsResponsePtrOutput {
	return o
}

func (o ChainerSettingsResponsePtrOutput) ToChainerSettingsResponsePtrOutputWithContext(ctx context.Context) ChainerSettingsResponsePtrOutput {
	return o
}

func (o ChainerSettingsResponsePtrOutput) Elem() ChainerSettingsResponseOutput {
	return o.ApplyT(func(v *ChainerSettingsResponse) ChainerSettingsResponse { return *v }).(ChainerSettingsResponseOutput)
}

func (o ChainerSettingsResponsePtrOutput) CommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChainerSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CommandLineArgs
	}).(pulumi.StringPtrOutput)
}

// The default value for this property is equal to nodeCount property
func (o ChainerSettingsResponsePtrOutput) ProcessCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChainerSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ProcessCount
	}).(pulumi.IntPtrOutput)
}

func (o ChainerSettingsResponsePtrOutput) PythonInterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChainerSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PythonInterpreterPath
	}).(pulumi.StringPtrOutput)
}

func (o ChainerSettingsResponsePtrOutput) PythonScriptFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChainerSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PythonScriptFilePath
	}).(pulumi.StringPtrOutput)
}

// Settings for the container to be downloaded.
type ContainerSettings struct {
	// Details of the container image such as name, URL and credentials.
	ImageSourceRegistry ImageSourceRegistry `pulumi:"imageSourceRegistry"`
}

// ContainerSettingsInput is an input type that accepts ContainerSettingsArgs and ContainerSettingsOutput values.
// You can construct a concrete instance of `ContainerSettingsInput` via:
//
//          ContainerSettingsArgs{...}
type ContainerSettingsInput interface {
	pulumi.Input

	ToContainerSettingsOutput() ContainerSettingsOutput
	ToContainerSettingsOutputWithContext(context.Context) ContainerSettingsOutput
}

// Settings for the container to be downloaded.
type ContainerSettingsArgs struct {
	// Details of the container image such as name, URL and credentials.
	ImageSourceRegistry ImageSourceRegistryInput `pulumi:"imageSourceRegistry"`
}

func (ContainerSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerSettings)(nil)).Elem()
}

func (i ContainerSettingsArgs) ToContainerSettingsOutput() ContainerSettingsOutput {
	return i.ToContainerSettingsOutputWithContext(context.Background())
}

func (i ContainerSettingsArgs) ToContainerSettingsOutputWithContext(ctx context.Context) ContainerSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerSettingsOutput)
}

func (i ContainerSettingsArgs) ToContainerSettingsPtrOutput() ContainerSettingsPtrOutput {
	return i.ToContainerSettingsPtrOutputWithContext(context.Background())
}

func (i ContainerSettingsArgs) ToContainerSettingsPtrOutputWithContext(ctx context.Context) ContainerSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerSettingsOutput).ToContainerSettingsPtrOutputWithContext(ctx)
}

// ContainerSettingsPtrInput is an input type that accepts ContainerSettingsArgs, ContainerSettingsPtr and ContainerSettingsPtrOutput values.
// You can construct a concrete instance of `ContainerSettingsPtrInput` via:
//
//          ContainerSettingsArgs{...}
//
//  or:
//
//          nil
type ContainerSettingsPtrInput interface {
	pulumi.Input

	ToContainerSettingsPtrOutput() ContainerSettingsPtrOutput
	ToContainerSettingsPtrOutputWithContext(context.Context) ContainerSettingsPtrOutput
}

type containerSettingsPtrType ContainerSettingsArgs

func ContainerSettingsPtr(v *ContainerSettingsArgs) ContainerSettingsPtrInput {
	return (*containerSettingsPtrType)(v)
}

func (*containerSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerSettings)(nil)).Elem()
}

func (i *containerSettingsPtrType) ToContainerSettingsPtrOutput() ContainerSettingsPtrOutput {
	return i.ToContainerSettingsPtrOutputWithContext(context.Background())
}

func (i *containerSettingsPtrType) ToContainerSettingsPtrOutputWithContext(ctx context.Context) ContainerSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerSettingsPtrOutput)
}

// Settings for the container to be downloaded.
type ContainerSettingsOutput struct{ *pulumi.OutputState }

func (ContainerSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerSettings)(nil)).Elem()
}

func (o ContainerSettingsOutput) ToContainerSettingsOutput() ContainerSettingsOutput {
	return o
}

func (o ContainerSettingsOutput) ToContainerSettingsOutputWithContext(ctx context.Context) ContainerSettingsOutput {
	return o
}

func (o ContainerSettingsOutput) ToContainerSettingsPtrOutput() ContainerSettingsPtrOutput {
	return o.ToContainerSettingsPtrOutputWithContext(context.Background())
}

func (o ContainerSettingsOutput) ToContainerSettingsPtrOutputWithContext(ctx context.Context) ContainerSettingsPtrOutput {
	return o.ApplyT(func(v ContainerSettings) *ContainerSettings {
		return &v
	}).(ContainerSettingsPtrOutput)
}

// Details of the container image such as name, URL and credentials.
func (o ContainerSettingsOutput) ImageSourceRegistry() ImageSourceRegistryOutput {
	return o.ApplyT(func(v ContainerSettings) ImageSourceRegistry { return v.ImageSourceRegistry }).(ImageSourceRegistryOutput)
}

type ContainerSettingsPtrOutput struct{ *pulumi.OutputState }

func (ContainerSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerSettings)(nil)).Elem()
}

func (o ContainerSettingsPtrOutput) ToContainerSettingsPtrOutput() ContainerSettingsPtrOutput {
	return o
}

func (o ContainerSettingsPtrOutput) ToContainerSettingsPtrOutputWithContext(ctx context.Context) ContainerSettingsPtrOutput {
	return o
}

func (o ContainerSettingsPtrOutput) Elem() ContainerSettingsOutput {
	return o.ApplyT(func(v *ContainerSettings) ContainerSettings { return *v }).(ContainerSettingsOutput)
}

// Details of the container image such as name, URL and credentials.
func (o ContainerSettingsPtrOutput) ImageSourceRegistry() ImageSourceRegistryPtrOutput {
	return o.ApplyT(func(v *ContainerSettings) *ImageSourceRegistry {
		if v == nil {
			return nil
		}
		return &v.ImageSourceRegistry
	}).(ImageSourceRegistryPtrOutput)
}

// Settings for the container to be downloaded.
type ContainerSettingsResponse struct {
	// Details of the container image such as name, URL and credentials.
	ImageSourceRegistry ImageSourceRegistryResponse `pulumi:"imageSourceRegistry"`
}

// ContainerSettingsResponseInput is an input type that accepts ContainerSettingsResponseArgs and ContainerSettingsResponseOutput values.
// You can construct a concrete instance of `ContainerSettingsResponseInput` via:
//
//          ContainerSettingsResponseArgs{...}
type ContainerSettingsResponseInput interface {
	pulumi.Input

	ToContainerSettingsResponseOutput() ContainerSettingsResponseOutput
	ToContainerSettingsResponseOutputWithContext(context.Context) ContainerSettingsResponseOutput
}

// Settings for the container to be downloaded.
type ContainerSettingsResponseArgs struct {
	// Details of the container image such as name, URL and credentials.
	ImageSourceRegistry ImageSourceRegistryResponseInput `pulumi:"imageSourceRegistry"`
}

func (ContainerSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerSettingsResponse)(nil)).Elem()
}

func (i ContainerSettingsResponseArgs) ToContainerSettingsResponseOutput() ContainerSettingsResponseOutput {
	return i.ToContainerSettingsResponseOutputWithContext(context.Background())
}

func (i ContainerSettingsResponseArgs) ToContainerSettingsResponseOutputWithContext(ctx context.Context) ContainerSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerSettingsResponseOutput)
}

func (i ContainerSettingsResponseArgs) ToContainerSettingsResponsePtrOutput() ContainerSettingsResponsePtrOutput {
	return i.ToContainerSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ContainerSettingsResponseArgs) ToContainerSettingsResponsePtrOutputWithContext(ctx context.Context) ContainerSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerSettingsResponseOutput).ToContainerSettingsResponsePtrOutputWithContext(ctx)
}

// ContainerSettingsResponsePtrInput is an input type that accepts ContainerSettingsResponseArgs, ContainerSettingsResponsePtr and ContainerSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ContainerSettingsResponsePtrInput` via:
//
//          ContainerSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ContainerSettingsResponsePtrInput interface {
	pulumi.Input

	ToContainerSettingsResponsePtrOutput() ContainerSettingsResponsePtrOutput
	ToContainerSettingsResponsePtrOutputWithContext(context.Context) ContainerSettingsResponsePtrOutput
}

type containerSettingsResponsePtrType ContainerSettingsResponseArgs

func ContainerSettingsResponsePtr(v *ContainerSettingsResponseArgs) ContainerSettingsResponsePtrInput {
	return (*containerSettingsResponsePtrType)(v)
}

func (*containerSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerSettingsResponse)(nil)).Elem()
}

func (i *containerSettingsResponsePtrType) ToContainerSettingsResponsePtrOutput() ContainerSettingsResponsePtrOutput {
	return i.ToContainerSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *containerSettingsResponsePtrType) ToContainerSettingsResponsePtrOutputWithContext(ctx context.Context) ContainerSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerSettingsResponsePtrOutput)
}

// Settings for the container to be downloaded.
type ContainerSettingsResponseOutput struct{ *pulumi.OutputState }

func (ContainerSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerSettingsResponse)(nil)).Elem()
}

func (o ContainerSettingsResponseOutput) ToContainerSettingsResponseOutput() ContainerSettingsResponseOutput {
	return o
}

func (o ContainerSettingsResponseOutput) ToContainerSettingsResponseOutputWithContext(ctx context.Context) ContainerSettingsResponseOutput {
	return o
}

func (o ContainerSettingsResponseOutput) ToContainerSettingsResponsePtrOutput() ContainerSettingsResponsePtrOutput {
	return o.ToContainerSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ContainerSettingsResponseOutput) ToContainerSettingsResponsePtrOutputWithContext(ctx context.Context) ContainerSettingsResponsePtrOutput {
	return o.ApplyT(func(v ContainerSettingsResponse) *ContainerSettingsResponse {
		return &v
	}).(ContainerSettingsResponsePtrOutput)
}

// Details of the container image such as name, URL and credentials.
func (o ContainerSettingsResponseOutput) ImageSourceRegistry() ImageSourceRegistryResponseOutput {
	return o.ApplyT(func(v ContainerSettingsResponse) ImageSourceRegistryResponse { return v.ImageSourceRegistry }).(ImageSourceRegistryResponseOutput)
}

type ContainerSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerSettingsResponse)(nil)).Elem()
}

func (o ContainerSettingsResponsePtrOutput) ToContainerSettingsResponsePtrOutput() ContainerSettingsResponsePtrOutput {
	return o
}

func (o ContainerSettingsResponsePtrOutput) ToContainerSettingsResponsePtrOutputWithContext(ctx context.Context) ContainerSettingsResponsePtrOutput {
	return o
}

func (o ContainerSettingsResponsePtrOutput) Elem() ContainerSettingsResponseOutput {
	return o.ApplyT(func(v *ContainerSettingsResponse) ContainerSettingsResponse { return *v }).(ContainerSettingsResponseOutput)
}

// Details of the container image such as name, URL and credentials.
func (o ContainerSettingsResponsePtrOutput) ImageSourceRegistry() ImageSourceRegistryResponsePtrOutput {
	return o.ApplyT(func(v *ContainerSettingsResponse) *ImageSourceRegistryResponse {
		if v == nil {
			return nil
		}
		return &v.ImageSourceRegistry
	}).(ImageSourceRegistryResponsePtrOutput)
}

// Specifies the settings for a custom tool kit job.
type CustomToolkitSettings struct {
	CommandLine *string `pulumi:"commandLine"`
}

// CustomToolkitSettingsInput is an input type that accepts CustomToolkitSettingsArgs and CustomToolkitSettingsOutput values.
// You can construct a concrete instance of `CustomToolkitSettingsInput` via:
//
//          CustomToolkitSettingsArgs{...}
type CustomToolkitSettingsInput interface {
	pulumi.Input

	ToCustomToolkitSettingsOutput() CustomToolkitSettingsOutput
	ToCustomToolkitSettingsOutputWithContext(context.Context) CustomToolkitSettingsOutput
}

// Specifies the settings for a custom tool kit job.
type CustomToolkitSettingsArgs struct {
	CommandLine pulumi.StringPtrInput `pulumi:"commandLine"`
}

func (CustomToolkitSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomToolkitSettings)(nil)).Elem()
}

func (i CustomToolkitSettingsArgs) ToCustomToolkitSettingsOutput() CustomToolkitSettingsOutput {
	return i.ToCustomToolkitSettingsOutputWithContext(context.Background())
}

func (i CustomToolkitSettingsArgs) ToCustomToolkitSettingsOutputWithContext(ctx context.Context) CustomToolkitSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomToolkitSettingsOutput)
}

func (i CustomToolkitSettingsArgs) ToCustomToolkitSettingsPtrOutput() CustomToolkitSettingsPtrOutput {
	return i.ToCustomToolkitSettingsPtrOutputWithContext(context.Background())
}

func (i CustomToolkitSettingsArgs) ToCustomToolkitSettingsPtrOutputWithContext(ctx context.Context) CustomToolkitSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomToolkitSettingsOutput).ToCustomToolkitSettingsPtrOutputWithContext(ctx)
}

// CustomToolkitSettingsPtrInput is an input type that accepts CustomToolkitSettingsArgs, CustomToolkitSettingsPtr and CustomToolkitSettingsPtrOutput values.
// You can construct a concrete instance of `CustomToolkitSettingsPtrInput` via:
//
//          CustomToolkitSettingsArgs{...}
//
//  or:
//
//          nil
type CustomToolkitSettingsPtrInput interface {
	pulumi.Input

	ToCustomToolkitSettingsPtrOutput() CustomToolkitSettingsPtrOutput
	ToCustomToolkitSettingsPtrOutputWithContext(context.Context) CustomToolkitSettingsPtrOutput
}

type customToolkitSettingsPtrType CustomToolkitSettingsArgs

func CustomToolkitSettingsPtr(v *CustomToolkitSettingsArgs) CustomToolkitSettingsPtrInput {
	return (*customToolkitSettingsPtrType)(v)
}

func (*customToolkitSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomToolkitSettings)(nil)).Elem()
}

func (i *customToolkitSettingsPtrType) ToCustomToolkitSettingsPtrOutput() CustomToolkitSettingsPtrOutput {
	return i.ToCustomToolkitSettingsPtrOutputWithContext(context.Background())
}

func (i *customToolkitSettingsPtrType) ToCustomToolkitSettingsPtrOutputWithContext(ctx context.Context) CustomToolkitSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomToolkitSettingsPtrOutput)
}

// Specifies the settings for a custom tool kit job.
type CustomToolkitSettingsOutput struct{ *pulumi.OutputState }

func (CustomToolkitSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomToolkitSettings)(nil)).Elem()
}

func (o CustomToolkitSettingsOutput) ToCustomToolkitSettingsOutput() CustomToolkitSettingsOutput {
	return o
}

func (o CustomToolkitSettingsOutput) ToCustomToolkitSettingsOutputWithContext(ctx context.Context) CustomToolkitSettingsOutput {
	return o
}

func (o CustomToolkitSettingsOutput) ToCustomToolkitSettingsPtrOutput() CustomToolkitSettingsPtrOutput {
	return o.ToCustomToolkitSettingsPtrOutputWithContext(context.Background())
}

func (o CustomToolkitSettingsOutput) ToCustomToolkitSettingsPtrOutputWithContext(ctx context.Context) CustomToolkitSettingsPtrOutput {
	return o.ApplyT(func(v CustomToolkitSettings) *CustomToolkitSettings {
		return &v
	}).(CustomToolkitSettingsPtrOutput)
}
func (o CustomToolkitSettingsOutput) CommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomToolkitSettings) *string { return v.CommandLine }).(pulumi.StringPtrOutput)
}

type CustomToolkitSettingsPtrOutput struct{ *pulumi.OutputState }

func (CustomToolkitSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomToolkitSettings)(nil)).Elem()
}

func (o CustomToolkitSettingsPtrOutput) ToCustomToolkitSettingsPtrOutput() CustomToolkitSettingsPtrOutput {
	return o
}

func (o CustomToolkitSettingsPtrOutput) ToCustomToolkitSettingsPtrOutputWithContext(ctx context.Context) CustomToolkitSettingsPtrOutput {
	return o
}

func (o CustomToolkitSettingsPtrOutput) Elem() CustomToolkitSettingsOutput {
	return o.ApplyT(func(v *CustomToolkitSettings) CustomToolkitSettings { return *v }).(CustomToolkitSettingsOutput)
}

func (o CustomToolkitSettingsPtrOutput) CommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomToolkitSettings) *string {
		if v == nil {
			return nil
		}
		return v.CommandLine
	}).(pulumi.StringPtrOutput)
}

// Specifies the settings for a custom tool kit job.
type CustomToolkitSettingsResponse struct {
	CommandLine *string `pulumi:"commandLine"`
}

// CustomToolkitSettingsResponseInput is an input type that accepts CustomToolkitSettingsResponseArgs and CustomToolkitSettingsResponseOutput values.
// You can construct a concrete instance of `CustomToolkitSettingsResponseInput` via:
//
//          CustomToolkitSettingsResponseArgs{...}
type CustomToolkitSettingsResponseInput interface {
	pulumi.Input

	ToCustomToolkitSettingsResponseOutput() CustomToolkitSettingsResponseOutput
	ToCustomToolkitSettingsResponseOutputWithContext(context.Context) CustomToolkitSettingsResponseOutput
}

// Specifies the settings for a custom tool kit job.
type CustomToolkitSettingsResponseArgs struct {
	CommandLine pulumi.StringPtrInput `pulumi:"commandLine"`
}

func (CustomToolkitSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomToolkitSettingsResponse)(nil)).Elem()
}

func (i CustomToolkitSettingsResponseArgs) ToCustomToolkitSettingsResponseOutput() CustomToolkitSettingsResponseOutput {
	return i.ToCustomToolkitSettingsResponseOutputWithContext(context.Background())
}

func (i CustomToolkitSettingsResponseArgs) ToCustomToolkitSettingsResponseOutputWithContext(ctx context.Context) CustomToolkitSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomToolkitSettingsResponseOutput)
}

func (i CustomToolkitSettingsResponseArgs) ToCustomToolkitSettingsResponsePtrOutput() CustomToolkitSettingsResponsePtrOutput {
	return i.ToCustomToolkitSettingsResponsePtrOutputWithContext(context.Background())
}

func (i CustomToolkitSettingsResponseArgs) ToCustomToolkitSettingsResponsePtrOutputWithContext(ctx context.Context) CustomToolkitSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomToolkitSettingsResponseOutput).ToCustomToolkitSettingsResponsePtrOutputWithContext(ctx)
}

// CustomToolkitSettingsResponsePtrInput is an input type that accepts CustomToolkitSettingsResponseArgs, CustomToolkitSettingsResponsePtr and CustomToolkitSettingsResponsePtrOutput values.
// You can construct a concrete instance of `CustomToolkitSettingsResponsePtrInput` via:
//
//          CustomToolkitSettingsResponseArgs{...}
//
//  or:
//
//          nil
type CustomToolkitSettingsResponsePtrInput interface {
	pulumi.Input

	ToCustomToolkitSettingsResponsePtrOutput() CustomToolkitSettingsResponsePtrOutput
	ToCustomToolkitSettingsResponsePtrOutputWithContext(context.Context) CustomToolkitSettingsResponsePtrOutput
}

type customToolkitSettingsResponsePtrType CustomToolkitSettingsResponseArgs

func CustomToolkitSettingsResponsePtr(v *CustomToolkitSettingsResponseArgs) CustomToolkitSettingsResponsePtrInput {
	return (*customToolkitSettingsResponsePtrType)(v)
}

func (*customToolkitSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomToolkitSettingsResponse)(nil)).Elem()
}

func (i *customToolkitSettingsResponsePtrType) ToCustomToolkitSettingsResponsePtrOutput() CustomToolkitSettingsResponsePtrOutput {
	return i.ToCustomToolkitSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *customToolkitSettingsResponsePtrType) ToCustomToolkitSettingsResponsePtrOutputWithContext(ctx context.Context) CustomToolkitSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomToolkitSettingsResponsePtrOutput)
}

// Specifies the settings for a custom tool kit job.
type CustomToolkitSettingsResponseOutput struct{ *pulumi.OutputState }

func (CustomToolkitSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomToolkitSettingsResponse)(nil)).Elem()
}

func (o CustomToolkitSettingsResponseOutput) ToCustomToolkitSettingsResponseOutput() CustomToolkitSettingsResponseOutput {
	return o
}

func (o CustomToolkitSettingsResponseOutput) ToCustomToolkitSettingsResponseOutputWithContext(ctx context.Context) CustomToolkitSettingsResponseOutput {
	return o
}

func (o CustomToolkitSettingsResponseOutput) ToCustomToolkitSettingsResponsePtrOutput() CustomToolkitSettingsResponsePtrOutput {
	return o.ToCustomToolkitSettingsResponsePtrOutputWithContext(context.Background())
}

func (o CustomToolkitSettingsResponseOutput) ToCustomToolkitSettingsResponsePtrOutputWithContext(ctx context.Context) CustomToolkitSettingsResponsePtrOutput {
	return o.ApplyT(func(v CustomToolkitSettingsResponse) *CustomToolkitSettingsResponse {
		return &v
	}).(CustomToolkitSettingsResponsePtrOutput)
}
func (o CustomToolkitSettingsResponseOutput) CommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomToolkitSettingsResponse) *string { return v.CommandLine }).(pulumi.StringPtrOutput)
}

type CustomToolkitSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomToolkitSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomToolkitSettingsResponse)(nil)).Elem()
}

func (o CustomToolkitSettingsResponsePtrOutput) ToCustomToolkitSettingsResponsePtrOutput() CustomToolkitSettingsResponsePtrOutput {
	return o
}

func (o CustomToolkitSettingsResponsePtrOutput) ToCustomToolkitSettingsResponsePtrOutputWithContext(ctx context.Context) CustomToolkitSettingsResponsePtrOutput {
	return o
}

func (o CustomToolkitSettingsResponsePtrOutput) Elem() CustomToolkitSettingsResponseOutput {
	return o.ApplyT(func(v *CustomToolkitSettingsResponse) CustomToolkitSettingsResponse { return *v }).(CustomToolkitSettingsResponseOutput)
}

func (o CustomToolkitSettingsResponsePtrOutput) CommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomToolkitSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CommandLine
	}).(pulumi.StringPtrOutput)
}

// Settings for the data disk which would be created for the File Server.
type DataDisks struct {
	DiskCount          int    `pulumi:"diskCount"`
	DiskSizeInGB       int    `pulumi:"diskSizeInGB"`
	StorageAccountType string `pulumi:"storageAccountType"`
}

// DataDisksInput is an input type that accepts DataDisksArgs and DataDisksOutput values.
// You can construct a concrete instance of `DataDisksInput` via:
//
//          DataDisksArgs{...}
type DataDisksInput interface {
	pulumi.Input

	ToDataDisksOutput() DataDisksOutput
	ToDataDisksOutputWithContext(context.Context) DataDisksOutput
}

// Settings for the data disk which would be created for the File Server.
type DataDisksArgs struct {
	DiskCount          pulumi.IntInput    `pulumi:"diskCount"`
	DiskSizeInGB       pulumi.IntInput    `pulumi:"diskSizeInGB"`
	StorageAccountType pulumi.StringInput `pulumi:"storageAccountType"`
}

func (DataDisksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDisks)(nil)).Elem()
}

func (i DataDisksArgs) ToDataDisksOutput() DataDisksOutput {
	return i.ToDataDisksOutputWithContext(context.Background())
}

func (i DataDisksArgs) ToDataDisksOutputWithContext(ctx context.Context) DataDisksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDisksOutput)
}

func (i DataDisksArgs) ToDataDisksPtrOutput() DataDisksPtrOutput {
	return i.ToDataDisksPtrOutputWithContext(context.Background())
}

func (i DataDisksArgs) ToDataDisksPtrOutputWithContext(ctx context.Context) DataDisksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDisksOutput).ToDataDisksPtrOutputWithContext(ctx)
}

// DataDisksPtrInput is an input type that accepts DataDisksArgs, DataDisksPtr and DataDisksPtrOutput values.
// You can construct a concrete instance of `DataDisksPtrInput` via:
//
//          DataDisksArgs{...}
//
//  or:
//
//          nil
type DataDisksPtrInput interface {
	pulumi.Input

	ToDataDisksPtrOutput() DataDisksPtrOutput
	ToDataDisksPtrOutputWithContext(context.Context) DataDisksPtrOutput
}

type dataDisksPtrType DataDisksArgs

func DataDisksPtr(v *DataDisksArgs) DataDisksPtrInput {
	return (*dataDisksPtrType)(v)
}

func (*dataDisksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataDisks)(nil)).Elem()
}

func (i *dataDisksPtrType) ToDataDisksPtrOutput() DataDisksPtrOutput {
	return i.ToDataDisksPtrOutputWithContext(context.Background())
}

func (i *dataDisksPtrType) ToDataDisksPtrOutputWithContext(ctx context.Context) DataDisksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDisksPtrOutput)
}

// Settings for the data disk which would be created for the File Server.
type DataDisksOutput struct{ *pulumi.OutputState }

func (DataDisksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDisks)(nil)).Elem()
}

func (o DataDisksOutput) ToDataDisksOutput() DataDisksOutput {
	return o
}

func (o DataDisksOutput) ToDataDisksOutputWithContext(ctx context.Context) DataDisksOutput {
	return o
}

func (o DataDisksOutput) ToDataDisksPtrOutput() DataDisksPtrOutput {
	return o.ToDataDisksPtrOutputWithContext(context.Background())
}

func (o DataDisksOutput) ToDataDisksPtrOutputWithContext(ctx context.Context) DataDisksPtrOutput {
	return o.ApplyT(func(v DataDisks) *DataDisks {
		return &v
	}).(DataDisksPtrOutput)
}
func (o DataDisksOutput) DiskCount() pulumi.IntOutput {
	return o.ApplyT(func(v DataDisks) int { return v.DiskCount }).(pulumi.IntOutput)
}

func (o DataDisksOutput) DiskSizeInGB() pulumi.IntOutput {
	return o.ApplyT(func(v DataDisks) int { return v.DiskSizeInGB }).(pulumi.IntOutput)
}

func (o DataDisksOutput) StorageAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v DataDisks) string { return v.StorageAccountType }).(pulumi.StringOutput)
}

type DataDisksPtrOutput struct{ *pulumi.OutputState }

func (DataDisksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataDisks)(nil)).Elem()
}

func (o DataDisksPtrOutput) ToDataDisksPtrOutput() DataDisksPtrOutput {
	return o
}

func (o DataDisksPtrOutput) ToDataDisksPtrOutputWithContext(ctx context.Context) DataDisksPtrOutput {
	return o
}

func (o DataDisksPtrOutput) Elem() DataDisksOutput {
	return o.ApplyT(func(v *DataDisks) DataDisks { return *v }).(DataDisksOutput)
}

func (o DataDisksPtrOutput) DiskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataDisks) *int {
		if v == nil {
			return nil
		}
		return &v.DiskCount
	}).(pulumi.IntPtrOutput)
}

func (o DataDisksPtrOutput) DiskSizeInGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataDisks) *int {
		if v == nil {
			return nil
		}
		return &v.DiskSizeInGB
	}).(pulumi.IntPtrOutput)
}

func (o DataDisksPtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataDisks) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

// Settings for the data disk which would be created for the File Server.
type DataDisksResponse struct {
	CachingType        string `pulumi:"cachingType"`
	DiskCount          int    `pulumi:"diskCount"`
	DiskSizeInGB       int    `pulumi:"diskSizeInGB"`
	StorageAccountType string `pulumi:"storageAccountType"`
}

// DataDisksResponseInput is an input type that accepts DataDisksResponseArgs and DataDisksResponseOutput values.
// You can construct a concrete instance of `DataDisksResponseInput` via:
//
//          DataDisksResponseArgs{...}
type DataDisksResponseInput interface {
	pulumi.Input

	ToDataDisksResponseOutput() DataDisksResponseOutput
	ToDataDisksResponseOutputWithContext(context.Context) DataDisksResponseOutput
}

// Settings for the data disk which would be created for the File Server.
type DataDisksResponseArgs struct {
	CachingType        pulumi.StringInput `pulumi:"cachingType"`
	DiskCount          pulumi.IntInput    `pulumi:"diskCount"`
	DiskSizeInGB       pulumi.IntInput    `pulumi:"diskSizeInGB"`
	StorageAccountType pulumi.StringInput `pulumi:"storageAccountType"`
}

func (DataDisksResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDisksResponse)(nil)).Elem()
}

func (i DataDisksResponseArgs) ToDataDisksResponseOutput() DataDisksResponseOutput {
	return i.ToDataDisksResponseOutputWithContext(context.Background())
}

func (i DataDisksResponseArgs) ToDataDisksResponseOutputWithContext(ctx context.Context) DataDisksResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDisksResponseOutput)
}

func (i DataDisksResponseArgs) ToDataDisksResponsePtrOutput() DataDisksResponsePtrOutput {
	return i.ToDataDisksResponsePtrOutputWithContext(context.Background())
}

func (i DataDisksResponseArgs) ToDataDisksResponsePtrOutputWithContext(ctx context.Context) DataDisksResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDisksResponseOutput).ToDataDisksResponsePtrOutputWithContext(ctx)
}

// DataDisksResponsePtrInput is an input type that accepts DataDisksResponseArgs, DataDisksResponsePtr and DataDisksResponsePtrOutput values.
// You can construct a concrete instance of `DataDisksResponsePtrInput` via:
//
//          DataDisksResponseArgs{...}
//
//  or:
//
//          nil
type DataDisksResponsePtrInput interface {
	pulumi.Input

	ToDataDisksResponsePtrOutput() DataDisksResponsePtrOutput
	ToDataDisksResponsePtrOutputWithContext(context.Context) DataDisksResponsePtrOutput
}

type dataDisksResponsePtrType DataDisksResponseArgs

func DataDisksResponsePtr(v *DataDisksResponseArgs) DataDisksResponsePtrInput {
	return (*dataDisksResponsePtrType)(v)
}

func (*dataDisksResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataDisksResponse)(nil)).Elem()
}

func (i *dataDisksResponsePtrType) ToDataDisksResponsePtrOutput() DataDisksResponsePtrOutput {
	return i.ToDataDisksResponsePtrOutputWithContext(context.Background())
}

func (i *dataDisksResponsePtrType) ToDataDisksResponsePtrOutputWithContext(ctx context.Context) DataDisksResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDisksResponsePtrOutput)
}

// Settings for the data disk which would be created for the File Server.
type DataDisksResponseOutput struct{ *pulumi.OutputState }

func (DataDisksResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDisksResponse)(nil)).Elem()
}

func (o DataDisksResponseOutput) ToDataDisksResponseOutput() DataDisksResponseOutput {
	return o
}

func (o DataDisksResponseOutput) ToDataDisksResponseOutputWithContext(ctx context.Context) DataDisksResponseOutput {
	return o
}

func (o DataDisksResponseOutput) ToDataDisksResponsePtrOutput() DataDisksResponsePtrOutput {
	return o.ToDataDisksResponsePtrOutputWithContext(context.Background())
}

func (o DataDisksResponseOutput) ToDataDisksResponsePtrOutputWithContext(ctx context.Context) DataDisksResponsePtrOutput {
	return o.ApplyT(func(v DataDisksResponse) *DataDisksResponse {
		return &v
	}).(DataDisksResponsePtrOutput)
}
func (o DataDisksResponseOutput) CachingType() pulumi.StringOutput {
	return o.ApplyT(func(v DataDisksResponse) string { return v.CachingType }).(pulumi.StringOutput)
}

func (o DataDisksResponseOutput) DiskCount() pulumi.IntOutput {
	return o.ApplyT(func(v DataDisksResponse) int { return v.DiskCount }).(pulumi.IntOutput)
}

func (o DataDisksResponseOutput) DiskSizeInGB() pulumi.IntOutput {
	return o.ApplyT(func(v DataDisksResponse) int { return v.DiskSizeInGB }).(pulumi.IntOutput)
}

func (o DataDisksResponseOutput) StorageAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v DataDisksResponse) string { return v.StorageAccountType }).(pulumi.StringOutput)
}

type DataDisksResponsePtrOutput struct{ *pulumi.OutputState }

func (DataDisksResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataDisksResponse)(nil)).Elem()
}

func (o DataDisksResponsePtrOutput) ToDataDisksResponsePtrOutput() DataDisksResponsePtrOutput {
	return o
}

func (o DataDisksResponsePtrOutput) ToDataDisksResponsePtrOutputWithContext(ctx context.Context) DataDisksResponsePtrOutput {
	return o
}

func (o DataDisksResponsePtrOutput) Elem() DataDisksResponseOutput {
	return o.ApplyT(func(v *DataDisksResponse) DataDisksResponse { return *v }).(DataDisksResponseOutput)
}

func (o DataDisksResponsePtrOutput) CachingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataDisksResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CachingType
	}).(pulumi.StringPtrOutput)
}

func (o DataDisksResponsePtrOutput) DiskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataDisksResponse) *int {
		if v == nil {
			return nil
		}
		return &v.DiskCount
	}).(pulumi.IntPtrOutput)
}

func (o DataDisksResponsePtrOutput) DiskSizeInGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataDisksResponse) *int {
		if v == nil {
			return nil
		}
		return &v.DiskSizeInGB
	}).(pulumi.IntPtrOutput)
}

func (o DataDisksResponsePtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataDisksResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

// A collection of environment variables to set.
type EnvironmentSetting struct {
	Name  string  `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// EnvironmentSettingInput is an input type that accepts EnvironmentSettingArgs and EnvironmentSettingOutput values.
// You can construct a concrete instance of `EnvironmentSettingInput` via:
//
//          EnvironmentSettingArgs{...}
type EnvironmentSettingInput interface {
	pulumi.Input

	ToEnvironmentSettingOutput() EnvironmentSettingOutput
	ToEnvironmentSettingOutputWithContext(context.Context) EnvironmentSettingOutput
}

// A collection of environment variables to set.
type EnvironmentSettingArgs struct {
	Name  pulumi.StringInput    `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EnvironmentSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSetting)(nil)).Elem()
}

func (i EnvironmentSettingArgs) ToEnvironmentSettingOutput() EnvironmentSettingOutput {
	return i.ToEnvironmentSettingOutputWithContext(context.Background())
}

func (i EnvironmentSettingArgs) ToEnvironmentSettingOutputWithContext(ctx context.Context) EnvironmentSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSettingOutput)
}

// EnvironmentSettingArrayInput is an input type that accepts EnvironmentSettingArray and EnvironmentSettingArrayOutput values.
// You can construct a concrete instance of `EnvironmentSettingArrayInput` via:
//
//          EnvironmentSettingArray{ EnvironmentSettingArgs{...} }
type EnvironmentSettingArrayInput interface {
	pulumi.Input

	ToEnvironmentSettingArrayOutput() EnvironmentSettingArrayOutput
	ToEnvironmentSettingArrayOutputWithContext(context.Context) EnvironmentSettingArrayOutput
}

type EnvironmentSettingArray []EnvironmentSettingInput

func (EnvironmentSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentSetting)(nil)).Elem()
}

func (i EnvironmentSettingArray) ToEnvironmentSettingArrayOutput() EnvironmentSettingArrayOutput {
	return i.ToEnvironmentSettingArrayOutputWithContext(context.Background())
}

func (i EnvironmentSettingArray) ToEnvironmentSettingArrayOutputWithContext(ctx context.Context) EnvironmentSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSettingArrayOutput)
}

// A collection of environment variables to set.
type EnvironmentSettingOutput struct{ *pulumi.OutputState }

func (EnvironmentSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSetting)(nil)).Elem()
}

func (o EnvironmentSettingOutput) ToEnvironmentSettingOutput() EnvironmentSettingOutput {
	return o
}

func (o EnvironmentSettingOutput) ToEnvironmentSettingOutputWithContext(ctx context.Context) EnvironmentSettingOutput {
	return o
}

func (o EnvironmentSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentSetting) string { return v.Name }).(pulumi.StringOutput)
}

func (o EnvironmentSettingOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentSetting) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EnvironmentSettingArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentSetting)(nil)).Elem()
}

func (o EnvironmentSettingArrayOutput) ToEnvironmentSettingArrayOutput() EnvironmentSettingArrayOutput {
	return o
}

func (o EnvironmentSettingArrayOutput) ToEnvironmentSettingArrayOutputWithContext(ctx context.Context) EnvironmentSettingArrayOutput {
	return o
}

func (o EnvironmentSettingArrayOutput) Index(i pulumi.IntInput) EnvironmentSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentSetting {
		return vs[0].([]EnvironmentSetting)[vs[1].(int)]
	}).(EnvironmentSettingOutput)
}

// A collection of environment variables to set.
type EnvironmentSettingResponse struct {
	Name  string  `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// EnvironmentSettingResponseInput is an input type that accepts EnvironmentSettingResponseArgs and EnvironmentSettingResponseOutput values.
// You can construct a concrete instance of `EnvironmentSettingResponseInput` via:
//
//          EnvironmentSettingResponseArgs{...}
type EnvironmentSettingResponseInput interface {
	pulumi.Input

	ToEnvironmentSettingResponseOutput() EnvironmentSettingResponseOutput
	ToEnvironmentSettingResponseOutputWithContext(context.Context) EnvironmentSettingResponseOutput
}

// A collection of environment variables to set.
type EnvironmentSettingResponseArgs struct {
	Name  pulumi.StringInput    `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EnvironmentSettingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSettingResponse)(nil)).Elem()
}

func (i EnvironmentSettingResponseArgs) ToEnvironmentSettingResponseOutput() EnvironmentSettingResponseOutput {
	return i.ToEnvironmentSettingResponseOutputWithContext(context.Background())
}

func (i EnvironmentSettingResponseArgs) ToEnvironmentSettingResponseOutputWithContext(ctx context.Context) EnvironmentSettingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSettingResponseOutput)
}

// EnvironmentSettingResponseArrayInput is an input type that accepts EnvironmentSettingResponseArray and EnvironmentSettingResponseArrayOutput values.
// You can construct a concrete instance of `EnvironmentSettingResponseArrayInput` via:
//
//          EnvironmentSettingResponseArray{ EnvironmentSettingResponseArgs{...} }
type EnvironmentSettingResponseArrayInput interface {
	pulumi.Input

	ToEnvironmentSettingResponseArrayOutput() EnvironmentSettingResponseArrayOutput
	ToEnvironmentSettingResponseArrayOutputWithContext(context.Context) EnvironmentSettingResponseArrayOutput
}

type EnvironmentSettingResponseArray []EnvironmentSettingResponseInput

func (EnvironmentSettingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentSettingResponse)(nil)).Elem()
}

func (i EnvironmentSettingResponseArray) ToEnvironmentSettingResponseArrayOutput() EnvironmentSettingResponseArrayOutput {
	return i.ToEnvironmentSettingResponseArrayOutputWithContext(context.Background())
}

func (i EnvironmentSettingResponseArray) ToEnvironmentSettingResponseArrayOutputWithContext(ctx context.Context) EnvironmentSettingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSettingResponseArrayOutput)
}

// A collection of environment variables to set.
type EnvironmentSettingResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentSettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSettingResponse)(nil)).Elem()
}

func (o EnvironmentSettingResponseOutput) ToEnvironmentSettingResponseOutput() EnvironmentSettingResponseOutput {
	return o
}

func (o EnvironmentSettingResponseOutput) ToEnvironmentSettingResponseOutputWithContext(ctx context.Context) EnvironmentSettingResponseOutput {
	return o
}

func (o EnvironmentSettingResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentSettingResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o EnvironmentSettingResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentSettingResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EnvironmentSettingResponseArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentSettingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentSettingResponse)(nil)).Elem()
}

func (o EnvironmentSettingResponseArrayOutput) ToEnvironmentSettingResponseArrayOutput() EnvironmentSettingResponseArrayOutput {
	return o
}

func (o EnvironmentSettingResponseArrayOutput) ToEnvironmentSettingResponseArrayOutputWithContext(ctx context.Context) EnvironmentSettingResponseArrayOutput {
	return o
}

func (o EnvironmentSettingResponseArrayOutput) Index(i pulumi.IntInput) EnvironmentSettingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentSettingResponse {
		return vs[0].([]EnvironmentSettingResponse)[vs[1].(int)]
	}).(EnvironmentSettingResponseOutput)
}

// Properties of the file.
type FileResponse struct {
	// The file size.
	ContentLength *int `pulumi:"contentLength"`
	// This will be returned only if the model has been archived. During job run, this won't be returned and customers can use SSH tunneling to download. Users can use Get Remote Login Information API to get the IP address and port information of all the compute nodes running the job.
	DownloadUrl string `pulumi:"downloadUrl"`
	// The time at which the file was last modified.
	LastModified *string `pulumi:"lastModified"`
	// file name
	Name string `pulumi:"name"`
}

// FileResponseInput is an input type that accepts FileResponseArgs and FileResponseOutput values.
// You can construct a concrete instance of `FileResponseInput` via:
//
//          FileResponseArgs{...}
type FileResponseInput interface {
	pulumi.Input

	ToFileResponseOutput() FileResponseOutput
	ToFileResponseOutputWithContext(context.Context) FileResponseOutput
}

// Properties of the file.
type FileResponseArgs struct {
	// The file size.
	ContentLength pulumi.IntPtrInput `pulumi:"contentLength"`
	// This will be returned only if the model has been archived. During job run, this won't be returned and customers can use SSH tunneling to download. Users can use Get Remote Login Information API to get the IP address and port information of all the compute nodes running the job.
	DownloadUrl pulumi.StringInput `pulumi:"downloadUrl"`
	// The time at which the file was last modified.
	LastModified pulumi.StringPtrInput `pulumi:"lastModified"`
	// file name
	Name pulumi.StringInput `pulumi:"name"`
}

func (FileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileResponse)(nil)).Elem()
}

func (i FileResponseArgs) ToFileResponseOutput() FileResponseOutput {
	return i.ToFileResponseOutputWithContext(context.Background())
}

func (i FileResponseArgs) ToFileResponseOutputWithContext(ctx context.Context) FileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileResponseOutput)
}

// FileResponseArrayInput is an input type that accepts FileResponseArray and FileResponseArrayOutput values.
// You can construct a concrete instance of `FileResponseArrayInput` via:
//
//          FileResponseArray{ FileResponseArgs{...} }
type FileResponseArrayInput interface {
	pulumi.Input

	ToFileResponseArrayOutput() FileResponseArrayOutput
	ToFileResponseArrayOutputWithContext(context.Context) FileResponseArrayOutput
}

type FileResponseArray []FileResponseInput

func (FileResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileResponse)(nil)).Elem()
}

func (i FileResponseArray) ToFileResponseArrayOutput() FileResponseArrayOutput {
	return i.ToFileResponseArrayOutputWithContext(context.Background())
}

func (i FileResponseArray) ToFileResponseArrayOutputWithContext(ctx context.Context) FileResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileResponseArrayOutput)
}

// Properties of the file.
type FileResponseOutput struct{ *pulumi.OutputState }

func (FileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileResponse)(nil)).Elem()
}

func (o FileResponseOutput) ToFileResponseOutput() FileResponseOutput {
	return o
}

func (o FileResponseOutput) ToFileResponseOutputWithContext(ctx context.Context) FileResponseOutput {
	return o
}

// The file size.
func (o FileResponseOutput) ContentLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileResponse) *int { return v.ContentLength }).(pulumi.IntPtrOutput)
}

// This will be returned only if the model has been archived. During job run, this won't be returned and customers can use SSH tunneling to download. Users can use Get Remote Login Information API to get the IP address and port information of all the compute nodes running the job.
func (o FileResponseOutput) DownloadUrl() pulumi.StringOutput {
	return o.ApplyT(func(v FileResponse) string { return v.DownloadUrl }).(pulumi.StringOutput)
}

// The time at which the file was last modified.
func (o FileResponseOutput) LastModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileResponse) *string { return v.LastModified }).(pulumi.StringPtrOutput)
}

// file name
func (o FileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FileResponse) string { return v.Name }).(pulumi.StringOutput)
}

type FileResponseArrayOutput struct{ *pulumi.OutputState }

func (FileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileResponse)(nil)).Elem()
}

func (o FileResponseArrayOutput) ToFileResponseArrayOutput() FileResponseArrayOutput {
	return o
}

func (o FileResponseArrayOutput) ToFileResponseArrayOutputWithContext(ctx context.Context) FileResponseArrayOutput {
	return o
}

func (o FileResponseArrayOutput) Index(i pulumi.IntInput) FileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileResponse {
		return vs[0].([]FileResponse)[vs[1].(int)]
	}).(FileResponseOutput)
}

// Provides required information, for the service to be able to mount Azure FileShare on the cluster nodes.
type FileServerReference struct {
	// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
	FileServer   ResourceId `pulumi:"fileServer"`
	MountOptions *string    `pulumi:"mountOptions"`
	// Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
	RelativeMountPath string `pulumi:"relativeMountPath"`
	// If this property is not specified, the entire File Server will be mounted.
	SourceDirectory *string `pulumi:"sourceDirectory"`
}

// FileServerReferenceInput is an input type that accepts FileServerReferenceArgs and FileServerReferenceOutput values.
// You can construct a concrete instance of `FileServerReferenceInput` via:
//
//          FileServerReferenceArgs{...}
type FileServerReferenceInput interface {
	pulumi.Input

	ToFileServerReferenceOutput() FileServerReferenceOutput
	ToFileServerReferenceOutputWithContext(context.Context) FileServerReferenceOutput
}

// Provides required information, for the service to be able to mount Azure FileShare on the cluster nodes.
type FileServerReferenceArgs struct {
	// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
	FileServer   ResourceIdInput       `pulumi:"fileServer"`
	MountOptions pulumi.StringPtrInput `pulumi:"mountOptions"`
	// Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
	RelativeMountPath pulumi.StringInput `pulumi:"relativeMountPath"`
	// If this property is not specified, the entire File Server will be mounted.
	SourceDirectory pulumi.StringPtrInput `pulumi:"sourceDirectory"`
}

func (FileServerReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileServerReference)(nil)).Elem()
}

func (i FileServerReferenceArgs) ToFileServerReferenceOutput() FileServerReferenceOutput {
	return i.ToFileServerReferenceOutputWithContext(context.Background())
}

func (i FileServerReferenceArgs) ToFileServerReferenceOutputWithContext(ctx context.Context) FileServerReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileServerReferenceOutput)
}

// FileServerReferenceArrayInput is an input type that accepts FileServerReferenceArray and FileServerReferenceArrayOutput values.
// You can construct a concrete instance of `FileServerReferenceArrayInput` via:
//
//          FileServerReferenceArray{ FileServerReferenceArgs{...} }
type FileServerReferenceArrayInput interface {
	pulumi.Input

	ToFileServerReferenceArrayOutput() FileServerReferenceArrayOutput
	ToFileServerReferenceArrayOutputWithContext(context.Context) FileServerReferenceArrayOutput
}

type FileServerReferenceArray []FileServerReferenceInput

func (FileServerReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileServerReference)(nil)).Elem()
}

func (i FileServerReferenceArray) ToFileServerReferenceArrayOutput() FileServerReferenceArrayOutput {
	return i.ToFileServerReferenceArrayOutputWithContext(context.Background())
}

func (i FileServerReferenceArray) ToFileServerReferenceArrayOutputWithContext(ctx context.Context) FileServerReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileServerReferenceArrayOutput)
}

// Provides required information, for the service to be able to mount Azure FileShare on the cluster nodes.
type FileServerReferenceOutput struct{ *pulumi.OutputState }

func (FileServerReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileServerReference)(nil)).Elem()
}

func (o FileServerReferenceOutput) ToFileServerReferenceOutput() FileServerReferenceOutput {
	return o
}

func (o FileServerReferenceOutput) ToFileServerReferenceOutputWithContext(ctx context.Context) FileServerReferenceOutput {
	return o
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
func (o FileServerReferenceOutput) FileServer() ResourceIdOutput {
	return o.ApplyT(func(v FileServerReference) ResourceId { return v.FileServer }).(ResourceIdOutput)
}

func (o FileServerReferenceOutput) MountOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileServerReference) *string { return v.MountOptions }).(pulumi.StringPtrOutput)
}

// Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
func (o FileServerReferenceOutput) RelativeMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v FileServerReference) string { return v.RelativeMountPath }).(pulumi.StringOutput)
}

// If this property is not specified, the entire File Server will be mounted.
func (o FileServerReferenceOutput) SourceDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileServerReference) *string { return v.SourceDirectory }).(pulumi.StringPtrOutput)
}

type FileServerReferenceArrayOutput struct{ *pulumi.OutputState }

func (FileServerReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileServerReference)(nil)).Elem()
}

func (o FileServerReferenceArrayOutput) ToFileServerReferenceArrayOutput() FileServerReferenceArrayOutput {
	return o
}

func (o FileServerReferenceArrayOutput) ToFileServerReferenceArrayOutputWithContext(ctx context.Context) FileServerReferenceArrayOutput {
	return o
}

func (o FileServerReferenceArrayOutput) Index(i pulumi.IntInput) FileServerReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileServerReference {
		return vs[0].([]FileServerReference)[vs[1].(int)]
	}).(FileServerReferenceOutput)
}

// Provides required information, for the service to be able to mount Azure FileShare on the cluster nodes.
type FileServerReferenceResponse struct {
	// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
	FileServer   ResourceIdResponse `pulumi:"fileServer"`
	MountOptions *string            `pulumi:"mountOptions"`
	// Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
	RelativeMountPath string `pulumi:"relativeMountPath"`
	// If this property is not specified, the entire File Server will be mounted.
	SourceDirectory *string `pulumi:"sourceDirectory"`
}

// FileServerReferenceResponseInput is an input type that accepts FileServerReferenceResponseArgs and FileServerReferenceResponseOutput values.
// You can construct a concrete instance of `FileServerReferenceResponseInput` via:
//
//          FileServerReferenceResponseArgs{...}
type FileServerReferenceResponseInput interface {
	pulumi.Input

	ToFileServerReferenceResponseOutput() FileServerReferenceResponseOutput
	ToFileServerReferenceResponseOutputWithContext(context.Context) FileServerReferenceResponseOutput
}

// Provides required information, for the service to be able to mount Azure FileShare on the cluster nodes.
type FileServerReferenceResponseArgs struct {
	// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
	FileServer   ResourceIdResponseInput `pulumi:"fileServer"`
	MountOptions pulumi.StringPtrInput   `pulumi:"mountOptions"`
	// Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
	RelativeMountPath pulumi.StringInput `pulumi:"relativeMountPath"`
	// If this property is not specified, the entire File Server will be mounted.
	SourceDirectory pulumi.StringPtrInput `pulumi:"sourceDirectory"`
}

func (FileServerReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileServerReferenceResponse)(nil)).Elem()
}

func (i FileServerReferenceResponseArgs) ToFileServerReferenceResponseOutput() FileServerReferenceResponseOutput {
	return i.ToFileServerReferenceResponseOutputWithContext(context.Background())
}

func (i FileServerReferenceResponseArgs) ToFileServerReferenceResponseOutputWithContext(ctx context.Context) FileServerReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileServerReferenceResponseOutput)
}

// FileServerReferenceResponseArrayInput is an input type that accepts FileServerReferenceResponseArray and FileServerReferenceResponseArrayOutput values.
// You can construct a concrete instance of `FileServerReferenceResponseArrayInput` via:
//
//          FileServerReferenceResponseArray{ FileServerReferenceResponseArgs{...} }
type FileServerReferenceResponseArrayInput interface {
	pulumi.Input

	ToFileServerReferenceResponseArrayOutput() FileServerReferenceResponseArrayOutput
	ToFileServerReferenceResponseArrayOutputWithContext(context.Context) FileServerReferenceResponseArrayOutput
}

type FileServerReferenceResponseArray []FileServerReferenceResponseInput

func (FileServerReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileServerReferenceResponse)(nil)).Elem()
}

func (i FileServerReferenceResponseArray) ToFileServerReferenceResponseArrayOutput() FileServerReferenceResponseArrayOutput {
	return i.ToFileServerReferenceResponseArrayOutputWithContext(context.Background())
}

func (i FileServerReferenceResponseArray) ToFileServerReferenceResponseArrayOutputWithContext(ctx context.Context) FileServerReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileServerReferenceResponseArrayOutput)
}

// Provides required information, for the service to be able to mount Azure FileShare on the cluster nodes.
type FileServerReferenceResponseOutput struct{ *pulumi.OutputState }

func (FileServerReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileServerReferenceResponse)(nil)).Elem()
}

func (o FileServerReferenceResponseOutput) ToFileServerReferenceResponseOutput() FileServerReferenceResponseOutput {
	return o
}

func (o FileServerReferenceResponseOutput) ToFileServerReferenceResponseOutputWithContext(ctx context.Context) FileServerReferenceResponseOutput {
	return o
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
func (o FileServerReferenceResponseOutput) FileServer() ResourceIdResponseOutput {
	return o.ApplyT(func(v FileServerReferenceResponse) ResourceIdResponse { return v.FileServer }).(ResourceIdResponseOutput)
}

func (o FileServerReferenceResponseOutput) MountOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileServerReferenceResponse) *string { return v.MountOptions }).(pulumi.StringPtrOutput)
}

// Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
func (o FileServerReferenceResponseOutput) RelativeMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v FileServerReferenceResponse) string { return v.RelativeMountPath }).(pulumi.StringOutput)
}

// If this property is not specified, the entire File Server will be mounted.
func (o FileServerReferenceResponseOutput) SourceDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileServerReferenceResponse) *string { return v.SourceDirectory }).(pulumi.StringPtrOutput)
}

type FileServerReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (FileServerReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileServerReferenceResponse)(nil)).Elem()
}

func (o FileServerReferenceResponseArrayOutput) ToFileServerReferenceResponseArrayOutput() FileServerReferenceResponseArrayOutput {
	return o
}

func (o FileServerReferenceResponseArrayOutput) ToFileServerReferenceResponseArrayOutputWithContext(ctx context.Context) FileServerReferenceResponseArrayOutput {
	return o
}

func (o FileServerReferenceResponseArrayOutput) Index(i pulumi.IntInput) FileServerReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileServerReferenceResponse {
		return vs[0].([]FileServerReferenceResponse)[vs[1].(int)]
	}).(FileServerReferenceResponseOutput)
}

// The image reference.
type ImageReference struct {
	Offer     string  `pulumi:"offer"`
	Publisher string  `pulumi:"publisher"`
	Sku       string  `pulumi:"sku"`
	Version   *string `pulumi:"version"`
}

// ImageReferenceInput is an input type that accepts ImageReferenceArgs and ImageReferenceOutput values.
// You can construct a concrete instance of `ImageReferenceInput` via:
//
//          ImageReferenceArgs{...}
type ImageReferenceInput interface {
	pulumi.Input

	ToImageReferenceOutput() ImageReferenceOutput
	ToImageReferenceOutputWithContext(context.Context) ImageReferenceOutput
}

// The image reference.
type ImageReferenceArgs struct {
	Offer     pulumi.StringInput    `pulumi:"offer"`
	Publisher pulumi.StringInput    `pulumi:"publisher"`
	Sku       pulumi.StringInput    `pulumi:"sku"`
	Version   pulumi.StringPtrInput `pulumi:"version"`
}

func (ImageReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageReference)(nil)).Elem()
}

func (i ImageReferenceArgs) ToImageReferenceOutput() ImageReferenceOutput {
	return i.ToImageReferenceOutputWithContext(context.Background())
}

func (i ImageReferenceArgs) ToImageReferenceOutputWithContext(ctx context.Context) ImageReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferenceOutput)
}

func (i ImageReferenceArgs) ToImageReferencePtrOutput() ImageReferencePtrOutput {
	return i.ToImageReferencePtrOutputWithContext(context.Background())
}

func (i ImageReferenceArgs) ToImageReferencePtrOutputWithContext(ctx context.Context) ImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferenceOutput).ToImageReferencePtrOutputWithContext(ctx)
}

// ImageReferencePtrInput is an input type that accepts ImageReferenceArgs, ImageReferencePtr and ImageReferencePtrOutput values.
// You can construct a concrete instance of `ImageReferencePtrInput` via:
//
//          ImageReferenceArgs{...}
//
//  or:
//
//          nil
type ImageReferencePtrInput interface {
	pulumi.Input

	ToImageReferencePtrOutput() ImageReferencePtrOutput
	ToImageReferencePtrOutputWithContext(context.Context) ImageReferencePtrOutput
}

type imageReferencePtrType ImageReferenceArgs

func ImageReferencePtr(v *ImageReferenceArgs) ImageReferencePtrInput {
	return (*imageReferencePtrType)(v)
}

func (*imageReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageReference)(nil)).Elem()
}

func (i *imageReferencePtrType) ToImageReferencePtrOutput() ImageReferencePtrOutput {
	return i.ToImageReferencePtrOutputWithContext(context.Background())
}

func (i *imageReferencePtrType) ToImageReferencePtrOutputWithContext(ctx context.Context) ImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferencePtrOutput)
}

// The image reference.
type ImageReferenceOutput struct{ *pulumi.OutputState }

func (ImageReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageReference)(nil)).Elem()
}

func (o ImageReferenceOutput) ToImageReferenceOutput() ImageReferenceOutput {
	return o
}

func (o ImageReferenceOutput) ToImageReferenceOutputWithContext(ctx context.Context) ImageReferenceOutput {
	return o
}

func (o ImageReferenceOutput) ToImageReferencePtrOutput() ImageReferencePtrOutput {
	return o.ToImageReferencePtrOutputWithContext(context.Background())
}

func (o ImageReferenceOutput) ToImageReferencePtrOutputWithContext(ctx context.Context) ImageReferencePtrOutput {
	return o.ApplyT(func(v ImageReference) *ImageReference {
		return &v
	}).(ImageReferencePtrOutput)
}
func (o ImageReferenceOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v ImageReference) string { return v.Offer }).(pulumi.StringOutput)
}

func (o ImageReferenceOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v ImageReference) string { return v.Publisher }).(pulumi.StringOutput)
}

func (o ImageReferenceOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v ImageReference) string { return v.Sku }).(pulumi.StringOutput)
}

func (o ImageReferenceOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReference) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ImageReferencePtrOutput struct{ *pulumi.OutputState }

func (ImageReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageReference)(nil)).Elem()
}

func (o ImageReferencePtrOutput) ToImageReferencePtrOutput() ImageReferencePtrOutput {
	return o
}

func (o ImageReferencePtrOutput) ToImageReferencePtrOutputWithContext(ctx context.Context) ImageReferencePtrOutput {
	return o
}

func (o ImageReferencePtrOutput) Elem() ImageReferenceOutput {
	return o.ApplyT(func(v *ImageReference) ImageReference { return *v }).(ImageReferenceOutput)
}

func (o ImageReferencePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Offer
	}).(pulumi.StringPtrOutput)
}

func (o ImageReferencePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

func (o ImageReferencePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Sku
	}).(pulumi.StringPtrOutput)
}

func (o ImageReferencePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The image reference.
type ImageReferenceResponse struct {
	Offer     string  `pulumi:"offer"`
	Publisher string  `pulumi:"publisher"`
	Sku       string  `pulumi:"sku"`
	Version   *string `pulumi:"version"`
}

// ImageReferenceResponseInput is an input type that accepts ImageReferenceResponseArgs and ImageReferenceResponseOutput values.
// You can construct a concrete instance of `ImageReferenceResponseInput` via:
//
//          ImageReferenceResponseArgs{...}
type ImageReferenceResponseInput interface {
	pulumi.Input

	ToImageReferenceResponseOutput() ImageReferenceResponseOutput
	ToImageReferenceResponseOutputWithContext(context.Context) ImageReferenceResponseOutput
}

// The image reference.
type ImageReferenceResponseArgs struct {
	Offer     pulumi.StringInput    `pulumi:"offer"`
	Publisher pulumi.StringInput    `pulumi:"publisher"`
	Sku       pulumi.StringInput    `pulumi:"sku"`
	Version   pulumi.StringPtrInput `pulumi:"version"`
}

func (ImageReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageReferenceResponse)(nil)).Elem()
}

func (i ImageReferenceResponseArgs) ToImageReferenceResponseOutput() ImageReferenceResponseOutput {
	return i.ToImageReferenceResponseOutputWithContext(context.Background())
}

func (i ImageReferenceResponseArgs) ToImageReferenceResponseOutputWithContext(ctx context.Context) ImageReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferenceResponseOutput)
}

func (i ImageReferenceResponseArgs) ToImageReferenceResponsePtrOutput() ImageReferenceResponsePtrOutput {
	return i.ToImageReferenceResponsePtrOutputWithContext(context.Background())
}

func (i ImageReferenceResponseArgs) ToImageReferenceResponsePtrOutputWithContext(ctx context.Context) ImageReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferenceResponseOutput).ToImageReferenceResponsePtrOutputWithContext(ctx)
}

// ImageReferenceResponsePtrInput is an input type that accepts ImageReferenceResponseArgs, ImageReferenceResponsePtr and ImageReferenceResponsePtrOutput values.
// You can construct a concrete instance of `ImageReferenceResponsePtrInput` via:
//
//          ImageReferenceResponseArgs{...}
//
//  or:
//
//          nil
type ImageReferenceResponsePtrInput interface {
	pulumi.Input

	ToImageReferenceResponsePtrOutput() ImageReferenceResponsePtrOutput
	ToImageReferenceResponsePtrOutputWithContext(context.Context) ImageReferenceResponsePtrOutput
}

type imageReferenceResponsePtrType ImageReferenceResponseArgs

func ImageReferenceResponsePtr(v *ImageReferenceResponseArgs) ImageReferenceResponsePtrInput {
	return (*imageReferenceResponsePtrType)(v)
}

func (*imageReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageReferenceResponse)(nil)).Elem()
}

func (i *imageReferenceResponsePtrType) ToImageReferenceResponsePtrOutput() ImageReferenceResponsePtrOutput {
	return i.ToImageReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *imageReferenceResponsePtrType) ToImageReferenceResponsePtrOutputWithContext(ctx context.Context) ImageReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferenceResponsePtrOutput)
}

// The image reference.
type ImageReferenceResponseOutput struct{ *pulumi.OutputState }

func (ImageReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageReferenceResponse)(nil)).Elem()
}

func (o ImageReferenceResponseOutput) ToImageReferenceResponseOutput() ImageReferenceResponseOutput {
	return o
}

func (o ImageReferenceResponseOutput) ToImageReferenceResponseOutputWithContext(ctx context.Context) ImageReferenceResponseOutput {
	return o
}

func (o ImageReferenceResponseOutput) ToImageReferenceResponsePtrOutput() ImageReferenceResponsePtrOutput {
	return o.ToImageReferenceResponsePtrOutputWithContext(context.Background())
}

func (o ImageReferenceResponseOutput) ToImageReferenceResponsePtrOutputWithContext(ctx context.Context) ImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v ImageReferenceResponse) *ImageReferenceResponse {
		return &v
	}).(ImageReferenceResponsePtrOutput)
}
func (o ImageReferenceResponseOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v ImageReferenceResponse) string { return v.Offer }).(pulumi.StringOutput)
}

func (o ImageReferenceResponseOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v ImageReferenceResponse) string { return v.Publisher }).(pulumi.StringOutput)
}

func (o ImageReferenceResponseOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v ImageReferenceResponse) string { return v.Sku }).(pulumi.StringOutput)
}

func (o ImageReferenceResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReferenceResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ImageReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ImageReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageReferenceResponse)(nil)).Elem()
}

func (o ImageReferenceResponsePtrOutput) ToImageReferenceResponsePtrOutput() ImageReferenceResponsePtrOutput {
	return o
}

func (o ImageReferenceResponsePtrOutput) ToImageReferenceResponsePtrOutputWithContext(ctx context.Context) ImageReferenceResponsePtrOutput {
	return o
}

func (o ImageReferenceResponsePtrOutput) Elem() ImageReferenceResponseOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) ImageReferenceResponse { return *v }).(ImageReferenceResponseOutput)
}

func (o ImageReferenceResponsePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Offer
	}).(pulumi.StringPtrOutput)
}

func (o ImageReferenceResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

func (o ImageReferenceResponsePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Sku
	}).(pulumi.StringPtrOutput)
}

func (o ImageReferenceResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Details of the container image such as name, URL and credentials.
type ImageSourceRegistry struct {
	// Credentials to access a container image in a private repository.
	Credentials *PrivateRegistryCredentials `pulumi:"credentials"`
	Image       string                      `pulumi:"image"`
	ServerUrl   *string                     `pulumi:"serverUrl"`
}

// ImageSourceRegistryInput is an input type that accepts ImageSourceRegistryArgs and ImageSourceRegistryOutput values.
// You can construct a concrete instance of `ImageSourceRegistryInput` via:
//
//          ImageSourceRegistryArgs{...}
type ImageSourceRegistryInput interface {
	pulumi.Input

	ToImageSourceRegistryOutput() ImageSourceRegistryOutput
	ToImageSourceRegistryOutputWithContext(context.Context) ImageSourceRegistryOutput
}

// Details of the container image such as name, URL and credentials.
type ImageSourceRegistryArgs struct {
	// Credentials to access a container image in a private repository.
	Credentials PrivateRegistryCredentialsPtrInput `pulumi:"credentials"`
	Image       pulumi.StringInput                 `pulumi:"image"`
	ServerUrl   pulumi.StringPtrInput              `pulumi:"serverUrl"`
}

func (ImageSourceRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageSourceRegistry)(nil)).Elem()
}

func (i ImageSourceRegistryArgs) ToImageSourceRegistryOutput() ImageSourceRegistryOutput {
	return i.ToImageSourceRegistryOutputWithContext(context.Background())
}

func (i ImageSourceRegistryArgs) ToImageSourceRegistryOutputWithContext(ctx context.Context) ImageSourceRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageSourceRegistryOutput)
}

func (i ImageSourceRegistryArgs) ToImageSourceRegistryPtrOutput() ImageSourceRegistryPtrOutput {
	return i.ToImageSourceRegistryPtrOutputWithContext(context.Background())
}

func (i ImageSourceRegistryArgs) ToImageSourceRegistryPtrOutputWithContext(ctx context.Context) ImageSourceRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageSourceRegistryOutput).ToImageSourceRegistryPtrOutputWithContext(ctx)
}

// ImageSourceRegistryPtrInput is an input type that accepts ImageSourceRegistryArgs, ImageSourceRegistryPtr and ImageSourceRegistryPtrOutput values.
// You can construct a concrete instance of `ImageSourceRegistryPtrInput` via:
//
//          ImageSourceRegistryArgs{...}
//
//  or:
//
//          nil
type ImageSourceRegistryPtrInput interface {
	pulumi.Input

	ToImageSourceRegistryPtrOutput() ImageSourceRegistryPtrOutput
	ToImageSourceRegistryPtrOutputWithContext(context.Context) ImageSourceRegistryPtrOutput
}

type imageSourceRegistryPtrType ImageSourceRegistryArgs

func ImageSourceRegistryPtr(v *ImageSourceRegistryArgs) ImageSourceRegistryPtrInput {
	return (*imageSourceRegistryPtrType)(v)
}

func (*imageSourceRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageSourceRegistry)(nil)).Elem()
}

func (i *imageSourceRegistryPtrType) ToImageSourceRegistryPtrOutput() ImageSourceRegistryPtrOutput {
	return i.ToImageSourceRegistryPtrOutputWithContext(context.Background())
}

func (i *imageSourceRegistryPtrType) ToImageSourceRegistryPtrOutputWithContext(ctx context.Context) ImageSourceRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageSourceRegistryPtrOutput)
}

// Details of the container image such as name, URL and credentials.
type ImageSourceRegistryOutput struct{ *pulumi.OutputState }

func (ImageSourceRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageSourceRegistry)(nil)).Elem()
}

func (o ImageSourceRegistryOutput) ToImageSourceRegistryOutput() ImageSourceRegistryOutput {
	return o
}

func (o ImageSourceRegistryOutput) ToImageSourceRegistryOutputWithContext(ctx context.Context) ImageSourceRegistryOutput {
	return o
}

func (o ImageSourceRegistryOutput) ToImageSourceRegistryPtrOutput() ImageSourceRegistryPtrOutput {
	return o.ToImageSourceRegistryPtrOutputWithContext(context.Background())
}

func (o ImageSourceRegistryOutput) ToImageSourceRegistryPtrOutputWithContext(ctx context.Context) ImageSourceRegistryPtrOutput {
	return o.ApplyT(func(v ImageSourceRegistry) *ImageSourceRegistry {
		return &v
	}).(ImageSourceRegistryPtrOutput)
}

// Credentials to access a container image in a private repository.
func (o ImageSourceRegistryOutput) Credentials() PrivateRegistryCredentialsPtrOutput {
	return o.ApplyT(func(v ImageSourceRegistry) *PrivateRegistryCredentials { return v.Credentials }).(PrivateRegistryCredentialsPtrOutput)
}

func (o ImageSourceRegistryOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v ImageSourceRegistry) string { return v.Image }).(pulumi.StringOutput)
}

func (o ImageSourceRegistryOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageSourceRegistry) *string { return v.ServerUrl }).(pulumi.StringPtrOutput)
}

type ImageSourceRegistryPtrOutput struct{ *pulumi.OutputState }

func (ImageSourceRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageSourceRegistry)(nil)).Elem()
}

func (o ImageSourceRegistryPtrOutput) ToImageSourceRegistryPtrOutput() ImageSourceRegistryPtrOutput {
	return o
}

func (o ImageSourceRegistryPtrOutput) ToImageSourceRegistryPtrOutputWithContext(ctx context.Context) ImageSourceRegistryPtrOutput {
	return o
}

func (o ImageSourceRegistryPtrOutput) Elem() ImageSourceRegistryOutput {
	return o.ApplyT(func(v *ImageSourceRegistry) ImageSourceRegistry { return *v }).(ImageSourceRegistryOutput)
}

// Credentials to access a container image in a private repository.
func (o ImageSourceRegistryPtrOutput) Credentials() PrivateRegistryCredentialsPtrOutput {
	return o.ApplyT(func(v *ImageSourceRegistry) *PrivateRegistryCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(PrivateRegistryCredentialsPtrOutput)
}

func (o ImageSourceRegistryPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageSourceRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Image
	}).(pulumi.StringPtrOutput)
}

func (o ImageSourceRegistryPtrOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageSourceRegistry) *string {
		if v == nil {
			return nil
		}
		return v.ServerUrl
	}).(pulumi.StringPtrOutput)
}

// Details of the container image such as name, URL and credentials.
type ImageSourceRegistryResponse struct {
	// Credentials to access a container image in a private repository.
	Credentials *PrivateRegistryCredentialsResponse `pulumi:"credentials"`
	Image       string                              `pulumi:"image"`
	ServerUrl   *string                             `pulumi:"serverUrl"`
}

// ImageSourceRegistryResponseInput is an input type that accepts ImageSourceRegistryResponseArgs and ImageSourceRegistryResponseOutput values.
// You can construct a concrete instance of `ImageSourceRegistryResponseInput` via:
//
//          ImageSourceRegistryResponseArgs{...}
type ImageSourceRegistryResponseInput interface {
	pulumi.Input

	ToImageSourceRegistryResponseOutput() ImageSourceRegistryResponseOutput
	ToImageSourceRegistryResponseOutputWithContext(context.Context) ImageSourceRegistryResponseOutput
}

// Details of the container image such as name, URL and credentials.
type ImageSourceRegistryResponseArgs struct {
	// Credentials to access a container image in a private repository.
	Credentials PrivateRegistryCredentialsResponsePtrInput `pulumi:"credentials"`
	Image       pulumi.StringInput                         `pulumi:"image"`
	ServerUrl   pulumi.StringPtrInput                      `pulumi:"serverUrl"`
}

func (ImageSourceRegistryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageSourceRegistryResponse)(nil)).Elem()
}

func (i ImageSourceRegistryResponseArgs) ToImageSourceRegistryResponseOutput() ImageSourceRegistryResponseOutput {
	return i.ToImageSourceRegistryResponseOutputWithContext(context.Background())
}

func (i ImageSourceRegistryResponseArgs) ToImageSourceRegistryResponseOutputWithContext(ctx context.Context) ImageSourceRegistryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageSourceRegistryResponseOutput)
}

func (i ImageSourceRegistryResponseArgs) ToImageSourceRegistryResponsePtrOutput() ImageSourceRegistryResponsePtrOutput {
	return i.ToImageSourceRegistryResponsePtrOutputWithContext(context.Background())
}

func (i ImageSourceRegistryResponseArgs) ToImageSourceRegistryResponsePtrOutputWithContext(ctx context.Context) ImageSourceRegistryResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageSourceRegistryResponseOutput).ToImageSourceRegistryResponsePtrOutputWithContext(ctx)
}

// ImageSourceRegistryResponsePtrInput is an input type that accepts ImageSourceRegistryResponseArgs, ImageSourceRegistryResponsePtr and ImageSourceRegistryResponsePtrOutput values.
// You can construct a concrete instance of `ImageSourceRegistryResponsePtrInput` via:
//
//          ImageSourceRegistryResponseArgs{...}
//
//  or:
//
//          nil
type ImageSourceRegistryResponsePtrInput interface {
	pulumi.Input

	ToImageSourceRegistryResponsePtrOutput() ImageSourceRegistryResponsePtrOutput
	ToImageSourceRegistryResponsePtrOutputWithContext(context.Context) ImageSourceRegistryResponsePtrOutput
}

type imageSourceRegistryResponsePtrType ImageSourceRegistryResponseArgs

func ImageSourceRegistryResponsePtr(v *ImageSourceRegistryResponseArgs) ImageSourceRegistryResponsePtrInput {
	return (*imageSourceRegistryResponsePtrType)(v)
}

func (*imageSourceRegistryResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageSourceRegistryResponse)(nil)).Elem()
}

func (i *imageSourceRegistryResponsePtrType) ToImageSourceRegistryResponsePtrOutput() ImageSourceRegistryResponsePtrOutput {
	return i.ToImageSourceRegistryResponsePtrOutputWithContext(context.Background())
}

func (i *imageSourceRegistryResponsePtrType) ToImageSourceRegistryResponsePtrOutputWithContext(ctx context.Context) ImageSourceRegistryResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageSourceRegistryResponsePtrOutput)
}

// Details of the container image such as name, URL and credentials.
type ImageSourceRegistryResponseOutput struct{ *pulumi.OutputState }

func (ImageSourceRegistryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageSourceRegistryResponse)(nil)).Elem()
}

func (o ImageSourceRegistryResponseOutput) ToImageSourceRegistryResponseOutput() ImageSourceRegistryResponseOutput {
	return o
}

func (o ImageSourceRegistryResponseOutput) ToImageSourceRegistryResponseOutputWithContext(ctx context.Context) ImageSourceRegistryResponseOutput {
	return o
}

func (o ImageSourceRegistryResponseOutput) ToImageSourceRegistryResponsePtrOutput() ImageSourceRegistryResponsePtrOutput {
	return o.ToImageSourceRegistryResponsePtrOutputWithContext(context.Background())
}

func (o ImageSourceRegistryResponseOutput) ToImageSourceRegistryResponsePtrOutputWithContext(ctx context.Context) ImageSourceRegistryResponsePtrOutput {
	return o.ApplyT(func(v ImageSourceRegistryResponse) *ImageSourceRegistryResponse {
		return &v
	}).(ImageSourceRegistryResponsePtrOutput)
}

// Credentials to access a container image in a private repository.
func (o ImageSourceRegistryResponseOutput) Credentials() PrivateRegistryCredentialsResponsePtrOutput {
	return o.ApplyT(func(v ImageSourceRegistryResponse) *PrivateRegistryCredentialsResponse { return v.Credentials }).(PrivateRegistryCredentialsResponsePtrOutput)
}

func (o ImageSourceRegistryResponseOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v ImageSourceRegistryResponse) string { return v.Image }).(pulumi.StringOutput)
}

func (o ImageSourceRegistryResponseOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageSourceRegistryResponse) *string { return v.ServerUrl }).(pulumi.StringPtrOutput)
}

type ImageSourceRegistryResponsePtrOutput struct{ *pulumi.OutputState }

func (ImageSourceRegistryResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageSourceRegistryResponse)(nil)).Elem()
}

func (o ImageSourceRegistryResponsePtrOutput) ToImageSourceRegistryResponsePtrOutput() ImageSourceRegistryResponsePtrOutput {
	return o
}

func (o ImageSourceRegistryResponsePtrOutput) ToImageSourceRegistryResponsePtrOutputWithContext(ctx context.Context) ImageSourceRegistryResponsePtrOutput {
	return o
}

func (o ImageSourceRegistryResponsePtrOutput) Elem() ImageSourceRegistryResponseOutput {
	return o.ApplyT(func(v *ImageSourceRegistryResponse) ImageSourceRegistryResponse { return *v }).(ImageSourceRegistryResponseOutput)
}

// Credentials to access a container image in a private repository.
func (o ImageSourceRegistryResponsePtrOutput) Credentials() PrivateRegistryCredentialsResponsePtrOutput {
	return o.ApplyT(func(v *ImageSourceRegistryResponse) *PrivateRegistryCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(PrivateRegistryCredentialsResponsePtrOutput)
}

func (o ImageSourceRegistryResponsePtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageSourceRegistryResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Image
	}).(pulumi.StringPtrOutput)
}

func (o ImageSourceRegistryResponsePtrOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageSourceRegistryResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServerUrl
	}).(pulumi.StringPtrOutput)
}

// Input directory for the job.
type InputDirectory struct {
	// It will be available for the job as an environment variable under AZ_BATCHAI_INPUT_id. The service will also provide the following  environment variable: AZ_BATCHAI_PREV_OUTPUT_Name. The value of the variable will be populated if the job is being retried after a previous failure, otherwise it will be set to nothing.
	Id   string `pulumi:"id"`
	Path string `pulumi:"path"`
}

// InputDirectoryInput is an input type that accepts InputDirectoryArgs and InputDirectoryOutput values.
// You can construct a concrete instance of `InputDirectoryInput` via:
//
//          InputDirectoryArgs{...}
type InputDirectoryInput interface {
	pulumi.Input

	ToInputDirectoryOutput() InputDirectoryOutput
	ToInputDirectoryOutputWithContext(context.Context) InputDirectoryOutput
}

// Input directory for the job.
type InputDirectoryArgs struct {
	// It will be available for the job as an environment variable under AZ_BATCHAI_INPUT_id. The service will also provide the following  environment variable: AZ_BATCHAI_PREV_OUTPUT_Name. The value of the variable will be populated if the job is being retried after a previous failure, otherwise it will be set to nothing.
	Id   pulumi.StringInput `pulumi:"id"`
	Path pulumi.StringInput `pulumi:"path"`
}

func (InputDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDirectory)(nil)).Elem()
}

func (i InputDirectoryArgs) ToInputDirectoryOutput() InputDirectoryOutput {
	return i.ToInputDirectoryOutputWithContext(context.Background())
}

func (i InputDirectoryArgs) ToInputDirectoryOutputWithContext(ctx context.Context) InputDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputDirectoryOutput)
}

// InputDirectoryArrayInput is an input type that accepts InputDirectoryArray and InputDirectoryArrayOutput values.
// You can construct a concrete instance of `InputDirectoryArrayInput` via:
//
//          InputDirectoryArray{ InputDirectoryArgs{...} }
type InputDirectoryArrayInput interface {
	pulumi.Input

	ToInputDirectoryArrayOutput() InputDirectoryArrayOutput
	ToInputDirectoryArrayOutputWithContext(context.Context) InputDirectoryArrayOutput
}

type InputDirectoryArray []InputDirectoryInput

func (InputDirectoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputDirectory)(nil)).Elem()
}

func (i InputDirectoryArray) ToInputDirectoryArrayOutput() InputDirectoryArrayOutput {
	return i.ToInputDirectoryArrayOutputWithContext(context.Background())
}

func (i InputDirectoryArray) ToInputDirectoryArrayOutputWithContext(ctx context.Context) InputDirectoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputDirectoryArrayOutput)
}

// Input directory for the job.
type InputDirectoryOutput struct{ *pulumi.OutputState }

func (InputDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDirectory)(nil)).Elem()
}

func (o InputDirectoryOutput) ToInputDirectoryOutput() InputDirectoryOutput {
	return o
}

func (o InputDirectoryOutput) ToInputDirectoryOutputWithContext(ctx context.Context) InputDirectoryOutput {
	return o
}

// It will be available for the job as an environment variable under AZ_BATCHAI_INPUT_id. The service will also provide the following  environment variable: AZ_BATCHAI_PREV_OUTPUT_Name. The value of the variable will be populated if the job is being retried after a previous failure, otherwise it will be set to nothing.
func (o InputDirectoryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v InputDirectory) string { return v.Id }).(pulumi.StringOutput)
}

func (o InputDirectoryOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v InputDirectory) string { return v.Path }).(pulumi.StringOutput)
}

type InputDirectoryArrayOutput struct{ *pulumi.OutputState }

func (InputDirectoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputDirectory)(nil)).Elem()
}

func (o InputDirectoryArrayOutput) ToInputDirectoryArrayOutput() InputDirectoryArrayOutput {
	return o
}

func (o InputDirectoryArrayOutput) ToInputDirectoryArrayOutputWithContext(ctx context.Context) InputDirectoryArrayOutput {
	return o
}

func (o InputDirectoryArrayOutput) Index(i pulumi.IntInput) InputDirectoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputDirectory {
		return vs[0].([]InputDirectory)[vs[1].(int)]
	}).(InputDirectoryOutput)
}

// Input directory for the job.
type InputDirectoryResponse struct {
	// It will be available for the job as an environment variable under AZ_BATCHAI_INPUT_id. The service will also provide the following  environment variable: AZ_BATCHAI_PREV_OUTPUT_Name. The value of the variable will be populated if the job is being retried after a previous failure, otherwise it will be set to nothing.
	Id   string `pulumi:"id"`
	Path string `pulumi:"path"`
}

// InputDirectoryResponseInput is an input type that accepts InputDirectoryResponseArgs and InputDirectoryResponseOutput values.
// You can construct a concrete instance of `InputDirectoryResponseInput` via:
//
//          InputDirectoryResponseArgs{...}
type InputDirectoryResponseInput interface {
	pulumi.Input

	ToInputDirectoryResponseOutput() InputDirectoryResponseOutput
	ToInputDirectoryResponseOutputWithContext(context.Context) InputDirectoryResponseOutput
}

// Input directory for the job.
type InputDirectoryResponseArgs struct {
	// It will be available for the job as an environment variable under AZ_BATCHAI_INPUT_id. The service will also provide the following  environment variable: AZ_BATCHAI_PREV_OUTPUT_Name. The value of the variable will be populated if the job is being retried after a previous failure, otherwise it will be set to nothing.
	Id   pulumi.StringInput `pulumi:"id"`
	Path pulumi.StringInput `pulumi:"path"`
}

func (InputDirectoryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDirectoryResponse)(nil)).Elem()
}

func (i InputDirectoryResponseArgs) ToInputDirectoryResponseOutput() InputDirectoryResponseOutput {
	return i.ToInputDirectoryResponseOutputWithContext(context.Background())
}

func (i InputDirectoryResponseArgs) ToInputDirectoryResponseOutputWithContext(ctx context.Context) InputDirectoryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputDirectoryResponseOutput)
}

// InputDirectoryResponseArrayInput is an input type that accepts InputDirectoryResponseArray and InputDirectoryResponseArrayOutput values.
// You can construct a concrete instance of `InputDirectoryResponseArrayInput` via:
//
//          InputDirectoryResponseArray{ InputDirectoryResponseArgs{...} }
type InputDirectoryResponseArrayInput interface {
	pulumi.Input

	ToInputDirectoryResponseArrayOutput() InputDirectoryResponseArrayOutput
	ToInputDirectoryResponseArrayOutputWithContext(context.Context) InputDirectoryResponseArrayOutput
}

type InputDirectoryResponseArray []InputDirectoryResponseInput

func (InputDirectoryResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputDirectoryResponse)(nil)).Elem()
}

func (i InputDirectoryResponseArray) ToInputDirectoryResponseArrayOutput() InputDirectoryResponseArrayOutput {
	return i.ToInputDirectoryResponseArrayOutputWithContext(context.Background())
}

func (i InputDirectoryResponseArray) ToInputDirectoryResponseArrayOutputWithContext(ctx context.Context) InputDirectoryResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputDirectoryResponseArrayOutput)
}

// Input directory for the job.
type InputDirectoryResponseOutput struct{ *pulumi.OutputState }

func (InputDirectoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDirectoryResponse)(nil)).Elem()
}

func (o InputDirectoryResponseOutput) ToInputDirectoryResponseOutput() InputDirectoryResponseOutput {
	return o
}

func (o InputDirectoryResponseOutput) ToInputDirectoryResponseOutputWithContext(ctx context.Context) InputDirectoryResponseOutput {
	return o
}

// It will be available for the job as an environment variable under AZ_BATCHAI_INPUT_id. The service will also provide the following  environment variable: AZ_BATCHAI_PREV_OUTPUT_Name. The value of the variable will be populated if the job is being retried after a previous failure, otherwise it will be set to nothing.
func (o InputDirectoryResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v InputDirectoryResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o InputDirectoryResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v InputDirectoryResponse) string { return v.Path }).(pulumi.StringOutput)
}

type InputDirectoryResponseArrayOutput struct{ *pulumi.OutputState }

func (InputDirectoryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputDirectoryResponse)(nil)).Elem()
}

func (o InputDirectoryResponseArrayOutput) ToInputDirectoryResponseArrayOutput() InputDirectoryResponseArrayOutput {
	return o
}

func (o InputDirectoryResponseArrayOutput) ToInputDirectoryResponseArrayOutputWithContext(ctx context.Context) InputDirectoryResponseArrayOutput {
	return o
}

func (o InputDirectoryResponseArrayOutput) Index(i pulumi.IntInput) InputDirectoryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputDirectoryResponse {
		return vs[0].([]InputDirectoryResponse)[vs[1].(int)]
	}).(InputDirectoryResponseOutput)
}

// Constraints associated with the Job.
type JobBasePropertiesConstraints struct {
	// Default Value = 1 week.
	MaxWallClockTime *string `pulumi:"maxWallClockTime"`
}

// JobBasePropertiesConstraintsInput is an input type that accepts JobBasePropertiesConstraintsArgs and JobBasePropertiesConstraintsOutput values.
// You can construct a concrete instance of `JobBasePropertiesConstraintsInput` via:
//
//          JobBasePropertiesConstraintsArgs{...}
type JobBasePropertiesConstraintsInput interface {
	pulumi.Input

	ToJobBasePropertiesConstraintsOutput() JobBasePropertiesConstraintsOutput
	ToJobBasePropertiesConstraintsOutputWithContext(context.Context) JobBasePropertiesConstraintsOutput
}

// Constraints associated with the Job.
type JobBasePropertiesConstraintsArgs struct {
	// Default Value = 1 week.
	MaxWallClockTime pulumi.StringPtrInput `pulumi:"maxWallClockTime"`
}

func (JobBasePropertiesConstraintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobBasePropertiesConstraints)(nil)).Elem()
}

func (i JobBasePropertiesConstraintsArgs) ToJobBasePropertiesConstraintsOutput() JobBasePropertiesConstraintsOutput {
	return i.ToJobBasePropertiesConstraintsOutputWithContext(context.Background())
}

func (i JobBasePropertiesConstraintsArgs) ToJobBasePropertiesConstraintsOutputWithContext(ctx context.Context) JobBasePropertiesConstraintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobBasePropertiesConstraintsOutput)
}

func (i JobBasePropertiesConstraintsArgs) ToJobBasePropertiesConstraintsPtrOutput() JobBasePropertiesConstraintsPtrOutput {
	return i.ToJobBasePropertiesConstraintsPtrOutputWithContext(context.Background())
}

func (i JobBasePropertiesConstraintsArgs) ToJobBasePropertiesConstraintsPtrOutputWithContext(ctx context.Context) JobBasePropertiesConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobBasePropertiesConstraintsOutput).ToJobBasePropertiesConstraintsPtrOutputWithContext(ctx)
}

// JobBasePropertiesConstraintsPtrInput is an input type that accepts JobBasePropertiesConstraintsArgs, JobBasePropertiesConstraintsPtr and JobBasePropertiesConstraintsPtrOutput values.
// You can construct a concrete instance of `JobBasePropertiesConstraintsPtrInput` via:
//
//          JobBasePropertiesConstraintsArgs{...}
//
//  or:
//
//          nil
type JobBasePropertiesConstraintsPtrInput interface {
	pulumi.Input

	ToJobBasePropertiesConstraintsPtrOutput() JobBasePropertiesConstraintsPtrOutput
	ToJobBasePropertiesConstraintsPtrOutputWithContext(context.Context) JobBasePropertiesConstraintsPtrOutput
}

type jobBasePropertiesConstraintsPtrType JobBasePropertiesConstraintsArgs

func JobBasePropertiesConstraintsPtr(v *JobBasePropertiesConstraintsArgs) JobBasePropertiesConstraintsPtrInput {
	return (*jobBasePropertiesConstraintsPtrType)(v)
}

func (*jobBasePropertiesConstraintsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobBasePropertiesConstraints)(nil)).Elem()
}

func (i *jobBasePropertiesConstraintsPtrType) ToJobBasePropertiesConstraintsPtrOutput() JobBasePropertiesConstraintsPtrOutput {
	return i.ToJobBasePropertiesConstraintsPtrOutputWithContext(context.Background())
}

func (i *jobBasePropertiesConstraintsPtrType) ToJobBasePropertiesConstraintsPtrOutputWithContext(ctx context.Context) JobBasePropertiesConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobBasePropertiesConstraintsPtrOutput)
}

// Constraints associated with the Job.
type JobBasePropertiesConstraintsOutput struct{ *pulumi.OutputState }

func (JobBasePropertiesConstraintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobBasePropertiesConstraints)(nil)).Elem()
}

func (o JobBasePropertiesConstraintsOutput) ToJobBasePropertiesConstraintsOutput() JobBasePropertiesConstraintsOutput {
	return o
}

func (o JobBasePropertiesConstraintsOutput) ToJobBasePropertiesConstraintsOutputWithContext(ctx context.Context) JobBasePropertiesConstraintsOutput {
	return o
}

func (o JobBasePropertiesConstraintsOutput) ToJobBasePropertiesConstraintsPtrOutput() JobBasePropertiesConstraintsPtrOutput {
	return o.ToJobBasePropertiesConstraintsPtrOutputWithContext(context.Background())
}

func (o JobBasePropertiesConstraintsOutput) ToJobBasePropertiesConstraintsPtrOutputWithContext(ctx context.Context) JobBasePropertiesConstraintsPtrOutput {
	return o.ApplyT(func(v JobBasePropertiesConstraints) *JobBasePropertiesConstraints {
		return &v
	}).(JobBasePropertiesConstraintsPtrOutput)
}

// Default Value = 1 week.
func (o JobBasePropertiesConstraintsOutput) MaxWallClockTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobBasePropertiesConstraints) *string { return v.MaxWallClockTime }).(pulumi.StringPtrOutput)
}

type JobBasePropertiesConstraintsPtrOutput struct{ *pulumi.OutputState }

func (JobBasePropertiesConstraintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobBasePropertiesConstraints)(nil)).Elem()
}

func (o JobBasePropertiesConstraintsPtrOutput) ToJobBasePropertiesConstraintsPtrOutput() JobBasePropertiesConstraintsPtrOutput {
	return o
}

func (o JobBasePropertiesConstraintsPtrOutput) ToJobBasePropertiesConstraintsPtrOutputWithContext(ctx context.Context) JobBasePropertiesConstraintsPtrOutput {
	return o
}

func (o JobBasePropertiesConstraintsPtrOutput) Elem() JobBasePropertiesConstraintsOutput {
	return o.ApplyT(func(v *JobBasePropertiesConstraints) JobBasePropertiesConstraints { return *v }).(JobBasePropertiesConstraintsOutput)
}

// Default Value = 1 week.
func (o JobBasePropertiesConstraintsPtrOutput) MaxWallClockTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobBasePropertiesConstraints) *string {
		if v == nil {
			return nil
		}
		return v.MaxWallClockTime
	}).(pulumi.StringPtrOutput)
}

// Specifies the settings for job preparation.
type JobPreparation struct {
	// If containerSettings is specified on the job, this commandLine will be executed in the same container as job. Otherwise it will be executed on the node.
	CommandLine string `pulumi:"commandLine"`
}

// JobPreparationInput is an input type that accepts JobPreparationArgs and JobPreparationOutput values.
// You can construct a concrete instance of `JobPreparationInput` via:
//
//          JobPreparationArgs{...}
type JobPreparationInput interface {
	pulumi.Input

	ToJobPreparationOutput() JobPreparationOutput
	ToJobPreparationOutputWithContext(context.Context) JobPreparationOutput
}

// Specifies the settings for job preparation.
type JobPreparationArgs struct {
	// If containerSettings is specified on the job, this commandLine will be executed in the same container as job. Otherwise it will be executed on the node.
	CommandLine pulumi.StringInput `pulumi:"commandLine"`
}

func (JobPreparationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPreparation)(nil)).Elem()
}

func (i JobPreparationArgs) ToJobPreparationOutput() JobPreparationOutput {
	return i.ToJobPreparationOutputWithContext(context.Background())
}

func (i JobPreparationArgs) ToJobPreparationOutputWithContext(ctx context.Context) JobPreparationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPreparationOutput)
}

func (i JobPreparationArgs) ToJobPreparationPtrOutput() JobPreparationPtrOutput {
	return i.ToJobPreparationPtrOutputWithContext(context.Background())
}

func (i JobPreparationArgs) ToJobPreparationPtrOutputWithContext(ctx context.Context) JobPreparationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPreparationOutput).ToJobPreparationPtrOutputWithContext(ctx)
}

// JobPreparationPtrInput is an input type that accepts JobPreparationArgs, JobPreparationPtr and JobPreparationPtrOutput values.
// You can construct a concrete instance of `JobPreparationPtrInput` via:
//
//          JobPreparationArgs{...}
//
//  or:
//
//          nil
type JobPreparationPtrInput interface {
	pulumi.Input

	ToJobPreparationPtrOutput() JobPreparationPtrOutput
	ToJobPreparationPtrOutputWithContext(context.Context) JobPreparationPtrOutput
}

type jobPreparationPtrType JobPreparationArgs

func JobPreparationPtr(v *JobPreparationArgs) JobPreparationPtrInput {
	return (*jobPreparationPtrType)(v)
}

func (*jobPreparationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPreparation)(nil)).Elem()
}

func (i *jobPreparationPtrType) ToJobPreparationPtrOutput() JobPreparationPtrOutput {
	return i.ToJobPreparationPtrOutputWithContext(context.Background())
}

func (i *jobPreparationPtrType) ToJobPreparationPtrOutputWithContext(ctx context.Context) JobPreparationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPreparationPtrOutput)
}

// Specifies the settings for job preparation.
type JobPreparationOutput struct{ *pulumi.OutputState }

func (JobPreparationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPreparation)(nil)).Elem()
}

func (o JobPreparationOutput) ToJobPreparationOutput() JobPreparationOutput {
	return o
}

func (o JobPreparationOutput) ToJobPreparationOutputWithContext(ctx context.Context) JobPreparationOutput {
	return o
}

func (o JobPreparationOutput) ToJobPreparationPtrOutput() JobPreparationPtrOutput {
	return o.ToJobPreparationPtrOutputWithContext(context.Background())
}

func (o JobPreparationOutput) ToJobPreparationPtrOutputWithContext(ctx context.Context) JobPreparationPtrOutput {
	return o.ApplyT(func(v JobPreparation) *JobPreparation {
		return &v
	}).(JobPreparationPtrOutput)
}

// If containerSettings is specified on the job, this commandLine will be executed in the same container as job. Otherwise it will be executed on the node.
func (o JobPreparationOutput) CommandLine() pulumi.StringOutput {
	return o.ApplyT(func(v JobPreparation) string { return v.CommandLine }).(pulumi.StringOutput)
}

type JobPreparationPtrOutput struct{ *pulumi.OutputState }

func (JobPreparationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPreparation)(nil)).Elem()
}

func (o JobPreparationPtrOutput) ToJobPreparationPtrOutput() JobPreparationPtrOutput {
	return o
}

func (o JobPreparationPtrOutput) ToJobPreparationPtrOutputWithContext(ctx context.Context) JobPreparationPtrOutput {
	return o
}

func (o JobPreparationPtrOutput) Elem() JobPreparationOutput {
	return o.ApplyT(func(v *JobPreparation) JobPreparation { return *v }).(JobPreparationOutput)
}

// If containerSettings is specified on the job, this commandLine will be executed in the same container as job. Otherwise it will be executed on the node.
func (o JobPreparationPtrOutput) CommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobPreparation) *string {
		if v == nil {
			return nil
		}
		return &v.CommandLine
	}).(pulumi.StringPtrOutput)
}

// Specifies the settings for job preparation.
type JobPreparationResponse struct {
	// If containerSettings is specified on the job, this commandLine will be executed in the same container as job. Otherwise it will be executed on the node.
	CommandLine string `pulumi:"commandLine"`
}

// JobPreparationResponseInput is an input type that accepts JobPreparationResponseArgs and JobPreparationResponseOutput values.
// You can construct a concrete instance of `JobPreparationResponseInput` via:
//
//          JobPreparationResponseArgs{...}
type JobPreparationResponseInput interface {
	pulumi.Input

	ToJobPreparationResponseOutput() JobPreparationResponseOutput
	ToJobPreparationResponseOutputWithContext(context.Context) JobPreparationResponseOutput
}

// Specifies the settings for job preparation.
type JobPreparationResponseArgs struct {
	// If containerSettings is specified on the job, this commandLine will be executed in the same container as job. Otherwise it will be executed on the node.
	CommandLine pulumi.StringInput `pulumi:"commandLine"`
}

func (JobPreparationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPreparationResponse)(nil)).Elem()
}

func (i JobPreparationResponseArgs) ToJobPreparationResponseOutput() JobPreparationResponseOutput {
	return i.ToJobPreparationResponseOutputWithContext(context.Background())
}

func (i JobPreparationResponseArgs) ToJobPreparationResponseOutputWithContext(ctx context.Context) JobPreparationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPreparationResponseOutput)
}

func (i JobPreparationResponseArgs) ToJobPreparationResponsePtrOutput() JobPreparationResponsePtrOutput {
	return i.ToJobPreparationResponsePtrOutputWithContext(context.Background())
}

func (i JobPreparationResponseArgs) ToJobPreparationResponsePtrOutputWithContext(ctx context.Context) JobPreparationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPreparationResponseOutput).ToJobPreparationResponsePtrOutputWithContext(ctx)
}

// JobPreparationResponsePtrInput is an input type that accepts JobPreparationResponseArgs, JobPreparationResponsePtr and JobPreparationResponsePtrOutput values.
// You can construct a concrete instance of `JobPreparationResponsePtrInput` via:
//
//          JobPreparationResponseArgs{...}
//
//  or:
//
//          nil
type JobPreparationResponsePtrInput interface {
	pulumi.Input

	ToJobPreparationResponsePtrOutput() JobPreparationResponsePtrOutput
	ToJobPreparationResponsePtrOutputWithContext(context.Context) JobPreparationResponsePtrOutput
}

type jobPreparationResponsePtrType JobPreparationResponseArgs

func JobPreparationResponsePtr(v *JobPreparationResponseArgs) JobPreparationResponsePtrInput {
	return (*jobPreparationResponsePtrType)(v)
}

func (*jobPreparationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPreparationResponse)(nil)).Elem()
}

func (i *jobPreparationResponsePtrType) ToJobPreparationResponsePtrOutput() JobPreparationResponsePtrOutput {
	return i.ToJobPreparationResponsePtrOutputWithContext(context.Background())
}

func (i *jobPreparationResponsePtrType) ToJobPreparationResponsePtrOutputWithContext(ctx context.Context) JobPreparationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPreparationResponsePtrOutput)
}

// Specifies the settings for job preparation.
type JobPreparationResponseOutput struct{ *pulumi.OutputState }

func (JobPreparationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPreparationResponse)(nil)).Elem()
}

func (o JobPreparationResponseOutput) ToJobPreparationResponseOutput() JobPreparationResponseOutput {
	return o
}

func (o JobPreparationResponseOutput) ToJobPreparationResponseOutputWithContext(ctx context.Context) JobPreparationResponseOutput {
	return o
}

func (o JobPreparationResponseOutput) ToJobPreparationResponsePtrOutput() JobPreparationResponsePtrOutput {
	return o.ToJobPreparationResponsePtrOutputWithContext(context.Background())
}

func (o JobPreparationResponseOutput) ToJobPreparationResponsePtrOutputWithContext(ctx context.Context) JobPreparationResponsePtrOutput {
	return o.ApplyT(func(v JobPreparationResponse) *JobPreparationResponse {
		return &v
	}).(JobPreparationResponsePtrOutput)
}

// If containerSettings is specified on the job, this commandLine will be executed in the same container as job. Otherwise it will be executed on the node.
func (o JobPreparationResponseOutput) CommandLine() pulumi.StringOutput {
	return o.ApplyT(func(v JobPreparationResponse) string { return v.CommandLine }).(pulumi.StringOutput)
}

type JobPreparationResponsePtrOutput struct{ *pulumi.OutputState }

func (JobPreparationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPreparationResponse)(nil)).Elem()
}

func (o JobPreparationResponsePtrOutput) ToJobPreparationResponsePtrOutput() JobPreparationResponsePtrOutput {
	return o
}

func (o JobPreparationResponsePtrOutput) ToJobPreparationResponsePtrOutputWithContext(ctx context.Context) JobPreparationResponsePtrOutput {
	return o
}

func (o JobPreparationResponsePtrOutput) Elem() JobPreparationResponseOutput {
	return o.ApplyT(func(v *JobPreparationResponse) JobPreparationResponse { return *v }).(JobPreparationResponseOutput)
}

// If containerSettings is specified on the job, this commandLine will be executed in the same container as job. Otherwise it will be executed on the node.
func (o JobPreparationResponsePtrOutput) CommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobPreparationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CommandLine
	}).(pulumi.StringPtrOutput)
}

// Constraints associated with the Job.
type JobPropertiesResponseConstraints struct {
	// Default Value = 1 week.
	MaxWallClockTime *string `pulumi:"maxWallClockTime"`
}

// JobPropertiesResponseConstraintsInput is an input type that accepts JobPropertiesResponseConstraintsArgs and JobPropertiesResponseConstraintsOutput values.
// You can construct a concrete instance of `JobPropertiesResponseConstraintsInput` via:
//
//          JobPropertiesResponseConstraintsArgs{...}
type JobPropertiesResponseConstraintsInput interface {
	pulumi.Input

	ToJobPropertiesResponseConstraintsOutput() JobPropertiesResponseConstraintsOutput
	ToJobPropertiesResponseConstraintsOutputWithContext(context.Context) JobPropertiesResponseConstraintsOutput
}

// Constraints associated with the Job.
type JobPropertiesResponseConstraintsArgs struct {
	// Default Value = 1 week.
	MaxWallClockTime pulumi.StringPtrInput `pulumi:"maxWallClockTime"`
}

func (JobPropertiesResponseConstraintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPropertiesResponseConstraints)(nil)).Elem()
}

func (i JobPropertiesResponseConstraintsArgs) ToJobPropertiesResponseConstraintsOutput() JobPropertiesResponseConstraintsOutput {
	return i.ToJobPropertiesResponseConstraintsOutputWithContext(context.Background())
}

func (i JobPropertiesResponseConstraintsArgs) ToJobPropertiesResponseConstraintsOutputWithContext(ctx context.Context) JobPropertiesResponseConstraintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPropertiesResponseConstraintsOutput)
}

func (i JobPropertiesResponseConstraintsArgs) ToJobPropertiesResponseConstraintsPtrOutput() JobPropertiesResponseConstraintsPtrOutput {
	return i.ToJobPropertiesResponseConstraintsPtrOutputWithContext(context.Background())
}

func (i JobPropertiesResponseConstraintsArgs) ToJobPropertiesResponseConstraintsPtrOutputWithContext(ctx context.Context) JobPropertiesResponseConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPropertiesResponseConstraintsOutput).ToJobPropertiesResponseConstraintsPtrOutputWithContext(ctx)
}

// JobPropertiesResponseConstraintsPtrInput is an input type that accepts JobPropertiesResponseConstraintsArgs, JobPropertiesResponseConstraintsPtr and JobPropertiesResponseConstraintsPtrOutput values.
// You can construct a concrete instance of `JobPropertiesResponseConstraintsPtrInput` via:
//
//          JobPropertiesResponseConstraintsArgs{...}
//
//  or:
//
//          nil
type JobPropertiesResponseConstraintsPtrInput interface {
	pulumi.Input

	ToJobPropertiesResponseConstraintsPtrOutput() JobPropertiesResponseConstraintsPtrOutput
	ToJobPropertiesResponseConstraintsPtrOutputWithContext(context.Context) JobPropertiesResponseConstraintsPtrOutput
}

type jobPropertiesResponseConstraintsPtrType JobPropertiesResponseConstraintsArgs

func JobPropertiesResponseConstraintsPtr(v *JobPropertiesResponseConstraintsArgs) JobPropertiesResponseConstraintsPtrInput {
	return (*jobPropertiesResponseConstraintsPtrType)(v)
}

func (*jobPropertiesResponseConstraintsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPropertiesResponseConstraints)(nil)).Elem()
}

func (i *jobPropertiesResponseConstraintsPtrType) ToJobPropertiesResponseConstraintsPtrOutput() JobPropertiesResponseConstraintsPtrOutput {
	return i.ToJobPropertiesResponseConstraintsPtrOutputWithContext(context.Background())
}

func (i *jobPropertiesResponseConstraintsPtrType) ToJobPropertiesResponseConstraintsPtrOutputWithContext(ctx context.Context) JobPropertiesResponseConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPropertiesResponseConstraintsPtrOutput)
}

// Constraints associated with the Job.
type JobPropertiesResponseConstraintsOutput struct{ *pulumi.OutputState }

func (JobPropertiesResponseConstraintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPropertiesResponseConstraints)(nil)).Elem()
}

func (o JobPropertiesResponseConstraintsOutput) ToJobPropertiesResponseConstraintsOutput() JobPropertiesResponseConstraintsOutput {
	return o
}

func (o JobPropertiesResponseConstraintsOutput) ToJobPropertiesResponseConstraintsOutputWithContext(ctx context.Context) JobPropertiesResponseConstraintsOutput {
	return o
}

func (o JobPropertiesResponseConstraintsOutput) ToJobPropertiesResponseConstraintsPtrOutput() JobPropertiesResponseConstraintsPtrOutput {
	return o.ToJobPropertiesResponseConstraintsPtrOutputWithContext(context.Background())
}

func (o JobPropertiesResponseConstraintsOutput) ToJobPropertiesResponseConstraintsPtrOutputWithContext(ctx context.Context) JobPropertiesResponseConstraintsPtrOutput {
	return o.ApplyT(func(v JobPropertiesResponseConstraints) *JobPropertiesResponseConstraints {
		return &v
	}).(JobPropertiesResponseConstraintsPtrOutput)
}

// Default Value = 1 week.
func (o JobPropertiesResponseConstraintsOutput) MaxWallClockTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobPropertiesResponseConstraints) *string { return v.MaxWallClockTime }).(pulumi.StringPtrOutput)
}

type JobPropertiesResponseConstraintsPtrOutput struct{ *pulumi.OutputState }

func (JobPropertiesResponseConstraintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPropertiesResponseConstraints)(nil)).Elem()
}

func (o JobPropertiesResponseConstraintsPtrOutput) ToJobPropertiesResponseConstraintsPtrOutput() JobPropertiesResponseConstraintsPtrOutput {
	return o
}

func (o JobPropertiesResponseConstraintsPtrOutput) ToJobPropertiesResponseConstraintsPtrOutputWithContext(ctx context.Context) JobPropertiesResponseConstraintsPtrOutput {
	return o
}

func (o JobPropertiesResponseConstraintsPtrOutput) Elem() JobPropertiesResponseConstraintsOutput {
	return o.ApplyT(func(v *JobPropertiesResponseConstraints) JobPropertiesResponseConstraints { return *v }).(JobPropertiesResponseConstraintsOutput)
}

// Default Value = 1 week.
func (o JobPropertiesResponseConstraintsPtrOutput) MaxWallClockTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobPropertiesResponseConstraints) *string {
		if v == nil {
			return nil
		}
		return v.MaxWallClockTime
	}).(pulumi.StringPtrOutput)
}

// Contains information about the execution of a job in the Azure Batch service.
type JobPropertiesResponseExecutionInfo struct {
	// This property is only returned if the job is in completed state.
	EndTime *string                `pulumi:"endTime"`
	Errors  []BatchAIErrorResponse `pulumi:"errors"`
	// This property is only returned if the job is in completed state.
	ExitCode *int `pulumi:"exitCode"`
	// 'Running' corresponds to the running state. If the job has been restarted or retried, this is the most recent time at which the job started running. This property is present only for job that are in the running or completed state.
	StartTime string `pulumi:"startTime"`
}

// JobPropertiesResponseExecutionInfoInput is an input type that accepts JobPropertiesResponseExecutionInfoArgs and JobPropertiesResponseExecutionInfoOutput values.
// You can construct a concrete instance of `JobPropertiesResponseExecutionInfoInput` via:
//
//          JobPropertiesResponseExecutionInfoArgs{...}
type JobPropertiesResponseExecutionInfoInput interface {
	pulumi.Input

	ToJobPropertiesResponseExecutionInfoOutput() JobPropertiesResponseExecutionInfoOutput
	ToJobPropertiesResponseExecutionInfoOutputWithContext(context.Context) JobPropertiesResponseExecutionInfoOutput
}

// Contains information about the execution of a job in the Azure Batch service.
type JobPropertiesResponseExecutionInfoArgs struct {
	// This property is only returned if the job is in completed state.
	EndTime pulumi.StringPtrInput          `pulumi:"endTime"`
	Errors  BatchAIErrorResponseArrayInput `pulumi:"errors"`
	// This property is only returned if the job is in completed state.
	ExitCode pulumi.IntPtrInput `pulumi:"exitCode"`
	// 'Running' corresponds to the running state. If the job has been restarted or retried, this is the most recent time at which the job started running. This property is present only for job that are in the running or completed state.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (JobPropertiesResponseExecutionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPropertiesResponseExecutionInfo)(nil)).Elem()
}

func (i JobPropertiesResponseExecutionInfoArgs) ToJobPropertiesResponseExecutionInfoOutput() JobPropertiesResponseExecutionInfoOutput {
	return i.ToJobPropertiesResponseExecutionInfoOutputWithContext(context.Background())
}

func (i JobPropertiesResponseExecutionInfoArgs) ToJobPropertiesResponseExecutionInfoOutputWithContext(ctx context.Context) JobPropertiesResponseExecutionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPropertiesResponseExecutionInfoOutput)
}

func (i JobPropertiesResponseExecutionInfoArgs) ToJobPropertiesResponseExecutionInfoPtrOutput() JobPropertiesResponseExecutionInfoPtrOutput {
	return i.ToJobPropertiesResponseExecutionInfoPtrOutputWithContext(context.Background())
}

func (i JobPropertiesResponseExecutionInfoArgs) ToJobPropertiesResponseExecutionInfoPtrOutputWithContext(ctx context.Context) JobPropertiesResponseExecutionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPropertiesResponseExecutionInfoOutput).ToJobPropertiesResponseExecutionInfoPtrOutputWithContext(ctx)
}

// JobPropertiesResponseExecutionInfoPtrInput is an input type that accepts JobPropertiesResponseExecutionInfoArgs, JobPropertiesResponseExecutionInfoPtr and JobPropertiesResponseExecutionInfoPtrOutput values.
// You can construct a concrete instance of `JobPropertiesResponseExecutionInfoPtrInput` via:
//
//          JobPropertiesResponseExecutionInfoArgs{...}
//
//  or:
//
//          nil
type JobPropertiesResponseExecutionInfoPtrInput interface {
	pulumi.Input

	ToJobPropertiesResponseExecutionInfoPtrOutput() JobPropertiesResponseExecutionInfoPtrOutput
	ToJobPropertiesResponseExecutionInfoPtrOutputWithContext(context.Context) JobPropertiesResponseExecutionInfoPtrOutput
}

type jobPropertiesResponseExecutionInfoPtrType JobPropertiesResponseExecutionInfoArgs

func JobPropertiesResponseExecutionInfoPtr(v *JobPropertiesResponseExecutionInfoArgs) JobPropertiesResponseExecutionInfoPtrInput {
	return (*jobPropertiesResponseExecutionInfoPtrType)(v)
}

func (*jobPropertiesResponseExecutionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPropertiesResponseExecutionInfo)(nil)).Elem()
}

func (i *jobPropertiesResponseExecutionInfoPtrType) ToJobPropertiesResponseExecutionInfoPtrOutput() JobPropertiesResponseExecutionInfoPtrOutput {
	return i.ToJobPropertiesResponseExecutionInfoPtrOutputWithContext(context.Background())
}

func (i *jobPropertiesResponseExecutionInfoPtrType) ToJobPropertiesResponseExecutionInfoPtrOutputWithContext(ctx context.Context) JobPropertiesResponseExecutionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPropertiesResponseExecutionInfoPtrOutput)
}

// Contains information about the execution of a job in the Azure Batch service.
type JobPropertiesResponseExecutionInfoOutput struct{ *pulumi.OutputState }

func (JobPropertiesResponseExecutionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPropertiesResponseExecutionInfo)(nil)).Elem()
}

func (o JobPropertiesResponseExecutionInfoOutput) ToJobPropertiesResponseExecutionInfoOutput() JobPropertiesResponseExecutionInfoOutput {
	return o
}

func (o JobPropertiesResponseExecutionInfoOutput) ToJobPropertiesResponseExecutionInfoOutputWithContext(ctx context.Context) JobPropertiesResponseExecutionInfoOutput {
	return o
}

func (o JobPropertiesResponseExecutionInfoOutput) ToJobPropertiesResponseExecutionInfoPtrOutput() JobPropertiesResponseExecutionInfoPtrOutput {
	return o.ToJobPropertiesResponseExecutionInfoPtrOutputWithContext(context.Background())
}

func (o JobPropertiesResponseExecutionInfoOutput) ToJobPropertiesResponseExecutionInfoPtrOutputWithContext(ctx context.Context) JobPropertiesResponseExecutionInfoPtrOutput {
	return o.ApplyT(func(v JobPropertiesResponseExecutionInfo) *JobPropertiesResponseExecutionInfo {
		return &v
	}).(JobPropertiesResponseExecutionInfoPtrOutput)
}

// This property is only returned if the job is in completed state.
func (o JobPropertiesResponseExecutionInfoOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobPropertiesResponseExecutionInfo) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

func (o JobPropertiesResponseExecutionInfoOutput) Errors() BatchAIErrorResponseArrayOutput {
	return o.ApplyT(func(v JobPropertiesResponseExecutionInfo) []BatchAIErrorResponse { return v.Errors }).(BatchAIErrorResponseArrayOutput)
}

// This property is only returned if the job is in completed state.
func (o JobPropertiesResponseExecutionInfoOutput) ExitCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobPropertiesResponseExecutionInfo) *int { return v.ExitCode }).(pulumi.IntPtrOutput)
}

// 'Running' corresponds to the running state. If the job has been restarted or retried, this is the most recent time at which the job started running. This property is present only for job that are in the running or completed state.
func (o JobPropertiesResponseExecutionInfoOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v JobPropertiesResponseExecutionInfo) string { return v.StartTime }).(pulumi.StringOutput)
}

type JobPropertiesResponseExecutionInfoPtrOutput struct{ *pulumi.OutputState }

func (JobPropertiesResponseExecutionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPropertiesResponseExecutionInfo)(nil)).Elem()
}

func (o JobPropertiesResponseExecutionInfoPtrOutput) ToJobPropertiesResponseExecutionInfoPtrOutput() JobPropertiesResponseExecutionInfoPtrOutput {
	return o
}

func (o JobPropertiesResponseExecutionInfoPtrOutput) ToJobPropertiesResponseExecutionInfoPtrOutputWithContext(ctx context.Context) JobPropertiesResponseExecutionInfoPtrOutput {
	return o
}

func (o JobPropertiesResponseExecutionInfoPtrOutput) Elem() JobPropertiesResponseExecutionInfoOutput {
	return o.ApplyT(func(v *JobPropertiesResponseExecutionInfo) JobPropertiesResponseExecutionInfo { return *v }).(JobPropertiesResponseExecutionInfoOutput)
}

// This property is only returned if the job is in completed state.
func (o JobPropertiesResponseExecutionInfoPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobPropertiesResponseExecutionInfo) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

func (o JobPropertiesResponseExecutionInfoPtrOutput) Errors() BatchAIErrorResponseArrayOutput {
	return o.ApplyT(func(v *JobPropertiesResponseExecutionInfo) []BatchAIErrorResponse {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(BatchAIErrorResponseArrayOutput)
}

// This property is only returned if the job is in completed state.
func (o JobPropertiesResponseExecutionInfoPtrOutput) ExitCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobPropertiesResponseExecutionInfo) *int {
		if v == nil {
			return nil
		}
		return v.ExitCode
	}).(pulumi.IntPtrOutput)
}

// 'Running' corresponds to the running state. If the job has been restarted or retried, this is the most recent time at which the job started running. This property is present only for job that are in the running or completed state.
func (o JobPropertiesResponseExecutionInfoPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobPropertiesResponseExecutionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Describes a reference to Key Vault Secret.
type KeyVaultSecretReference struct {
	SecretUrl string `pulumi:"secretUrl"`
	// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
	SourceVault ResourceId `pulumi:"sourceVault"`
}

// KeyVaultSecretReferenceInput is an input type that accepts KeyVaultSecretReferenceArgs and KeyVaultSecretReferenceOutput values.
// You can construct a concrete instance of `KeyVaultSecretReferenceInput` via:
//
//          KeyVaultSecretReferenceArgs{...}
type KeyVaultSecretReferenceInput interface {
	pulumi.Input

	ToKeyVaultSecretReferenceOutput() KeyVaultSecretReferenceOutput
	ToKeyVaultSecretReferenceOutputWithContext(context.Context) KeyVaultSecretReferenceOutput
}

// Describes a reference to Key Vault Secret.
type KeyVaultSecretReferenceArgs struct {
	SecretUrl pulumi.StringInput `pulumi:"secretUrl"`
	// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
	SourceVault ResourceIdInput `pulumi:"sourceVault"`
}

func (KeyVaultSecretReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSecretReference)(nil)).Elem()
}

func (i KeyVaultSecretReferenceArgs) ToKeyVaultSecretReferenceOutput() KeyVaultSecretReferenceOutput {
	return i.ToKeyVaultSecretReferenceOutputWithContext(context.Background())
}

func (i KeyVaultSecretReferenceArgs) ToKeyVaultSecretReferenceOutputWithContext(ctx context.Context) KeyVaultSecretReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretReferenceOutput)
}

func (i KeyVaultSecretReferenceArgs) ToKeyVaultSecretReferencePtrOutput() KeyVaultSecretReferencePtrOutput {
	return i.ToKeyVaultSecretReferencePtrOutputWithContext(context.Background())
}

func (i KeyVaultSecretReferenceArgs) ToKeyVaultSecretReferencePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretReferenceOutput).ToKeyVaultSecretReferencePtrOutputWithContext(ctx)
}

// KeyVaultSecretReferencePtrInput is an input type that accepts KeyVaultSecretReferenceArgs, KeyVaultSecretReferencePtr and KeyVaultSecretReferencePtrOutput values.
// You can construct a concrete instance of `KeyVaultSecretReferencePtrInput` via:
//
//          KeyVaultSecretReferenceArgs{...}
//
//  or:
//
//          nil
type KeyVaultSecretReferencePtrInput interface {
	pulumi.Input

	ToKeyVaultSecretReferencePtrOutput() KeyVaultSecretReferencePtrOutput
	ToKeyVaultSecretReferencePtrOutputWithContext(context.Context) KeyVaultSecretReferencePtrOutput
}

type keyVaultSecretReferencePtrType KeyVaultSecretReferenceArgs

func KeyVaultSecretReferencePtr(v *KeyVaultSecretReferenceArgs) KeyVaultSecretReferencePtrInput {
	return (*keyVaultSecretReferencePtrType)(v)
}

func (*keyVaultSecretReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSecretReference)(nil)).Elem()
}

func (i *keyVaultSecretReferencePtrType) ToKeyVaultSecretReferencePtrOutput() KeyVaultSecretReferencePtrOutput {
	return i.ToKeyVaultSecretReferencePtrOutputWithContext(context.Background())
}

func (i *keyVaultSecretReferencePtrType) ToKeyVaultSecretReferencePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretReferencePtrOutput)
}

// Describes a reference to Key Vault Secret.
type KeyVaultSecretReferenceOutput struct{ *pulumi.OutputState }

func (KeyVaultSecretReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSecretReference)(nil)).Elem()
}

func (o KeyVaultSecretReferenceOutput) ToKeyVaultSecretReferenceOutput() KeyVaultSecretReferenceOutput {
	return o
}

func (o KeyVaultSecretReferenceOutput) ToKeyVaultSecretReferenceOutputWithContext(ctx context.Context) KeyVaultSecretReferenceOutput {
	return o
}

func (o KeyVaultSecretReferenceOutput) ToKeyVaultSecretReferencePtrOutput() KeyVaultSecretReferencePtrOutput {
	return o.ToKeyVaultSecretReferencePtrOutputWithContext(context.Background())
}

func (o KeyVaultSecretReferenceOutput) ToKeyVaultSecretReferencePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferencePtrOutput {
	return o.ApplyT(func(v KeyVaultSecretReference) *KeyVaultSecretReference {
		return &v
	}).(KeyVaultSecretReferencePtrOutput)
}
func (o KeyVaultSecretReferenceOutput) SecretUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSecretReference) string { return v.SecretUrl }).(pulumi.StringOutput)
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
func (o KeyVaultSecretReferenceOutput) SourceVault() ResourceIdOutput {
	return o.ApplyT(func(v KeyVaultSecretReference) ResourceId { return v.SourceVault }).(ResourceIdOutput)
}

type KeyVaultSecretReferencePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultSecretReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSecretReference)(nil)).Elem()
}

func (o KeyVaultSecretReferencePtrOutput) ToKeyVaultSecretReferencePtrOutput() KeyVaultSecretReferencePtrOutput {
	return o
}

func (o KeyVaultSecretReferencePtrOutput) ToKeyVaultSecretReferencePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferencePtrOutput {
	return o
}

func (o KeyVaultSecretReferencePtrOutput) Elem() KeyVaultSecretReferenceOutput {
	return o.ApplyT(func(v *KeyVaultSecretReference) KeyVaultSecretReference { return *v }).(KeyVaultSecretReferenceOutput)
}

func (o KeyVaultSecretReferencePtrOutput) SecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretReference) *string {
		if v == nil {
			return nil
		}
		return &v.SecretUrl
	}).(pulumi.StringPtrOutput)
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
func (o KeyVaultSecretReferencePtrOutput) SourceVault() ResourceIdPtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretReference) *ResourceId {
		if v == nil {
			return nil
		}
		return &v.SourceVault
	}).(ResourceIdPtrOutput)
}

// Describes a reference to Key Vault Secret.
type KeyVaultSecretReferenceResponse struct {
	SecretUrl string `pulumi:"secretUrl"`
	// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
	SourceVault ResourceIdResponse `pulumi:"sourceVault"`
}

// KeyVaultSecretReferenceResponseInput is an input type that accepts KeyVaultSecretReferenceResponseArgs and KeyVaultSecretReferenceResponseOutput values.
// You can construct a concrete instance of `KeyVaultSecretReferenceResponseInput` via:
//
//          KeyVaultSecretReferenceResponseArgs{...}
type KeyVaultSecretReferenceResponseInput interface {
	pulumi.Input

	ToKeyVaultSecretReferenceResponseOutput() KeyVaultSecretReferenceResponseOutput
	ToKeyVaultSecretReferenceResponseOutputWithContext(context.Context) KeyVaultSecretReferenceResponseOutput
}

// Describes a reference to Key Vault Secret.
type KeyVaultSecretReferenceResponseArgs struct {
	SecretUrl pulumi.StringInput `pulumi:"secretUrl"`
	// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
	SourceVault ResourceIdResponseInput `pulumi:"sourceVault"`
}

func (KeyVaultSecretReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSecretReferenceResponse)(nil)).Elem()
}

func (i KeyVaultSecretReferenceResponseArgs) ToKeyVaultSecretReferenceResponseOutput() KeyVaultSecretReferenceResponseOutput {
	return i.ToKeyVaultSecretReferenceResponseOutputWithContext(context.Background())
}

func (i KeyVaultSecretReferenceResponseArgs) ToKeyVaultSecretReferenceResponseOutputWithContext(ctx context.Context) KeyVaultSecretReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretReferenceResponseOutput)
}

func (i KeyVaultSecretReferenceResponseArgs) ToKeyVaultSecretReferenceResponsePtrOutput() KeyVaultSecretReferenceResponsePtrOutput {
	return i.ToKeyVaultSecretReferenceResponsePtrOutputWithContext(context.Background())
}

func (i KeyVaultSecretReferenceResponseArgs) ToKeyVaultSecretReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretReferenceResponseOutput).ToKeyVaultSecretReferenceResponsePtrOutputWithContext(ctx)
}

// KeyVaultSecretReferenceResponsePtrInput is an input type that accepts KeyVaultSecretReferenceResponseArgs, KeyVaultSecretReferenceResponsePtr and KeyVaultSecretReferenceResponsePtrOutput values.
// You can construct a concrete instance of `KeyVaultSecretReferenceResponsePtrInput` via:
//
//          KeyVaultSecretReferenceResponseArgs{...}
//
//  or:
//
//          nil
type KeyVaultSecretReferenceResponsePtrInput interface {
	pulumi.Input

	ToKeyVaultSecretReferenceResponsePtrOutput() KeyVaultSecretReferenceResponsePtrOutput
	ToKeyVaultSecretReferenceResponsePtrOutputWithContext(context.Context) KeyVaultSecretReferenceResponsePtrOutput
}

type keyVaultSecretReferenceResponsePtrType KeyVaultSecretReferenceResponseArgs

func KeyVaultSecretReferenceResponsePtr(v *KeyVaultSecretReferenceResponseArgs) KeyVaultSecretReferenceResponsePtrInput {
	return (*keyVaultSecretReferenceResponsePtrType)(v)
}

func (*keyVaultSecretReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSecretReferenceResponse)(nil)).Elem()
}

func (i *keyVaultSecretReferenceResponsePtrType) ToKeyVaultSecretReferenceResponsePtrOutput() KeyVaultSecretReferenceResponsePtrOutput {
	return i.ToKeyVaultSecretReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *keyVaultSecretReferenceResponsePtrType) ToKeyVaultSecretReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretReferenceResponsePtrOutput)
}

// Describes a reference to Key Vault Secret.
type KeyVaultSecretReferenceResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultSecretReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSecretReferenceResponse)(nil)).Elem()
}

func (o KeyVaultSecretReferenceResponseOutput) ToKeyVaultSecretReferenceResponseOutput() KeyVaultSecretReferenceResponseOutput {
	return o
}

func (o KeyVaultSecretReferenceResponseOutput) ToKeyVaultSecretReferenceResponseOutputWithContext(ctx context.Context) KeyVaultSecretReferenceResponseOutput {
	return o
}

func (o KeyVaultSecretReferenceResponseOutput) ToKeyVaultSecretReferenceResponsePtrOutput() KeyVaultSecretReferenceResponsePtrOutput {
	return o.ToKeyVaultSecretReferenceResponsePtrOutputWithContext(context.Background())
}

func (o KeyVaultSecretReferenceResponseOutput) ToKeyVaultSecretReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferenceResponsePtrOutput {
	return o.ApplyT(func(v KeyVaultSecretReferenceResponse) *KeyVaultSecretReferenceResponse {
		return &v
	}).(KeyVaultSecretReferenceResponsePtrOutput)
}
func (o KeyVaultSecretReferenceResponseOutput) SecretUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSecretReferenceResponse) string { return v.SecretUrl }).(pulumi.StringOutput)
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
func (o KeyVaultSecretReferenceResponseOutput) SourceVault() ResourceIdResponseOutput {
	return o.ApplyT(func(v KeyVaultSecretReferenceResponse) ResourceIdResponse { return v.SourceVault }).(ResourceIdResponseOutput)
}

type KeyVaultSecretReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultSecretReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSecretReferenceResponse)(nil)).Elem()
}

func (o KeyVaultSecretReferenceResponsePtrOutput) ToKeyVaultSecretReferenceResponsePtrOutput() KeyVaultSecretReferenceResponsePtrOutput {
	return o
}

func (o KeyVaultSecretReferenceResponsePtrOutput) ToKeyVaultSecretReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferenceResponsePtrOutput {
	return o
}

func (o KeyVaultSecretReferenceResponsePtrOutput) Elem() KeyVaultSecretReferenceResponseOutput {
	return o.ApplyT(func(v *KeyVaultSecretReferenceResponse) KeyVaultSecretReferenceResponse { return *v }).(KeyVaultSecretReferenceResponseOutput)
}

func (o KeyVaultSecretReferenceResponsePtrOutput) SecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecretUrl
	}).(pulumi.StringPtrOutput)
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
func (o KeyVaultSecretReferenceResponsePtrOutput) SourceVault() ResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretReferenceResponse) *ResourceIdResponse {
		if v == nil {
			return nil
		}
		return &v.SourceVault
	}).(ResourceIdResponsePtrOutput)
}

// Manual scale settings for the cluster.
type ManualScaleSettings struct {
	// The default value is requeue.
	NodeDeallocationOption *string `pulumi:"nodeDeallocationOption"`
	// Default is 0. If autoScaleSettings are not specified, then the Cluster starts with this target.
	TargetNodeCount int `pulumi:"targetNodeCount"`
}

// ManualScaleSettingsInput is an input type that accepts ManualScaleSettingsArgs and ManualScaleSettingsOutput values.
// You can construct a concrete instance of `ManualScaleSettingsInput` via:
//
//          ManualScaleSettingsArgs{...}
type ManualScaleSettingsInput interface {
	pulumi.Input

	ToManualScaleSettingsOutput() ManualScaleSettingsOutput
	ToManualScaleSettingsOutputWithContext(context.Context) ManualScaleSettingsOutput
}

// Manual scale settings for the cluster.
type ManualScaleSettingsArgs struct {
	// The default value is requeue.
	NodeDeallocationOption pulumi.StringPtrInput `pulumi:"nodeDeallocationOption"`
	// Default is 0. If autoScaleSettings are not specified, then the Cluster starts with this target.
	TargetNodeCount pulumi.IntInput `pulumi:"targetNodeCount"`
}

func (ManualScaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScaleSettings)(nil)).Elem()
}

func (i ManualScaleSettingsArgs) ToManualScaleSettingsOutput() ManualScaleSettingsOutput {
	return i.ToManualScaleSettingsOutputWithContext(context.Background())
}

func (i ManualScaleSettingsArgs) ToManualScaleSettingsOutputWithContext(ctx context.Context) ManualScaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScaleSettingsOutput)
}

func (i ManualScaleSettingsArgs) ToManualScaleSettingsPtrOutput() ManualScaleSettingsPtrOutput {
	return i.ToManualScaleSettingsPtrOutputWithContext(context.Background())
}

func (i ManualScaleSettingsArgs) ToManualScaleSettingsPtrOutputWithContext(ctx context.Context) ManualScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScaleSettingsOutput).ToManualScaleSettingsPtrOutputWithContext(ctx)
}

// ManualScaleSettingsPtrInput is an input type that accepts ManualScaleSettingsArgs, ManualScaleSettingsPtr and ManualScaleSettingsPtrOutput values.
// You can construct a concrete instance of `ManualScaleSettingsPtrInput` via:
//
//          ManualScaleSettingsArgs{...}
//
//  or:
//
//          nil
type ManualScaleSettingsPtrInput interface {
	pulumi.Input

	ToManualScaleSettingsPtrOutput() ManualScaleSettingsPtrOutput
	ToManualScaleSettingsPtrOutputWithContext(context.Context) ManualScaleSettingsPtrOutput
}

type manualScaleSettingsPtrType ManualScaleSettingsArgs

func ManualScaleSettingsPtr(v *ManualScaleSettingsArgs) ManualScaleSettingsPtrInput {
	return (*manualScaleSettingsPtrType)(v)
}

func (*manualScaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualScaleSettings)(nil)).Elem()
}

func (i *manualScaleSettingsPtrType) ToManualScaleSettingsPtrOutput() ManualScaleSettingsPtrOutput {
	return i.ToManualScaleSettingsPtrOutputWithContext(context.Background())
}

func (i *manualScaleSettingsPtrType) ToManualScaleSettingsPtrOutputWithContext(ctx context.Context) ManualScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScaleSettingsPtrOutput)
}

// Manual scale settings for the cluster.
type ManualScaleSettingsOutput struct{ *pulumi.OutputState }

func (ManualScaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScaleSettings)(nil)).Elem()
}

func (o ManualScaleSettingsOutput) ToManualScaleSettingsOutput() ManualScaleSettingsOutput {
	return o
}

func (o ManualScaleSettingsOutput) ToManualScaleSettingsOutputWithContext(ctx context.Context) ManualScaleSettingsOutput {
	return o
}

func (o ManualScaleSettingsOutput) ToManualScaleSettingsPtrOutput() ManualScaleSettingsPtrOutput {
	return o.ToManualScaleSettingsPtrOutputWithContext(context.Background())
}

func (o ManualScaleSettingsOutput) ToManualScaleSettingsPtrOutputWithContext(ctx context.Context) ManualScaleSettingsPtrOutput {
	return o.ApplyT(func(v ManualScaleSettings) *ManualScaleSettings {
		return &v
	}).(ManualScaleSettingsPtrOutput)
}

// The default value is requeue.
func (o ManualScaleSettingsOutput) NodeDeallocationOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualScaleSettings) *string { return v.NodeDeallocationOption }).(pulumi.StringPtrOutput)
}

// Default is 0. If autoScaleSettings are not specified, then the Cluster starts with this target.
func (o ManualScaleSettingsOutput) TargetNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ManualScaleSettings) int { return v.TargetNodeCount }).(pulumi.IntOutput)
}

type ManualScaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (ManualScaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualScaleSettings)(nil)).Elem()
}

func (o ManualScaleSettingsPtrOutput) ToManualScaleSettingsPtrOutput() ManualScaleSettingsPtrOutput {
	return o
}

func (o ManualScaleSettingsPtrOutput) ToManualScaleSettingsPtrOutputWithContext(ctx context.Context) ManualScaleSettingsPtrOutput {
	return o
}

func (o ManualScaleSettingsPtrOutput) Elem() ManualScaleSettingsOutput {
	return o.ApplyT(func(v *ManualScaleSettings) ManualScaleSettings { return *v }).(ManualScaleSettingsOutput)
}

// The default value is requeue.
func (o ManualScaleSettingsPtrOutput) NodeDeallocationOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManualScaleSettings) *string {
		if v == nil {
			return nil
		}
		return v.NodeDeallocationOption
	}).(pulumi.StringPtrOutput)
}

// Default is 0. If autoScaleSettings are not specified, then the Cluster starts with this target.
func (o ManualScaleSettingsPtrOutput) TargetNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManualScaleSettings) *int {
		if v == nil {
			return nil
		}
		return &v.TargetNodeCount
	}).(pulumi.IntPtrOutput)
}

// Manual scale settings for the cluster.
type ManualScaleSettingsResponse struct {
	// The default value is requeue.
	NodeDeallocationOption *string `pulumi:"nodeDeallocationOption"`
	// Default is 0. If autoScaleSettings are not specified, then the Cluster starts with this target.
	TargetNodeCount int `pulumi:"targetNodeCount"`
}

// ManualScaleSettingsResponseInput is an input type that accepts ManualScaleSettingsResponseArgs and ManualScaleSettingsResponseOutput values.
// You can construct a concrete instance of `ManualScaleSettingsResponseInput` via:
//
//          ManualScaleSettingsResponseArgs{...}
type ManualScaleSettingsResponseInput interface {
	pulumi.Input

	ToManualScaleSettingsResponseOutput() ManualScaleSettingsResponseOutput
	ToManualScaleSettingsResponseOutputWithContext(context.Context) ManualScaleSettingsResponseOutput
}

// Manual scale settings for the cluster.
type ManualScaleSettingsResponseArgs struct {
	// The default value is requeue.
	NodeDeallocationOption pulumi.StringPtrInput `pulumi:"nodeDeallocationOption"`
	// Default is 0. If autoScaleSettings are not specified, then the Cluster starts with this target.
	TargetNodeCount pulumi.IntInput `pulumi:"targetNodeCount"`
}

func (ManualScaleSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScaleSettingsResponse)(nil)).Elem()
}

func (i ManualScaleSettingsResponseArgs) ToManualScaleSettingsResponseOutput() ManualScaleSettingsResponseOutput {
	return i.ToManualScaleSettingsResponseOutputWithContext(context.Background())
}

func (i ManualScaleSettingsResponseArgs) ToManualScaleSettingsResponseOutputWithContext(ctx context.Context) ManualScaleSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScaleSettingsResponseOutput)
}

func (i ManualScaleSettingsResponseArgs) ToManualScaleSettingsResponsePtrOutput() ManualScaleSettingsResponsePtrOutput {
	return i.ToManualScaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ManualScaleSettingsResponseArgs) ToManualScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ManualScaleSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScaleSettingsResponseOutput).ToManualScaleSettingsResponsePtrOutputWithContext(ctx)
}

// ManualScaleSettingsResponsePtrInput is an input type that accepts ManualScaleSettingsResponseArgs, ManualScaleSettingsResponsePtr and ManualScaleSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ManualScaleSettingsResponsePtrInput` via:
//
//          ManualScaleSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ManualScaleSettingsResponsePtrInput interface {
	pulumi.Input

	ToManualScaleSettingsResponsePtrOutput() ManualScaleSettingsResponsePtrOutput
	ToManualScaleSettingsResponsePtrOutputWithContext(context.Context) ManualScaleSettingsResponsePtrOutput
}

type manualScaleSettingsResponsePtrType ManualScaleSettingsResponseArgs

func ManualScaleSettingsResponsePtr(v *ManualScaleSettingsResponseArgs) ManualScaleSettingsResponsePtrInput {
	return (*manualScaleSettingsResponsePtrType)(v)
}

func (*manualScaleSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualScaleSettingsResponse)(nil)).Elem()
}

func (i *manualScaleSettingsResponsePtrType) ToManualScaleSettingsResponsePtrOutput() ManualScaleSettingsResponsePtrOutput {
	return i.ToManualScaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *manualScaleSettingsResponsePtrType) ToManualScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ManualScaleSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScaleSettingsResponsePtrOutput)
}

// Manual scale settings for the cluster.
type ManualScaleSettingsResponseOutput struct{ *pulumi.OutputState }

func (ManualScaleSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScaleSettingsResponse)(nil)).Elem()
}

func (o ManualScaleSettingsResponseOutput) ToManualScaleSettingsResponseOutput() ManualScaleSettingsResponseOutput {
	return o
}

func (o ManualScaleSettingsResponseOutput) ToManualScaleSettingsResponseOutputWithContext(ctx context.Context) ManualScaleSettingsResponseOutput {
	return o
}

func (o ManualScaleSettingsResponseOutput) ToManualScaleSettingsResponsePtrOutput() ManualScaleSettingsResponsePtrOutput {
	return o.ToManualScaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ManualScaleSettingsResponseOutput) ToManualScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ManualScaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v ManualScaleSettingsResponse) *ManualScaleSettingsResponse {
		return &v
	}).(ManualScaleSettingsResponsePtrOutput)
}

// The default value is requeue.
func (o ManualScaleSettingsResponseOutput) NodeDeallocationOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualScaleSettingsResponse) *string { return v.NodeDeallocationOption }).(pulumi.StringPtrOutput)
}

// Default is 0. If autoScaleSettings are not specified, then the Cluster starts with this target.
func (o ManualScaleSettingsResponseOutput) TargetNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ManualScaleSettingsResponse) int { return v.TargetNodeCount }).(pulumi.IntOutput)
}

type ManualScaleSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ManualScaleSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualScaleSettingsResponse)(nil)).Elem()
}

func (o ManualScaleSettingsResponsePtrOutput) ToManualScaleSettingsResponsePtrOutput() ManualScaleSettingsResponsePtrOutput {
	return o
}

func (o ManualScaleSettingsResponsePtrOutput) ToManualScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ManualScaleSettingsResponsePtrOutput {
	return o
}

func (o ManualScaleSettingsResponsePtrOutput) Elem() ManualScaleSettingsResponseOutput {
	return o.ApplyT(func(v *ManualScaleSettingsResponse) ManualScaleSettingsResponse { return *v }).(ManualScaleSettingsResponseOutput)
}

// The default value is requeue.
func (o ManualScaleSettingsResponsePtrOutput) NodeDeallocationOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManualScaleSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.NodeDeallocationOption
	}).(pulumi.StringPtrOutput)
}

// Default is 0. If autoScaleSettings are not specified, then the Cluster starts with this target.
func (o ManualScaleSettingsResponsePtrOutput) TargetNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManualScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TargetNodeCount
	}).(pulumi.IntPtrOutput)
}

// Details of the File Server.
type MountSettingsResponse struct {
	FileServerInternalIP *string `pulumi:"fileServerInternalIP"`
	FileServerPublicIP   *string `pulumi:"fileServerPublicIP"`
	FileServerType       *string `pulumi:"fileServerType"`
	MountPoint           *string `pulumi:"mountPoint"`
}

// MountSettingsResponseInput is an input type that accepts MountSettingsResponseArgs and MountSettingsResponseOutput values.
// You can construct a concrete instance of `MountSettingsResponseInput` via:
//
//          MountSettingsResponseArgs{...}
type MountSettingsResponseInput interface {
	pulumi.Input

	ToMountSettingsResponseOutput() MountSettingsResponseOutput
	ToMountSettingsResponseOutputWithContext(context.Context) MountSettingsResponseOutput
}

// Details of the File Server.
type MountSettingsResponseArgs struct {
	FileServerInternalIP pulumi.StringPtrInput `pulumi:"fileServerInternalIP"`
	FileServerPublicIP   pulumi.StringPtrInput `pulumi:"fileServerPublicIP"`
	FileServerType       pulumi.StringPtrInput `pulumi:"fileServerType"`
	MountPoint           pulumi.StringPtrInput `pulumi:"mountPoint"`
}

func (MountSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountSettingsResponse)(nil)).Elem()
}

func (i MountSettingsResponseArgs) ToMountSettingsResponseOutput() MountSettingsResponseOutput {
	return i.ToMountSettingsResponseOutputWithContext(context.Background())
}

func (i MountSettingsResponseArgs) ToMountSettingsResponseOutputWithContext(ctx context.Context) MountSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountSettingsResponseOutput)
}

func (i MountSettingsResponseArgs) ToMountSettingsResponsePtrOutput() MountSettingsResponsePtrOutput {
	return i.ToMountSettingsResponsePtrOutputWithContext(context.Background())
}

func (i MountSettingsResponseArgs) ToMountSettingsResponsePtrOutputWithContext(ctx context.Context) MountSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountSettingsResponseOutput).ToMountSettingsResponsePtrOutputWithContext(ctx)
}

// MountSettingsResponsePtrInput is an input type that accepts MountSettingsResponseArgs, MountSettingsResponsePtr and MountSettingsResponsePtrOutput values.
// You can construct a concrete instance of `MountSettingsResponsePtrInput` via:
//
//          MountSettingsResponseArgs{...}
//
//  or:
//
//          nil
type MountSettingsResponsePtrInput interface {
	pulumi.Input

	ToMountSettingsResponsePtrOutput() MountSettingsResponsePtrOutput
	ToMountSettingsResponsePtrOutputWithContext(context.Context) MountSettingsResponsePtrOutput
}

type mountSettingsResponsePtrType MountSettingsResponseArgs

func MountSettingsResponsePtr(v *MountSettingsResponseArgs) MountSettingsResponsePtrInput {
	return (*mountSettingsResponsePtrType)(v)
}

func (*mountSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MountSettingsResponse)(nil)).Elem()
}

func (i *mountSettingsResponsePtrType) ToMountSettingsResponsePtrOutput() MountSettingsResponsePtrOutput {
	return i.ToMountSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *mountSettingsResponsePtrType) ToMountSettingsResponsePtrOutputWithContext(ctx context.Context) MountSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountSettingsResponsePtrOutput)
}

// Details of the File Server.
type MountSettingsResponseOutput struct{ *pulumi.OutputState }

func (MountSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountSettingsResponse)(nil)).Elem()
}

func (o MountSettingsResponseOutput) ToMountSettingsResponseOutput() MountSettingsResponseOutput {
	return o
}

func (o MountSettingsResponseOutput) ToMountSettingsResponseOutputWithContext(ctx context.Context) MountSettingsResponseOutput {
	return o
}

func (o MountSettingsResponseOutput) ToMountSettingsResponsePtrOutput() MountSettingsResponsePtrOutput {
	return o.ToMountSettingsResponsePtrOutputWithContext(context.Background())
}

func (o MountSettingsResponseOutput) ToMountSettingsResponsePtrOutputWithContext(ctx context.Context) MountSettingsResponsePtrOutput {
	return o.ApplyT(func(v MountSettingsResponse) *MountSettingsResponse {
		return &v
	}).(MountSettingsResponsePtrOutput)
}
func (o MountSettingsResponseOutput) FileServerInternalIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountSettingsResponse) *string { return v.FileServerInternalIP }).(pulumi.StringPtrOutput)
}

func (o MountSettingsResponseOutput) FileServerPublicIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountSettingsResponse) *string { return v.FileServerPublicIP }).(pulumi.StringPtrOutput)
}

func (o MountSettingsResponseOutput) FileServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountSettingsResponse) *string { return v.FileServerType }).(pulumi.StringPtrOutput)
}

func (o MountSettingsResponseOutput) MountPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountSettingsResponse) *string { return v.MountPoint }).(pulumi.StringPtrOutput)
}

type MountSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (MountSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MountSettingsResponse)(nil)).Elem()
}

func (o MountSettingsResponsePtrOutput) ToMountSettingsResponsePtrOutput() MountSettingsResponsePtrOutput {
	return o
}

func (o MountSettingsResponsePtrOutput) ToMountSettingsResponsePtrOutputWithContext(ctx context.Context) MountSettingsResponsePtrOutput {
	return o
}

func (o MountSettingsResponsePtrOutput) Elem() MountSettingsResponseOutput {
	return o.ApplyT(func(v *MountSettingsResponse) MountSettingsResponse { return *v }).(MountSettingsResponseOutput)
}

func (o MountSettingsResponsePtrOutput) FileServerInternalIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MountSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.FileServerInternalIP
	}).(pulumi.StringPtrOutput)
}

func (o MountSettingsResponsePtrOutput) FileServerPublicIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MountSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.FileServerPublicIP
	}).(pulumi.StringPtrOutput)
}

func (o MountSettingsResponsePtrOutput) FileServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MountSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.FileServerType
	}).(pulumi.StringPtrOutput)
}

func (o MountSettingsResponsePtrOutput) MountPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MountSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MountPoint
	}).(pulumi.StringPtrOutput)
}

// Details of volumes to mount on the cluster.
type MountVolumes struct {
	// References to Azure Blob FUSE that are to be mounted to the cluster nodes.
	AzureBlobFileSystems []AzureBlobFileSystemReference `pulumi:"azureBlobFileSystems"`
	// References to Azure File Shares that are to be mounted to the cluster nodes.
	AzureFileShares      []AzureFileShareReference      `pulumi:"azureFileShares"`
	FileServers          []FileServerReference          `pulumi:"fileServers"`
	UnmanagedFileSystems []UnmanagedFileSystemReference `pulumi:"unmanagedFileSystems"`
}

// MountVolumesInput is an input type that accepts MountVolumesArgs and MountVolumesOutput values.
// You can construct a concrete instance of `MountVolumesInput` via:
//
//          MountVolumesArgs{...}
type MountVolumesInput interface {
	pulumi.Input

	ToMountVolumesOutput() MountVolumesOutput
	ToMountVolumesOutputWithContext(context.Context) MountVolumesOutput
}

// Details of volumes to mount on the cluster.
type MountVolumesArgs struct {
	// References to Azure Blob FUSE that are to be mounted to the cluster nodes.
	AzureBlobFileSystems AzureBlobFileSystemReferenceArrayInput `pulumi:"azureBlobFileSystems"`
	// References to Azure File Shares that are to be mounted to the cluster nodes.
	AzureFileShares      AzureFileShareReferenceArrayInput      `pulumi:"azureFileShares"`
	FileServers          FileServerReferenceArrayInput          `pulumi:"fileServers"`
	UnmanagedFileSystems UnmanagedFileSystemReferenceArrayInput `pulumi:"unmanagedFileSystems"`
}

func (MountVolumesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountVolumes)(nil)).Elem()
}

func (i MountVolumesArgs) ToMountVolumesOutput() MountVolumesOutput {
	return i.ToMountVolumesOutputWithContext(context.Background())
}

func (i MountVolumesArgs) ToMountVolumesOutputWithContext(ctx context.Context) MountVolumesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountVolumesOutput)
}

func (i MountVolumesArgs) ToMountVolumesPtrOutput() MountVolumesPtrOutput {
	return i.ToMountVolumesPtrOutputWithContext(context.Background())
}

func (i MountVolumesArgs) ToMountVolumesPtrOutputWithContext(ctx context.Context) MountVolumesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountVolumesOutput).ToMountVolumesPtrOutputWithContext(ctx)
}

// MountVolumesPtrInput is an input type that accepts MountVolumesArgs, MountVolumesPtr and MountVolumesPtrOutput values.
// You can construct a concrete instance of `MountVolumesPtrInput` via:
//
//          MountVolumesArgs{...}
//
//  or:
//
//          nil
type MountVolumesPtrInput interface {
	pulumi.Input

	ToMountVolumesPtrOutput() MountVolumesPtrOutput
	ToMountVolumesPtrOutputWithContext(context.Context) MountVolumesPtrOutput
}

type mountVolumesPtrType MountVolumesArgs

func MountVolumesPtr(v *MountVolumesArgs) MountVolumesPtrInput {
	return (*mountVolumesPtrType)(v)
}

func (*mountVolumesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MountVolumes)(nil)).Elem()
}

func (i *mountVolumesPtrType) ToMountVolumesPtrOutput() MountVolumesPtrOutput {
	return i.ToMountVolumesPtrOutputWithContext(context.Background())
}

func (i *mountVolumesPtrType) ToMountVolumesPtrOutputWithContext(ctx context.Context) MountVolumesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountVolumesPtrOutput)
}

// Details of volumes to mount on the cluster.
type MountVolumesOutput struct{ *pulumi.OutputState }

func (MountVolumesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountVolumes)(nil)).Elem()
}

func (o MountVolumesOutput) ToMountVolumesOutput() MountVolumesOutput {
	return o
}

func (o MountVolumesOutput) ToMountVolumesOutputWithContext(ctx context.Context) MountVolumesOutput {
	return o
}

func (o MountVolumesOutput) ToMountVolumesPtrOutput() MountVolumesPtrOutput {
	return o.ToMountVolumesPtrOutputWithContext(context.Background())
}

func (o MountVolumesOutput) ToMountVolumesPtrOutputWithContext(ctx context.Context) MountVolumesPtrOutput {
	return o.ApplyT(func(v MountVolumes) *MountVolumes {
		return &v
	}).(MountVolumesPtrOutput)
}

// References to Azure Blob FUSE that are to be mounted to the cluster nodes.
func (o MountVolumesOutput) AzureBlobFileSystems() AzureBlobFileSystemReferenceArrayOutput {
	return o.ApplyT(func(v MountVolumes) []AzureBlobFileSystemReference { return v.AzureBlobFileSystems }).(AzureBlobFileSystemReferenceArrayOutput)
}

// References to Azure File Shares that are to be mounted to the cluster nodes.
func (o MountVolumesOutput) AzureFileShares() AzureFileShareReferenceArrayOutput {
	return o.ApplyT(func(v MountVolumes) []AzureFileShareReference { return v.AzureFileShares }).(AzureFileShareReferenceArrayOutput)
}

func (o MountVolumesOutput) FileServers() FileServerReferenceArrayOutput {
	return o.ApplyT(func(v MountVolumes) []FileServerReference { return v.FileServers }).(FileServerReferenceArrayOutput)
}

func (o MountVolumesOutput) UnmanagedFileSystems() UnmanagedFileSystemReferenceArrayOutput {
	return o.ApplyT(func(v MountVolumes) []UnmanagedFileSystemReference { return v.UnmanagedFileSystems }).(UnmanagedFileSystemReferenceArrayOutput)
}

type MountVolumesPtrOutput struct{ *pulumi.OutputState }

func (MountVolumesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MountVolumes)(nil)).Elem()
}

func (o MountVolumesPtrOutput) ToMountVolumesPtrOutput() MountVolumesPtrOutput {
	return o
}

func (o MountVolumesPtrOutput) ToMountVolumesPtrOutputWithContext(ctx context.Context) MountVolumesPtrOutput {
	return o
}

func (o MountVolumesPtrOutput) Elem() MountVolumesOutput {
	return o.ApplyT(func(v *MountVolumes) MountVolumes { return *v }).(MountVolumesOutput)
}

// References to Azure Blob FUSE that are to be mounted to the cluster nodes.
func (o MountVolumesPtrOutput) AzureBlobFileSystems() AzureBlobFileSystemReferenceArrayOutput {
	return o.ApplyT(func(v *MountVolumes) []AzureBlobFileSystemReference {
		if v == nil {
			return nil
		}
		return v.AzureBlobFileSystems
	}).(AzureBlobFileSystemReferenceArrayOutput)
}

// References to Azure File Shares that are to be mounted to the cluster nodes.
func (o MountVolumesPtrOutput) AzureFileShares() AzureFileShareReferenceArrayOutput {
	return o.ApplyT(func(v *MountVolumes) []AzureFileShareReference {
		if v == nil {
			return nil
		}
		return v.AzureFileShares
	}).(AzureFileShareReferenceArrayOutput)
}

func (o MountVolumesPtrOutput) FileServers() FileServerReferenceArrayOutput {
	return o.ApplyT(func(v *MountVolumes) []FileServerReference {
		if v == nil {
			return nil
		}
		return v.FileServers
	}).(FileServerReferenceArrayOutput)
}

func (o MountVolumesPtrOutput) UnmanagedFileSystems() UnmanagedFileSystemReferenceArrayOutput {
	return o.ApplyT(func(v *MountVolumes) []UnmanagedFileSystemReference {
		if v == nil {
			return nil
		}
		return v.UnmanagedFileSystems
	}).(UnmanagedFileSystemReferenceArrayOutput)
}

// Details of volumes to mount on the cluster.
type MountVolumesResponse struct {
	// References to Azure Blob FUSE that are to be mounted to the cluster nodes.
	AzureBlobFileSystems []AzureBlobFileSystemReferenceResponse `pulumi:"azureBlobFileSystems"`
	// References to Azure File Shares that are to be mounted to the cluster nodes.
	AzureFileShares      []AzureFileShareReferenceResponse      `pulumi:"azureFileShares"`
	FileServers          []FileServerReferenceResponse          `pulumi:"fileServers"`
	UnmanagedFileSystems []UnmanagedFileSystemReferenceResponse `pulumi:"unmanagedFileSystems"`
}

// MountVolumesResponseInput is an input type that accepts MountVolumesResponseArgs and MountVolumesResponseOutput values.
// You can construct a concrete instance of `MountVolumesResponseInput` via:
//
//          MountVolumesResponseArgs{...}
type MountVolumesResponseInput interface {
	pulumi.Input

	ToMountVolumesResponseOutput() MountVolumesResponseOutput
	ToMountVolumesResponseOutputWithContext(context.Context) MountVolumesResponseOutput
}

// Details of volumes to mount on the cluster.
type MountVolumesResponseArgs struct {
	// References to Azure Blob FUSE that are to be mounted to the cluster nodes.
	AzureBlobFileSystems AzureBlobFileSystemReferenceResponseArrayInput `pulumi:"azureBlobFileSystems"`
	// References to Azure File Shares that are to be mounted to the cluster nodes.
	AzureFileShares      AzureFileShareReferenceResponseArrayInput      `pulumi:"azureFileShares"`
	FileServers          FileServerReferenceResponseArrayInput          `pulumi:"fileServers"`
	UnmanagedFileSystems UnmanagedFileSystemReferenceResponseArrayInput `pulumi:"unmanagedFileSystems"`
}

func (MountVolumesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountVolumesResponse)(nil)).Elem()
}

func (i MountVolumesResponseArgs) ToMountVolumesResponseOutput() MountVolumesResponseOutput {
	return i.ToMountVolumesResponseOutputWithContext(context.Background())
}

func (i MountVolumesResponseArgs) ToMountVolumesResponseOutputWithContext(ctx context.Context) MountVolumesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountVolumesResponseOutput)
}

func (i MountVolumesResponseArgs) ToMountVolumesResponsePtrOutput() MountVolumesResponsePtrOutput {
	return i.ToMountVolumesResponsePtrOutputWithContext(context.Background())
}

func (i MountVolumesResponseArgs) ToMountVolumesResponsePtrOutputWithContext(ctx context.Context) MountVolumesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountVolumesResponseOutput).ToMountVolumesResponsePtrOutputWithContext(ctx)
}

// MountVolumesResponsePtrInput is an input type that accepts MountVolumesResponseArgs, MountVolumesResponsePtr and MountVolumesResponsePtrOutput values.
// You can construct a concrete instance of `MountVolumesResponsePtrInput` via:
//
//          MountVolumesResponseArgs{...}
//
//  or:
//
//          nil
type MountVolumesResponsePtrInput interface {
	pulumi.Input

	ToMountVolumesResponsePtrOutput() MountVolumesResponsePtrOutput
	ToMountVolumesResponsePtrOutputWithContext(context.Context) MountVolumesResponsePtrOutput
}

type mountVolumesResponsePtrType MountVolumesResponseArgs

func MountVolumesResponsePtr(v *MountVolumesResponseArgs) MountVolumesResponsePtrInput {
	return (*mountVolumesResponsePtrType)(v)
}

func (*mountVolumesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MountVolumesResponse)(nil)).Elem()
}

func (i *mountVolumesResponsePtrType) ToMountVolumesResponsePtrOutput() MountVolumesResponsePtrOutput {
	return i.ToMountVolumesResponsePtrOutputWithContext(context.Background())
}

func (i *mountVolumesResponsePtrType) ToMountVolumesResponsePtrOutputWithContext(ctx context.Context) MountVolumesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountVolumesResponsePtrOutput)
}

// Details of volumes to mount on the cluster.
type MountVolumesResponseOutput struct{ *pulumi.OutputState }

func (MountVolumesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountVolumesResponse)(nil)).Elem()
}

func (o MountVolumesResponseOutput) ToMountVolumesResponseOutput() MountVolumesResponseOutput {
	return o
}

func (o MountVolumesResponseOutput) ToMountVolumesResponseOutputWithContext(ctx context.Context) MountVolumesResponseOutput {
	return o
}

func (o MountVolumesResponseOutput) ToMountVolumesResponsePtrOutput() MountVolumesResponsePtrOutput {
	return o.ToMountVolumesResponsePtrOutputWithContext(context.Background())
}

func (o MountVolumesResponseOutput) ToMountVolumesResponsePtrOutputWithContext(ctx context.Context) MountVolumesResponsePtrOutput {
	return o.ApplyT(func(v MountVolumesResponse) *MountVolumesResponse {
		return &v
	}).(MountVolumesResponsePtrOutput)
}

// References to Azure Blob FUSE that are to be mounted to the cluster nodes.
func (o MountVolumesResponseOutput) AzureBlobFileSystems() AzureBlobFileSystemReferenceResponseArrayOutput {
	return o.ApplyT(func(v MountVolumesResponse) []AzureBlobFileSystemReferenceResponse { return v.AzureBlobFileSystems }).(AzureBlobFileSystemReferenceResponseArrayOutput)
}

// References to Azure File Shares that are to be mounted to the cluster nodes.
func (o MountVolumesResponseOutput) AzureFileShares() AzureFileShareReferenceResponseArrayOutput {
	return o.ApplyT(func(v MountVolumesResponse) []AzureFileShareReferenceResponse { return v.AzureFileShares }).(AzureFileShareReferenceResponseArrayOutput)
}

func (o MountVolumesResponseOutput) FileServers() FileServerReferenceResponseArrayOutput {
	return o.ApplyT(func(v MountVolumesResponse) []FileServerReferenceResponse { return v.FileServers }).(FileServerReferenceResponseArrayOutput)
}

func (o MountVolumesResponseOutput) UnmanagedFileSystems() UnmanagedFileSystemReferenceResponseArrayOutput {
	return o.ApplyT(func(v MountVolumesResponse) []UnmanagedFileSystemReferenceResponse { return v.UnmanagedFileSystems }).(UnmanagedFileSystemReferenceResponseArrayOutput)
}

type MountVolumesResponsePtrOutput struct{ *pulumi.OutputState }

func (MountVolumesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MountVolumesResponse)(nil)).Elem()
}

func (o MountVolumesResponsePtrOutput) ToMountVolumesResponsePtrOutput() MountVolumesResponsePtrOutput {
	return o
}

func (o MountVolumesResponsePtrOutput) ToMountVolumesResponsePtrOutputWithContext(ctx context.Context) MountVolumesResponsePtrOutput {
	return o
}

func (o MountVolumesResponsePtrOutput) Elem() MountVolumesResponseOutput {
	return o.ApplyT(func(v *MountVolumesResponse) MountVolumesResponse { return *v }).(MountVolumesResponseOutput)
}

// References to Azure Blob FUSE that are to be mounted to the cluster nodes.
func (o MountVolumesResponsePtrOutput) AzureBlobFileSystems() AzureBlobFileSystemReferenceResponseArrayOutput {
	return o.ApplyT(func(v *MountVolumesResponse) []AzureBlobFileSystemReferenceResponse {
		if v == nil {
			return nil
		}
		return v.AzureBlobFileSystems
	}).(AzureBlobFileSystemReferenceResponseArrayOutput)
}

// References to Azure File Shares that are to be mounted to the cluster nodes.
func (o MountVolumesResponsePtrOutput) AzureFileShares() AzureFileShareReferenceResponseArrayOutput {
	return o.ApplyT(func(v *MountVolumesResponse) []AzureFileShareReferenceResponse {
		if v == nil {
			return nil
		}
		return v.AzureFileShares
	}).(AzureFileShareReferenceResponseArrayOutput)
}

func (o MountVolumesResponsePtrOutput) FileServers() FileServerReferenceResponseArrayOutput {
	return o.ApplyT(func(v *MountVolumesResponse) []FileServerReferenceResponse {
		if v == nil {
			return nil
		}
		return v.FileServers
	}).(FileServerReferenceResponseArrayOutput)
}

func (o MountVolumesResponsePtrOutput) UnmanagedFileSystems() UnmanagedFileSystemReferenceResponseArrayOutput {
	return o.ApplyT(func(v *MountVolumesResponse) []UnmanagedFileSystemReferenceResponse {
		if v == nil {
			return nil
		}
		return v.UnmanagedFileSystems
	}).(UnmanagedFileSystemReferenceResponseArrayOutput)
}

// Represents a name-value pair.
type NameValuePairResponse struct {
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NameValuePairResponseInput is an input type that accepts NameValuePairResponseArgs and NameValuePairResponseOutput values.
// You can construct a concrete instance of `NameValuePairResponseInput` via:
//
//          NameValuePairResponseArgs{...}
type NameValuePairResponseInput interface {
	pulumi.Input

	ToNameValuePairResponseOutput() NameValuePairResponseOutput
	ToNameValuePairResponseOutputWithContext(context.Context) NameValuePairResponseOutput
}

// Represents a name-value pair.
type NameValuePairResponseArgs struct {
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NameValuePairResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePairResponse)(nil)).Elem()
}

func (i NameValuePairResponseArgs) ToNameValuePairResponseOutput() NameValuePairResponseOutput {
	return i.ToNameValuePairResponseOutputWithContext(context.Background())
}

func (i NameValuePairResponseArgs) ToNameValuePairResponseOutputWithContext(ctx context.Context) NameValuePairResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairResponseOutput)
}

// NameValuePairResponseArrayInput is an input type that accepts NameValuePairResponseArray and NameValuePairResponseArrayOutput values.
// You can construct a concrete instance of `NameValuePairResponseArrayInput` via:
//
//          NameValuePairResponseArray{ NameValuePairResponseArgs{...} }
type NameValuePairResponseArrayInput interface {
	pulumi.Input

	ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput
	ToNameValuePairResponseArrayOutputWithContext(context.Context) NameValuePairResponseArrayOutput
}

type NameValuePairResponseArray []NameValuePairResponseInput

func (NameValuePairResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePairResponse)(nil)).Elem()
}

func (i NameValuePairResponseArray) ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput {
	return i.ToNameValuePairResponseArrayOutputWithContext(context.Background())
}

func (i NameValuePairResponseArray) ToNameValuePairResponseArrayOutputWithContext(ctx context.Context) NameValuePairResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairResponseArrayOutput)
}

// Represents a name-value pair.
type NameValuePairResponseOutput struct{ *pulumi.OutputState }

func (NameValuePairResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePairResponse)(nil)).Elem()
}

func (o NameValuePairResponseOutput) ToNameValuePairResponseOutput() NameValuePairResponseOutput {
	return o
}

func (o NameValuePairResponseOutput) ToNameValuePairResponseOutputWithContext(ctx context.Context) NameValuePairResponseOutput {
	return o
}

func (o NameValuePairResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePairResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NameValuePairResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePairResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NameValuePairResponseArrayOutput struct{ *pulumi.OutputState }

func (NameValuePairResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePairResponse)(nil)).Elem()
}

func (o NameValuePairResponseArrayOutput) ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput {
	return o
}

func (o NameValuePairResponseArrayOutput) ToNameValuePairResponseArrayOutputWithContext(ctx context.Context) NameValuePairResponseArrayOutput {
	return o
}

func (o NameValuePairResponseArrayOutput) Index(i pulumi.IntInput) NameValuePairResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NameValuePairResponse {
		return vs[0].([]NameValuePairResponse)[vs[1].(int)]
	}).(NameValuePairResponseOutput)
}

// Use this to prepare the VM. NOTE: The volumes specified in mountVolumes are mounted first and then the setupTask is run. Therefore the setup task can use local mountPaths in its execution.
type NodeSetup struct {
	// Details of volumes to mount on the cluster.
	MountVolumes *MountVolumes `pulumi:"mountVolumes"`
	// Specifies a setup task which can be used to customize the compute nodes of the cluster.
	SetupTask *SetupTask `pulumi:"setupTask"`
}

// NodeSetupInput is an input type that accepts NodeSetupArgs and NodeSetupOutput values.
// You can construct a concrete instance of `NodeSetupInput` via:
//
//          NodeSetupArgs{...}
type NodeSetupInput interface {
	pulumi.Input

	ToNodeSetupOutput() NodeSetupOutput
	ToNodeSetupOutputWithContext(context.Context) NodeSetupOutput
}

// Use this to prepare the VM. NOTE: The volumes specified in mountVolumes are mounted first and then the setupTask is run. Therefore the setup task can use local mountPaths in its execution.
type NodeSetupArgs struct {
	// Details of volumes to mount on the cluster.
	MountVolumes MountVolumesPtrInput `pulumi:"mountVolumes"`
	// Specifies a setup task which can be used to customize the compute nodes of the cluster.
	SetupTask SetupTaskPtrInput `pulumi:"setupTask"`
}

func (NodeSetupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeSetup)(nil)).Elem()
}

func (i NodeSetupArgs) ToNodeSetupOutput() NodeSetupOutput {
	return i.ToNodeSetupOutputWithContext(context.Background())
}

func (i NodeSetupArgs) ToNodeSetupOutputWithContext(ctx context.Context) NodeSetupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeSetupOutput)
}

func (i NodeSetupArgs) ToNodeSetupPtrOutput() NodeSetupPtrOutput {
	return i.ToNodeSetupPtrOutputWithContext(context.Background())
}

func (i NodeSetupArgs) ToNodeSetupPtrOutputWithContext(ctx context.Context) NodeSetupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeSetupOutput).ToNodeSetupPtrOutputWithContext(ctx)
}

// NodeSetupPtrInput is an input type that accepts NodeSetupArgs, NodeSetupPtr and NodeSetupPtrOutput values.
// You can construct a concrete instance of `NodeSetupPtrInput` via:
//
//          NodeSetupArgs{...}
//
//  or:
//
//          nil
type NodeSetupPtrInput interface {
	pulumi.Input

	ToNodeSetupPtrOutput() NodeSetupPtrOutput
	ToNodeSetupPtrOutputWithContext(context.Context) NodeSetupPtrOutput
}

type nodeSetupPtrType NodeSetupArgs

func NodeSetupPtr(v *NodeSetupArgs) NodeSetupPtrInput {
	return (*nodeSetupPtrType)(v)
}

func (*nodeSetupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeSetup)(nil)).Elem()
}

func (i *nodeSetupPtrType) ToNodeSetupPtrOutput() NodeSetupPtrOutput {
	return i.ToNodeSetupPtrOutputWithContext(context.Background())
}

func (i *nodeSetupPtrType) ToNodeSetupPtrOutputWithContext(ctx context.Context) NodeSetupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeSetupPtrOutput)
}

// Use this to prepare the VM. NOTE: The volumes specified in mountVolumes are mounted first and then the setupTask is run. Therefore the setup task can use local mountPaths in its execution.
type NodeSetupOutput struct{ *pulumi.OutputState }

func (NodeSetupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeSetup)(nil)).Elem()
}

func (o NodeSetupOutput) ToNodeSetupOutput() NodeSetupOutput {
	return o
}

func (o NodeSetupOutput) ToNodeSetupOutputWithContext(ctx context.Context) NodeSetupOutput {
	return o
}

func (o NodeSetupOutput) ToNodeSetupPtrOutput() NodeSetupPtrOutput {
	return o.ToNodeSetupPtrOutputWithContext(context.Background())
}

func (o NodeSetupOutput) ToNodeSetupPtrOutputWithContext(ctx context.Context) NodeSetupPtrOutput {
	return o.ApplyT(func(v NodeSetup) *NodeSetup {
		return &v
	}).(NodeSetupPtrOutput)
}

// Details of volumes to mount on the cluster.
func (o NodeSetupOutput) MountVolumes() MountVolumesPtrOutput {
	return o.ApplyT(func(v NodeSetup) *MountVolumes { return v.MountVolumes }).(MountVolumesPtrOutput)
}

// Specifies a setup task which can be used to customize the compute nodes of the cluster.
func (o NodeSetupOutput) SetupTask() SetupTaskPtrOutput {
	return o.ApplyT(func(v NodeSetup) *SetupTask { return v.SetupTask }).(SetupTaskPtrOutput)
}

type NodeSetupPtrOutput struct{ *pulumi.OutputState }

func (NodeSetupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeSetup)(nil)).Elem()
}

func (o NodeSetupPtrOutput) ToNodeSetupPtrOutput() NodeSetupPtrOutput {
	return o
}

func (o NodeSetupPtrOutput) ToNodeSetupPtrOutputWithContext(ctx context.Context) NodeSetupPtrOutput {
	return o
}

func (o NodeSetupPtrOutput) Elem() NodeSetupOutput {
	return o.ApplyT(func(v *NodeSetup) NodeSetup { return *v }).(NodeSetupOutput)
}

// Details of volumes to mount on the cluster.
func (o NodeSetupPtrOutput) MountVolumes() MountVolumesPtrOutput {
	return o.ApplyT(func(v *NodeSetup) *MountVolumes {
		if v == nil {
			return nil
		}
		return v.MountVolumes
	}).(MountVolumesPtrOutput)
}

// Specifies a setup task which can be used to customize the compute nodes of the cluster.
func (o NodeSetupPtrOutput) SetupTask() SetupTaskPtrOutput {
	return o.ApplyT(func(v *NodeSetup) *SetupTask {
		if v == nil {
			return nil
		}
		return v.SetupTask
	}).(SetupTaskPtrOutput)
}

// Use this to prepare the VM. NOTE: The volumes specified in mountVolumes are mounted first and then the setupTask is run. Therefore the setup task can use local mountPaths in its execution.
type NodeSetupResponse struct {
	// Details of volumes to mount on the cluster.
	MountVolumes *MountVolumesResponse `pulumi:"mountVolumes"`
	// Specifies a setup task which can be used to customize the compute nodes of the cluster.
	SetupTask *SetupTaskResponse `pulumi:"setupTask"`
}

// NodeSetupResponseInput is an input type that accepts NodeSetupResponseArgs and NodeSetupResponseOutput values.
// You can construct a concrete instance of `NodeSetupResponseInput` via:
//
//          NodeSetupResponseArgs{...}
type NodeSetupResponseInput interface {
	pulumi.Input

	ToNodeSetupResponseOutput() NodeSetupResponseOutput
	ToNodeSetupResponseOutputWithContext(context.Context) NodeSetupResponseOutput
}

// Use this to prepare the VM. NOTE: The volumes specified in mountVolumes are mounted first and then the setupTask is run. Therefore the setup task can use local mountPaths in its execution.
type NodeSetupResponseArgs struct {
	// Details of volumes to mount on the cluster.
	MountVolumes MountVolumesResponsePtrInput `pulumi:"mountVolumes"`
	// Specifies a setup task which can be used to customize the compute nodes of the cluster.
	SetupTask SetupTaskResponsePtrInput `pulumi:"setupTask"`
}

func (NodeSetupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeSetupResponse)(nil)).Elem()
}

func (i NodeSetupResponseArgs) ToNodeSetupResponseOutput() NodeSetupResponseOutput {
	return i.ToNodeSetupResponseOutputWithContext(context.Background())
}

func (i NodeSetupResponseArgs) ToNodeSetupResponseOutputWithContext(ctx context.Context) NodeSetupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeSetupResponseOutput)
}

func (i NodeSetupResponseArgs) ToNodeSetupResponsePtrOutput() NodeSetupResponsePtrOutput {
	return i.ToNodeSetupResponsePtrOutputWithContext(context.Background())
}

func (i NodeSetupResponseArgs) ToNodeSetupResponsePtrOutputWithContext(ctx context.Context) NodeSetupResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeSetupResponseOutput).ToNodeSetupResponsePtrOutputWithContext(ctx)
}

// NodeSetupResponsePtrInput is an input type that accepts NodeSetupResponseArgs, NodeSetupResponsePtr and NodeSetupResponsePtrOutput values.
// You can construct a concrete instance of `NodeSetupResponsePtrInput` via:
//
//          NodeSetupResponseArgs{...}
//
//  or:
//
//          nil
type NodeSetupResponsePtrInput interface {
	pulumi.Input

	ToNodeSetupResponsePtrOutput() NodeSetupResponsePtrOutput
	ToNodeSetupResponsePtrOutputWithContext(context.Context) NodeSetupResponsePtrOutput
}

type nodeSetupResponsePtrType NodeSetupResponseArgs

func NodeSetupResponsePtr(v *NodeSetupResponseArgs) NodeSetupResponsePtrInput {
	return (*nodeSetupResponsePtrType)(v)
}

func (*nodeSetupResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeSetupResponse)(nil)).Elem()
}

func (i *nodeSetupResponsePtrType) ToNodeSetupResponsePtrOutput() NodeSetupResponsePtrOutput {
	return i.ToNodeSetupResponsePtrOutputWithContext(context.Background())
}

func (i *nodeSetupResponsePtrType) ToNodeSetupResponsePtrOutputWithContext(ctx context.Context) NodeSetupResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeSetupResponsePtrOutput)
}

// Use this to prepare the VM. NOTE: The volumes specified in mountVolumes are mounted first and then the setupTask is run. Therefore the setup task can use local mountPaths in its execution.
type NodeSetupResponseOutput struct{ *pulumi.OutputState }

func (NodeSetupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeSetupResponse)(nil)).Elem()
}

func (o NodeSetupResponseOutput) ToNodeSetupResponseOutput() NodeSetupResponseOutput {
	return o
}

func (o NodeSetupResponseOutput) ToNodeSetupResponseOutputWithContext(ctx context.Context) NodeSetupResponseOutput {
	return o
}

func (o NodeSetupResponseOutput) ToNodeSetupResponsePtrOutput() NodeSetupResponsePtrOutput {
	return o.ToNodeSetupResponsePtrOutputWithContext(context.Background())
}

func (o NodeSetupResponseOutput) ToNodeSetupResponsePtrOutputWithContext(ctx context.Context) NodeSetupResponsePtrOutput {
	return o.ApplyT(func(v NodeSetupResponse) *NodeSetupResponse {
		return &v
	}).(NodeSetupResponsePtrOutput)
}

// Details of volumes to mount on the cluster.
func (o NodeSetupResponseOutput) MountVolumes() MountVolumesResponsePtrOutput {
	return o.ApplyT(func(v NodeSetupResponse) *MountVolumesResponse { return v.MountVolumes }).(MountVolumesResponsePtrOutput)
}

// Specifies a setup task which can be used to customize the compute nodes of the cluster.
func (o NodeSetupResponseOutput) SetupTask() SetupTaskResponsePtrOutput {
	return o.ApplyT(func(v NodeSetupResponse) *SetupTaskResponse { return v.SetupTask }).(SetupTaskResponsePtrOutput)
}

type NodeSetupResponsePtrOutput struct{ *pulumi.OutputState }

func (NodeSetupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeSetupResponse)(nil)).Elem()
}

func (o NodeSetupResponsePtrOutput) ToNodeSetupResponsePtrOutput() NodeSetupResponsePtrOutput {
	return o
}

func (o NodeSetupResponsePtrOutput) ToNodeSetupResponsePtrOutputWithContext(ctx context.Context) NodeSetupResponsePtrOutput {
	return o
}

func (o NodeSetupResponsePtrOutput) Elem() NodeSetupResponseOutput {
	return o.ApplyT(func(v *NodeSetupResponse) NodeSetupResponse { return *v }).(NodeSetupResponseOutput)
}

// Details of volumes to mount on the cluster.
func (o NodeSetupResponsePtrOutput) MountVolumes() MountVolumesResponsePtrOutput {
	return o.ApplyT(func(v *NodeSetupResponse) *MountVolumesResponse {
		if v == nil {
			return nil
		}
		return v.MountVolumes
	}).(MountVolumesResponsePtrOutput)
}

// Specifies a setup task which can be used to customize the compute nodes of the cluster.
func (o NodeSetupResponsePtrOutput) SetupTask() SetupTaskResponsePtrOutput {
	return o.ApplyT(func(v *NodeSetupResponse) *SetupTaskResponse {
		if v == nil {
			return nil
		}
		return v.SetupTask
	}).(SetupTaskResponsePtrOutput)
}

// Counts of various compute node states on the cluster.
type NodeStateCountsResponse struct {
	IdleNodeCount      int `pulumi:"idleNodeCount"`
	LeavingNodeCount   int `pulumi:"leavingNodeCount"`
	PreparingNodeCount int `pulumi:"preparingNodeCount"`
	RunningNodeCount   int `pulumi:"runningNodeCount"`
	UnusableNodeCount  int `pulumi:"unusableNodeCount"`
}

// NodeStateCountsResponseInput is an input type that accepts NodeStateCountsResponseArgs and NodeStateCountsResponseOutput values.
// You can construct a concrete instance of `NodeStateCountsResponseInput` via:
//
//          NodeStateCountsResponseArgs{...}
type NodeStateCountsResponseInput interface {
	pulumi.Input

	ToNodeStateCountsResponseOutput() NodeStateCountsResponseOutput
	ToNodeStateCountsResponseOutputWithContext(context.Context) NodeStateCountsResponseOutput
}

// Counts of various compute node states on the cluster.
type NodeStateCountsResponseArgs struct {
	IdleNodeCount      pulumi.IntInput `pulumi:"idleNodeCount"`
	LeavingNodeCount   pulumi.IntInput `pulumi:"leavingNodeCount"`
	PreparingNodeCount pulumi.IntInput `pulumi:"preparingNodeCount"`
	RunningNodeCount   pulumi.IntInput `pulumi:"runningNodeCount"`
	UnusableNodeCount  pulumi.IntInput `pulumi:"unusableNodeCount"`
}

func (NodeStateCountsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeStateCountsResponse)(nil)).Elem()
}

func (i NodeStateCountsResponseArgs) ToNodeStateCountsResponseOutput() NodeStateCountsResponseOutput {
	return i.ToNodeStateCountsResponseOutputWithContext(context.Background())
}

func (i NodeStateCountsResponseArgs) ToNodeStateCountsResponseOutputWithContext(ctx context.Context) NodeStateCountsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeStateCountsResponseOutput)
}

func (i NodeStateCountsResponseArgs) ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput {
	return i.ToNodeStateCountsResponsePtrOutputWithContext(context.Background())
}

func (i NodeStateCountsResponseArgs) ToNodeStateCountsResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeStateCountsResponseOutput).ToNodeStateCountsResponsePtrOutputWithContext(ctx)
}

// NodeStateCountsResponsePtrInput is an input type that accepts NodeStateCountsResponseArgs, NodeStateCountsResponsePtr and NodeStateCountsResponsePtrOutput values.
// You can construct a concrete instance of `NodeStateCountsResponsePtrInput` via:
//
//          NodeStateCountsResponseArgs{...}
//
//  or:
//
//          nil
type NodeStateCountsResponsePtrInput interface {
	pulumi.Input

	ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput
	ToNodeStateCountsResponsePtrOutputWithContext(context.Context) NodeStateCountsResponsePtrOutput
}

type nodeStateCountsResponsePtrType NodeStateCountsResponseArgs

func NodeStateCountsResponsePtr(v *NodeStateCountsResponseArgs) NodeStateCountsResponsePtrInput {
	return (*nodeStateCountsResponsePtrType)(v)
}

func (*nodeStateCountsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeStateCountsResponse)(nil)).Elem()
}

func (i *nodeStateCountsResponsePtrType) ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput {
	return i.ToNodeStateCountsResponsePtrOutputWithContext(context.Background())
}

func (i *nodeStateCountsResponsePtrType) ToNodeStateCountsResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeStateCountsResponsePtrOutput)
}

// Counts of various compute node states on the cluster.
type NodeStateCountsResponseOutput struct{ *pulumi.OutputState }

func (NodeStateCountsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeStateCountsResponse)(nil)).Elem()
}

func (o NodeStateCountsResponseOutput) ToNodeStateCountsResponseOutput() NodeStateCountsResponseOutput {
	return o
}

func (o NodeStateCountsResponseOutput) ToNodeStateCountsResponseOutputWithContext(ctx context.Context) NodeStateCountsResponseOutput {
	return o
}

func (o NodeStateCountsResponseOutput) ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput {
	return o.ToNodeStateCountsResponsePtrOutputWithContext(context.Background())
}

func (o NodeStateCountsResponseOutput) ToNodeStateCountsResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsResponsePtrOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) *NodeStateCountsResponse {
		return &v
	}).(NodeStateCountsResponsePtrOutput)
}
func (o NodeStateCountsResponseOutput) IdleNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.IdleNodeCount }).(pulumi.IntOutput)
}

func (o NodeStateCountsResponseOutput) LeavingNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.LeavingNodeCount }).(pulumi.IntOutput)
}

func (o NodeStateCountsResponseOutput) PreparingNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.PreparingNodeCount }).(pulumi.IntOutput)
}

func (o NodeStateCountsResponseOutput) RunningNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.RunningNodeCount }).(pulumi.IntOutput)
}

func (o NodeStateCountsResponseOutput) UnusableNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodeStateCountsResponse) int { return v.UnusableNodeCount }).(pulumi.IntOutput)
}

type NodeStateCountsResponsePtrOutput struct{ *pulumi.OutputState }

func (NodeStateCountsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeStateCountsResponse)(nil)).Elem()
}

func (o NodeStateCountsResponsePtrOutput) ToNodeStateCountsResponsePtrOutput() NodeStateCountsResponsePtrOutput {
	return o
}

func (o NodeStateCountsResponsePtrOutput) ToNodeStateCountsResponsePtrOutputWithContext(ctx context.Context) NodeStateCountsResponsePtrOutput {
	return o
}

func (o NodeStateCountsResponsePtrOutput) Elem() NodeStateCountsResponseOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) NodeStateCountsResponse { return *v }).(NodeStateCountsResponseOutput)
}

func (o NodeStateCountsResponsePtrOutput) IdleNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.IdleNodeCount
	}).(pulumi.IntPtrOutput)
}

func (o NodeStateCountsResponsePtrOutput) LeavingNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.LeavingNodeCount
	}).(pulumi.IntPtrOutput)
}

func (o NodeStateCountsResponsePtrOutput) PreparingNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.PreparingNodeCount
	}).(pulumi.IntPtrOutput)
}

func (o NodeStateCountsResponsePtrOutput) RunningNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.RunningNodeCount
	}).(pulumi.IntPtrOutput)
}

func (o NodeStateCountsResponsePtrOutput) UnusableNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeStateCountsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.UnusableNodeCount
	}).(pulumi.IntPtrOutput)
}

// Output directory for the job.
type OutputDirectory struct {
	// Default is true. If false, then the directory is not created and can be any directory path that the user specifies.
	CreateNew *bool `pulumi:"createNew"`
	// It will be available for the job as an environment variable under AZ_BATCHAI_OUTPUT_id.
	Id string `pulumi:"id"`
	// NOTE: This is an absolute path to prefix. E.g. $AZ_BATCHAI_MOUNT_ROOT/MyNFS/MyLogs.
	PathPrefix string `pulumi:"pathPrefix"`
	// The suffix path where the output directory will be created.
	PathSuffix *string `pulumi:"pathSuffix"`
	// Default value is Custom. The possible values are Model, Logs, Summary, and Custom. Users can use multiple enums for a single directory. Eg. outPutType='Model,Logs, Summary'
	Type *string `pulumi:"type"`
}

// OutputDirectoryInput is an input type that accepts OutputDirectoryArgs and OutputDirectoryOutput values.
// You can construct a concrete instance of `OutputDirectoryInput` via:
//
//          OutputDirectoryArgs{...}
type OutputDirectoryInput interface {
	pulumi.Input

	ToOutputDirectoryOutput() OutputDirectoryOutput
	ToOutputDirectoryOutputWithContext(context.Context) OutputDirectoryOutput
}

// Output directory for the job.
type OutputDirectoryArgs struct {
	// Default is true. If false, then the directory is not created and can be any directory path that the user specifies.
	CreateNew pulumi.BoolPtrInput `pulumi:"createNew"`
	// It will be available for the job as an environment variable under AZ_BATCHAI_OUTPUT_id.
	Id pulumi.StringInput `pulumi:"id"`
	// NOTE: This is an absolute path to prefix. E.g. $AZ_BATCHAI_MOUNT_ROOT/MyNFS/MyLogs.
	PathPrefix pulumi.StringInput `pulumi:"pathPrefix"`
	// The suffix path where the output directory will be created.
	PathSuffix pulumi.StringPtrInput `pulumi:"pathSuffix"`
	// Default value is Custom. The possible values are Model, Logs, Summary, and Custom. Users can use multiple enums for a single directory. Eg. outPutType='Model,Logs, Summary'
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (OutputDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputDirectory)(nil)).Elem()
}

func (i OutputDirectoryArgs) ToOutputDirectoryOutput() OutputDirectoryOutput {
	return i.ToOutputDirectoryOutputWithContext(context.Background())
}

func (i OutputDirectoryArgs) ToOutputDirectoryOutputWithContext(ctx context.Context) OutputDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputDirectoryOutput)
}

// OutputDirectoryArrayInput is an input type that accepts OutputDirectoryArray and OutputDirectoryArrayOutput values.
// You can construct a concrete instance of `OutputDirectoryArrayInput` via:
//
//          OutputDirectoryArray{ OutputDirectoryArgs{...} }
type OutputDirectoryArrayInput interface {
	pulumi.Input

	ToOutputDirectoryArrayOutput() OutputDirectoryArrayOutput
	ToOutputDirectoryArrayOutputWithContext(context.Context) OutputDirectoryArrayOutput
}

type OutputDirectoryArray []OutputDirectoryInput

func (OutputDirectoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutputDirectory)(nil)).Elem()
}

func (i OutputDirectoryArray) ToOutputDirectoryArrayOutput() OutputDirectoryArrayOutput {
	return i.ToOutputDirectoryArrayOutputWithContext(context.Background())
}

func (i OutputDirectoryArray) ToOutputDirectoryArrayOutputWithContext(ctx context.Context) OutputDirectoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputDirectoryArrayOutput)
}

// Output directory for the job.
type OutputDirectoryOutput struct{ *pulumi.OutputState }

func (OutputDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputDirectory)(nil)).Elem()
}

func (o OutputDirectoryOutput) ToOutputDirectoryOutput() OutputDirectoryOutput {
	return o
}

func (o OutputDirectoryOutput) ToOutputDirectoryOutputWithContext(ctx context.Context) OutputDirectoryOutput {
	return o
}

// Default is true. If false, then the directory is not created and can be any directory path that the user specifies.
func (o OutputDirectoryOutput) CreateNew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OutputDirectory) *bool { return v.CreateNew }).(pulumi.BoolPtrOutput)
}

// It will be available for the job as an environment variable under AZ_BATCHAI_OUTPUT_id.
func (o OutputDirectoryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OutputDirectory) string { return v.Id }).(pulumi.StringOutput)
}

// NOTE: This is an absolute path to prefix. E.g. $AZ_BATCHAI_MOUNT_ROOT/MyNFS/MyLogs.
func (o OutputDirectoryOutput) PathPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v OutputDirectory) string { return v.PathPrefix }).(pulumi.StringOutput)
}

// The suffix path where the output directory will be created.
func (o OutputDirectoryOutput) PathSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDirectory) *string { return v.PathSuffix }).(pulumi.StringPtrOutput)
}

// Default value is Custom. The possible values are Model, Logs, Summary, and Custom. Users can use multiple enums for a single directory. Eg. outPutType='Model,Logs, Summary'
func (o OutputDirectoryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDirectory) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type OutputDirectoryArrayOutput struct{ *pulumi.OutputState }

func (OutputDirectoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutputDirectory)(nil)).Elem()
}

func (o OutputDirectoryArrayOutput) ToOutputDirectoryArrayOutput() OutputDirectoryArrayOutput {
	return o
}

func (o OutputDirectoryArrayOutput) ToOutputDirectoryArrayOutputWithContext(ctx context.Context) OutputDirectoryArrayOutput {
	return o
}

func (o OutputDirectoryArrayOutput) Index(i pulumi.IntInput) OutputDirectoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutputDirectory {
		return vs[0].([]OutputDirectory)[vs[1].(int)]
	}).(OutputDirectoryOutput)
}

// Output directory for the job.
type OutputDirectoryResponse struct {
	// Default is true. If false, then the directory is not created and can be any directory path that the user specifies.
	CreateNew *bool `pulumi:"createNew"`
	// It will be available for the job as an environment variable under AZ_BATCHAI_OUTPUT_id.
	Id string `pulumi:"id"`
	// NOTE: This is an absolute path to prefix. E.g. $AZ_BATCHAI_MOUNT_ROOT/MyNFS/MyLogs.
	PathPrefix string `pulumi:"pathPrefix"`
	// The suffix path where the output directory will be created.
	PathSuffix *string `pulumi:"pathSuffix"`
	// Default value is Custom. The possible values are Model, Logs, Summary, and Custom. Users can use multiple enums for a single directory. Eg. outPutType='Model,Logs, Summary'
	Type *string `pulumi:"type"`
}

// OutputDirectoryResponseInput is an input type that accepts OutputDirectoryResponseArgs and OutputDirectoryResponseOutput values.
// You can construct a concrete instance of `OutputDirectoryResponseInput` via:
//
//          OutputDirectoryResponseArgs{...}
type OutputDirectoryResponseInput interface {
	pulumi.Input

	ToOutputDirectoryResponseOutput() OutputDirectoryResponseOutput
	ToOutputDirectoryResponseOutputWithContext(context.Context) OutputDirectoryResponseOutput
}

// Output directory for the job.
type OutputDirectoryResponseArgs struct {
	// Default is true. If false, then the directory is not created and can be any directory path that the user specifies.
	CreateNew pulumi.BoolPtrInput `pulumi:"createNew"`
	// It will be available for the job as an environment variable under AZ_BATCHAI_OUTPUT_id.
	Id pulumi.StringInput `pulumi:"id"`
	// NOTE: This is an absolute path to prefix. E.g. $AZ_BATCHAI_MOUNT_ROOT/MyNFS/MyLogs.
	PathPrefix pulumi.StringInput `pulumi:"pathPrefix"`
	// The suffix path where the output directory will be created.
	PathSuffix pulumi.StringPtrInput `pulumi:"pathSuffix"`
	// Default value is Custom. The possible values are Model, Logs, Summary, and Custom. Users can use multiple enums for a single directory. Eg. outPutType='Model,Logs, Summary'
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (OutputDirectoryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputDirectoryResponse)(nil)).Elem()
}

func (i OutputDirectoryResponseArgs) ToOutputDirectoryResponseOutput() OutputDirectoryResponseOutput {
	return i.ToOutputDirectoryResponseOutputWithContext(context.Background())
}

func (i OutputDirectoryResponseArgs) ToOutputDirectoryResponseOutputWithContext(ctx context.Context) OutputDirectoryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputDirectoryResponseOutput)
}

// OutputDirectoryResponseArrayInput is an input type that accepts OutputDirectoryResponseArray and OutputDirectoryResponseArrayOutput values.
// You can construct a concrete instance of `OutputDirectoryResponseArrayInput` via:
//
//          OutputDirectoryResponseArray{ OutputDirectoryResponseArgs{...} }
type OutputDirectoryResponseArrayInput interface {
	pulumi.Input

	ToOutputDirectoryResponseArrayOutput() OutputDirectoryResponseArrayOutput
	ToOutputDirectoryResponseArrayOutputWithContext(context.Context) OutputDirectoryResponseArrayOutput
}

type OutputDirectoryResponseArray []OutputDirectoryResponseInput

func (OutputDirectoryResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutputDirectoryResponse)(nil)).Elem()
}

func (i OutputDirectoryResponseArray) ToOutputDirectoryResponseArrayOutput() OutputDirectoryResponseArrayOutput {
	return i.ToOutputDirectoryResponseArrayOutputWithContext(context.Background())
}

func (i OutputDirectoryResponseArray) ToOutputDirectoryResponseArrayOutputWithContext(ctx context.Context) OutputDirectoryResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputDirectoryResponseArrayOutput)
}

// Output directory for the job.
type OutputDirectoryResponseOutput struct{ *pulumi.OutputState }

func (OutputDirectoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputDirectoryResponse)(nil)).Elem()
}

func (o OutputDirectoryResponseOutput) ToOutputDirectoryResponseOutput() OutputDirectoryResponseOutput {
	return o
}

func (o OutputDirectoryResponseOutput) ToOutputDirectoryResponseOutputWithContext(ctx context.Context) OutputDirectoryResponseOutput {
	return o
}

// Default is true. If false, then the directory is not created and can be any directory path that the user specifies.
func (o OutputDirectoryResponseOutput) CreateNew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OutputDirectoryResponse) *bool { return v.CreateNew }).(pulumi.BoolPtrOutput)
}

// It will be available for the job as an environment variable under AZ_BATCHAI_OUTPUT_id.
func (o OutputDirectoryResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OutputDirectoryResponse) string { return v.Id }).(pulumi.StringOutput)
}

// NOTE: This is an absolute path to prefix. E.g. $AZ_BATCHAI_MOUNT_ROOT/MyNFS/MyLogs.
func (o OutputDirectoryResponseOutput) PathPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v OutputDirectoryResponse) string { return v.PathPrefix }).(pulumi.StringOutput)
}

// The suffix path where the output directory will be created.
func (o OutputDirectoryResponseOutput) PathSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDirectoryResponse) *string { return v.PathSuffix }).(pulumi.StringPtrOutput)
}

// Default value is Custom. The possible values are Model, Logs, Summary, and Custom. Users can use multiple enums for a single directory. Eg. outPutType='Model,Logs, Summary'
func (o OutputDirectoryResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDirectoryResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type OutputDirectoryResponseArrayOutput struct{ *pulumi.OutputState }

func (OutputDirectoryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutputDirectoryResponse)(nil)).Elem()
}

func (o OutputDirectoryResponseArrayOutput) ToOutputDirectoryResponseArrayOutput() OutputDirectoryResponseArrayOutput {
	return o
}

func (o OutputDirectoryResponseArrayOutput) ToOutputDirectoryResponseArrayOutputWithContext(ctx context.Context) OutputDirectoryResponseArrayOutput {
	return o
}

func (o OutputDirectoryResponseArrayOutput) Index(i pulumi.IntInput) OutputDirectoryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutputDirectoryResponse {
		return vs[0].([]OutputDirectoryResponse)[vs[1].(int)]
	}).(OutputDirectoryResponseOutput)
}

// Credentials to access a container image in a private repository.
type PrivateRegistryCredentials struct {
	// One of password or passwordSecretReference must be specified.
	Password *string `pulumi:"password"`
	// Users can store their secrets in Azure KeyVault and pass it to the Batch AI Service to integrate with KeyVault. One of password or passwordSecretReference must be specified.
	PasswordSecretReference *KeyVaultSecretReference `pulumi:"passwordSecretReference"`
	Username                string                   `pulumi:"username"`
}

// PrivateRegistryCredentialsInput is an input type that accepts PrivateRegistryCredentialsArgs and PrivateRegistryCredentialsOutput values.
// You can construct a concrete instance of `PrivateRegistryCredentialsInput` via:
//
//          PrivateRegistryCredentialsArgs{...}
type PrivateRegistryCredentialsInput interface {
	pulumi.Input

	ToPrivateRegistryCredentialsOutput() PrivateRegistryCredentialsOutput
	ToPrivateRegistryCredentialsOutputWithContext(context.Context) PrivateRegistryCredentialsOutput
}

// Credentials to access a container image in a private repository.
type PrivateRegistryCredentialsArgs struct {
	// One of password or passwordSecretReference must be specified.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Users can store their secrets in Azure KeyVault and pass it to the Batch AI Service to integrate with KeyVault. One of password or passwordSecretReference must be specified.
	PasswordSecretReference KeyVaultSecretReferencePtrInput `pulumi:"passwordSecretReference"`
	Username                pulumi.StringInput              `pulumi:"username"`
}

func (PrivateRegistryCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateRegistryCredentials)(nil)).Elem()
}

func (i PrivateRegistryCredentialsArgs) ToPrivateRegistryCredentialsOutput() PrivateRegistryCredentialsOutput {
	return i.ToPrivateRegistryCredentialsOutputWithContext(context.Background())
}

func (i PrivateRegistryCredentialsArgs) ToPrivateRegistryCredentialsOutputWithContext(ctx context.Context) PrivateRegistryCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateRegistryCredentialsOutput)
}

func (i PrivateRegistryCredentialsArgs) ToPrivateRegistryCredentialsPtrOutput() PrivateRegistryCredentialsPtrOutput {
	return i.ToPrivateRegistryCredentialsPtrOutputWithContext(context.Background())
}

func (i PrivateRegistryCredentialsArgs) ToPrivateRegistryCredentialsPtrOutputWithContext(ctx context.Context) PrivateRegistryCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateRegistryCredentialsOutput).ToPrivateRegistryCredentialsPtrOutputWithContext(ctx)
}

// PrivateRegistryCredentialsPtrInput is an input type that accepts PrivateRegistryCredentialsArgs, PrivateRegistryCredentialsPtr and PrivateRegistryCredentialsPtrOutput values.
// You can construct a concrete instance of `PrivateRegistryCredentialsPtrInput` via:
//
//          PrivateRegistryCredentialsArgs{...}
//
//  or:
//
//          nil
type PrivateRegistryCredentialsPtrInput interface {
	pulumi.Input

	ToPrivateRegistryCredentialsPtrOutput() PrivateRegistryCredentialsPtrOutput
	ToPrivateRegistryCredentialsPtrOutputWithContext(context.Context) PrivateRegistryCredentialsPtrOutput
}

type privateRegistryCredentialsPtrType PrivateRegistryCredentialsArgs

func PrivateRegistryCredentialsPtr(v *PrivateRegistryCredentialsArgs) PrivateRegistryCredentialsPtrInput {
	return (*privateRegistryCredentialsPtrType)(v)
}

func (*privateRegistryCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateRegistryCredentials)(nil)).Elem()
}

func (i *privateRegistryCredentialsPtrType) ToPrivateRegistryCredentialsPtrOutput() PrivateRegistryCredentialsPtrOutput {
	return i.ToPrivateRegistryCredentialsPtrOutputWithContext(context.Background())
}

func (i *privateRegistryCredentialsPtrType) ToPrivateRegistryCredentialsPtrOutputWithContext(ctx context.Context) PrivateRegistryCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateRegistryCredentialsPtrOutput)
}

// Credentials to access a container image in a private repository.
type PrivateRegistryCredentialsOutput struct{ *pulumi.OutputState }

func (PrivateRegistryCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateRegistryCredentials)(nil)).Elem()
}

func (o PrivateRegistryCredentialsOutput) ToPrivateRegistryCredentialsOutput() PrivateRegistryCredentialsOutput {
	return o
}

func (o PrivateRegistryCredentialsOutput) ToPrivateRegistryCredentialsOutputWithContext(ctx context.Context) PrivateRegistryCredentialsOutput {
	return o
}

func (o PrivateRegistryCredentialsOutput) ToPrivateRegistryCredentialsPtrOutput() PrivateRegistryCredentialsPtrOutput {
	return o.ToPrivateRegistryCredentialsPtrOutputWithContext(context.Background())
}

func (o PrivateRegistryCredentialsOutput) ToPrivateRegistryCredentialsPtrOutputWithContext(ctx context.Context) PrivateRegistryCredentialsPtrOutput {
	return o.ApplyT(func(v PrivateRegistryCredentials) *PrivateRegistryCredentials {
		return &v
	}).(PrivateRegistryCredentialsPtrOutput)
}

// One of password or passwordSecretReference must be specified.
func (o PrivateRegistryCredentialsOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateRegistryCredentials) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Users can store their secrets in Azure KeyVault and pass it to the Batch AI Service to integrate with KeyVault. One of password or passwordSecretReference must be specified.
func (o PrivateRegistryCredentialsOutput) PasswordSecretReference() KeyVaultSecretReferencePtrOutput {
	return o.ApplyT(func(v PrivateRegistryCredentials) *KeyVaultSecretReference { return v.PasswordSecretReference }).(KeyVaultSecretReferencePtrOutput)
}

func (o PrivateRegistryCredentialsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateRegistryCredentials) string { return v.Username }).(pulumi.StringOutput)
}

type PrivateRegistryCredentialsPtrOutput struct{ *pulumi.OutputState }

func (PrivateRegistryCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateRegistryCredentials)(nil)).Elem()
}

func (o PrivateRegistryCredentialsPtrOutput) ToPrivateRegistryCredentialsPtrOutput() PrivateRegistryCredentialsPtrOutput {
	return o
}

func (o PrivateRegistryCredentialsPtrOutput) ToPrivateRegistryCredentialsPtrOutputWithContext(ctx context.Context) PrivateRegistryCredentialsPtrOutput {
	return o
}

func (o PrivateRegistryCredentialsPtrOutput) Elem() PrivateRegistryCredentialsOutput {
	return o.ApplyT(func(v *PrivateRegistryCredentials) PrivateRegistryCredentials { return *v }).(PrivateRegistryCredentialsOutput)
}

// One of password or passwordSecretReference must be specified.
func (o PrivateRegistryCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateRegistryCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Users can store their secrets in Azure KeyVault and pass it to the Batch AI Service to integrate with KeyVault. One of password or passwordSecretReference must be specified.
func (o PrivateRegistryCredentialsPtrOutput) PasswordSecretReference() KeyVaultSecretReferencePtrOutput {
	return o.ApplyT(func(v *PrivateRegistryCredentials) *KeyVaultSecretReference {
		if v == nil {
			return nil
		}
		return v.PasswordSecretReference
	}).(KeyVaultSecretReferencePtrOutput)
}

func (o PrivateRegistryCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateRegistryCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// Credentials to access a container image in a private repository.
type PrivateRegistryCredentialsResponse struct {
	// One of password or passwordSecretReference must be specified.
	Password *string `pulumi:"password"`
	// Users can store their secrets in Azure KeyVault and pass it to the Batch AI Service to integrate with KeyVault. One of password or passwordSecretReference must be specified.
	PasswordSecretReference *KeyVaultSecretReferenceResponse `pulumi:"passwordSecretReference"`
	Username                string                           `pulumi:"username"`
}

// PrivateRegistryCredentialsResponseInput is an input type that accepts PrivateRegistryCredentialsResponseArgs and PrivateRegistryCredentialsResponseOutput values.
// You can construct a concrete instance of `PrivateRegistryCredentialsResponseInput` via:
//
//          PrivateRegistryCredentialsResponseArgs{...}
type PrivateRegistryCredentialsResponseInput interface {
	pulumi.Input

	ToPrivateRegistryCredentialsResponseOutput() PrivateRegistryCredentialsResponseOutput
	ToPrivateRegistryCredentialsResponseOutputWithContext(context.Context) PrivateRegistryCredentialsResponseOutput
}

// Credentials to access a container image in a private repository.
type PrivateRegistryCredentialsResponseArgs struct {
	// One of password or passwordSecretReference must be specified.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Users can store their secrets in Azure KeyVault and pass it to the Batch AI Service to integrate with KeyVault. One of password or passwordSecretReference must be specified.
	PasswordSecretReference KeyVaultSecretReferenceResponsePtrInput `pulumi:"passwordSecretReference"`
	Username                pulumi.StringInput                      `pulumi:"username"`
}

func (PrivateRegistryCredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateRegistryCredentialsResponse)(nil)).Elem()
}

func (i PrivateRegistryCredentialsResponseArgs) ToPrivateRegistryCredentialsResponseOutput() PrivateRegistryCredentialsResponseOutput {
	return i.ToPrivateRegistryCredentialsResponseOutputWithContext(context.Background())
}

func (i PrivateRegistryCredentialsResponseArgs) ToPrivateRegistryCredentialsResponseOutputWithContext(ctx context.Context) PrivateRegistryCredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateRegistryCredentialsResponseOutput)
}

func (i PrivateRegistryCredentialsResponseArgs) ToPrivateRegistryCredentialsResponsePtrOutput() PrivateRegistryCredentialsResponsePtrOutput {
	return i.ToPrivateRegistryCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i PrivateRegistryCredentialsResponseArgs) ToPrivateRegistryCredentialsResponsePtrOutputWithContext(ctx context.Context) PrivateRegistryCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateRegistryCredentialsResponseOutput).ToPrivateRegistryCredentialsResponsePtrOutputWithContext(ctx)
}

// PrivateRegistryCredentialsResponsePtrInput is an input type that accepts PrivateRegistryCredentialsResponseArgs, PrivateRegistryCredentialsResponsePtr and PrivateRegistryCredentialsResponsePtrOutput values.
// You can construct a concrete instance of `PrivateRegistryCredentialsResponsePtrInput` via:
//
//          PrivateRegistryCredentialsResponseArgs{...}
//
//  or:
//
//          nil
type PrivateRegistryCredentialsResponsePtrInput interface {
	pulumi.Input

	ToPrivateRegistryCredentialsResponsePtrOutput() PrivateRegistryCredentialsResponsePtrOutput
	ToPrivateRegistryCredentialsResponsePtrOutputWithContext(context.Context) PrivateRegistryCredentialsResponsePtrOutput
}

type privateRegistryCredentialsResponsePtrType PrivateRegistryCredentialsResponseArgs

func PrivateRegistryCredentialsResponsePtr(v *PrivateRegistryCredentialsResponseArgs) PrivateRegistryCredentialsResponsePtrInput {
	return (*privateRegistryCredentialsResponsePtrType)(v)
}

func (*privateRegistryCredentialsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateRegistryCredentialsResponse)(nil)).Elem()
}

func (i *privateRegistryCredentialsResponsePtrType) ToPrivateRegistryCredentialsResponsePtrOutput() PrivateRegistryCredentialsResponsePtrOutput {
	return i.ToPrivateRegistryCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i *privateRegistryCredentialsResponsePtrType) ToPrivateRegistryCredentialsResponsePtrOutputWithContext(ctx context.Context) PrivateRegistryCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateRegistryCredentialsResponsePtrOutput)
}

// Credentials to access a container image in a private repository.
type PrivateRegistryCredentialsResponseOutput struct{ *pulumi.OutputState }

func (PrivateRegistryCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateRegistryCredentialsResponse)(nil)).Elem()
}

func (o PrivateRegistryCredentialsResponseOutput) ToPrivateRegistryCredentialsResponseOutput() PrivateRegistryCredentialsResponseOutput {
	return o
}

func (o PrivateRegistryCredentialsResponseOutput) ToPrivateRegistryCredentialsResponseOutputWithContext(ctx context.Context) PrivateRegistryCredentialsResponseOutput {
	return o
}

func (o PrivateRegistryCredentialsResponseOutput) ToPrivateRegistryCredentialsResponsePtrOutput() PrivateRegistryCredentialsResponsePtrOutput {
	return o.ToPrivateRegistryCredentialsResponsePtrOutputWithContext(context.Background())
}

func (o PrivateRegistryCredentialsResponseOutput) ToPrivateRegistryCredentialsResponsePtrOutputWithContext(ctx context.Context) PrivateRegistryCredentialsResponsePtrOutput {
	return o.ApplyT(func(v PrivateRegistryCredentialsResponse) *PrivateRegistryCredentialsResponse {
		return &v
	}).(PrivateRegistryCredentialsResponsePtrOutput)
}

// One of password or passwordSecretReference must be specified.
func (o PrivateRegistryCredentialsResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateRegistryCredentialsResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Users can store their secrets in Azure KeyVault and pass it to the Batch AI Service to integrate with KeyVault. One of password or passwordSecretReference must be specified.
func (o PrivateRegistryCredentialsResponseOutput) PasswordSecretReference() KeyVaultSecretReferenceResponsePtrOutput {
	return o.ApplyT(func(v PrivateRegistryCredentialsResponse) *KeyVaultSecretReferenceResponse {
		return v.PasswordSecretReference
	}).(KeyVaultSecretReferenceResponsePtrOutput)
}

func (o PrivateRegistryCredentialsResponseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateRegistryCredentialsResponse) string { return v.Username }).(pulumi.StringOutput)
}

type PrivateRegistryCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateRegistryCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateRegistryCredentialsResponse)(nil)).Elem()
}

func (o PrivateRegistryCredentialsResponsePtrOutput) ToPrivateRegistryCredentialsResponsePtrOutput() PrivateRegistryCredentialsResponsePtrOutput {
	return o
}

func (o PrivateRegistryCredentialsResponsePtrOutput) ToPrivateRegistryCredentialsResponsePtrOutputWithContext(ctx context.Context) PrivateRegistryCredentialsResponsePtrOutput {
	return o
}

func (o PrivateRegistryCredentialsResponsePtrOutput) Elem() PrivateRegistryCredentialsResponseOutput {
	return o.ApplyT(func(v *PrivateRegistryCredentialsResponse) PrivateRegistryCredentialsResponse { return *v }).(PrivateRegistryCredentialsResponseOutput)
}

// One of password or passwordSecretReference must be specified.
func (o PrivateRegistryCredentialsResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateRegistryCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Users can store their secrets in Azure KeyVault and pass it to the Batch AI Service to integrate with KeyVault. One of password or passwordSecretReference must be specified.
func (o PrivateRegistryCredentialsResponsePtrOutput) PasswordSecretReference() KeyVaultSecretReferenceResponsePtrOutput {
	return o.ApplyT(func(v *PrivateRegistryCredentialsResponse) *KeyVaultSecretReferenceResponse {
		if v == nil {
			return nil
		}
		return v.PasswordSecretReference
	}).(KeyVaultSecretReferenceResponsePtrOutput)
}

func (o PrivateRegistryCredentialsResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateRegistryCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// Contains remote login details to SSH/RDP to a compute node in cluster.
type RemoteLoginInformationResponse struct {
	// ip address
	IpAddress string `pulumi:"ipAddress"`
	// Id of the compute node
	NodeId string  `pulumi:"nodeId"`
	Port   float64 `pulumi:"port"`
}

// RemoteLoginInformationResponseInput is an input type that accepts RemoteLoginInformationResponseArgs and RemoteLoginInformationResponseOutput values.
// You can construct a concrete instance of `RemoteLoginInformationResponseInput` via:
//
//          RemoteLoginInformationResponseArgs{...}
type RemoteLoginInformationResponseInput interface {
	pulumi.Input

	ToRemoteLoginInformationResponseOutput() RemoteLoginInformationResponseOutput
	ToRemoteLoginInformationResponseOutputWithContext(context.Context) RemoteLoginInformationResponseOutput
}

// Contains remote login details to SSH/RDP to a compute node in cluster.
type RemoteLoginInformationResponseArgs struct {
	// ip address
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Id of the compute node
	NodeId pulumi.StringInput  `pulumi:"nodeId"`
	Port   pulumi.Float64Input `pulumi:"port"`
}

func (RemoteLoginInformationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteLoginInformationResponse)(nil)).Elem()
}

func (i RemoteLoginInformationResponseArgs) ToRemoteLoginInformationResponseOutput() RemoteLoginInformationResponseOutput {
	return i.ToRemoteLoginInformationResponseOutputWithContext(context.Background())
}

func (i RemoteLoginInformationResponseArgs) ToRemoteLoginInformationResponseOutputWithContext(ctx context.Context) RemoteLoginInformationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteLoginInformationResponseOutput)
}

// RemoteLoginInformationResponseArrayInput is an input type that accepts RemoteLoginInformationResponseArray and RemoteLoginInformationResponseArrayOutput values.
// You can construct a concrete instance of `RemoteLoginInformationResponseArrayInput` via:
//
//          RemoteLoginInformationResponseArray{ RemoteLoginInformationResponseArgs{...} }
type RemoteLoginInformationResponseArrayInput interface {
	pulumi.Input

	ToRemoteLoginInformationResponseArrayOutput() RemoteLoginInformationResponseArrayOutput
	ToRemoteLoginInformationResponseArrayOutputWithContext(context.Context) RemoteLoginInformationResponseArrayOutput
}

type RemoteLoginInformationResponseArray []RemoteLoginInformationResponseInput

func (RemoteLoginInformationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RemoteLoginInformationResponse)(nil)).Elem()
}

func (i RemoteLoginInformationResponseArray) ToRemoteLoginInformationResponseArrayOutput() RemoteLoginInformationResponseArrayOutput {
	return i.ToRemoteLoginInformationResponseArrayOutputWithContext(context.Background())
}

func (i RemoteLoginInformationResponseArray) ToRemoteLoginInformationResponseArrayOutputWithContext(ctx context.Context) RemoteLoginInformationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteLoginInformationResponseArrayOutput)
}

// Contains remote login details to SSH/RDP to a compute node in cluster.
type RemoteLoginInformationResponseOutput struct{ *pulumi.OutputState }

func (RemoteLoginInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteLoginInformationResponse)(nil)).Elem()
}

func (o RemoteLoginInformationResponseOutput) ToRemoteLoginInformationResponseOutput() RemoteLoginInformationResponseOutput {
	return o
}

func (o RemoteLoginInformationResponseOutput) ToRemoteLoginInformationResponseOutputWithContext(ctx context.Context) RemoteLoginInformationResponseOutput {
	return o
}

// ip address
func (o RemoteLoginInformationResponseOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteLoginInformationResponse) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Id of the compute node
func (o RemoteLoginInformationResponseOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteLoginInformationResponse) string { return v.NodeId }).(pulumi.StringOutput)
}

func (o RemoteLoginInformationResponseOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v RemoteLoginInformationResponse) float64 { return v.Port }).(pulumi.Float64Output)
}

type RemoteLoginInformationResponseArrayOutput struct{ *pulumi.OutputState }

func (RemoteLoginInformationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RemoteLoginInformationResponse)(nil)).Elem()
}

func (o RemoteLoginInformationResponseArrayOutput) ToRemoteLoginInformationResponseArrayOutput() RemoteLoginInformationResponseArrayOutput {
	return o
}

func (o RemoteLoginInformationResponseArrayOutput) ToRemoteLoginInformationResponseArrayOutputWithContext(ctx context.Context) RemoteLoginInformationResponseArrayOutput {
	return o
}

func (o RemoteLoginInformationResponseArrayOutput) Index(i pulumi.IntInput) RemoteLoginInformationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RemoteLoginInformationResponse {
		return vs[0].([]RemoteLoginInformationResponse)[vs[1].(int)]
	}).(RemoteLoginInformationResponseOutput)
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceId struct {
	// The ID of the resource
	Id string `pulumi:"id"`
}

// ResourceIdInput is an input type that accepts ResourceIdArgs and ResourceIdOutput values.
// You can construct a concrete instance of `ResourceIdInput` via:
//
//          ResourceIdArgs{...}
type ResourceIdInput interface {
	pulumi.Input

	ToResourceIdOutput() ResourceIdOutput
	ToResourceIdOutputWithContext(context.Context) ResourceIdOutput
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdArgs struct {
	// The ID of the resource
	Id pulumi.StringInput `pulumi:"id"`
}

func (ResourceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceId)(nil)).Elem()
}

func (i ResourceIdArgs) ToResourceIdOutput() ResourceIdOutput {
	return i.ToResourceIdOutputWithContext(context.Background())
}

func (i ResourceIdArgs) ToResourceIdOutputWithContext(ctx context.Context) ResourceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdOutput)
}

func (i ResourceIdArgs) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return i.ToResourceIdPtrOutputWithContext(context.Background())
}

func (i ResourceIdArgs) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdOutput).ToResourceIdPtrOutputWithContext(ctx)
}

// ResourceIdPtrInput is an input type that accepts ResourceIdArgs, ResourceIdPtr and ResourceIdPtrOutput values.
// You can construct a concrete instance of `ResourceIdPtrInput` via:
//
//          ResourceIdArgs{...}
//
//  or:
//
//          nil
type ResourceIdPtrInput interface {
	pulumi.Input

	ToResourceIdPtrOutput() ResourceIdPtrOutput
	ToResourceIdPtrOutputWithContext(context.Context) ResourceIdPtrOutput
}

type resourceIdPtrType ResourceIdArgs

func ResourceIdPtr(v *ResourceIdArgs) ResourceIdPtrInput {
	return (*resourceIdPtrType)(v)
}

func (*resourceIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceId)(nil)).Elem()
}

func (i *resourceIdPtrType) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return i.ToResourceIdPtrOutputWithContext(context.Background())
}

func (i *resourceIdPtrType) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdPtrOutput)
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdOutput struct{ *pulumi.OutputState }

func (ResourceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceId)(nil)).Elem()
}

func (o ResourceIdOutput) ToResourceIdOutput() ResourceIdOutput {
	return o
}

func (o ResourceIdOutput) ToResourceIdOutputWithContext(ctx context.Context) ResourceIdOutput {
	return o
}

func (o ResourceIdOutput) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return o.ToResourceIdPtrOutputWithContext(context.Background())
}

func (o ResourceIdOutput) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return o.ApplyT(func(v ResourceId) *ResourceId {
		return &v
	}).(ResourceIdPtrOutput)
}

// The ID of the resource
func (o ResourceIdOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceId) string { return v.Id }).(pulumi.StringOutput)
}

type ResourceIdPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceId)(nil)).Elem()
}

func (o ResourceIdPtrOutput) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return o
}

func (o ResourceIdPtrOutput) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return o
}

func (o ResourceIdPtrOutput) Elem() ResourceIdOutput {
	return o.ApplyT(func(v *ResourceId) ResourceId { return *v }).(ResourceIdOutput)
}

// The ID of the resource
func (o ResourceIdPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceId) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdResponse struct {
	// The ID of the resource
	Id string `pulumi:"id"`
}

// ResourceIdResponseInput is an input type that accepts ResourceIdResponseArgs and ResourceIdResponseOutput values.
// You can construct a concrete instance of `ResourceIdResponseInput` via:
//
//          ResourceIdResponseArgs{...}
type ResourceIdResponseInput interface {
	pulumi.Input

	ToResourceIdResponseOutput() ResourceIdResponseOutput
	ToResourceIdResponseOutputWithContext(context.Context) ResourceIdResponseOutput
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdResponseArgs struct {
	// The ID of the resource
	Id pulumi.StringInput `pulumi:"id"`
}

func (ResourceIdResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdResponse)(nil)).Elem()
}

func (i ResourceIdResponseArgs) ToResourceIdResponseOutput() ResourceIdResponseOutput {
	return i.ToResourceIdResponseOutputWithContext(context.Background())
}

func (i ResourceIdResponseArgs) ToResourceIdResponseOutputWithContext(ctx context.Context) ResourceIdResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdResponseOutput)
}

func (i ResourceIdResponseArgs) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return i.ToResourceIdResponsePtrOutputWithContext(context.Background())
}

func (i ResourceIdResponseArgs) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdResponseOutput).ToResourceIdResponsePtrOutputWithContext(ctx)
}

// ResourceIdResponsePtrInput is an input type that accepts ResourceIdResponseArgs, ResourceIdResponsePtr and ResourceIdResponsePtrOutput values.
// You can construct a concrete instance of `ResourceIdResponsePtrInput` via:
//
//          ResourceIdResponseArgs{...}
//
//  or:
//
//          nil
type ResourceIdResponsePtrInput interface {
	pulumi.Input

	ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput
	ToResourceIdResponsePtrOutputWithContext(context.Context) ResourceIdResponsePtrOutput
}

type resourceIdResponsePtrType ResourceIdResponseArgs

func ResourceIdResponsePtr(v *ResourceIdResponseArgs) ResourceIdResponsePtrInput {
	return (*resourceIdResponsePtrType)(v)
}

func (*resourceIdResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdResponse)(nil)).Elem()
}

func (i *resourceIdResponsePtrType) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return i.ToResourceIdResponsePtrOutputWithContext(context.Background())
}

func (i *resourceIdResponsePtrType) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdResponsePtrOutput)
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdResponse)(nil)).Elem()
}

func (o ResourceIdResponseOutput) ToResourceIdResponseOutput() ResourceIdResponseOutput {
	return o
}

func (o ResourceIdResponseOutput) ToResourceIdResponseOutputWithContext(ctx context.Context) ResourceIdResponseOutput {
	return o
}

func (o ResourceIdResponseOutput) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return o.ToResourceIdResponsePtrOutputWithContext(context.Background())
}

func (o ResourceIdResponseOutput) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return o.ApplyT(func(v ResourceIdResponse) *ResourceIdResponse {
		return &v
	}).(ResourceIdResponsePtrOutput)
}

// The ID of the resource
func (o ResourceIdResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdResponse) string { return v.Id }).(pulumi.StringOutput)
}

type ResourceIdResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdResponse)(nil)).Elem()
}

func (o ResourceIdResponsePtrOutput) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return o
}

func (o ResourceIdResponsePtrOutput) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return o
}

func (o ResourceIdResponsePtrOutput) Elem() ResourceIdResponseOutput {
	return o.ApplyT(func(v *ResourceIdResponse) ResourceIdResponse { return *v }).(ResourceIdResponseOutput)
}

// The ID of the resource
func (o ResourceIdResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// At least one of manual or autoScale settings must be specified. Only one of manual or autoScale settings can be specified. If autoScale settings are specified, the system automatically scales the cluster up and down (within the supplied limits) based on the pending jobs on the cluster.
type ScaleSettings struct {
	// The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the pending and running jobs on the cluster.
	AutoScale *AutoScaleSettings `pulumi:"autoScale"`
	// Manual scale settings for the cluster.
	Manual *ManualScaleSettings `pulumi:"manual"`
}

// ScaleSettingsInput is an input type that accepts ScaleSettingsArgs and ScaleSettingsOutput values.
// You can construct a concrete instance of `ScaleSettingsInput` via:
//
//          ScaleSettingsArgs{...}
type ScaleSettingsInput interface {
	pulumi.Input

	ToScaleSettingsOutput() ScaleSettingsOutput
	ToScaleSettingsOutputWithContext(context.Context) ScaleSettingsOutput
}

// At least one of manual or autoScale settings must be specified. Only one of manual or autoScale settings can be specified. If autoScale settings are specified, the system automatically scales the cluster up and down (within the supplied limits) based on the pending jobs on the cluster.
type ScaleSettingsArgs struct {
	// The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the pending and running jobs on the cluster.
	AutoScale AutoScaleSettingsPtrInput `pulumi:"autoScale"`
	// Manual scale settings for the cluster.
	Manual ManualScaleSettingsPtrInput `pulumi:"manual"`
}

func (ScaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSettings)(nil)).Elem()
}

func (i ScaleSettingsArgs) ToScaleSettingsOutput() ScaleSettingsOutput {
	return i.ToScaleSettingsOutputWithContext(context.Background())
}

func (i ScaleSettingsArgs) ToScaleSettingsOutputWithContext(ctx context.Context) ScaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsOutput)
}

func (i ScaleSettingsArgs) ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput {
	return i.ToScaleSettingsPtrOutputWithContext(context.Background())
}

func (i ScaleSettingsArgs) ToScaleSettingsPtrOutputWithContext(ctx context.Context) ScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsOutput).ToScaleSettingsPtrOutputWithContext(ctx)
}

// ScaleSettingsPtrInput is an input type that accepts ScaleSettingsArgs, ScaleSettingsPtr and ScaleSettingsPtrOutput values.
// You can construct a concrete instance of `ScaleSettingsPtrInput` via:
//
//          ScaleSettingsArgs{...}
//
//  or:
//
//          nil
type ScaleSettingsPtrInput interface {
	pulumi.Input

	ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput
	ToScaleSettingsPtrOutputWithContext(context.Context) ScaleSettingsPtrOutput
}

type scaleSettingsPtrType ScaleSettingsArgs

func ScaleSettingsPtr(v *ScaleSettingsArgs) ScaleSettingsPtrInput {
	return (*scaleSettingsPtrType)(v)
}

func (*scaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSettings)(nil)).Elem()
}

func (i *scaleSettingsPtrType) ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput {
	return i.ToScaleSettingsPtrOutputWithContext(context.Background())
}

func (i *scaleSettingsPtrType) ToScaleSettingsPtrOutputWithContext(ctx context.Context) ScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsPtrOutput)
}

// At least one of manual or autoScale settings must be specified. Only one of manual or autoScale settings can be specified. If autoScale settings are specified, the system automatically scales the cluster up and down (within the supplied limits) based on the pending jobs on the cluster.
type ScaleSettingsOutput struct{ *pulumi.OutputState }

func (ScaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSettings)(nil)).Elem()
}

func (o ScaleSettingsOutput) ToScaleSettingsOutput() ScaleSettingsOutput {
	return o
}

func (o ScaleSettingsOutput) ToScaleSettingsOutputWithContext(ctx context.Context) ScaleSettingsOutput {
	return o
}

func (o ScaleSettingsOutput) ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput {
	return o.ToScaleSettingsPtrOutputWithContext(context.Background())
}

func (o ScaleSettingsOutput) ToScaleSettingsPtrOutputWithContext(ctx context.Context) ScaleSettingsPtrOutput {
	return o.ApplyT(func(v ScaleSettings) *ScaleSettings {
		return &v
	}).(ScaleSettingsPtrOutput)
}

// The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the pending and running jobs on the cluster.
func (o ScaleSettingsOutput) AutoScale() AutoScaleSettingsPtrOutput {
	return o.ApplyT(func(v ScaleSettings) *AutoScaleSettings { return v.AutoScale }).(AutoScaleSettingsPtrOutput)
}

// Manual scale settings for the cluster.
func (o ScaleSettingsOutput) Manual() ManualScaleSettingsPtrOutput {
	return o.ApplyT(func(v ScaleSettings) *ManualScaleSettings { return v.Manual }).(ManualScaleSettingsPtrOutput)
}

type ScaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (ScaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSettings)(nil)).Elem()
}

func (o ScaleSettingsPtrOutput) ToScaleSettingsPtrOutput() ScaleSettingsPtrOutput {
	return o
}

func (o ScaleSettingsPtrOutput) ToScaleSettingsPtrOutputWithContext(ctx context.Context) ScaleSettingsPtrOutput {
	return o
}

func (o ScaleSettingsPtrOutput) Elem() ScaleSettingsOutput {
	return o.ApplyT(func(v *ScaleSettings) ScaleSettings { return *v }).(ScaleSettingsOutput)
}

// The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the pending and running jobs on the cluster.
func (o ScaleSettingsPtrOutput) AutoScale() AutoScaleSettingsPtrOutput {
	return o.ApplyT(func(v *ScaleSettings) *AutoScaleSettings {
		if v == nil {
			return nil
		}
		return v.AutoScale
	}).(AutoScaleSettingsPtrOutput)
}

// Manual scale settings for the cluster.
func (o ScaleSettingsPtrOutput) Manual() ManualScaleSettingsPtrOutput {
	return o.ApplyT(func(v *ScaleSettings) *ManualScaleSettings {
		if v == nil {
			return nil
		}
		return v.Manual
	}).(ManualScaleSettingsPtrOutput)
}

// At least one of manual or autoScale settings must be specified. Only one of manual or autoScale settings can be specified. If autoScale settings are specified, the system automatically scales the cluster up and down (within the supplied limits) based on the pending jobs on the cluster.
type ScaleSettingsResponse struct {
	// The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the pending and running jobs on the cluster.
	AutoScale *AutoScaleSettingsResponse `pulumi:"autoScale"`
	// Manual scale settings for the cluster.
	Manual *ManualScaleSettingsResponse `pulumi:"manual"`
}

// ScaleSettingsResponseInput is an input type that accepts ScaleSettingsResponseArgs and ScaleSettingsResponseOutput values.
// You can construct a concrete instance of `ScaleSettingsResponseInput` via:
//
//          ScaleSettingsResponseArgs{...}
type ScaleSettingsResponseInput interface {
	pulumi.Input

	ToScaleSettingsResponseOutput() ScaleSettingsResponseOutput
	ToScaleSettingsResponseOutputWithContext(context.Context) ScaleSettingsResponseOutput
}

// At least one of manual or autoScale settings must be specified. Only one of manual or autoScale settings can be specified. If autoScale settings are specified, the system automatically scales the cluster up and down (within the supplied limits) based on the pending jobs on the cluster.
type ScaleSettingsResponseArgs struct {
	// The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the pending and running jobs on the cluster.
	AutoScale AutoScaleSettingsResponsePtrInput `pulumi:"autoScale"`
	// Manual scale settings for the cluster.
	Manual ManualScaleSettingsResponsePtrInput `pulumi:"manual"`
}

func (ScaleSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSettingsResponse)(nil)).Elem()
}

func (i ScaleSettingsResponseArgs) ToScaleSettingsResponseOutput() ScaleSettingsResponseOutput {
	return i.ToScaleSettingsResponseOutputWithContext(context.Background())
}

func (i ScaleSettingsResponseArgs) ToScaleSettingsResponseOutputWithContext(ctx context.Context) ScaleSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsResponseOutput)
}

func (i ScaleSettingsResponseArgs) ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput {
	return i.ToScaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ScaleSettingsResponseArgs) ToScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsResponseOutput).ToScaleSettingsResponsePtrOutputWithContext(ctx)
}

// ScaleSettingsResponsePtrInput is an input type that accepts ScaleSettingsResponseArgs, ScaleSettingsResponsePtr and ScaleSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ScaleSettingsResponsePtrInput` via:
//
//          ScaleSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ScaleSettingsResponsePtrInput interface {
	pulumi.Input

	ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput
	ToScaleSettingsResponsePtrOutputWithContext(context.Context) ScaleSettingsResponsePtrOutput
}

type scaleSettingsResponsePtrType ScaleSettingsResponseArgs

func ScaleSettingsResponsePtr(v *ScaleSettingsResponseArgs) ScaleSettingsResponsePtrInput {
	return (*scaleSettingsResponsePtrType)(v)
}

func (*scaleSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSettingsResponse)(nil)).Elem()
}

func (i *scaleSettingsResponsePtrType) ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput {
	return i.ToScaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *scaleSettingsResponsePtrType) ToScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSettingsResponsePtrOutput)
}

// At least one of manual or autoScale settings must be specified. Only one of manual or autoScale settings can be specified. If autoScale settings are specified, the system automatically scales the cluster up and down (within the supplied limits) based on the pending jobs on the cluster.
type ScaleSettingsResponseOutput struct{ *pulumi.OutputState }

func (ScaleSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSettingsResponse)(nil)).Elem()
}

func (o ScaleSettingsResponseOutput) ToScaleSettingsResponseOutput() ScaleSettingsResponseOutput {
	return o
}

func (o ScaleSettingsResponseOutput) ToScaleSettingsResponseOutputWithContext(ctx context.Context) ScaleSettingsResponseOutput {
	return o
}

func (o ScaleSettingsResponseOutput) ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput {
	return o.ToScaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ScaleSettingsResponseOutput) ToScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v ScaleSettingsResponse) *ScaleSettingsResponse {
		return &v
	}).(ScaleSettingsResponsePtrOutput)
}

// The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the pending and running jobs on the cluster.
func (o ScaleSettingsResponseOutput) AutoScale() AutoScaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v ScaleSettingsResponse) *AutoScaleSettingsResponse { return v.AutoScale }).(AutoScaleSettingsResponsePtrOutput)
}

// Manual scale settings for the cluster.
func (o ScaleSettingsResponseOutput) Manual() ManualScaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v ScaleSettingsResponse) *ManualScaleSettingsResponse { return v.Manual }).(ManualScaleSettingsResponsePtrOutput)
}

type ScaleSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ScaleSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSettingsResponse)(nil)).Elem()
}

func (o ScaleSettingsResponsePtrOutput) ToScaleSettingsResponsePtrOutput() ScaleSettingsResponsePtrOutput {
	return o
}

func (o ScaleSettingsResponsePtrOutput) ToScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ScaleSettingsResponsePtrOutput {
	return o
}

func (o ScaleSettingsResponsePtrOutput) Elem() ScaleSettingsResponseOutput {
	return o.ApplyT(func(v *ScaleSettingsResponse) ScaleSettingsResponse { return *v }).(ScaleSettingsResponseOutput)
}

// The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the pending and running jobs on the cluster.
func (o ScaleSettingsResponsePtrOutput) AutoScale() AutoScaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ScaleSettingsResponse) *AutoScaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoScale
	}).(AutoScaleSettingsResponsePtrOutput)
}

// Manual scale settings for the cluster.
func (o ScaleSettingsResponsePtrOutput) Manual() ManualScaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ScaleSettingsResponse) *ManualScaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Manual
	}).(ManualScaleSettingsResponsePtrOutput)
}

// Specifies a setup task which can be used to customize the compute nodes of the cluster.
type SetupTask struct {
	CommandLine          string               `pulumi:"commandLine"`
	EnvironmentVariables []EnvironmentSetting `pulumi:"environmentVariables"`
	RunElevated          *bool                `pulumi:"runElevated"`
	// The path where the Batch AI service will upload the stdout and stderror of setup task.
	StdOutErrPathPrefix string `pulumi:"stdOutErrPathPrefix"`
}

// SetupTaskInput is an input type that accepts SetupTaskArgs and SetupTaskOutput values.
// You can construct a concrete instance of `SetupTaskInput` via:
//
//          SetupTaskArgs{...}
type SetupTaskInput interface {
	pulumi.Input

	ToSetupTaskOutput() SetupTaskOutput
	ToSetupTaskOutputWithContext(context.Context) SetupTaskOutput
}

// Specifies a setup task which can be used to customize the compute nodes of the cluster.
type SetupTaskArgs struct {
	CommandLine          pulumi.StringInput           `pulumi:"commandLine"`
	EnvironmentVariables EnvironmentSettingArrayInput `pulumi:"environmentVariables"`
	RunElevated          pulumi.BoolPtrInput          `pulumi:"runElevated"`
	// The path where the Batch AI service will upload the stdout and stderror of setup task.
	StdOutErrPathPrefix pulumi.StringInput `pulumi:"stdOutErrPathPrefix"`
}

func (SetupTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SetupTask)(nil)).Elem()
}

func (i SetupTaskArgs) ToSetupTaskOutput() SetupTaskOutput {
	return i.ToSetupTaskOutputWithContext(context.Background())
}

func (i SetupTaskArgs) ToSetupTaskOutputWithContext(ctx context.Context) SetupTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetupTaskOutput)
}

func (i SetupTaskArgs) ToSetupTaskPtrOutput() SetupTaskPtrOutput {
	return i.ToSetupTaskPtrOutputWithContext(context.Background())
}

func (i SetupTaskArgs) ToSetupTaskPtrOutputWithContext(ctx context.Context) SetupTaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetupTaskOutput).ToSetupTaskPtrOutputWithContext(ctx)
}

// SetupTaskPtrInput is an input type that accepts SetupTaskArgs, SetupTaskPtr and SetupTaskPtrOutput values.
// You can construct a concrete instance of `SetupTaskPtrInput` via:
//
//          SetupTaskArgs{...}
//
//  or:
//
//          nil
type SetupTaskPtrInput interface {
	pulumi.Input

	ToSetupTaskPtrOutput() SetupTaskPtrOutput
	ToSetupTaskPtrOutputWithContext(context.Context) SetupTaskPtrOutput
}

type setupTaskPtrType SetupTaskArgs

func SetupTaskPtr(v *SetupTaskArgs) SetupTaskPtrInput {
	return (*setupTaskPtrType)(v)
}

func (*setupTaskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SetupTask)(nil)).Elem()
}

func (i *setupTaskPtrType) ToSetupTaskPtrOutput() SetupTaskPtrOutput {
	return i.ToSetupTaskPtrOutputWithContext(context.Background())
}

func (i *setupTaskPtrType) ToSetupTaskPtrOutputWithContext(ctx context.Context) SetupTaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetupTaskPtrOutput)
}

// Specifies a setup task which can be used to customize the compute nodes of the cluster.
type SetupTaskOutput struct{ *pulumi.OutputState }

func (SetupTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SetupTask)(nil)).Elem()
}

func (o SetupTaskOutput) ToSetupTaskOutput() SetupTaskOutput {
	return o
}

func (o SetupTaskOutput) ToSetupTaskOutputWithContext(ctx context.Context) SetupTaskOutput {
	return o
}

func (o SetupTaskOutput) ToSetupTaskPtrOutput() SetupTaskPtrOutput {
	return o.ToSetupTaskPtrOutputWithContext(context.Background())
}

func (o SetupTaskOutput) ToSetupTaskPtrOutputWithContext(ctx context.Context) SetupTaskPtrOutput {
	return o.ApplyT(func(v SetupTask) *SetupTask {
		return &v
	}).(SetupTaskPtrOutput)
}
func (o SetupTaskOutput) CommandLine() pulumi.StringOutput {
	return o.ApplyT(func(v SetupTask) string { return v.CommandLine }).(pulumi.StringOutput)
}

func (o SetupTaskOutput) EnvironmentVariables() EnvironmentSettingArrayOutput {
	return o.ApplyT(func(v SetupTask) []EnvironmentSetting { return v.EnvironmentVariables }).(EnvironmentSettingArrayOutput)
}

func (o SetupTaskOutput) RunElevated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SetupTask) *bool { return v.RunElevated }).(pulumi.BoolPtrOutput)
}

// The path where the Batch AI service will upload the stdout and stderror of setup task.
func (o SetupTaskOutput) StdOutErrPathPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v SetupTask) string { return v.StdOutErrPathPrefix }).(pulumi.StringOutput)
}

type SetupTaskPtrOutput struct{ *pulumi.OutputState }

func (SetupTaskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SetupTask)(nil)).Elem()
}

func (o SetupTaskPtrOutput) ToSetupTaskPtrOutput() SetupTaskPtrOutput {
	return o
}

func (o SetupTaskPtrOutput) ToSetupTaskPtrOutputWithContext(ctx context.Context) SetupTaskPtrOutput {
	return o
}

func (o SetupTaskPtrOutput) Elem() SetupTaskOutput {
	return o.ApplyT(func(v *SetupTask) SetupTask { return *v }).(SetupTaskOutput)
}

func (o SetupTaskPtrOutput) CommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SetupTask) *string {
		if v == nil {
			return nil
		}
		return &v.CommandLine
	}).(pulumi.StringPtrOutput)
}

func (o SetupTaskPtrOutput) EnvironmentVariables() EnvironmentSettingArrayOutput {
	return o.ApplyT(func(v *SetupTask) []EnvironmentSetting {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(EnvironmentSettingArrayOutput)
}

func (o SetupTaskPtrOutput) RunElevated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SetupTask) *bool {
		if v == nil {
			return nil
		}
		return v.RunElevated
	}).(pulumi.BoolPtrOutput)
}

// The path where the Batch AI service will upload the stdout and stderror of setup task.
func (o SetupTaskPtrOutput) StdOutErrPathPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SetupTask) *string {
		if v == nil {
			return nil
		}
		return &v.StdOutErrPathPrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies a setup task which can be used to customize the compute nodes of the cluster.
type SetupTaskResponse struct {
	CommandLine          string                       `pulumi:"commandLine"`
	EnvironmentVariables []EnvironmentSettingResponse `pulumi:"environmentVariables"`
	RunElevated          *bool                        `pulumi:"runElevated"`
	// The path where the Batch AI service will upload the stdout and stderror of setup task.
	StdOutErrPathPrefix string `pulumi:"stdOutErrPathPrefix"`
}

// SetupTaskResponseInput is an input type that accepts SetupTaskResponseArgs and SetupTaskResponseOutput values.
// You can construct a concrete instance of `SetupTaskResponseInput` via:
//
//          SetupTaskResponseArgs{...}
type SetupTaskResponseInput interface {
	pulumi.Input

	ToSetupTaskResponseOutput() SetupTaskResponseOutput
	ToSetupTaskResponseOutputWithContext(context.Context) SetupTaskResponseOutput
}

// Specifies a setup task which can be used to customize the compute nodes of the cluster.
type SetupTaskResponseArgs struct {
	CommandLine          pulumi.StringInput                   `pulumi:"commandLine"`
	EnvironmentVariables EnvironmentSettingResponseArrayInput `pulumi:"environmentVariables"`
	RunElevated          pulumi.BoolPtrInput                  `pulumi:"runElevated"`
	// The path where the Batch AI service will upload the stdout and stderror of setup task.
	StdOutErrPathPrefix pulumi.StringInput `pulumi:"stdOutErrPathPrefix"`
}

func (SetupTaskResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SetupTaskResponse)(nil)).Elem()
}

func (i SetupTaskResponseArgs) ToSetupTaskResponseOutput() SetupTaskResponseOutput {
	return i.ToSetupTaskResponseOutputWithContext(context.Background())
}

func (i SetupTaskResponseArgs) ToSetupTaskResponseOutputWithContext(ctx context.Context) SetupTaskResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetupTaskResponseOutput)
}

func (i SetupTaskResponseArgs) ToSetupTaskResponsePtrOutput() SetupTaskResponsePtrOutput {
	return i.ToSetupTaskResponsePtrOutputWithContext(context.Background())
}

func (i SetupTaskResponseArgs) ToSetupTaskResponsePtrOutputWithContext(ctx context.Context) SetupTaskResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetupTaskResponseOutput).ToSetupTaskResponsePtrOutputWithContext(ctx)
}

// SetupTaskResponsePtrInput is an input type that accepts SetupTaskResponseArgs, SetupTaskResponsePtr and SetupTaskResponsePtrOutput values.
// You can construct a concrete instance of `SetupTaskResponsePtrInput` via:
//
//          SetupTaskResponseArgs{...}
//
//  or:
//
//          nil
type SetupTaskResponsePtrInput interface {
	pulumi.Input

	ToSetupTaskResponsePtrOutput() SetupTaskResponsePtrOutput
	ToSetupTaskResponsePtrOutputWithContext(context.Context) SetupTaskResponsePtrOutput
}

type setupTaskResponsePtrType SetupTaskResponseArgs

func SetupTaskResponsePtr(v *SetupTaskResponseArgs) SetupTaskResponsePtrInput {
	return (*setupTaskResponsePtrType)(v)
}

func (*setupTaskResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SetupTaskResponse)(nil)).Elem()
}

func (i *setupTaskResponsePtrType) ToSetupTaskResponsePtrOutput() SetupTaskResponsePtrOutput {
	return i.ToSetupTaskResponsePtrOutputWithContext(context.Background())
}

func (i *setupTaskResponsePtrType) ToSetupTaskResponsePtrOutputWithContext(ctx context.Context) SetupTaskResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SetupTaskResponsePtrOutput)
}

// Specifies a setup task which can be used to customize the compute nodes of the cluster.
type SetupTaskResponseOutput struct{ *pulumi.OutputState }

func (SetupTaskResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SetupTaskResponse)(nil)).Elem()
}

func (o SetupTaskResponseOutput) ToSetupTaskResponseOutput() SetupTaskResponseOutput {
	return o
}

func (o SetupTaskResponseOutput) ToSetupTaskResponseOutputWithContext(ctx context.Context) SetupTaskResponseOutput {
	return o
}

func (o SetupTaskResponseOutput) ToSetupTaskResponsePtrOutput() SetupTaskResponsePtrOutput {
	return o.ToSetupTaskResponsePtrOutputWithContext(context.Background())
}

func (o SetupTaskResponseOutput) ToSetupTaskResponsePtrOutputWithContext(ctx context.Context) SetupTaskResponsePtrOutput {
	return o.ApplyT(func(v SetupTaskResponse) *SetupTaskResponse {
		return &v
	}).(SetupTaskResponsePtrOutput)
}
func (o SetupTaskResponseOutput) CommandLine() pulumi.StringOutput {
	return o.ApplyT(func(v SetupTaskResponse) string { return v.CommandLine }).(pulumi.StringOutput)
}

func (o SetupTaskResponseOutput) EnvironmentVariables() EnvironmentSettingResponseArrayOutput {
	return o.ApplyT(func(v SetupTaskResponse) []EnvironmentSettingResponse { return v.EnvironmentVariables }).(EnvironmentSettingResponseArrayOutput)
}

func (o SetupTaskResponseOutput) RunElevated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SetupTaskResponse) *bool { return v.RunElevated }).(pulumi.BoolPtrOutput)
}

// The path where the Batch AI service will upload the stdout and stderror of setup task.
func (o SetupTaskResponseOutput) StdOutErrPathPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v SetupTaskResponse) string { return v.StdOutErrPathPrefix }).(pulumi.StringOutput)
}

type SetupTaskResponsePtrOutput struct{ *pulumi.OutputState }

func (SetupTaskResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SetupTaskResponse)(nil)).Elem()
}

func (o SetupTaskResponsePtrOutput) ToSetupTaskResponsePtrOutput() SetupTaskResponsePtrOutput {
	return o
}

func (o SetupTaskResponsePtrOutput) ToSetupTaskResponsePtrOutputWithContext(ctx context.Context) SetupTaskResponsePtrOutput {
	return o
}

func (o SetupTaskResponsePtrOutput) Elem() SetupTaskResponseOutput {
	return o.ApplyT(func(v *SetupTaskResponse) SetupTaskResponse { return *v }).(SetupTaskResponseOutput)
}

func (o SetupTaskResponsePtrOutput) CommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SetupTaskResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CommandLine
	}).(pulumi.StringPtrOutput)
}

func (o SetupTaskResponsePtrOutput) EnvironmentVariables() EnvironmentSettingResponseArrayOutput {
	return o.ApplyT(func(v *SetupTaskResponse) []EnvironmentSettingResponse {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(EnvironmentSettingResponseArrayOutput)
}

func (o SetupTaskResponsePtrOutput) RunElevated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SetupTaskResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RunElevated
	}).(pulumi.BoolPtrOutput)
}

// The path where the Batch AI service will upload the stdout and stderror of setup task.
func (o SetupTaskResponsePtrOutput) StdOutErrPathPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SetupTaskResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StdOutErrPathPrefix
	}).(pulumi.StringPtrOutput)
}

// SSH configuration settings for the VM
type SshConfiguration struct {
	// Default value is '*' can be used to match all source IPs. Maximum number of publicIPs that can be specified are 400.
	PublicIPsToAllow []string `pulumi:"publicIPsToAllow"`
	// Settings for user account that gets created on each on the nodes of a cluster.
	UserAccountSettings UserAccountSettings `pulumi:"userAccountSettings"`
}

// SshConfigurationInput is an input type that accepts SshConfigurationArgs and SshConfigurationOutput values.
// You can construct a concrete instance of `SshConfigurationInput` via:
//
//          SshConfigurationArgs{...}
type SshConfigurationInput interface {
	pulumi.Input

	ToSshConfigurationOutput() SshConfigurationOutput
	ToSshConfigurationOutputWithContext(context.Context) SshConfigurationOutput
}

// SSH configuration settings for the VM
type SshConfigurationArgs struct {
	// Default value is '*' can be used to match all source IPs. Maximum number of publicIPs that can be specified are 400.
	PublicIPsToAllow pulumi.StringArrayInput `pulumi:"publicIPsToAllow"`
	// Settings for user account that gets created on each on the nodes of a cluster.
	UserAccountSettings UserAccountSettingsInput `pulumi:"userAccountSettings"`
}

func (SshConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshConfiguration)(nil)).Elem()
}

func (i SshConfigurationArgs) ToSshConfigurationOutput() SshConfigurationOutput {
	return i.ToSshConfigurationOutputWithContext(context.Background())
}

func (i SshConfigurationArgs) ToSshConfigurationOutputWithContext(ctx context.Context) SshConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationOutput)
}

func (i SshConfigurationArgs) ToSshConfigurationPtrOutput() SshConfigurationPtrOutput {
	return i.ToSshConfigurationPtrOutputWithContext(context.Background())
}

func (i SshConfigurationArgs) ToSshConfigurationPtrOutputWithContext(ctx context.Context) SshConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationOutput).ToSshConfigurationPtrOutputWithContext(ctx)
}

// SshConfigurationPtrInput is an input type that accepts SshConfigurationArgs, SshConfigurationPtr and SshConfigurationPtrOutput values.
// You can construct a concrete instance of `SshConfigurationPtrInput` via:
//
//          SshConfigurationArgs{...}
//
//  or:
//
//          nil
type SshConfigurationPtrInput interface {
	pulumi.Input

	ToSshConfigurationPtrOutput() SshConfigurationPtrOutput
	ToSshConfigurationPtrOutputWithContext(context.Context) SshConfigurationPtrOutput
}

type sshConfigurationPtrType SshConfigurationArgs

func SshConfigurationPtr(v *SshConfigurationArgs) SshConfigurationPtrInput {
	return (*sshConfigurationPtrType)(v)
}

func (*sshConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SshConfiguration)(nil)).Elem()
}

func (i *sshConfigurationPtrType) ToSshConfigurationPtrOutput() SshConfigurationPtrOutput {
	return i.ToSshConfigurationPtrOutputWithContext(context.Background())
}

func (i *sshConfigurationPtrType) ToSshConfigurationPtrOutputWithContext(ctx context.Context) SshConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationPtrOutput)
}

// SSH configuration settings for the VM
type SshConfigurationOutput struct{ *pulumi.OutputState }

func (SshConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshConfiguration)(nil)).Elem()
}

func (o SshConfigurationOutput) ToSshConfigurationOutput() SshConfigurationOutput {
	return o
}

func (o SshConfigurationOutput) ToSshConfigurationOutputWithContext(ctx context.Context) SshConfigurationOutput {
	return o
}

func (o SshConfigurationOutput) ToSshConfigurationPtrOutput() SshConfigurationPtrOutput {
	return o.ToSshConfigurationPtrOutputWithContext(context.Background())
}

func (o SshConfigurationOutput) ToSshConfigurationPtrOutputWithContext(ctx context.Context) SshConfigurationPtrOutput {
	return o.ApplyT(func(v SshConfiguration) *SshConfiguration {
		return &v
	}).(SshConfigurationPtrOutput)
}

// Default value is '*' can be used to match all source IPs. Maximum number of publicIPs that can be specified are 400.
func (o SshConfigurationOutput) PublicIPsToAllow() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SshConfiguration) []string { return v.PublicIPsToAllow }).(pulumi.StringArrayOutput)
}

// Settings for user account that gets created on each on the nodes of a cluster.
func (o SshConfigurationOutput) UserAccountSettings() UserAccountSettingsOutput {
	return o.ApplyT(func(v SshConfiguration) UserAccountSettings { return v.UserAccountSettings }).(UserAccountSettingsOutput)
}

type SshConfigurationPtrOutput struct{ *pulumi.OutputState }

func (SshConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SshConfiguration)(nil)).Elem()
}

func (o SshConfigurationPtrOutput) ToSshConfigurationPtrOutput() SshConfigurationPtrOutput {
	return o
}

func (o SshConfigurationPtrOutput) ToSshConfigurationPtrOutputWithContext(ctx context.Context) SshConfigurationPtrOutput {
	return o
}

func (o SshConfigurationPtrOutput) Elem() SshConfigurationOutput {
	return o.ApplyT(func(v *SshConfiguration) SshConfiguration { return *v }).(SshConfigurationOutput)
}

// Default value is '*' can be used to match all source IPs. Maximum number of publicIPs that can be specified are 400.
func (o SshConfigurationPtrOutput) PublicIPsToAllow() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SshConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.PublicIPsToAllow
	}).(pulumi.StringArrayOutput)
}

// Settings for user account that gets created on each on the nodes of a cluster.
func (o SshConfigurationPtrOutput) UserAccountSettings() UserAccountSettingsPtrOutput {
	return o.ApplyT(func(v *SshConfiguration) *UserAccountSettings {
		if v == nil {
			return nil
		}
		return &v.UserAccountSettings
	}).(UserAccountSettingsPtrOutput)
}

// SSH configuration settings for the VM
type SshConfigurationResponse struct {
	// Default value is '*' can be used to match all source IPs. Maximum number of publicIPs that can be specified are 400.
	PublicIPsToAllow []string `pulumi:"publicIPsToAllow"`
	// Settings for user account that gets created on each on the nodes of a cluster.
	UserAccountSettings UserAccountSettingsResponse `pulumi:"userAccountSettings"`
}

// SshConfigurationResponseInput is an input type that accepts SshConfigurationResponseArgs and SshConfigurationResponseOutput values.
// You can construct a concrete instance of `SshConfigurationResponseInput` via:
//
//          SshConfigurationResponseArgs{...}
type SshConfigurationResponseInput interface {
	pulumi.Input

	ToSshConfigurationResponseOutput() SshConfigurationResponseOutput
	ToSshConfigurationResponseOutputWithContext(context.Context) SshConfigurationResponseOutput
}

// SSH configuration settings for the VM
type SshConfigurationResponseArgs struct {
	// Default value is '*' can be used to match all source IPs. Maximum number of publicIPs that can be specified are 400.
	PublicIPsToAllow pulumi.StringArrayInput `pulumi:"publicIPsToAllow"`
	// Settings for user account that gets created on each on the nodes of a cluster.
	UserAccountSettings UserAccountSettingsResponseInput `pulumi:"userAccountSettings"`
}

func (SshConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshConfigurationResponse)(nil)).Elem()
}

func (i SshConfigurationResponseArgs) ToSshConfigurationResponseOutput() SshConfigurationResponseOutput {
	return i.ToSshConfigurationResponseOutputWithContext(context.Background())
}

func (i SshConfigurationResponseArgs) ToSshConfigurationResponseOutputWithContext(ctx context.Context) SshConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationResponseOutput)
}

func (i SshConfigurationResponseArgs) ToSshConfigurationResponsePtrOutput() SshConfigurationResponsePtrOutput {
	return i.ToSshConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i SshConfigurationResponseArgs) ToSshConfigurationResponsePtrOutputWithContext(ctx context.Context) SshConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationResponseOutput).ToSshConfigurationResponsePtrOutputWithContext(ctx)
}

// SshConfigurationResponsePtrInput is an input type that accepts SshConfigurationResponseArgs, SshConfigurationResponsePtr and SshConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `SshConfigurationResponsePtrInput` via:
//
//          SshConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type SshConfigurationResponsePtrInput interface {
	pulumi.Input

	ToSshConfigurationResponsePtrOutput() SshConfigurationResponsePtrOutput
	ToSshConfigurationResponsePtrOutputWithContext(context.Context) SshConfigurationResponsePtrOutput
}

type sshConfigurationResponsePtrType SshConfigurationResponseArgs

func SshConfigurationResponsePtr(v *SshConfigurationResponseArgs) SshConfigurationResponsePtrInput {
	return (*sshConfigurationResponsePtrType)(v)
}

func (*sshConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SshConfigurationResponse)(nil)).Elem()
}

func (i *sshConfigurationResponsePtrType) ToSshConfigurationResponsePtrOutput() SshConfigurationResponsePtrOutput {
	return i.ToSshConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *sshConfigurationResponsePtrType) ToSshConfigurationResponsePtrOutputWithContext(ctx context.Context) SshConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationResponsePtrOutput)
}

// SSH configuration settings for the VM
type SshConfigurationResponseOutput struct{ *pulumi.OutputState }

func (SshConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshConfigurationResponse)(nil)).Elem()
}

func (o SshConfigurationResponseOutput) ToSshConfigurationResponseOutput() SshConfigurationResponseOutput {
	return o
}

func (o SshConfigurationResponseOutput) ToSshConfigurationResponseOutputWithContext(ctx context.Context) SshConfigurationResponseOutput {
	return o
}

func (o SshConfigurationResponseOutput) ToSshConfigurationResponsePtrOutput() SshConfigurationResponsePtrOutput {
	return o.ToSshConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o SshConfigurationResponseOutput) ToSshConfigurationResponsePtrOutputWithContext(ctx context.Context) SshConfigurationResponsePtrOutput {
	return o.ApplyT(func(v SshConfigurationResponse) *SshConfigurationResponse {
		return &v
	}).(SshConfigurationResponsePtrOutput)
}

// Default value is '*' can be used to match all source IPs. Maximum number of publicIPs that can be specified are 400.
func (o SshConfigurationResponseOutput) PublicIPsToAllow() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SshConfigurationResponse) []string { return v.PublicIPsToAllow }).(pulumi.StringArrayOutput)
}

// Settings for user account that gets created on each on the nodes of a cluster.
func (o SshConfigurationResponseOutput) UserAccountSettings() UserAccountSettingsResponseOutput {
	return o.ApplyT(func(v SshConfigurationResponse) UserAccountSettingsResponse { return v.UserAccountSettings }).(UserAccountSettingsResponseOutput)
}

type SshConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (SshConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SshConfigurationResponse)(nil)).Elem()
}

func (o SshConfigurationResponsePtrOutput) ToSshConfigurationResponsePtrOutput() SshConfigurationResponsePtrOutput {
	return o
}

func (o SshConfigurationResponsePtrOutput) ToSshConfigurationResponsePtrOutputWithContext(ctx context.Context) SshConfigurationResponsePtrOutput {
	return o
}

func (o SshConfigurationResponsePtrOutput) Elem() SshConfigurationResponseOutput {
	return o.ApplyT(func(v *SshConfigurationResponse) SshConfigurationResponse { return *v }).(SshConfigurationResponseOutput)
}

// Default value is '*' can be used to match all source IPs. Maximum number of publicIPs that can be specified are 400.
func (o SshConfigurationResponsePtrOutput) PublicIPsToAllow() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SshConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.PublicIPsToAllow
	}).(pulumi.StringArrayOutput)
}

// Settings for user account that gets created on each on the nodes of a cluster.
func (o SshConfigurationResponsePtrOutput) UserAccountSettings() UserAccountSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SshConfigurationResponse) *UserAccountSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.UserAccountSettings
	}).(UserAccountSettingsResponsePtrOutput)
}

// Specifies the settings for TensorFlow job.
type TensorFlowSettings struct {
	MasterCommandLineArgs string `pulumi:"masterCommandLineArgs"`
	// This property is optional for single machine training.
	ParameterServerCommandLineArgs *string `pulumi:"parameterServerCommandLineArgs"`
	// If specified, the value must be less than or equal to nodeCount. If not specified, the default value is equal to 1 for distributed TensorFlow training (This property is not applicable for single machine training). This property can be specified only for distributed TensorFlow training.
	ParameterServerCount  *int    `pulumi:"parameterServerCount"`
	PythonInterpreterPath *string `pulumi:"pythonInterpreterPath"`
	PythonScriptFilePath  string  `pulumi:"pythonScriptFilePath"`
	// This property is optional for single machine training.
	WorkerCommandLineArgs *string `pulumi:"workerCommandLineArgs"`
	// If specified, the value must be less than or equal to (nodeCount * numberOfGPUs per VM). If not specified, the default value is equal to nodeCount. This property can be specified only for distributed TensorFlow training
	WorkerCount *int `pulumi:"workerCount"`
}

// TensorFlowSettingsInput is an input type that accepts TensorFlowSettingsArgs and TensorFlowSettingsOutput values.
// You can construct a concrete instance of `TensorFlowSettingsInput` via:
//
//          TensorFlowSettingsArgs{...}
type TensorFlowSettingsInput interface {
	pulumi.Input

	ToTensorFlowSettingsOutput() TensorFlowSettingsOutput
	ToTensorFlowSettingsOutputWithContext(context.Context) TensorFlowSettingsOutput
}

// Specifies the settings for TensorFlow job.
type TensorFlowSettingsArgs struct {
	MasterCommandLineArgs pulumi.StringInput `pulumi:"masterCommandLineArgs"`
	// This property is optional for single machine training.
	ParameterServerCommandLineArgs pulumi.StringPtrInput `pulumi:"parameterServerCommandLineArgs"`
	// If specified, the value must be less than or equal to nodeCount. If not specified, the default value is equal to 1 for distributed TensorFlow training (This property is not applicable for single machine training). This property can be specified only for distributed TensorFlow training.
	ParameterServerCount  pulumi.IntPtrInput    `pulumi:"parameterServerCount"`
	PythonInterpreterPath pulumi.StringPtrInput `pulumi:"pythonInterpreterPath"`
	PythonScriptFilePath  pulumi.StringInput    `pulumi:"pythonScriptFilePath"`
	// This property is optional for single machine training.
	WorkerCommandLineArgs pulumi.StringPtrInput `pulumi:"workerCommandLineArgs"`
	// If specified, the value must be less than or equal to (nodeCount * numberOfGPUs per VM). If not specified, the default value is equal to nodeCount. This property can be specified only for distributed TensorFlow training
	WorkerCount pulumi.IntPtrInput `pulumi:"workerCount"`
}

func (TensorFlowSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TensorFlowSettings)(nil)).Elem()
}

func (i TensorFlowSettingsArgs) ToTensorFlowSettingsOutput() TensorFlowSettingsOutput {
	return i.ToTensorFlowSettingsOutputWithContext(context.Background())
}

func (i TensorFlowSettingsArgs) ToTensorFlowSettingsOutputWithContext(ctx context.Context) TensorFlowSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TensorFlowSettingsOutput)
}

func (i TensorFlowSettingsArgs) ToTensorFlowSettingsPtrOutput() TensorFlowSettingsPtrOutput {
	return i.ToTensorFlowSettingsPtrOutputWithContext(context.Background())
}

func (i TensorFlowSettingsArgs) ToTensorFlowSettingsPtrOutputWithContext(ctx context.Context) TensorFlowSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TensorFlowSettingsOutput).ToTensorFlowSettingsPtrOutputWithContext(ctx)
}

// TensorFlowSettingsPtrInput is an input type that accepts TensorFlowSettingsArgs, TensorFlowSettingsPtr and TensorFlowSettingsPtrOutput values.
// You can construct a concrete instance of `TensorFlowSettingsPtrInput` via:
//
//          TensorFlowSettingsArgs{...}
//
//  or:
//
//          nil
type TensorFlowSettingsPtrInput interface {
	pulumi.Input

	ToTensorFlowSettingsPtrOutput() TensorFlowSettingsPtrOutput
	ToTensorFlowSettingsPtrOutputWithContext(context.Context) TensorFlowSettingsPtrOutput
}

type tensorFlowSettingsPtrType TensorFlowSettingsArgs

func TensorFlowSettingsPtr(v *TensorFlowSettingsArgs) TensorFlowSettingsPtrInput {
	return (*tensorFlowSettingsPtrType)(v)
}

func (*tensorFlowSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TensorFlowSettings)(nil)).Elem()
}

func (i *tensorFlowSettingsPtrType) ToTensorFlowSettingsPtrOutput() TensorFlowSettingsPtrOutput {
	return i.ToTensorFlowSettingsPtrOutputWithContext(context.Background())
}

func (i *tensorFlowSettingsPtrType) ToTensorFlowSettingsPtrOutputWithContext(ctx context.Context) TensorFlowSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TensorFlowSettingsPtrOutput)
}

// Specifies the settings for TensorFlow job.
type TensorFlowSettingsOutput struct{ *pulumi.OutputState }

func (TensorFlowSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TensorFlowSettings)(nil)).Elem()
}

func (o TensorFlowSettingsOutput) ToTensorFlowSettingsOutput() TensorFlowSettingsOutput {
	return o
}

func (o TensorFlowSettingsOutput) ToTensorFlowSettingsOutputWithContext(ctx context.Context) TensorFlowSettingsOutput {
	return o
}

func (o TensorFlowSettingsOutput) ToTensorFlowSettingsPtrOutput() TensorFlowSettingsPtrOutput {
	return o.ToTensorFlowSettingsPtrOutputWithContext(context.Background())
}

func (o TensorFlowSettingsOutput) ToTensorFlowSettingsPtrOutputWithContext(ctx context.Context) TensorFlowSettingsPtrOutput {
	return o.ApplyT(func(v TensorFlowSettings) *TensorFlowSettings {
		return &v
	}).(TensorFlowSettingsPtrOutput)
}
func (o TensorFlowSettingsOutput) MasterCommandLineArgs() pulumi.StringOutput {
	return o.ApplyT(func(v TensorFlowSettings) string { return v.MasterCommandLineArgs }).(pulumi.StringOutput)
}

// This property is optional for single machine training.
func (o TensorFlowSettingsOutput) ParameterServerCommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TensorFlowSettings) *string { return v.ParameterServerCommandLineArgs }).(pulumi.StringPtrOutput)
}

// If specified, the value must be less than or equal to nodeCount. If not specified, the default value is equal to 1 for distributed TensorFlow training (This property is not applicable for single machine training). This property can be specified only for distributed TensorFlow training.
func (o TensorFlowSettingsOutput) ParameterServerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TensorFlowSettings) *int { return v.ParameterServerCount }).(pulumi.IntPtrOutput)
}

func (o TensorFlowSettingsOutput) PythonInterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TensorFlowSettings) *string { return v.PythonInterpreterPath }).(pulumi.StringPtrOutput)
}

func (o TensorFlowSettingsOutput) PythonScriptFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v TensorFlowSettings) string { return v.PythonScriptFilePath }).(pulumi.StringOutput)
}

// This property is optional for single machine training.
func (o TensorFlowSettingsOutput) WorkerCommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TensorFlowSettings) *string { return v.WorkerCommandLineArgs }).(pulumi.StringPtrOutput)
}

// If specified, the value must be less than or equal to (nodeCount * numberOfGPUs per VM). If not specified, the default value is equal to nodeCount. This property can be specified only for distributed TensorFlow training
func (o TensorFlowSettingsOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TensorFlowSettings) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

type TensorFlowSettingsPtrOutput struct{ *pulumi.OutputState }

func (TensorFlowSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TensorFlowSettings)(nil)).Elem()
}

func (o TensorFlowSettingsPtrOutput) ToTensorFlowSettingsPtrOutput() TensorFlowSettingsPtrOutput {
	return o
}

func (o TensorFlowSettingsPtrOutput) ToTensorFlowSettingsPtrOutputWithContext(ctx context.Context) TensorFlowSettingsPtrOutput {
	return o
}

func (o TensorFlowSettingsPtrOutput) Elem() TensorFlowSettingsOutput {
	return o.ApplyT(func(v *TensorFlowSettings) TensorFlowSettings { return *v }).(TensorFlowSettingsOutput)
}

func (o TensorFlowSettingsPtrOutput) MasterCommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TensorFlowSettings) *string {
		if v == nil {
			return nil
		}
		return &v.MasterCommandLineArgs
	}).(pulumi.StringPtrOutput)
}

// This property is optional for single machine training.
func (o TensorFlowSettingsPtrOutput) ParameterServerCommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TensorFlowSettings) *string {
		if v == nil {
			return nil
		}
		return v.ParameterServerCommandLineArgs
	}).(pulumi.StringPtrOutput)
}

// If specified, the value must be less than or equal to nodeCount. If not specified, the default value is equal to 1 for distributed TensorFlow training (This property is not applicable for single machine training). This property can be specified only for distributed TensorFlow training.
func (o TensorFlowSettingsPtrOutput) ParameterServerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TensorFlowSettings) *int {
		if v == nil {
			return nil
		}
		return v.ParameterServerCount
	}).(pulumi.IntPtrOutput)
}

func (o TensorFlowSettingsPtrOutput) PythonInterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TensorFlowSettings) *string {
		if v == nil {
			return nil
		}
		return v.PythonInterpreterPath
	}).(pulumi.StringPtrOutput)
}

func (o TensorFlowSettingsPtrOutput) PythonScriptFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TensorFlowSettings) *string {
		if v == nil {
			return nil
		}
		return &v.PythonScriptFilePath
	}).(pulumi.StringPtrOutput)
}

// This property is optional for single machine training.
func (o TensorFlowSettingsPtrOutput) WorkerCommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TensorFlowSettings) *string {
		if v == nil {
			return nil
		}
		return v.WorkerCommandLineArgs
	}).(pulumi.StringPtrOutput)
}

// If specified, the value must be less than or equal to (nodeCount * numberOfGPUs per VM). If not specified, the default value is equal to nodeCount. This property can be specified only for distributed TensorFlow training
func (o TensorFlowSettingsPtrOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TensorFlowSettings) *int {
		if v == nil {
			return nil
		}
		return v.WorkerCount
	}).(pulumi.IntPtrOutput)
}

// Specifies the settings for TensorFlow job.
type TensorFlowSettingsResponse struct {
	MasterCommandLineArgs string `pulumi:"masterCommandLineArgs"`
	// This property is optional for single machine training.
	ParameterServerCommandLineArgs *string `pulumi:"parameterServerCommandLineArgs"`
	// If specified, the value must be less than or equal to nodeCount. If not specified, the default value is equal to 1 for distributed TensorFlow training (This property is not applicable for single machine training). This property can be specified only for distributed TensorFlow training.
	ParameterServerCount  *int    `pulumi:"parameterServerCount"`
	PythonInterpreterPath *string `pulumi:"pythonInterpreterPath"`
	PythonScriptFilePath  string  `pulumi:"pythonScriptFilePath"`
	// This property is optional for single machine training.
	WorkerCommandLineArgs *string `pulumi:"workerCommandLineArgs"`
	// If specified, the value must be less than or equal to (nodeCount * numberOfGPUs per VM). If not specified, the default value is equal to nodeCount. This property can be specified only for distributed TensorFlow training
	WorkerCount *int `pulumi:"workerCount"`
}

// TensorFlowSettingsResponseInput is an input type that accepts TensorFlowSettingsResponseArgs and TensorFlowSettingsResponseOutput values.
// You can construct a concrete instance of `TensorFlowSettingsResponseInput` via:
//
//          TensorFlowSettingsResponseArgs{...}
type TensorFlowSettingsResponseInput interface {
	pulumi.Input

	ToTensorFlowSettingsResponseOutput() TensorFlowSettingsResponseOutput
	ToTensorFlowSettingsResponseOutputWithContext(context.Context) TensorFlowSettingsResponseOutput
}

// Specifies the settings for TensorFlow job.
type TensorFlowSettingsResponseArgs struct {
	MasterCommandLineArgs pulumi.StringInput `pulumi:"masterCommandLineArgs"`
	// This property is optional for single machine training.
	ParameterServerCommandLineArgs pulumi.StringPtrInput `pulumi:"parameterServerCommandLineArgs"`
	// If specified, the value must be less than or equal to nodeCount. If not specified, the default value is equal to 1 for distributed TensorFlow training (This property is not applicable for single machine training). This property can be specified only for distributed TensorFlow training.
	ParameterServerCount  pulumi.IntPtrInput    `pulumi:"parameterServerCount"`
	PythonInterpreterPath pulumi.StringPtrInput `pulumi:"pythonInterpreterPath"`
	PythonScriptFilePath  pulumi.StringInput    `pulumi:"pythonScriptFilePath"`
	// This property is optional for single machine training.
	WorkerCommandLineArgs pulumi.StringPtrInput `pulumi:"workerCommandLineArgs"`
	// If specified, the value must be less than or equal to (nodeCount * numberOfGPUs per VM). If not specified, the default value is equal to nodeCount. This property can be specified only for distributed TensorFlow training
	WorkerCount pulumi.IntPtrInput `pulumi:"workerCount"`
}

func (TensorFlowSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TensorFlowSettingsResponse)(nil)).Elem()
}

func (i TensorFlowSettingsResponseArgs) ToTensorFlowSettingsResponseOutput() TensorFlowSettingsResponseOutput {
	return i.ToTensorFlowSettingsResponseOutputWithContext(context.Background())
}

func (i TensorFlowSettingsResponseArgs) ToTensorFlowSettingsResponseOutputWithContext(ctx context.Context) TensorFlowSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TensorFlowSettingsResponseOutput)
}

func (i TensorFlowSettingsResponseArgs) ToTensorFlowSettingsResponsePtrOutput() TensorFlowSettingsResponsePtrOutput {
	return i.ToTensorFlowSettingsResponsePtrOutputWithContext(context.Background())
}

func (i TensorFlowSettingsResponseArgs) ToTensorFlowSettingsResponsePtrOutputWithContext(ctx context.Context) TensorFlowSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TensorFlowSettingsResponseOutput).ToTensorFlowSettingsResponsePtrOutputWithContext(ctx)
}

// TensorFlowSettingsResponsePtrInput is an input type that accepts TensorFlowSettingsResponseArgs, TensorFlowSettingsResponsePtr and TensorFlowSettingsResponsePtrOutput values.
// You can construct a concrete instance of `TensorFlowSettingsResponsePtrInput` via:
//
//          TensorFlowSettingsResponseArgs{...}
//
//  or:
//
//          nil
type TensorFlowSettingsResponsePtrInput interface {
	pulumi.Input

	ToTensorFlowSettingsResponsePtrOutput() TensorFlowSettingsResponsePtrOutput
	ToTensorFlowSettingsResponsePtrOutputWithContext(context.Context) TensorFlowSettingsResponsePtrOutput
}

type tensorFlowSettingsResponsePtrType TensorFlowSettingsResponseArgs

func TensorFlowSettingsResponsePtr(v *TensorFlowSettingsResponseArgs) TensorFlowSettingsResponsePtrInput {
	return (*tensorFlowSettingsResponsePtrType)(v)
}

func (*tensorFlowSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TensorFlowSettingsResponse)(nil)).Elem()
}

func (i *tensorFlowSettingsResponsePtrType) ToTensorFlowSettingsResponsePtrOutput() TensorFlowSettingsResponsePtrOutput {
	return i.ToTensorFlowSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *tensorFlowSettingsResponsePtrType) ToTensorFlowSettingsResponsePtrOutputWithContext(ctx context.Context) TensorFlowSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TensorFlowSettingsResponsePtrOutput)
}

// Specifies the settings for TensorFlow job.
type TensorFlowSettingsResponseOutput struct{ *pulumi.OutputState }

func (TensorFlowSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TensorFlowSettingsResponse)(nil)).Elem()
}

func (o TensorFlowSettingsResponseOutput) ToTensorFlowSettingsResponseOutput() TensorFlowSettingsResponseOutput {
	return o
}

func (o TensorFlowSettingsResponseOutput) ToTensorFlowSettingsResponseOutputWithContext(ctx context.Context) TensorFlowSettingsResponseOutput {
	return o
}

func (o TensorFlowSettingsResponseOutput) ToTensorFlowSettingsResponsePtrOutput() TensorFlowSettingsResponsePtrOutput {
	return o.ToTensorFlowSettingsResponsePtrOutputWithContext(context.Background())
}

func (o TensorFlowSettingsResponseOutput) ToTensorFlowSettingsResponsePtrOutputWithContext(ctx context.Context) TensorFlowSettingsResponsePtrOutput {
	return o.ApplyT(func(v TensorFlowSettingsResponse) *TensorFlowSettingsResponse {
		return &v
	}).(TensorFlowSettingsResponsePtrOutput)
}
func (o TensorFlowSettingsResponseOutput) MasterCommandLineArgs() pulumi.StringOutput {
	return o.ApplyT(func(v TensorFlowSettingsResponse) string { return v.MasterCommandLineArgs }).(pulumi.StringOutput)
}

// This property is optional for single machine training.
func (o TensorFlowSettingsResponseOutput) ParameterServerCommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TensorFlowSettingsResponse) *string { return v.ParameterServerCommandLineArgs }).(pulumi.StringPtrOutput)
}

// If specified, the value must be less than or equal to nodeCount. If not specified, the default value is equal to 1 for distributed TensorFlow training (This property is not applicable for single machine training). This property can be specified only for distributed TensorFlow training.
func (o TensorFlowSettingsResponseOutput) ParameterServerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TensorFlowSettingsResponse) *int { return v.ParameterServerCount }).(pulumi.IntPtrOutput)
}

func (o TensorFlowSettingsResponseOutput) PythonInterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TensorFlowSettingsResponse) *string { return v.PythonInterpreterPath }).(pulumi.StringPtrOutput)
}

func (o TensorFlowSettingsResponseOutput) PythonScriptFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v TensorFlowSettingsResponse) string { return v.PythonScriptFilePath }).(pulumi.StringOutput)
}

// This property is optional for single machine training.
func (o TensorFlowSettingsResponseOutput) WorkerCommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TensorFlowSettingsResponse) *string { return v.WorkerCommandLineArgs }).(pulumi.StringPtrOutput)
}

// If specified, the value must be less than or equal to (nodeCount * numberOfGPUs per VM). If not specified, the default value is equal to nodeCount. This property can be specified only for distributed TensorFlow training
func (o TensorFlowSettingsResponseOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TensorFlowSettingsResponse) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

type TensorFlowSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (TensorFlowSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TensorFlowSettingsResponse)(nil)).Elem()
}

func (o TensorFlowSettingsResponsePtrOutput) ToTensorFlowSettingsResponsePtrOutput() TensorFlowSettingsResponsePtrOutput {
	return o
}

func (o TensorFlowSettingsResponsePtrOutput) ToTensorFlowSettingsResponsePtrOutputWithContext(ctx context.Context) TensorFlowSettingsResponsePtrOutput {
	return o
}

func (o TensorFlowSettingsResponsePtrOutput) Elem() TensorFlowSettingsResponseOutput {
	return o.ApplyT(func(v *TensorFlowSettingsResponse) TensorFlowSettingsResponse { return *v }).(TensorFlowSettingsResponseOutput)
}

func (o TensorFlowSettingsResponsePtrOutput) MasterCommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TensorFlowSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MasterCommandLineArgs
	}).(pulumi.StringPtrOutput)
}

// This property is optional for single machine training.
func (o TensorFlowSettingsResponsePtrOutput) ParameterServerCommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TensorFlowSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ParameterServerCommandLineArgs
	}).(pulumi.StringPtrOutput)
}

// If specified, the value must be less than or equal to nodeCount. If not specified, the default value is equal to 1 for distributed TensorFlow training (This property is not applicable for single machine training). This property can be specified only for distributed TensorFlow training.
func (o TensorFlowSettingsResponsePtrOutput) ParameterServerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TensorFlowSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ParameterServerCount
	}).(pulumi.IntPtrOutput)
}

func (o TensorFlowSettingsResponsePtrOutput) PythonInterpreterPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TensorFlowSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PythonInterpreterPath
	}).(pulumi.StringPtrOutput)
}

func (o TensorFlowSettingsResponsePtrOutput) PythonScriptFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TensorFlowSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PythonScriptFilePath
	}).(pulumi.StringPtrOutput)
}

// This property is optional for single machine training.
func (o TensorFlowSettingsResponsePtrOutput) WorkerCommandLineArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TensorFlowSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkerCommandLineArgs
	}).(pulumi.StringPtrOutput)
}

// If specified, the value must be less than or equal to (nodeCount * numberOfGPUs per VM). If not specified, the default value is equal to nodeCount. This property can be specified only for distributed TensorFlow training
func (o TensorFlowSettingsResponsePtrOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TensorFlowSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.WorkerCount
	}).(pulumi.IntPtrOutput)
}

// Details of the file system to mount on the compute cluster nodes.
type UnmanagedFileSystemReference struct {
	MountCommand string `pulumi:"mountCommand"`
	// Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
	RelativeMountPath string `pulumi:"relativeMountPath"`
}

// UnmanagedFileSystemReferenceInput is an input type that accepts UnmanagedFileSystemReferenceArgs and UnmanagedFileSystemReferenceOutput values.
// You can construct a concrete instance of `UnmanagedFileSystemReferenceInput` via:
//
//          UnmanagedFileSystemReferenceArgs{...}
type UnmanagedFileSystemReferenceInput interface {
	pulumi.Input

	ToUnmanagedFileSystemReferenceOutput() UnmanagedFileSystemReferenceOutput
	ToUnmanagedFileSystemReferenceOutputWithContext(context.Context) UnmanagedFileSystemReferenceOutput
}

// Details of the file system to mount on the compute cluster nodes.
type UnmanagedFileSystemReferenceArgs struct {
	MountCommand pulumi.StringInput `pulumi:"mountCommand"`
	// Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
	RelativeMountPath pulumi.StringInput `pulumi:"relativeMountPath"`
}

func (UnmanagedFileSystemReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UnmanagedFileSystemReference)(nil)).Elem()
}

func (i UnmanagedFileSystemReferenceArgs) ToUnmanagedFileSystemReferenceOutput() UnmanagedFileSystemReferenceOutput {
	return i.ToUnmanagedFileSystemReferenceOutputWithContext(context.Background())
}

func (i UnmanagedFileSystemReferenceArgs) ToUnmanagedFileSystemReferenceOutputWithContext(ctx context.Context) UnmanagedFileSystemReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnmanagedFileSystemReferenceOutput)
}

// UnmanagedFileSystemReferenceArrayInput is an input type that accepts UnmanagedFileSystemReferenceArray and UnmanagedFileSystemReferenceArrayOutput values.
// You can construct a concrete instance of `UnmanagedFileSystemReferenceArrayInput` via:
//
//          UnmanagedFileSystemReferenceArray{ UnmanagedFileSystemReferenceArgs{...} }
type UnmanagedFileSystemReferenceArrayInput interface {
	pulumi.Input

	ToUnmanagedFileSystemReferenceArrayOutput() UnmanagedFileSystemReferenceArrayOutput
	ToUnmanagedFileSystemReferenceArrayOutputWithContext(context.Context) UnmanagedFileSystemReferenceArrayOutput
}

type UnmanagedFileSystemReferenceArray []UnmanagedFileSystemReferenceInput

func (UnmanagedFileSystemReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UnmanagedFileSystemReference)(nil)).Elem()
}

func (i UnmanagedFileSystemReferenceArray) ToUnmanagedFileSystemReferenceArrayOutput() UnmanagedFileSystemReferenceArrayOutput {
	return i.ToUnmanagedFileSystemReferenceArrayOutputWithContext(context.Background())
}

func (i UnmanagedFileSystemReferenceArray) ToUnmanagedFileSystemReferenceArrayOutputWithContext(ctx context.Context) UnmanagedFileSystemReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnmanagedFileSystemReferenceArrayOutput)
}

// Details of the file system to mount on the compute cluster nodes.
type UnmanagedFileSystemReferenceOutput struct{ *pulumi.OutputState }

func (UnmanagedFileSystemReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UnmanagedFileSystemReference)(nil)).Elem()
}

func (o UnmanagedFileSystemReferenceOutput) ToUnmanagedFileSystemReferenceOutput() UnmanagedFileSystemReferenceOutput {
	return o
}

func (o UnmanagedFileSystemReferenceOutput) ToUnmanagedFileSystemReferenceOutputWithContext(ctx context.Context) UnmanagedFileSystemReferenceOutput {
	return o
}

func (o UnmanagedFileSystemReferenceOutput) MountCommand() pulumi.StringOutput {
	return o.ApplyT(func(v UnmanagedFileSystemReference) string { return v.MountCommand }).(pulumi.StringOutput)
}

// Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
func (o UnmanagedFileSystemReferenceOutput) RelativeMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v UnmanagedFileSystemReference) string { return v.RelativeMountPath }).(pulumi.StringOutput)
}

type UnmanagedFileSystemReferenceArrayOutput struct{ *pulumi.OutputState }

func (UnmanagedFileSystemReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UnmanagedFileSystemReference)(nil)).Elem()
}

func (o UnmanagedFileSystemReferenceArrayOutput) ToUnmanagedFileSystemReferenceArrayOutput() UnmanagedFileSystemReferenceArrayOutput {
	return o
}

func (o UnmanagedFileSystemReferenceArrayOutput) ToUnmanagedFileSystemReferenceArrayOutputWithContext(ctx context.Context) UnmanagedFileSystemReferenceArrayOutput {
	return o
}

func (o UnmanagedFileSystemReferenceArrayOutput) Index(i pulumi.IntInput) UnmanagedFileSystemReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UnmanagedFileSystemReference {
		return vs[0].([]UnmanagedFileSystemReference)[vs[1].(int)]
	}).(UnmanagedFileSystemReferenceOutput)
}

// Details of the file system to mount on the compute cluster nodes.
type UnmanagedFileSystemReferenceResponse struct {
	MountCommand string `pulumi:"mountCommand"`
	// Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
	RelativeMountPath string `pulumi:"relativeMountPath"`
}

// UnmanagedFileSystemReferenceResponseInput is an input type that accepts UnmanagedFileSystemReferenceResponseArgs and UnmanagedFileSystemReferenceResponseOutput values.
// You can construct a concrete instance of `UnmanagedFileSystemReferenceResponseInput` via:
//
//          UnmanagedFileSystemReferenceResponseArgs{...}
type UnmanagedFileSystemReferenceResponseInput interface {
	pulumi.Input

	ToUnmanagedFileSystemReferenceResponseOutput() UnmanagedFileSystemReferenceResponseOutput
	ToUnmanagedFileSystemReferenceResponseOutputWithContext(context.Context) UnmanagedFileSystemReferenceResponseOutput
}

// Details of the file system to mount on the compute cluster nodes.
type UnmanagedFileSystemReferenceResponseArgs struct {
	MountCommand pulumi.StringInput `pulumi:"mountCommand"`
	// Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
	RelativeMountPath pulumi.StringInput `pulumi:"relativeMountPath"`
}

func (UnmanagedFileSystemReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UnmanagedFileSystemReferenceResponse)(nil)).Elem()
}

func (i UnmanagedFileSystemReferenceResponseArgs) ToUnmanagedFileSystemReferenceResponseOutput() UnmanagedFileSystemReferenceResponseOutput {
	return i.ToUnmanagedFileSystemReferenceResponseOutputWithContext(context.Background())
}

func (i UnmanagedFileSystemReferenceResponseArgs) ToUnmanagedFileSystemReferenceResponseOutputWithContext(ctx context.Context) UnmanagedFileSystemReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnmanagedFileSystemReferenceResponseOutput)
}

// UnmanagedFileSystemReferenceResponseArrayInput is an input type that accepts UnmanagedFileSystemReferenceResponseArray and UnmanagedFileSystemReferenceResponseArrayOutput values.
// You can construct a concrete instance of `UnmanagedFileSystemReferenceResponseArrayInput` via:
//
//          UnmanagedFileSystemReferenceResponseArray{ UnmanagedFileSystemReferenceResponseArgs{...} }
type UnmanagedFileSystemReferenceResponseArrayInput interface {
	pulumi.Input

	ToUnmanagedFileSystemReferenceResponseArrayOutput() UnmanagedFileSystemReferenceResponseArrayOutput
	ToUnmanagedFileSystemReferenceResponseArrayOutputWithContext(context.Context) UnmanagedFileSystemReferenceResponseArrayOutput
}

type UnmanagedFileSystemReferenceResponseArray []UnmanagedFileSystemReferenceResponseInput

func (UnmanagedFileSystemReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UnmanagedFileSystemReferenceResponse)(nil)).Elem()
}

func (i UnmanagedFileSystemReferenceResponseArray) ToUnmanagedFileSystemReferenceResponseArrayOutput() UnmanagedFileSystemReferenceResponseArrayOutput {
	return i.ToUnmanagedFileSystemReferenceResponseArrayOutputWithContext(context.Background())
}

func (i UnmanagedFileSystemReferenceResponseArray) ToUnmanagedFileSystemReferenceResponseArrayOutputWithContext(ctx context.Context) UnmanagedFileSystemReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnmanagedFileSystemReferenceResponseArrayOutput)
}

// Details of the file system to mount on the compute cluster nodes.
type UnmanagedFileSystemReferenceResponseOutput struct{ *pulumi.OutputState }

func (UnmanagedFileSystemReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UnmanagedFileSystemReferenceResponse)(nil)).Elem()
}

func (o UnmanagedFileSystemReferenceResponseOutput) ToUnmanagedFileSystemReferenceResponseOutput() UnmanagedFileSystemReferenceResponseOutput {
	return o
}

func (o UnmanagedFileSystemReferenceResponseOutput) ToUnmanagedFileSystemReferenceResponseOutputWithContext(ctx context.Context) UnmanagedFileSystemReferenceResponseOutput {
	return o
}

func (o UnmanagedFileSystemReferenceResponseOutput) MountCommand() pulumi.StringOutput {
	return o.ApplyT(func(v UnmanagedFileSystemReferenceResponse) string { return v.MountCommand }).(pulumi.StringOutput)
}

// Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.
func (o UnmanagedFileSystemReferenceResponseOutput) RelativeMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v UnmanagedFileSystemReferenceResponse) string { return v.RelativeMountPath }).(pulumi.StringOutput)
}

type UnmanagedFileSystemReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (UnmanagedFileSystemReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UnmanagedFileSystemReferenceResponse)(nil)).Elem()
}

func (o UnmanagedFileSystemReferenceResponseArrayOutput) ToUnmanagedFileSystemReferenceResponseArrayOutput() UnmanagedFileSystemReferenceResponseArrayOutput {
	return o
}

func (o UnmanagedFileSystemReferenceResponseArrayOutput) ToUnmanagedFileSystemReferenceResponseArrayOutputWithContext(ctx context.Context) UnmanagedFileSystemReferenceResponseArrayOutput {
	return o
}

func (o UnmanagedFileSystemReferenceResponseArrayOutput) Index(i pulumi.IntInput) UnmanagedFileSystemReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UnmanagedFileSystemReferenceResponse {
		return vs[0].([]UnmanagedFileSystemReferenceResponse)[vs[1].(int)]
	}).(UnmanagedFileSystemReferenceResponseOutput)
}

// Settings for user account that gets created on each on the nodes of a cluster.
type UserAccountSettings struct {
	AdminUserName         string  `pulumi:"adminUserName"`
	AdminUserPassword     *string `pulumi:"adminUserPassword"`
	AdminUserSshPublicKey *string `pulumi:"adminUserSshPublicKey"`
}

// UserAccountSettingsInput is an input type that accepts UserAccountSettingsArgs and UserAccountSettingsOutput values.
// You can construct a concrete instance of `UserAccountSettingsInput` via:
//
//          UserAccountSettingsArgs{...}
type UserAccountSettingsInput interface {
	pulumi.Input

	ToUserAccountSettingsOutput() UserAccountSettingsOutput
	ToUserAccountSettingsOutputWithContext(context.Context) UserAccountSettingsOutput
}

// Settings for user account that gets created on each on the nodes of a cluster.
type UserAccountSettingsArgs struct {
	AdminUserName         pulumi.StringInput    `pulumi:"adminUserName"`
	AdminUserPassword     pulumi.StringPtrInput `pulumi:"adminUserPassword"`
	AdminUserSshPublicKey pulumi.StringPtrInput `pulumi:"adminUserSshPublicKey"`
}

func (UserAccountSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountSettings)(nil)).Elem()
}

func (i UserAccountSettingsArgs) ToUserAccountSettingsOutput() UserAccountSettingsOutput {
	return i.ToUserAccountSettingsOutputWithContext(context.Background())
}

func (i UserAccountSettingsArgs) ToUserAccountSettingsOutputWithContext(ctx context.Context) UserAccountSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountSettingsOutput)
}

func (i UserAccountSettingsArgs) ToUserAccountSettingsPtrOutput() UserAccountSettingsPtrOutput {
	return i.ToUserAccountSettingsPtrOutputWithContext(context.Background())
}

func (i UserAccountSettingsArgs) ToUserAccountSettingsPtrOutputWithContext(ctx context.Context) UserAccountSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountSettingsOutput).ToUserAccountSettingsPtrOutputWithContext(ctx)
}

// UserAccountSettingsPtrInput is an input type that accepts UserAccountSettingsArgs, UserAccountSettingsPtr and UserAccountSettingsPtrOutput values.
// You can construct a concrete instance of `UserAccountSettingsPtrInput` via:
//
//          UserAccountSettingsArgs{...}
//
//  or:
//
//          nil
type UserAccountSettingsPtrInput interface {
	pulumi.Input

	ToUserAccountSettingsPtrOutput() UserAccountSettingsPtrOutput
	ToUserAccountSettingsPtrOutputWithContext(context.Context) UserAccountSettingsPtrOutput
}

type userAccountSettingsPtrType UserAccountSettingsArgs

func UserAccountSettingsPtr(v *UserAccountSettingsArgs) UserAccountSettingsPtrInput {
	return (*userAccountSettingsPtrType)(v)
}

func (*userAccountSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountSettings)(nil)).Elem()
}

func (i *userAccountSettingsPtrType) ToUserAccountSettingsPtrOutput() UserAccountSettingsPtrOutput {
	return i.ToUserAccountSettingsPtrOutputWithContext(context.Background())
}

func (i *userAccountSettingsPtrType) ToUserAccountSettingsPtrOutputWithContext(ctx context.Context) UserAccountSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountSettingsPtrOutput)
}

// Settings for user account that gets created on each on the nodes of a cluster.
type UserAccountSettingsOutput struct{ *pulumi.OutputState }

func (UserAccountSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountSettings)(nil)).Elem()
}

func (o UserAccountSettingsOutput) ToUserAccountSettingsOutput() UserAccountSettingsOutput {
	return o
}

func (o UserAccountSettingsOutput) ToUserAccountSettingsOutputWithContext(ctx context.Context) UserAccountSettingsOutput {
	return o
}

func (o UserAccountSettingsOutput) ToUserAccountSettingsPtrOutput() UserAccountSettingsPtrOutput {
	return o.ToUserAccountSettingsPtrOutputWithContext(context.Background())
}

func (o UserAccountSettingsOutput) ToUserAccountSettingsPtrOutputWithContext(ctx context.Context) UserAccountSettingsPtrOutput {
	return o.ApplyT(func(v UserAccountSettings) *UserAccountSettings {
		return &v
	}).(UserAccountSettingsPtrOutput)
}
func (o UserAccountSettingsOutput) AdminUserName() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccountSettings) string { return v.AdminUserName }).(pulumi.StringOutput)
}

func (o UserAccountSettingsOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountSettings) *string { return v.AdminUserPassword }).(pulumi.StringPtrOutput)
}

func (o UserAccountSettingsOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountSettings) *string { return v.AdminUserSshPublicKey }).(pulumi.StringPtrOutput)
}

type UserAccountSettingsPtrOutput struct{ *pulumi.OutputState }

func (UserAccountSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountSettings)(nil)).Elem()
}

func (o UserAccountSettingsPtrOutput) ToUserAccountSettingsPtrOutput() UserAccountSettingsPtrOutput {
	return o
}

func (o UserAccountSettingsPtrOutput) ToUserAccountSettingsPtrOutputWithContext(ctx context.Context) UserAccountSettingsPtrOutput {
	return o
}

func (o UserAccountSettingsPtrOutput) Elem() UserAccountSettingsOutput {
	return o.ApplyT(func(v *UserAccountSettings) UserAccountSettings { return *v }).(UserAccountSettingsOutput)
}

func (o UserAccountSettingsPtrOutput) AdminUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountSettings) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUserName
	}).(pulumi.StringPtrOutput)
}

func (o UserAccountSettingsPtrOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountSettings) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserPassword
	}).(pulumi.StringPtrOutput)
}

func (o UserAccountSettingsPtrOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountSettings) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserSshPublicKey
	}).(pulumi.StringPtrOutput)
}

// Settings for user account that gets created on each on the nodes of a cluster.
type UserAccountSettingsResponse struct {
	AdminUserName         string  `pulumi:"adminUserName"`
	AdminUserPassword     *string `pulumi:"adminUserPassword"`
	AdminUserSshPublicKey *string `pulumi:"adminUserSshPublicKey"`
}

// UserAccountSettingsResponseInput is an input type that accepts UserAccountSettingsResponseArgs and UserAccountSettingsResponseOutput values.
// You can construct a concrete instance of `UserAccountSettingsResponseInput` via:
//
//          UserAccountSettingsResponseArgs{...}
type UserAccountSettingsResponseInput interface {
	pulumi.Input

	ToUserAccountSettingsResponseOutput() UserAccountSettingsResponseOutput
	ToUserAccountSettingsResponseOutputWithContext(context.Context) UserAccountSettingsResponseOutput
}

// Settings for user account that gets created on each on the nodes of a cluster.
type UserAccountSettingsResponseArgs struct {
	AdminUserName         pulumi.StringInput    `pulumi:"adminUserName"`
	AdminUserPassword     pulumi.StringPtrInput `pulumi:"adminUserPassword"`
	AdminUserSshPublicKey pulumi.StringPtrInput `pulumi:"adminUserSshPublicKey"`
}

func (UserAccountSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountSettingsResponse)(nil)).Elem()
}

func (i UserAccountSettingsResponseArgs) ToUserAccountSettingsResponseOutput() UserAccountSettingsResponseOutput {
	return i.ToUserAccountSettingsResponseOutputWithContext(context.Background())
}

func (i UserAccountSettingsResponseArgs) ToUserAccountSettingsResponseOutputWithContext(ctx context.Context) UserAccountSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountSettingsResponseOutput)
}

func (i UserAccountSettingsResponseArgs) ToUserAccountSettingsResponsePtrOutput() UserAccountSettingsResponsePtrOutput {
	return i.ToUserAccountSettingsResponsePtrOutputWithContext(context.Background())
}

func (i UserAccountSettingsResponseArgs) ToUserAccountSettingsResponsePtrOutputWithContext(ctx context.Context) UserAccountSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountSettingsResponseOutput).ToUserAccountSettingsResponsePtrOutputWithContext(ctx)
}

// UserAccountSettingsResponsePtrInput is an input type that accepts UserAccountSettingsResponseArgs, UserAccountSettingsResponsePtr and UserAccountSettingsResponsePtrOutput values.
// You can construct a concrete instance of `UserAccountSettingsResponsePtrInput` via:
//
//          UserAccountSettingsResponseArgs{...}
//
//  or:
//
//          nil
type UserAccountSettingsResponsePtrInput interface {
	pulumi.Input

	ToUserAccountSettingsResponsePtrOutput() UserAccountSettingsResponsePtrOutput
	ToUserAccountSettingsResponsePtrOutputWithContext(context.Context) UserAccountSettingsResponsePtrOutput
}

type userAccountSettingsResponsePtrType UserAccountSettingsResponseArgs

func UserAccountSettingsResponsePtr(v *UserAccountSettingsResponseArgs) UserAccountSettingsResponsePtrInput {
	return (*userAccountSettingsResponsePtrType)(v)
}

func (*userAccountSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountSettingsResponse)(nil)).Elem()
}

func (i *userAccountSettingsResponsePtrType) ToUserAccountSettingsResponsePtrOutput() UserAccountSettingsResponsePtrOutput {
	return i.ToUserAccountSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *userAccountSettingsResponsePtrType) ToUserAccountSettingsResponsePtrOutputWithContext(ctx context.Context) UserAccountSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountSettingsResponsePtrOutput)
}

// Settings for user account that gets created on each on the nodes of a cluster.
type UserAccountSettingsResponseOutput struct{ *pulumi.OutputState }

func (UserAccountSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountSettingsResponse)(nil)).Elem()
}

func (o UserAccountSettingsResponseOutput) ToUserAccountSettingsResponseOutput() UserAccountSettingsResponseOutput {
	return o
}

func (o UserAccountSettingsResponseOutput) ToUserAccountSettingsResponseOutputWithContext(ctx context.Context) UserAccountSettingsResponseOutput {
	return o
}

func (o UserAccountSettingsResponseOutput) ToUserAccountSettingsResponsePtrOutput() UserAccountSettingsResponsePtrOutput {
	return o.ToUserAccountSettingsResponsePtrOutputWithContext(context.Background())
}

func (o UserAccountSettingsResponseOutput) ToUserAccountSettingsResponsePtrOutputWithContext(ctx context.Context) UserAccountSettingsResponsePtrOutput {
	return o.ApplyT(func(v UserAccountSettingsResponse) *UserAccountSettingsResponse {
		return &v
	}).(UserAccountSettingsResponsePtrOutput)
}
func (o UserAccountSettingsResponseOutput) AdminUserName() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccountSettingsResponse) string { return v.AdminUserName }).(pulumi.StringOutput)
}

func (o UserAccountSettingsResponseOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountSettingsResponse) *string { return v.AdminUserPassword }).(pulumi.StringPtrOutput)
}

func (o UserAccountSettingsResponseOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountSettingsResponse) *string { return v.AdminUserSshPublicKey }).(pulumi.StringPtrOutput)
}

type UserAccountSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (UserAccountSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountSettingsResponse)(nil)).Elem()
}

func (o UserAccountSettingsResponsePtrOutput) ToUserAccountSettingsResponsePtrOutput() UserAccountSettingsResponsePtrOutput {
	return o
}

func (o UserAccountSettingsResponsePtrOutput) ToUserAccountSettingsResponsePtrOutputWithContext(ctx context.Context) UserAccountSettingsResponsePtrOutput {
	return o
}

func (o UserAccountSettingsResponsePtrOutput) Elem() UserAccountSettingsResponseOutput {
	return o.ApplyT(func(v *UserAccountSettingsResponse) UserAccountSettingsResponse { return *v }).(UserAccountSettingsResponseOutput)
}

func (o UserAccountSettingsResponsePtrOutput) AdminUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUserName
	}).(pulumi.StringPtrOutput)
}

func (o UserAccountSettingsResponsePtrOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserPassword
	}).(pulumi.StringPtrOutput)
}

func (o UserAccountSettingsResponsePtrOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserSshPublicKey
	}).(pulumi.StringPtrOutput)
}

// Settings for OS image.
type VirtualMachineConfiguration struct {
	// The image reference.
	ImageReference *ImageReference `pulumi:"imageReference"`
}

// VirtualMachineConfigurationInput is an input type that accepts VirtualMachineConfigurationArgs and VirtualMachineConfigurationOutput values.
// You can construct a concrete instance of `VirtualMachineConfigurationInput` via:
//
//          VirtualMachineConfigurationArgs{...}
type VirtualMachineConfigurationInput interface {
	pulumi.Input

	ToVirtualMachineConfigurationOutput() VirtualMachineConfigurationOutput
	ToVirtualMachineConfigurationOutputWithContext(context.Context) VirtualMachineConfigurationOutput
}

// Settings for OS image.
type VirtualMachineConfigurationArgs struct {
	// The image reference.
	ImageReference ImageReferencePtrInput `pulumi:"imageReference"`
}

func (VirtualMachineConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineConfiguration)(nil)).Elem()
}

func (i VirtualMachineConfigurationArgs) ToVirtualMachineConfigurationOutput() VirtualMachineConfigurationOutput {
	return i.ToVirtualMachineConfigurationOutputWithContext(context.Background())
}

func (i VirtualMachineConfigurationArgs) ToVirtualMachineConfigurationOutputWithContext(ctx context.Context) VirtualMachineConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineConfigurationOutput)
}

func (i VirtualMachineConfigurationArgs) ToVirtualMachineConfigurationPtrOutput() VirtualMachineConfigurationPtrOutput {
	return i.ToVirtualMachineConfigurationPtrOutputWithContext(context.Background())
}

func (i VirtualMachineConfigurationArgs) ToVirtualMachineConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineConfigurationOutput).ToVirtualMachineConfigurationPtrOutputWithContext(ctx)
}

// VirtualMachineConfigurationPtrInput is an input type that accepts VirtualMachineConfigurationArgs, VirtualMachineConfigurationPtr and VirtualMachineConfigurationPtrOutput values.
// You can construct a concrete instance of `VirtualMachineConfigurationPtrInput` via:
//
//          VirtualMachineConfigurationArgs{...}
//
//  or:
//
//          nil
type VirtualMachineConfigurationPtrInput interface {
	pulumi.Input

	ToVirtualMachineConfigurationPtrOutput() VirtualMachineConfigurationPtrOutput
	ToVirtualMachineConfigurationPtrOutputWithContext(context.Context) VirtualMachineConfigurationPtrOutput
}

type virtualMachineConfigurationPtrType VirtualMachineConfigurationArgs

func VirtualMachineConfigurationPtr(v *VirtualMachineConfigurationArgs) VirtualMachineConfigurationPtrInput {
	return (*virtualMachineConfigurationPtrType)(v)
}

func (*virtualMachineConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineConfiguration)(nil)).Elem()
}

func (i *virtualMachineConfigurationPtrType) ToVirtualMachineConfigurationPtrOutput() VirtualMachineConfigurationPtrOutput {
	return i.ToVirtualMachineConfigurationPtrOutputWithContext(context.Background())
}

func (i *virtualMachineConfigurationPtrType) ToVirtualMachineConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineConfigurationPtrOutput)
}

// Settings for OS image.
type VirtualMachineConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualMachineConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineConfiguration)(nil)).Elem()
}

func (o VirtualMachineConfigurationOutput) ToVirtualMachineConfigurationOutput() VirtualMachineConfigurationOutput {
	return o
}

func (o VirtualMachineConfigurationOutput) ToVirtualMachineConfigurationOutputWithContext(ctx context.Context) VirtualMachineConfigurationOutput {
	return o
}

func (o VirtualMachineConfigurationOutput) ToVirtualMachineConfigurationPtrOutput() VirtualMachineConfigurationPtrOutput {
	return o.ToVirtualMachineConfigurationPtrOutputWithContext(context.Background())
}

func (o VirtualMachineConfigurationOutput) ToVirtualMachineConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualMachineConfiguration) *VirtualMachineConfiguration {
		return &v
	}).(VirtualMachineConfigurationPtrOutput)
}

// The image reference.
func (o VirtualMachineConfigurationOutput) ImageReference() ImageReferencePtrOutput {
	return o.ApplyT(func(v VirtualMachineConfiguration) *ImageReference { return v.ImageReference }).(ImageReferencePtrOutput)
}

type VirtualMachineConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineConfiguration)(nil)).Elem()
}

func (o VirtualMachineConfigurationPtrOutput) ToVirtualMachineConfigurationPtrOutput() VirtualMachineConfigurationPtrOutput {
	return o
}

func (o VirtualMachineConfigurationPtrOutput) ToVirtualMachineConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineConfigurationPtrOutput {
	return o
}

func (o VirtualMachineConfigurationPtrOutput) Elem() VirtualMachineConfigurationOutput {
	return o.ApplyT(func(v *VirtualMachineConfiguration) VirtualMachineConfiguration { return *v }).(VirtualMachineConfigurationOutput)
}

// The image reference.
func (o VirtualMachineConfigurationPtrOutput) ImageReference() ImageReferencePtrOutput {
	return o.ApplyT(func(v *VirtualMachineConfiguration) *ImageReference {
		if v == nil {
			return nil
		}
		return v.ImageReference
	}).(ImageReferencePtrOutput)
}

// Settings for OS image.
type VirtualMachineConfigurationResponse struct {
	// The image reference.
	ImageReference *ImageReferenceResponse `pulumi:"imageReference"`
}

// VirtualMachineConfigurationResponseInput is an input type that accepts VirtualMachineConfigurationResponseArgs and VirtualMachineConfigurationResponseOutput values.
// You can construct a concrete instance of `VirtualMachineConfigurationResponseInput` via:
//
//          VirtualMachineConfigurationResponseArgs{...}
type VirtualMachineConfigurationResponseInput interface {
	pulumi.Input

	ToVirtualMachineConfigurationResponseOutput() VirtualMachineConfigurationResponseOutput
	ToVirtualMachineConfigurationResponseOutputWithContext(context.Context) VirtualMachineConfigurationResponseOutput
}

// Settings for OS image.
type VirtualMachineConfigurationResponseArgs struct {
	// The image reference.
	ImageReference ImageReferenceResponsePtrInput `pulumi:"imageReference"`
}

func (VirtualMachineConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineConfigurationResponse)(nil)).Elem()
}

func (i VirtualMachineConfigurationResponseArgs) ToVirtualMachineConfigurationResponseOutput() VirtualMachineConfigurationResponseOutput {
	return i.ToVirtualMachineConfigurationResponseOutputWithContext(context.Background())
}

func (i VirtualMachineConfigurationResponseArgs) ToVirtualMachineConfigurationResponseOutputWithContext(ctx context.Context) VirtualMachineConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineConfigurationResponseOutput)
}

func (i VirtualMachineConfigurationResponseArgs) ToVirtualMachineConfigurationResponsePtrOutput() VirtualMachineConfigurationResponsePtrOutput {
	return i.ToVirtualMachineConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineConfigurationResponseArgs) ToVirtualMachineConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualMachineConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineConfigurationResponseOutput).ToVirtualMachineConfigurationResponsePtrOutputWithContext(ctx)
}

// VirtualMachineConfigurationResponsePtrInput is an input type that accepts VirtualMachineConfigurationResponseArgs, VirtualMachineConfigurationResponsePtr and VirtualMachineConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineConfigurationResponsePtrInput` via:
//
//          VirtualMachineConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineConfigurationResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineConfigurationResponsePtrOutput() VirtualMachineConfigurationResponsePtrOutput
	ToVirtualMachineConfigurationResponsePtrOutputWithContext(context.Context) VirtualMachineConfigurationResponsePtrOutput
}

type virtualMachineConfigurationResponsePtrType VirtualMachineConfigurationResponseArgs

func VirtualMachineConfigurationResponsePtr(v *VirtualMachineConfigurationResponseArgs) VirtualMachineConfigurationResponsePtrInput {
	return (*virtualMachineConfigurationResponsePtrType)(v)
}

func (*virtualMachineConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineConfigurationResponse)(nil)).Elem()
}

func (i *virtualMachineConfigurationResponsePtrType) ToVirtualMachineConfigurationResponsePtrOutput() VirtualMachineConfigurationResponsePtrOutput {
	return i.ToVirtualMachineConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineConfigurationResponsePtrType) ToVirtualMachineConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualMachineConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineConfigurationResponsePtrOutput)
}

// Settings for OS image.
type VirtualMachineConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineConfigurationResponse)(nil)).Elem()
}

func (o VirtualMachineConfigurationResponseOutput) ToVirtualMachineConfigurationResponseOutput() VirtualMachineConfigurationResponseOutput {
	return o
}

func (o VirtualMachineConfigurationResponseOutput) ToVirtualMachineConfigurationResponseOutputWithContext(ctx context.Context) VirtualMachineConfigurationResponseOutput {
	return o
}

func (o VirtualMachineConfigurationResponseOutput) ToVirtualMachineConfigurationResponsePtrOutput() VirtualMachineConfigurationResponsePtrOutput {
	return o.ToVirtualMachineConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineConfigurationResponseOutput) ToVirtualMachineConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualMachineConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineConfigurationResponse) *VirtualMachineConfigurationResponse {
		return &v
	}).(VirtualMachineConfigurationResponsePtrOutput)
}

// The image reference.
func (o VirtualMachineConfigurationResponseOutput) ImageReference() ImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineConfigurationResponse) *ImageReferenceResponse { return v.ImageReference }).(ImageReferenceResponsePtrOutput)
}

type VirtualMachineConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineConfigurationResponse)(nil)).Elem()
}

func (o VirtualMachineConfigurationResponsePtrOutput) ToVirtualMachineConfigurationResponsePtrOutput() VirtualMachineConfigurationResponsePtrOutput {
	return o
}

func (o VirtualMachineConfigurationResponsePtrOutput) ToVirtualMachineConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualMachineConfigurationResponsePtrOutput {
	return o
}

func (o VirtualMachineConfigurationResponsePtrOutput) Elem() VirtualMachineConfigurationResponseOutput {
	return o.ApplyT(func(v *VirtualMachineConfigurationResponse) VirtualMachineConfigurationResponse { return *v }).(VirtualMachineConfigurationResponseOutput)
}

// The image reference.
func (o VirtualMachineConfigurationResponsePtrOutput) ImageReference() ImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineConfigurationResponse) *ImageReferenceResponse {
		if v == nil {
			return nil
		}
		return v.ImageReference
	}).(ImageReferenceResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AutoScaleSettingsOutput{})
	pulumi.RegisterOutputType(AutoScaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(AutoScaleSettingsResponseOutput{})
	pulumi.RegisterOutputType(AutoScaleSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureBlobFileSystemReferenceOutput{})
	pulumi.RegisterOutputType(AzureBlobFileSystemReferenceArrayOutput{})
	pulumi.RegisterOutputType(AzureBlobFileSystemReferenceResponseOutput{})
	pulumi.RegisterOutputType(AzureBlobFileSystemReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFileShareReferenceOutput{})
	pulumi.RegisterOutputType(AzureFileShareReferenceArrayOutput{})
	pulumi.RegisterOutputType(AzureFileShareReferenceResponseOutput{})
	pulumi.RegisterOutputType(AzureFileShareReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureStorageCredentialsInfoOutput{})
	pulumi.RegisterOutputType(AzureStorageCredentialsInfoResponseOutput{})
	pulumi.RegisterOutputType(BatchAIErrorResponseOutput{})
	pulumi.RegisterOutputType(BatchAIErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(CNTKsettingsOutput{})
	pulumi.RegisterOutputType(CNTKsettingsPtrOutput{})
	pulumi.RegisterOutputType(CNTKsettingsResponseOutput{})
	pulumi.RegisterOutputType(CNTKsettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(Caffe2SettingsOutput{})
	pulumi.RegisterOutputType(Caffe2SettingsPtrOutput{})
	pulumi.RegisterOutputType(CaffeSettingsOutput{})
	pulumi.RegisterOutputType(CaffeSettingsPtrOutput{})
	pulumi.RegisterOutputType(CaffeSettingsResponseOutput{})
	pulumi.RegisterOutputType(CaffeSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ChainerSettingsOutput{})
	pulumi.RegisterOutputType(ChainerSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChainerSettingsResponseOutput{})
	pulumi.RegisterOutputType(ChainerSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerSettingsOutput{})
	pulumi.RegisterOutputType(ContainerSettingsPtrOutput{})
	pulumi.RegisterOutputType(ContainerSettingsResponseOutput{})
	pulumi.RegisterOutputType(ContainerSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomToolkitSettingsOutput{})
	pulumi.RegisterOutputType(CustomToolkitSettingsPtrOutput{})
	pulumi.RegisterOutputType(CustomToolkitSettingsResponseOutput{})
	pulumi.RegisterOutputType(CustomToolkitSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DataDisksOutput{})
	pulumi.RegisterOutputType(DataDisksPtrOutput{})
	pulumi.RegisterOutputType(DataDisksResponseOutput{})
	pulumi.RegisterOutputType(DataDisksResponsePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentSettingOutput{})
	pulumi.RegisterOutputType(EnvironmentSettingArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentSettingResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentSettingResponseArrayOutput{})
	pulumi.RegisterOutputType(FileResponseOutput{})
	pulumi.RegisterOutputType(FileResponseArrayOutput{})
	pulumi.RegisterOutputType(FileServerReferenceOutput{})
	pulumi.RegisterOutputType(FileServerReferenceArrayOutput{})
	pulumi.RegisterOutputType(FileServerReferenceResponseOutput{})
	pulumi.RegisterOutputType(FileServerReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(ImageReferenceOutput{})
	pulumi.RegisterOutputType(ImageReferencePtrOutput{})
	pulumi.RegisterOutputType(ImageReferenceResponseOutput{})
	pulumi.RegisterOutputType(ImageReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ImageSourceRegistryOutput{})
	pulumi.RegisterOutputType(ImageSourceRegistryPtrOutput{})
	pulumi.RegisterOutputType(ImageSourceRegistryResponseOutput{})
	pulumi.RegisterOutputType(ImageSourceRegistryResponsePtrOutput{})
	pulumi.RegisterOutputType(InputDirectoryOutput{})
	pulumi.RegisterOutputType(InputDirectoryArrayOutput{})
	pulumi.RegisterOutputType(InputDirectoryResponseOutput{})
	pulumi.RegisterOutputType(InputDirectoryResponseArrayOutput{})
	pulumi.RegisterOutputType(JobBasePropertiesConstraintsOutput{})
	pulumi.RegisterOutputType(JobBasePropertiesConstraintsPtrOutput{})
	pulumi.RegisterOutputType(JobPreparationOutput{})
	pulumi.RegisterOutputType(JobPreparationPtrOutput{})
	pulumi.RegisterOutputType(JobPreparationResponseOutput{})
	pulumi.RegisterOutputType(JobPreparationResponsePtrOutput{})
	pulumi.RegisterOutputType(JobPropertiesResponseConstraintsOutput{})
	pulumi.RegisterOutputType(JobPropertiesResponseConstraintsPtrOutput{})
	pulumi.RegisterOutputType(JobPropertiesResponseExecutionInfoOutput{})
	pulumi.RegisterOutputType(JobPropertiesResponseExecutionInfoPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultSecretReferenceOutput{})
	pulumi.RegisterOutputType(KeyVaultSecretReferencePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultSecretReferenceResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultSecretReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ManualScaleSettingsOutput{})
	pulumi.RegisterOutputType(ManualScaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(ManualScaleSettingsResponseOutput{})
	pulumi.RegisterOutputType(ManualScaleSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(MountSettingsResponseOutput{})
	pulumi.RegisterOutputType(MountSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(MountVolumesOutput{})
	pulumi.RegisterOutputType(MountVolumesPtrOutput{})
	pulumi.RegisterOutputType(MountVolumesResponseOutput{})
	pulumi.RegisterOutputType(MountVolumesResponsePtrOutput{})
	pulumi.RegisterOutputType(NameValuePairResponseOutput{})
	pulumi.RegisterOutputType(NameValuePairResponseArrayOutput{})
	pulumi.RegisterOutputType(NodeSetupOutput{})
	pulumi.RegisterOutputType(NodeSetupPtrOutput{})
	pulumi.RegisterOutputType(NodeSetupResponseOutput{})
	pulumi.RegisterOutputType(NodeSetupResponsePtrOutput{})
	pulumi.RegisterOutputType(NodeStateCountsResponseOutput{})
	pulumi.RegisterOutputType(NodeStateCountsResponsePtrOutput{})
	pulumi.RegisterOutputType(OutputDirectoryOutput{})
	pulumi.RegisterOutputType(OutputDirectoryArrayOutput{})
	pulumi.RegisterOutputType(OutputDirectoryResponseOutput{})
	pulumi.RegisterOutputType(OutputDirectoryResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateRegistryCredentialsOutput{})
	pulumi.RegisterOutputType(PrivateRegistryCredentialsPtrOutput{})
	pulumi.RegisterOutputType(PrivateRegistryCredentialsResponseOutput{})
	pulumi.RegisterOutputType(PrivateRegistryCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(RemoteLoginInformationResponseOutput{})
	pulumi.RegisterOutputType(RemoteLoginInformationResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceIdOutput{})
	pulumi.RegisterOutputType(ResourceIdPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdResponsePtrOutput{})
	pulumi.RegisterOutputType(ScaleSettingsOutput{})
	pulumi.RegisterOutputType(ScaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(ScaleSettingsResponseOutput{})
	pulumi.RegisterOutputType(ScaleSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(SetupTaskOutput{})
	pulumi.RegisterOutputType(SetupTaskPtrOutput{})
	pulumi.RegisterOutputType(SetupTaskResponseOutput{})
	pulumi.RegisterOutputType(SetupTaskResponsePtrOutput{})
	pulumi.RegisterOutputType(SshConfigurationOutput{})
	pulumi.RegisterOutputType(SshConfigurationPtrOutput{})
	pulumi.RegisterOutputType(SshConfigurationResponseOutput{})
	pulumi.RegisterOutputType(SshConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(TensorFlowSettingsOutput{})
	pulumi.RegisterOutputType(TensorFlowSettingsPtrOutput{})
	pulumi.RegisterOutputType(TensorFlowSettingsResponseOutput{})
	pulumi.RegisterOutputType(TensorFlowSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(UnmanagedFileSystemReferenceOutput{})
	pulumi.RegisterOutputType(UnmanagedFileSystemReferenceArrayOutput{})
	pulumi.RegisterOutputType(UnmanagedFileSystemReferenceResponseOutput{})
	pulumi.RegisterOutputType(UnmanagedFileSystemReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(UserAccountSettingsOutput{})
	pulumi.RegisterOutputType(UserAccountSettingsPtrOutput{})
	pulumi.RegisterOutputType(UserAccountSettingsResponseOutput{})
	pulumi.RegisterOutputType(UserAccountSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualMachineConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineConfigurationResponsePtrOutput{})
}
