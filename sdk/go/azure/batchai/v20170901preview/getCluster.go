// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170901preview

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupCluster(ctx *pulumi.Context, args *LookupClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterResult, error) {
	var rv LookupClusterResult
	err := ctx.Invoke("azure-nextgen:batchai/v20170901preview:getCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupClusterArgs struct {
	// The name of the cluster within the specified resource group. Cluster names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.
	ClusterName string `pulumi:"clusterName"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Contains information about a Cluster.
type LookupClusterResult struct {
	// Possible values are: steady and resizing. steady state indicates that the cluster is not resizing. There are no changes to the number of compute nodes in the cluster in progress. A cluster enters this state when it is created and when no operations are being performed on the cluster to change the number of compute nodes. resizing state indicates that the cluster is resizing; that is, compute nodes are being added to or removed from the cluster.
	AllocationState               string `pulumi:"allocationState"`
	AllocationStateTransitionTime string `pulumi:"allocationStateTransitionTime"`
	CreationTime                  string `pulumi:"creationTime"`
	CurrentNodeCount              int    `pulumi:"currentNodeCount"`
	// This element contains all the errors encountered by various compute nodes during node setup.
	Errors []BatchAIErrorResponse `pulumi:"errors"`
	// The location of the resource
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Use this to prepare the VM. NOTE: The volumes specified in mountVolumes are mounted first and then the setupTask is run. Therefore the setup task can use local mountPaths in its execution.
	NodeSetup *NodeSetupResponse `pulumi:"nodeSetup"`
	// Counts of various compute node states on the cluster.
	NodeStateCounts NodeStateCountsResponse `pulumi:"nodeStateCounts"`
	// Possible value are: creating - Specifies that the cluster is being created. succeeded - Specifies that the cluster has been created successfully. failed - Specifies that the cluster creation has failed. deleting - Specifies that the cluster is being deleted.
	ProvisioningState               string `pulumi:"provisioningState"`
	ProvisioningStateTransitionTime string `pulumi:"provisioningStateTransitionTime"`
	// At least one of manual or autoScale settings must be specified. Only one of manual or autoScale settings can be specified. If autoScale settings are specified, the system automatically scales the cluster up and down (within the supplied limits) based on the pending jobs on the cluster.
	ScaleSettings *ScaleSettingsResponse `pulumi:"scaleSettings"`
	// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
	Subnet *ResourceIdResponse `pulumi:"subnet"`
	// The tags of the resource
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource
	Type string `pulumi:"type"`
	// Settings for user account that gets created on each on the nodes of a cluster.
	UserAccountSettings *UserAccountSettingsResponse `pulumi:"userAccountSettings"`
	// Settings for OS image.
	VirtualMachineConfiguration *VirtualMachineConfigurationResponse `pulumi:"virtualMachineConfiguration"`
	// The default value is dedicated. The node can get preempted while the task is running if lowpriority is chosen. This is best suited if the workload is checkpointing and can be restarted.
	VmPriority *string `pulumi:"vmPriority"`
	// All virtual machines in a cluster are the same size. For information about available VM sizes for clusters using images from the Virtual Machines Marketplace (see Sizes for Virtual Machines (Linux) or Sizes for Virtual Machines (Windows). Batch AI service supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
	VmSize *string `pulumi:"vmSize"`
}
