// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupExperiment(ctx *pulumi.Context, args *LookupExperimentArgs, opts ...pulumi.InvokeOption) (*LookupExperimentResult, error) {
	var rv LookupExperimentResult
	err := ctx.Invoke("azure-nextgen:batchai/latest:getExperiment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupExperimentArgs struct {
	// The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.
	ExperimentName string `pulumi:"experimentName"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.
	WorkspaceName string `pulumi:"workspaceName"`
}

// Experiment information.
type LookupExperimentResult struct {
	// Time when the Experiment was created.
	CreationTime string `pulumi:"creationTime"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The provisioned state of the experiment
	ProvisioningState string `pulumi:"provisioningState"`
	// The time at which the experiment entered its current provisioning state.
	ProvisioningStateTransitionTime string `pulumi:"provisioningStateTransitionTime"`
	// The type of the resource.
	Type string `pulumi:"type"`
}
