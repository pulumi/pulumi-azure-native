// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccessRights string

const (
	AccessRightsManage = AccessRights("Manage")
	AccessRightsSend   = AccessRights("Send")
	AccessRightsListen = AccessRights("Listen")
)

// Name of this SKU.
type ClusterSkuName string

const (
	ClusterSkuNameDedicated = ClusterSkuName("Dedicated")
)

// Default Action for Network Rule Set
type DefaultAction string

const (
	DefaultActionAllow = DefaultAction("Allow")
	DefaultActionDeny  = DefaultAction("Deny")
)

// Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version
type EncodingCaptureDescription string

const (
	EncodingCaptureDescriptionAvro        = EncodingCaptureDescription("Avro")
	EncodingCaptureDescriptionAvroDeflate = EncodingCaptureDescription("AvroDeflate")
)

func (EncodingCaptureDescription) ElementType() reflect.Type {
	return reflect.TypeOf((*EncodingCaptureDescription)(nil)).Elem()
}

func (e EncodingCaptureDescription) ToEncodingCaptureDescriptionOutput() EncodingCaptureDescriptionOutput {
	return pulumi.ToOutput(e).(EncodingCaptureDescriptionOutput)
}

func (e EncodingCaptureDescription) ToEncodingCaptureDescriptionOutputWithContext(ctx context.Context) EncodingCaptureDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncodingCaptureDescriptionOutput)
}

func (e EncodingCaptureDescription) ToEncodingCaptureDescriptionPtrOutput() EncodingCaptureDescriptionPtrOutput {
	return e.ToEncodingCaptureDescriptionPtrOutputWithContext(context.Background())
}

func (e EncodingCaptureDescription) ToEncodingCaptureDescriptionPtrOutputWithContext(ctx context.Context) EncodingCaptureDescriptionPtrOutput {
	return EncodingCaptureDescription(e).ToEncodingCaptureDescriptionOutputWithContext(ctx).ToEncodingCaptureDescriptionPtrOutputWithContext(ctx)
}

func (e EncodingCaptureDescription) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncodingCaptureDescription) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncodingCaptureDescription) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncodingCaptureDescription) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncodingCaptureDescriptionOutput struct{ *pulumi.OutputState }

func (EncodingCaptureDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncodingCaptureDescription)(nil)).Elem()
}

func (o EncodingCaptureDescriptionOutput) ToEncodingCaptureDescriptionOutput() EncodingCaptureDescriptionOutput {
	return o
}

func (o EncodingCaptureDescriptionOutput) ToEncodingCaptureDescriptionOutputWithContext(ctx context.Context) EncodingCaptureDescriptionOutput {
	return o
}

func (o EncodingCaptureDescriptionOutput) ToEncodingCaptureDescriptionPtrOutput() EncodingCaptureDescriptionPtrOutput {
	return o.ToEncodingCaptureDescriptionPtrOutputWithContext(context.Background())
}

func (o EncodingCaptureDescriptionOutput) ToEncodingCaptureDescriptionPtrOutputWithContext(ctx context.Context) EncodingCaptureDescriptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncodingCaptureDescription) *EncodingCaptureDescription {
		return &v
	}).(EncodingCaptureDescriptionPtrOutput)
}

func (o EncodingCaptureDescriptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncodingCaptureDescriptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncodingCaptureDescription) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncodingCaptureDescriptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncodingCaptureDescriptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncodingCaptureDescription) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncodingCaptureDescriptionPtrOutput struct{ *pulumi.OutputState }

func (EncodingCaptureDescriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncodingCaptureDescription)(nil)).Elem()
}

func (o EncodingCaptureDescriptionPtrOutput) ToEncodingCaptureDescriptionPtrOutput() EncodingCaptureDescriptionPtrOutput {
	return o
}

func (o EncodingCaptureDescriptionPtrOutput) ToEncodingCaptureDescriptionPtrOutputWithContext(ctx context.Context) EncodingCaptureDescriptionPtrOutput {
	return o
}

func (o EncodingCaptureDescriptionPtrOutput) Elem() EncodingCaptureDescriptionOutput {
	return o.ApplyT(func(v *EncodingCaptureDescription) EncodingCaptureDescription {
		if v != nil {
			return *v
		}
		var ret EncodingCaptureDescription
		return ret
	}).(EncodingCaptureDescriptionOutput)
}

func (o EncodingCaptureDescriptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncodingCaptureDescriptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncodingCaptureDescription) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncodingCaptureDescriptionInput is an input type that accepts EncodingCaptureDescriptionArgs and EncodingCaptureDescriptionOutput values.
// You can construct a concrete instance of `EncodingCaptureDescriptionInput` via:
//
//	EncodingCaptureDescriptionArgs{...}
type EncodingCaptureDescriptionInput interface {
	pulumi.Input

	ToEncodingCaptureDescriptionOutput() EncodingCaptureDescriptionOutput
	ToEncodingCaptureDescriptionOutputWithContext(context.Context) EncodingCaptureDescriptionOutput
}

var encodingCaptureDescriptionPtrType = reflect.TypeOf((**EncodingCaptureDescription)(nil)).Elem()

type EncodingCaptureDescriptionPtrInput interface {
	pulumi.Input

	ToEncodingCaptureDescriptionPtrOutput() EncodingCaptureDescriptionPtrOutput
	ToEncodingCaptureDescriptionPtrOutputWithContext(context.Context) EncodingCaptureDescriptionPtrOutput
}

type encodingCaptureDescriptionPtr string

func EncodingCaptureDescriptionPtr(v string) EncodingCaptureDescriptionPtrInput {
	return (*encodingCaptureDescriptionPtr)(&v)
}

func (*encodingCaptureDescriptionPtr) ElementType() reflect.Type {
	return encodingCaptureDescriptionPtrType
}

func (in *encodingCaptureDescriptionPtr) ToEncodingCaptureDescriptionPtrOutput() EncodingCaptureDescriptionPtrOutput {
	return pulumi.ToOutput(in).(EncodingCaptureDescriptionPtrOutput)
}

func (in *encodingCaptureDescriptionPtr) ToEncodingCaptureDescriptionPtrOutputWithContext(ctx context.Context) EncodingCaptureDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncodingCaptureDescriptionPtrOutput)
}

// Provisioning state of the Private Endpoint Connection.
type EndPointProvisioningState string

const (
	EndPointProvisioningStateCreating  = EndPointProvisioningState("Creating")
	EndPointProvisioningStateUpdating  = EndPointProvisioningState("Updating")
	EndPointProvisioningStateDeleting  = EndPointProvisioningState("Deleting")
	EndPointProvisioningStateSucceeded = EndPointProvisioningState("Succeeded")
	EndPointProvisioningStateCanceled  = EndPointProvisioningState("Canceled")
	EndPointProvisioningStateFailed    = EndPointProvisioningState("Failed")
)

// Enumerates the possible values for the status of the Event Hub.
type EntityStatus string

const (
	EntityStatusActive          = EntityStatus("Active")
	EntityStatusDisabled        = EntityStatus("Disabled")
	EntityStatusRestoring       = EntityStatus("Restoring")
	EntityStatusSendDisabled    = EntityStatus("SendDisabled")
	EntityStatusReceiveDisabled = EntityStatus("ReceiveDisabled")
	EntityStatusCreating        = EntityStatus("Creating")
	EntityStatusDeleting        = EntityStatus("Deleting")
	EntityStatusRenaming        = EntityStatus("Renaming")
	EntityStatusUnknown         = EntityStatus("Unknown")
)

func (EntityStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityStatus)(nil)).Elem()
}

func (e EntityStatus) ToEntityStatusOutput() EntityStatusOutput {
	return pulumi.ToOutput(e).(EntityStatusOutput)
}

func (e EntityStatus) ToEntityStatusOutputWithContext(ctx context.Context) EntityStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EntityStatusOutput)
}

func (e EntityStatus) ToEntityStatusPtrOutput() EntityStatusPtrOutput {
	return e.ToEntityStatusPtrOutputWithContext(context.Background())
}

func (e EntityStatus) ToEntityStatusPtrOutputWithContext(ctx context.Context) EntityStatusPtrOutput {
	return EntityStatus(e).ToEntityStatusOutputWithContext(ctx).ToEntityStatusPtrOutputWithContext(ctx)
}

func (e EntityStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EntityStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EntityStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EntityStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EntityStatusOutput struct{ *pulumi.OutputState }

func (EntityStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityStatus)(nil)).Elem()
}

func (o EntityStatusOutput) ToEntityStatusOutput() EntityStatusOutput {
	return o
}

func (o EntityStatusOutput) ToEntityStatusOutputWithContext(ctx context.Context) EntityStatusOutput {
	return o
}

func (o EntityStatusOutput) ToEntityStatusPtrOutput() EntityStatusPtrOutput {
	return o.ToEntityStatusPtrOutputWithContext(context.Background())
}

func (o EntityStatusOutput) ToEntityStatusPtrOutputWithContext(ctx context.Context) EntityStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntityStatus) *EntityStatus {
		return &v
	}).(EntityStatusPtrOutput)
}

func (o EntityStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EntityStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EntityStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EntityStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EntityStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EntityStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EntityStatusPtrOutput struct{ *pulumi.OutputState }

func (EntityStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityStatus)(nil)).Elem()
}

func (o EntityStatusPtrOutput) ToEntityStatusPtrOutput() EntityStatusPtrOutput {
	return o
}

func (o EntityStatusPtrOutput) ToEntityStatusPtrOutputWithContext(ctx context.Context) EntityStatusPtrOutput {
	return o
}

func (o EntityStatusPtrOutput) Elem() EntityStatusOutput {
	return o.ApplyT(func(v *EntityStatus) EntityStatus {
		if v != nil {
			return *v
		}
		var ret EntityStatus
		return ret
	}).(EntityStatusOutput)
}

func (o EntityStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EntityStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EntityStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EntityStatusInput is an input type that accepts EntityStatusArgs and EntityStatusOutput values.
// You can construct a concrete instance of `EntityStatusInput` via:
//
//	EntityStatusArgs{...}
type EntityStatusInput interface {
	pulumi.Input

	ToEntityStatusOutput() EntityStatusOutput
	ToEntityStatusOutputWithContext(context.Context) EntityStatusOutput
}

var entityStatusPtrType = reflect.TypeOf((**EntityStatus)(nil)).Elem()

type EntityStatusPtrInput interface {
	pulumi.Input

	ToEntityStatusPtrOutput() EntityStatusPtrOutput
	ToEntityStatusPtrOutputWithContext(context.Context) EntityStatusPtrOutput
}

type entityStatusPtr string

func EntityStatusPtr(v string) EntityStatusPtrInput {
	return (*entityStatusPtr)(&v)
}

func (*entityStatusPtr) ElementType() reflect.Type {
	return entityStatusPtrType
}

func (in *entityStatusPtr) ToEntityStatusPtrOutput() EntityStatusPtrOutput {
	return pulumi.ToOutput(in).(EntityStatusPtrOutput)
}

func (in *entityStatusPtr) ToEntityStatusPtrOutputWithContext(ctx context.Context) EntityStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EntityStatusPtrOutput)
}

// The IP Filter Action
type IPAction string

const (
	IPActionAccept = IPAction("Accept")
	IPActionReject = IPAction("Reject")
)

// Enumerates the possible value Identity type, which currently supports only 'SystemAssigned'
type IdentityType string

const (
	IdentityTypeSystemAssigned = IdentityType("SystemAssigned")
)

func (IdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityType)(nil)).Elem()
}

func (e IdentityType) ToIdentityTypeOutput() IdentityTypeOutput {
	return pulumi.ToOutput(e).(IdentityTypeOutput)
}

func (e IdentityType) ToIdentityTypeOutputWithContext(ctx context.Context) IdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdentityTypeOutput)
}

func (e IdentityType) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return e.ToIdentityTypePtrOutputWithContext(context.Background())
}

func (e IdentityType) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return IdentityType(e).ToIdentityTypeOutputWithContext(ctx).ToIdentityTypePtrOutputWithContext(ctx)
}

func (e IdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdentityTypeOutput struct{ *pulumi.OutputState }

func (IdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityType)(nil)).Elem()
}

func (o IdentityTypeOutput) ToIdentityTypeOutput() IdentityTypeOutput {
	return o
}

func (o IdentityTypeOutput) ToIdentityTypeOutputWithContext(ctx context.Context) IdentityTypeOutput {
	return o
}

func (o IdentityTypeOutput) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return o.ToIdentityTypePtrOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityType) *IdentityType {
		return &v
	}).(IdentityTypePtrOutput)
}

func (o IdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdentityTypePtrOutput struct{ *pulumi.OutputState }

func (IdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityType)(nil)).Elem()
}

func (o IdentityTypePtrOutput) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return o
}

func (o IdentityTypePtrOutput) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return o
}

func (o IdentityTypePtrOutput) Elem() IdentityTypeOutput {
	return o.ApplyT(func(v *IdentityType) IdentityType {
		if v != nil {
			return *v
		}
		var ret IdentityType
		return ret
	}).(IdentityTypeOutput)
}

func (o IdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdentityTypeInput is an input type that accepts IdentityTypeArgs and IdentityTypeOutput values.
// You can construct a concrete instance of `IdentityTypeInput` via:
//
//	IdentityTypeArgs{...}
type IdentityTypeInput interface {
	pulumi.Input

	ToIdentityTypeOutput() IdentityTypeOutput
	ToIdentityTypeOutputWithContext(context.Context) IdentityTypeOutput
}

var identityTypePtrType = reflect.TypeOf((**IdentityType)(nil)).Elem()

type IdentityTypePtrInput interface {
	pulumi.Input

	ToIdentityTypePtrOutput() IdentityTypePtrOutput
	ToIdentityTypePtrOutputWithContext(context.Context) IdentityTypePtrOutput
}

type identityTypePtr string

func IdentityTypePtr(v string) IdentityTypePtrInput {
	return (*identityTypePtr)(&v)
}

func (*identityTypePtr) ElementType() reflect.Type {
	return identityTypePtrType
}

func (in *identityTypePtr) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return pulumi.ToOutput(in).(IdentityTypePtrOutput)
}

func (in *identityTypePtr) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdentityTypePtrOutput)
}

// Enumerates the possible value of keySource for Encryption
type KeySource string

const (
	KeySource_Microsoft_KeyVault = KeySource("Microsoft.KeyVault")
)

func (KeySource) ElementType() reflect.Type {
	return reflect.TypeOf((*KeySource)(nil)).Elem()
}

func (e KeySource) ToKeySourceOutput() KeySourceOutput {
	return pulumi.ToOutput(e).(KeySourceOutput)
}

func (e KeySource) ToKeySourceOutputWithContext(ctx context.Context) KeySourceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(KeySourceOutput)
}

func (e KeySource) ToKeySourcePtrOutput() KeySourcePtrOutput {
	return e.ToKeySourcePtrOutputWithContext(context.Background())
}

func (e KeySource) ToKeySourcePtrOutputWithContext(ctx context.Context) KeySourcePtrOutput {
	return KeySource(e).ToKeySourceOutputWithContext(ctx).ToKeySourcePtrOutputWithContext(ctx)
}

func (e KeySource) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e KeySource) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e KeySource) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e KeySource) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type KeySourceOutput struct{ *pulumi.OutputState }

func (KeySourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeySource)(nil)).Elem()
}

func (o KeySourceOutput) ToKeySourceOutput() KeySourceOutput {
	return o
}

func (o KeySourceOutput) ToKeySourceOutputWithContext(ctx context.Context) KeySourceOutput {
	return o
}

func (o KeySourceOutput) ToKeySourcePtrOutput() KeySourcePtrOutput {
	return o.ToKeySourcePtrOutputWithContext(context.Background())
}

func (o KeySourceOutput) ToKeySourcePtrOutputWithContext(ctx context.Context) KeySourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeySource) *KeySource {
		return &v
	}).(KeySourcePtrOutput)
}

func (o KeySourceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KeySourceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeySource) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KeySourceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeySourceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeySource) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeySourcePtrOutput struct{ *pulumi.OutputState }

func (KeySourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeySource)(nil)).Elem()
}

func (o KeySourcePtrOutput) ToKeySourcePtrOutput() KeySourcePtrOutput {
	return o
}

func (o KeySourcePtrOutput) ToKeySourcePtrOutputWithContext(ctx context.Context) KeySourcePtrOutput {
	return o
}

func (o KeySourcePtrOutput) Elem() KeySourceOutput {
	return o.ApplyT(func(v *KeySource) KeySource {
		if v != nil {
			return *v
		}
		var ret KeySource
		return ret
	}).(KeySourceOutput)
}

func (o KeySourcePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeySourcePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KeySource) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// KeySourceInput is an input type that accepts KeySourceArgs and KeySourceOutput values.
// You can construct a concrete instance of `KeySourceInput` via:
//
//	KeySourceArgs{...}
type KeySourceInput interface {
	pulumi.Input

	ToKeySourceOutput() KeySourceOutput
	ToKeySourceOutputWithContext(context.Context) KeySourceOutput
}

var keySourcePtrType = reflect.TypeOf((**KeySource)(nil)).Elem()

type KeySourcePtrInput interface {
	pulumi.Input

	ToKeySourcePtrOutput() KeySourcePtrOutput
	ToKeySourcePtrOutputWithContext(context.Context) KeySourcePtrOutput
}

type keySourcePtr string

func KeySourcePtr(v string) KeySourcePtrInput {
	return (*keySourcePtr)(&v)
}

func (*keySourcePtr) ElementType() reflect.Type {
	return keySourcePtrType
}

func (in *keySourcePtr) ToKeySourcePtrOutput() KeySourcePtrOutput {
	return pulumi.ToOutput(in).(KeySourcePtrOutput)
}

func (in *keySourcePtr) ToKeySourcePtrOutputWithContext(ctx context.Context) KeySourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(KeySourcePtrOutput)
}

// The IP Filter Action
type NetworkRuleIPAction string

const (
	NetworkRuleIPActionAllow = NetworkRuleIPAction("Allow")
)

// Status of the connection.
type PrivateLinkConnectionStatus string

const (
	PrivateLinkConnectionStatusPending      = PrivateLinkConnectionStatus("Pending")
	PrivateLinkConnectionStatusApproved     = PrivateLinkConnectionStatus("Approved")
	PrivateLinkConnectionStatusRejected     = PrivateLinkConnectionStatus("Rejected")
	PrivateLinkConnectionStatusDisconnected = PrivateLinkConnectionStatus("Disconnected")
)

// Name of this SKU.
type SkuName string

const (
	SkuNameBasic    = SkuName("Basic")
	SkuNameStandard = SkuName("Standard")
)

// The billing tier of this particular SKU.
type SkuTier string

const (
	SkuTierBasic    = SkuTier("Basic")
	SkuTierStandard = SkuTier("Standard")
)

func init() {
	pulumi.RegisterOutputType(EncodingCaptureDescriptionOutput{})
	pulumi.RegisterOutputType(EncodingCaptureDescriptionPtrOutput{})
	pulumi.RegisterOutputType(EntityStatusOutput{})
	pulumi.RegisterOutputType(EntityStatusPtrOutput{})
	pulumi.RegisterOutputType(IdentityTypeOutput{})
	pulumi.RegisterOutputType(IdentityTypePtrOutput{})
	pulumi.RegisterOutputType(KeySourceOutput{})
	pulumi.RegisterOutputType(KeySourcePtrOutput{})
}
