// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AliasPathMetadataResponse struct {
	// The attributes of the token that the alias path is referring to.
	Attributes string `pulumi:"attributes"`
	// The type of the token that the alias path is referring to.
	Type string `pulumi:"type"`
}

// AliasPathMetadataResponseInput is an input type that accepts AliasPathMetadataResponseArgs and AliasPathMetadataResponseOutput values.
// You can construct a concrete instance of `AliasPathMetadataResponseInput` via:
//
//          AliasPathMetadataResponseArgs{...}
type AliasPathMetadataResponseInput interface {
	pulumi.Input

	ToAliasPathMetadataResponseOutput() AliasPathMetadataResponseOutput
	ToAliasPathMetadataResponseOutputWithContext(context.Context) AliasPathMetadataResponseOutput
}

type AliasPathMetadataResponseArgs struct {
	// The attributes of the token that the alias path is referring to.
	Attributes pulumi.StringInput `pulumi:"attributes"`
	// The type of the token that the alias path is referring to.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AliasPathMetadataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasPathMetadataResponse)(nil)).Elem()
}

func (i AliasPathMetadataResponseArgs) ToAliasPathMetadataResponseOutput() AliasPathMetadataResponseOutput {
	return i.ToAliasPathMetadataResponseOutputWithContext(context.Background())
}

func (i AliasPathMetadataResponseArgs) ToAliasPathMetadataResponseOutputWithContext(ctx context.Context) AliasPathMetadataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasPathMetadataResponseOutput)
}

type AliasPathMetadataResponseOutput struct{ *pulumi.OutputState }

func (AliasPathMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasPathMetadataResponse)(nil)).Elem()
}

func (o AliasPathMetadataResponseOutput) ToAliasPathMetadataResponseOutput() AliasPathMetadataResponseOutput {
	return o
}

func (o AliasPathMetadataResponseOutput) ToAliasPathMetadataResponseOutputWithContext(ctx context.Context) AliasPathMetadataResponseOutput {
	return o
}

// The attributes of the token that the alias path is referring to.
func (o AliasPathMetadataResponseOutput) Attributes() pulumi.StringOutput {
	return o.ApplyT(func(v AliasPathMetadataResponse) string { return v.Attributes }).(pulumi.StringOutput)
}

// The type of the token that the alias path is referring to.
func (o AliasPathMetadataResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AliasPathMetadataResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The type of the paths for alias.
type AliasPathResponse struct {
	// The API versions.
	ApiVersions []string `pulumi:"apiVersions"`
	// The metadata of the alias path. If missing, fall back to the default metadata of the alias.
	Metadata AliasPathMetadataResponse `pulumi:"metadata"`
	// The path of an alias.
	Path *string `pulumi:"path"`
	// The pattern for an alias path.
	Pattern *AliasPatternResponse `pulumi:"pattern"`
}

// AliasPathResponseInput is an input type that accepts AliasPathResponseArgs and AliasPathResponseOutput values.
// You can construct a concrete instance of `AliasPathResponseInput` via:
//
//          AliasPathResponseArgs{...}
type AliasPathResponseInput interface {
	pulumi.Input

	ToAliasPathResponseOutput() AliasPathResponseOutput
	ToAliasPathResponseOutputWithContext(context.Context) AliasPathResponseOutput
}

// The type of the paths for alias.
type AliasPathResponseArgs struct {
	// The API versions.
	ApiVersions pulumi.StringArrayInput `pulumi:"apiVersions"`
	// The metadata of the alias path. If missing, fall back to the default metadata of the alias.
	Metadata AliasPathMetadataResponseInput `pulumi:"metadata"`
	// The path of an alias.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The pattern for an alias path.
	Pattern AliasPatternResponsePtrInput `pulumi:"pattern"`
}

func (AliasPathResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasPathResponse)(nil)).Elem()
}

func (i AliasPathResponseArgs) ToAliasPathResponseOutput() AliasPathResponseOutput {
	return i.ToAliasPathResponseOutputWithContext(context.Background())
}

func (i AliasPathResponseArgs) ToAliasPathResponseOutputWithContext(ctx context.Context) AliasPathResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasPathResponseOutput)
}

// AliasPathResponseArrayInput is an input type that accepts AliasPathResponseArray and AliasPathResponseArrayOutput values.
// You can construct a concrete instance of `AliasPathResponseArrayInput` via:
//
//          AliasPathResponseArray{ AliasPathResponseArgs{...} }
type AliasPathResponseArrayInput interface {
	pulumi.Input

	ToAliasPathResponseArrayOutput() AliasPathResponseArrayOutput
	ToAliasPathResponseArrayOutputWithContext(context.Context) AliasPathResponseArrayOutput
}

type AliasPathResponseArray []AliasPathResponseInput

func (AliasPathResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AliasPathResponse)(nil)).Elem()
}

func (i AliasPathResponseArray) ToAliasPathResponseArrayOutput() AliasPathResponseArrayOutput {
	return i.ToAliasPathResponseArrayOutputWithContext(context.Background())
}

func (i AliasPathResponseArray) ToAliasPathResponseArrayOutputWithContext(ctx context.Context) AliasPathResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasPathResponseArrayOutput)
}

// The type of the paths for alias.
type AliasPathResponseOutput struct{ *pulumi.OutputState }

func (AliasPathResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasPathResponse)(nil)).Elem()
}

func (o AliasPathResponseOutput) ToAliasPathResponseOutput() AliasPathResponseOutput {
	return o
}

func (o AliasPathResponseOutput) ToAliasPathResponseOutputWithContext(ctx context.Context) AliasPathResponseOutput {
	return o
}

// The API versions.
func (o AliasPathResponseOutput) ApiVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AliasPathResponse) []string { return v.ApiVersions }).(pulumi.StringArrayOutput)
}

// The metadata of the alias path. If missing, fall back to the default metadata of the alias.
func (o AliasPathResponseOutput) Metadata() AliasPathMetadataResponseOutput {
	return o.ApplyT(func(v AliasPathResponse) AliasPathMetadataResponse { return v.Metadata }).(AliasPathMetadataResponseOutput)
}

// The path of an alias.
func (o AliasPathResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AliasPathResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The pattern for an alias path.
func (o AliasPathResponseOutput) Pattern() AliasPatternResponsePtrOutput {
	return o.ApplyT(func(v AliasPathResponse) *AliasPatternResponse { return v.Pattern }).(AliasPatternResponsePtrOutput)
}

type AliasPathResponseArrayOutput struct{ *pulumi.OutputState }

func (AliasPathResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AliasPathResponse)(nil)).Elem()
}

func (o AliasPathResponseArrayOutput) ToAliasPathResponseArrayOutput() AliasPathResponseArrayOutput {
	return o
}

func (o AliasPathResponseArrayOutput) ToAliasPathResponseArrayOutputWithContext(ctx context.Context) AliasPathResponseArrayOutput {
	return o
}

func (o AliasPathResponseArrayOutput) Index(i pulumi.IntInput) AliasPathResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AliasPathResponse {
		return vs[0].([]AliasPathResponse)[vs[1].(int)]
	}).(AliasPathResponseOutput)
}

// The type of the pattern for an alias path.
type AliasPatternResponse struct {
	// The alias pattern phrase.
	Phrase *string `pulumi:"phrase"`
	// The type of alias pattern
	Type *string `pulumi:"type"`
	// The alias pattern variable.
	Variable *string `pulumi:"variable"`
}

// AliasPatternResponseInput is an input type that accepts AliasPatternResponseArgs and AliasPatternResponseOutput values.
// You can construct a concrete instance of `AliasPatternResponseInput` via:
//
//          AliasPatternResponseArgs{...}
type AliasPatternResponseInput interface {
	pulumi.Input

	ToAliasPatternResponseOutput() AliasPatternResponseOutput
	ToAliasPatternResponseOutputWithContext(context.Context) AliasPatternResponseOutput
}

// The type of the pattern for an alias path.
type AliasPatternResponseArgs struct {
	// The alias pattern phrase.
	Phrase pulumi.StringPtrInput `pulumi:"phrase"`
	// The type of alias pattern
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The alias pattern variable.
	Variable pulumi.StringPtrInput `pulumi:"variable"`
}

func (AliasPatternResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasPatternResponse)(nil)).Elem()
}

func (i AliasPatternResponseArgs) ToAliasPatternResponseOutput() AliasPatternResponseOutput {
	return i.ToAliasPatternResponseOutputWithContext(context.Background())
}

func (i AliasPatternResponseArgs) ToAliasPatternResponseOutputWithContext(ctx context.Context) AliasPatternResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasPatternResponseOutput)
}

func (i AliasPatternResponseArgs) ToAliasPatternResponsePtrOutput() AliasPatternResponsePtrOutput {
	return i.ToAliasPatternResponsePtrOutputWithContext(context.Background())
}

func (i AliasPatternResponseArgs) ToAliasPatternResponsePtrOutputWithContext(ctx context.Context) AliasPatternResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasPatternResponseOutput).ToAliasPatternResponsePtrOutputWithContext(ctx)
}

// AliasPatternResponsePtrInput is an input type that accepts AliasPatternResponseArgs, AliasPatternResponsePtr and AliasPatternResponsePtrOutput values.
// You can construct a concrete instance of `AliasPatternResponsePtrInput` via:
//
//          AliasPatternResponseArgs{...}
//
//  or:
//
//          nil
type AliasPatternResponsePtrInput interface {
	pulumi.Input

	ToAliasPatternResponsePtrOutput() AliasPatternResponsePtrOutput
	ToAliasPatternResponsePtrOutputWithContext(context.Context) AliasPatternResponsePtrOutput
}

type aliasPatternResponsePtrType AliasPatternResponseArgs

func AliasPatternResponsePtr(v *AliasPatternResponseArgs) AliasPatternResponsePtrInput {
	return (*aliasPatternResponsePtrType)(v)
}

func (*aliasPatternResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AliasPatternResponse)(nil)).Elem()
}

func (i *aliasPatternResponsePtrType) ToAliasPatternResponsePtrOutput() AliasPatternResponsePtrOutput {
	return i.ToAliasPatternResponsePtrOutputWithContext(context.Background())
}

func (i *aliasPatternResponsePtrType) ToAliasPatternResponsePtrOutputWithContext(ctx context.Context) AliasPatternResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasPatternResponsePtrOutput)
}

// The type of the pattern for an alias path.
type AliasPatternResponseOutput struct{ *pulumi.OutputState }

func (AliasPatternResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasPatternResponse)(nil)).Elem()
}

func (o AliasPatternResponseOutput) ToAliasPatternResponseOutput() AliasPatternResponseOutput {
	return o
}

func (o AliasPatternResponseOutput) ToAliasPatternResponseOutputWithContext(ctx context.Context) AliasPatternResponseOutput {
	return o
}

func (o AliasPatternResponseOutput) ToAliasPatternResponsePtrOutput() AliasPatternResponsePtrOutput {
	return o.ToAliasPatternResponsePtrOutputWithContext(context.Background())
}

func (o AliasPatternResponseOutput) ToAliasPatternResponsePtrOutputWithContext(ctx context.Context) AliasPatternResponsePtrOutput {
	return o.ApplyT(func(v AliasPatternResponse) *AliasPatternResponse {
		return &v
	}).(AliasPatternResponsePtrOutput)
}

// The alias pattern phrase.
func (o AliasPatternResponseOutput) Phrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AliasPatternResponse) *string { return v.Phrase }).(pulumi.StringPtrOutput)
}

// The type of alias pattern
func (o AliasPatternResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AliasPatternResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The alias pattern variable.
func (o AliasPatternResponseOutput) Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AliasPatternResponse) *string { return v.Variable }).(pulumi.StringPtrOutput)
}

type AliasPatternResponsePtrOutput struct{ *pulumi.OutputState }

func (AliasPatternResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AliasPatternResponse)(nil)).Elem()
}

func (o AliasPatternResponsePtrOutput) ToAliasPatternResponsePtrOutput() AliasPatternResponsePtrOutput {
	return o
}

func (o AliasPatternResponsePtrOutput) ToAliasPatternResponsePtrOutputWithContext(ctx context.Context) AliasPatternResponsePtrOutput {
	return o
}

func (o AliasPatternResponsePtrOutput) Elem() AliasPatternResponseOutput {
	return o.ApplyT(func(v *AliasPatternResponse) AliasPatternResponse { return *v }).(AliasPatternResponseOutput)
}

// The alias pattern phrase.
func (o AliasPatternResponsePtrOutput) Phrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AliasPatternResponse) *string {
		if v == nil {
			return nil
		}
		return v.Phrase
	}).(pulumi.StringPtrOutput)
}

// The type of alias pattern
func (o AliasPatternResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AliasPatternResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The alias pattern variable.
func (o AliasPatternResponsePtrOutput) Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AliasPatternResponse) *string {
		if v == nil {
			return nil
		}
		return v.Variable
	}).(pulumi.StringPtrOutput)
}

// The alias type.
type AliasResponse struct {
	// The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata
	DefaultMetadata AliasPathMetadataResponse `pulumi:"defaultMetadata"`
	// The default path for an alias.
	DefaultPath *string `pulumi:"defaultPath"`
	// The default pattern for an alias.
	DefaultPattern *AliasPatternResponse `pulumi:"defaultPattern"`
	// The alias name.
	Name *string `pulumi:"name"`
	// The paths for an alias.
	Paths []AliasPathResponse `pulumi:"paths"`
	// The type of the alias.
	Type *string `pulumi:"type"`
}

// AliasResponseInput is an input type that accepts AliasResponseArgs and AliasResponseOutput values.
// You can construct a concrete instance of `AliasResponseInput` via:
//
//          AliasResponseArgs{...}
type AliasResponseInput interface {
	pulumi.Input

	ToAliasResponseOutput() AliasResponseOutput
	ToAliasResponseOutputWithContext(context.Context) AliasResponseOutput
}

// The alias type.
type AliasResponseArgs struct {
	// The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata
	DefaultMetadata AliasPathMetadataResponseInput `pulumi:"defaultMetadata"`
	// The default path for an alias.
	DefaultPath pulumi.StringPtrInput `pulumi:"defaultPath"`
	// The default pattern for an alias.
	DefaultPattern AliasPatternResponsePtrInput `pulumi:"defaultPattern"`
	// The alias name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The paths for an alias.
	Paths AliasPathResponseArrayInput `pulumi:"paths"`
	// The type of the alias.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AliasResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasResponse)(nil)).Elem()
}

func (i AliasResponseArgs) ToAliasResponseOutput() AliasResponseOutput {
	return i.ToAliasResponseOutputWithContext(context.Background())
}

func (i AliasResponseArgs) ToAliasResponseOutputWithContext(ctx context.Context) AliasResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasResponseOutput)
}

// AliasResponseArrayInput is an input type that accepts AliasResponseArray and AliasResponseArrayOutput values.
// You can construct a concrete instance of `AliasResponseArrayInput` via:
//
//          AliasResponseArray{ AliasResponseArgs{...} }
type AliasResponseArrayInput interface {
	pulumi.Input

	ToAliasResponseArrayOutput() AliasResponseArrayOutput
	ToAliasResponseArrayOutputWithContext(context.Context) AliasResponseArrayOutput
}

type AliasResponseArray []AliasResponseInput

func (AliasResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AliasResponse)(nil)).Elem()
}

func (i AliasResponseArray) ToAliasResponseArrayOutput() AliasResponseArrayOutput {
	return i.ToAliasResponseArrayOutputWithContext(context.Background())
}

func (i AliasResponseArray) ToAliasResponseArrayOutputWithContext(ctx context.Context) AliasResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasResponseArrayOutput)
}

// The alias type.
type AliasResponseOutput struct{ *pulumi.OutputState }

func (AliasResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasResponse)(nil)).Elem()
}

func (o AliasResponseOutput) ToAliasResponseOutput() AliasResponseOutput {
	return o
}

func (o AliasResponseOutput) ToAliasResponseOutputWithContext(ctx context.Context) AliasResponseOutput {
	return o
}

// The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata
func (o AliasResponseOutput) DefaultMetadata() AliasPathMetadataResponseOutput {
	return o.ApplyT(func(v AliasResponse) AliasPathMetadataResponse { return v.DefaultMetadata }).(AliasPathMetadataResponseOutput)
}

// The default path for an alias.
func (o AliasResponseOutput) DefaultPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AliasResponse) *string { return v.DefaultPath }).(pulumi.StringPtrOutput)
}

// The default pattern for an alias.
func (o AliasResponseOutput) DefaultPattern() AliasPatternResponsePtrOutput {
	return o.ApplyT(func(v AliasResponse) *AliasPatternResponse { return v.DefaultPattern }).(AliasPatternResponsePtrOutput)
}

// The alias name.
func (o AliasResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AliasResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The paths for an alias.
func (o AliasResponseOutput) Paths() AliasPathResponseArrayOutput {
	return o.ApplyT(func(v AliasResponse) []AliasPathResponse { return v.Paths }).(AliasPathResponseArrayOutput)
}

// The type of the alias.
func (o AliasResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AliasResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AliasResponseArrayOutput struct{ *pulumi.OutputState }

func (AliasResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AliasResponse)(nil)).Elem()
}

func (o AliasResponseArrayOutput) ToAliasResponseArrayOutput() AliasResponseArrayOutput {
	return o
}

func (o AliasResponseArrayOutput) ToAliasResponseArrayOutputWithContext(ctx context.Context) AliasResponseArrayOutput {
	return o
}

func (o AliasResponseArrayOutput) Index(i pulumi.IntInput) AliasResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AliasResponse {
		return vs[0].([]AliasResponse)[vs[1].(int)]
	}).(AliasResponseOutput)
}

type ApiProfileResponse struct {
	// The API version.
	ApiVersion string `pulumi:"apiVersion"`
	// The profile version.
	ProfileVersion string `pulumi:"profileVersion"`
}

// ApiProfileResponseInput is an input type that accepts ApiProfileResponseArgs and ApiProfileResponseOutput values.
// You can construct a concrete instance of `ApiProfileResponseInput` via:
//
//          ApiProfileResponseArgs{...}
type ApiProfileResponseInput interface {
	pulumi.Input

	ToApiProfileResponseOutput() ApiProfileResponseOutput
	ToApiProfileResponseOutputWithContext(context.Context) ApiProfileResponseOutput
}

type ApiProfileResponseArgs struct {
	// The API version.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// The profile version.
	ProfileVersion pulumi.StringInput `pulumi:"profileVersion"`
}

func (ApiProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiProfileResponse)(nil)).Elem()
}

func (i ApiProfileResponseArgs) ToApiProfileResponseOutput() ApiProfileResponseOutput {
	return i.ToApiProfileResponseOutputWithContext(context.Background())
}

func (i ApiProfileResponseArgs) ToApiProfileResponseOutputWithContext(ctx context.Context) ApiProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiProfileResponseOutput)
}

// ApiProfileResponseArrayInput is an input type that accepts ApiProfileResponseArray and ApiProfileResponseArrayOutput values.
// You can construct a concrete instance of `ApiProfileResponseArrayInput` via:
//
//          ApiProfileResponseArray{ ApiProfileResponseArgs{...} }
type ApiProfileResponseArrayInput interface {
	pulumi.Input

	ToApiProfileResponseArrayOutput() ApiProfileResponseArrayOutput
	ToApiProfileResponseArrayOutputWithContext(context.Context) ApiProfileResponseArrayOutput
}

type ApiProfileResponseArray []ApiProfileResponseInput

func (ApiProfileResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiProfileResponse)(nil)).Elem()
}

func (i ApiProfileResponseArray) ToApiProfileResponseArrayOutput() ApiProfileResponseArrayOutput {
	return i.ToApiProfileResponseArrayOutputWithContext(context.Background())
}

func (i ApiProfileResponseArray) ToApiProfileResponseArrayOutputWithContext(ctx context.Context) ApiProfileResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiProfileResponseArrayOutput)
}

type ApiProfileResponseOutput struct{ *pulumi.OutputState }

func (ApiProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiProfileResponse)(nil)).Elem()
}

func (o ApiProfileResponseOutput) ToApiProfileResponseOutput() ApiProfileResponseOutput {
	return o
}

func (o ApiProfileResponseOutput) ToApiProfileResponseOutputWithContext(ctx context.Context) ApiProfileResponseOutput {
	return o
}

// The API version.
func (o ApiProfileResponseOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApiProfileResponse) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// The profile version.
func (o ApiProfileResponseOutput) ProfileVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApiProfileResponse) string { return v.ProfileVersion }).(pulumi.StringOutput)
}

type ApiProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (ApiProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiProfileResponse)(nil)).Elem()
}

func (o ApiProfileResponseArrayOutput) ToApiProfileResponseArrayOutput() ApiProfileResponseArrayOutput {
	return o
}

func (o ApiProfileResponseArrayOutput) ToApiProfileResponseArrayOutputWithContext(ctx context.Context) ApiProfileResponseArrayOutput {
	return o
}

func (o ApiProfileResponseArrayOutput) Index(i pulumi.IntInput) ApiProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiProfileResponse {
		return vs[0].([]ApiProfileResponse)[vs[1].(int)]
	}).(ApiProfileResponseOutput)
}

// Deployment dependency information.
type BasicDependencyResponse struct {
	// The ID of the dependency.
	Id *string `pulumi:"id"`
	// The dependency resource name.
	ResourceName *string `pulumi:"resourceName"`
	// The dependency resource type.
	ResourceType *string `pulumi:"resourceType"`
}

// BasicDependencyResponseInput is an input type that accepts BasicDependencyResponseArgs and BasicDependencyResponseOutput values.
// You can construct a concrete instance of `BasicDependencyResponseInput` via:
//
//          BasicDependencyResponseArgs{...}
type BasicDependencyResponseInput interface {
	pulumi.Input

	ToBasicDependencyResponseOutput() BasicDependencyResponseOutput
	ToBasicDependencyResponseOutputWithContext(context.Context) BasicDependencyResponseOutput
}

// Deployment dependency information.
type BasicDependencyResponseArgs struct {
	// The ID of the dependency.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The dependency resource name.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// The dependency resource type.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
}

func (BasicDependencyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicDependencyResponse)(nil)).Elem()
}

func (i BasicDependencyResponseArgs) ToBasicDependencyResponseOutput() BasicDependencyResponseOutput {
	return i.ToBasicDependencyResponseOutputWithContext(context.Background())
}

func (i BasicDependencyResponseArgs) ToBasicDependencyResponseOutputWithContext(ctx context.Context) BasicDependencyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicDependencyResponseOutput)
}

// BasicDependencyResponseArrayInput is an input type that accepts BasicDependencyResponseArray and BasicDependencyResponseArrayOutput values.
// You can construct a concrete instance of `BasicDependencyResponseArrayInput` via:
//
//          BasicDependencyResponseArray{ BasicDependencyResponseArgs{...} }
type BasicDependencyResponseArrayInput interface {
	pulumi.Input

	ToBasicDependencyResponseArrayOutput() BasicDependencyResponseArrayOutput
	ToBasicDependencyResponseArrayOutputWithContext(context.Context) BasicDependencyResponseArrayOutput
}

type BasicDependencyResponseArray []BasicDependencyResponseInput

func (BasicDependencyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BasicDependencyResponse)(nil)).Elem()
}

func (i BasicDependencyResponseArray) ToBasicDependencyResponseArrayOutput() BasicDependencyResponseArrayOutput {
	return i.ToBasicDependencyResponseArrayOutputWithContext(context.Background())
}

func (i BasicDependencyResponseArray) ToBasicDependencyResponseArrayOutputWithContext(ctx context.Context) BasicDependencyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicDependencyResponseArrayOutput)
}

// Deployment dependency information.
type BasicDependencyResponseOutput struct{ *pulumi.OutputState }

func (BasicDependencyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicDependencyResponse)(nil)).Elem()
}

func (o BasicDependencyResponseOutput) ToBasicDependencyResponseOutput() BasicDependencyResponseOutput {
	return o
}

func (o BasicDependencyResponseOutput) ToBasicDependencyResponseOutputWithContext(ctx context.Context) BasicDependencyResponseOutput {
	return o
}

// The ID of the dependency.
func (o BasicDependencyResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BasicDependencyResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The dependency resource name.
func (o BasicDependencyResponseOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BasicDependencyResponse) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// The dependency resource type.
func (o BasicDependencyResponseOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BasicDependencyResponse) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

type BasicDependencyResponseArrayOutput struct{ *pulumi.OutputState }

func (BasicDependencyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BasicDependencyResponse)(nil)).Elem()
}

func (o BasicDependencyResponseArrayOutput) ToBasicDependencyResponseArrayOutput() BasicDependencyResponseArrayOutput {
	return o
}

func (o BasicDependencyResponseArrayOutput) ToBasicDependencyResponseArrayOutputWithContext(ctx context.Context) BasicDependencyResponseArrayOutput {
	return o
}

func (o BasicDependencyResponseArrayOutput) Index(i pulumi.IntInput) BasicDependencyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BasicDependencyResponse {
		return vs[0].([]BasicDependencyResponse)[vs[1].(int)]
	}).(BasicDependencyResponseOutput)
}

// The details of a management group used during creation.
type CreateManagementGroupDetails struct {
	// (Optional) The ID of the parent management group used during creation.
	Parent *CreateParentGroupInfo `pulumi:"parent"`
}

// CreateManagementGroupDetailsInput is an input type that accepts CreateManagementGroupDetailsArgs and CreateManagementGroupDetailsOutput values.
// You can construct a concrete instance of `CreateManagementGroupDetailsInput` via:
//
//          CreateManagementGroupDetailsArgs{...}
type CreateManagementGroupDetailsInput interface {
	pulumi.Input

	ToCreateManagementGroupDetailsOutput() CreateManagementGroupDetailsOutput
	ToCreateManagementGroupDetailsOutputWithContext(context.Context) CreateManagementGroupDetailsOutput
}

// The details of a management group used during creation.
type CreateManagementGroupDetailsArgs struct {
	// (Optional) The ID of the parent management group used during creation.
	Parent CreateParentGroupInfoPtrInput `pulumi:"parent"`
}

func (CreateManagementGroupDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateManagementGroupDetails)(nil)).Elem()
}

func (i CreateManagementGroupDetailsArgs) ToCreateManagementGroupDetailsOutput() CreateManagementGroupDetailsOutput {
	return i.ToCreateManagementGroupDetailsOutputWithContext(context.Background())
}

func (i CreateManagementGroupDetailsArgs) ToCreateManagementGroupDetailsOutputWithContext(ctx context.Context) CreateManagementGroupDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateManagementGroupDetailsOutput)
}

func (i CreateManagementGroupDetailsArgs) ToCreateManagementGroupDetailsPtrOutput() CreateManagementGroupDetailsPtrOutput {
	return i.ToCreateManagementGroupDetailsPtrOutputWithContext(context.Background())
}

func (i CreateManagementGroupDetailsArgs) ToCreateManagementGroupDetailsPtrOutputWithContext(ctx context.Context) CreateManagementGroupDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateManagementGroupDetailsOutput).ToCreateManagementGroupDetailsPtrOutputWithContext(ctx)
}

// CreateManagementGroupDetailsPtrInput is an input type that accepts CreateManagementGroupDetailsArgs, CreateManagementGroupDetailsPtr and CreateManagementGroupDetailsPtrOutput values.
// You can construct a concrete instance of `CreateManagementGroupDetailsPtrInput` via:
//
//          CreateManagementGroupDetailsArgs{...}
//
//  or:
//
//          nil
type CreateManagementGroupDetailsPtrInput interface {
	pulumi.Input

	ToCreateManagementGroupDetailsPtrOutput() CreateManagementGroupDetailsPtrOutput
	ToCreateManagementGroupDetailsPtrOutputWithContext(context.Context) CreateManagementGroupDetailsPtrOutput
}

type createManagementGroupDetailsPtrType CreateManagementGroupDetailsArgs

func CreateManagementGroupDetailsPtr(v *CreateManagementGroupDetailsArgs) CreateManagementGroupDetailsPtrInput {
	return (*createManagementGroupDetailsPtrType)(v)
}

func (*createManagementGroupDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateManagementGroupDetails)(nil)).Elem()
}

func (i *createManagementGroupDetailsPtrType) ToCreateManagementGroupDetailsPtrOutput() CreateManagementGroupDetailsPtrOutput {
	return i.ToCreateManagementGroupDetailsPtrOutputWithContext(context.Background())
}

func (i *createManagementGroupDetailsPtrType) ToCreateManagementGroupDetailsPtrOutputWithContext(ctx context.Context) CreateManagementGroupDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateManagementGroupDetailsPtrOutput)
}

// The details of a management group used during creation.
type CreateManagementGroupDetailsOutput struct{ *pulumi.OutputState }

func (CreateManagementGroupDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateManagementGroupDetails)(nil)).Elem()
}

func (o CreateManagementGroupDetailsOutput) ToCreateManagementGroupDetailsOutput() CreateManagementGroupDetailsOutput {
	return o
}

func (o CreateManagementGroupDetailsOutput) ToCreateManagementGroupDetailsOutputWithContext(ctx context.Context) CreateManagementGroupDetailsOutput {
	return o
}

func (o CreateManagementGroupDetailsOutput) ToCreateManagementGroupDetailsPtrOutput() CreateManagementGroupDetailsPtrOutput {
	return o.ToCreateManagementGroupDetailsPtrOutputWithContext(context.Background())
}

func (o CreateManagementGroupDetailsOutput) ToCreateManagementGroupDetailsPtrOutputWithContext(ctx context.Context) CreateManagementGroupDetailsPtrOutput {
	return o.ApplyT(func(v CreateManagementGroupDetails) *CreateManagementGroupDetails {
		return &v
	}).(CreateManagementGroupDetailsPtrOutput)
}

// (Optional) The ID of the parent management group used during creation.
func (o CreateManagementGroupDetailsOutput) Parent() CreateParentGroupInfoPtrOutput {
	return o.ApplyT(func(v CreateManagementGroupDetails) *CreateParentGroupInfo { return v.Parent }).(CreateParentGroupInfoPtrOutput)
}

type CreateManagementGroupDetailsPtrOutput struct{ *pulumi.OutputState }

func (CreateManagementGroupDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateManagementGroupDetails)(nil)).Elem()
}

func (o CreateManagementGroupDetailsPtrOutput) ToCreateManagementGroupDetailsPtrOutput() CreateManagementGroupDetailsPtrOutput {
	return o
}

func (o CreateManagementGroupDetailsPtrOutput) ToCreateManagementGroupDetailsPtrOutputWithContext(ctx context.Context) CreateManagementGroupDetailsPtrOutput {
	return o
}

func (o CreateManagementGroupDetailsPtrOutput) Elem() CreateManagementGroupDetailsOutput {
	return o.ApplyT(func(v *CreateManagementGroupDetails) CreateManagementGroupDetails { return *v }).(CreateManagementGroupDetailsOutput)
}

// (Optional) The ID of the parent management group used during creation.
func (o CreateManagementGroupDetailsPtrOutput) Parent() CreateParentGroupInfoPtrOutput {
	return o.ApplyT(func(v *CreateManagementGroupDetails) *CreateParentGroupInfo {
		if v == nil {
			return nil
		}
		return v.Parent
	}).(CreateParentGroupInfoPtrOutput)
}

// (Optional) The ID of the parent management group used during creation.
type CreateParentGroupInfo struct {
	// The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
	Id *string `pulumi:"id"`
}

// CreateParentGroupInfoInput is an input type that accepts CreateParentGroupInfoArgs and CreateParentGroupInfoOutput values.
// You can construct a concrete instance of `CreateParentGroupInfoInput` via:
//
//          CreateParentGroupInfoArgs{...}
type CreateParentGroupInfoInput interface {
	pulumi.Input

	ToCreateParentGroupInfoOutput() CreateParentGroupInfoOutput
	ToCreateParentGroupInfoOutputWithContext(context.Context) CreateParentGroupInfoOutput
}

// (Optional) The ID of the parent management group used during creation.
type CreateParentGroupInfoArgs struct {
	// The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (CreateParentGroupInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateParentGroupInfo)(nil)).Elem()
}

func (i CreateParentGroupInfoArgs) ToCreateParentGroupInfoOutput() CreateParentGroupInfoOutput {
	return i.ToCreateParentGroupInfoOutputWithContext(context.Background())
}

func (i CreateParentGroupInfoArgs) ToCreateParentGroupInfoOutputWithContext(ctx context.Context) CreateParentGroupInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateParentGroupInfoOutput)
}

func (i CreateParentGroupInfoArgs) ToCreateParentGroupInfoPtrOutput() CreateParentGroupInfoPtrOutput {
	return i.ToCreateParentGroupInfoPtrOutputWithContext(context.Background())
}

func (i CreateParentGroupInfoArgs) ToCreateParentGroupInfoPtrOutputWithContext(ctx context.Context) CreateParentGroupInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateParentGroupInfoOutput).ToCreateParentGroupInfoPtrOutputWithContext(ctx)
}

// CreateParentGroupInfoPtrInput is an input type that accepts CreateParentGroupInfoArgs, CreateParentGroupInfoPtr and CreateParentGroupInfoPtrOutput values.
// You can construct a concrete instance of `CreateParentGroupInfoPtrInput` via:
//
//          CreateParentGroupInfoArgs{...}
//
//  or:
//
//          nil
type CreateParentGroupInfoPtrInput interface {
	pulumi.Input

	ToCreateParentGroupInfoPtrOutput() CreateParentGroupInfoPtrOutput
	ToCreateParentGroupInfoPtrOutputWithContext(context.Context) CreateParentGroupInfoPtrOutput
}

type createParentGroupInfoPtrType CreateParentGroupInfoArgs

func CreateParentGroupInfoPtr(v *CreateParentGroupInfoArgs) CreateParentGroupInfoPtrInput {
	return (*createParentGroupInfoPtrType)(v)
}

func (*createParentGroupInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateParentGroupInfo)(nil)).Elem()
}

func (i *createParentGroupInfoPtrType) ToCreateParentGroupInfoPtrOutput() CreateParentGroupInfoPtrOutput {
	return i.ToCreateParentGroupInfoPtrOutputWithContext(context.Background())
}

func (i *createParentGroupInfoPtrType) ToCreateParentGroupInfoPtrOutputWithContext(ctx context.Context) CreateParentGroupInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateParentGroupInfoPtrOutput)
}

// (Optional) The ID of the parent management group used during creation.
type CreateParentGroupInfoOutput struct{ *pulumi.OutputState }

func (CreateParentGroupInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateParentGroupInfo)(nil)).Elem()
}

func (o CreateParentGroupInfoOutput) ToCreateParentGroupInfoOutput() CreateParentGroupInfoOutput {
	return o
}

func (o CreateParentGroupInfoOutput) ToCreateParentGroupInfoOutputWithContext(ctx context.Context) CreateParentGroupInfoOutput {
	return o
}

func (o CreateParentGroupInfoOutput) ToCreateParentGroupInfoPtrOutput() CreateParentGroupInfoPtrOutput {
	return o.ToCreateParentGroupInfoPtrOutputWithContext(context.Background())
}

func (o CreateParentGroupInfoOutput) ToCreateParentGroupInfoPtrOutputWithContext(ctx context.Context) CreateParentGroupInfoPtrOutput {
	return o.ApplyT(func(v CreateParentGroupInfo) *CreateParentGroupInfo {
		return &v
	}).(CreateParentGroupInfoPtrOutput)
}

// The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
func (o CreateParentGroupInfoOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CreateParentGroupInfo) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type CreateParentGroupInfoPtrOutput struct{ *pulumi.OutputState }

func (CreateParentGroupInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateParentGroupInfo)(nil)).Elem()
}

func (o CreateParentGroupInfoPtrOutput) ToCreateParentGroupInfoPtrOutput() CreateParentGroupInfoPtrOutput {
	return o
}

func (o CreateParentGroupInfoPtrOutput) ToCreateParentGroupInfoPtrOutputWithContext(ctx context.Context) CreateParentGroupInfoPtrOutput {
	return o
}

func (o CreateParentGroupInfoPtrOutput) Elem() CreateParentGroupInfoOutput {
	return o.ApplyT(func(v *CreateParentGroupInfo) CreateParentGroupInfo { return *v }).(CreateParentGroupInfoOutput)
}

// The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
func (o CreateParentGroupInfoPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CreateParentGroupInfo) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The debug setting.
type DebugSetting struct {
	// Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations.
	DetailLevel *string `pulumi:"detailLevel"`
}

// DebugSettingInput is an input type that accepts DebugSettingArgs and DebugSettingOutput values.
// You can construct a concrete instance of `DebugSettingInput` via:
//
//          DebugSettingArgs{...}
type DebugSettingInput interface {
	pulumi.Input

	ToDebugSettingOutput() DebugSettingOutput
	ToDebugSettingOutputWithContext(context.Context) DebugSettingOutput
}

// The debug setting.
type DebugSettingArgs struct {
	// Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations.
	DetailLevel pulumi.StringPtrInput `pulumi:"detailLevel"`
}

func (DebugSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DebugSetting)(nil)).Elem()
}

func (i DebugSettingArgs) ToDebugSettingOutput() DebugSettingOutput {
	return i.ToDebugSettingOutputWithContext(context.Background())
}

func (i DebugSettingArgs) ToDebugSettingOutputWithContext(ctx context.Context) DebugSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DebugSettingOutput)
}

func (i DebugSettingArgs) ToDebugSettingPtrOutput() DebugSettingPtrOutput {
	return i.ToDebugSettingPtrOutputWithContext(context.Background())
}

func (i DebugSettingArgs) ToDebugSettingPtrOutputWithContext(ctx context.Context) DebugSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DebugSettingOutput).ToDebugSettingPtrOutputWithContext(ctx)
}

// DebugSettingPtrInput is an input type that accepts DebugSettingArgs, DebugSettingPtr and DebugSettingPtrOutput values.
// You can construct a concrete instance of `DebugSettingPtrInput` via:
//
//          DebugSettingArgs{...}
//
//  or:
//
//          nil
type DebugSettingPtrInput interface {
	pulumi.Input

	ToDebugSettingPtrOutput() DebugSettingPtrOutput
	ToDebugSettingPtrOutputWithContext(context.Context) DebugSettingPtrOutput
}

type debugSettingPtrType DebugSettingArgs

func DebugSettingPtr(v *DebugSettingArgs) DebugSettingPtrInput {
	return (*debugSettingPtrType)(v)
}

func (*debugSettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DebugSetting)(nil)).Elem()
}

func (i *debugSettingPtrType) ToDebugSettingPtrOutput() DebugSettingPtrOutput {
	return i.ToDebugSettingPtrOutputWithContext(context.Background())
}

func (i *debugSettingPtrType) ToDebugSettingPtrOutputWithContext(ctx context.Context) DebugSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DebugSettingPtrOutput)
}

// The debug setting.
type DebugSettingOutput struct{ *pulumi.OutputState }

func (DebugSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DebugSetting)(nil)).Elem()
}

func (o DebugSettingOutput) ToDebugSettingOutput() DebugSettingOutput {
	return o
}

func (o DebugSettingOutput) ToDebugSettingOutputWithContext(ctx context.Context) DebugSettingOutput {
	return o
}

func (o DebugSettingOutput) ToDebugSettingPtrOutput() DebugSettingPtrOutput {
	return o.ToDebugSettingPtrOutputWithContext(context.Background())
}

func (o DebugSettingOutput) ToDebugSettingPtrOutputWithContext(ctx context.Context) DebugSettingPtrOutput {
	return o.ApplyT(func(v DebugSetting) *DebugSetting {
		return &v
	}).(DebugSettingPtrOutput)
}

// Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations.
func (o DebugSettingOutput) DetailLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DebugSetting) *string { return v.DetailLevel }).(pulumi.StringPtrOutput)
}

type DebugSettingPtrOutput struct{ *pulumi.OutputState }

func (DebugSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DebugSetting)(nil)).Elem()
}

func (o DebugSettingPtrOutput) ToDebugSettingPtrOutput() DebugSettingPtrOutput {
	return o
}

func (o DebugSettingPtrOutput) ToDebugSettingPtrOutputWithContext(ctx context.Context) DebugSettingPtrOutput {
	return o
}

func (o DebugSettingPtrOutput) Elem() DebugSettingOutput {
	return o.ApplyT(func(v *DebugSetting) DebugSetting { return *v }).(DebugSettingOutput)
}

// Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations.
func (o DebugSettingPtrOutput) DetailLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DebugSetting) *string {
		if v == nil {
			return nil
		}
		return v.DetailLevel
	}).(pulumi.StringPtrOutput)
}

// The debug setting.
type DebugSettingResponse struct {
	// Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations.
	DetailLevel *string `pulumi:"detailLevel"`
}

// DebugSettingResponseInput is an input type that accepts DebugSettingResponseArgs and DebugSettingResponseOutput values.
// You can construct a concrete instance of `DebugSettingResponseInput` via:
//
//          DebugSettingResponseArgs{...}
type DebugSettingResponseInput interface {
	pulumi.Input

	ToDebugSettingResponseOutput() DebugSettingResponseOutput
	ToDebugSettingResponseOutputWithContext(context.Context) DebugSettingResponseOutput
}

// The debug setting.
type DebugSettingResponseArgs struct {
	// Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations.
	DetailLevel pulumi.StringPtrInput `pulumi:"detailLevel"`
}

func (DebugSettingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DebugSettingResponse)(nil)).Elem()
}

func (i DebugSettingResponseArgs) ToDebugSettingResponseOutput() DebugSettingResponseOutput {
	return i.ToDebugSettingResponseOutputWithContext(context.Background())
}

func (i DebugSettingResponseArgs) ToDebugSettingResponseOutputWithContext(ctx context.Context) DebugSettingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DebugSettingResponseOutput)
}

func (i DebugSettingResponseArgs) ToDebugSettingResponsePtrOutput() DebugSettingResponsePtrOutput {
	return i.ToDebugSettingResponsePtrOutputWithContext(context.Background())
}

func (i DebugSettingResponseArgs) ToDebugSettingResponsePtrOutputWithContext(ctx context.Context) DebugSettingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DebugSettingResponseOutput).ToDebugSettingResponsePtrOutputWithContext(ctx)
}

// DebugSettingResponsePtrInput is an input type that accepts DebugSettingResponseArgs, DebugSettingResponsePtr and DebugSettingResponsePtrOutput values.
// You can construct a concrete instance of `DebugSettingResponsePtrInput` via:
//
//          DebugSettingResponseArgs{...}
//
//  or:
//
//          nil
type DebugSettingResponsePtrInput interface {
	pulumi.Input

	ToDebugSettingResponsePtrOutput() DebugSettingResponsePtrOutput
	ToDebugSettingResponsePtrOutputWithContext(context.Context) DebugSettingResponsePtrOutput
}

type debugSettingResponsePtrType DebugSettingResponseArgs

func DebugSettingResponsePtr(v *DebugSettingResponseArgs) DebugSettingResponsePtrInput {
	return (*debugSettingResponsePtrType)(v)
}

func (*debugSettingResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DebugSettingResponse)(nil)).Elem()
}

func (i *debugSettingResponsePtrType) ToDebugSettingResponsePtrOutput() DebugSettingResponsePtrOutput {
	return i.ToDebugSettingResponsePtrOutputWithContext(context.Background())
}

func (i *debugSettingResponsePtrType) ToDebugSettingResponsePtrOutputWithContext(ctx context.Context) DebugSettingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DebugSettingResponsePtrOutput)
}

// The debug setting.
type DebugSettingResponseOutput struct{ *pulumi.OutputState }

func (DebugSettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DebugSettingResponse)(nil)).Elem()
}

func (o DebugSettingResponseOutput) ToDebugSettingResponseOutput() DebugSettingResponseOutput {
	return o
}

func (o DebugSettingResponseOutput) ToDebugSettingResponseOutputWithContext(ctx context.Context) DebugSettingResponseOutput {
	return o
}

func (o DebugSettingResponseOutput) ToDebugSettingResponsePtrOutput() DebugSettingResponsePtrOutput {
	return o.ToDebugSettingResponsePtrOutputWithContext(context.Background())
}

func (o DebugSettingResponseOutput) ToDebugSettingResponsePtrOutputWithContext(ctx context.Context) DebugSettingResponsePtrOutput {
	return o.ApplyT(func(v DebugSettingResponse) *DebugSettingResponse {
		return &v
	}).(DebugSettingResponsePtrOutput)
}

// Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations.
func (o DebugSettingResponseOutput) DetailLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DebugSettingResponse) *string { return v.DetailLevel }).(pulumi.StringPtrOutput)
}

type DebugSettingResponsePtrOutput struct{ *pulumi.OutputState }

func (DebugSettingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DebugSettingResponse)(nil)).Elem()
}

func (o DebugSettingResponsePtrOutput) ToDebugSettingResponsePtrOutput() DebugSettingResponsePtrOutput {
	return o
}

func (o DebugSettingResponsePtrOutput) ToDebugSettingResponsePtrOutputWithContext(ctx context.Context) DebugSettingResponsePtrOutput {
	return o
}

func (o DebugSettingResponsePtrOutput) Elem() DebugSettingResponseOutput {
	return o.ApplyT(func(v *DebugSettingResponse) DebugSettingResponse { return *v }).(DebugSettingResponseOutput)
}

// Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations.
func (o DebugSettingResponsePtrOutput) DetailLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DebugSettingResponse) *string {
		if v == nil {
			return nil
		}
		return v.DetailLevel
	}).(pulumi.StringPtrOutput)
}

// Deployment dependency information.
type DependencyResponse struct {
	// The list of dependencies.
	DependsOn []BasicDependencyResponse `pulumi:"dependsOn"`
	// The ID of the dependency.
	Id *string `pulumi:"id"`
	// The dependency resource name.
	ResourceName *string `pulumi:"resourceName"`
	// The dependency resource type.
	ResourceType *string `pulumi:"resourceType"`
}

// DependencyResponseInput is an input type that accepts DependencyResponseArgs and DependencyResponseOutput values.
// You can construct a concrete instance of `DependencyResponseInput` via:
//
//          DependencyResponseArgs{...}
type DependencyResponseInput interface {
	pulumi.Input

	ToDependencyResponseOutput() DependencyResponseOutput
	ToDependencyResponseOutputWithContext(context.Context) DependencyResponseOutput
}

// Deployment dependency information.
type DependencyResponseArgs struct {
	// The list of dependencies.
	DependsOn BasicDependencyResponseArrayInput `pulumi:"dependsOn"`
	// The ID of the dependency.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The dependency resource name.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// The dependency resource type.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
}

func (DependencyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DependencyResponse)(nil)).Elem()
}

func (i DependencyResponseArgs) ToDependencyResponseOutput() DependencyResponseOutput {
	return i.ToDependencyResponseOutputWithContext(context.Background())
}

func (i DependencyResponseArgs) ToDependencyResponseOutputWithContext(ctx context.Context) DependencyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DependencyResponseOutput)
}

// DependencyResponseArrayInput is an input type that accepts DependencyResponseArray and DependencyResponseArrayOutput values.
// You can construct a concrete instance of `DependencyResponseArrayInput` via:
//
//          DependencyResponseArray{ DependencyResponseArgs{...} }
type DependencyResponseArrayInput interface {
	pulumi.Input

	ToDependencyResponseArrayOutput() DependencyResponseArrayOutput
	ToDependencyResponseArrayOutputWithContext(context.Context) DependencyResponseArrayOutput
}

type DependencyResponseArray []DependencyResponseInput

func (DependencyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DependencyResponse)(nil)).Elem()
}

func (i DependencyResponseArray) ToDependencyResponseArrayOutput() DependencyResponseArrayOutput {
	return i.ToDependencyResponseArrayOutputWithContext(context.Background())
}

func (i DependencyResponseArray) ToDependencyResponseArrayOutputWithContext(ctx context.Context) DependencyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DependencyResponseArrayOutput)
}

// Deployment dependency information.
type DependencyResponseOutput struct{ *pulumi.OutputState }

func (DependencyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DependencyResponse)(nil)).Elem()
}

func (o DependencyResponseOutput) ToDependencyResponseOutput() DependencyResponseOutput {
	return o
}

func (o DependencyResponseOutput) ToDependencyResponseOutputWithContext(ctx context.Context) DependencyResponseOutput {
	return o
}

// The list of dependencies.
func (o DependencyResponseOutput) DependsOn() BasicDependencyResponseArrayOutput {
	return o.ApplyT(func(v DependencyResponse) []BasicDependencyResponse { return v.DependsOn }).(BasicDependencyResponseArrayOutput)
}

// The ID of the dependency.
func (o DependencyResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DependencyResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The dependency resource name.
func (o DependencyResponseOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DependencyResponse) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// The dependency resource type.
func (o DependencyResponseOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DependencyResponse) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

type DependencyResponseArrayOutput struct{ *pulumi.OutputState }

func (DependencyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DependencyResponse)(nil)).Elem()
}

func (o DependencyResponseArrayOutput) ToDependencyResponseArrayOutput() DependencyResponseArrayOutput {
	return o
}

func (o DependencyResponseArrayOutput) ToDependencyResponseArrayOutputWithContext(ctx context.Context) DependencyResponseArrayOutput {
	return o
}

func (o DependencyResponseArrayOutput) Index(i pulumi.IntInput) DependencyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DependencyResponse {
		return vs[0].([]DependencyResponse)[vs[1].(int)]
	}).(DependencyResponseOutput)
}

// Deployment properties.
type DeploymentProperties struct {
	// The debug setting of the deployment.
	DebugSetting *DebugSetting `pulumi:"debugSetting"`
	// Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.
	ExpressionEvaluationOptions *ExpressionEvaluationOptions `pulumi:"expressionEvaluationOptions"`
	// The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.
	Mode string `pulumi:"mode"`
	// The deployment on error behavior.
	OnErrorDeployment *OnErrorDeployment `pulumi:"onErrorDeployment"`
	// Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.
	Parameters interface{} `pulumi:"parameters"`
	// The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.
	ParametersLink *ParametersLink `pulumi:"parametersLink"`
	// The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.
	Template interface{} `pulumi:"template"`
	// The URI of the template. Use either the templateLink property or the template property, but not both.
	TemplateLink *TemplateLink `pulumi:"templateLink"`
}

// DeploymentPropertiesInput is an input type that accepts DeploymentPropertiesArgs and DeploymentPropertiesOutput values.
// You can construct a concrete instance of `DeploymentPropertiesInput` via:
//
//          DeploymentPropertiesArgs{...}
type DeploymentPropertiesInput interface {
	pulumi.Input

	ToDeploymentPropertiesOutput() DeploymentPropertiesOutput
	ToDeploymentPropertiesOutputWithContext(context.Context) DeploymentPropertiesOutput
}

// Deployment properties.
type DeploymentPropertiesArgs struct {
	// The debug setting of the deployment.
	DebugSetting DebugSettingPtrInput `pulumi:"debugSetting"`
	// Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.
	ExpressionEvaluationOptions ExpressionEvaluationOptionsPtrInput `pulumi:"expressionEvaluationOptions"`
	// The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The deployment on error behavior.
	OnErrorDeployment OnErrorDeploymentPtrInput `pulumi:"onErrorDeployment"`
	// Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.
	Parameters pulumi.Input `pulumi:"parameters"`
	// The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.
	ParametersLink ParametersLinkPtrInput `pulumi:"parametersLink"`
	// The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.
	Template pulumi.Input `pulumi:"template"`
	// The URI of the template. Use either the templateLink property or the template property, but not both.
	TemplateLink TemplateLinkPtrInput `pulumi:"templateLink"`
}

func (DeploymentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentProperties)(nil)).Elem()
}

func (i DeploymentPropertiesArgs) ToDeploymentPropertiesOutput() DeploymentPropertiesOutput {
	return i.ToDeploymentPropertiesOutputWithContext(context.Background())
}

func (i DeploymentPropertiesArgs) ToDeploymentPropertiesOutputWithContext(ctx context.Context) DeploymentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPropertiesOutput)
}

func (i DeploymentPropertiesArgs) ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput {
	return i.ToDeploymentPropertiesPtrOutputWithContext(context.Background())
}

func (i DeploymentPropertiesArgs) ToDeploymentPropertiesPtrOutputWithContext(ctx context.Context) DeploymentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPropertiesOutput).ToDeploymentPropertiesPtrOutputWithContext(ctx)
}

// DeploymentPropertiesPtrInput is an input type that accepts DeploymentPropertiesArgs, DeploymentPropertiesPtr and DeploymentPropertiesPtrOutput values.
// You can construct a concrete instance of `DeploymentPropertiesPtrInput` via:
//
//          DeploymentPropertiesArgs{...}
//
//  or:
//
//          nil
type DeploymentPropertiesPtrInput interface {
	pulumi.Input

	ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput
	ToDeploymentPropertiesPtrOutputWithContext(context.Context) DeploymentPropertiesPtrOutput
}

type deploymentPropertiesPtrType DeploymentPropertiesArgs

func DeploymentPropertiesPtr(v *DeploymentPropertiesArgs) DeploymentPropertiesPtrInput {
	return (*deploymentPropertiesPtrType)(v)
}

func (*deploymentPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentProperties)(nil)).Elem()
}

func (i *deploymentPropertiesPtrType) ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput {
	return i.ToDeploymentPropertiesPtrOutputWithContext(context.Background())
}

func (i *deploymentPropertiesPtrType) ToDeploymentPropertiesPtrOutputWithContext(ctx context.Context) DeploymentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPropertiesPtrOutput)
}

// Deployment properties.
type DeploymentPropertiesOutput struct{ *pulumi.OutputState }

func (DeploymentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentProperties)(nil)).Elem()
}

func (o DeploymentPropertiesOutput) ToDeploymentPropertiesOutput() DeploymentPropertiesOutput {
	return o
}

func (o DeploymentPropertiesOutput) ToDeploymentPropertiesOutputWithContext(ctx context.Context) DeploymentPropertiesOutput {
	return o
}

func (o DeploymentPropertiesOutput) ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput {
	return o.ToDeploymentPropertiesPtrOutputWithContext(context.Background())
}

func (o DeploymentPropertiesOutput) ToDeploymentPropertiesPtrOutputWithContext(ctx context.Context) DeploymentPropertiesPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *DeploymentProperties {
		return &v
	}).(DeploymentPropertiesPtrOutput)
}

// The debug setting of the deployment.
func (o DeploymentPropertiesOutput) DebugSetting() DebugSettingPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *DebugSetting { return v.DebugSetting }).(DebugSettingPtrOutput)
}

// Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.
func (o DeploymentPropertiesOutput) ExpressionEvaluationOptions() ExpressionEvaluationOptionsPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *ExpressionEvaluationOptions { return v.ExpressionEvaluationOptions }).(ExpressionEvaluationOptionsPtrOutput)
}

// The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.
func (o DeploymentPropertiesOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentProperties) string { return v.Mode }).(pulumi.StringOutput)
}

// The deployment on error behavior.
func (o DeploymentPropertiesOutput) OnErrorDeployment() OnErrorDeploymentPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *OnErrorDeployment { return v.OnErrorDeployment }).(OnErrorDeploymentPtrOutput)
}

// Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.
func (o DeploymentPropertiesOutput) Parameters() pulumi.AnyOutput {
	return o.ApplyT(func(v DeploymentProperties) interface{} { return v.Parameters }).(pulumi.AnyOutput)
}

// The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.
func (o DeploymentPropertiesOutput) ParametersLink() ParametersLinkPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *ParametersLink { return v.ParametersLink }).(ParametersLinkPtrOutput)
}

// The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.
func (o DeploymentPropertiesOutput) Template() pulumi.AnyOutput {
	return o.ApplyT(func(v DeploymentProperties) interface{} { return v.Template }).(pulumi.AnyOutput)
}

// The URI of the template. Use either the templateLink property or the template property, but not both.
func (o DeploymentPropertiesOutput) TemplateLink() TemplateLinkPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *TemplateLink { return v.TemplateLink }).(TemplateLinkPtrOutput)
}

type DeploymentPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DeploymentPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentProperties)(nil)).Elem()
}

func (o DeploymentPropertiesPtrOutput) ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput {
	return o
}

func (o DeploymentPropertiesPtrOutput) ToDeploymentPropertiesPtrOutputWithContext(ctx context.Context) DeploymentPropertiesPtrOutput {
	return o
}

func (o DeploymentPropertiesPtrOutput) Elem() DeploymentPropertiesOutput {
	return o.ApplyT(func(v *DeploymentProperties) DeploymentProperties { return *v }).(DeploymentPropertiesOutput)
}

// The debug setting of the deployment.
func (o DeploymentPropertiesPtrOutput) DebugSetting() DebugSettingPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *DebugSetting {
		if v == nil {
			return nil
		}
		return v.DebugSetting
	}).(DebugSettingPtrOutput)
}

// Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.
func (o DeploymentPropertiesPtrOutput) ExpressionEvaluationOptions() ExpressionEvaluationOptionsPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *ExpressionEvaluationOptions {
		if v == nil {
			return nil
		}
		return v.ExpressionEvaluationOptions
	}).(ExpressionEvaluationOptionsPtrOutput)
}

// The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.
func (o DeploymentPropertiesPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// The deployment on error behavior.
func (o DeploymentPropertiesPtrOutput) OnErrorDeployment() OnErrorDeploymentPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *OnErrorDeployment {
		if v == nil {
			return nil
		}
		return v.OnErrorDeployment
	}).(OnErrorDeploymentPtrOutput)
}

// Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.
func (o DeploymentPropertiesPtrOutput) Parameters() pulumi.AnyOutput {
	return o.ApplyT(func(v *DeploymentProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.AnyOutput)
}

// The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.
func (o DeploymentPropertiesPtrOutput) ParametersLink() ParametersLinkPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *ParametersLink {
		if v == nil {
			return nil
		}
		return v.ParametersLink
	}).(ParametersLinkPtrOutput)
}

// The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.
func (o DeploymentPropertiesPtrOutput) Template() pulumi.AnyOutput {
	return o.ApplyT(func(v *DeploymentProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.Template
	}).(pulumi.AnyOutput)
}

// The URI of the template. Use either the templateLink property or the template property, but not both.
func (o DeploymentPropertiesPtrOutput) TemplateLink() TemplateLinkPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *TemplateLink {
		if v == nil {
			return nil
		}
		return v.TemplateLink
	}).(TemplateLinkPtrOutput)
}

// Deployment properties with additional details.
type DeploymentPropertiesExtendedResponse struct {
	// The correlation ID of the deployment.
	CorrelationId string `pulumi:"correlationId"`
	// The debug setting of the deployment.
	DebugSetting DebugSettingResponse `pulumi:"debugSetting"`
	// The list of deployment dependencies.
	Dependencies []DependencyResponse `pulumi:"dependencies"`
	// The duration of the template deployment.
	Duration string `pulumi:"duration"`
	// The deployment error.
	Error ErrorResponseResponse `pulumi:"error"`
	// The deployment mode. Possible values are Incremental and Complete.
	Mode string `pulumi:"mode"`
	// The deployment on error behavior.
	OnErrorDeployment OnErrorDeploymentExtendedResponse `pulumi:"onErrorDeployment"`
	// Array of provisioned resources.
	OutputResources []ResourceReferenceResponse `pulumi:"outputResources"`
	// Key/value pairs that represent deployment output.
	Outputs interface{} `pulumi:"outputs"`
	// Deployment parameters.
	Parameters interface{} `pulumi:"parameters"`
	// The URI referencing the parameters.
	ParametersLink ParametersLinkResponse `pulumi:"parametersLink"`
	// The list of resource providers needed for the deployment.
	Providers []ProviderResponse `pulumi:"providers"`
	// Denotes the state of provisioning.
	ProvisioningState string `pulumi:"provisioningState"`
	// The hash produced for the template.
	TemplateHash string `pulumi:"templateHash"`
	// The URI referencing the template.
	TemplateLink TemplateLinkResponse `pulumi:"templateLink"`
	// The timestamp of the template deployment.
	Timestamp string `pulumi:"timestamp"`
	// Array of validated resources.
	ValidatedResources []ResourceReferenceResponse `pulumi:"validatedResources"`
}

// DeploymentPropertiesExtendedResponseInput is an input type that accepts DeploymentPropertiesExtendedResponseArgs and DeploymentPropertiesExtendedResponseOutput values.
// You can construct a concrete instance of `DeploymentPropertiesExtendedResponseInput` via:
//
//          DeploymentPropertiesExtendedResponseArgs{...}
type DeploymentPropertiesExtendedResponseInput interface {
	pulumi.Input

	ToDeploymentPropertiesExtendedResponseOutput() DeploymentPropertiesExtendedResponseOutput
	ToDeploymentPropertiesExtendedResponseOutputWithContext(context.Context) DeploymentPropertiesExtendedResponseOutput
}

// Deployment properties with additional details.
type DeploymentPropertiesExtendedResponseArgs struct {
	// The correlation ID of the deployment.
	CorrelationId pulumi.StringInput `pulumi:"correlationId"`
	// The debug setting of the deployment.
	DebugSetting DebugSettingResponseInput `pulumi:"debugSetting"`
	// The list of deployment dependencies.
	Dependencies DependencyResponseArrayInput `pulumi:"dependencies"`
	// The duration of the template deployment.
	Duration pulumi.StringInput `pulumi:"duration"`
	// The deployment error.
	Error ErrorResponseResponseInput `pulumi:"error"`
	// The deployment mode. Possible values are Incremental and Complete.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The deployment on error behavior.
	OnErrorDeployment OnErrorDeploymentExtendedResponseInput `pulumi:"onErrorDeployment"`
	// Array of provisioned resources.
	OutputResources ResourceReferenceResponseArrayInput `pulumi:"outputResources"`
	// Key/value pairs that represent deployment output.
	Outputs pulumi.Input `pulumi:"outputs"`
	// Deployment parameters.
	Parameters pulumi.Input `pulumi:"parameters"`
	// The URI referencing the parameters.
	ParametersLink ParametersLinkResponseInput `pulumi:"parametersLink"`
	// The list of resource providers needed for the deployment.
	Providers ProviderResponseArrayInput `pulumi:"providers"`
	// Denotes the state of provisioning.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The hash produced for the template.
	TemplateHash pulumi.StringInput `pulumi:"templateHash"`
	// The URI referencing the template.
	TemplateLink TemplateLinkResponseInput `pulumi:"templateLink"`
	// The timestamp of the template deployment.
	Timestamp pulumi.StringInput `pulumi:"timestamp"`
	// Array of validated resources.
	ValidatedResources ResourceReferenceResponseArrayInput `pulumi:"validatedResources"`
}

func (DeploymentPropertiesExtendedResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentPropertiesExtendedResponse)(nil)).Elem()
}

func (i DeploymentPropertiesExtendedResponseArgs) ToDeploymentPropertiesExtendedResponseOutput() DeploymentPropertiesExtendedResponseOutput {
	return i.ToDeploymentPropertiesExtendedResponseOutputWithContext(context.Background())
}

func (i DeploymentPropertiesExtendedResponseArgs) ToDeploymentPropertiesExtendedResponseOutputWithContext(ctx context.Context) DeploymentPropertiesExtendedResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPropertiesExtendedResponseOutput)
}

func (i DeploymentPropertiesExtendedResponseArgs) ToDeploymentPropertiesExtendedResponsePtrOutput() DeploymentPropertiesExtendedResponsePtrOutput {
	return i.ToDeploymentPropertiesExtendedResponsePtrOutputWithContext(context.Background())
}

func (i DeploymentPropertiesExtendedResponseArgs) ToDeploymentPropertiesExtendedResponsePtrOutputWithContext(ctx context.Context) DeploymentPropertiesExtendedResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPropertiesExtendedResponseOutput).ToDeploymentPropertiesExtendedResponsePtrOutputWithContext(ctx)
}

// DeploymentPropertiesExtendedResponsePtrInput is an input type that accepts DeploymentPropertiesExtendedResponseArgs, DeploymentPropertiesExtendedResponsePtr and DeploymentPropertiesExtendedResponsePtrOutput values.
// You can construct a concrete instance of `DeploymentPropertiesExtendedResponsePtrInput` via:
//
//          DeploymentPropertiesExtendedResponseArgs{...}
//
//  or:
//
//          nil
type DeploymentPropertiesExtendedResponsePtrInput interface {
	pulumi.Input

	ToDeploymentPropertiesExtendedResponsePtrOutput() DeploymentPropertiesExtendedResponsePtrOutput
	ToDeploymentPropertiesExtendedResponsePtrOutputWithContext(context.Context) DeploymentPropertiesExtendedResponsePtrOutput
}

type deploymentPropertiesExtendedResponsePtrType DeploymentPropertiesExtendedResponseArgs

func DeploymentPropertiesExtendedResponsePtr(v *DeploymentPropertiesExtendedResponseArgs) DeploymentPropertiesExtendedResponsePtrInput {
	return (*deploymentPropertiesExtendedResponsePtrType)(v)
}

func (*deploymentPropertiesExtendedResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentPropertiesExtendedResponse)(nil)).Elem()
}

func (i *deploymentPropertiesExtendedResponsePtrType) ToDeploymentPropertiesExtendedResponsePtrOutput() DeploymentPropertiesExtendedResponsePtrOutput {
	return i.ToDeploymentPropertiesExtendedResponsePtrOutputWithContext(context.Background())
}

func (i *deploymentPropertiesExtendedResponsePtrType) ToDeploymentPropertiesExtendedResponsePtrOutputWithContext(ctx context.Context) DeploymentPropertiesExtendedResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPropertiesExtendedResponsePtrOutput)
}

// Deployment properties with additional details.
type DeploymentPropertiesExtendedResponseOutput struct{ *pulumi.OutputState }

func (DeploymentPropertiesExtendedResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentPropertiesExtendedResponse)(nil)).Elem()
}

func (o DeploymentPropertiesExtendedResponseOutput) ToDeploymentPropertiesExtendedResponseOutput() DeploymentPropertiesExtendedResponseOutput {
	return o
}

func (o DeploymentPropertiesExtendedResponseOutput) ToDeploymentPropertiesExtendedResponseOutputWithContext(ctx context.Context) DeploymentPropertiesExtendedResponseOutput {
	return o
}

func (o DeploymentPropertiesExtendedResponseOutput) ToDeploymentPropertiesExtendedResponsePtrOutput() DeploymentPropertiesExtendedResponsePtrOutput {
	return o.ToDeploymentPropertiesExtendedResponsePtrOutputWithContext(context.Background())
}

func (o DeploymentPropertiesExtendedResponseOutput) ToDeploymentPropertiesExtendedResponsePtrOutputWithContext(ctx context.Context) DeploymentPropertiesExtendedResponsePtrOutput {
	return o.ApplyT(func(v DeploymentPropertiesExtendedResponse) *DeploymentPropertiesExtendedResponse {
		return &v
	}).(DeploymentPropertiesExtendedResponsePtrOutput)
}

// The correlation ID of the deployment.
func (o DeploymentPropertiesExtendedResponseOutput) CorrelationId() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentPropertiesExtendedResponse) string { return v.CorrelationId }).(pulumi.StringOutput)
}

// The debug setting of the deployment.
func (o DeploymentPropertiesExtendedResponseOutput) DebugSetting() DebugSettingResponseOutput {
	return o.ApplyT(func(v DeploymentPropertiesExtendedResponse) DebugSettingResponse { return v.DebugSetting }).(DebugSettingResponseOutput)
}

// The list of deployment dependencies.
func (o DeploymentPropertiesExtendedResponseOutput) Dependencies() DependencyResponseArrayOutput {
	return o.ApplyT(func(v DeploymentPropertiesExtendedResponse) []DependencyResponse { return v.Dependencies }).(DependencyResponseArrayOutput)
}

// The duration of the template deployment.
func (o DeploymentPropertiesExtendedResponseOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentPropertiesExtendedResponse) string { return v.Duration }).(pulumi.StringOutput)
}

// The deployment error.
func (o DeploymentPropertiesExtendedResponseOutput) Error() ErrorResponseResponseOutput {
	return o.ApplyT(func(v DeploymentPropertiesExtendedResponse) ErrorResponseResponse { return v.Error }).(ErrorResponseResponseOutput)
}

// The deployment mode. Possible values are Incremental and Complete.
func (o DeploymentPropertiesExtendedResponseOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentPropertiesExtendedResponse) string { return v.Mode }).(pulumi.StringOutput)
}

// The deployment on error behavior.
func (o DeploymentPropertiesExtendedResponseOutput) OnErrorDeployment() OnErrorDeploymentExtendedResponseOutput {
	return o.ApplyT(func(v DeploymentPropertiesExtendedResponse) OnErrorDeploymentExtendedResponse {
		return v.OnErrorDeployment
	}).(OnErrorDeploymentExtendedResponseOutput)
}

// Array of provisioned resources.
func (o DeploymentPropertiesExtendedResponseOutput) OutputResources() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v DeploymentPropertiesExtendedResponse) []ResourceReferenceResponse { return v.OutputResources }).(ResourceReferenceResponseArrayOutput)
}

// Key/value pairs that represent deployment output.
func (o DeploymentPropertiesExtendedResponseOutput) Outputs() pulumi.AnyOutput {
	return o.ApplyT(func(v DeploymentPropertiesExtendedResponse) interface{} { return v.Outputs }).(pulumi.AnyOutput)
}

// Deployment parameters.
func (o DeploymentPropertiesExtendedResponseOutput) Parameters() pulumi.AnyOutput {
	return o.ApplyT(func(v DeploymentPropertiesExtendedResponse) interface{} { return v.Parameters }).(pulumi.AnyOutput)
}

// The URI referencing the parameters.
func (o DeploymentPropertiesExtendedResponseOutput) ParametersLink() ParametersLinkResponseOutput {
	return o.ApplyT(func(v DeploymentPropertiesExtendedResponse) ParametersLinkResponse { return v.ParametersLink }).(ParametersLinkResponseOutput)
}

// The list of resource providers needed for the deployment.
func (o DeploymentPropertiesExtendedResponseOutput) Providers() ProviderResponseArrayOutput {
	return o.ApplyT(func(v DeploymentPropertiesExtendedResponse) []ProviderResponse { return v.Providers }).(ProviderResponseArrayOutput)
}

// Denotes the state of provisioning.
func (o DeploymentPropertiesExtendedResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentPropertiesExtendedResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The hash produced for the template.
func (o DeploymentPropertiesExtendedResponseOutput) TemplateHash() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentPropertiesExtendedResponse) string { return v.TemplateHash }).(pulumi.StringOutput)
}

// The URI referencing the template.
func (o DeploymentPropertiesExtendedResponseOutput) TemplateLink() TemplateLinkResponseOutput {
	return o.ApplyT(func(v DeploymentPropertiesExtendedResponse) TemplateLinkResponse { return v.TemplateLink }).(TemplateLinkResponseOutput)
}

// The timestamp of the template deployment.
func (o DeploymentPropertiesExtendedResponseOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentPropertiesExtendedResponse) string { return v.Timestamp }).(pulumi.StringOutput)
}

// Array of validated resources.
func (o DeploymentPropertiesExtendedResponseOutput) ValidatedResources() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v DeploymentPropertiesExtendedResponse) []ResourceReferenceResponse { return v.ValidatedResources }).(ResourceReferenceResponseArrayOutput)
}

type DeploymentPropertiesExtendedResponsePtrOutput struct{ *pulumi.OutputState }

func (DeploymentPropertiesExtendedResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentPropertiesExtendedResponse)(nil)).Elem()
}

func (o DeploymentPropertiesExtendedResponsePtrOutput) ToDeploymentPropertiesExtendedResponsePtrOutput() DeploymentPropertiesExtendedResponsePtrOutput {
	return o
}

func (o DeploymentPropertiesExtendedResponsePtrOutput) ToDeploymentPropertiesExtendedResponsePtrOutputWithContext(ctx context.Context) DeploymentPropertiesExtendedResponsePtrOutput {
	return o
}

func (o DeploymentPropertiesExtendedResponsePtrOutput) Elem() DeploymentPropertiesExtendedResponseOutput {
	return o.ApplyT(func(v *DeploymentPropertiesExtendedResponse) DeploymentPropertiesExtendedResponse { return *v }).(DeploymentPropertiesExtendedResponseOutput)
}

// The correlation ID of the deployment.
func (o DeploymentPropertiesExtendedResponsePtrOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentPropertiesExtendedResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CorrelationId
	}).(pulumi.StringPtrOutput)
}

// The debug setting of the deployment.
func (o DeploymentPropertiesExtendedResponsePtrOutput) DebugSetting() DebugSettingResponsePtrOutput {
	return o.ApplyT(func(v *DeploymentPropertiesExtendedResponse) *DebugSettingResponse {
		if v == nil {
			return nil
		}
		return &v.DebugSetting
	}).(DebugSettingResponsePtrOutput)
}

// The list of deployment dependencies.
func (o DeploymentPropertiesExtendedResponsePtrOutput) Dependencies() DependencyResponseArrayOutput {
	return o.ApplyT(func(v *DeploymentPropertiesExtendedResponse) []DependencyResponse {
		if v == nil {
			return nil
		}
		return v.Dependencies
	}).(DependencyResponseArrayOutput)
}

// The duration of the template deployment.
func (o DeploymentPropertiesExtendedResponsePtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentPropertiesExtendedResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.StringPtrOutput)
}

// The deployment error.
func (o DeploymentPropertiesExtendedResponsePtrOutput) Error() ErrorResponseResponsePtrOutput {
	return o.ApplyT(func(v *DeploymentPropertiesExtendedResponse) *ErrorResponseResponse {
		if v == nil {
			return nil
		}
		return &v.Error
	}).(ErrorResponseResponsePtrOutput)
}

// The deployment mode. Possible values are Incremental and Complete.
func (o DeploymentPropertiesExtendedResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentPropertiesExtendedResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// The deployment on error behavior.
func (o DeploymentPropertiesExtendedResponsePtrOutput) OnErrorDeployment() OnErrorDeploymentExtendedResponsePtrOutput {
	return o.ApplyT(func(v *DeploymentPropertiesExtendedResponse) *OnErrorDeploymentExtendedResponse {
		if v == nil {
			return nil
		}
		return &v.OnErrorDeployment
	}).(OnErrorDeploymentExtendedResponsePtrOutput)
}

// Array of provisioned resources.
func (o DeploymentPropertiesExtendedResponsePtrOutput) OutputResources() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v *DeploymentPropertiesExtendedResponse) []ResourceReferenceResponse {
		if v == nil {
			return nil
		}
		return v.OutputResources
	}).(ResourceReferenceResponseArrayOutput)
}

// Key/value pairs that represent deployment output.
func (o DeploymentPropertiesExtendedResponsePtrOutput) Outputs() pulumi.AnyOutput {
	return o.ApplyT(func(v *DeploymentPropertiesExtendedResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Outputs
	}).(pulumi.AnyOutput)
}

// Deployment parameters.
func (o DeploymentPropertiesExtendedResponsePtrOutput) Parameters() pulumi.AnyOutput {
	return o.ApplyT(func(v *DeploymentPropertiesExtendedResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.AnyOutput)
}

// The URI referencing the parameters.
func (o DeploymentPropertiesExtendedResponsePtrOutput) ParametersLink() ParametersLinkResponsePtrOutput {
	return o.ApplyT(func(v *DeploymentPropertiesExtendedResponse) *ParametersLinkResponse {
		if v == nil {
			return nil
		}
		return &v.ParametersLink
	}).(ParametersLinkResponsePtrOutput)
}

// The list of resource providers needed for the deployment.
func (o DeploymentPropertiesExtendedResponsePtrOutput) Providers() ProviderResponseArrayOutput {
	return o.ApplyT(func(v *DeploymentPropertiesExtendedResponse) []ProviderResponse {
		if v == nil {
			return nil
		}
		return v.Providers
	}).(ProviderResponseArrayOutput)
}

// Denotes the state of provisioning.
func (o DeploymentPropertiesExtendedResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentPropertiesExtendedResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The hash produced for the template.
func (o DeploymentPropertiesExtendedResponsePtrOutput) TemplateHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentPropertiesExtendedResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TemplateHash
	}).(pulumi.StringPtrOutput)
}

// The URI referencing the template.
func (o DeploymentPropertiesExtendedResponsePtrOutput) TemplateLink() TemplateLinkResponsePtrOutput {
	return o.ApplyT(func(v *DeploymentPropertiesExtendedResponse) *TemplateLinkResponse {
		if v == nil {
			return nil
		}
		return &v.TemplateLink
	}).(TemplateLinkResponsePtrOutput)
}

// The timestamp of the template deployment.
func (o DeploymentPropertiesExtendedResponsePtrOutput) Timestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentPropertiesExtendedResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Timestamp
	}).(pulumi.StringPtrOutput)
}

// Array of validated resources.
func (o DeploymentPropertiesExtendedResponsePtrOutput) ValidatedResources() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v *DeploymentPropertiesExtendedResponse) []ResourceReferenceResponse {
		if v == nil {
			return nil
		}
		return v.ValidatedResources
	}).(ResourceReferenceResponseArrayOutput)
}

// The ID of the parent management group.
type DescendantParentGroupInfoResponse struct {
	// The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
	Id *string `pulumi:"id"`
}

// DescendantParentGroupInfoResponseInput is an input type that accepts DescendantParentGroupInfoResponseArgs and DescendantParentGroupInfoResponseOutput values.
// You can construct a concrete instance of `DescendantParentGroupInfoResponseInput` via:
//
//          DescendantParentGroupInfoResponseArgs{...}
type DescendantParentGroupInfoResponseInput interface {
	pulumi.Input

	ToDescendantParentGroupInfoResponseOutput() DescendantParentGroupInfoResponseOutput
	ToDescendantParentGroupInfoResponseOutputWithContext(context.Context) DescendantParentGroupInfoResponseOutput
}

// The ID of the parent management group.
type DescendantParentGroupInfoResponseArgs struct {
	// The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (DescendantParentGroupInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DescendantParentGroupInfoResponse)(nil)).Elem()
}

func (i DescendantParentGroupInfoResponseArgs) ToDescendantParentGroupInfoResponseOutput() DescendantParentGroupInfoResponseOutput {
	return i.ToDescendantParentGroupInfoResponseOutputWithContext(context.Background())
}

func (i DescendantParentGroupInfoResponseArgs) ToDescendantParentGroupInfoResponseOutputWithContext(ctx context.Context) DescendantParentGroupInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DescendantParentGroupInfoResponseOutput)
}

func (i DescendantParentGroupInfoResponseArgs) ToDescendantParentGroupInfoResponsePtrOutput() DescendantParentGroupInfoResponsePtrOutput {
	return i.ToDescendantParentGroupInfoResponsePtrOutputWithContext(context.Background())
}

func (i DescendantParentGroupInfoResponseArgs) ToDescendantParentGroupInfoResponsePtrOutputWithContext(ctx context.Context) DescendantParentGroupInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DescendantParentGroupInfoResponseOutput).ToDescendantParentGroupInfoResponsePtrOutputWithContext(ctx)
}

// DescendantParentGroupInfoResponsePtrInput is an input type that accepts DescendantParentGroupInfoResponseArgs, DescendantParentGroupInfoResponsePtr and DescendantParentGroupInfoResponsePtrOutput values.
// You can construct a concrete instance of `DescendantParentGroupInfoResponsePtrInput` via:
//
//          DescendantParentGroupInfoResponseArgs{...}
//
//  or:
//
//          nil
type DescendantParentGroupInfoResponsePtrInput interface {
	pulumi.Input

	ToDescendantParentGroupInfoResponsePtrOutput() DescendantParentGroupInfoResponsePtrOutput
	ToDescendantParentGroupInfoResponsePtrOutputWithContext(context.Context) DescendantParentGroupInfoResponsePtrOutput
}

type descendantParentGroupInfoResponsePtrType DescendantParentGroupInfoResponseArgs

func DescendantParentGroupInfoResponsePtr(v *DescendantParentGroupInfoResponseArgs) DescendantParentGroupInfoResponsePtrInput {
	return (*descendantParentGroupInfoResponsePtrType)(v)
}

func (*descendantParentGroupInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DescendantParentGroupInfoResponse)(nil)).Elem()
}

func (i *descendantParentGroupInfoResponsePtrType) ToDescendantParentGroupInfoResponsePtrOutput() DescendantParentGroupInfoResponsePtrOutput {
	return i.ToDescendantParentGroupInfoResponsePtrOutputWithContext(context.Background())
}

func (i *descendantParentGroupInfoResponsePtrType) ToDescendantParentGroupInfoResponsePtrOutputWithContext(ctx context.Context) DescendantParentGroupInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DescendantParentGroupInfoResponsePtrOutput)
}

// The ID of the parent management group.
type DescendantParentGroupInfoResponseOutput struct{ *pulumi.OutputState }

func (DescendantParentGroupInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DescendantParentGroupInfoResponse)(nil)).Elem()
}

func (o DescendantParentGroupInfoResponseOutput) ToDescendantParentGroupInfoResponseOutput() DescendantParentGroupInfoResponseOutput {
	return o
}

func (o DescendantParentGroupInfoResponseOutput) ToDescendantParentGroupInfoResponseOutputWithContext(ctx context.Context) DescendantParentGroupInfoResponseOutput {
	return o
}

func (o DescendantParentGroupInfoResponseOutput) ToDescendantParentGroupInfoResponsePtrOutput() DescendantParentGroupInfoResponsePtrOutput {
	return o.ToDescendantParentGroupInfoResponsePtrOutputWithContext(context.Background())
}

func (o DescendantParentGroupInfoResponseOutput) ToDescendantParentGroupInfoResponsePtrOutputWithContext(ctx context.Context) DescendantParentGroupInfoResponsePtrOutput {
	return o.ApplyT(func(v DescendantParentGroupInfoResponse) *DescendantParentGroupInfoResponse {
		return &v
	}).(DescendantParentGroupInfoResponsePtrOutput)
}

// The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
func (o DescendantParentGroupInfoResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DescendantParentGroupInfoResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type DescendantParentGroupInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (DescendantParentGroupInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DescendantParentGroupInfoResponse)(nil)).Elem()
}

func (o DescendantParentGroupInfoResponsePtrOutput) ToDescendantParentGroupInfoResponsePtrOutput() DescendantParentGroupInfoResponsePtrOutput {
	return o
}

func (o DescendantParentGroupInfoResponsePtrOutput) ToDescendantParentGroupInfoResponsePtrOutputWithContext(ctx context.Context) DescendantParentGroupInfoResponsePtrOutput {
	return o
}

func (o DescendantParentGroupInfoResponsePtrOutput) Elem() DescendantParentGroupInfoResponseOutput {
	return o.ApplyT(func(v *DescendantParentGroupInfoResponse) DescendantParentGroupInfoResponse { return *v }).(DescendantParentGroupInfoResponseOutput)
}

// The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
func (o DescendantParentGroupInfoResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DescendantParentGroupInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The entity.
type EntityInfoResponse struct {
	// The friendly name of the management group.
	DisplayName *string `pulumi:"displayName"`
	// The fully qualified ID for the entity.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
	Id string `pulumi:"id"`
	// The users specific permissions to this item.
	InheritedPermissions *string `pulumi:"inheritedPermissions"`
	// The name of the entity. For example, 00000000-0000-0000-0000-000000000000
	Name string `pulumi:"name"`
	// Number of children is the number of Groups that are exactly one level underneath the current Group.
	NumberOfChildGroups *int `pulumi:"numberOfChildGroups"`
	// Number of children is the number of Groups and Subscriptions that are exactly one level underneath the current Group.
	NumberOfChildren    *int `pulumi:"numberOfChildren"`
	NumberOfDescendants *int `pulumi:"numberOfDescendants"`
	// (Optional) The ID of the parent management group.
	Parent *EntityParentGroupInfoResponse `pulumi:"parent"`
	// The parent display name chain from the root group to the immediate parent
	ParentDisplayNameChain []string `pulumi:"parentDisplayNameChain"`
	// The parent name chain from the root group to the immediate parent
	ParentNameChain []string `pulumi:"parentNameChain"`
	// The users specific permissions to this item.
	Permissions *string `pulumi:"permissions"`
	// The AAD Tenant ID associated with the entity. For example, 00000000-0000-0000-0000-000000000000
	TenantId *string `pulumi:"tenantId"`
	// The type of the resource. For example, Microsoft.Management/managementGroups
	Type string `pulumi:"type"`
}

// EntityInfoResponseInput is an input type that accepts EntityInfoResponseArgs and EntityInfoResponseOutput values.
// You can construct a concrete instance of `EntityInfoResponseInput` via:
//
//          EntityInfoResponseArgs{...}
type EntityInfoResponseInput interface {
	pulumi.Input

	ToEntityInfoResponseOutput() EntityInfoResponseOutput
	ToEntityInfoResponseOutputWithContext(context.Context) EntityInfoResponseOutput
}

// The entity.
type EntityInfoResponseArgs struct {
	// The friendly name of the management group.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The fully qualified ID for the entity.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
	Id pulumi.StringInput `pulumi:"id"`
	// The users specific permissions to this item.
	InheritedPermissions pulumi.StringPtrInput `pulumi:"inheritedPermissions"`
	// The name of the entity. For example, 00000000-0000-0000-0000-000000000000
	Name pulumi.StringInput `pulumi:"name"`
	// Number of children is the number of Groups that are exactly one level underneath the current Group.
	NumberOfChildGroups pulumi.IntPtrInput `pulumi:"numberOfChildGroups"`
	// Number of children is the number of Groups and Subscriptions that are exactly one level underneath the current Group.
	NumberOfChildren    pulumi.IntPtrInput `pulumi:"numberOfChildren"`
	NumberOfDescendants pulumi.IntPtrInput `pulumi:"numberOfDescendants"`
	// (Optional) The ID of the parent management group.
	Parent EntityParentGroupInfoResponsePtrInput `pulumi:"parent"`
	// The parent display name chain from the root group to the immediate parent
	ParentDisplayNameChain pulumi.StringArrayInput `pulumi:"parentDisplayNameChain"`
	// The parent name chain from the root group to the immediate parent
	ParentNameChain pulumi.StringArrayInput `pulumi:"parentNameChain"`
	// The users specific permissions to this item.
	Permissions pulumi.StringPtrInput `pulumi:"permissions"`
	// The AAD Tenant ID associated with the entity. For example, 00000000-0000-0000-0000-000000000000
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The type of the resource. For example, Microsoft.Management/managementGroups
	Type pulumi.StringInput `pulumi:"type"`
}

func (EntityInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityInfoResponse)(nil)).Elem()
}

func (i EntityInfoResponseArgs) ToEntityInfoResponseOutput() EntityInfoResponseOutput {
	return i.ToEntityInfoResponseOutputWithContext(context.Background())
}

func (i EntityInfoResponseArgs) ToEntityInfoResponseOutputWithContext(ctx context.Context) EntityInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityInfoResponseOutput)
}

// EntityInfoResponseArrayInput is an input type that accepts EntityInfoResponseArray and EntityInfoResponseArrayOutput values.
// You can construct a concrete instance of `EntityInfoResponseArrayInput` via:
//
//          EntityInfoResponseArray{ EntityInfoResponseArgs{...} }
type EntityInfoResponseArrayInput interface {
	pulumi.Input

	ToEntityInfoResponseArrayOutput() EntityInfoResponseArrayOutput
	ToEntityInfoResponseArrayOutputWithContext(context.Context) EntityInfoResponseArrayOutput
}

type EntityInfoResponseArray []EntityInfoResponseInput

func (EntityInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityInfoResponse)(nil)).Elem()
}

func (i EntityInfoResponseArray) ToEntityInfoResponseArrayOutput() EntityInfoResponseArrayOutput {
	return i.ToEntityInfoResponseArrayOutputWithContext(context.Background())
}

func (i EntityInfoResponseArray) ToEntityInfoResponseArrayOutputWithContext(ctx context.Context) EntityInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityInfoResponseArrayOutput)
}

// The entity.
type EntityInfoResponseOutput struct{ *pulumi.OutputState }

func (EntityInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityInfoResponse)(nil)).Elem()
}

func (o EntityInfoResponseOutput) ToEntityInfoResponseOutput() EntityInfoResponseOutput {
	return o
}

func (o EntityInfoResponseOutput) ToEntityInfoResponseOutputWithContext(ctx context.Context) EntityInfoResponseOutput {
	return o
}

// The friendly name of the management group.
func (o EntityInfoResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInfoResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The fully qualified ID for the entity.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
func (o EntityInfoResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EntityInfoResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The users specific permissions to this item.
func (o EntityInfoResponseOutput) InheritedPermissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInfoResponse) *string { return v.InheritedPermissions }).(pulumi.StringPtrOutput)
}

// The name of the entity. For example, 00000000-0000-0000-0000-000000000000
func (o EntityInfoResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EntityInfoResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Number of children is the number of Groups that are exactly one level underneath the current Group.
func (o EntityInfoResponseOutput) NumberOfChildGroups() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EntityInfoResponse) *int { return v.NumberOfChildGroups }).(pulumi.IntPtrOutput)
}

// Number of children is the number of Groups and Subscriptions that are exactly one level underneath the current Group.
func (o EntityInfoResponseOutput) NumberOfChildren() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EntityInfoResponse) *int { return v.NumberOfChildren }).(pulumi.IntPtrOutput)
}

func (o EntityInfoResponseOutput) NumberOfDescendants() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EntityInfoResponse) *int { return v.NumberOfDescendants }).(pulumi.IntPtrOutput)
}

// (Optional) The ID of the parent management group.
func (o EntityInfoResponseOutput) Parent() EntityParentGroupInfoResponsePtrOutput {
	return o.ApplyT(func(v EntityInfoResponse) *EntityParentGroupInfoResponse { return v.Parent }).(EntityParentGroupInfoResponsePtrOutput)
}

// The parent display name chain from the root group to the immediate parent
func (o EntityInfoResponseOutput) ParentDisplayNameChain() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EntityInfoResponse) []string { return v.ParentDisplayNameChain }).(pulumi.StringArrayOutput)
}

// The parent name chain from the root group to the immediate parent
func (o EntityInfoResponseOutput) ParentNameChain() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EntityInfoResponse) []string { return v.ParentNameChain }).(pulumi.StringArrayOutput)
}

// The users specific permissions to this item.
func (o EntityInfoResponseOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInfoResponse) *string { return v.Permissions }).(pulumi.StringPtrOutput)
}

// The AAD Tenant ID associated with the entity. For example, 00000000-0000-0000-0000-000000000000
func (o EntityInfoResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInfoResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The type of the resource. For example, Microsoft.Management/managementGroups
func (o EntityInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EntityInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

type EntityInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (EntityInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityInfoResponse)(nil)).Elem()
}

func (o EntityInfoResponseArrayOutput) ToEntityInfoResponseArrayOutput() EntityInfoResponseArrayOutput {
	return o
}

func (o EntityInfoResponseArrayOutput) ToEntityInfoResponseArrayOutputWithContext(ctx context.Context) EntityInfoResponseArrayOutput {
	return o
}

func (o EntityInfoResponseArrayOutput) Index(i pulumi.IntInput) EntityInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntityInfoResponse {
		return vs[0].([]EntityInfoResponse)[vs[1].(int)]
	}).(EntityInfoResponseOutput)
}

// (Optional) The ID of the parent management group.
type EntityParentGroupInfoResponse struct {
	// The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
	Id *string `pulumi:"id"`
}

// EntityParentGroupInfoResponseInput is an input type that accepts EntityParentGroupInfoResponseArgs and EntityParentGroupInfoResponseOutput values.
// You can construct a concrete instance of `EntityParentGroupInfoResponseInput` via:
//
//          EntityParentGroupInfoResponseArgs{...}
type EntityParentGroupInfoResponseInput interface {
	pulumi.Input

	ToEntityParentGroupInfoResponseOutput() EntityParentGroupInfoResponseOutput
	ToEntityParentGroupInfoResponseOutputWithContext(context.Context) EntityParentGroupInfoResponseOutput
}

// (Optional) The ID of the parent management group.
type EntityParentGroupInfoResponseArgs struct {
	// The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (EntityParentGroupInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityParentGroupInfoResponse)(nil)).Elem()
}

func (i EntityParentGroupInfoResponseArgs) ToEntityParentGroupInfoResponseOutput() EntityParentGroupInfoResponseOutput {
	return i.ToEntityParentGroupInfoResponseOutputWithContext(context.Background())
}

func (i EntityParentGroupInfoResponseArgs) ToEntityParentGroupInfoResponseOutputWithContext(ctx context.Context) EntityParentGroupInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityParentGroupInfoResponseOutput)
}

func (i EntityParentGroupInfoResponseArgs) ToEntityParentGroupInfoResponsePtrOutput() EntityParentGroupInfoResponsePtrOutput {
	return i.ToEntityParentGroupInfoResponsePtrOutputWithContext(context.Background())
}

func (i EntityParentGroupInfoResponseArgs) ToEntityParentGroupInfoResponsePtrOutputWithContext(ctx context.Context) EntityParentGroupInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityParentGroupInfoResponseOutput).ToEntityParentGroupInfoResponsePtrOutputWithContext(ctx)
}

// EntityParentGroupInfoResponsePtrInput is an input type that accepts EntityParentGroupInfoResponseArgs, EntityParentGroupInfoResponsePtr and EntityParentGroupInfoResponsePtrOutput values.
// You can construct a concrete instance of `EntityParentGroupInfoResponsePtrInput` via:
//
//          EntityParentGroupInfoResponseArgs{...}
//
//  or:
//
//          nil
type EntityParentGroupInfoResponsePtrInput interface {
	pulumi.Input

	ToEntityParentGroupInfoResponsePtrOutput() EntityParentGroupInfoResponsePtrOutput
	ToEntityParentGroupInfoResponsePtrOutputWithContext(context.Context) EntityParentGroupInfoResponsePtrOutput
}

type entityParentGroupInfoResponsePtrType EntityParentGroupInfoResponseArgs

func EntityParentGroupInfoResponsePtr(v *EntityParentGroupInfoResponseArgs) EntityParentGroupInfoResponsePtrInput {
	return (*entityParentGroupInfoResponsePtrType)(v)
}

func (*entityParentGroupInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityParentGroupInfoResponse)(nil)).Elem()
}

func (i *entityParentGroupInfoResponsePtrType) ToEntityParentGroupInfoResponsePtrOutput() EntityParentGroupInfoResponsePtrOutput {
	return i.ToEntityParentGroupInfoResponsePtrOutputWithContext(context.Background())
}

func (i *entityParentGroupInfoResponsePtrType) ToEntityParentGroupInfoResponsePtrOutputWithContext(ctx context.Context) EntityParentGroupInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityParentGroupInfoResponsePtrOutput)
}

// (Optional) The ID of the parent management group.
type EntityParentGroupInfoResponseOutput struct{ *pulumi.OutputState }

func (EntityParentGroupInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityParentGroupInfoResponse)(nil)).Elem()
}

func (o EntityParentGroupInfoResponseOutput) ToEntityParentGroupInfoResponseOutput() EntityParentGroupInfoResponseOutput {
	return o
}

func (o EntityParentGroupInfoResponseOutput) ToEntityParentGroupInfoResponseOutputWithContext(ctx context.Context) EntityParentGroupInfoResponseOutput {
	return o
}

func (o EntityParentGroupInfoResponseOutput) ToEntityParentGroupInfoResponsePtrOutput() EntityParentGroupInfoResponsePtrOutput {
	return o.ToEntityParentGroupInfoResponsePtrOutputWithContext(context.Background())
}

func (o EntityParentGroupInfoResponseOutput) ToEntityParentGroupInfoResponsePtrOutputWithContext(ctx context.Context) EntityParentGroupInfoResponsePtrOutput {
	return o.ApplyT(func(v EntityParentGroupInfoResponse) *EntityParentGroupInfoResponse {
		return &v
	}).(EntityParentGroupInfoResponsePtrOutput)
}

// The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
func (o EntityParentGroupInfoResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityParentGroupInfoResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type EntityParentGroupInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (EntityParentGroupInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityParentGroupInfoResponse)(nil)).Elem()
}

func (o EntityParentGroupInfoResponsePtrOutput) ToEntityParentGroupInfoResponsePtrOutput() EntityParentGroupInfoResponsePtrOutput {
	return o
}

func (o EntityParentGroupInfoResponsePtrOutput) ToEntityParentGroupInfoResponsePtrOutputWithContext(ctx context.Context) EntityParentGroupInfoResponsePtrOutput {
	return o
}

func (o EntityParentGroupInfoResponsePtrOutput) Elem() EntityParentGroupInfoResponseOutput {
	return o.ApplyT(func(v *EntityParentGroupInfoResponse) EntityParentGroupInfoResponse { return *v }).(EntityParentGroupInfoResponseOutput)
}

// The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
func (o EntityParentGroupInfoResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityParentGroupInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The resource management error additional info.
type ErrorAdditionalInfoResponse struct {
	// The additional info.
	Info interface{} `pulumi:"info"`
	// The additional info type.
	Type string `pulumi:"type"`
}

// ErrorAdditionalInfoResponseInput is an input type that accepts ErrorAdditionalInfoResponseArgs and ErrorAdditionalInfoResponseOutput values.
// You can construct a concrete instance of `ErrorAdditionalInfoResponseInput` via:
//
//          ErrorAdditionalInfoResponseArgs{...}
type ErrorAdditionalInfoResponseInput interface {
	pulumi.Input

	ToErrorAdditionalInfoResponseOutput() ErrorAdditionalInfoResponseOutput
	ToErrorAdditionalInfoResponseOutputWithContext(context.Context) ErrorAdditionalInfoResponseOutput
}

// The resource management error additional info.
type ErrorAdditionalInfoResponseArgs struct {
	// The additional info.
	Info pulumi.Input `pulumi:"info"`
	// The additional info type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ErrorAdditionalInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorAdditionalInfoResponse)(nil)).Elem()
}

func (i ErrorAdditionalInfoResponseArgs) ToErrorAdditionalInfoResponseOutput() ErrorAdditionalInfoResponseOutput {
	return i.ToErrorAdditionalInfoResponseOutputWithContext(context.Background())
}

func (i ErrorAdditionalInfoResponseArgs) ToErrorAdditionalInfoResponseOutputWithContext(ctx context.Context) ErrorAdditionalInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorAdditionalInfoResponseOutput)
}

// ErrorAdditionalInfoResponseArrayInput is an input type that accepts ErrorAdditionalInfoResponseArray and ErrorAdditionalInfoResponseArrayOutput values.
// You can construct a concrete instance of `ErrorAdditionalInfoResponseArrayInput` via:
//
//          ErrorAdditionalInfoResponseArray{ ErrorAdditionalInfoResponseArgs{...} }
type ErrorAdditionalInfoResponseArrayInput interface {
	pulumi.Input

	ToErrorAdditionalInfoResponseArrayOutput() ErrorAdditionalInfoResponseArrayOutput
	ToErrorAdditionalInfoResponseArrayOutputWithContext(context.Context) ErrorAdditionalInfoResponseArrayOutput
}

type ErrorAdditionalInfoResponseArray []ErrorAdditionalInfoResponseInput

func (ErrorAdditionalInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorAdditionalInfoResponse)(nil)).Elem()
}

func (i ErrorAdditionalInfoResponseArray) ToErrorAdditionalInfoResponseArrayOutput() ErrorAdditionalInfoResponseArrayOutput {
	return i.ToErrorAdditionalInfoResponseArrayOutputWithContext(context.Background())
}

func (i ErrorAdditionalInfoResponseArray) ToErrorAdditionalInfoResponseArrayOutputWithContext(ctx context.Context) ErrorAdditionalInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorAdditionalInfoResponseArrayOutput)
}

// The resource management error additional info.
type ErrorAdditionalInfoResponseOutput struct{ *pulumi.OutputState }

func (ErrorAdditionalInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorAdditionalInfoResponse)(nil)).Elem()
}

func (o ErrorAdditionalInfoResponseOutput) ToErrorAdditionalInfoResponseOutput() ErrorAdditionalInfoResponseOutput {
	return o
}

func (o ErrorAdditionalInfoResponseOutput) ToErrorAdditionalInfoResponseOutputWithContext(ctx context.Context) ErrorAdditionalInfoResponseOutput {
	return o
}

// The additional info.
func (o ErrorAdditionalInfoResponseOutput) Info() pulumi.AnyOutput {
	return o.ApplyT(func(v ErrorAdditionalInfoResponse) interface{} { return v.Info }).(pulumi.AnyOutput)
}

// The additional info type.
func (o ErrorAdditionalInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorAdditionalInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ErrorAdditionalInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (ErrorAdditionalInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorAdditionalInfoResponse)(nil)).Elem()
}

func (o ErrorAdditionalInfoResponseArrayOutput) ToErrorAdditionalInfoResponseArrayOutput() ErrorAdditionalInfoResponseArrayOutput {
	return o
}

func (o ErrorAdditionalInfoResponseArrayOutput) ToErrorAdditionalInfoResponseArrayOutputWithContext(ctx context.Context) ErrorAdditionalInfoResponseArrayOutput {
	return o
}

func (o ErrorAdditionalInfoResponseArrayOutput) Index(i pulumi.IntInput) ErrorAdditionalInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ErrorAdditionalInfoResponse {
		return vs[0].([]ErrorAdditionalInfoResponse)[vs[1].(int)]
	}).(ErrorAdditionalInfoResponseOutput)
}

// Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)
type ErrorResponseResponse struct {
	// The error additional info.
	AdditionalInfo []ErrorAdditionalInfoResponse `pulumi:"additionalInfo"`
	// The error code.
	Code string `pulumi:"code"`
	// The error details.
	Details []ErrorResponseResponse `pulumi:"details"`
	// The error message.
	Message string `pulumi:"message"`
	// The error target.
	Target string `pulumi:"target"`
}

// ErrorResponseResponseInput is an input type that accepts ErrorResponseResponseArgs and ErrorResponseResponseOutput values.
// You can construct a concrete instance of `ErrorResponseResponseInput` via:
//
//          ErrorResponseResponseArgs{...}
type ErrorResponseResponseInput interface {
	pulumi.Input

	ToErrorResponseResponseOutput() ErrorResponseResponseOutput
	ToErrorResponseResponseOutputWithContext(context.Context) ErrorResponseResponseOutput
}

// Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)
type ErrorResponseResponseArgs struct {
	// The error additional info.
	AdditionalInfo ErrorAdditionalInfoResponseArrayInput `pulumi:"additionalInfo"`
	// The error code.
	Code pulumi.StringInput `pulumi:"code"`
	// The error details.
	Details ErrorResponseResponseArrayInput `pulumi:"details"`
	// The error message.
	Message pulumi.StringInput `pulumi:"message"`
	// The error target.
	Target pulumi.StringInput `pulumi:"target"`
}

func (ErrorResponseResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorResponseResponse)(nil)).Elem()
}

func (i ErrorResponseResponseArgs) ToErrorResponseResponseOutput() ErrorResponseResponseOutput {
	return i.ToErrorResponseResponseOutputWithContext(context.Background())
}

func (i ErrorResponseResponseArgs) ToErrorResponseResponseOutputWithContext(ctx context.Context) ErrorResponseResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorResponseResponseOutput)
}

func (i ErrorResponseResponseArgs) ToErrorResponseResponsePtrOutput() ErrorResponseResponsePtrOutput {
	return i.ToErrorResponseResponsePtrOutputWithContext(context.Background())
}

func (i ErrorResponseResponseArgs) ToErrorResponseResponsePtrOutputWithContext(ctx context.Context) ErrorResponseResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorResponseResponseOutput).ToErrorResponseResponsePtrOutputWithContext(ctx)
}

// ErrorResponseResponsePtrInput is an input type that accepts ErrorResponseResponseArgs, ErrorResponseResponsePtr and ErrorResponseResponsePtrOutput values.
// You can construct a concrete instance of `ErrorResponseResponsePtrInput` via:
//
//          ErrorResponseResponseArgs{...}
//
//  or:
//
//          nil
type ErrorResponseResponsePtrInput interface {
	pulumi.Input

	ToErrorResponseResponsePtrOutput() ErrorResponseResponsePtrOutput
	ToErrorResponseResponsePtrOutputWithContext(context.Context) ErrorResponseResponsePtrOutput
}

type errorResponseResponsePtrType ErrorResponseResponseArgs

func ErrorResponseResponsePtr(v *ErrorResponseResponseArgs) ErrorResponseResponsePtrInput {
	return (*errorResponseResponsePtrType)(v)
}

func (*errorResponseResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorResponseResponse)(nil)).Elem()
}

func (i *errorResponseResponsePtrType) ToErrorResponseResponsePtrOutput() ErrorResponseResponsePtrOutput {
	return i.ToErrorResponseResponsePtrOutputWithContext(context.Background())
}

func (i *errorResponseResponsePtrType) ToErrorResponseResponsePtrOutputWithContext(ctx context.Context) ErrorResponseResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorResponseResponsePtrOutput)
}

// ErrorResponseResponseArrayInput is an input type that accepts ErrorResponseResponseArray and ErrorResponseResponseArrayOutput values.
// You can construct a concrete instance of `ErrorResponseResponseArrayInput` via:
//
//          ErrorResponseResponseArray{ ErrorResponseResponseArgs{...} }
type ErrorResponseResponseArrayInput interface {
	pulumi.Input

	ToErrorResponseResponseArrayOutput() ErrorResponseResponseArrayOutput
	ToErrorResponseResponseArrayOutputWithContext(context.Context) ErrorResponseResponseArrayOutput
}

type ErrorResponseResponseArray []ErrorResponseResponseInput

func (ErrorResponseResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorResponseResponse)(nil)).Elem()
}

func (i ErrorResponseResponseArray) ToErrorResponseResponseArrayOutput() ErrorResponseResponseArrayOutput {
	return i.ToErrorResponseResponseArrayOutputWithContext(context.Background())
}

func (i ErrorResponseResponseArray) ToErrorResponseResponseArrayOutputWithContext(ctx context.Context) ErrorResponseResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorResponseResponseArrayOutput)
}

// Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)
type ErrorResponseResponseOutput struct{ *pulumi.OutputState }

func (ErrorResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorResponseResponse)(nil)).Elem()
}

func (o ErrorResponseResponseOutput) ToErrorResponseResponseOutput() ErrorResponseResponseOutput {
	return o
}

func (o ErrorResponseResponseOutput) ToErrorResponseResponseOutputWithContext(ctx context.Context) ErrorResponseResponseOutput {
	return o
}

func (o ErrorResponseResponseOutput) ToErrorResponseResponsePtrOutput() ErrorResponseResponsePtrOutput {
	return o.ToErrorResponseResponsePtrOutputWithContext(context.Background())
}

func (o ErrorResponseResponseOutput) ToErrorResponseResponsePtrOutputWithContext(ctx context.Context) ErrorResponseResponsePtrOutput {
	return o.ApplyT(func(v ErrorResponseResponse) *ErrorResponseResponse {
		return &v
	}).(ErrorResponseResponsePtrOutput)
}

// The error additional info.
func (o ErrorResponseResponseOutput) AdditionalInfo() ErrorAdditionalInfoResponseArrayOutput {
	return o.ApplyT(func(v ErrorResponseResponse) []ErrorAdditionalInfoResponse { return v.AdditionalInfo }).(ErrorAdditionalInfoResponseArrayOutput)
}

// The error code.
func (o ErrorResponseResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorResponseResponse) string { return v.Code }).(pulumi.StringOutput)
}

// The error details.
func (o ErrorResponseResponseOutput) Details() ErrorResponseResponseArrayOutput {
	return o.ApplyT(func(v ErrorResponseResponse) []ErrorResponseResponse { return v.Details }).(ErrorResponseResponseArrayOutput)
}

// The error message.
func (o ErrorResponseResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorResponseResponse) string { return v.Message }).(pulumi.StringOutput)
}

// The error target.
func (o ErrorResponseResponseOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorResponseResponse) string { return v.Target }).(pulumi.StringOutput)
}

type ErrorResponseResponsePtrOutput struct{ *pulumi.OutputState }

func (ErrorResponseResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorResponseResponse)(nil)).Elem()
}

func (o ErrorResponseResponsePtrOutput) ToErrorResponseResponsePtrOutput() ErrorResponseResponsePtrOutput {
	return o
}

func (o ErrorResponseResponsePtrOutput) ToErrorResponseResponsePtrOutputWithContext(ctx context.Context) ErrorResponseResponsePtrOutput {
	return o
}

func (o ErrorResponseResponsePtrOutput) Elem() ErrorResponseResponseOutput {
	return o.ApplyT(func(v *ErrorResponseResponse) ErrorResponseResponse { return *v }).(ErrorResponseResponseOutput)
}

// The error additional info.
func (o ErrorResponseResponsePtrOutput) AdditionalInfo() ErrorAdditionalInfoResponseArrayOutput {
	return o.ApplyT(func(v *ErrorResponseResponse) []ErrorAdditionalInfoResponse {
		if v == nil {
			return nil
		}
		return v.AdditionalInfo
	}).(ErrorAdditionalInfoResponseArrayOutput)
}

// The error code.
func (o ErrorResponseResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// The error details.
func (o ErrorResponseResponsePtrOutput) Details() ErrorResponseResponseArrayOutput {
	return o.ApplyT(func(v *ErrorResponseResponse) []ErrorResponseResponse {
		if v == nil {
			return nil
		}
		return v.Details
	}).(ErrorResponseResponseArrayOutput)
}

// The error message.
func (o ErrorResponseResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// The error target.
func (o ErrorResponseResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(pulumi.StringPtrOutput)
}

type ErrorResponseResponseArrayOutput struct{ *pulumi.OutputState }

func (ErrorResponseResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorResponseResponse)(nil)).Elem()
}

func (o ErrorResponseResponseArrayOutput) ToErrorResponseResponseArrayOutput() ErrorResponseResponseArrayOutput {
	return o
}

func (o ErrorResponseResponseArrayOutput) ToErrorResponseResponseArrayOutputWithContext(ctx context.Context) ErrorResponseResponseArrayOutput {
	return o
}

func (o ErrorResponseResponseArrayOutput) Index(i pulumi.IntInput) ErrorResponseResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ErrorResponseResponse {
		return vs[0].([]ErrorResponseResponse)[vs[1].(int)]
	}).(ErrorResponseResponseOutput)
}

// Specifies whether template expressions are evaluated within the scope of the parent template or nested template.
type ExpressionEvaluationOptions struct {
	// The scope to be used for evaluation of parameters, variables and functions in a nested template.
	Scope *string `pulumi:"scope"`
}

// ExpressionEvaluationOptionsInput is an input type that accepts ExpressionEvaluationOptionsArgs and ExpressionEvaluationOptionsOutput values.
// You can construct a concrete instance of `ExpressionEvaluationOptionsInput` via:
//
//          ExpressionEvaluationOptionsArgs{...}
type ExpressionEvaluationOptionsInput interface {
	pulumi.Input

	ToExpressionEvaluationOptionsOutput() ExpressionEvaluationOptionsOutput
	ToExpressionEvaluationOptionsOutputWithContext(context.Context) ExpressionEvaluationOptionsOutput
}

// Specifies whether template expressions are evaluated within the scope of the parent template or nested template.
type ExpressionEvaluationOptionsArgs struct {
	// The scope to be used for evaluation of parameters, variables and functions in a nested template.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (ExpressionEvaluationOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressionEvaluationOptions)(nil)).Elem()
}

func (i ExpressionEvaluationOptionsArgs) ToExpressionEvaluationOptionsOutput() ExpressionEvaluationOptionsOutput {
	return i.ToExpressionEvaluationOptionsOutputWithContext(context.Background())
}

func (i ExpressionEvaluationOptionsArgs) ToExpressionEvaluationOptionsOutputWithContext(ctx context.Context) ExpressionEvaluationOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressionEvaluationOptionsOutput)
}

func (i ExpressionEvaluationOptionsArgs) ToExpressionEvaluationOptionsPtrOutput() ExpressionEvaluationOptionsPtrOutput {
	return i.ToExpressionEvaluationOptionsPtrOutputWithContext(context.Background())
}

func (i ExpressionEvaluationOptionsArgs) ToExpressionEvaluationOptionsPtrOutputWithContext(ctx context.Context) ExpressionEvaluationOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressionEvaluationOptionsOutput).ToExpressionEvaluationOptionsPtrOutputWithContext(ctx)
}

// ExpressionEvaluationOptionsPtrInput is an input type that accepts ExpressionEvaluationOptionsArgs, ExpressionEvaluationOptionsPtr and ExpressionEvaluationOptionsPtrOutput values.
// You can construct a concrete instance of `ExpressionEvaluationOptionsPtrInput` via:
//
//          ExpressionEvaluationOptionsArgs{...}
//
//  or:
//
//          nil
type ExpressionEvaluationOptionsPtrInput interface {
	pulumi.Input

	ToExpressionEvaluationOptionsPtrOutput() ExpressionEvaluationOptionsPtrOutput
	ToExpressionEvaluationOptionsPtrOutputWithContext(context.Context) ExpressionEvaluationOptionsPtrOutput
}

type expressionEvaluationOptionsPtrType ExpressionEvaluationOptionsArgs

func ExpressionEvaluationOptionsPtr(v *ExpressionEvaluationOptionsArgs) ExpressionEvaluationOptionsPtrInput {
	return (*expressionEvaluationOptionsPtrType)(v)
}

func (*expressionEvaluationOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressionEvaluationOptions)(nil)).Elem()
}

func (i *expressionEvaluationOptionsPtrType) ToExpressionEvaluationOptionsPtrOutput() ExpressionEvaluationOptionsPtrOutput {
	return i.ToExpressionEvaluationOptionsPtrOutputWithContext(context.Background())
}

func (i *expressionEvaluationOptionsPtrType) ToExpressionEvaluationOptionsPtrOutputWithContext(ctx context.Context) ExpressionEvaluationOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressionEvaluationOptionsPtrOutput)
}

// Specifies whether template expressions are evaluated within the scope of the parent template or nested template.
type ExpressionEvaluationOptionsOutput struct{ *pulumi.OutputState }

func (ExpressionEvaluationOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressionEvaluationOptions)(nil)).Elem()
}

func (o ExpressionEvaluationOptionsOutput) ToExpressionEvaluationOptionsOutput() ExpressionEvaluationOptionsOutput {
	return o
}

func (o ExpressionEvaluationOptionsOutput) ToExpressionEvaluationOptionsOutputWithContext(ctx context.Context) ExpressionEvaluationOptionsOutput {
	return o
}

func (o ExpressionEvaluationOptionsOutput) ToExpressionEvaluationOptionsPtrOutput() ExpressionEvaluationOptionsPtrOutput {
	return o.ToExpressionEvaluationOptionsPtrOutputWithContext(context.Background())
}

func (o ExpressionEvaluationOptionsOutput) ToExpressionEvaluationOptionsPtrOutputWithContext(ctx context.Context) ExpressionEvaluationOptionsPtrOutput {
	return o.ApplyT(func(v ExpressionEvaluationOptions) *ExpressionEvaluationOptions {
		return &v
	}).(ExpressionEvaluationOptionsPtrOutput)
}

// The scope to be used for evaluation of parameters, variables and functions in a nested template.
func (o ExpressionEvaluationOptionsOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressionEvaluationOptions) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type ExpressionEvaluationOptionsPtrOutput struct{ *pulumi.OutputState }

func (ExpressionEvaluationOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressionEvaluationOptions)(nil)).Elem()
}

func (o ExpressionEvaluationOptionsPtrOutput) ToExpressionEvaluationOptionsPtrOutput() ExpressionEvaluationOptionsPtrOutput {
	return o
}

func (o ExpressionEvaluationOptionsPtrOutput) ToExpressionEvaluationOptionsPtrOutputWithContext(ctx context.Context) ExpressionEvaluationOptionsPtrOutput {
	return o
}

func (o ExpressionEvaluationOptionsPtrOutput) Elem() ExpressionEvaluationOptionsOutput {
	return o.ApplyT(func(v *ExpressionEvaluationOptions) ExpressionEvaluationOptions { return *v }).(ExpressionEvaluationOptionsOutput)
}

// The scope to be used for evaluation of parameters, variables and functions in a nested template.
func (o ExpressionEvaluationOptionsPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressionEvaluationOptions) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The child information of a management group.
type ManagementGroupChildInfoResponse struct {
	// The list of children.
	Children []ManagementGroupChildInfoResponse `pulumi:"children"`
	// The friendly name of the child resource.
	DisplayName *string `pulumi:"displayName"`
	// The fully qualified ID for the child resource (management group or subscription).  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
	Id *string `pulumi:"id"`
	// The name of the child entity.
	Name *string `pulumi:"name"`
	// The fully qualified resource type which includes provider namespace (e.g. Microsoft.Management/managementGroups)
	Type *string `pulumi:"type"`
}

// ManagementGroupChildInfoResponseInput is an input type that accepts ManagementGroupChildInfoResponseArgs and ManagementGroupChildInfoResponseOutput values.
// You can construct a concrete instance of `ManagementGroupChildInfoResponseInput` via:
//
//          ManagementGroupChildInfoResponseArgs{...}
type ManagementGroupChildInfoResponseInput interface {
	pulumi.Input

	ToManagementGroupChildInfoResponseOutput() ManagementGroupChildInfoResponseOutput
	ToManagementGroupChildInfoResponseOutputWithContext(context.Context) ManagementGroupChildInfoResponseOutput
}

// The child information of a management group.
type ManagementGroupChildInfoResponseArgs struct {
	// The list of children.
	Children ManagementGroupChildInfoResponseArrayInput `pulumi:"children"`
	// The friendly name of the child resource.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The fully qualified ID for the child resource (management group or subscription).  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the child entity.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The fully qualified resource type which includes provider namespace (e.g. Microsoft.Management/managementGroups)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ManagementGroupChildInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementGroupChildInfoResponse)(nil)).Elem()
}

func (i ManagementGroupChildInfoResponseArgs) ToManagementGroupChildInfoResponseOutput() ManagementGroupChildInfoResponseOutput {
	return i.ToManagementGroupChildInfoResponseOutputWithContext(context.Background())
}

func (i ManagementGroupChildInfoResponseArgs) ToManagementGroupChildInfoResponseOutputWithContext(ctx context.Context) ManagementGroupChildInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementGroupChildInfoResponseOutput)
}

// ManagementGroupChildInfoResponseArrayInput is an input type that accepts ManagementGroupChildInfoResponseArray and ManagementGroupChildInfoResponseArrayOutput values.
// You can construct a concrete instance of `ManagementGroupChildInfoResponseArrayInput` via:
//
//          ManagementGroupChildInfoResponseArray{ ManagementGroupChildInfoResponseArgs{...} }
type ManagementGroupChildInfoResponseArrayInput interface {
	pulumi.Input

	ToManagementGroupChildInfoResponseArrayOutput() ManagementGroupChildInfoResponseArrayOutput
	ToManagementGroupChildInfoResponseArrayOutputWithContext(context.Context) ManagementGroupChildInfoResponseArrayOutput
}

type ManagementGroupChildInfoResponseArray []ManagementGroupChildInfoResponseInput

func (ManagementGroupChildInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementGroupChildInfoResponse)(nil)).Elem()
}

func (i ManagementGroupChildInfoResponseArray) ToManagementGroupChildInfoResponseArrayOutput() ManagementGroupChildInfoResponseArrayOutput {
	return i.ToManagementGroupChildInfoResponseArrayOutputWithContext(context.Background())
}

func (i ManagementGroupChildInfoResponseArray) ToManagementGroupChildInfoResponseArrayOutputWithContext(ctx context.Context) ManagementGroupChildInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementGroupChildInfoResponseArrayOutput)
}

// The child information of a management group.
type ManagementGroupChildInfoResponseOutput struct{ *pulumi.OutputState }

func (ManagementGroupChildInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementGroupChildInfoResponse)(nil)).Elem()
}

func (o ManagementGroupChildInfoResponseOutput) ToManagementGroupChildInfoResponseOutput() ManagementGroupChildInfoResponseOutput {
	return o
}

func (o ManagementGroupChildInfoResponseOutput) ToManagementGroupChildInfoResponseOutputWithContext(ctx context.Context) ManagementGroupChildInfoResponseOutput {
	return o
}

// The list of children.
func (o ManagementGroupChildInfoResponseOutput) Children() ManagementGroupChildInfoResponseArrayOutput {
	return o.ApplyT(func(v ManagementGroupChildInfoResponse) []ManagementGroupChildInfoResponse { return v.Children }).(ManagementGroupChildInfoResponseArrayOutput)
}

// The friendly name of the child resource.
func (o ManagementGroupChildInfoResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementGroupChildInfoResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The fully qualified ID for the child resource (management group or subscription).  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
func (o ManagementGroupChildInfoResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementGroupChildInfoResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the child entity.
func (o ManagementGroupChildInfoResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementGroupChildInfoResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The fully qualified resource type which includes provider namespace (e.g. Microsoft.Management/managementGroups)
func (o ManagementGroupChildInfoResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementGroupChildInfoResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ManagementGroupChildInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagementGroupChildInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementGroupChildInfoResponse)(nil)).Elem()
}

func (o ManagementGroupChildInfoResponseArrayOutput) ToManagementGroupChildInfoResponseArrayOutput() ManagementGroupChildInfoResponseArrayOutput {
	return o
}

func (o ManagementGroupChildInfoResponseArrayOutput) ToManagementGroupChildInfoResponseArrayOutputWithContext(ctx context.Context) ManagementGroupChildInfoResponseArrayOutput {
	return o
}

func (o ManagementGroupChildInfoResponseArrayOutput) Index(i pulumi.IntInput) ManagementGroupChildInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementGroupChildInfoResponse {
		return vs[0].([]ManagementGroupChildInfoResponse)[vs[1].(int)]
	}).(ManagementGroupChildInfoResponseOutput)
}

// The details of a management group.
type ManagementGroupDetailsResponse struct {
	// (Optional) The ID of the parent management group.
	Parent *ParentGroupInfoResponse `pulumi:"parent"`
	// The identity of the principal or process that updated the object.
	UpdatedBy *string `pulumi:"updatedBy"`
	// The date and time when this object was last updated.
	UpdatedTime *string `pulumi:"updatedTime"`
	// The version number of the object.
	Version *float64 `pulumi:"version"`
}

// ManagementGroupDetailsResponseInput is an input type that accepts ManagementGroupDetailsResponseArgs and ManagementGroupDetailsResponseOutput values.
// You can construct a concrete instance of `ManagementGroupDetailsResponseInput` via:
//
//          ManagementGroupDetailsResponseArgs{...}
type ManagementGroupDetailsResponseInput interface {
	pulumi.Input

	ToManagementGroupDetailsResponseOutput() ManagementGroupDetailsResponseOutput
	ToManagementGroupDetailsResponseOutputWithContext(context.Context) ManagementGroupDetailsResponseOutput
}

// The details of a management group.
type ManagementGroupDetailsResponseArgs struct {
	// (Optional) The ID of the parent management group.
	Parent ParentGroupInfoResponsePtrInput `pulumi:"parent"`
	// The identity of the principal or process that updated the object.
	UpdatedBy pulumi.StringPtrInput `pulumi:"updatedBy"`
	// The date and time when this object was last updated.
	UpdatedTime pulumi.StringPtrInput `pulumi:"updatedTime"`
	// The version number of the object.
	Version pulumi.Float64PtrInput `pulumi:"version"`
}

func (ManagementGroupDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementGroupDetailsResponse)(nil)).Elem()
}

func (i ManagementGroupDetailsResponseArgs) ToManagementGroupDetailsResponseOutput() ManagementGroupDetailsResponseOutput {
	return i.ToManagementGroupDetailsResponseOutputWithContext(context.Background())
}

func (i ManagementGroupDetailsResponseArgs) ToManagementGroupDetailsResponseOutputWithContext(ctx context.Context) ManagementGroupDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementGroupDetailsResponseOutput)
}

func (i ManagementGroupDetailsResponseArgs) ToManagementGroupDetailsResponsePtrOutput() ManagementGroupDetailsResponsePtrOutput {
	return i.ToManagementGroupDetailsResponsePtrOutputWithContext(context.Background())
}

func (i ManagementGroupDetailsResponseArgs) ToManagementGroupDetailsResponsePtrOutputWithContext(ctx context.Context) ManagementGroupDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementGroupDetailsResponseOutput).ToManagementGroupDetailsResponsePtrOutputWithContext(ctx)
}

// ManagementGroupDetailsResponsePtrInput is an input type that accepts ManagementGroupDetailsResponseArgs, ManagementGroupDetailsResponsePtr and ManagementGroupDetailsResponsePtrOutput values.
// You can construct a concrete instance of `ManagementGroupDetailsResponsePtrInput` via:
//
//          ManagementGroupDetailsResponseArgs{...}
//
//  or:
//
//          nil
type ManagementGroupDetailsResponsePtrInput interface {
	pulumi.Input

	ToManagementGroupDetailsResponsePtrOutput() ManagementGroupDetailsResponsePtrOutput
	ToManagementGroupDetailsResponsePtrOutputWithContext(context.Context) ManagementGroupDetailsResponsePtrOutput
}

type managementGroupDetailsResponsePtrType ManagementGroupDetailsResponseArgs

func ManagementGroupDetailsResponsePtr(v *ManagementGroupDetailsResponseArgs) ManagementGroupDetailsResponsePtrInput {
	return (*managementGroupDetailsResponsePtrType)(v)
}

func (*managementGroupDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementGroupDetailsResponse)(nil)).Elem()
}

func (i *managementGroupDetailsResponsePtrType) ToManagementGroupDetailsResponsePtrOutput() ManagementGroupDetailsResponsePtrOutput {
	return i.ToManagementGroupDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *managementGroupDetailsResponsePtrType) ToManagementGroupDetailsResponsePtrOutputWithContext(ctx context.Context) ManagementGroupDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementGroupDetailsResponsePtrOutput)
}

// The details of a management group.
type ManagementGroupDetailsResponseOutput struct{ *pulumi.OutputState }

func (ManagementGroupDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementGroupDetailsResponse)(nil)).Elem()
}

func (o ManagementGroupDetailsResponseOutput) ToManagementGroupDetailsResponseOutput() ManagementGroupDetailsResponseOutput {
	return o
}

func (o ManagementGroupDetailsResponseOutput) ToManagementGroupDetailsResponseOutputWithContext(ctx context.Context) ManagementGroupDetailsResponseOutput {
	return o
}

func (o ManagementGroupDetailsResponseOutput) ToManagementGroupDetailsResponsePtrOutput() ManagementGroupDetailsResponsePtrOutput {
	return o.ToManagementGroupDetailsResponsePtrOutputWithContext(context.Background())
}

func (o ManagementGroupDetailsResponseOutput) ToManagementGroupDetailsResponsePtrOutputWithContext(ctx context.Context) ManagementGroupDetailsResponsePtrOutput {
	return o.ApplyT(func(v ManagementGroupDetailsResponse) *ManagementGroupDetailsResponse {
		return &v
	}).(ManagementGroupDetailsResponsePtrOutput)
}

// (Optional) The ID of the parent management group.
func (o ManagementGroupDetailsResponseOutput) Parent() ParentGroupInfoResponsePtrOutput {
	return o.ApplyT(func(v ManagementGroupDetailsResponse) *ParentGroupInfoResponse { return v.Parent }).(ParentGroupInfoResponsePtrOutput)
}

// The identity of the principal or process that updated the object.
func (o ManagementGroupDetailsResponseOutput) UpdatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementGroupDetailsResponse) *string { return v.UpdatedBy }).(pulumi.StringPtrOutput)
}

// The date and time when this object was last updated.
func (o ManagementGroupDetailsResponseOutput) UpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementGroupDetailsResponse) *string { return v.UpdatedTime }).(pulumi.StringPtrOutput)
}

// The version number of the object.
func (o ManagementGroupDetailsResponseOutput) Version() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ManagementGroupDetailsResponse) *float64 { return v.Version }).(pulumi.Float64PtrOutput)
}

type ManagementGroupDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagementGroupDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementGroupDetailsResponse)(nil)).Elem()
}

func (o ManagementGroupDetailsResponsePtrOutput) ToManagementGroupDetailsResponsePtrOutput() ManagementGroupDetailsResponsePtrOutput {
	return o
}

func (o ManagementGroupDetailsResponsePtrOutput) ToManagementGroupDetailsResponsePtrOutputWithContext(ctx context.Context) ManagementGroupDetailsResponsePtrOutput {
	return o
}

func (o ManagementGroupDetailsResponsePtrOutput) Elem() ManagementGroupDetailsResponseOutput {
	return o.ApplyT(func(v *ManagementGroupDetailsResponse) ManagementGroupDetailsResponse { return *v }).(ManagementGroupDetailsResponseOutput)
}

// (Optional) The ID of the parent management group.
func (o ManagementGroupDetailsResponsePtrOutput) Parent() ParentGroupInfoResponsePtrOutput {
	return o.ApplyT(func(v *ManagementGroupDetailsResponse) *ParentGroupInfoResponse {
		if v == nil {
			return nil
		}
		return v.Parent
	}).(ParentGroupInfoResponsePtrOutput)
}

// The identity of the principal or process that updated the object.
func (o ManagementGroupDetailsResponsePtrOutput) UpdatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementGroupDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedBy
	}).(pulumi.StringPtrOutput)
}

// The date and time when this object was last updated.
func (o ManagementGroupDetailsResponsePtrOutput) UpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementGroupDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedTime
	}).(pulumi.StringPtrOutput)
}

// The version number of the object.
func (o ManagementGroupDetailsResponsePtrOutput) Version() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ManagementGroupDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.Float64PtrOutput)
}

// A path element of a management group ancestors.
type ManagementGroupPathElementResponse struct {
	// The friendly name of the group.
	DisplayName *string `pulumi:"displayName"`
	// The name of the group.
	Name *string `pulumi:"name"`
}

// ManagementGroupPathElementResponseInput is an input type that accepts ManagementGroupPathElementResponseArgs and ManagementGroupPathElementResponseOutput values.
// You can construct a concrete instance of `ManagementGroupPathElementResponseInput` via:
//
//          ManagementGroupPathElementResponseArgs{...}
type ManagementGroupPathElementResponseInput interface {
	pulumi.Input

	ToManagementGroupPathElementResponseOutput() ManagementGroupPathElementResponseOutput
	ToManagementGroupPathElementResponseOutputWithContext(context.Context) ManagementGroupPathElementResponseOutput
}

// A path element of a management group ancestors.
type ManagementGroupPathElementResponseArgs struct {
	// The friendly name of the group.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The name of the group.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ManagementGroupPathElementResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementGroupPathElementResponse)(nil)).Elem()
}

func (i ManagementGroupPathElementResponseArgs) ToManagementGroupPathElementResponseOutput() ManagementGroupPathElementResponseOutput {
	return i.ToManagementGroupPathElementResponseOutputWithContext(context.Background())
}

func (i ManagementGroupPathElementResponseArgs) ToManagementGroupPathElementResponseOutputWithContext(ctx context.Context) ManagementGroupPathElementResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementGroupPathElementResponseOutput)
}

// ManagementGroupPathElementResponseArrayInput is an input type that accepts ManagementGroupPathElementResponseArray and ManagementGroupPathElementResponseArrayOutput values.
// You can construct a concrete instance of `ManagementGroupPathElementResponseArrayInput` via:
//
//          ManagementGroupPathElementResponseArray{ ManagementGroupPathElementResponseArgs{...} }
type ManagementGroupPathElementResponseArrayInput interface {
	pulumi.Input

	ToManagementGroupPathElementResponseArrayOutput() ManagementGroupPathElementResponseArrayOutput
	ToManagementGroupPathElementResponseArrayOutputWithContext(context.Context) ManagementGroupPathElementResponseArrayOutput
}

type ManagementGroupPathElementResponseArray []ManagementGroupPathElementResponseInput

func (ManagementGroupPathElementResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementGroupPathElementResponse)(nil)).Elem()
}

func (i ManagementGroupPathElementResponseArray) ToManagementGroupPathElementResponseArrayOutput() ManagementGroupPathElementResponseArrayOutput {
	return i.ToManagementGroupPathElementResponseArrayOutputWithContext(context.Background())
}

func (i ManagementGroupPathElementResponseArray) ToManagementGroupPathElementResponseArrayOutputWithContext(ctx context.Context) ManagementGroupPathElementResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementGroupPathElementResponseArrayOutput)
}

// A path element of a management group ancestors.
type ManagementGroupPathElementResponseOutput struct{ *pulumi.OutputState }

func (ManagementGroupPathElementResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementGroupPathElementResponse)(nil)).Elem()
}

func (o ManagementGroupPathElementResponseOutput) ToManagementGroupPathElementResponseOutput() ManagementGroupPathElementResponseOutput {
	return o
}

func (o ManagementGroupPathElementResponseOutput) ToManagementGroupPathElementResponseOutputWithContext(ctx context.Context) ManagementGroupPathElementResponseOutput {
	return o
}

// The friendly name of the group.
func (o ManagementGroupPathElementResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementGroupPathElementResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The name of the group.
func (o ManagementGroupPathElementResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagementGroupPathElementResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ManagementGroupPathElementResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagementGroupPathElementResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagementGroupPathElementResponse)(nil)).Elem()
}

func (o ManagementGroupPathElementResponseArrayOutput) ToManagementGroupPathElementResponseArrayOutput() ManagementGroupPathElementResponseArrayOutput {
	return o
}

func (o ManagementGroupPathElementResponseArrayOutput) ToManagementGroupPathElementResponseArrayOutputWithContext(ctx context.Context) ManagementGroupPathElementResponseArrayOutput {
	return o
}

func (o ManagementGroupPathElementResponseArrayOutput) Index(i pulumi.IntInput) ManagementGroupPathElementResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagementGroupPathElementResponse {
		return vs[0].([]ManagementGroupPathElementResponse)[vs[1].(int)]
	}).(ManagementGroupPathElementResponseOutput)
}

// Deployment on error behavior.
type OnErrorDeployment struct {
	// The deployment to be used on error case.
	DeploymentName *string `pulumi:"deploymentName"`
	// The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
	Type *string `pulumi:"type"`
}

// OnErrorDeploymentInput is an input type that accepts OnErrorDeploymentArgs and OnErrorDeploymentOutput values.
// You can construct a concrete instance of `OnErrorDeploymentInput` via:
//
//          OnErrorDeploymentArgs{...}
type OnErrorDeploymentInput interface {
	pulumi.Input

	ToOnErrorDeploymentOutput() OnErrorDeploymentOutput
	ToOnErrorDeploymentOutputWithContext(context.Context) OnErrorDeploymentOutput
}

// Deployment on error behavior.
type OnErrorDeploymentArgs struct {
	// The deployment to be used on error case.
	DeploymentName pulumi.StringPtrInput `pulumi:"deploymentName"`
	// The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (OnErrorDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnErrorDeployment)(nil)).Elem()
}

func (i OnErrorDeploymentArgs) ToOnErrorDeploymentOutput() OnErrorDeploymentOutput {
	return i.ToOnErrorDeploymentOutputWithContext(context.Background())
}

func (i OnErrorDeploymentArgs) ToOnErrorDeploymentOutputWithContext(ctx context.Context) OnErrorDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnErrorDeploymentOutput)
}

func (i OnErrorDeploymentArgs) ToOnErrorDeploymentPtrOutput() OnErrorDeploymentPtrOutput {
	return i.ToOnErrorDeploymentPtrOutputWithContext(context.Background())
}

func (i OnErrorDeploymentArgs) ToOnErrorDeploymentPtrOutputWithContext(ctx context.Context) OnErrorDeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnErrorDeploymentOutput).ToOnErrorDeploymentPtrOutputWithContext(ctx)
}

// OnErrorDeploymentPtrInput is an input type that accepts OnErrorDeploymentArgs, OnErrorDeploymentPtr and OnErrorDeploymentPtrOutput values.
// You can construct a concrete instance of `OnErrorDeploymentPtrInput` via:
//
//          OnErrorDeploymentArgs{...}
//
//  or:
//
//          nil
type OnErrorDeploymentPtrInput interface {
	pulumi.Input

	ToOnErrorDeploymentPtrOutput() OnErrorDeploymentPtrOutput
	ToOnErrorDeploymentPtrOutputWithContext(context.Context) OnErrorDeploymentPtrOutput
}

type onErrorDeploymentPtrType OnErrorDeploymentArgs

func OnErrorDeploymentPtr(v *OnErrorDeploymentArgs) OnErrorDeploymentPtrInput {
	return (*onErrorDeploymentPtrType)(v)
}

func (*onErrorDeploymentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnErrorDeployment)(nil)).Elem()
}

func (i *onErrorDeploymentPtrType) ToOnErrorDeploymentPtrOutput() OnErrorDeploymentPtrOutput {
	return i.ToOnErrorDeploymentPtrOutputWithContext(context.Background())
}

func (i *onErrorDeploymentPtrType) ToOnErrorDeploymentPtrOutputWithContext(ctx context.Context) OnErrorDeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnErrorDeploymentPtrOutput)
}

// Deployment on error behavior.
type OnErrorDeploymentOutput struct{ *pulumi.OutputState }

func (OnErrorDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnErrorDeployment)(nil)).Elem()
}

func (o OnErrorDeploymentOutput) ToOnErrorDeploymentOutput() OnErrorDeploymentOutput {
	return o
}

func (o OnErrorDeploymentOutput) ToOnErrorDeploymentOutputWithContext(ctx context.Context) OnErrorDeploymentOutput {
	return o
}

func (o OnErrorDeploymentOutput) ToOnErrorDeploymentPtrOutput() OnErrorDeploymentPtrOutput {
	return o.ToOnErrorDeploymentPtrOutputWithContext(context.Background())
}

func (o OnErrorDeploymentOutput) ToOnErrorDeploymentPtrOutputWithContext(ctx context.Context) OnErrorDeploymentPtrOutput {
	return o.ApplyT(func(v OnErrorDeployment) *OnErrorDeployment {
		return &v
	}).(OnErrorDeploymentPtrOutput)
}

// The deployment to be used on error case.
func (o OnErrorDeploymentOutput) DeploymentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnErrorDeployment) *string { return v.DeploymentName }).(pulumi.StringPtrOutput)
}

// The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
func (o OnErrorDeploymentOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnErrorDeployment) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type OnErrorDeploymentPtrOutput struct{ *pulumi.OutputState }

func (OnErrorDeploymentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnErrorDeployment)(nil)).Elem()
}

func (o OnErrorDeploymentPtrOutput) ToOnErrorDeploymentPtrOutput() OnErrorDeploymentPtrOutput {
	return o
}

func (o OnErrorDeploymentPtrOutput) ToOnErrorDeploymentPtrOutputWithContext(ctx context.Context) OnErrorDeploymentPtrOutput {
	return o
}

func (o OnErrorDeploymentPtrOutput) Elem() OnErrorDeploymentOutput {
	return o.ApplyT(func(v *OnErrorDeployment) OnErrorDeployment { return *v }).(OnErrorDeploymentOutput)
}

// The deployment to be used on error case.
func (o OnErrorDeploymentPtrOutput) DeploymentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnErrorDeployment) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentName
	}).(pulumi.StringPtrOutput)
}

// The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
func (o OnErrorDeploymentPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnErrorDeployment) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Deployment on error behavior with additional details.
type OnErrorDeploymentExtendedResponse struct {
	// The deployment to be used on error case.
	DeploymentName *string `pulumi:"deploymentName"`
	// The state of the provisioning for the on error deployment.
	ProvisioningState string `pulumi:"provisioningState"`
	// The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
	Type *string `pulumi:"type"`
}

// OnErrorDeploymentExtendedResponseInput is an input type that accepts OnErrorDeploymentExtendedResponseArgs and OnErrorDeploymentExtendedResponseOutput values.
// You can construct a concrete instance of `OnErrorDeploymentExtendedResponseInput` via:
//
//          OnErrorDeploymentExtendedResponseArgs{...}
type OnErrorDeploymentExtendedResponseInput interface {
	pulumi.Input

	ToOnErrorDeploymentExtendedResponseOutput() OnErrorDeploymentExtendedResponseOutput
	ToOnErrorDeploymentExtendedResponseOutputWithContext(context.Context) OnErrorDeploymentExtendedResponseOutput
}

// Deployment on error behavior with additional details.
type OnErrorDeploymentExtendedResponseArgs struct {
	// The deployment to be used on error case.
	DeploymentName pulumi.StringPtrInput `pulumi:"deploymentName"`
	// The state of the provisioning for the on error deployment.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (OnErrorDeploymentExtendedResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnErrorDeploymentExtendedResponse)(nil)).Elem()
}

func (i OnErrorDeploymentExtendedResponseArgs) ToOnErrorDeploymentExtendedResponseOutput() OnErrorDeploymentExtendedResponseOutput {
	return i.ToOnErrorDeploymentExtendedResponseOutputWithContext(context.Background())
}

func (i OnErrorDeploymentExtendedResponseArgs) ToOnErrorDeploymentExtendedResponseOutputWithContext(ctx context.Context) OnErrorDeploymentExtendedResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnErrorDeploymentExtendedResponseOutput)
}

func (i OnErrorDeploymentExtendedResponseArgs) ToOnErrorDeploymentExtendedResponsePtrOutput() OnErrorDeploymentExtendedResponsePtrOutput {
	return i.ToOnErrorDeploymentExtendedResponsePtrOutputWithContext(context.Background())
}

func (i OnErrorDeploymentExtendedResponseArgs) ToOnErrorDeploymentExtendedResponsePtrOutputWithContext(ctx context.Context) OnErrorDeploymentExtendedResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnErrorDeploymentExtendedResponseOutput).ToOnErrorDeploymentExtendedResponsePtrOutputWithContext(ctx)
}

// OnErrorDeploymentExtendedResponsePtrInput is an input type that accepts OnErrorDeploymentExtendedResponseArgs, OnErrorDeploymentExtendedResponsePtr and OnErrorDeploymentExtendedResponsePtrOutput values.
// You can construct a concrete instance of `OnErrorDeploymentExtendedResponsePtrInput` via:
//
//          OnErrorDeploymentExtendedResponseArgs{...}
//
//  or:
//
//          nil
type OnErrorDeploymentExtendedResponsePtrInput interface {
	pulumi.Input

	ToOnErrorDeploymentExtendedResponsePtrOutput() OnErrorDeploymentExtendedResponsePtrOutput
	ToOnErrorDeploymentExtendedResponsePtrOutputWithContext(context.Context) OnErrorDeploymentExtendedResponsePtrOutput
}

type onErrorDeploymentExtendedResponsePtrType OnErrorDeploymentExtendedResponseArgs

func OnErrorDeploymentExtendedResponsePtr(v *OnErrorDeploymentExtendedResponseArgs) OnErrorDeploymentExtendedResponsePtrInput {
	return (*onErrorDeploymentExtendedResponsePtrType)(v)
}

func (*onErrorDeploymentExtendedResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnErrorDeploymentExtendedResponse)(nil)).Elem()
}

func (i *onErrorDeploymentExtendedResponsePtrType) ToOnErrorDeploymentExtendedResponsePtrOutput() OnErrorDeploymentExtendedResponsePtrOutput {
	return i.ToOnErrorDeploymentExtendedResponsePtrOutputWithContext(context.Background())
}

func (i *onErrorDeploymentExtendedResponsePtrType) ToOnErrorDeploymentExtendedResponsePtrOutputWithContext(ctx context.Context) OnErrorDeploymentExtendedResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnErrorDeploymentExtendedResponsePtrOutput)
}

// Deployment on error behavior with additional details.
type OnErrorDeploymentExtendedResponseOutput struct{ *pulumi.OutputState }

func (OnErrorDeploymentExtendedResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnErrorDeploymentExtendedResponse)(nil)).Elem()
}

func (o OnErrorDeploymentExtendedResponseOutput) ToOnErrorDeploymentExtendedResponseOutput() OnErrorDeploymentExtendedResponseOutput {
	return o
}

func (o OnErrorDeploymentExtendedResponseOutput) ToOnErrorDeploymentExtendedResponseOutputWithContext(ctx context.Context) OnErrorDeploymentExtendedResponseOutput {
	return o
}

func (o OnErrorDeploymentExtendedResponseOutput) ToOnErrorDeploymentExtendedResponsePtrOutput() OnErrorDeploymentExtendedResponsePtrOutput {
	return o.ToOnErrorDeploymentExtendedResponsePtrOutputWithContext(context.Background())
}

func (o OnErrorDeploymentExtendedResponseOutput) ToOnErrorDeploymentExtendedResponsePtrOutputWithContext(ctx context.Context) OnErrorDeploymentExtendedResponsePtrOutput {
	return o.ApplyT(func(v OnErrorDeploymentExtendedResponse) *OnErrorDeploymentExtendedResponse {
		return &v
	}).(OnErrorDeploymentExtendedResponsePtrOutput)
}

// The deployment to be used on error case.
func (o OnErrorDeploymentExtendedResponseOutput) DeploymentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnErrorDeploymentExtendedResponse) *string { return v.DeploymentName }).(pulumi.StringPtrOutput)
}

// The state of the provisioning for the on error deployment.
func (o OnErrorDeploymentExtendedResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v OnErrorDeploymentExtendedResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
func (o OnErrorDeploymentExtendedResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnErrorDeploymentExtendedResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type OnErrorDeploymentExtendedResponsePtrOutput struct{ *pulumi.OutputState }

func (OnErrorDeploymentExtendedResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnErrorDeploymentExtendedResponse)(nil)).Elem()
}

func (o OnErrorDeploymentExtendedResponsePtrOutput) ToOnErrorDeploymentExtendedResponsePtrOutput() OnErrorDeploymentExtendedResponsePtrOutput {
	return o
}

func (o OnErrorDeploymentExtendedResponsePtrOutput) ToOnErrorDeploymentExtendedResponsePtrOutputWithContext(ctx context.Context) OnErrorDeploymentExtendedResponsePtrOutput {
	return o
}

func (o OnErrorDeploymentExtendedResponsePtrOutput) Elem() OnErrorDeploymentExtendedResponseOutput {
	return o.ApplyT(func(v *OnErrorDeploymentExtendedResponse) OnErrorDeploymentExtendedResponse { return *v }).(OnErrorDeploymentExtendedResponseOutput)
}

// The deployment to be used on error case.
func (o OnErrorDeploymentExtendedResponsePtrOutput) DeploymentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnErrorDeploymentExtendedResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentName
	}).(pulumi.StringPtrOutput)
}

// The state of the provisioning for the on error deployment.
func (o OnErrorDeploymentExtendedResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnErrorDeploymentExtendedResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
func (o OnErrorDeploymentExtendedResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnErrorDeploymentExtendedResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The definition of a parameter that can be provided to the policy.
type ParameterDefinitionsValue struct {
	// The allowed values for the parameter.
	AllowedValues []interface{} `pulumi:"allowedValues"`
	// The default value for the parameter if no value is provided.
	DefaultValue interface{} `pulumi:"defaultValue"`
	// General metadata for the parameter.
	Metadata *ParameterDefinitionsValueMetadata `pulumi:"metadata"`
	// The data type of the parameter.
	Type *string `pulumi:"type"`
}

// ParameterDefinitionsValueInput is an input type that accepts ParameterDefinitionsValueArgs and ParameterDefinitionsValueOutput values.
// You can construct a concrete instance of `ParameterDefinitionsValueInput` via:
//
//          ParameterDefinitionsValueArgs{...}
type ParameterDefinitionsValueInput interface {
	pulumi.Input

	ToParameterDefinitionsValueOutput() ParameterDefinitionsValueOutput
	ToParameterDefinitionsValueOutputWithContext(context.Context) ParameterDefinitionsValueOutput
}

// The definition of a parameter that can be provided to the policy.
type ParameterDefinitionsValueArgs struct {
	// The allowed values for the parameter.
	AllowedValues pulumi.ArrayInput `pulumi:"allowedValues"`
	// The default value for the parameter if no value is provided.
	DefaultValue pulumi.Input `pulumi:"defaultValue"`
	// General metadata for the parameter.
	Metadata ParameterDefinitionsValueMetadataPtrInput `pulumi:"metadata"`
	// The data type of the parameter.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ParameterDefinitionsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterDefinitionsValue)(nil)).Elem()
}

func (i ParameterDefinitionsValueArgs) ToParameterDefinitionsValueOutput() ParameterDefinitionsValueOutput {
	return i.ToParameterDefinitionsValueOutputWithContext(context.Background())
}

func (i ParameterDefinitionsValueArgs) ToParameterDefinitionsValueOutputWithContext(ctx context.Context) ParameterDefinitionsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueOutput)
}

// ParameterDefinitionsValueMapInput is an input type that accepts ParameterDefinitionsValueMap and ParameterDefinitionsValueMapOutput values.
// You can construct a concrete instance of `ParameterDefinitionsValueMapInput` via:
//
//          ParameterDefinitionsValueMap{ "key": ParameterDefinitionsValueArgs{...} }
type ParameterDefinitionsValueMapInput interface {
	pulumi.Input

	ToParameterDefinitionsValueMapOutput() ParameterDefinitionsValueMapOutput
	ToParameterDefinitionsValueMapOutputWithContext(context.Context) ParameterDefinitionsValueMapOutput
}

type ParameterDefinitionsValueMap map[string]ParameterDefinitionsValueInput

func (ParameterDefinitionsValueMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterDefinitionsValue)(nil)).Elem()
}

func (i ParameterDefinitionsValueMap) ToParameterDefinitionsValueMapOutput() ParameterDefinitionsValueMapOutput {
	return i.ToParameterDefinitionsValueMapOutputWithContext(context.Background())
}

func (i ParameterDefinitionsValueMap) ToParameterDefinitionsValueMapOutputWithContext(ctx context.Context) ParameterDefinitionsValueMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueMapOutput)
}

// The definition of a parameter that can be provided to the policy.
type ParameterDefinitionsValueOutput struct{ *pulumi.OutputState }

func (ParameterDefinitionsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterDefinitionsValue)(nil)).Elem()
}

func (o ParameterDefinitionsValueOutput) ToParameterDefinitionsValueOutput() ParameterDefinitionsValueOutput {
	return o
}

func (o ParameterDefinitionsValueOutput) ToParameterDefinitionsValueOutputWithContext(ctx context.Context) ParameterDefinitionsValueOutput {
	return o
}

// The allowed values for the parameter.
func (o ParameterDefinitionsValueOutput) AllowedValues() pulumi.ArrayOutput {
	return o.ApplyT(func(v ParameterDefinitionsValue) []interface{} { return v.AllowedValues }).(pulumi.ArrayOutput)
}

// The default value for the parameter if no value is provided.
func (o ParameterDefinitionsValueOutput) DefaultValue() pulumi.AnyOutput {
	return o.ApplyT(func(v ParameterDefinitionsValue) interface{} { return v.DefaultValue }).(pulumi.AnyOutput)
}

// General metadata for the parameter.
func (o ParameterDefinitionsValueOutput) Metadata() ParameterDefinitionsValueMetadataPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValue) *ParameterDefinitionsValueMetadata { return v.Metadata }).(ParameterDefinitionsValueMetadataPtrOutput)
}

// The data type of the parameter.
func (o ParameterDefinitionsValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ParameterDefinitionsValueMapOutput struct{ *pulumi.OutputState }

func (ParameterDefinitionsValueMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterDefinitionsValue)(nil)).Elem()
}

func (o ParameterDefinitionsValueMapOutput) ToParameterDefinitionsValueMapOutput() ParameterDefinitionsValueMapOutput {
	return o
}

func (o ParameterDefinitionsValueMapOutput) ToParameterDefinitionsValueMapOutputWithContext(ctx context.Context) ParameterDefinitionsValueMapOutput {
	return o
}

func (o ParameterDefinitionsValueMapOutput) MapIndex(k pulumi.StringInput) ParameterDefinitionsValueOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ParameterDefinitionsValue {
		return vs[0].(map[string]ParameterDefinitionsValue)[vs[1].(string)]
	}).(ParameterDefinitionsValueOutput)
}

// General metadata for the parameter.
type ParameterDefinitionsValueMetadata struct {
	// The description of the parameter.
	Description *string `pulumi:"description"`
	// The display name for the parameter.
	DisplayName *string `pulumi:"displayName"`
}

// ParameterDefinitionsValueMetadataInput is an input type that accepts ParameterDefinitionsValueMetadataArgs and ParameterDefinitionsValueMetadataOutput values.
// You can construct a concrete instance of `ParameterDefinitionsValueMetadataInput` via:
//
//          ParameterDefinitionsValueMetadataArgs{...}
type ParameterDefinitionsValueMetadataInput interface {
	pulumi.Input

	ToParameterDefinitionsValueMetadataOutput() ParameterDefinitionsValueMetadataOutput
	ToParameterDefinitionsValueMetadataOutputWithContext(context.Context) ParameterDefinitionsValueMetadataOutput
}

// General metadata for the parameter.
type ParameterDefinitionsValueMetadataArgs struct {
	// The description of the parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The display name for the parameter.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
}

func (ParameterDefinitionsValueMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterDefinitionsValueMetadata)(nil)).Elem()
}

func (i ParameterDefinitionsValueMetadataArgs) ToParameterDefinitionsValueMetadataOutput() ParameterDefinitionsValueMetadataOutput {
	return i.ToParameterDefinitionsValueMetadataOutputWithContext(context.Background())
}

func (i ParameterDefinitionsValueMetadataArgs) ToParameterDefinitionsValueMetadataOutputWithContext(ctx context.Context) ParameterDefinitionsValueMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueMetadataOutput)
}

func (i ParameterDefinitionsValueMetadataArgs) ToParameterDefinitionsValueMetadataPtrOutput() ParameterDefinitionsValueMetadataPtrOutput {
	return i.ToParameterDefinitionsValueMetadataPtrOutputWithContext(context.Background())
}

func (i ParameterDefinitionsValueMetadataArgs) ToParameterDefinitionsValueMetadataPtrOutputWithContext(ctx context.Context) ParameterDefinitionsValueMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueMetadataOutput).ToParameterDefinitionsValueMetadataPtrOutputWithContext(ctx)
}

// ParameterDefinitionsValueMetadataPtrInput is an input type that accepts ParameterDefinitionsValueMetadataArgs, ParameterDefinitionsValueMetadataPtr and ParameterDefinitionsValueMetadataPtrOutput values.
// You can construct a concrete instance of `ParameterDefinitionsValueMetadataPtrInput` via:
//
//          ParameterDefinitionsValueMetadataArgs{...}
//
//  or:
//
//          nil
type ParameterDefinitionsValueMetadataPtrInput interface {
	pulumi.Input

	ToParameterDefinitionsValueMetadataPtrOutput() ParameterDefinitionsValueMetadataPtrOutput
	ToParameterDefinitionsValueMetadataPtrOutputWithContext(context.Context) ParameterDefinitionsValueMetadataPtrOutput
}

type parameterDefinitionsValueMetadataPtrType ParameterDefinitionsValueMetadataArgs

func ParameterDefinitionsValueMetadataPtr(v *ParameterDefinitionsValueMetadataArgs) ParameterDefinitionsValueMetadataPtrInput {
	return (*parameterDefinitionsValueMetadataPtrType)(v)
}

func (*parameterDefinitionsValueMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterDefinitionsValueMetadata)(nil)).Elem()
}

func (i *parameterDefinitionsValueMetadataPtrType) ToParameterDefinitionsValueMetadataPtrOutput() ParameterDefinitionsValueMetadataPtrOutput {
	return i.ToParameterDefinitionsValueMetadataPtrOutputWithContext(context.Background())
}

func (i *parameterDefinitionsValueMetadataPtrType) ToParameterDefinitionsValueMetadataPtrOutputWithContext(ctx context.Context) ParameterDefinitionsValueMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueMetadataPtrOutput)
}

// General metadata for the parameter.
type ParameterDefinitionsValueMetadataOutput struct{ *pulumi.OutputState }

func (ParameterDefinitionsValueMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterDefinitionsValueMetadata)(nil)).Elem()
}

func (o ParameterDefinitionsValueMetadataOutput) ToParameterDefinitionsValueMetadataOutput() ParameterDefinitionsValueMetadataOutput {
	return o
}

func (o ParameterDefinitionsValueMetadataOutput) ToParameterDefinitionsValueMetadataOutputWithContext(ctx context.Context) ParameterDefinitionsValueMetadataOutput {
	return o
}

func (o ParameterDefinitionsValueMetadataOutput) ToParameterDefinitionsValueMetadataPtrOutput() ParameterDefinitionsValueMetadataPtrOutput {
	return o.ToParameterDefinitionsValueMetadataPtrOutputWithContext(context.Background())
}

func (o ParameterDefinitionsValueMetadataOutput) ToParameterDefinitionsValueMetadataPtrOutputWithContext(ctx context.Context) ParameterDefinitionsValueMetadataPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueMetadata) *ParameterDefinitionsValueMetadata {
		return &v
	}).(ParameterDefinitionsValueMetadataPtrOutput)
}

// The description of the parameter.
func (o ParameterDefinitionsValueMetadataOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueMetadata) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name for the parameter.
func (o ParameterDefinitionsValueMetadataOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueMetadata) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

type ParameterDefinitionsValueMetadataPtrOutput struct{ *pulumi.OutputState }

func (ParameterDefinitionsValueMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterDefinitionsValueMetadata)(nil)).Elem()
}

func (o ParameterDefinitionsValueMetadataPtrOutput) ToParameterDefinitionsValueMetadataPtrOutput() ParameterDefinitionsValueMetadataPtrOutput {
	return o
}

func (o ParameterDefinitionsValueMetadataPtrOutput) ToParameterDefinitionsValueMetadataPtrOutputWithContext(ctx context.Context) ParameterDefinitionsValueMetadataPtrOutput {
	return o
}

func (o ParameterDefinitionsValueMetadataPtrOutput) Elem() ParameterDefinitionsValueMetadataOutput {
	return o.ApplyT(func(v *ParameterDefinitionsValueMetadata) ParameterDefinitionsValueMetadata { return *v }).(ParameterDefinitionsValueMetadataOutput)
}

// The description of the parameter.
func (o ParameterDefinitionsValueMetadataPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParameterDefinitionsValueMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The display name for the parameter.
func (o ParameterDefinitionsValueMetadataPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParameterDefinitionsValueMetadata) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The definition of a parameter that can be provided to the policy.
type ParameterDefinitionsValueResponse struct {
	// The allowed values for the parameter.
	AllowedValues []interface{} `pulumi:"allowedValues"`
	// The default value for the parameter if no value is provided.
	DefaultValue interface{} `pulumi:"defaultValue"`
	// General metadata for the parameter.
	Metadata *ParameterDefinitionsValueResponseMetadata `pulumi:"metadata"`
	// The data type of the parameter.
	Type *string `pulumi:"type"`
}

// ParameterDefinitionsValueResponseInput is an input type that accepts ParameterDefinitionsValueResponseArgs and ParameterDefinitionsValueResponseOutput values.
// You can construct a concrete instance of `ParameterDefinitionsValueResponseInput` via:
//
//          ParameterDefinitionsValueResponseArgs{...}
type ParameterDefinitionsValueResponseInput interface {
	pulumi.Input

	ToParameterDefinitionsValueResponseOutput() ParameterDefinitionsValueResponseOutput
	ToParameterDefinitionsValueResponseOutputWithContext(context.Context) ParameterDefinitionsValueResponseOutput
}

// The definition of a parameter that can be provided to the policy.
type ParameterDefinitionsValueResponseArgs struct {
	// The allowed values for the parameter.
	AllowedValues pulumi.ArrayInput `pulumi:"allowedValues"`
	// The default value for the parameter if no value is provided.
	DefaultValue pulumi.Input `pulumi:"defaultValue"`
	// General metadata for the parameter.
	Metadata ParameterDefinitionsValueResponseMetadataPtrInput `pulumi:"metadata"`
	// The data type of the parameter.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ParameterDefinitionsValueResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterDefinitionsValueResponse)(nil)).Elem()
}

func (i ParameterDefinitionsValueResponseArgs) ToParameterDefinitionsValueResponseOutput() ParameterDefinitionsValueResponseOutput {
	return i.ToParameterDefinitionsValueResponseOutputWithContext(context.Background())
}

func (i ParameterDefinitionsValueResponseArgs) ToParameterDefinitionsValueResponseOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueResponseOutput)
}

// ParameterDefinitionsValueResponseMapInput is an input type that accepts ParameterDefinitionsValueResponseMap and ParameterDefinitionsValueResponseMapOutput values.
// You can construct a concrete instance of `ParameterDefinitionsValueResponseMapInput` via:
//
//          ParameterDefinitionsValueResponseMap{ "key": ParameterDefinitionsValueResponseArgs{...} }
type ParameterDefinitionsValueResponseMapInput interface {
	pulumi.Input

	ToParameterDefinitionsValueResponseMapOutput() ParameterDefinitionsValueResponseMapOutput
	ToParameterDefinitionsValueResponseMapOutputWithContext(context.Context) ParameterDefinitionsValueResponseMapOutput
}

type ParameterDefinitionsValueResponseMap map[string]ParameterDefinitionsValueResponseInput

func (ParameterDefinitionsValueResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterDefinitionsValueResponse)(nil)).Elem()
}

func (i ParameterDefinitionsValueResponseMap) ToParameterDefinitionsValueResponseMapOutput() ParameterDefinitionsValueResponseMapOutput {
	return i.ToParameterDefinitionsValueResponseMapOutputWithContext(context.Background())
}

func (i ParameterDefinitionsValueResponseMap) ToParameterDefinitionsValueResponseMapOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueResponseMapOutput)
}

// The definition of a parameter that can be provided to the policy.
type ParameterDefinitionsValueResponseOutput struct{ *pulumi.OutputState }

func (ParameterDefinitionsValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterDefinitionsValueResponse)(nil)).Elem()
}

func (o ParameterDefinitionsValueResponseOutput) ToParameterDefinitionsValueResponseOutput() ParameterDefinitionsValueResponseOutput {
	return o
}

func (o ParameterDefinitionsValueResponseOutput) ToParameterDefinitionsValueResponseOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseOutput {
	return o
}

// The allowed values for the parameter.
func (o ParameterDefinitionsValueResponseOutput) AllowedValues() pulumi.ArrayOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueResponse) []interface{} { return v.AllowedValues }).(pulumi.ArrayOutput)
}

// The default value for the parameter if no value is provided.
func (o ParameterDefinitionsValueResponseOutput) DefaultValue() pulumi.AnyOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueResponse) interface{} { return v.DefaultValue }).(pulumi.AnyOutput)
}

// General metadata for the parameter.
func (o ParameterDefinitionsValueResponseOutput) Metadata() ParameterDefinitionsValueResponseMetadataPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueResponse) *ParameterDefinitionsValueResponseMetadata {
		return v.Metadata
	}).(ParameterDefinitionsValueResponseMetadataPtrOutput)
}

// The data type of the parameter.
func (o ParameterDefinitionsValueResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ParameterDefinitionsValueResponseMapOutput struct{ *pulumi.OutputState }

func (ParameterDefinitionsValueResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterDefinitionsValueResponse)(nil)).Elem()
}

func (o ParameterDefinitionsValueResponseMapOutput) ToParameterDefinitionsValueResponseMapOutput() ParameterDefinitionsValueResponseMapOutput {
	return o
}

func (o ParameterDefinitionsValueResponseMapOutput) ToParameterDefinitionsValueResponseMapOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseMapOutput {
	return o
}

func (o ParameterDefinitionsValueResponseMapOutput) MapIndex(k pulumi.StringInput) ParameterDefinitionsValueResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ParameterDefinitionsValueResponse {
		return vs[0].(map[string]ParameterDefinitionsValueResponse)[vs[1].(string)]
	}).(ParameterDefinitionsValueResponseOutput)
}

// General metadata for the parameter.
type ParameterDefinitionsValueResponseMetadata struct {
	// The description of the parameter.
	Description *string `pulumi:"description"`
	// The display name for the parameter.
	DisplayName *string `pulumi:"displayName"`
}

// ParameterDefinitionsValueResponseMetadataInput is an input type that accepts ParameterDefinitionsValueResponseMetadataArgs and ParameterDefinitionsValueResponseMetadataOutput values.
// You can construct a concrete instance of `ParameterDefinitionsValueResponseMetadataInput` via:
//
//          ParameterDefinitionsValueResponseMetadataArgs{...}
type ParameterDefinitionsValueResponseMetadataInput interface {
	pulumi.Input

	ToParameterDefinitionsValueResponseMetadataOutput() ParameterDefinitionsValueResponseMetadataOutput
	ToParameterDefinitionsValueResponseMetadataOutputWithContext(context.Context) ParameterDefinitionsValueResponseMetadataOutput
}

// General metadata for the parameter.
type ParameterDefinitionsValueResponseMetadataArgs struct {
	// The description of the parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The display name for the parameter.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
}

func (ParameterDefinitionsValueResponseMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterDefinitionsValueResponseMetadata)(nil)).Elem()
}

func (i ParameterDefinitionsValueResponseMetadataArgs) ToParameterDefinitionsValueResponseMetadataOutput() ParameterDefinitionsValueResponseMetadataOutput {
	return i.ToParameterDefinitionsValueResponseMetadataOutputWithContext(context.Background())
}

func (i ParameterDefinitionsValueResponseMetadataArgs) ToParameterDefinitionsValueResponseMetadataOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueResponseMetadataOutput)
}

func (i ParameterDefinitionsValueResponseMetadataArgs) ToParameterDefinitionsValueResponseMetadataPtrOutput() ParameterDefinitionsValueResponseMetadataPtrOutput {
	return i.ToParameterDefinitionsValueResponseMetadataPtrOutputWithContext(context.Background())
}

func (i ParameterDefinitionsValueResponseMetadataArgs) ToParameterDefinitionsValueResponseMetadataPtrOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueResponseMetadataOutput).ToParameterDefinitionsValueResponseMetadataPtrOutputWithContext(ctx)
}

// ParameterDefinitionsValueResponseMetadataPtrInput is an input type that accepts ParameterDefinitionsValueResponseMetadataArgs, ParameterDefinitionsValueResponseMetadataPtr and ParameterDefinitionsValueResponseMetadataPtrOutput values.
// You can construct a concrete instance of `ParameterDefinitionsValueResponseMetadataPtrInput` via:
//
//          ParameterDefinitionsValueResponseMetadataArgs{...}
//
//  or:
//
//          nil
type ParameterDefinitionsValueResponseMetadataPtrInput interface {
	pulumi.Input

	ToParameterDefinitionsValueResponseMetadataPtrOutput() ParameterDefinitionsValueResponseMetadataPtrOutput
	ToParameterDefinitionsValueResponseMetadataPtrOutputWithContext(context.Context) ParameterDefinitionsValueResponseMetadataPtrOutput
}

type parameterDefinitionsValueResponseMetadataPtrType ParameterDefinitionsValueResponseMetadataArgs

func ParameterDefinitionsValueResponseMetadataPtr(v *ParameterDefinitionsValueResponseMetadataArgs) ParameterDefinitionsValueResponseMetadataPtrInput {
	return (*parameterDefinitionsValueResponseMetadataPtrType)(v)
}

func (*parameterDefinitionsValueResponseMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterDefinitionsValueResponseMetadata)(nil)).Elem()
}

func (i *parameterDefinitionsValueResponseMetadataPtrType) ToParameterDefinitionsValueResponseMetadataPtrOutput() ParameterDefinitionsValueResponseMetadataPtrOutput {
	return i.ToParameterDefinitionsValueResponseMetadataPtrOutputWithContext(context.Background())
}

func (i *parameterDefinitionsValueResponseMetadataPtrType) ToParameterDefinitionsValueResponseMetadataPtrOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterDefinitionsValueResponseMetadataPtrOutput)
}

// General metadata for the parameter.
type ParameterDefinitionsValueResponseMetadataOutput struct{ *pulumi.OutputState }

func (ParameterDefinitionsValueResponseMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterDefinitionsValueResponseMetadata)(nil)).Elem()
}

func (o ParameterDefinitionsValueResponseMetadataOutput) ToParameterDefinitionsValueResponseMetadataOutput() ParameterDefinitionsValueResponseMetadataOutput {
	return o
}

func (o ParameterDefinitionsValueResponseMetadataOutput) ToParameterDefinitionsValueResponseMetadataOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseMetadataOutput {
	return o
}

func (o ParameterDefinitionsValueResponseMetadataOutput) ToParameterDefinitionsValueResponseMetadataPtrOutput() ParameterDefinitionsValueResponseMetadataPtrOutput {
	return o.ToParameterDefinitionsValueResponseMetadataPtrOutputWithContext(context.Background())
}

func (o ParameterDefinitionsValueResponseMetadataOutput) ToParameterDefinitionsValueResponseMetadataPtrOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseMetadataPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueResponseMetadata) *ParameterDefinitionsValueResponseMetadata {
		return &v
	}).(ParameterDefinitionsValueResponseMetadataPtrOutput)
}

// The description of the parameter.
func (o ParameterDefinitionsValueResponseMetadataOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueResponseMetadata) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name for the parameter.
func (o ParameterDefinitionsValueResponseMetadataOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterDefinitionsValueResponseMetadata) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

type ParameterDefinitionsValueResponseMetadataPtrOutput struct{ *pulumi.OutputState }

func (ParameterDefinitionsValueResponseMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterDefinitionsValueResponseMetadata)(nil)).Elem()
}

func (o ParameterDefinitionsValueResponseMetadataPtrOutput) ToParameterDefinitionsValueResponseMetadataPtrOutput() ParameterDefinitionsValueResponseMetadataPtrOutput {
	return o
}

func (o ParameterDefinitionsValueResponseMetadataPtrOutput) ToParameterDefinitionsValueResponseMetadataPtrOutputWithContext(ctx context.Context) ParameterDefinitionsValueResponseMetadataPtrOutput {
	return o
}

func (o ParameterDefinitionsValueResponseMetadataPtrOutput) Elem() ParameterDefinitionsValueResponseMetadataOutput {
	return o.ApplyT(func(v *ParameterDefinitionsValueResponseMetadata) ParameterDefinitionsValueResponseMetadata {
		return *v
	}).(ParameterDefinitionsValueResponseMetadataOutput)
}

// The description of the parameter.
func (o ParameterDefinitionsValueResponseMetadataPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParameterDefinitionsValueResponseMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The display name for the parameter.
func (o ParameterDefinitionsValueResponseMetadataPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParameterDefinitionsValueResponseMetadata) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The value of a parameter.
type ParameterValuesValue struct {
	// The value of the parameter.
	Value interface{} `pulumi:"value"`
}

// ParameterValuesValueInput is an input type that accepts ParameterValuesValueArgs and ParameterValuesValueOutput values.
// You can construct a concrete instance of `ParameterValuesValueInput` via:
//
//          ParameterValuesValueArgs{...}
type ParameterValuesValueInput interface {
	pulumi.Input

	ToParameterValuesValueOutput() ParameterValuesValueOutput
	ToParameterValuesValueOutputWithContext(context.Context) ParameterValuesValueOutput
}

// The value of a parameter.
type ParameterValuesValueArgs struct {
	// The value of the parameter.
	Value pulumi.Input `pulumi:"value"`
}

func (ParameterValuesValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterValuesValue)(nil)).Elem()
}

func (i ParameterValuesValueArgs) ToParameterValuesValueOutput() ParameterValuesValueOutput {
	return i.ToParameterValuesValueOutputWithContext(context.Background())
}

func (i ParameterValuesValueArgs) ToParameterValuesValueOutputWithContext(ctx context.Context) ParameterValuesValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterValuesValueOutput)
}

// ParameterValuesValueMapInput is an input type that accepts ParameterValuesValueMap and ParameterValuesValueMapOutput values.
// You can construct a concrete instance of `ParameterValuesValueMapInput` via:
//
//          ParameterValuesValueMap{ "key": ParameterValuesValueArgs{...} }
type ParameterValuesValueMapInput interface {
	pulumi.Input

	ToParameterValuesValueMapOutput() ParameterValuesValueMapOutput
	ToParameterValuesValueMapOutputWithContext(context.Context) ParameterValuesValueMapOutput
}

type ParameterValuesValueMap map[string]ParameterValuesValueInput

func (ParameterValuesValueMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterValuesValue)(nil)).Elem()
}

func (i ParameterValuesValueMap) ToParameterValuesValueMapOutput() ParameterValuesValueMapOutput {
	return i.ToParameterValuesValueMapOutputWithContext(context.Background())
}

func (i ParameterValuesValueMap) ToParameterValuesValueMapOutputWithContext(ctx context.Context) ParameterValuesValueMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterValuesValueMapOutput)
}

// The value of a parameter.
type ParameterValuesValueOutput struct{ *pulumi.OutputState }

func (ParameterValuesValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterValuesValue)(nil)).Elem()
}

func (o ParameterValuesValueOutput) ToParameterValuesValueOutput() ParameterValuesValueOutput {
	return o
}

func (o ParameterValuesValueOutput) ToParameterValuesValueOutputWithContext(ctx context.Context) ParameterValuesValueOutput {
	return o
}

// The value of the parameter.
func (o ParameterValuesValueOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v ParameterValuesValue) interface{} { return v.Value }).(pulumi.AnyOutput)
}

type ParameterValuesValueMapOutput struct{ *pulumi.OutputState }

func (ParameterValuesValueMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterValuesValue)(nil)).Elem()
}

func (o ParameterValuesValueMapOutput) ToParameterValuesValueMapOutput() ParameterValuesValueMapOutput {
	return o
}

func (o ParameterValuesValueMapOutput) ToParameterValuesValueMapOutputWithContext(ctx context.Context) ParameterValuesValueMapOutput {
	return o
}

func (o ParameterValuesValueMapOutput) MapIndex(k pulumi.StringInput) ParameterValuesValueOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ParameterValuesValue {
		return vs[0].(map[string]ParameterValuesValue)[vs[1].(string)]
	}).(ParameterValuesValueOutput)
}

// The value of a parameter.
type ParameterValuesValueResponse struct {
	// The value of the parameter.
	Value interface{} `pulumi:"value"`
}

// ParameterValuesValueResponseInput is an input type that accepts ParameterValuesValueResponseArgs and ParameterValuesValueResponseOutput values.
// You can construct a concrete instance of `ParameterValuesValueResponseInput` via:
//
//          ParameterValuesValueResponseArgs{...}
type ParameterValuesValueResponseInput interface {
	pulumi.Input

	ToParameterValuesValueResponseOutput() ParameterValuesValueResponseOutput
	ToParameterValuesValueResponseOutputWithContext(context.Context) ParameterValuesValueResponseOutput
}

// The value of a parameter.
type ParameterValuesValueResponseArgs struct {
	// The value of the parameter.
	Value pulumi.Input `pulumi:"value"`
}

func (ParameterValuesValueResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterValuesValueResponse)(nil)).Elem()
}

func (i ParameterValuesValueResponseArgs) ToParameterValuesValueResponseOutput() ParameterValuesValueResponseOutput {
	return i.ToParameterValuesValueResponseOutputWithContext(context.Background())
}

func (i ParameterValuesValueResponseArgs) ToParameterValuesValueResponseOutputWithContext(ctx context.Context) ParameterValuesValueResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterValuesValueResponseOutput)
}

// ParameterValuesValueResponseMapInput is an input type that accepts ParameterValuesValueResponseMap and ParameterValuesValueResponseMapOutput values.
// You can construct a concrete instance of `ParameterValuesValueResponseMapInput` via:
//
//          ParameterValuesValueResponseMap{ "key": ParameterValuesValueResponseArgs{...} }
type ParameterValuesValueResponseMapInput interface {
	pulumi.Input

	ToParameterValuesValueResponseMapOutput() ParameterValuesValueResponseMapOutput
	ToParameterValuesValueResponseMapOutputWithContext(context.Context) ParameterValuesValueResponseMapOutput
}

type ParameterValuesValueResponseMap map[string]ParameterValuesValueResponseInput

func (ParameterValuesValueResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterValuesValueResponse)(nil)).Elem()
}

func (i ParameterValuesValueResponseMap) ToParameterValuesValueResponseMapOutput() ParameterValuesValueResponseMapOutput {
	return i.ToParameterValuesValueResponseMapOutputWithContext(context.Background())
}

func (i ParameterValuesValueResponseMap) ToParameterValuesValueResponseMapOutputWithContext(ctx context.Context) ParameterValuesValueResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterValuesValueResponseMapOutput)
}

// The value of a parameter.
type ParameterValuesValueResponseOutput struct{ *pulumi.OutputState }

func (ParameterValuesValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterValuesValueResponse)(nil)).Elem()
}

func (o ParameterValuesValueResponseOutput) ToParameterValuesValueResponseOutput() ParameterValuesValueResponseOutput {
	return o
}

func (o ParameterValuesValueResponseOutput) ToParameterValuesValueResponseOutputWithContext(ctx context.Context) ParameterValuesValueResponseOutput {
	return o
}

// The value of the parameter.
func (o ParameterValuesValueResponseOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v ParameterValuesValueResponse) interface{} { return v.Value }).(pulumi.AnyOutput)
}

type ParameterValuesValueResponseMapOutput struct{ *pulumi.OutputState }

func (ParameterValuesValueResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ParameterValuesValueResponse)(nil)).Elem()
}

func (o ParameterValuesValueResponseMapOutput) ToParameterValuesValueResponseMapOutput() ParameterValuesValueResponseMapOutput {
	return o
}

func (o ParameterValuesValueResponseMapOutput) ToParameterValuesValueResponseMapOutputWithContext(ctx context.Context) ParameterValuesValueResponseMapOutput {
	return o
}

func (o ParameterValuesValueResponseMapOutput) MapIndex(k pulumi.StringInput) ParameterValuesValueResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ParameterValuesValueResponse {
		return vs[0].(map[string]ParameterValuesValueResponse)[vs[1].(string)]
	}).(ParameterValuesValueResponseOutput)
}

// Entity representing the reference to the deployment parameters.
type ParametersLink struct {
	// If included, must match the ContentVersion in the template.
	ContentVersion *string `pulumi:"contentVersion"`
	// The URI of the parameters file.
	Uri string `pulumi:"uri"`
}

// ParametersLinkInput is an input type that accepts ParametersLinkArgs and ParametersLinkOutput values.
// You can construct a concrete instance of `ParametersLinkInput` via:
//
//          ParametersLinkArgs{...}
type ParametersLinkInput interface {
	pulumi.Input

	ToParametersLinkOutput() ParametersLinkOutput
	ToParametersLinkOutputWithContext(context.Context) ParametersLinkOutput
}

// Entity representing the reference to the deployment parameters.
type ParametersLinkArgs struct {
	// If included, must match the ContentVersion in the template.
	ContentVersion pulumi.StringPtrInput `pulumi:"contentVersion"`
	// The URI of the parameters file.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (ParametersLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParametersLink)(nil)).Elem()
}

func (i ParametersLinkArgs) ToParametersLinkOutput() ParametersLinkOutput {
	return i.ToParametersLinkOutputWithContext(context.Background())
}

func (i ParametersLinkArgs) ToParametersLinkOutputWithContext(ctx context.Context) ParametersLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParametersLinkOutput)
}

func (i ParametersLinkArgs) ToParametersLinkPtrOutput() ParametersLinkPtrOutput {
	return i.ToParametersLinkPtrOutputWithContext(context.Background())
}

func (i ParametersLinkArgs) ToParametersLinkPtrOutputWithContext(ctx context.Context) ParametersLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParametersLinkOutput).ToParametersLinkPtrOutputWithContext(ctx)
}

// ParametersLinkPtrInput is an input type that accepts ParametersLinkArgs, ParametersLinkPtr and ParametersLinkPtrOutput values.
// You can construct a concrete instance of `ParametersLinkPtrInput` via:
//
//          ParametersLinkArgs{...}
//
//  or:
//
//          nil
type ParametersLinkPtrInput interface {
	pulumi.Input

	ToParametersLinkPtrOutput() ParametersLinkPtrOutput
	ToParametersLinkPtrOutputWithContext(context.Context) ParametersLinkPtrOutput
}

type parametersLinkPtrType ParametersLinkArgs

func ParametersLinkPtr(v *ParametersLinkArgs) ParametersLinkPtrInput {
	return (*parametersLinkPtrType)(v)
}

func (*parametersLinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ParametersLink)(nil)).Elem()
}

func (i *parametersLinkPtrType) ToParametersLinkPtrOutput() ParametersLinkPtrOutput {
	return i.ToParametersLinkPtrOutputWithContext(context.Background())
}

func (i *parametersLinkPtrType) ToParametersLinkPtrOutputWithContext(ctx context.Context) ParametersLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParametersLinkPtrOutput)
}

// Entity representing the reference to the deployment parameters.
type ParametersLinkOutput struct{ *pulumi.OutputState }

func (ParametersLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParametersLink)(nil)).Elem()
}

func (o ParametersLinkOutput) ToParametersLinkOutput() ParametersLinkOutput {
	return o
}

func (o ParametersLinkOutput) ToParametersLinkOutputWithContext(ctx context.Context) ParametersLinkOutput {
	return o
}

func (o ParametersLinkOutput) ToParametersLinkPtrOutput() ParametersLinkPtrOutput {
	return o.ToParametersLinkPtrOutputWithContext(context.Background())
}

func (o ParametersLinkOutput) ToParametersLinkPtrOutputWithContext(ctx context.Context) ParametersLinkPtrOutput {
	return o.ApplyT(func(v ParametersLink) *ParametersLink {
		return &v
	}).(ParametersLinkPtrOutput)
}

// If included, must match the ContentVersion in the template.
func (o ParametersLinkOutput) ContentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParametersLink) *string { return v.ContentVersion }).(pulumi.StringPtrOutput)
}

// The URI of the parameters file.
func (o ParametersLinkOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ParametersLink) string { return v.Uri }).(pulumi.StringOutput)
}

type ParametersLinkPtrOutput struct{ *pulumi.OutputState }

func (ParametersLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParametersLink)(nil)).Elem()
}

func (o ParametersLinkPtrOutput) ToParametersLinkPtrOutput() ParametersLinkPtrOutput {
	return o
}

func (o ParametersLinkPtrOutput) ToParametersLinkPtrOutputWithContext(ctx context.Context) ParametersLinkPtrOutput {
	return o
}

func (o ParametersLinkPtrOutput) Elem() ParametersLinkOutput {
	return o.ApplyT(func(v *ParametersLink) ParametersLink { return *v }).(ParametersLinkOutput)
}

// If included, must match the ContentVersion in the template.
func (o ParametersLinkPtrOutput) ContentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParametersLink) *string {
		if v == nil {
			return nil
		}
		return v.ContentVersion
	}).(pulumi.StringPtrOutput)
}

// The URI of the parameters file.
func (o ParametersLinkPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParametersLink) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

// Entity representing the reference to the deployment parameters.
type ParametersLinkResponse struct {
	// If included, must match the ContentVersion in the template.
	ContentVersion *string `pulumi:"contentVersion"`
	// The URI of the parameters file.
	Uri string `pulumi:"uri"`
}

// ParametersLinkResponseInput is an input type that accepts ParametersLinkResponseArgs and ParametersLinkResponseOutput values.
// You can construct a concrete instance of `ParametersLinkResponseInput` via:
//
//          ParametersLinkResponseArgs{...}
type ParametersLinkResponseInput interface {
	pulumi.Input

	ToParametersLinkResponseOutput() ParametersLinkResponseOutput
	ToParametersLinkResponseOutputWithContext(context.Context) ParametersLinkResponseOutput
}

// Entity representing the reference to the deployment parameters.
type ParametersLinkResponseArgs struct {
	// If included, must match the ContentVersion in the template.
	ContentVersion pulumi.StringPtrInput `pulumi:"contentVersion"`
	// The URI of the parameters file.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (ParametersLinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParametersLinkResponse)(nil)).Elem()
}

func (i ParametersLinkResponseArgs) ToParametersLinkResponseOutput() ParametersLinkResponseOutput {
	return i.ToParametersLinkResponseOutputWithContext(context.Background())
}

func (i ParametersLinkResponseArgs) ToParametersLinkResponseOutputWithContext(ctx context.Context) ParametersLinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParametersLinkResponseOutput)
}

func (i ParametersLinkResponseArgs) ToParametersLinkResponsePtrOutput() ParametersLinkResponsePtrOutput {
	return i.ToParametersLinkResponsePtrOutputWithContext(context.Background())
}

func (i ParametersLinkResponseArgs) ToParametersLinkResponsePtrOutputWithContext(ctx context.Context) ParametersLinkResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParametersLinkResponseOutput).ToParametersLinkResponsePtrOutputWithContext(ctx)
}

// ParametersLinkResponsePtrInput is an input type that accepts ParametersLinkResponseArgs, ParametersLinkResponsePtr and ParametersLinkResponsePtrOutput values.
// You can construct a concrete instance of `ParametersLinkResponsePtrInput` via:
//
//          ParametersLinkResponseArgs{...}
//
//  or:
//
//          nil
type ParametersLinkResponsePtrInput interface {
	pulumi.Input

	ToParametersLinkResponsePtrOutput() ParametersLinkResponsePtrOutput
	ToParametersLinkResponsePtrOutputWithContext(context.Context) ParametersLinkResponsePtrOutput
}

type parametersLinkResponsePtrType ParametersLinkResponseArgs

func ParametersLinkResponsePtr(v *ParametersLinkResponseArgs) ParametersLinkResponsePtrInput {
	return (*parametersLinkResponsePtrType)(v)
}

func (*parametersLinkResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ParametersLinkResponse)(nil)).Elem()
}

func (i *parametersLinkResponsePtrType) ToParametersLinkResponsePtrOutput() ParametersLinkResponsePtrOutput {
	return i.ToParametersLinkResponsePtrOutputWithContext(context.Background())
}

func (i *parametersLinkResponsePtrType) ToParametersLinkResponsePtrOutputWithContext(ctx context.Context) ParametersLinkResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParametersLinkResponsePtrOutput)
}

// Entity representing the reference to the deployment parameters.
type ParametersLinkResponseOutput struct{ *pulumi.OutputState }

func (ParametersLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParametersLinkResponse)(nil)).Elem()
}

func (o ParametersLinkResponseOutput) ToParametersLinkResponseOutput() ParametersLinkResponseOutput {
	return o
}

func (o ParametersLinkResponseOutput) ToParametersLinkResponseOutputWithContext(ctx context.Context) ParametersLinkResponseOutput {
	return o
}

func (o ParametersLinkResponseOutput) ToParametersLinkResponsePtrOutput() ParametersLinkResponsePtrOutput {
	return o.ToParametersLinkResponsePtrOutputWithContext(context.Background())
}

func (o ParametersLinkResponseOutput) ToParametersLinkResponsePtrOutputWithContext(ctx context.Context) ParametersLinkResponsePtrOutput {
	return o.ApplyT(func(v ParametersLinkResponse) *ParametersLinkResponse {
		return &v
	}).(ParametersLinkResponsePtrOutput)
}

// If included, must match the ContentVersion in the template.
func (o ParametersLinkResponseOutput) ContentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParametersLinkResponse) *string { return v.ContentVersion }).(pulumi.StringPtrOutput)
}

// The URI of the parameters file.
func (o ParametersLinkResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ParametersLinkResponse) string { return v.Uri }).(pulumi.StringOutput)
}

type ParametersLinkResponsePtrOutput struct{ *pulumi.OutputState }

func (ParametersLinkResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParametersLinkResponse)(nil)).Elem()
}

func (o ParametersLinkResponsePtrOutput) ToParametersLinkResponsePtrOutput() ParametersLinkResponsePtrOutput {
	return o
}

func (o ParametersLinkResponsePtrOutput) ToParametersLinkResponsePtrOutputWithContext(ctx context.Context) ParametersLinkResponsePtrOutput {
	return o
}

func (o ParametersLinkResponsePtrOutput) Elem() ParametersLinkResponseOutput {
	return o.ApplyT(func(v *ParametersLinkResponse) ParametersLinkResponse { return *v }).(ParametersLinkResponseOutput)
}

// If included, must match the ContentVersion in the template.
func (o ParametersLinkResponsePtrOutput) ContentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParametersLinkResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContentVersion
	}).(pulumi.StringPtrOutput)
}

// The URI of the parameters file.
func (o ParametersLinkResponsePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParametersLinkResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

// (Optional) The ID of the parent management group.
type ParentGroupInfoResponse struct {
	// The friendly name of the parent management group.
	DisplayName *string `pulumi:"displayName"`
	// The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
	Id *string `pulumi:"id"`
	// The name of the parent management group
	Name *string `pulumi:"name"`
}

// ParentGroupInfoResponseInput is an input type that accepts ParentGroupInfoResponseArgs and ParentGroupInfoResponseOutput values.
// You can construct a concrete instance of `ParentGroupInfoResponseInput` via:
//
//          ParentGroupInfoResponseArgs{...}
type ParentGroupInfoResponseInput interface {
	pulumi.Input

	ToParentGroupInfoResponseOutput() ParentGroupInfoResponseOutput
	ToParentGroupInfoResponseOutputWithContext(context.Context) ParentGroupInfoResponseOutput
}

// (Optional) The ID of the parent management group.
type ParentGroupInfoResponseArgs struct {
	// The friendly name of the parent management group.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the parent management group
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ParentGroupInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParentGroupInfoResponse)(nil)).Elem()
}

func (i ParentGroupInfoResponseArgs) ToParentGroupInfoResponseOutput() ParentGroupInfoResponseOutput {
	return i.ToParentGroupInfoResponseOutputWithContext(context.Background())
}

func (i ParentGroupInfoResponseArgs) ToParentGroupInfoResponseOutputWithContext(ctx context.Context) ParentGroupInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParentGroupInfoResponseOutput)
}

func (i ParentGroupInfoResponseArgs) ToParentGroupInfoResponsePtrOutput() ParentGroupInfoResponsePtrOutput {
	return i.ToParentGroupInfoResponsePtrOutputWithContext(context.Background())
}

func (i ParentGroupInfoResponseArgs) ToParentGroupInfoResponsePtrOutputWithContext(ctx context.Context) ParentGroupInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParentGroupInfoResponseOutput).ToParentGroupInfoResponsePtrOutputWithContext(ctx)
}

// ParentGroupInfoResponsePtrInput is an input type that accepts ParentGroupInfoResponseArgs, ParentGroupInfoResponsePtr and ParentGroupInfoResponsePtrOutput values.
// You can construct a concrete instance of `ParentGroupInfoResponsePtrInput` via:
//
//          ParentGroupInfoResponseArgs{...}
//
//  or:
//
//          nil
type ParentGroupInfoResponsePtrInput interface {
	pulumi.Input

	ToParentGroupInfoResponsePtrOutput() ParentGroupInfoResponsePtrOutput
	ToParentGroupInfoResponsePtrOutputWithContext(context.Context) ParentGroupInfoResponsePtrOutput
}

type parentGroupInfoResponsePtrType ParentGroupInfoResponseArgs

func ParentGroupInfoResponsePtr(v *ParentGroupInfoResponseArgs) ParentGroupInfoResponsePtrInput {
	return (*parentGroupInfoResponsePtrType)(v)
}

func (*parentGroupInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ParentGroupInfoResponse)(nil)).Elem()
}

func (i *parentGroupInfoResponsePtrType) ToParentGroupInfoResponsePtrOutput() ParentGroupInfoResponsePtrOutput {
	return i.ToParentGroupInfoResponsePtrOutputWithContext(context.Background())
}

func (i *parentGroupInfoResponsePtrType) ToParentGroupInfoResponsePtrOutputWithContext(ctx context.Context) ParentGroupInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParentGroupInfoResponsePtrOutput)
}

// (Optional) The ID of the parent management group.
type ParentGroupInfoResponseOutput struct{ *pulumi.OutputState }

func (ParentGroupInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParentGroupInfoResponse)(nil)).Elem()
}

func (o ParentGroupInfoResponseOutput) ToParentGroupInfoResponseOutput() ParentGroupInfoResponseOutput {
	return o
}

func (o ParentGroupInfoResponseOutput) ToParentGroupInfoResponseOutputWithContext(ctx context.Context) ParentGroupInfoResponseOutput {
	return o
}

func (o ParentGroupInfoResponseOutput) ToParentGroupInfoResponsePtrOutput() ParentGroupInfoResponsePtrOutput {
	return o.ToParentGroupInfoResponsePtrOutputWithContext(context.Background())
}

func (o ParentGroupInfoResponseOutput) ToParentGroupInfoResponsePtrOutputWithContext(ctx context.Context) ParentGroupInfoResponsePtrOutput {
	return o.ApplyT(func(v ParentGroupInfoResponse) *ParentGroupInfoResponse {
		return &v
	}).(ParentGroupInfoResponsePtrOutput)
}

// The friendly name of the parent management group.
func (o ParentGroupInfoResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParentGroupInfoResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
func (o ParentGroupInfoResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParentGroupInfoResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the parent management group
func (o ParentGroupInfoResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParentGroupInfoResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ParentGroupInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (ParentGroupInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParentGroupInfoResponse)(nil)).Elem()
}

func (o ParentGroupInfoResponsePtrOutput) ToParentGroupInfoResponsePtrOutput() ParentGroupInfoResponsePtrOutput {
	return o
}

func (o ParentGroupInfoResponsePtrOutput) ToParentGroupInfoResponsePtrOutputWithContext(ctx context.Context) ParentGroupInfoResponsePtrOutput {
	return o
}

func (o ParentGroupInfoResponsePtrOutput) Elem() ParentGroupInfoResponseOutput {
	return o.ApplyT(func(v *ParentGroupInfoResponse) ParentGroupInfoResponse { return *v }).(ParentGroupInfoResponseOutput)
}

// The friendly name of the parent management group.
func (o ParentGroupInfoResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParentGroupInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The fully qualified ID for the parent management group.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000
func (o ParentGroupInfoResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParentGroupInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the parent management group
func (o ParentGroupInfoResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParentGroupInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The policy definition group.
type PolicyDefinitionGroup struct {
	// A resource ID of a resource that contains additional metadata about the group.
	AdditionalMetadataId *string `pulumi:"additionalMetadataId"`
	// The group's category.
	Category *string `pulumi:"category"`
	// The group's description.
	Description *string `pulumi:"description"`
	// The group's display name.
	DisplayName *string `pulumi:"displayName"`
	// The name of the group.
	Name string `pulumi:"name"`
}

// PolicyDefinitionGroupInput is an input type that accepts PolicyDefinitionGroupArgs and PolicyDefinitionGroupOutput values.
// You can construct a concrete instance of `PolicyDefinitionGroupInput` via:
//
//          PolicyDefinitionGroupArgs{...}
type PolicyDefinitionGroupInput interface {
	pulumi.Input

	ToPolicyDefinitionGroupOutput() PolicyDefinitionGroupOutput
	ToPolicyDefinitionGroupOutputWithContext(context.Context) PolicyDefinitionGroupOutput
}

// The policy definition group.
type PolicyDefinitionGroupArgs struct {
	// A resource ID of a resource that contains additional metadata about the group.
	AdditionalMetadataId pulumi.StringPtrInput `pulumi:"additionalMetadataId"`
	// The group's category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// The group's description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The group's display name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The name of the group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (PolicyDefinitionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionGroup)(nil)).Elem()
}

func (i PolicyDefinitionGroupArgs) ToPolicyDefinitionGroupOutput() PolicyDefinitionGroupOutput {
	return i.ToPolicyDefinitionGroupOutputWithContext(context.Background())
}

func (i PolicyDefinitionGroupArgs) ToPolicyDefinitionGroupOutputWithContext(ctx context.Context) PolicyDefinitionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionGroupOutput)
}

// PolicyDefinitionGroupArrayInput is an input type that accepts PolicyDefinitionGroupArray and PolicyDefinitionGroupArrayOutput values.
// You can construct a concrete instance of `PolicyDefinitionGroupArrayInput` via:
//
//          PolicyDefinitionGroupArray{ PolicyDefinitionGroupArgs{...} }
type PolicyDefinitionGroupArrayInput interface {
	pulumi.Input

	ToPolicyDefinitionGroupArrayOutput() PolicyDefinitionGroupArrayOutput
	ToPolicyDefinitionGroupArrayOutputWithContext(context.Context) PolicyDefinitionGroupArrayOutput
}

type PolicyDefinitionGroupArray []PolicyDefinitionGroupInput

func (PolicyDefinitionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionGroup)(nil)).Elem()
}

func (i PolicyDefinitionGroupArray) ToPolicyDefinitionGroupArrayOutput() PolicyDefinitionGroupArrayOutput {
	return i.ToPolicyDefinitionGroupArrayOutputWithContext(context.Background())
}

func (i PolicyDefinitionGroupArray) ToPolicyDefinitionGroupArrayOutputWithContext(ctx context.Context) PolicyDefinitionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionGroupArrayOutput)
}

// The policy definition group.
type PolicyDefinitionGroupOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionGroup)(nil)).Elem()
}

func (o PolicyDefinitionGroupOutput) ToPolicyDefinitionGroupOutput() PolicyDefinitionGroupOutput {
	return o
}

func (o PolicyDefinitionGroupOutput) ToPolicyDefinitionGroupOutputWithContext(ctx context.Context) PolicyDefinitionGroupOutput {
	return o
}

// A resource ID of a resource that contains additional metadata about the group.
func (o PolicyDefinitionGroupOutput) AdditionalMetadataId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionGroup) *string { return v.AdditionalMetadataId }).(pulumi.StringPtrOutput)
}

// The group's category.
func (o PolicyDefinitionGroupOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionGroup) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// The group's description.
func (o PolicyDefinitionGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionGroup) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The group's display name.
func (o PolicyDefinitionGroupOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionGroup) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The name of the group.
func (o PolicyDefinitionGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyDefinitionGroup) string { return v.Name }).(pulumi.StringOutput)
}

type PolicyDefinitionGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionGroup)(nil)).Elem()
}

func (o PolicyDefinitionGroupArrayOutput) ToPolicyDefinitionGroupArrayOutput() PolicyDefinitionGroupArrayOutput {
	return o
}

func (o PolicyDefinitionGroupArrayOutput) ToPolicyDefinitionGroupArrayOutputWithContext(ctx context.Context) PolicyDefinitionGroupArrayOutput {
	return o
}

func (o PolicyDefinitionGroupArrayOutput) Index(i pulumi.IntInput) PolicyDefinitionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDefinitionGroup {
		return vs[0].([]PolicyDefinitionGroup)[vs[1].(int)]
	}).(PolicyDefinitionGroupOutput)
}

// The policy definition group.
type PolicyDefinitionGroupResponse struct {
	// A resource ID of a resource that contains additional metadata about the group.
	AdditionalMetadataId *string `pulumi:"additionalMetadataId"`
	// The group's category.
	Category *string `pulumi:"category"`
	// The group's description.
	Description *string `pulumi:"description"`
	// The group's display name.
	DisplayName *string `pulumi:"displayName"`
	// The name of the group.
	Name string `pulumi:"name"`
}

// PolicyDefinitionGroupResponseInput is an input type that accepts PolicyDefinitionGroupResponseArgs and PolicyDefinitionGroupResponseOutput values.
// You can construct a concrete instance of `PolicyDefinitionGroupResponseInput` via:
//
//          PolicyDefinitionGroupResponseArgs{...}
type PolicyDefinitionGroupResponseInput interface {
	pulumi.Input

	ToPolicyDefinitionGroupResponseOutput() PolicyDefinitionGroupResponseOutput
	ToPolicyDefinitionGroupResponseOutputWithContext(context.Context) PolicyDefinitionGroupResponseOutput
}

// The policy definition group.
type PolicyDefinitionGroupResponseArgs struct {
	// A resource ID of a resource that contains additional metadata about the group.
	AdditionalMetadataId pulumi.StringPtrInput `pulumi:"additionalMetadataId"`
	// The group's category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// The group's description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The group's display name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The name of the group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (PolicyDefinitionGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionGroupResponse)(nil)).Elem()
}

func (i PolicyDefinitionGroupResponseArgs) ToPolicyDefinitionGroupResponseOutput() PolicyDefinitionGroupResponseOutput {
	return i.ToPolicyDefinitionGroupResponseOutputWithContext(context.Background())
}

func (i PolicyDefinitionGroupResponseArgs) ToPolicyDefinitionGroupResponseOutputWithContext(ctx context.Context) PolicyDefinitionGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionGroupResponseOutput)
}

// PolicyDefinitionGroupResponseArrayInput is an input type that accepts PolicyDefinitionGroupResponseArray and PolicyDefinitionGroupResponseArrayOutput values.
// You can construct a concrete instance of `PolicyDefinitionGroupResponseArrayInput` via:
//
//          PolicyDefinitionGroupResponseArray{ PolicyDefinitionGroupResponseArgs{...} }
type PolicyDefinitionGroupResponseArrayInput interface {
	pulumi.Input

	ToPolicyDefinitionGroupResponseArrayOutput() PolicyDefinitionGroupResponseArrayOutput
	ToPolicyDefinitionGroupResponseArrayOutputWithContext(context.Context) PolicyDefinitionGroupResponseArrayOutput
}

type PolicyDefinitionGroupResponseArray []PolicyDefinitionGroupResponseInput

func (PolicyDefinitionGroupResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionGroupResponse)(nil)).Elem()
}

func (i PolicyDefinitionGroupResponseArray) ToPolicyDefinitionGroupResponseArrayOutput() PolicyDefinitionGroupResponseArrayOutput {
	return i.ToPolicyDefinitionGroupResponseArrayOutputWithContext(context.Background())
}

func (i PolicyDefinitionGroupResponseArray) ToPolicyDefinitionGroupResponseArrayOutputWithContext(ctx context.Context) PolicyDefinitionGroupResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionGroupResponseArrayOutput)
}

// The policy definition group.
type PolicyDefinitionGroupResponseOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionGroupResponse)(nil)).Elem()
}

func (o PolicyDefinitionGroupResponseOutput) ToPolicyDefinitionGroupResponseOutput() PolicyDefinitionGroupResponseOutput {
	return o
}

func (o PolicyDefinitionGroupResponseOutput) ToPolicyDefinitionGroupResponseOutputWithContext(ctx context.Context) PolicyDefinitionGroupResponseOutput {
	return o
}

// A resource ID of a resource that contains additional metadata about the group.
func (o PolicyDefinitionGroupResponseOutput) AdditionalMetadataId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionGroupResponse) *string { return v.AdditionalMetadataId }).(pulumi.StringPtrOutput)
}

// The group's category.
func (o PolicyDefinitionGroupResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionGroupResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// The group's description.
func (o PolicyDefinitionGroupResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionGroupResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The group's display name.
func (o PolicyDefinitionGroupResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionGroupResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The name of the group.
func (o PolicyDefinitionGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyDefinitionGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

type PolicyDefinitionGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionGroupResponse)(nil)).Elem()
}

func (o PolicyDefinitionGroupResponseArrayOutput) ToPolicyDefinitionGroupResponseArrayOutput() PolicyDefinitionGroupResponseArrayOutput {
	return o
}

func (o PolicyDefinitionGroupResponseArrayOutput) ToPolicyDefinitionGroupResponseArrayOutputWithContext(ctx context.Context) PolicyDefinitionGroupResponseArrayOutput {
	return o
}

func (o PolicyDefinitionGroupResponseArrayOutput) Index(i pulumi.IntInput) PolicyDefinitionGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDefinitionGroupResponse {
		return vs[0].([]PolicyDefinitionGroupResponse)[vs[1].(int)]
	}).(PolicyDefinitionGroupResponseOutput)
}

// The policy definition reference.
type PolicyDefinitionReference struct {
	// The name of the groups that this policy definition reference belongs to.
	GroupNames []string `pulumi:"groupNames"`
	// The parameter values for the referenced policy rule. The keys are the parameter names.
	Parameters map[string]ParameterValuesValue `pulumi:"parameters"`
	// The ID of the policy definition or policy set definition.
	PolicyDefinitionId string `pulumi:"policyDefinitionId"`
	// A unique id (within the policy set definition) for this policy definition reference.
	PolicyDefinitionReferenceId *string `pulumi:"policyDefinitionReferenceId"`
}

// PolicyDefinitionReferenceInput is an input type that accepts PolicyDefinitionReferenceArgs and PolicyDefinitionReferenceOutput values.
// You can construct a concrete instance of `PolicyDefinitionReferenceInput` via:
//
//          PolicyDefinitionReferenceArgs{...}
type PolicyDefinitionReferenceInput interface {
	pulumi.Input

	ToPolicyDefinitionReferenceOutput() PolicyDefinitionReferenceOutput
	ToPolicyDefinitionReferenceOutputWithContext(context.Context) PolicyDefinitionReferenceOutput
}

// The policy definition reference.
type PolicyDefinitionReferenceArgs struct {
	// The name of the groups that this policy definition reference belongs to.
	GroupNames pulumi.StringArrayInput `pulumi:"groupNames"`
	// The parameter values for the referenced policy rule. The keys are the parameter names.
	Parameters ParameterValuesValueMapInput `pulumi:"parameters"`
	// The ID of the policy definition or policy set definition.
	PolicyDefinitionId pulumi.StringInput `pulumi:"policyDefinitionId"`
	// A unique id (within the policy set definition) for this policy definition reference.
	PolicyDefinitionReferenceId pulumi.StringPtrInput `pulumi:"policyDefinitionReferenceId"`
}

func (PolicyDefinitionReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionReference)(nil)).Elem()
}

func (i PolicyDefinitionReferenceArgs) ToPolicyDefinitionReferenceOutput() PolicyDefinitionReferenceOutput {
	return i.ToPolicyDefinitionReferenceOutputWithContext(context.Background())
}

func (i PolicyDefinitionReferenceArgs) ToPolicyDefinitionReferenceOutputWithContext(ctx context.Context) PolicyDefinitionReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionReferenceOutput)
}

// PolicyDefinitionReferenceArrayInput is an input type that accepts PolicyDefinitionReferenceArray and PolicyDefinitionReferenceArrayOutput values.
// You can construct a concrete instance of `PolicyDefinitionReferenceArrayInput` via:
//
//          PolicyDefinitionReferenceArray{ PolicyDefinitionReferenceArgs{...} }
type PolicyDefinitionReferenceArrayInput interface {
	pulumi.Input

	ToPolicyDefinitionReferenceArrayOutput() PolicyDefinitionReferenceArrayOutput
	ToPolicyDefinitionReferenceArrayOutputWithContext(context.Context) PolicyDefinitionReferenceArrayOutput
}

type PolicyDefinitionReferenceArray []PolicyDefinitionReferenceInput

func (PolicyDefinitionReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionReference)(nil)).Elem()
}

func (i PolicyDefinitionReferenceArray) ToPolicyDefinitionReferenceArrayOutput() PolicyDefinitionReferenceArrayOutput {
	return i.ToPolicyDefinitionReferenceArrayOutputWithContext(context.Background())
}

func (i PolicyDefinitionReferenceArray) ToPolicyDefinitionReferenceArrayOutputWithContext(ctx context.Context) PolicyDefinitionReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionReferenceArrayOutput)
}

// The policy definition reference.
type PolicyDefinitionReferenceOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionReference)(nil)).Elem()
}

func (o PolicyDefinitionReferenceOutput) ToPolicyDefinitionReferenceOutput() PolicyDefinitionReferenceOutput {
	return o
}

func (o PolicyDefinitionReferenceOutput) ToPolicyDefinitionReferenceOutputWithContext(ctx context.Context) PolicyDefinitionReferenceOutput {
	return o
}

// The name of the groups that this policy definition reference belongs to.
func (o PolicyDefinitionReferenceOutput) GroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyDefinitionReference) []string { return v.GroupNames }).(pulumi.StringArrayOutput)
}

// The parameter values for the referenced policy rule. The keys are the parameter names.
func (o PolicyDefinitionReferenceOutput) Parameters() ParameterValuesValueMapOutput {
	return o.ApplyT(func(v PolicyDefinitionReference) map[string]ParameterValuesValue { return v.Parameters }).(ParameterValuesValueMapOutput)
}

// The ID of the policy definition or policy set definition.
func (o PolicyDefinitionReferenceOutput) PolicyDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyDefinitionReference) string { return v.PolicyDefinitionId }).(pulumi.StringOutput)
}

// A unique id (within the policy set definition) for this policy definition reference.
func (o PolicyDefinitionReferenceOutput) PolicyDefinitionReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionReference) *string { return v.PolicyDefinitionReferenceId }).(pulumi.StringPtrOutput)
}

type PolicyDefinitionReferenceArrayOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionReference)(nil)).Elem()
}

func (o PolicyDefinitionReferenceArrayOutput) ToPolicyDefinitionReferenceArrayOutput() PolicyDefinitionReferenceArrayOutput {
	return o
}

func (o PolicyDefinitionReferenceArrayOutput) ToPolicyDefinitionReferenceArrayOutputWithContext(ctx context.Context) PolicyDefinitionReferenceArrayOutput {
	return o
}

func (o PolicyDefinitionReferenceArrayOutput) Index(i pulumi.IntInput) PolicyDefinitionReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDefinitionReference {
		return vs[0].([]PolicyDefinitionReference)[vs[1].(int)]
	}).(PolicyDefinitionReferenceOutput)
}

// The policy definition reference.
type PolicyDefinitionReferenceResponse struct {
	// The name of the groups that this policy definition reference belongs to.
	GroupNames []string `pulumi:"groupNames"`
	// The parameter values for the referenced policy rule. The keys are the parameter names.
	Parameters map[string]ParameterValuesValueResponse `pulumi:"parameters"`
	// The ID of the policy definition or policy set definition.
	PolicyDefinitionId string `pulumi:"policyDefinitionId"`
	// A unique id (within the policy set definition) for this policy definition reference.
	PolicyDefinitionReferenceId *string `pulumi:"policyDefinitionReferenceId"`
}

// PolicyDefinitionReferenceResponseInput is an input type that accepts PolicyDefinitionReferenceResponseArgs and PolicyDefinitionReferenceResponseOutput values.
// You can construct a concrete instance of `PolicyDefinitionReferenceResponseInput` via:
//
//          PolicyDefinitionReferenceResponseArgs{...}
type PolicyDefinitionReferenceResponseInput interface {
	pulumi.Input

	ToPolicyDefinitionReferenceResponseOutput() PolicyDefinitionReferenceResponseOutput
	ToPolicyDefinitionReferenceResponseOutputWithContext(context.Context) PolicyDefinitionReferenceResponseOutput
}

// The policy definition reference.
type PolicyDefinitionReferenceResponseArgs struct {
	// The name of the groups that this policy definition reference belongs to.
	GroupNames pulumi.StringArrayInput `pulumi:"groupNames"`
	// The parameter values for the referenced policy rule. The keys are the parameter names.
	Parameters ParameterValuesValueResponseMapInput `pulumi:"parameters"`
	// The ID of the policy definition or policy set definition.
	PolicyDefinitionId pulumi.StringInput `pulumi:"policyDefinitionId"`
	// A unique id (within the policy set definition) for this policy definition reference.
	PolicyDefinitionReferenceId pulumi.StringPtrInput `pulumi:"policyDefinitionReferenceId"`
}

func (PolicyDefinitionReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionReferenceResponse)(nil)).Elem()
}

func (i PolicyDefinitionReferenceResponseArgs) ToPolicyDefinitionReferenceResponseOutput() PolicyDefinitionReferenceResponseOutput {
	return i.ToPolicyDefinitionReferenceResponseOutputWithContext(context.Background())
}

func (i PolicyDefinitionReferenceResponseArgs) ToPolicyDefinitionReferenceResponseOutputWithContext(ctx context.Context) PolicyDefinitionReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionReferenceResponseOutput)
}

// PolicyDefinitionReferenceResponseArrayInput is an input type that accepts PolicyDefinitionReferenceResponseArray and PolicyDefinitionReferenceResponseArrayOutput values.
// You can construct a concrete instance of `PolicyDefinitionReferenceResponseArrayInput` via:
//
//          PolicyDefinitionReferenceResponseArray{ PolicyDefinitionReferenceResponseArgs{...} }
type PolicyDefinitionReferenceResponseArrayInput interface {
	pulumi.Input

	ToPolicyDefinitionReferenceResponseArrayOutput() PolicyDefinitionReferenceResponseArrayOutput
	ToPolicyDefinitionReferenceResponseArrayOutputWithContext(context.Context) PolicyDefinitionReferenceResponseArrayOutput
}

type PolicyDefinitionReferenceResponseArray []PolicyDefinitionReferenceResponseInput

func (PolicyDefinitionReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionReferenceResponse)(nil)).Elem()
}

func (i PolicyDefinitionReferenceResponseArray) ToPolicyDefinitionReferenceResponseArrayOutput() PolicyDefinitionReferenceResponseArrayOutput {
	return i.ToPolicyDefinitionReferenceResponseArrayOutputWithContext(context.Background())
}

func (i PolicyDefinitionReferenceResponseArray) ToPolicyDefinitionReferenceResponseArrayOutputWithContext(ctx context.Context) PolicyDefinitionReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionReferenceResponseArrayOutput)
}

// The policy definition reference.
type PolicyDefinitionReferenceResponseOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionReferenceResponse)(nil)).Elem()
}

func (o PolicyDefinitionReferenceResponseOutput) ToPolicyDefinitionReferenceResponseOutput() PolicyDefinitionReferenceResponseOutput {
	return o
}

func (o PolicyDefinitionReferenceResponseOutput) ToPolicyDefinitionReferenceResponseOutputWithContext(ctx context.Context) PolicyDefinitionReferenceResponseOutput {
	return o
}

// The name of the groups that this policy definition reference belongs to.
func (o PolicyDefinitionReferenceResponseOutput) GroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyDefinitionReferenceResponse) []string { return v.GroupNames }).(pulumi.StringArrayOutput)
}

// The parameter values for the referenced policy rule. The keys are the parameter names.
func (o PolicyDefinitionReferenceResponseOutput) Parameters() ParameterValuesValueResponseMapOutput {
	return o.ApplyT(func(v PolicyDefinitionReferenceResponse) map[string]ParameterValuesValueResponse { return v.Parameters }).(ParameterValuesValueResponseMapOutput)
}

// The ID of the policy definition or policy set definition.
func (o PolicyDefinitionReferenceResponseOutput) PolicyDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyDefinitionReferenceResponse) string { return v.PolicyDefinitionId }).(pulumi.StringOutput)
}

// A unique id (within the policy set definition) for this policy definition reference.
func (o PolicyDefinitionReferenceResponseOutput) PolicyDefinitionReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionReferenceResponse) *string { return v.PolicyDefinitionReferenceId }).(pulumi.StringPtrOutput)
}

type PolicyDefinitionReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDefinitionReferenceResponse)(nil)).Elem()
}

func (o PolicyDefinitionReferenceResponseArrayOutput) ToPolicyDefinitionReferenceResponseArrayOutput() PolicyDefinitionReferenceResponseArrayOutput {
	return o
}

func (o PolicyDefinitionReferenceResponseArrayOutput) ToPolicyDefinitionReferenceResponseArrayOutputWithContext(ctx context.Context) PolicyDefinitionReferenceResponseArrayOutput {
	return o
}

func (o PolicyDefinitionReferenceResponseArrayOutput) Index(i pulumi.IntInput) PolicyDefinitionReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDefinitionReferenceResponse {
		return vs[0].([]PolicyDefinitionReferenceResponse)[vs[1].(int)]
	}).(PolicyDefinitionReferenceResponseOutput)
}

// Resource type managed by the resource provider.
type ProviderResourceTypeResponse struct {
	// The aliases that are supported by this resource type.
	Aliases []AliasResponse `pulumi:"aliases"`
	// The API profiles for the resource provider.
	ApiProfiles []ApiProfileResponse `pulumi:"apiProfiles"`
	// The API version.
	ApiVersions []string `pulumi:"apiVersions"`
	// The additional capabilities offered by this resource type.
	Capabilities *string `pulumi:"capabilities"`
	// The default API version.
	DefaultApiVersion string `pulumi:"defaultApiVersion"`
	// The collection of locations where this resource type can be created.
	Locations []string `pulumi:"locations"`
	// The properties.
	Properties map[string]string `pulumi:"properties"`
	// The resource type.
	ResourceType *string `pulumi:"resourceType"`
}

// ProviderResourceTypeResponseInput is an input type that accepts ProviderResourceTypeResponseArgs and ProviderResourceTypeResponseOutput values.
// You can construct a concrete instance of `ProviderResourceTypeResponseInput` via:
//
//          ProviderResourceTypeResponseArgs{...}
type ProviderResourceTypeResponseInput interface {
	pulumi.Input

	ToProviderResourceTypeResponseOutput() ProviderResourceTypeResponseOutput
	ToProviderResourceTypeResponseOutputWithContext(context.Context) ProviderResourceTypeResponseOutput
}

// Resource type managed by the resource provider.
type ProviderResourceTypeResponseArgs struct {
	// The aliases that are supported by this resource type.
	Aliases AliasResponseArrayInput `pulumi:"aliases"`
	// The API profiles for the resource provider.
	ApiProfiles ApiProfileResponseArrayInput `pulumi:"apiProfiles"`
	// The API version.
	ApiVersions pulumi.StringArrayInput `pulumi:"apiVersions"`
	// The additional capabilities offered by this resource type.
	Capabilities pulumi.StringPtrInput `pulumi:"capabilities"`
	// The default API version.
	DefaultApiVersion pulumi.StringInput `pulumi:"defaultApiVersion"`
	// The collection of locations where this resource type can be created.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// The properties.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The resource type.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
}

func (ProviderResourceTypeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderResourceTypeResponse)(nil)).Elem()
}

func (i ProviderResourceTypeResponseArgs) ToProviderResourceTypeResponseOutput() ProviderResourceTypeResponseOutput {
	return i.ToProviderResourceTypeResponseOutputWithContext(context.Background())
}

func (i ProviderResourceTypeResponseArgs) ToProviderResourceTypeResponseOutputWithContext(ctx context.Context) ProviderResourceTypeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderResourceTypeResponseOutput)
}

// ProviderResourceTypeResponseArrayInput is an input type that accepts ProviderResourceTypeResponseArray and ProviderResourceTypeResponseArrayOutput values.
// You can construct a concrete instance of `ProviderResourceTypeResponseArrayInput` via:
//
//          ProviderResourceTypeResponseArray{ ProviderResourceTypeResponseArgs{...} }
type ProviderResourceTypeResponseArrayInput interface {
	pulumi.Input

	ToProviderResourceTypeResponseArrayOutput() ProviderResourceTypeResponseArrayOutput
	ToProviderResourceTypeResponseArrayOutputWithContext(context.Context) ProviderResourceTypeResponseArrayOutput
}

type ProviderResourceTypeResponseArray []ProviderResourceTypeResponseInput

func (ProviderResourceTypeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderResourceTypeResponse)(nil)).Elem()
}

func (i ProviderResourceTypeResponseArray) ToProviderResourceTypeResponseArrayOutput() ProviderResourceTypeResponseArrayOutput {
	return i.ToProviderResourceTypeResponseArrayOutputWithContext(context.Background())
}

func (i ProviderResourceTypeResponseArray) ToProviderResourceTypeResponseArrayOutputWithContext(ctx context.Context) ProviderResourceTypeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderResourceTypeResponseArrayOutput)
}

// Resource type managed by the resource provider.
type ProviderResourceTypeResponseOutput struct{ *pulumi.OutputState }

func (ProviderResourceTypeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderResourceTypeResponse)(nil)).Elem()
}

func (o ProviderResourceTypeResponseOutput) ToProviderResourceTypeResponseOutput() ProviderResourceTypeResponseOutput {
	return o
}

func (o ProviderResourceTypeResponseOutput) ToProviderResourceTypeResponseOutputWithContext(ctx context.Context) ProviderResourceTypeResponseOutput {
	return o
}

// The aliases that are supported by this resource type.
func (o ProviderResourceTypeResponseOutput) Aliases() AliasResponseArrayOutput {
	return o.ApplyT(func(v ProviderResourceTypeResponse) []AliasResponse { return v.Aliases }).(AliasResponseArrayOutput)
}

// The API profiles for the resource provider.
func (o ProviderResourceTypeResponseOutput) ApiProfiles() ApiProfileResponseArrayOutput {
	return o.ApplyT(func(v ProviderResourceTypeResponse) []ApiProfileResponse { return v.ApiProfiles }).(ApiProfileResponseArrayOutput)
}

// The API version.
func (o ProviderResourceTypeResponseOutput) ApiVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderResourceTypeResponse) []string { return v.ApiVersions }).(pulumi.StringArrayOutput)
}

// The additional capabilities offered by this resource type.
func (o ProviderResourceTypeResponseOutput) Capabilities() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderResourceTypeResponse) *string { return v.Capabilities }).(pulumi.StringPtrOutput)
}

// The default API version.
func (o ProviderResourceTypeResponseOutput) DefaultApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderResourceTypeResponse) string { return v.DefaultApiVersion }).(pulumi.StringOutput)
}

// The collection of locations where this resource type can be created.
func (o ProviderResourceTypeResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderResourceTypeResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// The properties.
func (o ProviderResourceTypeResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProviderResourceTypeResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The resource type.
func (o ProviderResourceTypeResponseOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderResourceTypeResponse) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

type ProviderResourceTypeResponseArrayOutput struct{ *pulumi.OutputState }

func (ProviderResourceTypeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderResourceTypeResponse)(nil)).Elem()
}

func (o ProviderResourceTypeResponseArrayOutput) ToProviderResourceTypeResponseArrayOutput() ProviderResourceTypeResponseArrayOutput {
	return o
}

func (o ProviderResourceTypeResponseArrayOutput) ToProviderResourceTypeResponseArrayOutputWithContext(ctx context.Context) ProviderResourceTypeResponseArrayOutput {
	return o
}

func (o ProviderResourceTypeResponseArrayOutput) Index(i pulumi.IntInput) ProviderResourceTypeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProviderResourceTypeResponse {
		return vs[0].([]ProviderResourceTypeResponse)[vs[1].(int)]
	}).(ProviderResourceTypeResponseOutput)
}

// Resource provider information.
type ProviderResponse struct {
	// The provider ID.
	Id string `pulumi:"id"`
	// The namespace of the resource provider.
	Namespace *string `pulumi:"namespace"`
	// The registration policy of the resource provider.
	RegistrationPolicy string `pulumi:"registrationPolicy"`
	// The registration state of the resource provider.
	RegistrationState string `pulumi:"registrationState"`
	// The collection of provider resource types.
	ResourceTypes []ProviderResourceTypeResponse `pulumi:"resourceTypes"`
}

// ProviderResponseInput is an input type that accepts ProviderResponseArgs and ProviderResponseOutput values.
// You can construct a concrete instance of `ProviderResponseInput` via:
//
//          ProviderResponseArgs{...}
type ProviderResponseInput interface {
	pulumi.Input

	ToProviderResponseOutput() ProviderResponseOutput
	ToProviderResponseOutputWithContext(context.Context) ProviderResponseOutput
}

// Resource provider information.
type ProviderResponseArgs struct {
	// The provider ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The namespace of the resource provider.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The registration policy of the resource provider.
	RegistrationPolicy pulumi.StringInput `pulumi:"registrationPolicy"`
	// The registration state of the resource provider.
	RegistrationState pulumi.StringInput `pulumi:"registrationState"`
	// The collection of provider resource types.
	ResourceTypes ProviderResourceTypeResponseArrayInput `pulumi:"resourceTypes"`
}

func (ProviderResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderResponse)(nil)).Elem()
}

func (i ProviderResponseArgs) ToProviderResponseOutput() ProviderResponseOutput {
	return i.ToProviderResponseOutputWithContext(context.Background())
}

func (i ProviderResponseArgs) ToProviderResponseOutputWithContext(ctx context.Context) ProviderResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderResponseOutput)
}

// ProviderResponseArrayInput is an input type that accepts ProviderResponseArray and ProviderResponseArrayOutput values.
// You can construct a concrete instance of `ProviderResponseArrayInput` via:
//
//          ProviderResponseArray{ ProviderResponseArgs{...} }
type ProviderResponseArrayInput interface {
	pulumi.Input

	ToProviderResponseArrayOutput() ProviderResponseArrayOutput
	ToProviderResponseArrayOutputWithContext(context.Context) ProviderResponseArrayOutput
}

type ProviderResponseArray []ProviderResponseInput

func (ProviderResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderResponse)(nil)).Elem()
}

func (i ProviderResponseArray) ToProviderResponseArrayOutput() ProviderResponseArrayOutput {
	return i.ToProviderResponseArrayOutputWithContext(context.Background())
}

func (i ProviderResponseArray) ToProviderResponseArrayOutputWithContext(ctx context.Context) ProviderResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderResponseArrayOutput)
}

// Resource provider information.
type ProviderResponseOutput struct{ *pulumi.OutputState }

func (ProviderResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderResponse)(nil)).Elem()
}

func (o ProviderResponseOutput) ToProviderResponseOutput() ProviderResponseOutput {
	return o
}

func (o ProviderResponseOutput) ToProviderResponseOutputWithContext(ctx context.Context) ProviderResponseOutput {
	return o
}

// The provider ID.
func (o ProviderResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The namespace of the resource provider.
func (o ProviderResponseOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderResponse) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The registration policy of the resource provider.
func (o ProviderResponseOutput) RegistrationPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderResponse) string { return v.RegistrationPolicy }).(pulumi.StringOutput)
}

// The registration state of the resource provider.
func (o ProviderResponseOutput) RegistrationState() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderResponse) string { return v.RegistrationState }).(pulumi.StringOutput)
}

// The collection of provider resource types.
func (o ProviderResponseOutput) ResourceTypes() ProviderResourceTypeResponseArrayOutput {
	return o.ApplyT(func(v ProviderResponse) []ProviderResourceTypeResponse { return v.ResourceTypes }).(ProviderResourceTypeResponseArrayOutput)
}

type ProviderResponseArrayOutput struct{ *pulumi.OutputState }

func (ProviderResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderResponse)(nil)).Elem()
}

func (o ProviderResponseArrayOutput) ToProviderResponseArrayOutput() ProviderResponseArrayOutput {
	return o
}

func (o ProviderResponseArrayOutput) ToProviderResponseArrayOutputWithContext(ctx context.Context) ProviderResponseArrayOutput {
	return o
}

func (o ProviderResponseArrayOutput) Index(i pulumi.IntInput) ProviderResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProviderResponse {
		return vs[0].([]ProviderResponse)[vs[1].(int)]
	}).(ProviderResponseOutput)
}

// The resource Id model.
type ResourceReferenceResponse struct {
	// The fully qualified resource Id.
	Id string `pulumi:"id"`
}

// ResourceReferenceResponseInput is an input type that accepts ResourceReferenceResponseArgs and ResourceReferenceResponseOutput values.
// You can construct a concrete instance of `ResourceReferenceResponseInput` via:
//
//          ResourceReferenceResponseArgs{...}
type ResourceReferenceResponseInput interface {
	pulumi.Input

	ToResourceReferenceResponseOutput() ResourceReferenceResponseOutput
	ToResourceReferenceResponseOutputWithContext(context.Context) ResourceReferenceResponseOutput
}

// The resource Id model.
type ResourceReferenceResponseArgs struct {
	// The fully qualified resource Id.
	Id pulumi.StringInput `pulumi:"id"`
}

func (ResourceReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReferenceResponse)(nil)).Elem()
}

func (i ResourceReferenceResponseArgs) ToResourceReferenceResponseOutput() ResourceReferenceResponseOutput {
	return i.ToResourceReferenceResponseOutputWithContext(context.Background())
}

func (i ResourceReferenceResponseArgs) ToResourceReferenceResponseOutputWithContext(ctx context.Context) ResourceReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceResponseOutput)
}

// ResourceReferenceResponseArrayInput is an input type that accepts ResourceReferenceResponseArray and ResourceReferenceResponseArrayOutput values.
// You can construct a concrete instance of `ResourceReferenceResponseArrayInput` via:
//
//          ResourceReferenceResponseArray{ ResourceReferenceResponseArgs{...} }
type ResourceReferenceResponseArrayInput interface {
	pulumi.Input

	ToResourceReferenceResponseArrayOutput() ResourceReferenceResponseArrayOutput
	ToResourceReferenceResponseArrayOutputWithContext(context.Context) ResourceReferenceResponseArrayOutput
}

type ResourceReferenceResponseArray []ResourceReferenceResponseInput

func (ResourceReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReferenceResponse)(nil)).Elem()
}

func (i ResourceReferenceResponseArray) ToResourceReferenceResponseArrayOutput() ResourceReferenceResponseArrayOutput {
	return i.ToResourceReferenceResponseArrayOutputWithContext(context.Background())
}

func (i ResourceReferenceResponseArray) ToResourceReferenceResponseArrayOutputWithContext(ctx context.Context) ResourceReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceResponseArrayOutput)
}

// The resource Id model.
type ResourceReferenceResponseOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutput() ResourceReferenceResponseOutput {
	return o
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutputWithContext(ctx context.Context) ResourceReferenceResponseOutput {
	return o
}

// The fully qualified resource Id.
func (o ResourceReferenceResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceReferenceResponse) string { return v.Id }).(pulumi.StringOutput)
}

type ResourceReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutput() ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutputWithContext(ctx context.Context) ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) Index(i pulumi.IntInput) ResourceReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceReferenceResponse {
		return vs[0].([]ResourceReferenceResponse)[vs[1].(int)]
	}).(ResourceReferenceResponseOutput)
}

// Entity representing the reference to the template.
type TemplateLink struct {
	// If included, must match the ContentVersion in the template.
	ContentVersion *string `pulumi:"contentVersion"`
	// The resource id of a Template Spec. Use either the id or uri property, but not both.
	Id *string `pulumi:"id"`
	// Applicable only if this template link references a Template Spec. This relativePath property can optionally be used to reference a Template Spec artifact by path.
	RelativePath *string `pulumi:"relativePath"`
	// The URI of the template to deploy. Use either the uri or id property, but not both.
	Uri *string `pulumi:"uri"`
}

// TemplateLinkInput is an input type that accepts TemplateLinkArgs and TemplateLinkOutput values.
// You can construct a concrete instance of `TemplateLinkInput` via:
//
//          TemplateLinkArgs{...}
type TemplateLinkInput interface {
	pulumi.Input

	ToTemplateLinkOutput() TemplateLinkOutput
	ToTemplateLinkOutputWithContext(context.Context) TemplateLinkOutput
}

// Entity representing the reference to the template.
type TemplateLinkArgs struct {
	// If included, must match the ContentVersion in the template.
	ContentVersion pulumi.StringPtrInput `pulumi:"contentVersion"`
	// The resource id of a Template Spec. Use either the id or uri property, but not both.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Applicable only if this template link references a Template Spec. This relativePath property can optionally be used to reference a Template Spec artifact by path.
	RelativePath pulumi.StringPtrInput `pulumi:"relativePath"`
	// The URI of the template to deploy. Use either the uri or id property, but not both.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (TemplateLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLink)(nil)).Elem()
}

func (i TemplateLinkArgs) ToTemplateLinkOutput() TemplateLinkOutput {
	return i.ToTemplateLinkOutputWithContext(context.Background())
}

func (i TemplateLinkArgs) ToTemplateLinkOutputWithContext(ctx context.Context) TemplateLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLinkOutput)
}

func (i TemplateLinkArgs) ToTemplateLinkPtrOutput() TemplateLinkPtrOutput {
	return i.ToTemplateLinkPtrOutputWithContext(context.Background())
}

func (i TemplateLinkArgs) ToTemplateLinkPtrOutputWithContext(ctx context.Context) TemplateLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLinkOutput).ToTemplateLinkPtrOutputWithContext(ctx)
}

// TemplateLinkPtrInput is an input type that accepts TemplateLinkArgs, TemplateLinkPtr and TemplateLinkPtrOutput values.
// You can construct a concrete instance of `TemplateLinkPtrInput` via:
//
//          TemplateLinkArgs{...}
//
//  or:
//
//          nil
type TemplateLinkPtrInput interface {
	pulumi.Input

	ToTemplateLinkPtrOutput() TemplateLinkPtrOutput
	ToTemplateLinkPtrOutputWithContext(context.Context) TemplateLinkPtrOutput
}

type templateLinkPtrType TemplateLinkArgs

func TemplateLinkPtr(v *TemplateLinkArgs) TemplateLinkPtrInput {
	return (*templateLinkPtrType)(v)
}

func (*templateLinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLink)(nil)).Elem()
}

func (i *templateLinkPtrType) ToTemplateLinkPtrOutput() TemplateLinkPtrOutput {
	return i.ToTemplateLinkPtrOutputWithContext(context.Background())
}

func (i *templateLinkPtrType) ToTemplateLinkPtrOutputWithContext(ctx context.Context) TemplateLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLinkPtrOutput)
}

// Entity representing the reference to the template.
type TemplateLinkOutput struct{ *pulumi.OutputState }

func (TemplateLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLink)(nil)).Elem()
}

func (o TemplateLinkOutput) ToTemplateLinkOutput() TemplateLinkOutput {
	return o
}

func (o TemplateLinkOutput) ToTemplateLinkOutputWithContext(ctx context.Context) TemplateLinkOutput {
	return o
}

func (o TemplateLinkOutput) ToTemplateLinkPtrOutput() TemplateLinkPtrOutput {
	return o.ToTemplateLinkPtrOutputWithContext(context.Background())
}

func (o TemplateLinkOutput) ToTemplateLinkPtrOutputWithContext(ctx context.Context) TemplateLinkPtrOutput {
	return o.ApplyT(func(v TemplateLink) *TemplateLink {
		return &v
	}).(TemplateLinkPtrOutput)
}

// If included, must match the ContentVersion in the template.
func (o TemplateLinkOutput) ContentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateLink) *string { return v.ContentVersion }).(pulumi.StringPtrOutput)
}

// The resource id of a Template Spec. Use either the id or uri property, but not both.
func (o TemplateLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Applicable only if this template link references a Template Spec. This relativePath property can optionally be used to reference a Template Spec artifact by path.
func (o TemplateLinkOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateLink) *string { return v.RelativePath }).(pulumi.StringPtrOutput)
}

// The URI of the template to deploy. Use either the uri or id property, but not both.
func (o TemplateLinkOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateLink) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type TemplateLinkPtrOutput struct{ *pulumi.OutputState }

func (TemplateLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLink)(nil)).Elem()
}

func (o TemplateLinkPtrOutput) ToTemplateLinkPtrOutput() TemplateLinkPtrOutput {
	return o
}

func (o TemplateLinkPtrOutput) ToTemplateLinkPtrOutputWithContext(ctx context.Context) TemplateLinkPtrOutput {
	return o
}

func (o TemplateLinkPtrOutput) Elem() TemplateLinkOutput {
	return o.ApplyT(func(v *TemplateLink) TemplateLink { return *v }).(TemplateLinkOutput)
}

// If included, must match the ContentVersion in the template.
func (o TemplateLinkPtrOutput) ContentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateLink) *string {
		if v == nil {
			return nil
		}
		return v.ContentVersion
	}).(pulumi.StringPtrOutput)
}

// The resource id of a Template Spec. Use either the id or uri property, but not both.
func (o TemplateLinkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateLink) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Applicable only if this template link references a Template Spec. This relativePath property can optionally be used to reference a Template Spec artifact by path.
func (o TemplateLinkPtrOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateLink) *string {
		if v == nil {
			return nil
		}
		return v.RelativePath
	}).(pulumi.StringPtrOutput)
}

// The URI of the template to deploy. Use either the uri or id property, but not both.
func (o TemplateLinkPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateLink) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// Entity representing the reference to the template.
type TemplateLinkResponse struct {
	// If included, must match the ContentVersion in the template.
	ContentVersion *string `pulumi:"contentVersion"`
	// The resource id of a Template Spec. Use either the id or uri property, but not both.
	Id *string `pulumi:"id"`
	// Applicable only if this template link references a Template Spec. This relativePath property can optionally be used to reference a Template Spec artifact by path.
	RelativePath *string `pulumi:"relativePath"`
	// The URI of the template to deploy. Use either the uri or id property, but not both.
	Uri *string `pulumi:"uri"`
}

// TemplateLinkResponseInput is an input type that accepts TemplateLinkResponseArgs and TemplateLinkResponseOutput values.
// You can construct a concrete instance of `TemplateLinkResponseInput` via:
//
//          TemplateLinkResponseArgs{...}
type TemplateLinkResponseInput interface {
	pulumi.Input

	ToTemplateLinkResponseOutput() TemplateLinkResponseOutput
	ToTemplateLinkResponseOutputWithContext(context.Context) TemplateLinkResponseOutput
}

// Entity representing the reference to the template.
type TemplateLinkResponseArgs struct {
	// If included, must match the ContentVersion in the template.
	ContentVersion pulumi.StringPtrInput `pulumi:"contentVersion"`
	// The resource id of a Template Spec. Use either the id or uri property, but not both.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Applicable only if this template link references a Template Spec. This relativePath property can optionally be used to reference a Template Spec artifact by path.
	RelativePath pulumi.StringPtrInput `pulumi:"relativePath"`
	// The URI of the template to deploy. Use either the uri or id property, but not both.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (TemplateLinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLinkResponse)(nil)).Elem()
}

func (i TemplateLinkResponseArgs) ToTemplateLinkResponseOutput() TemplateLinkResponseOutput {
	return i.ToTemplateLinkResponseOutputWithContext(context.Background())
}

func (i TemplateLinkResponseArgs) ToTemplateLinkResponseOutputWithContext(ctx context.Context) TemplateLinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLinkResponseOutput)
}

func (i TemplateLinkResponseArgs) ToTemplateLinkResponsePtrOutput() TemplateLinkResponsePtrOutput {
	return i.ToTemplateLinkResponsePtrOutputWithContext(context.Background())
}

func (i TemplateLinkResponseArgs) ToTemplateLinkResponsePtrOutputWithContext(ctx context.Context) TemplateLinkResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLinkResponseOutput).ToTemplateLinkResponsePtrOutputWithContext(ctx)
}

// TemplateLinkResponsePtrInput is an input type that accepts TemplateLinkResponseArgs, TemplateLinkResponsePtr and TemplateLinkResponsePtrOutput values.
// You can construct a concrete instance of `TemplateLinkResponsePtrInput` via:
//
//          TemplateLinkResponseArgs{...}
//
//  or:
//
//          nil
type TemplateLinkResponsePtrInput interface {
	pulumi.Input

	ToTemplateLinkResponsePtrOutput() TemplateLinkResponsePtrOutput
	ToTemplateLinkResponsePtrOutputWithContext(context.Context) TemplateLinkResponsePtrOutput
}

type templateLinkResponsePtrType TemplateLinkResponseArgs

func TemplateLinkResponsePtr(v *TemplateLinkResponseArgs) TemplateLinkResponsePtrInput {
	return (*templateLinkResponsePtrType)(v)
}

func (*templateLinkResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLinkResponse)(nil)).Elem()
}

func (i *templateLinkResponsePtrType) ToTemplateLinkResponsePtrOutput() TemplateLinkResponsePtrOutput {
	return i.ToTemplateLinkResponsePtrOutputWithContext(context.Background())
}

func (i *templateLinkResponsePtrType) ToTemplateLinkResponsePtrOutputWithContext(ctx context.Context) TemplateLinkResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLinkResponsePtrOutput)
}

// Entity representing the reference to the template.
type TemplateLinkResponseOutput struct{ *pulumi.OutputState }

func (TemplateLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLinkResponse)(nil)).Elem()
}

func (o TemplateLinkResponseOutput) ToTemplateLinkResponseOutput() TemplateLinkResponseOutput {
	return o
}

func (o TemplateLinkResponseOutput) ToTemplateLinkResponseOutputWithContext(ctx context.Context) TemplateLinkResponseOutput {
	return o
}

func (o TemplateLinkResponseOutput) ToTemplateLinkResponsePtrOutput() TemplateLinkResponsePtrOutput {
	return o.ToTemplateLinkResponsePtrOutputWithContext(context.Background())
}

func (o TemplateLinkResponseOutput) ToTemplateLinkResponsePtrOutputWithContext(ctx context.Context) TemplateLinkResponsePtrOutput {
	return o.ApplyT(func(v TemplateLinkResponse) *TemplateLinkResponse {
		return &v
	}).(TemplateLinkResponsePtrOutput)
}

// If included, must match the ContentVersion in the template.
func (o TemplateLinkResponseOutput) ContentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateLinkResponse) *string { return v.ContentVersion }).(pulumi.StringPtrOutput)
}

// The resource id of a Template Spec. Use either the id or uri property, but not both.
func (o TemplateLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Applicable only if this template link references a Template Spec. This relativePath property can optionally be used to reference a Template Spec artifact by path.
func (o TemplateLinkResponseOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateLinkResponse) *string { return v.RelativePath }).(pulumi.StringPtrOutput)
}

// The URI of the template to deploy. Use either the uri or id property, but not both.
func (o TemplateLinkResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateLinkResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type TemplateLinkResponsePtrOutput struct{ *pulumi.OutputState }

func (TemplateLinkResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLinkResponse)(nil)).Elem()
}

func (o TemplateLinkResponsePtrOutput) ToTemplateLinkResponsePtrOutput() TemplateLinkResponsePtrOutput {
	return o
}

func (o TemplateLinkResponsePtrOutput) ToTemplateLinkResponsePtrOutputWithContext(ctx context.Context) TemplateLinkResponsePtrOutput {
	return o
}

func (o TemplateLinkResponsePtrOutput) Elem() TemplateLinkResponseOutput {
	return o.ApplyT(func(v *TemplateLinkResponse) TemplateLinkResponse { return *v }).(TemplateLinkResponseOutput)
}

// If included, must match the ContentVersion in the template.
func (o TemplateLinkResponsePtrOutput) ContentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateLinkResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContentVersion
	}).(pulumi.StringPtrOutput)
}

// The resource id of a Template Spec. Use either the id or uri property, but not both.
func (o TemplateLinkResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateLinkResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Applicable only if this template link references a Template Spec. This relativePath property can optionally be used to reference a Template Spec artifact by path.
func (o TemplateLinkResponsePtrOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateLinkResponse) *string {
		if v == nil {
			return nil
		}
		return v.RelativePath
	}).(pulumi.StringPtrOutput)
}

// The URI of the template to deploy. Use either the uri or id property, but not both.
func (o TemplateLinkResponsePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateLinkResponse) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AliasPathMetadataResponseOutput{})
	pulumi.RegisterOutputType(AliasPathResponseOutput{})
	pulumi.RegisterOutputType(AliasPathResponseArrayOutput{})
	pulumi.RegisterOutputType(AliasPatternResponseOutput{})
	pulumi.RegisterOutputType(AliasPatternResponsePtrOutput{})
	pulumi.RegisterOutputType(AliasResponseOutput{})
	pulumi.RegisterOutputType(AliasResponseArrayOutput{})
	pulumi.RegisterOutputType(ApiProfileResponseOutput{})
	pulumi.RegisterOutputType(ApiProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(BasicDependencyResponseOutput{})
	pulumi.RegisterOutputType(BasicDependencyResponseArrayOutput{})
	pulumi.RegisterOutputType(CreateManagementGroupDetailsOutput{})
	pulumi.RegisterOutputType(CreateManagementGroupDetailsPtrOutput{})
	pulumi.RegisterOutputType(CreateParentGroupInfoOutput{})
	pulumi.RegisterOutputType(CreateParentGroupInfoPtrOutput{})
	pulumi.RegisterOutputType(DebugSettingOutput{})
	pulumi.RegisterOutputType(DebugSettingPtrOutput{})
	pulumi.RegisterOutputType(DebugSettingResponseOutput{})
	pulumi.RegisterOutputType(DebugSettingResponsePtrOutput{})
	pulumi.RegisterOutputType(DependencyResponseOutput{})
	pulumi.RegisterOutputType(DependencyResponseArrayOutput{})
	pulumi.RegisterOutputType(DeploymentPropertiesOutput{})
	pulumi.RegisterOutputType(DeploymentPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DeploymentPropertiesExtendedResponseOutput{})
	pulumi.RegisterOutputType(DeploymentPropertiesExtendedResponsePtrOutput{})
	pulumi.RegisterOutputType(DescendantParentGroupInfoResponseOutput{})
	pulumi.RegisterOutputType(DescendantParentGroupInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(EntityInfoResponseOutput{})
	pulumi.RegisterOutputType(EntityInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(EntityParentGroupInfoResponseOutput{})
	pulumi.RegisterOutputType(EntityParentGroupInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(ErrorAdditionalInfoResponseOutput{})
	pulumi.RegisterOutputType(ErrorAdditionalInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(ErrorResponseResponseOutput{})
	pulumi.RegisterOutputType(ErrorResponseResponsePtrOutput{})
	pulumi.RegisterOutputType(ErrorResponseResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressionEvaluationOptionsOutput{})
	pulumi.RegisterOutputType(ExpressionEvaluationOptionsPtrOutput{})
	pulumi.RegisterOutputType(ManagementGroupChildInfoResponseOutput{})
	pulumi.RegisterOutputType(ManagementGroupChildInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagementGroupDetailsResponseOutput{})
	pulumi.RegisterOutputType(ManagementGroupDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagementGroupPathElementResponseOutput{})
	pulumi.RegisterOutputType(ManagementGroupPathElementResponseArrayOutput{})
	pulumi.RegisterOutputType(OnErrorDeploymentOutput{})
	pulumi.RegisterOutputType(OnErrorDeploymentPtrOutput{})
	pulumi.RegisterOutputType(OnErrorDeploymentExtendedResponseOutput{})
	pulumi.RegisterOutputType(OnErrorDeploymentExtendedResponsePtrOutput{})
	pulumi.RegisterOutputType(ParameterDefinitionsValueOutput{})
	pulumi.RegisterOutputType(ParameterDefinitionsValueMapOutput{})
	pulumi.RegisterOutputType(ParameterDefinitionsValueMetadataOutput{})
	pulumi.RegisterOutputType(ParameterDefinitionsValueMetadataPtrOutput{})
	pulumi.RegisterOutputType(ParameterDefinitionsValueResponseOutput{})
	pulumi.RegisterOutputType(ParameterDefinitionsValueResponseMapOutput{})
	pulumi.RegisterOutputType(ParameterDefinitionsValueResponseMetadataOutput{})
	pulumi.RegisterOutputType(ParameterDefinitionsValueResponseMetadataPtrOutput{})
	pulumi.RegisterOutputType(ParameterValuesValueOutput{})
	pulumi.RegisterOutputType(ParameterValuesValueMapOutput{})
	pulumi.RegisterOutputType(ParameterValuesValueResponseOutput{})
	pulumi.RegisterOutputType(ParameterValuesValueResponseMapOutput{})
	pulumi.RegisterOutputType(ParametersLinkOutput{})
	pulumi.RegisterOutputType(ParametersLinkPtrOutput{})
	pulumi.RegisterOutputType(ParametersLinkResponseOutput{})
	pulumi.RegisterOutputType(ParametersLinkResponsePtrOutput{})
	pulumi.RegisterOutputType(ParentGroupInfoResponseOutput{})
	pulumi.RegisterOutputType(ParentGroupInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionGroupOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionGroupResponseOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionReferenceOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionReferenceArrayOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionReferenceResponseOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(ProviderResourceTypeResponseOutput{})
	pulumi.RegisterOutputType(ProviderResourceTypeResponseArrayOutput{})
	pulumi.RegisterOutputType(ProviderResponseOutput{})
	pulumi.RegisterOutputType(ProviderResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(TemplateLinkOutput{})
	pulumi.RegisterOutputType(TemplateLinkPtrOutput{})
	pulumi.RegisterOutputType(TemplateLinkResponseOutput{})
	pulumi.RegisterOutputType(TemplateLinkResponsePtrOutput{})
}
