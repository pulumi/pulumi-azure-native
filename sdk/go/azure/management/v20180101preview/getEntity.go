// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes the result of the request to view entities.
func GetEntity(ctx *pulumi.Context, args *GetEntityArgs, opts ...pulumi.InvokeOption) (*GetEntityResult, error) {
	var rv GetEntityResult
	err := ctx.Invoke("azure-native:management/v20180101preview:getEntity", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetEntityArgs struct {
	// A filter which allows the call to be filtered for a specific group.
	GroupName *string `pulumi:"groupName"`
	// Page continuation token is only used if a previous operation returned a partial result.
	// If a previous response contains a nextLink element, the value of the nextLink element will include a token parameter that specifies a starting point to use for subsequent calls.
	Skiptoken *string `pulumi:"skiptoken"`
}

// Describes the result of the request to view entities.
type GetEntityResult struct {
	// The URL to use for getting the next set of results.
	NextLink string `pulumi:"nextLink"`
	// The list of entities.
	Value []EntityInfoResponse `pulumi:"value"`
}

func GetEntityOutput(ctx *pulumi.Context, args GetEntityOutputArgs, opts ...pulumi.InvokeOption) GetEntityResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEntityResult, error) {
			args := v.(GetEntityArgs)
			r, err := GetEntity(ctx, &args, opts...)
			var s GetEntityResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEntityResultOutput)
}

type GetEntityOutputArgs struct {
	// A filter which allows the call to be filtered for a specific group.
	GroupName pulumi.StringPtrInput `pulumi:"groupName"`
	// Page continuation token is only used if a previous operation returned a partial result.
	// If a previous response contains a nextLink element, the value of the nextLink element will include a token parameter that specifies a starting point to use for subsequent calls.
	Skiptoken pulumi.StringPtrInput `pulumi:"skiptoken"`
}

func (GetEntityOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntityArgs)(nil)).Elem()
}

// Describes the result of the request to view entities.
type GetEntityResultOutput struct{ *pulumi.OutputState }

func (GetEntityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntityResult)(nil)).Elem()
}

func (o GetEntityResultOutput) ToGetEntityResultOutput() GetEntityResultOutput {
	return o
}

func (o GetEntityResultOutput) ToGetEntityResultOutputWithContext(ctx context.Context) GetEntityResultOutput {
	return o
}

// The URL to use for getting the next set of results.
func (o GetEntityResultOutput) NextLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntityResult) string { return v.NextLink }).(pulumi.StringOutput)
}

// The list of entities.
func (o GetEntityResultOutput) Value() EntityInfoResponseArrayOutput {
	return o.ApplyT(func(v GetEntityResult) []EntityInfoResponse { return v.Value }).(EntityInfoResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEntityResultOutput{})
}
