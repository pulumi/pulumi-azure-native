


package v20180715preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AzureActiveDirectoryApp struct {
	AppKey        string `pulumi:"appKey"`
	ApplicationId string `pulumi:"applicationId"`
	TenantId      string `pulumi:"tenantId"`
}





type AzureActiveDirectoryAppInput interface {
	pulumi.Input

	ToAzureActiveDirectoryAppOutput() AzureActiveDirectoryAppOutput
	ToAzureActiveDirectoryAppOutputWithContext(context.Context) AzureActiveDirectoryAppOutput
}

type AzureActiveDirectoryAppArgs struct {
	AppKey        pulumi.StringInput `pulumi:"appKey"`
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	TenantId      pulumi.StringInput `pulumi:"tenantId"`
}

func (AzureActiveDirectoryAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryApp)(nil)).Elem()
}

func (i AzureActiveDirectoryAppArgs) ToAzureActiveDirectoryAppOutput() AzureActiveDirectoryAppOutput {
	return i.ToAzureActiveDirectoryAppOutputWithContext(context.Background())
}

func (i AzureActiveDirectoryAppArgs) ToAzureActiveDirectoryAppOutputWithContext(ctx context.Context) AzureActiveDirectoryAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryAppOutput)
}

func (i AzureActiveDirectoryAppArgs) ToAzureActiveDirectoryAppPtrOutput() AzureActiveDirectoryAppPtrOutput {
	return i.ToAzureActiveDirectoryAppPtrOutputWithContext(context.Background())
}

func (i AzureActiveDirectoryAppArgs) ToAzureActiveDirectoryAppPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryAppOutput).ToAzureActiveDirectoryAppPtrOutputWithContext(ctx)
}









type AzureActiveDirectoryAppPtrInput interface {
	pulumi.Input

	ToAzureActiveDirectoryAppPtrOutput() AzureActiveDirectoryAppPtrOutput
	ToAzureActiveDirectoryAppPtrOutputWithContext(context.Context) AzureActiveDirectoryAppPtrOutput
}

type azureActiveDirectoryAppPtrType AzureActiveDirectoryAppArgs

func AzureActiveDirectoryAppPtr(v *AzureActiveDirectoryAppArgs) AzureActiveDirectoryAppPtrInput {
	return (*azureActiveDirectoryAppPtrType)(v)
}

func (*azureActiveDirectoryAppPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryApp)(nil)).Elem()
}

func (i *azureActiveDirectoryAppPtrType) ToAzureActiveDirectoryAppPtrOutput() AzureActiveDirectoryAppPtrOutput {
	return i.ToAzureActiveDirectoryAppPtrOutputWithContext(context.Background())
}

func (i *azureActiveDirectoryAppPtrType) ToAzureActiveDirectoryAppPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryAppPtrOutput)
}

type AzureActiveDirectoryAppOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryApp)(nil)).Elem()
}

func (o AzureActiveDirectoryAppOutput) ToAzureActiveDirectoryAppOutput() AzureActiveDirectoryAppOutput {
	return o
}

func (o AzureActiveDirectoryAppOutput) ToAzureActiveDirectoryAppOutputWithContext(ctx context.Context) AzureActiveDirectoryAppOutput {
	return o
}

func (o AzureActiveDirectoryAppOutput) ToAzureActiveDirectoryAppPtrOutput() AzureActiveDirectoryAppPtrOutput {
	return o.ToAzureActiveDirectoryAppPtrOutputWithContext(context.Background())
}

func (o AzureActiveDirectoryAppOutput) ToAzureActiveDirectoryAppPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureActiveDirectoryApp) *AzureActiveDirectoryApp {
		return &v
	}).(AzureActiveDirectoryAppPtrOutput)
}

func (o AzureActiveDirectoryAppOutput) AppKey() pulumi.StringOutput {
	return o.ApplyT(func(v AzureActiveDirectoryApp) string { return v.AppKey }).(pulumi.StringOutput)
}

func (o AzureActiveDirectoryAppOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureActiveDirectoryApp) string { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o AzureActiveDirectoryAppOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureActiveDirectoryApp) string { return v.TenantId }).(pulumi.StringOutput)
}

type AzureActiveDirectoryAppPtrOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryAppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryApp)(nil)).Elem()
}

func (o AzureActiveDirectoryAppPtrOutput) ToAzureActiveDirectoryAppPtrOutput() AzureActiveDirectoryAppPtrOutput {
	return o
}

func (o AzureActiveDirectoryAppPtrOutput) ToAzureActiveDirectoryAppPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppPtrOutput {
	return o
}

func (o AzureActiveDirectoryAppPtrOutput) Elem() AzureActiveDirectoryAppOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryApp) AzureActiveDirectoryApp {
		if v != nil {
			return *v
		}
		var ret AzureActiveDirectoryApp
		return ret
	}).(AzureActiveDirectoryAppOutput)
}

func (o AzureActiveDirectoryAppPtrOutput) AppKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryApp) *string {
		if v == nil {
			return nil
		}
		return &v.AppKey
	}).(pulumi.StringPtrOutput)
}

func (o AzureActiveDirectoryAppPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryApp) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

func (o AzureActiveDirectoryAppPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryApp) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

type AzureActiveDirectoryAppResponse struct {
	AppKey        string `pulumi:"appKey"`
	ApplicationId string `pulumi:"applicationId"`
	TenantId      string `pulumi:"tenantId"`
}





type AzureActiveDirectoryAppResponseInput interface {
	pulumi.Input

	ToAzureActiveDirectoryAppResponseOutput() AzureActiveDirectoryAppResponseOutput
	ToAzureActiveDirectoryAppResponseOutputWithContext(context.Context) AzureActiveDirectoryAppResponseOutput
}

type AzureActiveDirectoryAppResponseArgs struct {
	AppKey        pulumi.StringInput `pulumi:"appKey"`
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	TenantId      pulumi.StringInput `pulumi:"tenantId"`
}

func (AzureActiveDirectoryAppResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryAppResponse)(nil)).Elem()
}

func (i AzureActiveDirectoryAppResponseArgs) ToAzureActiveDirectoryAppResponseOutput() AzureActiveDirectoryAppResponseOutput {
	return i.ToAzureActiveDirectoryAppResponseOutputWithContext(context.Background())
}

func (i AzureActiveDirectoryAppResponseArgs) ToAzureActiveDirectoryAppResponseOutputWithContext(ctx context.Context) AzureActiveDirectoryAppResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryAppResponseOutput)
}

func (i AzureActiveDirectoryAppResponseArgs) ToAzureActiveDirectoryAppResponsePtrOutput() AzureActiveDirectoryAppResponsePtrOutput {
	return i.ToAzureActiveDirectoryAppResponsePtrOutputWithContext(context.Background())
}

func (i AzureActiveDirectoryAppResponseArgs) ToAzureActiveDirectoryAppResponsePtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryAppResponseOutput).ToAzureActiveDirectoryAppResponsePtrOutputWithContext(ctx)
}









type AzureActiveDirectoryAppResponsePtrInput interface {
	pulumi.Input

	ToAzureActiveDirectoryAppResponsePtrOutput() AzureActiveDirectoryAppResponsePtrOutput
	ToAzureActiveDirectoryAppResponsePtrOutputWithContext(context.Context) AzureActiveDirectoryAppResponsePtrOutput
}

type azureActiveDirectoryAppResponsePtrType AzureActiveDirectoryAppResponseArgs

func AzureActiveDirectoryAppResponsePtr(v *AzureActiveDirectoryAppResponseArgs) AzureActiveDirectoryAppResponsePtrInput {
	return (*azureActiveDirectoryAppResponsePtrType)(v)
}

func (*azureActiveDirectoryAppResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryAppResponse)(nil)).Elem()
}

func (i *azureActiveDirectoryAppResponsePtrType) ToAzureActiveDirectoryAppResponsePtrOutput() AzureActiveDirectoryAppResponsePtrOutput {
	return i.ToAzureActiveDirectoryAppResponsePtrOutputWithContext(context.Background())
}

func (i *azureActiveDirectoryAppResponsePtrType) ToAzureActiveDirectoryAppResponsePtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryAppResponsePtrOutput)
}

type AzureActiveDirectoryAppResponseOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryAppResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryAppResponse)(nil)).Elem()
}

func (o AzureActiveDirectoryAppResponseOutput) ToAzureActiveDirectoryAppResponseOutput() AzureActiveDirectoryAppResponseOutput {
	return o
}

func (o AzureActiveDirectoryAppResponseOutput) ToAzureActiveDirectoryAppResponseOutputWithContext(ctx context.Context) AzureActiveDirectoryAppResponseOutput {
	return o
}

func (o AzureActiveDirectoryAppResponseOutput) ToAzureActiveDirectoryAppResponsePtrOutput() AzureActiveDirectoryAppResponsePtrOutput {
	return o.ToAzureActiveDirectoryAppResponsePtrOutputWithContext(context.Background())
}

func (o AzureActiveDirectoryAppResponseOutput) ToAzureActiveDirectoryAppResponsePtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureActiveDirectoryAppResponse) *AzureActiveDirectoryAppResponse {
		return &v
	}).(AzureActiveDirectoryAppResponsePtrOutput)
}

func (o AzureActiveDirectoryAppResponseOutput) AppKey() pulumi.StringOutput {
	return o.ApplyT(func(v AzureActiveDirectoryAppResponse) string { return v.AppKey }).(pulumi.StringOutput)
}

func (o AzureActiveDirectoryAppResponseOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureActiveDirectoryAppResponse) string { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o AzureActiveDirectoryAppResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureActiveDirectoryAppResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

type AzureActiveDirectoryAppResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryAppResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryAppResponse)(nil)).Elem()
}

func (o AzureActiveDirectoryAppResponsePtrOutput) ToAzureActiveDirectoryAppResponsePtrOutput() AzureActiveDirectoryAppResponsePtrOutput {
	return o
}

func (o AzureActiveDirectoryAppResponsePtrOutput) ToAzureActiveDirectoryAppResponsePtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppResponsePtrOutput {
	return o
}

func (o AzureActiveDirectoryAppResponsePtrOutput) Elem() AzureActiveDirectoryAppResponseOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryAppResponse) AzureActiveDirectoryAppResponse {
		if v != nil {
			return *v
		}
		var ret AzureActiveDirectoryAppResponse
		return ret
	}).(AzureActiveDirectoryAppResponseOutput)
}

func (o AzureActiveDirectoryAppResponsePtrOutput) AppKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryAppResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AppKey
	}).(pulumi.StringPtrOutput)
}

func (o AzureActiveDirectoryAppResponsePtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryAppResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

func (o AzureActiveDirectoryAppResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryAppResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

type BackupFileInfoResponse struct {
	FamilySequenceNumber *int    `pulumi:"familySequenceNumber"`
	FileLocation         *string `pulumi:"fileLocation"`
	Status               *string `pulumi:"status"`
}





type BackupFileInfoResponseInput interface {
	pulumi.Input

	ToBackupFileInfoResponseOutput() BackupFileInfoResponseOutput
	ToBackupFileInfoResponseOutputWithContext(context.Context) BackupFileInfoResponseOutput
}

type BackupFileInfoResponseArgs struct {
	FamilySequenceNumber pulumi.IntPtrInput    `pulumi:"familySequenceNumber"`
	FileLocation         pulumi.StringPtrInput `pulumi:"fileLocation"`
	Status               pulumi.StringPtrInput `pulumi:"status"`
}

func (BackupFileInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupFileInfoResponse)(nil)).Elem()
}

func (i BackupFileInfoResponseArgs) ToBackupFileInfoResponseOutput() BackupFileInfoResponseOutput {
	return i.ToBackupFileInfoResponseOutputWithContext(context.Background())
}

func (i BackupFileInfoResponseArgs) ToBackupFileInfoResponseOutputWithContext(ctx context.Context) BackupFileInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupFileInfoResponseOutput)
}





type BackupFileInfoResponseArrayInput interface {
	pulumi.Input

	ToBackupFileInfoResponseArrayOutput() BackupFileInfoResponseArrayOutput
	ToBackupFileInfoResponseArrayOutputWithContext(context.Context) BackupFileInfoResponseArrayOutput
}

type BackupFileInfoResponseArray []BackupFileInfoResponseInput

func (BackupFileInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupFileInfoResponse)(nil)).Elem()
}

func (i BackupFileInfoResponseArray) ToBackupFileInfoResponseArrayOutput() BackupFileInfoResponseArrayOutput {
	return i.ToBackupFileInfoResponseArrayOutputWithContext(context.Background())
}

func (i BackupFileInfoResponseArray) ToBackupFileInfoResponseArrayOutputWithContext(ctx context.Context) BackupFileInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupFileInfoResponseArrayOutput)
}

type BackupFileInfoResponseOutput struct{ *pulumi.OutputState }

func (BackupFileInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupFileInfoResponse)(nil)).Elem()
}

func (o BackupFileInfoResponseOutput) ToBackupFileInfoResponseOutput() BackupFileInfoResponseOutput {
	return o
}

func (o BackupFileInfoResponseOutput) ToBackupFileInfoResponseOutputWithContext(ctx context.Context) BackupFileInfoResponseOutput {
	return o
}

func (o BackupFileInfoResponseOutput) FamilySequenceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupFileInfoResponse) *int { return v.FamilySequenceNumber }).(pulumi.IntPtrOutput)
}

func (o BackupFileInfoResponseOutput) FileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupFileInfoResponse) *string { return v.FileLocation }).(pulumi.StringPtrOutput)
}

func (o BackupFileInfoResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupFileInfoResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type BackupFileInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (BackupFileInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupFileInfoResponse)(nil)).Elem()
}

func (o BackupFileInfoResponseArrayOutput) ToBackupFileInfoResponseArrayOutput() BackupFileInfoResponseArrayOutput {
	return o
}

func (o BackupFileInfoResponseArrayOutput) ToBackupFileInfoResponseArrayOutputWithContext(ctx context.Context) BackupFileInfoResponseArrayOutput {
	return o
}

func (o BackupFileInfoResponseArrayOutput) Index(i pulumi.IntInput) BackupFileInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupFileInfoResponse {
		return vs[0].([]BackupFileInfoResponse)[vs[1].(int)]
	}).(BackupFileInfoResponseOutput)
}

type BackupSetInfoResponse struct {
	BackupFinishedDate *string                  `pulumi:"backupFinishedDate"`
	BackupSetId        *string                  `pulumi:"backupSetId"`
	BackupStartDate    *string                  `pulumi:"backupStartDate"`
	BackupType         *string                  `pulumi:"backupType"`
	DatabaseName       *string                  `pulumi:"databaseName"`
	FirstLsn           *string                  `pulumi:"firstLsn"`
	IsBackupRestored   *bool                    `pulumi:"isBackupRestored"`
	LastLsn            *string                  `pulumi:"lastLsn"`
	LastModifiedTime   *string                  `pulumi:"lastModifiedTime"`
	ListOfBackupFiles  []BackupFileInfoResponse `pulumi:"listOfBackupFiles"`
}





type BackupSetInfoResponseInput interface {
	pulumi.Input

	ToBackupSetInfoResponseOutput() BackupSetInfoResponseOutput
	ToBackupSetInfoResponseOutputWithContext(context.Context) BackupSetInfoResponseOutput
}

type BackupSetInfoResponseArgs struct {
	BackupFinishedDate pulumi.StringPtrInput            `pulumi:"backupFinishedDate"`
	BackupSetId        pulumi.StringPtrInput            `pulumi:"backupSetId"`
	BackupStartDate    pulumi.StringPtrInput            `pulumi:"backupStartDate"`
	BackupType         pulumi.StringPtrInput            `pulumi:"backupType"`
	DatabaseName       pulumi.StringPtrInput            `pulumi:"databaseName"`
	FirstLsn           pulumi.StringPtrInput            `pulumi:"firstLsn"`
	IsBackupRestored   pulumi.BoolPtrInput              `pulumi:"isBackupRestored"`
	LastLsn            pulumi.StringPtrInput            `pulumi:"lastLsn"`
	LastModifiedTime   pulumi.StringPtrInput            `pulumi:"lastModifiedTime"`
	ListOfBackupFiles  BackupFileInfoResponseArrayInput `pulumi:"listOfBackupFiles"`
}

func (BackupSetInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSetInfoResponse)(nil)).Elem()
}

func (i BackupSetInfoResponseArgs) ToBackupSetInfoResponseOutput() BackupSetInfoResponseOutput {
	return i.ToBackupSetInfoResponseOutputWithContext(context.Background())
}

func (i BackupSetInfoResponseArgs) ToBackupSetInfoResponseOutputWithContext(ctx context.Context) BackupSetInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSetInfoResponseOutput)
}





type BackupSetInfoResponseArrayInput interface {
	pulumi.Input

	ToBackupSetInfoResponseArrayOutput() BackupSetInfoResponseArrayOutput
	ToBackupSetInfoResponseArrayOutputWithContext(context.Context) BackupSetInfoResponseArrayOutput
}

type BackupSetInfoResponseArray []BackupSetInfoResponseInput

func (BackupSetInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupSetInfoResponse)(nil)).Elem()
}

func (i BackupSetInfoResponseArray) ToBackupSetInfoResponseArrayOutput() BackupSetInfoResponseArrayOutput {
	return i.ToBackupSetInfoResponseArrayOutputWithContext(context.Background())
}

func (i BackupSetInfoResponseArray) ToBackupSetInfoResponseArrayOutputWithContext(ctx context.Context) BackupSetInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSetInfoResponseArrayOutput)
}

type BackupSetInfoResponseOutput struct{ *pulumi.OutputState }

func (BackupSetInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSetInfoResponse)(nil)).Elem()
}

func (o BackupSetInfoResponseOutput) ToBackupSetInfoResponseOutput() BackupSetInfoResponseOutput {
	return o
}

func (o BackupSetInfoResponseOutput) ToBackupSetInfoResponseOutputWithContext(ctx context.Context) BackupSetInfoResponseOutput {
	return o
}

func (o BackupSetInfoResponseOutput) BackupFinishedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) *string { return v.BackupFinishedDate }).(pulumi.StringPtrOutput)
}

func (o BackupSetInfoResponseOutput) BackupSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) *string { return v.BackupSetId }).(pulumi.StringPtrOutput)
}

func (o BackupSetInfoResponseOutput) BackupStartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) *string { return v.BackupStartDate }).(pulumi.StringPtrOutput)
}

func (o BackupSetInfoResponseOutput) BackupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) *string { return v.BackupType }).(pulumi.StringPtrOutput)
}

func (o BackupSetInfoResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

func (o BackupSetInfoResponseOutput) FirstLsn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) *string { return v.FirstLsn }).(pulumi.StringPtrOutput)
}

func (o BackupSetInfoResponseOutput) IsBackupRestored() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) *bool { return v.IsBackupRestored }).(pulumi.BoolPtrOutput)
}

func (o BackupSetInfoResponseOutput) LastLsn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) *string { return v.LastLsn }).(pulumi.StringPtrOutput)
}

func (o BackupSetInfoResponseOutput) LastModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) *string { return v.LastModifiedTime }).(pulumi.StringPtrOutput)
}

func (o BackupSetInfoResponseOutput) ListOfBackupFiles() BackupFileInfoResponseArrayOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) []BackupFileInfoResponse { return v.ListOfBackupFiles }).(BackupFileInfoResponseArrayOutput)
}

type BackupSetInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (BackupSetInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupSetInfoResponse)(nil)).Elem()
}

func (o BackupSetInfoResponseArrayOutput) ToBackupSetInfoResponseArrayOutput() BackupSetInfoResponseArrayOutput {
	return o
}

func (o BackupSetInfoResponseArrayOutput) ToBackupSetInfoResponseArrayOutputWithContext(ctx context.Context) BackupSetInfoResponseArrayOutput {
	return o
}

func (o BackupSetInfoResponseArrayOutput) Index(i pulumi.IntInput) BackupSetInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupSetInfoResponse {
		return vs[0].([]BackupSetInfoResponse)[vs[1].(int)]
	}).(BackupSetInfoResponseOutput)
}

type BlobShare struct {
	SasUri string `pulumi:"sasUri"`
}





type BlobShareInput interface {
	pulumi.Input

	ToBlobShareOutput() BlobShareOutput
	ToBlobShareOutputWithContext(context.Context) BlobShareOutput
}

type BlobShareArgs struct {
	SasUri pulumi.StringInput `pulumi:"sasUri"`
}

func (BlobShareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobShare)(nil)).Elem()
}

func (i BlobShareArgs) ToBlobShareOutput() BlobShareOutput {
	return i.ToBlobShareOutputWithContext(context.Background())
}

func (i BlobShareArgs) ToBlobShareOutputWithContext(ctx context.Context) BlobShareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobShareOutput)
}

func (i BlobShareArgs) ToBlobSharePtrOutput() BlobSharePtrOutput {
	return i.ToBlobSharePtrOutputWithContext(context.Background())
}

func (i BlobShareArgs) ToBlobSharePtrOutputWithContext(ctx context.Context) BlobSharePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobShareOutput).ToBlobSharePtrOutputWithContext(ctx)
}









type BlobSharePtrInput interface {
	pulumi.Input

	ToBlobSharePtrOutput() BlobSharePtrOutput
	ToBlobSharePtrOutputWithContext(context.Context) BlobSharePtrOutput
}

type blobSharePtrType BlobShareArgs

func BlobSharePtr(v *BlobShareArgs) BlobSharePtrInput {
	return (*blobSharePtrType)(v)
}

func (*blobSharePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobShare)(nil)).Elem()
}

func (i *blobSharePtrType) ToBlobSharePtrOutput() BlobSharePtrOutput {
	return i.ToBlobSharePtrOutputWithContext(context.Background())
}

func (i *blobSharePtrType) ToBlobSharePtrOutputWithContext(ctx context.Context) BlobSharePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobSharePtrOutput)
}

type BlobShareOutput struct{ *pulumi.OutputState }

func (BlobShareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobShare)(nil)).Elem()
}

func (o BlobShareOutput) ToBlobShareOutput() BlobShareOutput {
	return o
}

func (o BlobShareOutput) ToBlobShareOutputWithContext(ctx context.Context) BlobShareOutput {
	return o
}

func (o BlobShareOutput) ToBlobSharePtrOutput() BlobSharePtrOutput {
	return o.ToBlobSharePtrOutputWithContext(context.Background())
}

func (o BlobShareOutput) ToBlobSharePtrOutputWithContext(ctx context.Context) BlobSharePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlobShare) *BlobShare {
		return &v
	}).(BlobSharePtrOutput)
}

func (o BlobShareOutput) SasUri() pulumi.StringOutput {
	return o.ApplyT(func(v BlobShare) string { return v.SasUri }).(pulumi.StringOutput)
}

type BlobSharePtrOutput struct{ *pulumi.OutputState }

func (BlobSharePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobShare)(nil)).Elem()
}

func (o BlobSharePtrOutput) ToBlobSharePtrOutput() BlobSharePtrOutput {
	return o
}

func (o BlobSharePtrOutput) ToBlobSharePtrOutputWithContext(ctx context.Context) BlobSharePtrOutput {
	return o
}

func (o BlobSharePtrOutput) Elem() BlobShareOutput {
	return o.ApplyT(func(v *BlobShare) BlobShare {
		if v != nil {
			return *v
		}
		var ret BlobShare
		return ret
	}).(BlobShareOutput)
}

func (o BlobSharePtrOutput) SasUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlobShare) *string {
		if v == nil {
			return nil
		}
		return &v.SasUri
	}).(pulumi.StringPtrOutput)
}

type BlobShareResponse struct {
	SasUri string `pulumi:"sasUri"`
}





type BlobShareResponseInput interface {
	pulumi.Input

	ToBlobShareResponseOutput() BlobShareResponseOutput
	ToBlobShareResponseOutputWithContext(context.Context) BlobShareResponseOutput
}

type BlobShareResponseArgs struct {
	SasUri pulumi.StringInput `pulumi:"sasUri"`
}

func (BlobShareResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobShareResponse)(nil)).Elem()
}

func (i BlobShareResponseArgs) ToBlobShareResponseOutput() BlobShareResponseOutput {
	return i.ToBlobShareResponseOutputWithContext(context.Background())
}

func (i BlobShareResponseArgs) ToBlobShareResponseOutputWithContext(ctx context.Context) BlobShareResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobShareResponseOutput)
}

func (i BlobShareResponseArgs) ToBlobShareResponsePtrOutput() BlobShareResponsePtrOutput {
	return i.ToBlobShareResponsePtrOutputWithContext(context.Background())
}

func (i BlobShareResponseArgs) ToBlobShareResponsePtrOutputWithContext(ctx context.Context) BlobShareResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobShareResponseOutput).ToBlobShareResponsePtrOutputWithContext(ctx)
}









type BlobShareResponsePtrInput interface {
	pulumi.Input

	ToBlobShareResponsePtrOutput() BlobShareResponsePtrOutput
	ToBlobShareResponsePtrOutputWithContext(context.Context) BlobShareResponsePtrOutput
}

type blobShareResponsePtrType BlobShareResponseArgs

func BlobShareResponsePtr(v *BlobShareResponseArgs) BlobShareResponsePtrInput {
	return (*blobShareResponsePtrType)(v)
}

func (*blobShareResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobShareResponse)(nil)).Elem()
}

func (i *blobShareResponsePtrType) ToBlobShareResponsePtrOutput() BlobShareResponsePtrOutput {
	return i.ToBlobShareResponsePtrOutputWithContext(context.Background())
}

func (i *blobShareResponsePtrType) ToBlobShareResponsePtrOutputWithContext(ctx context.Context) BlobShareResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobShareResponsePtrOutput)
}

type BlobShareResponseOutput struct{ *pulumi.OutputState }

func (BlobShareResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobShareResponse)(nil)).Elem()
}

func (o BlobShareResponseOutput) ToBlobShareResponseOutput() BlobShareResponseOutput {
	return o
}

func (o BlobShareResponseOutput) ToBlobShareResponseOutputWithContext(ctx context.Context) BlobShareResponseOutput {
	return o
}

func (o BlobShareResponseOutput) ToBlobShareResponsePtrOutput() BlobShareResponsePtrOutput {
	return o.ToBlobShareResponsePtrOutputWithContext(context.Background())
}

func (o BlobShareResponseOutput) ToBlobShareResponsePtrOutputWithContext(ctx context.Context) BlobShareResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlobShareResponse) *BlobShareResponse {
		return &v
	}).(BlobShareResponsePtrOutput)
}

func (o BlobShareResponseOutput) SasUri() pulumi.StringOutput {
	return o.ApplyT(func(v BlobShareResponse) string { return v.SasUri }).(pulumi.StringOutput)
}

type BlobShareResponsePtrOutput struct{ *pulumi.OutputState }

func (BlobShareResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobShareResponse)(nil)).Elem()
}

func (o BlobShareResponsePtrOutput) ToBlobShareResponsePtrOutput() BlobShareResponsePtrOutput {
	return o
}

func (o BlobShareResponsePtrOutput) ToBlobShareResponsePtrOutputWithContext(ctx context.Context) BlobShareResponsePtrOutput {
	return o
}

func (o BlobShareResponsePtrOutput) Elem() BlobShareResponseOutput {
	return o.ApplyT(func(v *BlobShareResponse) BlobShareResponse {
		if v != nil {
			return *v
		}
		var ret BlobShareResponse
		return ret
	}).(BlobShareResponseOutput)
}

func (o BlobShareResponsePtrOutput) SasUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlobShareResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SasUri
	}).(pulumi.StringPtrOutput)
}

type ConnectToMongoDbTaskProperties struct {
	ClientData map[string]string      `pulumi:"clientData"`
	Input      *MongoDbConnectionInfo `pulumi:"input"`
	TaskType   string                 `pulumi:"taskType"`
}





type ConnectToMongoDbTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToMongoDbTaskPropertiesOutput() ConnectToMongoDbTaskPropertiesOutput
	ToConnectToMongoDbTaskPropertiesOutputWithContext(context.Context) ConnectToMongoDbTaskPropertiesOutput
}

type ConnectToMongoDbTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput         `pulumi:"clientData"`
	Input      MongoDbConnectionInfoPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput            `pulumi:"taskType"`
}

func (ConnectToMongoDbTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToMongoDbTaskProperties)(nil)).Elem()
}

func (i ConnectToMongoDbTaskPropertiesArgs) ToConnectToMongoDbTaskPropertiesOutput() ConnectToMongoDbTaskPropertiesOutput {
	return i.ToConnectToMongoDbTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToMongoDbTaskPropertiesArgs) ToConnectToMongoDbTaskPropertiesOutputWithContext(ctx context.Context) ConnectToMongoDbTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToMongoDbTaskPropertiesOutput)
}

type ConnectToMongoDbTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToMongoDbTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToMongoDbTaskProperties)(nil)).Elem()
}

func (o ConnectToMongoDbTaskPropertiesOutput) ToConnectToMongoDbTaskPropertiesOutput() ConnectToMongoDbTaskPropertiesOutput {
	return o
}

func (o ConnectToMongoDbTaskPropertiesOutput) ToConnectToMongoDbTaskPropertiesOutputWithContext(ctx context.Context) ConnectToMongoDbTaskPropertiesOutput {
	return o
}

func (o ConnectToMongoDbTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToMongoDbTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToMongoDbTaskPropertiesOutput) Input() MongoDbConnectionInfoPtrOutput {
	return o.ApplyT(func(v ConnectToMongoDbTaskProperties) *MongoDbConnectionInfo { return v.Input }).(MongoDbConnectionInfoPtrOutput)
}

func (o ConnectToMongoDbTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToMongoDbTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToMongoDbTaskPropertiesResponse struct {
	ClientData map[string]string              `pulumi:"clientData"`
	Commands   []interface{}                  `pulumi:"commands"`
	Errors     []ODataErrorResponse           `pulumi:"errors"`
	Input      *MongoDbConnectionInfoResponse `pulumi:"input"`
	Output     []MongoDbClusterInfoResponse   `pulumi:"output"`
	State      string                         `pulumi:"state"`
	TaskType   string                         `pulumi:"taskType"`
}





type ConnectToMongoDbTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToMongoDbTaskPropertiesResponseOutput() ConnectToMongoDbTaskPropertiesResponseOutput
	ToConnectToMongoDbTaskPropertiesResponseOutputWithContext(context.Context) ConnectToMongoDbTaskPropertiesResponseOutput
}

type ConnectToMongoDbTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                 `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                     `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput          `pulumi:"errors"`
	Input      MongoDbConnectionInfoResponsePtrInput `pulumi:"input"`
	Output     MongoDbClusterInfoResponseArrayInput  `pulumi:"output"`
	State      pulumi.StringInput                    `pulumi:"state"`
	TaskType   pulumi.StringInput                    `pulumi:"taskType"`
}

func (ConnectToMongoDbTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToMongoDbTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToMongoDbTaskPropertiesResponseArgs) ToConnectToMongoDbTaskPropertiesResponseOutput() ConnectToMongoDbTaskPropertiesResponseOutput {
	return i.ToConnectToMongoDbTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToMongoDbTaskPropertiesResponseArgs) ToConnectToMongoDbTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToMongoDbTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToMongoDbTaskPropertiesResponseOutput)
}

type ConnectToMongoDbTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToMongoDbTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToMongoDbTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToMongoDbTaskPropertiesResponseOutput) ToConnectToMongoDbTaskPropertiesResponseOutput() ConnectToMongoDbTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToMongoDbTaskPropertiesResponseOutput) ToConnectToMongoDbTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToMongoDbTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToMongoDbTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToMongoDbTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToMongoDbTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToMongoDbTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o ConnectToMongoDbTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToMongoDbTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o ConnectToMongoDbTaskPropertiesResponseOutput) Input() MongoDbConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v ConnectToMongoDbTaskPropertiesResponse) *MongoDbConnectionInfoResponse { return v.Input }).(MongoDbConnectionInfoResponsePtrOutput)
}

func (o ConnectToMongoDbTaskPropertiesResponseOutput) Output() MongoDbClusterInfoResponseArrayOutput {
	return o.ApplyT(func(v ConnectToMongoDbTaskPropertiesResponse) []MongoDbClusterInfoResponse { return v.Output }).(MongoDbClusterInfoResponseArrayOutput)
}

func (o ConnectToMongoDbTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToMongoDbTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o ConnectToMongoDbTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToMongoDbTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToSourceOracleSyncTaskInput struct {
	SourceConnectionInfo OracleConnectionInfo `pulumi:"sourceConnectionInfo"`
}





type ConnectToSourceOracleSyncTaskInputInput interface {
	pulumi.Input

	ToConnectToSourceOracleSyncTaskInputOutput() ConnectToSourceOracleSyncTaskInputOutput
	ToConnectToSourceOracleSyncTaskInputOutputWithContext(context.Context) ConnectToSourceOracleSyncTaskInputOutput
}

type ConnectToSourceOracleSyncTaskInputArgs struct {
	SourceConnectionInfo OracleConnectionInfoInput `pulumi:"sourceConnectionInfo"`
}

func (ConnectToSourceOracleSyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceOracleSyncTaskInput)(nil)).Elem()
}

func (i ConnectToSourceOracleSyncTaskInputArgs) ToConnectToSourceOracleSyncTaskInputOutput() ConnectToSourceOracleSyncTaskInputOutput {
	return i.ToConnectToSourceOracleSyncTaskInputOutputWithContext(context.Background())
}

func (i ConnectToSourceOracleSyncTaskInputArgs) ToConnectToSourceOracleSyncTaskInputOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceOracleSyncTaskInputOutput)
}

func (i ConnectToSourceOracleSyncTaskInputArgs) ToConnectToSourceOracleSyncTaskInputPtrOutput() ConnectToSourceOracleSyncTaskInputPtrOutput {
	return i.ToConnectToSourceOracleSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i ConnectToSourceOracleSyncTaskInputArgs) ToConnectToSourceOracleSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceOracleSyncTaskInputOutput).ToConnectToSourceOracleSyncTaskInputPtrOutputWithContext(ctx)
}









type ConnectToSourceOracleSyncTaskInputPtrInput interface {
	pulumi.Input

	ToConnectToSourceOracleSyncTaskInputPtrOutput() ConnectToSourceOracleSyncTaskInputPtrOutput
	ToConnectToSourceOracleSyncTaskInputPtrOutputWithContext(context.Context) ConnectToSourceOracleSyncTaskInputPtrOutput
}

type connectToSourceOracleSyncTaskInputPtrType ConnectToSourceOracleSyncTaskInputArgs

func ConnectToSourceOracleSyncTaskInputPtr(v *ConnectToSourceOracleSyncTaskInputArgs) ConnectToSourceOracleSyncTaskInputPtrInput {
	return (*connectToSourceOracleSyncTaskInputPtrType)(v)
}

func (*connectToSourceOracleSyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourceOracleSyncTaskInput)(nil)).Elem()
}

func (i *connectToSourceOracleSyncTaskInputPtrType) ToConnectToSourceOracleSyncTaskInputPtrOutput() ConnectToSourceOracleSyncTaskInputPtrOutput {
	return i.ToConnectToSourceOracleSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *connectToSourceOracleSyncTaskInputPtrType) ToConnectToSourceOracleSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceOracleSyncTaskInputPtrOutput)
}

type ConnectToSourceOracleSyncTaskInputOutput struct{ *pulumi.OutputState }

func (ConnectToSourceOracleSyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceOracleSyncTaskInput)(nil)).Elem()
}

func (o ConnectToSourceOracleSyncTaskInputOutput) ToConnectToSourceOracleSyncTaskInputOutput() ConnectToSourceOracleSyncTaskInputOutput {
	return o
}

func (o ConnectToSourceOracleSyncTaskInputOutput) ToConnectToSourceOracleSyncTaskInputOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskInputOutput {
	return o
}

func (o ConnectToSourceOracleSyncTaskInputOutput) ToConnectToSourceOracleSyncTaskInputPtrOutput() ConnectToSourceOracleSyncTaskInputPtrOutput {
	return o.ToConnectToSourceOracleSyncTaskInputPtrOutputWithContext(context.Background())
}

func (o ConnectToSourceOracleSyncTaskInputOutput) ToConnectToSourceOracleSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToSourceOracleSyncTaskInput) *ConnectToSourceOracleSyncTaskInput {
		return &v
	}).(ConnectToSourceOracleSyncTaskInputPtrOutput)
}

func (o ConnectToSourceOracleSyncTaskInputOutput) SourceConnectionInfo() OracleConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToSourceOracleSyncTaskInput) OracleConnectionInfo { return v.SourceConnectionInfo }).(OracleConnectionInfoOutput)
}

type ConnectToSourceOracleSyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ConnectToSourceOracleSyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourceOracleSyncTaskInput)(nil)).Elem()
}

func (o ConnectToSourceOracleSyncTaskInputPtrOutput) ToConnectToSourceOracleSyncTaskInputPtrOutput() ConnectToSourceOracleSyncTaskInputPtrOutput {
	return o
}

func (o ConnectToSourceOracleSyncTaskInputPtrOutput) ToConnectToSourceOracleSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskInputPtrOutput {
	return o
}

func (o ConnectToSourceOracleSyncTaskInputPtrOutput) Elem() ConnectToSourceOracleSyncTaskInputOutput {
	return o.ApplyT(func(v *ConnectToSourceOracleSyncTaskInput) ConnectToSourceOracleSyncTaskInput {
		if v != nil {
			return *v
		}
		var ret ConnectToSourceOracleSyncTaskInput
		return ret
	}).(ConnectToSourceOracleSyncTaskInputOutput)
}

func (o ConnectToSourceOracleSyncTaskInputPtrOutput) SourceConnectionInfo() OracleConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceOracleSyncTaskInput) *OracleConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(OracleConnectionInfoPtrOutput)
}

type ConnectToSourceOracleSyncTaskInputResponse struct {
	SourceConnectionInfo OracleConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
}





type ConnectToSourceOracleSyncTaskInputResponseInput interface {
	pulumi.Input

	ToConnectToSourceOracleSyncTaskInputResponseOutput() ConnectToSourceOracleSyncTaskInputResponseOutput
	ToConnectToSourceOracleSyncTaskInputResponseOutputWithContext(context.Context) ConnectToSourceOracleSyncTaskInputResponseOutput
}

type ConnectToSourceOracleSyncTaskInputResponseArgs struct {
	SourceConnectionInfo OracleConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
}

func (ConnectToSourceOracleSyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceOracleSyncTaskInputResponse)(nil)).Elem()
}

func (i ConnectToSourceOracleSyncTaskInputResponseArgs) ToConnectToSourceOracleSyncTaskInputResponseOutput() ConnectToSourceOracleSyncTaskInputResponseOutput {
	return i.ToConnectToSourceOracleSyncTaskInputResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceOracleSyncTaskInputResponseArgs) ToConnectToSourceOracleSyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceOracleSyncTaskInputResponseOutput)
}

func (i ConnectToSourceOracleSyncTaskInputResponseArgs) ToConnectToSourceOracleSyncTaskInputResponsePtrOutput() ConnectToSourceOracleSyncTaskInputResponsePtrOutput {
	return i.ToConnectToSourceOracleSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToSourceOracleSyncTaskInputResponseArgs) ToConnectToSourceOracleSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceOracleSyncTaskInputResponseOutput).ToConnectToSourceOracleSyncTaskInputResponsePtrOutputWithContext(ctx)
}









type ConnectToSourceOracleSyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToConnectToSourceOracleSyncTaskInputResponsePtrOutput() ConnectToSourceOracleSyncTaskInputResponsePtrOutput
	ToConnectToSourceOracleSyncTaskInputResponsePtrOutputWithContext(context.Context) ConnectToSourceOracleSyncTaskInputResponsePtrOutput
}

type connectToSourceOracleSyncTaskInputResponsePtrType ConnectToSourceOracleSyncTaskInputResponseArgs

func ConnectToSourceOracleSyncTaskInputResponsePtr(v *ConnectToSourceOracleSyncTaskInputResponseArgs) ConnectToSourceOracleSyncTaskInputResponsePtrInput {
	return (*connectToSourceOracleSyncTaskInputResponsePtrType)(v)
}

func (*connectToSourceOracleSyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourceOracleSyncTaskInputResponse)(nil)).Elem()
}

func (i *connectToSourceOracleSyncTaskInputResponsePtrType) ToConnectToSourceOracleSyncTaskInputResponsePtrOutput() ConnectToSourceOracleSyncTaskInputResponsePtrOutput {
	return i.ToConnectToSourceOracleSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *connectToSourceOracleSyncTaskInputResponsePtrType) ToConnectToSourceOracleSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceOracleSyncTaskInputResponsePtrOutput)
}

type ConnectToSourceOracleSyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceOracleSyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceOracleSyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToSourceOracleSyncTaskInputResponseOutput) ToConnectToSourceOracleSyncTaskInputResponseOutput() ConnectToSourceOracleSyncTaskInputResponseOutput {
	return o
}

func (o ConnectToSourceOracleSyncTaskInputResponseOutput) ToConnectToSourceOracleSyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskInputResponseOutput {
	return o
}

func (o ConnectToSourceOracleSyncTaskInputResponseOutput) ToConnectToSourceOracleSyncTaskInputResponsePtrOutput() ConnectToSourceOracleSyncTaskInputResponsePtrOutput {
	return o.ToConnectToSourceOracleSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToSourceOracleSyncTaskInputResponseOutput) ToConnectToSourceOracleSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToSourceOracleSyncTaskInputResponse) *ConnectToSourceOracleSyncTaskInputResponse {
		return &v
	}).(ConnectToSourceOracleSyncTaskInputResponsePtrOutput)
}

func (o ConnectToSourceOracleSyncTaskInputResponseOutput) SourceConnectionInfo() OracleConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToSourceOracleSyncTaskInputResponse) OracleConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(OracleConnectionInfoResponseOutput)
}

type ConnectToSourceOracleSyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToSourceOracleSyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourceOracleSyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToSourceOracleSyncTaskInputResponsePtrOutput) ToConnectToSourceOracleSyncTaskInputResponsePtrOutput() ConnectToSourceOracleSyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToSourceOracleSyncTaskInputResponsePtrOutput) ToConnectToSourceOracleSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToSourceOracleSyncTaskInputResponsePtrOutput) Elem() ConnectToSourceOracleSyncTaskInputResponseOutput {
	return o.ApplyT(func(v *ConnectToSourceOracleSyncTaskInputResponse) ConnectToSourceOracleSyncTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret ConnectToSourceOracleSyncTaskInputResponse
		return ret
	}).(ConnectToSourceOracleSyncTaskInputResponseOutput)
}

func (o ConnectToSourceOracleSyncTaskInputResponsePtrOutput) SourceConnectionInfo() OracleConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToSourceOracleSyncTaskInputResponse) *OracleConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(OracleConnectionInfoResponsePtrOutput)
}

type ConnectToSourceOracleSyncTaskOutputResponse struct {
	Databases                []string                      `pulumi:"databases"`
	SourceServerBrandVersion string                        `pulumi:"sourceServerBrandVersion"`
	SourceServerVersion      string                        `pulumi:"sourceServerVersion"`
	ValidationErrors         []ReportableExceptionResponse `pulumi:"validationErrors"`
}





type ConnectToSourceOracleSyncTaskOutputResponseInput interface {
	pulumi.Input

	ToConnectToSourceOracleSyncTaskOutputResponseOutput() ConnectToSourceOracleSyncTaskOutputResponseOutput
	ToConnectToSourceOracleSyncTaskOutputResponseOutputWithContext(context.Context) ConnectToSourceOracleSyncTaskOutputResponseOutput
}

type ConnectToSourceOracleSyncTaskOutputResponseArgs struct {
	Databases                pulumi.StringArrayInput               `pulumi:"databases"`
	SourceServerBrandVersion pulumi.StringInput                    `pulumi:"sourceServerBrandVersion"`
	SourceServerVersion      pulumi.StringInput                    `pulumi:"sourceServerVersion"`
	ValidationErrors         ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToSourceOracleSyncTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceOracleSyncTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToSourceOracleSyncTaskOutputResponseArgs) ToConnectToSourceOracleSyncTaskOutputResponseOutput() ConnectToSourceOracleSyncTaskOutputResponseOutput {
	return i.ToConnectToSourceOracleSyncTaskOutputResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceOracleSyncTaskOutputResponseArgs) ToConnectToSourceOracleSyncTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceOracleSyncTaskOutputResponseOutput)
}





type ConnectToSourceOracleSyncTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToConnectToSourceOracleSyncTaskOutputResponseArrayOutput() ConnectToSourceOracleSyncTaskOutputResponseArrayOutput
	ToConnectToSourceOracleSyncTaskOutputResponseArrayOutputWithContext(context.Context) ConnectToSourceOracleSyncTaskOutputResponseArrayOutput
}

type ConnectToSourceOracleSyncTaskOutputResponseArray []ConnectToSourceOracleSyncTaskOutputResponseInput

func (ConnectToSourceOracleSyncTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToSourceOracleSyncTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToSourceOracleSyncTaskOutputResponseArray) ToConnectToSourceOracleSyncTaskOutputResponseArrayOutput() ConnectToSourceOracleSyncTaskOutputResponseArrayOutput {
	return i.ToConnectToSourceOracleSyncTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToSourceOracleSyncTaskOutputResponseArray) ToConnectToSourceOracleSyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceOracleSyncTaskOutputResponseArrayOutput)
}

type ConnectToSourceOracleSyncTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceOracleSyncTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceOracleSyncTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToSourceOracleSyncTaskOutputResponseOutput) ToConnectToSourceOracleSyncTaskOutputResponseOutput() ConnectToSourceOracleSyncTaskOutputResponseOutput {
	return o
}

func (o ConnectToSourceOracleSyncTaskOutputResponseOutput) ToConnectToSourceOracleSyncTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskOutputResponseOutput {
	return o
}

func (o ConnectToSourceOracleSyncTaskOutputResponseOutput) Databases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectToSourceOracleSyncTaskOutputResponse) []string { return v.Databases }).(pulumi.StringArrayOutput)
}

func (o ConnectToSourceOracleSyncTaskOutputResponseOutput) SourceServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceOracleSyncTaskOutputResponse) string { return v.SourceServerBrandVersion }).(pulumi.StringOutput)
}

func (o ConnectToSourceOracleSyncTaskOutputResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceOracleSyncTaskOutputResponse) string { return v.SourceServerVersion }).(pulumi.StringOutput)
}

func (o ConnectToSourceOracleSyncTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourceOracleSyncTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ConnectToSourceOracleSyncTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToSourceOracleSyncTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToSourceOracleSyncTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToSourceOracleSyncTaskOutputResponseArrayOutput) ToConnectToSourceOracleSyncTaskOutputResponseArrayOutput() ConnectToSourceOracleSyncTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToSourceOracleSyncTaskOutputResponseArrayOutput) ToConnectToSourceOracleSyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToSourceOracleSyncTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ConnectToSourceOracleSyncTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToSourceOracleSyncTaskOutputResponse {
		return vs[0].([]ConnectToSourceOracleSyncTaskOutputResponse)[vs[1].(int)]
	}).(ConnectToSourceOracleSyncTaskOutputResponseOutput)
}

type ConnectToSourceOracleSyncTaskProperties struct {
	ClientData map[string]string                   `pulumi:"clientData"`
	Input      *ConnectToSourceOracleSyncTaskInput `pulumi:"input"`
	TaskType   string                              `pulumi:"taskType"`
}





type ConnectToSourceOracleSyncTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToSourceOracleSyncTaskPropertiesOutput() ConnectToSourceOracleSyncTaskPropertiesOutput
	ToConnectToSourceOracleSyncTaskPropertiesOutputWithContext(context.Context) ConnectToSourceOracleSyncTaskPropertiesOutput
}

type ConnectToSourceOracleSyncTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                      `pulumi:"clientData"`
	Input      ConnectToSourceOracleSyncTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                         `pulumi:"taskType"`
}

func (ConnectToSourceOracleSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceOracleSyncTaskProperties)(nil)).Elem()
}

func (i ConnectToSourceOracleSyncTaskPropertiesArgs) ToConnectToSourceOracleSyncTaskPropertiesOutput() ConnectToSourceOracleSyncTaskPropertiesOutput {
	return i.ToConnectToSourceOracleSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToSourceOracleSyncTaskPropertiesArgs) ToConnectToSourceOracleSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceOracleSyncTaskPropertiesOutput)
}

type ConnectToSourceOracleSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToSourceOracleSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceOracleSyncTaskProperties)(nil)).Elem()
}

func (o ConnectToSourceOracleSyncTaskPropertiesOutput) ToConnectToSourceOracleSyncTaskPropertiesOutput() ConnectToSourceOracleSyncTaskPropertiesOutput {
	return o
}

func (o ConnectToSourceOracleSyncTaskPropertiesOutput) ToConnectToSourceOracleSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskPropertiesOutput {
	return o
}

func (o ConnectToSourceOracleSyncTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToSourceOracleSyncTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToSourceOracleSyncTaskPropertiesOutput) Input() ConnectToSourceOracleSyncTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToSourceOracleSyncTaskProperties) *ConnectToSourceOracleSyncTaskInput { return v.Input }).(ConnectToSourceOracleSyncTaskInputPtrOutput)
}

func (o ConnectToSourceOracleSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceOracleSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToSourceOracleSyncTaskPropertiesResponse struct {
	ClientData map[string]string                             `pulumi:"clientData"`
	Commands   []interface{}                                 `pulumi:"commands"`
	Errors     []ODataErrorResponse                          `pulumi:"errors"`
	Input      *ConnectToSourceOracleSyncTaskInputResponse   `pulumi:"input"`
	Output     []ConnectToSourceOracleSyncTaskOutputResponse `pulumi:"output"`
	State      string                                        `pulumi:"state"`
	TaskType   string                                        `pulumi:"taskType"`
}





type ConnectToSourceOracleSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToSourceOracleSyncTaskPropertiesResponseOutput() ConnectToSourceOracleSyncTaskPropertiesResponseOutput
	ToConnectToSourceOracleSyncTaskPropertiesResponseOutputWithContext(context.Context) ConnectToSourceOracleSyncTaskPropertiesResponseOutput
}

type ConnectToSourceOracleSyncTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                                 `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                     `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                          `pulumi:"errors"`
	Input      ConnectToSourceOracleSyncTaskInputResponsePtrInput    `pulumi:"input"`
	Output     ConnectToSourceOracleSyncTaskOutputResponseArrayInput `pulumi:"output"`
	State      pulumi.StringInput                                    `pulumi:"state"`
	TaskType   pulumi.StringInput                                    `pulumi:"taskType"`
}

func (ConnectToSourceOracleSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceOracleSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToSourceOracleSyncTaskPropertiesResponseArgs) ToConnectToSourceOracleSyncTaskPropertiesResponseOutput() ConnectToSourceOracleSyncTaskPropertiesResponseOutput {
	return i.ToConnectToSourceOracleSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceOracleSyncTaskPropertiesResponseArgs) ToConnectToSourceOracleSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceOracleSyncTaskPropertiesResponseOutput)
}

type ConnectToSourceOracleSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceOracleSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceOracleSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToSourceOracleSyncTaskPropertiesResponseOutput) ToConnectToSourceOracleSyncTaskPropertiesResponseOutput() ConnectToSourceOracleSyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToSourceOracleSyncTaskPropertiesResponseOutput) ToConnectToSourceOracleSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToSourceOracleSyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToSourceOracleSyncTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToSourceOracleSyncTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToSourceOracleSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToSourceOracleSyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o ConnectToSourceOracleSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourceOracleSyncTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o ConnectToSourceOracleSyncTaskPropertiesResponseOutput) Input() ConnectToSourceOracleSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToSourceOracleSyncTaskPropertiesResponse) *ConnectToSourceOracleSyncTaskInputResponse {
		return v.Input
	}).(ConnectToSourceOracleSyncTaskInputResponsePtrOutput)
}

func (o ConnectToSourceOracleSyncTaskPropertiesResponseOutput) Output() ConnectToSourceOracleSyncTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourceOracleSyncTaskPropertiesResponse) []ConnectToSourceOracleSyncTaskOutputResponse {
		return v.Output
	}).(ConnectToSourceOracleSyncTaskOutputResponseArrayOutput)
}

func (o ConnectToSourceOracleSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceOracleSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o ConnectToSourceOracleSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceOracleSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToSourcePostgreSqlSyncTaskInput struct {
	SourceConnectionInfo PostgreSqlConnectionInfo `pulumi:"sourceConnectionInfo"`
}





type ConnectToSourcePostgreSqlSyncTaskInputInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskInputOutput() ConnectToSourcePostgreSqlSyncTaskInputOutput
	ToConnectToSourcePostgreSqlSyncTaskInputOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskInputOutput
}

type ConnectToSourcePostgreSqlSyncTaskInputArgs struct {
	SourceConnectionInfo PostgreSqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
}

func (ConnectToSourcePostgreSqlSyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskInput)(nil)).Elem()
}

func (i ConnectToSourcePostgreSqlSyncTaskInputArgs) ToConnectToSourcePostgreSqlSyncTaskInputOutput() ConnectToSourcePostgreSqlSyncTaskInputOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskInputOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskInputArgs) ToConnectToSourcePostgreSqlSyncTaskInputOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskInputOutput)
}

func (i ConnectToSourcePostgreSqlSyncTaskInputArgs) ToConnectToSourcePostgreSqlSyncTaskInputPtrOutput() ConnectToSourcePostgreSqlSyncTaskInputPtrOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskInputArgs) ToConnectToSourcePostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskInputOutput).ToConnectToSourcePostgreSqlSyncTaskInputPtrOutputWithContext(ctx)
}









type ConnectToSourcePostgreSqlSyncTaskInputPtrInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskInputPtrOutput() ConnectToSourcePostgreSqlSyncTaskInputPtrOutput
	ToConnectToSourcePostgreSqlSyncTaskInputPtrOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskInputPtrOutput
}

type connectToSourcePostgreSqlSyncTaskInputPtrType ConnectToSourcePostgreSqlSyncTaskInputArgs

func ConnectToSourcePostgreSqlSyncTaskInputPtr(v *ConnectToSourcePostgreSqlSyncTaskInputArgs) ConnectToSourcePostgreSqlSyncTaskInputPtrInput {
	return (*connectToSourcePostgreSqlSyncTaskInputPtrType)(v)
}

func (*connectToSourcePostgreSqlSyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourcePostgreSqlSyncTaskInput)(nil)).Elem()
}

func (i *connectToSourcePostgreSqlSyncTaskInputPtrType) ToConnectToSourcePostgreSqlSyncTaskInputPtrOutput() ConnectToSourcePostgreSqlSyncTaskInputPtrOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *connectToSourcePostgreSqlSyncTaskInputPtrType) ToConnectToSourcePostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskInputPtrOutput)
}

type ConnectToSourcePostgreSqlSyncTaskInputOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskInput)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskInputOutput) ToConnectToSourcePostgreSqlSyncTaskInputOutput() ConnectToSourcePostgreSqlSyncTaskInputOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputOutput) ToConnectToSourcePostgreSqlSyncTaskInputOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputOutput) ToConnectToSourcePostgreSqlSyncTaskInputPtrOutput() ConnectToSourcePostgreSqlSyncTaskInputPtrOutput {
	return o.ToConnectToSourcePostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (o ConnectToSourcePostgreSqlSyncTaskInputOutput) ToConnectToSourcePostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToSourcePostgreSqlSyncTaskInput) *ConnectToSourcePostgreSqlSyncTaskInput {
		return &v
	}).(ConnectToSourcePostgreSqlSyncTaskInputPtrOutput)
}

func (o ConnectToSourcePostgreSqlSyncTaskInputOutput) SourceConnectionInfo() PostgreSqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskInput) PostgreSqlConnectionInfo { return v.SourceConnectionInfo }).(PostgreSqlConnectionInfoOutput)
}

type ConnectToSourcePostgreSqlSyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourcePostgreSqlSyncTaskInput)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskInputPtrOutput) ToConnectToSourcePostgreSqlSyncTaskInputPtrOutput() ConnectToSourcePostgreSqlSyncTaskInputPtrOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputPtrOutput) ToConnectToSourcePostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputPtrOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputPtrOutput) Elem() ConnectToSourcePostgreSqlSyncTaskInputOutput {
	return o.ApplyT(func(v *ConnectToSourcePostgreSqlSyncTaskInput) ConnectToSourcePostgreSqlSyncTaskInput {
		if v != nil {
			return *v
		}
		var ret ConnectToSourcePostgreSqlSyncTaskInput
		return ret
	}).(ConnectToSourcePostgreSqlSyncTaskInputOutput)
}

func (o ConnectToSourcePostgreSqlSyncTaskInputPtrOutput) SourceConnectionInfo() PostgreSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToSourcePostgreSqlSyncTaskInput) *PostgreSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoPtrOutput)
}

type ConnectToSourcePostgreSqlSyncTaskInputResponse struct {
	SourceConnectionInfo PostgreSqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
}





type ConnectToSourcePostgreSqlSyncTaskInputResponseInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskInputResponseOutput() ConnectToSourcePostgreSqlSyncTaskInputResponseOutput
	ToConnectToSourcePostgreSqlSyncTaskInputResponseOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskInputResponseOutput
}

type ConnectToSourcePostgreSqlSyncTaskInputResponseArgs struct {
	SourceConnectionInfo PostgreSqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
}

func (ConnectToSourcePostgreSqlSyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i ConnectToSourcePostgreSqlSyncTaskInputResponseArgs) ToConnectToSourcePostgreSqlSyncTaskInputResponseOutput() ConnectToSourcePostgreSqlSyncTaskInputResponseOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskInputResponseOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskInputResponseArgs) ToConnectToSourcePostgreSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskInputResponseOutput)
}

func (i ConnectToSourcePostgreSqlSyncTaskInputResponseArgs) ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput() ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskInputResponseArgs) ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskInputResponseOutput).ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx)
}









type ConnectToSourcePostgreSqlSyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput() ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput
	ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput
}

type connectToSourcePostgreSqlSyncTaskInputResponsePtrType ConnectToSourcePostgreSqlSyncTaskInputResponseArgs

func ConnectToSourcePostgreSqlSyncTaskInputResponsePtr(v *ConnectToSourcePostgreSqlSyncTaskInputResponseArgs) ConnectToSourcePostgreSqlSyncTaskInputResponsePtrInput {
	return (*connectToSourcePostgreSqlSyncTaskInputResponsePtrType)(v)
}

func (*connectToSourcePostgreSqlSyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourcePostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i *connectToSourcePostgreSqlSyncTaskInputResponsePtrType) ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput() ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *connectToSourcePostgreSqlSyncTaskInputResponsePtrType) ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput)
}

type ConnectToSourcePostgreSqlSyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskInputResponseOutput) ToConnectToSourcePostgreSqlSyncTaskInputResponseOutput() ConnectToSourcePostgreSqlSyncTaskInputResponseOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputResponseOutput) ToConnectToSourcePostgreSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputResponseOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputResponseOutput) ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput() ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToSourcePostgreSqlSyncTaskInputResponseOutput) ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToSourcePostgreSqlSyncTaskInputResponse) *ConnectToSourcePostgreSqlSyncTaskInputResponse {
		return &v
	}).(ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput)
}

func (o ConnectToSourcePostgreSqlSyncTaskInputResponseOutput) SourceConnectionInfo() PostgreSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskInputResponse) PostgreSqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoResponseOutput)
}

type ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourcePostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput) ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput() ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput) ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput) Elem() ConnectToSourcePostgreSqlSyncTaskInputResponseOutput {
	return o.ApplyT(func(v *ConnectToSourcePostgreSqlSyncTaskInputResponse) ConnectToSourcePostgreSqlSyncTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret ConnectToSourcePostgreSqlSyncTaskInputResponse
		return ret
	}).(ConnectToSourcePostgreSqlSyncTaskInputResponseOutput)
}

func (o ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput) SourceConnectionInfo() PostgreSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToSourcePostgreSqlSyncTaskInputResponse) *PostgreSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoResponsePtrOutput)
}

type ConnectToSourcePostgreSqlSyncTaskOutputResponse struct {
	Databases                []string                      `pulumi:"databases"`
	Id                       string                        `pulumi:"id"`
	SourceServerBrandVersion string                        `pulumi:"sourceServerBrandVersion"`
	SourceServerVersion      string                        `pulumi:"sourceServerVersion"`
	ValidationErrors         []ReportableExceptionResponse `pulumi:"validationErrors"`
}





type ConnectToSourcePostgreSqlSyncTaskOutputResponseInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskOutputResponseOutput() ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput
	ToConnectToSourcePostgreSqlSyncTaskOutputResponseOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput
}

type ConnectToSourcePostgreSqlSyncTaskOutputResponseArgs struct {
	Databases                pulumi.StringArrayInput               `pulumi:"databases"`
	Id                       pulumi.StringInput                    `pulumi:"id"`
	SourceServerBrandVersion pulumi.StringInput                    `pulumi:"sourceServerBrandVersion"`
	SourceServerVersion      pulumi.StringInput                    `pulumi:"sourceServerVersion"`
	ValidationErrors         ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToSourcePostgreSqlSyncTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToSourcePostgreSqlSyncTaskOutputResponseArgs) ToConnectToSourcePostgreSqlSyncTaskOutputResponseOutput() ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskOutputResponseOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskOutputResponseArgs) ToConnectToSourcePostgreSqlSyncTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput)
}





type ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput() ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput
	ToConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput
}

type ConnectToSourcePostgreSqlSyncTaskOutputResponseArray []ConnectToSourcePostgreSqlSyncTaskOutputResponseInput

func (ConnectToSourcePostgreSqlSyncTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToSourcePostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToSourcePostgreSqlSyncTaskOutputResponseArray) ToConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput() ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskOutputResponseArray) ToConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput)
}

type ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput) ToConnectToSourcePostgreSqlSyncTaskOutputResponseOutput() ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput) ToConnectToSourcePostgreSqlSyncTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput) Databases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskOutputResponse) []string { return v.Databases }).(pulumi.StringArrayOutput)
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput) SourceServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskOutputResponse) string { return v.SourceServerBrandVersion }).(pulumi.StringOutput)
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskOutputResponse) string { return v.SourceServerVersion }).(pulumi.StringOutput)
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToSourcePostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput) ToConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput() ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput) ToConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToSourcePostgreSqlSyncTaskOutputResponse {
		return vs[0].([]ConnectToSourcePostgreSqlSyncTaskOutputResponse)[vs[1].(int)]
	}).(ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput)
}

type ConnectToSourcePostgreSqlSyncTaskProperties struct {
	ClientData map[string]string                       `pulumi:"clientData"`
	Input      *ConnectToSourcePostgreSqlSyncTaskInput `pulumi:"input"`
	TaskType   string                                  `pulumi:"taskType"`
}





type ConnectToSourcePostgreSqlSyncTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskPropertiesOutput() ConnectToSourcePostgreSqlSyncTaskPropertiesOutput
	ToConnectToSourcePostgreSqlSyncTaskPropertiesOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskPropertiesOutput
}

type ConnectToSourcePostgreSqlSyncTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                          `pulumi:"clientData"`
	Input      ConnectToSourcePostgreSqlSyncTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                             `pulumi:"taskType"`
}

func (ConnectToSourcePostgreSqlSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskProperties)(nil)).Elem()
}

func (i ConnectToSourcePostgreSqlSyncTaskPropertiesArgs) ToConnectToSourcePostgreSqlSyncTaskPropertiesOutput() ConnectToSourcePostgreSqlSyncTaskPropertiesOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskPropertiesArgs) ToConnectToSourcePostgreSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskPropertiesOutput)
}

type ConnectToSourcePostgreSqlSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskProperties)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesOutput) ToConnectToSourcePostgreSqlSyncTaskPropertiesOutput() ConnectToSourcePostgreSqlSyncTaskPropertiesOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesOutput) ToConnectToSourcePostgreSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskPropertiesOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesOutput) Input() ConnectToSourcePostgreSqlSyncTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskProperties) *ConnectToSourcePostgreSqlSyncTaskInput {
		return v.Input
	}).(ConnectToSourcePostgreSqlSyncTaskInputPtrOutput)
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToSourcePostgreSqlSyncTaskPropertiesResponse struct {
	ClientData map[string]string                                 `pulumi:"clientData"`
	Commands   []interface{}                                     `pulumi:"commands"`
	Errors     []ODataErrorResponse                              `pulumi:"errors"`
	Input      *ConnectToSourcePostgreSqlSyncTaskInputResponse   `pulumi:"input"`
	Output     []ConnectToSourcePostgreSqlSyncTaskOutputResponse `pulumi:"output"`
	State      string                                            `pulumi:"state"`
	TaskType   string                                            `pulumi:"taskType"`
}





type ConnectToSourcePostgreSqlSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput() ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput
	ToConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput
}

type ConnectToSourcePostgreSqlSyncTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                                     `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                         `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                              `pulumi:"errors"`
	Input      ConnectToSourcePostgreSqlSyncTaskInputResponsePtrInput    `pulumi:"input"`
	Output     ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayInput `pulumi:"output"`
	State      pulumi.StringInput                                        `pulumi:"state"`
	TaskType   pulumi.StringInput                                        `pulumi:"taskType"`
}

func (ConnectToSourcePostgreSqlSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToSourcePostgreSqlSyncTaskPropertiesResponseArgs) ToConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput() ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskPropertiesResponseArgs) ToConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput)
}

type ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) ToConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput() ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) ToConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) Input() ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesResponse) *ConnectToSourcePostgreSqlSyncTaskInputResponse {
		return v.Input
	}).(ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput)
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) Output() ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesResponse) []ConnectToSourcePostgreSqlSyncTaskOutputResponse {
		return v.Output
	}).(ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput)
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToSourceSqlServerSyncTaskProperties struct {
	ClientData map[string]string                  `pulumi:"clientData"`
	Input      *ConnectToSourceSqlServerTaskInput `pulumi:"input"`
	TaskType   string                             `pulumi:"taskType"`
}





type ConnectToSourceSqlServerSyncTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerSyncTaskPropertiesOutput() ConnectToSourceSqlServerSyncTaskPropertiesOutput
	ToConnectToSourceSqlServerSyncTaskPropertiesOutputWithContext(context.Context) ConnectToSourceSqlServerSyncTaskPropertiesOutput
}

type ConnectToSourceSqlServerSyncTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                     `pulumi:"clientData"`
	Input      ConnectToSourceSqlServerTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                        `pulumi:"taskType"`
}

func (ConnectToSourceSqlServerSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerSyncTaskProperties)(nil)).Elem()
}

func (i ConnectToSourceSqlServerSyncTaskPropertiesArgs) ToConnectToSourceSqlServerSyncTaskPropertiesOutput() ConnectToSourceSqlServerSyncTaskPropertiesOutput {
	return i.ToConnectToSourceSqlServerSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerSyncTaskPropertiesArgs) ToConnectToSourceSqlServerSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToSourceSqlServerSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerSyncTaskPropertiesOutput)
}

type ConnectToSourceSqlServerSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerSyncTaskProperties)(nil)).Elem()
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesOutput) ToConnectToSourceSqlServerSyncTaskPropertiesOutput() ConnectToSourceSqlServerSyncTaskPropertiesOutput {
	return o
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesOutput) ToConnectToSourceSqlServerSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToSourceSqlServerSyncTaskPropertiesOutput {
	return o
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesOutput) Input() ConnectToSourceSqlServerTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskProperties) *ConnectToSourceSqlServerTaskInput { return v.Input }).(ConnectToSourceSqlServerTaskInputPtrOutput)
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToSourceSqlServerSyncTaskPropertiesResponse struct {
	ClientData map[string]string                          `pulumi:"clientData"`
	Commands   []interface{}                              `pulumi:"commands"`
	Errors     []ODataErrorResponse                       `pulumi:"errors"`
	Input      *ConnectToSourceSqlServerTaskInputResponse `pulumi:"input"`
	Output     []interface{}                              `pulumi:"output"`
	State      string                                     `pulumi:"state"`
	TaskType   string                                     `pulumi:"taskType"`
}





type ConnectToSourceSqlServerSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerSyncTaskPropertiesResponseOutput() ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput
	ToConnectToSourceSqlServerSyncTaskPropertiesResponseOutputWithContext(context.Context) ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput
}

type ConnectToSourceSqlServerSyncTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                             `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                 `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                      `pulumi:"errors"`
	Input      ConnectToSourceSqlServerTaskInputResponsePtrInput `pulumi:"input"`
	Output     pulumi.ArrayInput                                 `pulumi:"output"`
	State      pulumi.StringInput                                `pulumi:"state"`
	TaskType   pulumi.StringInput                                `pulumi:"taskType"`
}

func (ConnectToSourceSqlServerSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerSyncTaskPropertiesResponseArgs) ToConnectToSourceSqlServerSyncTaskPropertiesResponseOutput() ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput {
	return i.ToConnectToSourceSqlServerSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerSyncTaskPropertiesResponseArgs) ToConnectToSourceSqlServerSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput)
}

type ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) ToConnectToSourceSqlServerSyncTaskPropertiesResponseOutput() ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) ToConnectToSourceSqlServerSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) Input() ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesResponse) *ConnectToSourceSqlServerTaskInputResponse {
		return v.Input
	}).(ConnectToSourceSqlServerTaskInputResponsePtrOutput)
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToSourceSqlServerTaskInput struct {
	CheckPermissionsGroup     *string           `pulumi:"checkPermissionsGroup"`
	CollectAgentJobs          *bool             `pulumi:"collectAgentJobs"`
	CollectDatabases          *bool             `pulumi:"collectDatabases"`
	CollectLogins             *bool             `pulumi:"collectLogins"`
	CollectTdeCertificateInfo *bool             `pulumi:"collectTdeCertificateInfo"`
	SourceConnectionInfo      SqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	ValidateSsisCatalogOnly   *bool             `pulumi:"validateSsisCatalogOnly"`
}





type ConnectToSourceSqlServerTaskInputInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskInputOutput() ConnectToSourceSqlServerTaskInputOutput
	ToConnectToSourceSqlServerTaskInputOutputWithContext(context.Context) ConnectToSourceSqlServerTaskInputOutput
}

type ConnectToSourceSqlServerTaskInputArgs struct {
	CheckPermissionsGroup     pulumi.StringPtrInput  `pulumi:"checkPermissionsGroup"`
	CollectAgentJobs          pulumi.BoolPtrInput    `pulumi:"collectAgentJobs"`
	CollectDatabases          pulumi.BoolPtrInput    `pulumi:"collectDatabases"`
	CollectLogins             pulumi.BoolPtrInput    `pulumi:"collectLogins"`
	CollectTdeCertificateInfo pulumi.BoolPtrInput    `pulumi:"collectTdeCertificateInfo"`
	SourceConnectionInfo      SqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
	ValidateSsisCatalogOnly   pulumi.BoolPtrInput    `pulumi:"validateSsisCatalogOnly"`
}

func (ConnectToSourceSqlServerTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskInput)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskInputArgs) ToConnectToSourceSqlServerTaskInputOutput() ConnectToSourceSqlServerTaskInputOutput {
	return i.ToConnectToSourceSqlServerTaskInputOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskInputArgs) ToConnectToSourceSqlServerTaskInputOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskInputOutput)
}

func (i ConnectToSourceSqlServerTaskInputArgs) ToConnectToSourceSqlServerTaskInputPtrOutput() ConnectToSourceSqlServerTaskInputPtrOutput {
	return i.ToConnectToSourceSqlServerTaskInputPtrOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskInputArgs) ToConnectToSourceSqlServerTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskInputOutput).ToConnectToSourceSqlServerTaskInputPtrOutputWithContext(ctx)
}









type ConnectToSourceSqlServerTaskInputPtrInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskInputPtrOutput() ConnectToSourceSqlServerTaskInputPtrOutput
	ToConnectToSourceSqlServerTaskInputPtrOutputWithContext(context.Context) ConnectToSourceSqlServerTaskInputPtrOutput
}

type connectToSourceSqlServerTaskInputPtrType ConnectToSourceSqlServerTaskInputArgs

func ConnectToSourceSqlServerTaskInputPtr(v *ConnectToSourceSqlServerTaskInputArgs) ConnectToSourceSqlServerTaskInputPtrInput {
	return (*connectToSourceSqlServerTaskInputPtrType)(v)
}

func (*connectToSourceSqlServerTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourceSqlServerTaskInput)(nil)).Elem()
}

func (i *connectToSourceSqlServerTaskInputPtrType) ToConnectToSourceSqlServerTaskInputPtrOutput() ConnectToSourceSqlServerTaskInputPtrOutput {
	return i.ToConnectToSourceSqlServerTaskInputPtrOutputWithContext(context.Background())
}

func (i *connectToSourceSqlServerTaskInputPtrType) ToConnectToSourceSqlServerTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskInputPtrOutput)
}

type ConnectToSourceSqlServerTaskInputOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskInput)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskInputOutput) ToConnectToSourceSqlServerTaskInputOutput() ConnectToSourceSqlServerTaskInputOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputOutput) ToConnectToSourceSqlServerTaskInputOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputOutput) ToConnectToSourceSqlServerTaskInputPtrOutput() ConnectToSourceSqlServerTaskInputPtrOutput {
	return o.ToConnectToSourceSqlServerTaskInputPtrOutputWithContext(context.Background())
}

func (o ConnectToSourceSqlServerTaskInputOutput) ToConnectToSourceSqlServerTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToSourceSqlServerTaskInput) *ConnectToSourceSqlServerTaskInput {
		return &v
	}).(ConnectToSourceSqlServerTaskInputPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputOutput) CheckPermissionsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInput) *string { return v.CheckPermissionsGroup }).(pulumi.StringPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputOutput) CollectAgentJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInput) *bool { return v.CollectAgentJobs }).(pulumi.BoolPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputOutput) CollectDatabases() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInput) *bool { return v.CollectDatabases }).(pulumi.BoolPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputOutput) CollectLogins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInput) *bool { return v.CollectLogins }).(pulumi.BoolPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputOutput) CollectTdeCertificateInfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInput) *bool { return v.CollectTdeCertificateInfo }).(pulumi.BoolPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

func (o ConnectToSourceSqlServerTaskInputOutput) ValidateSsisCatalogOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInput) *bool { return v.ValidateSsisCatalogOnly }).(pulumi.BoolPtrOutput)
}

type ConnectToSourceSqlServerTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourceSqlServerTaskInput)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskInputPtrOutput) ToConnectToSourceSqlServerTaskInputPtrOutput() ConnectToSourceSqlServerTaskInputPtrOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputPtrOutput) ToConnectToSourceSqlServerTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputPtrOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputPtrOutput) Elem() ConnectToSourceSqlServerTaskInputOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInput) ConnectToSourceSqlServerTaskInput {
		if v != nil {
			return *v
		}
		var ret ConnectToSourceSqlServerTaskInput
		return ret
	}).(ConnectToSourceSqlServerTaskInputOutput)
}

func (o ConnectToSourceSqlServerTaskInputPtrOutput) CheckPermissionsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInput) *string {
		if v == nil {
			return nil
		}
		return v.CheckPermissionsGroup
	}).(pulumi.StringPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputPtrOutput) CollectAgentJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInput) *bool {
		if v == nil {
			return nil
		}
		return v.CollectAgentJobs
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputPtrOutput) CollectDatabases() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInput) *bool {
		if v == nil {
			return nil
		}
		return v.CollectDatabases
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputPtrOutput) CollectLogins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInput) *bool {
		if v == nil {
			return nil
		}
		return v.CollectLogins
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputPtrOutput) CollectTdeCertificateInfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInput) *bool {
		if v == nil {
			return nil
		}
		return v.CollectTdeCertificateInfo
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputPtrOutput) ValidateSsisCatalogOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInput) *bool {
		if v == nil {
			return nil
		}
		return v.ValidateSsisCatalogOnly
	}).(pulumi.BoolPtrOutput)
}

type ConnectToSourceSqlServerTaskInputResponse struct {
	CheckPermissionsGroup     *string                   `pulumi:"checkPermissionsGroup"`
	CollectAgentJobs          *bool                     `pulumi:"collectAgentJobs"`
	CollectDatabases          *bool                     `pulumi:"collectDatabases"`
	CollectLogins             *bool                     `pulumi:"collectLogins"`
	CollectTdeCertificateInfo *bool                     `pulumi:"collectTdeCertificateInfo"`
	SourceConnectionInfo      SqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	ValidateSsisCatalogOnly   *bool                     `pulumi:"validateSsisCatalogOnly"`
}





type ConnectToSourceSqlServerTaskInputResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskInputResponseOutput() ConnectToSourceSqlServerTaskInputResponseOutput
	ToConnectToSourceSqlServerTaskInputResponseOutputWithContext(context.Context) ConnectToSourceSqlServerTaskInputResponseOutput
}

type ConnectToSourceSqlServerTaskInputResponseArgs struct {
	CheckPermissionsGroup     pulumi.StringPtrInput          `pulumi:"checkPermissionsGroup"`
	CollectAgentJobs          pulumi.BoolPtrInput            `pulumi:"collectAgentJobs"`
	CollectDatabases          pulumi.BoolPtrInput            `pulumi:"collectDatabases"`
	CollectLogins             pulumi.BoolPtrInput            `pulumi:"collectLogins"`
	CollectTdeCertificateInfo pulumi.BoolPtrInput            `pulumi:"collectTdeCertificateInfo"`
	SourceConnectionInfo      SqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	ValidateSsisCatalogOnly   pulumi.BoolPtrInput            `pulumi:"validateSsisCatalogOnly"`
}

func (ConnectToSourceSqlServerTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskInputResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskInputResponseArgs) ToConnectToSourceSqlServerTaskInputResponseOutput() ConnectToSourceSqlServerTaskInputResponseOutput {
	return i.ToConnectToSourceSqlServerTaskInputResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskInputResponseArgs) ToConnectToSourceSqlServerTaskInputResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskInputResponseOutput)
}

func (i ConnectToSourceSqlServerTaskInputResponseArgs) ToConnectToSourceSqlServerTaskInputResponsePtrOutput() ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return i.ToConnectToSourceSqlServerTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskInputResponseArgs) ToConnectToSourceSqlServerTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskInputResponseOutput).ToConnectToSourceSqlServerTaskInputResponsePtrOutputWithContext(ctx)
}









type ConnectToSourceSqlServerTaskInputResponsePtrInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskInputResponsePtrOutput() ConnectToSourceSqlServerTaskInputResponsePtrOutput
	ToConnectToSourceSqlServerTaskInputResponsePtrOutputWithContext(context.Context) ConnectToSourceSqlServerTaskInputResponsePtrOutput
}

type connectToSourceSqlServerTaskInputResponsePtrType ConnectToSourceSqlServerTaskInputResponseArgs

func ConnectToSourceSqlServerTaskInputResponsePtr(v *ConnectToSourceSqlServerTaskInputResponseArgs) ConnectToSourceSqlServerTaskInputResponsePtrInput {
	return (*connectToSourceSqlServerTaskInputResponsePtrType)(v)
}

func (*connectToSourceSqlServerTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourceSqlServerTaskInputResponse)(nil)).Elem()
}

func (i *connectToSourceSqlServerTaskInputResponsePtrType) ToConnectToSourceSqlServerTaskInputResponsePtrOutput() ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return i.ToConnectToSourceSqlServerTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *connectToSourceSqlServerTaskInputResponsePtrType) ToConnectToSourceSqlServerTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskInputResponsePtrOutput)
}

type ConnectToSourceSqlServerTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskInputResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskInputResponseOutput) ToConnectToSourceSqlServerTaskInputResponseOutput() ConnectToSourceSqlServerTaskInputResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputResponseOutput) ToConnectToSourceSqlServerTaskInputResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputResponseOutput) ToConnectToSourceSqlServerTaskInputResponsePtrOutput() ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return o.ToConnectToSourceSqlServerTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToSourceSqlServerTaskInputResponseOutput) ToConnectToSourceSqlServerTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToSourceSqlServerTaskInputResponse) *ConnectToSourceSqlServerTaskInputResponse {
		return &v
	}).(ConnectToSourceSqlServerTaskInputResponsePtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputResponseOutput) CheckPermissionsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInputResponse) *string { return v.CheckPermissionsGroup }).(pulumi.StringPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputResponseOutput) CollectAgentJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInputResponse) *bool { return v.CollectAgentJobs }).(pulumi.BoolPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputResponseOutput) CollectDatabases() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInputResponse) *bool { return v.CollectDatabases }).(pulumi.BoolPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputResponseOutput) CollectLogins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInputResponse) *bool { return v.CollectLogins }).(pulumi.BoolPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputResponseOutput) CollectTdeCertificateInfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInputResponse) *bool { return v.CollectTdeCertificateInfo }).(pulumi.BoolPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInputResponse) SqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

func (o ConnectToSourceSqlServerTaskInputResponseOutput) ValidateSsisCatalogOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInputResponse) *bool { return v.ValidateSsisCatalogOnly }).(pulumi.BoolPtrOutput)
}

type ConnectToSourceSqlServerTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourceSqlServerTaskInputResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskInputResponsePtrOutput) ToConnectToSourceSqlServerTaskInputResponsePtrOutput() ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputResponsePtrOutput) ToConnectToSourceSqlServerTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputResponsePtrOutput) Elem() ConnectToSourceSqlServerTaskInputResponseOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInputResponse) ConnectToSourceSqlServerTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret ConnectToSourceSqlServerTaskInputResponse
		return ret
	}).(ConnectToSourceSqlServerTaskInputResponseOutput)
}

func (o ConnectToSourceSqlServerTaskInputResponsePtrOutput) CheckPermissionsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInputResponse) *string {
		if v == nil {
			return nil
		}
		return v.CheckPermissionsGroup
	}).(pulumi.StringPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputResponsePtrOutput) CollectAgentJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInputResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CollectAgentJobs
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputResponsePtrOutput) CollectDatabases() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInputResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CollectDatabases
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputResponsePtrOutput) CollectLogins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInputResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CollectLogins
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputResponsePtrOutput) CollectTdeCertificateInfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInputResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CollectTdeCertificateInfo
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

func (o ConnectToSourceSqlServerTaskInputResponsePtrOutput) ValidateSsisCatalogOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInputResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ValidateSsisCatalogOnly
	}).(pulumi.BoolPtrOutput)
}

type ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse struct {
	Id                   string                           `pulumi:"id"`
	IsEnabled            bool                             `pulumi:"isEnabled"`
	JobCategory          string                           `pulumi:"jobCategory"`
	JobOwner             string                           `pulumi:"jobOwner"`
	LastExecutedOn       string                           `pulumi:"lastExecutedOn"`
	MigrationEligibility MigrationEligibilityInfoResponse `pulumi:"migrationEligibility"`
	Name                 string                           `pulumi:"name"`
	ResultType           string                           `pulumi:"resultType"`
	ValidationErrors     []ReportableExceptionResponse    `pulumi:"validationErrors"`
}





type ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput() ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput
	ToConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutputWithContext(context.Context) ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput
}

type ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseArgs struct {
	Id                   pulumi.StringInput                    `pulumi:"id"`
	IsEnabled            pulumi.BoolInput                      `pulumi:"isEnabled"`
	JobCategory          pulumi.StringInput                    `pulumi:"jobCategory"`
	JobOwner             pulumi.StringInput                    `pulumi:"jobOwner"`
	LastExecutedOn       pulumi.StringInput                    `pulumi:"lastExecutedOn"`
	MigrationEligibility MigrationEligibilityInfoResponseInput `pulumi:"migrationEligibility"`
	Name                 pulumi.StringInput                    `pulumi:"name"`
	ResultType           pulumi.StringInput                    `pulumi:"resultType"`
	ValidationErrors     ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseArgs) ToConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput() ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput {
	return i.ToConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseArgs) ToConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput)
}

type ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) ToConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput() ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) ToConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) JobCategory() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse) string { return v.JobCategory }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) JobOwner() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse) string { return v.JobOwner }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) LastExecutedOn() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse) string { return v.LastExecutedOn }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) MigrationEligibility() MigrationEligibilityInfoResponseOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse) MigrationEligibilityInfoResponse {
		return v.MigrationEligibility
	}).(MigrationEligibilityInfoResponseOutput)
}

func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse struct {
	CompatibilityLevel string                     `pulumi:"compatibilityLevel"`
	DatabaseFiles      []DatabaseFileInfoResponse `pulumi:"databaseFiles"`
	DatabaseState      string                     `pulumi:"databaseState"`
	Id                 string                     `pulumi:"id"`
	Name               string                     `pulumi:"name"`
	ResultType         string                     `pulumi:"resultType"`
	SizeMB             float64                    `pulumi:"sizeMB"`
}





type ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput() ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput
	ToConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutputWithContext(context.Context) ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput
}

type ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseArgs struct {
	CompatibilityLevel pulumi.StringInput                 `pulumi:"compatibilityLevel"`
	DatabaseFiles      DatabaseFileInfoResponseArrayInput `pulumi:"databaseFiles"`
	DatabaseState      pulumi.StringInput                 `pulumi:"databaseState"`
	Id                 pulumi.StringInput                 `pulumi:"id"`
	Name               pulumi.StringInput                 `pulumi:"name"`
	ResultType         pulumi.StringInput                 `pulumi:"resultType"`
	SizeMB             pulumi.Float64Input                `pulumi:"sizeMB"`
}

func (ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseArgs) ToConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput() ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput {
	return i.ToConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseArgs) ToConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput)
}

type ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) ToConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput() ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) ToConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) CompatibilityLevel() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse) string { return v.CompatibilityLevel }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) DatabaseFiles() DatabaseFileInfoResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse) []DatabaseFileInfoResponse {
		return v.DatabaseFiles
	}).(DatabaseFileInfoResponseArrayOutput)
}

func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) DatabaseState() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse) string { return v.DatabaseState }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) SizeMB() pulumi.Float64Output {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse) float64 { return v.SizeMB }).(pulumi.Float64Output)
}

type ConnectToSourceSqlServerTaskOutputLoginLevelResponse struct {
	DefaultDatabase      string                           `pulumi:"defaultDatabase"`
	Id                   string                           `pulumi:"id"`
	IsEnabled            bool                             `pulumi:"isEnabled"`
	LoginType            string                           `pulumi:"loginType"`
	MigrationEligibility MigrationEligibilityInfoResponse `pulumi:"migrationEligibility"`
	Name                 string                           `pulumi:"name"`
	ResultType           string                           `pulumi:"resultType"`
}





type ConnectToSourceSqlServerTaskOutputLoginLevelResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput() ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput
	ToConnectToSourceSqlServerTaskOutputLoginLevelResponseOutputWithContext(context.Context) ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput
}

type ConnectToSourceSqlServerTaskOutputLoginLevelResponseArgs struct {
	DefaultDatabase      pulumi.StringInput                    `pulumi:"defaultDatabase"`
	Id                   pulumi.StringInput                    `pulumi:"id"`
	IsEnabled            pulumi.BoolInput                      `pulumi:"isEnabled"`
	LoginType            pulumi.StringInput                    `pulumi:"loginType"`
	MigrationEligibility MigrationEligibilityInfoResponseInput `pulumi:"migrationEligibility"`
	Name                 pulumi.StringInput                    `pulumi:"name"`
	ResultType           pulumi.StringInput                    `pulumi:"resultType"`
}

func (ConnectToSourceSqlServerTaskOutputLoginLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputLoginLevelResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskOutputLoginLevelResponseArgs) ToConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput() ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput {
	return i.ToConnectToSourceSqlServerTaskOutputLoginLevelResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskOutputLoginLevelResponseArgs) ToConnectToSourceSqlServerTaskOutputLoginLevelResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput)
}

type ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputLoginLevelResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) ToConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput() ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) ToConnectToSourceSqlServerTaskOutputLoginLevelResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) DefaultDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelResponse) string { return v.DefaultDatabase }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

func (o ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) LoginType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelResponse) string { return v.LoginType }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) MigrationEligibility() MigrationEligibilityInfoResponseOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelResponse) MigrationEligibilityInfoResponse {
		return v.MigrationEligibility
	}).(MigrationEligibilityInfoResponseOutput)
}

func (o ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type ConnectToSourceSqlServerTaskOutputTaskLevelResponse struct {
	AgentJobs                     map[string]string             `pulumi:"agentJobs"`
	DatabaseTdeCertificateMapping map[string]string             `pulumi:"databaseTdeCertificateMapping"`
	Databases                     map[string]string             `pulumi:"databases"`
	Id                            string                        `pulumi:"id"`
	Logins                        map[string]string             `pulumi:"logins"`
	ResultType                    string                        `pulumi:"resultType"`
	SourceServerBrandVersion      string                        `pulumi:"sourceServerBrandVersion"`
	SourceServerVersion           string                        `pulumi:"sourceServerVersion"`
	ValidationErrors              []ReportableExceptionResponse `pulumi:"validationErrors"`
}





type ConnectToSourceSqlServerTaskOutputTaskLevelResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput() ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput
	ToConnectToSourceSqlServerTaskOutputTaskLevelResponseOutputWithContext(context.Context) ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput
}

type ConnectToSourceSqlServerTaskOutputTaskLevelResponseArgs struct {
	AgentJobs                     pulumi.StringMapInput                 `pulumi:"agentJobs"`
	DatabaseTdeCertificateMapping pulumi.StringMapInput                 `pulumi:"databaseTdeCertificateMapping"`
	Databases                     pulumi.StringMapInput                 `pulumi:"databases"`
	Id                            pulumi.StringInput                    `pulumi:"id"`
	Logins                        pulumi.StringMapInput                 `pulumi:"logins"`
	ResultType                    pulumi.StringInput                    `pulumi:"resultType"`
	SourceServerBrandVersion      pulumi.StringInput                    `pulumi:"sourceServerBrandVersion"`
	SourceServerVersion           pulumi.StringInput                    `pulumi:"sourceServerVersion"`
	ValidationErrors              ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToSourceSqlServerTaskOutputTaskLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputTaskLevelResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskOutputTaskLevelResponseArgs) ToConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput() ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput {
	return i.ToConnectToSourceSqlServerTaskOutputTaskLevelResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskOutputTaskLevelResponseArgs) ToConnectToSourceSqlServerTaskOutputTaskLevelResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput)
}

type ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputTaskLevelResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) ToConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput() ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) ToConnectToSourceSqlServerTaskOutputTaskLevelResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) AgentJobs() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelResponse) map[string]string { return v.AgentJobs }).(pulumi.StringMapOutput)
}

func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) DatabaseTdeCertificateMapping() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelResponse) map[string]string {
		return v.DatabaseTdeCertificateMapping
	}).(pulumi.StringMapOutput)
}

func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) Databases() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelResponse) map[string]string { return v.Databases }).(pulumi.StringMapOutput)
}

func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) Logins() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelResponse) map[string]string { return v.Logins }).(pulumi.StringMapOutput)
}

func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) SourceServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelResponse) string { return v.SourceServerBrandVersion }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelResponse) string { return v.SourceServerVersion }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ConnectToSourceSqlServerTaskProperties struct {
	ClientData map[string]string                  `pulumi:"clientData"`
	Input      *ConnectToSourceSqlServerTaskInput `pulumi:"input"`
	TaskType   string                             `pulumi:"taskType"`
}





type ConnectToSourceSqlServerTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskPropertiesOutput() ConnectToSourceSqlServerTaskPropertiesOutput
	ToConnectToSourceSqlServerTaskPropertiesOutputWithContext(context.Context) ConnectToSourceSqlServerTaskPropertiesOutput
}

type ConnectToSourceSqlServerTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                     `pulumi:"clientData"`
	Input      ConnectToSourceSqlServerTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                        `pulumi:"taskType"`
}

func (ConnectToSourceSqlServerTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskProperties)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskPropertiesArgs) ToConnectToSourceSqlServerTaskPropertiesOutput() ConnectToSourceSqlServerTaskPropertiesOutput {
	return i.ToConnectToSourceSqlServerTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskPropertiesArgs) ToConnectToSourceSqlServerTaskPropertiesOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskPropertiesOutput)
}

type ConnectToSourceSqlServerTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskProperties)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskPropertiesOutput) ToConnectToSourceSqlServerTaskPropertiesOutput() ConnectToSourceSqlServerTaskPropertiesOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskPropertiesOutput) ToConnectToSourceSqlServerTaskPropertiesOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskPropertiesOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToSourceSqlServerTaskPropertiesOutput) Input() ConnectToSourceSqlServerTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskProperties) *ConnectToSourceSqlServerTaskInput { return v.Input }).(ConnectToSourceSqlServerTaskInputPtrOutput)
}

func (o ConnectToSourceSqlServerTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToSourceSqlServerTaskPropertiesResponse struct {
	ClientData map[string]string                          `pulumi:"clientData"`
	Commands   []interface{}                              `pulumi:"commands"`
	Errors     []ODataErrorResponse                       `pulumi:"errors"`
	Input      *ConnectToSourceSqlServerTaskInputResponse `pulumi:"input"`
	Output     []interface{}                              `pulumi:"output"`
	State      string                                     `pulumi:"state"`
	TaskType   string                                     `pulumi:"taskType"`
}





type ConnectToSourceSqlServerTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskPropertiesResponseOutput() ConnectToSourceSqlServerTaskPropertiesResponseOutput
	ToConnectToSourceSqlServerTaskPropertiesResponseOutputWithContext(context.Context) ConnectToSourceSqlServerTaskPropertiesResponseOutput
}

type ConnectToSourceSqlServerTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                             `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                 `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                      `pulumi:"errors"`
	Input      ConnectToSourceSqlServerTaskInputResponsePtrInput `pulumi:"input"`
	Output     pulumi.ArrayInput                                 `pulumi:"output"`
	State      pulumi.StringInput                                `pulumi:"state"`
	TaskType   pulumi.StringInput                                `pulumi:"taskType"`
}

func (ConnectToSourceSqlServerTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskPropertiesResponseArgs) ToConnectToSourceSqlServerTaskPropertiesResponseOutput() ConnectToSourceSqlServerTaskPropertiesResponseOutput {
	return i.ToConnectToSourceSqlServerTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskPropertiesResponseArgs) ToConnectToSourceSqlServerTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskPropertiesResponseOutput)
}

type ConnectToSourceSqlServerTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskPropertiesResponseOutput) ToConnectToSourceSqlServerTaskPropertiesResponseOutput() ConnectToSourceSqlServerTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskPropertiesResponseOutput) ToConnectToSourceSqlServerTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToSourceSqlServerTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o ConnectToSourceSqlServerTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o ConnectToSourceSqlServerTaskPropertiesResponseOutput) Input() ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesResponse) *ConnectToSourceSqlServerTaskInputResponse {
		return v.Input
	}).(ConnectToSourceSqlServerTaskInputResponsePtrOutput)
}

func (o ConnectToSourceSqlServerTaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

func (o ConnectToSourceSqlServerTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o ConnectToSourceSqlServerTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToTargetAzureDbForMySqlTaskInput struct {
	SourceConnectionInfo MySqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo MySqlConnectionInfo `pulumi:"targetConnectionInfo"`
}





type ConnectToTargetAzureDbForMySqlTaskInputInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskInputOutput() ConnectToTargetAzureDbForMySqlTaskInputOutput
	ToConnectToTargetAzureDbForMySqlTaskInputOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskInputOutput
}

type ConnectToTargetAzureDbForMySqlTaskInputArgs struct {
	SourceConnectionInfo MySqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo MySqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetAzureDbForMySqlTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskInput)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForMySqlTaskInputArgs) ToConnectToTargetAzureDbForMySqlTaskInputOutput() ConnectToTargetAzureDbForMySqlTaskInputOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskInputOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskInputArgs) ToConnectToTargetAzureDbForMySqlTaskInputOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskInputOutput)
}

func (i ConnectToTargetAzureDbForMySqlTaskInputArgs) ToConnectToTargetAzureDbForMySqlTaskInputPtrOutput() ConnectToTargetAzureDbForMySqlTaskInputPtrOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskInputPtrOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskInputArgs) ToConnectToTargetAzureDbForMySqlTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskInputOutput).ToConnectToTargetAzureDbForMySqlTaskInputPtrOutputWithContext(ctx)
}









type ConnectToTargetAzureDbForMySqlTaskInputPtrInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskInputPtrOutput() ConnectToTargetAzureDbForMySqlTaskInputPtrOutput
	ToConnectToTargetAzureDbForMySqlTaskInputPtrOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskInputPtrOutput
}

type connectToTargetAzureDbForMySqlTaskInputPtrType ConnectToTargetAzureDbForMySqlTaskInputArgs

func ConnectToTargetAzureDbForMySqlTaskInputPtr(v *ConnectToTargetAzureDbForMySqlTaskInputArgs) ConnectToTargetAzureDbForMySqlTaskInputPtrInput {
	return (*connectToTargetAzureDbForMySqlTaskInputPtrType)(v)
}

func (*connectToTargetAzureDbForMySqlTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForMySqlTaskInput)(nil)).Elem()
}

func (i *connectToTargetAzureDbForMySqlTaskInputPtrType) ToConnectToTargetAzureDbForMySqlTaskInputPtrOutput() ConnectToTargetAzureDbForMySqlTaskInputPtrOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskInputPtrOutputWithContext(context.Background())
}

func (i *connectToTargetAzureDbForMySqlTaskInputPtrType) ToConnectToTargetAzureDbForMySqlTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskInputPtrOutput)
}

type ConnectToTargetAzureDbForMySqlTaskInputOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskInput)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskInputOutput) ToConnectToTargetAzureDbForMySqlTaskInputOutput() ConnectToTargetAzureDbForMySqlTaskInputOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputOutput) ToConnectToTargetAzureDbForMySqlTaskInputOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputOutput) ToConnectToTargetAzureDbForMySqlTaskInputPtrOutput() ConnectToTargetAzureDbForMySqlTaskInputPtrOutput {
	return o.ToConnectToTargetAzureDbForMySqlTaskInputPtrOutputWithContext(context.Background())
}

func (o ConnectToTargetAzureDbForMySqlTaskInputOutput) ToConnectToTargetAzureDbForMySqlTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToTargetAzureDbForMySqlTaskInput) *ConnectToTargetAzureDbForMySqlTaskInput {
		return &v
	}).(ConnectToTargetAzureDbForMySqlTaskInputPtrOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskInputOutput) SourceConnectionInfo() MySqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskInput) MySqlConnectionInfo { return v.SourceConnectionInfo }).(MySqlConnectionInfoOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskInputOutput) TargetConnectionInfo() MySqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskInput) MySqlConnectionInfo { return v.TargetConnectionInfo }).(MySqlConnectionInfoOutput)
}

type ConnectToTargetAzureDbForMySqlTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForMySqlTaskInput)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskInputPtrOutput) ToConnectToTargetAzureDbForMySqlTaskInputPtrOutput() ConnectToTargetAzureDbForMySqlTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputPtrOutput) ToConnectToTargetAzureDbForMySqlTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputPtrOutput) Elem() ConnectToTargetAzureDbForMySqlTaskInputOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForMySqlTaskInput) ConnectToTargetAzureDbForMySqlTaskInput {
		if v != nil {
			return *v
		}
		var ret ConnectToTargetAzureDbForMySqlTaskInput
		return ret
	}).(ConnectToTargetAzureDbForMySqlTaskInputOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskInputPtrOutput) SourceConnectionInfo() MySqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForMySqlTaskInput) *MySqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(MySqlConnectionInfoPtrOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskInputPtrOutput) TargetConnectionInfo() MySqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForMySqlTaskInput) *MySqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MySqlConnectionInfoPtrOutput)
}

type ConnectToTargetAzureDbForMySqlTaskInputResponse struct {
	SourceConnectionInfo MySqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo MySqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}





type ConnectToTargetAzureDbForMySqlTaskInputResponseInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskInputResponseOutput() ConnectToTargetAzureDbForMySqlTaskInputResponseOutput
	ToConnectToTargetAzureDbForMySqlTaskInputResponseOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskInputResponseOutput
}

type ConnectToTargetAzureDbForMySqlTaskInputResponseArgs struct {
	SourceConnectionInfo MySqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo MySqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetAzureDbForMySqlTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskInputResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForMySqlTaskInputResponseArgs) ToConnectToTargetAzureDbForMySqlTaskInputResponseOutput() ConnectToTargetAzureDbForMySqlTaskInputResponseOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskInputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskInputResponseArgs) ToConnectToTargetAzureDbForMySqlTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskInputResponseOutput)
}

func (i ConnectToTargetAzureDbForMySqlTaskInputResponseArgs) ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput() ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskInputResponseArgs) ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskInputResponseOutput).ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutputWithContext(ctx)
}









type ConnectToTargetAzureDbForMySqlTaskInputResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput() ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput
	ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput
}

type connectToTargetAzureDbForMySqlTaskInputResponsePtrType ConnectToTargetAzureDbForMySqlTaskInputResponseArgs

func ConnectToTargetAzureDbForMySqlTaskInputResponsePtr(v *ConnectToTargetAzureDbForMySqlTaskInputResponseArgs) ConnectToTargetAzureDbForMySqlTaskInputResponsePtrInput {
	return (*connectToTargetAzureDbForMySqlTaskInputResponsePtrType)(v)
}

func (*connectToTargetAzureDbForMySqlTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForMySqlTaskInputResponse)(nil)).Elem()
}

func (i *connectToTargetAzureDbForMySqlTaskInputResponsePtrType) ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput() ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetAzureDbForMySqlTaskInputResponsePtrType) ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput)
}

type ConnectToTargetAzureDbForMySqlTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskInputResponseOutput) ToConnectToTargetAzureDbForMySqlTaskInputResponseOutput() ConnectToTargetAzureDbForMySqlTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputResponseOutput) ToConnectToTargetAzureDbForMySqlTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputResponseOutput) ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput() ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput {
	return o.ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetAzureDbForMySqlTaskInputResponseOutput) ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToTargetAzureDbForMySqlTaskInputResponse) *ConnectToTargetAzureDbForMySqlTaskInputResponse {
		return &v
	}).(ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskInputResponseOutput) SourceConnectionInfo() MySqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskInputResponse) MySqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(MySqlConnectionInfoResponseOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskInputResponseOutput) TargetConnectionInfo() MySqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskInputResponse) MySqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(MySqlConnectionInfoResponseOutput)
}

type ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForMySqlTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput) ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput() ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput) ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput) Elem() ConnectToTargetAzureDbForMySqlTaskInputResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForMySqlTaskInputResponse) ConnectToTargetAzureDbForMySqlTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret ConnectToTargetAzureDbForMySqlTaskInputResponse
		return ret
	}).(ConnectToTargetAzureDbForMySqlTaskInputResponseOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput) SourceConnectionInfo() MySqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForMySqlTaskInputResponse) *MySqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(MySqlConnectionInfoResponsePtrOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput) TargetConnectionInfo() MySqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForMySqlTaskInputResponse) *MySqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MySqlConnectionInfoResponsePtrOutput)
}

type ConnectToTargetAzureDbForMySqlTaskOutputResponse struct {
	Databases                []string                      `pulumi:"databases"`
	Id                       string                        `pulumi:"id"`
	ServerVersion            string                        `pulumi:"serverVersion"`
	TargetServerBrandVersion string                        `pulumi:"targetServerBrandVersion"`
	ValidationErrors         []ReportableExceptionResponse `pulumi:"validationErrors"`
}





type ConnectToTargetAzureDbForMySqlTaskOutputResponseInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskOutputResponseOutput() ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput
	ToConnectToTargetAzureDbForMySqlTaskOutputResponseOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput
}

type ConnectToTargetAzureDbForMySqlTaskOutputResponseArgs struct {
	Databases                pulumi.StringArrayInput               `pulumi:"databases"`
	Id                       pulumi.StringInput                    `pulumi:"id"`
	ServerVersion            pulumi.StringInput                    `pulumi:"serverVersion"`
	TargetServerBrandVersion pulumi.StringInput                    `pulumi:"targetServerBrandVersion"`
	ValidationErrors         ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToTargetAzureDbForMySqlTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForMySqlTaskOutputResponseArgs) ToConnectToTargetAzureDbForMySqlTaskOutputResponseOutput() ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskOutputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskOutputResponseArgs) ToConnectToTargetAzureDbForMySqlTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput)
}





type ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput() ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput
	ToConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput
}

type ConnectToTargetAzureDbForMySqlTaskOutputResponseArray []ConnectToTargetAzureDbForMySqlTaskOutputResponseInput

func (ConnectToTargetAzureDbForMySqlTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetAzureDbForMySqlTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForMySqlTaskOutputResponseArray) ToConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput() ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskOutputResponseArray) ToConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput)
}

type ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput) ToConnectToTargetAzureDbForMySqlTaskOutputResponseOutput() ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput) ToConnectToTargetAzureDbForMySqlTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput) Databases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskOutputResponse) []string { return v.Databases }).(pulumi.StringArrayOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput) ServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskOutputResponse) string { return v.ServerVersion }).(pulumi.StringOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskOutputResponse) string { return v.TargetServerBrandVersion }).(pulumi.StringOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetAzureDbForMySqlTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput) ToConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput() ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput) ToConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToTargetAzureDbForMySqlTaskOutputResponse {
		return vs[0].([]ConnectToTargetAzureDbForMySqlTaskOutputResponse)[vs[1].(int)]
	}).(ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput)
}

type ConnectToTargetAzureDbForMySqlTaskProperties struct {
	ClientData map[string]string                        `pulumi:"clientData"`
	Input      *ConnectToTargetAzureDbForMySqlTaskInput `pulumi:"input"`
	TaskType   string                                   `pulumi:"taskType"`
}





type ConnectToTargetAzureDbForMySqlTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskPropertiesOutput() ConnectToTargetAzureDbForMySqlTaskPropertiesOutput
	ToConnectToTargetAzureDbForMySqlTaskPropertiesOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskPropertiesOutput
}

type ConnectToTargetAzureDbForMySqlTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                           `pulumi:"clientData"`
	Input      ConnectToTargetAzureDbForMySqlTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                              `pulumi:"taskType"`
}

func (ConnectToTargetAzureDbForMySqlTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskProperties)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForMySqlTaskPropertiesArgs) ToConnectToTargetAzureDbForMySqlTaskPropertiesOutput() ConnectToTargetAzureDbForMySqlTaskPropertiesOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskPropertiesArgs) ToConnectToTargetAzureDbForMySqlTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskPropertiesOutput)
}

type ConnectToTargetAzureDbForMySqlTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskProperties)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesOutput) ToConnectToTargetAzureDbForMySqlTaskPropertiesOutput() ConnectToTargetAzureDbForMySqlTaskPropertiesOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesOutput) ToConnectToTargetAzureDbForMySqlTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskPropertiesOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesOutput) Input() ConnectToTargetAzureDbForMySqlTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskProperties) *ConnectToTargetAzureDbForMySqlTaskInput {
		return v.Input
	}).(ConnectToTargetAzureDbForMySqlTaskInputPtrOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToTargetAzureDbForMySqlTaskPropertiesResponse struct {
	ClientData map[string]string                                  `pulumi:"clientData"`
	Commands   []interface{}                                      `pulumi:"commands"`
	Errors     []ODataErrorResponse                               `pulumi:"errors"`
	Input      *ConnectToTargetAzureDbForMySqlTaskInputResponse   `pulumi:"input"`
	Output     []ConnectToTargetAzureDbForMySqlTaskOutputResponse `pulumi:"output"`
	State      string                                             `pulumi:"state"`
	TaskType   string                                             `pulumi:"taskType"`
}





type ConnectToTargetAzureDbForMySqlTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput() ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput
	ToConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput
}

type ConnectToTargetAzureDbForMySqlTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                                      `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                          `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                               `pulumi:"errors"`
	Input      ConnectToTargetAzureDbForMySqlTaskInputResponsePtrInput    `pulumi:"input"`
	Output     ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayInput `pulumi:"output"`
	State      pulumi.StringInput                                         `pulumi:"state"`
	TaskType   pulumi.StringInput                                         `pulumi:"taskType"`
}

func (ConnectToTargetAzureDbForMySqlTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForMySqlTaskPropertiesResponseArgs) ToConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput() ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskPropertiesResponseArgs) ToConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput)
}

type ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) ToConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput() ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) ToConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) Input() ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesResponse) *ConnectToTargetAzureDbForMySqlTaskInputResponse {
		return v.Input
	}).(ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) Output() ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesResponse) []ConnectToTargetAzureDbForMySqlTaskOutputResponse {
		return v.Output
	}).(ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskInput struct {
	SourceConnectionInfo PostgreSqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo PostgreSqlConnectionInfo `pulumi:"targetConnectionInfo"`
}





type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs struct {
	SourceConnectionInfo PostgreSqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo PostgreSqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput)
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput).ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx)
}









type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput
}

type connectToTargetAzureDbForPostgreSqlSyncTaskInputPtrType ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs

func ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtr(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrInput {
	return (*connectToTargetAzureDbForPostgreSqlSyncTaskInputPtrType)(v)
}

func (*connectToTargetAzureDbForPostgreSqlSyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (i *connectToTargetAzureDbForPostgreSqlSyncTaskInputPtrType) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *connectToTargetAzureDbForPostgreSqlSyncTaskInputPtrType) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput)
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToTargetAzureDbForPostgreSqlSyncTaskInput) *ConnectToTargetAzureDbForPostgreSqlSyncTaskInput {
		return &v
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput) SourceConnectionInfo() PostgreSqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskInput) PostgreSqlConnectionInfo {
		return v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput) TargetConnectionInfo() PostgreSqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskInput) PostgreSqlConnectionInfo {
		return v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoOutput)
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput) Elem() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInput) ConnectToTargetAzureDbForPostgreSqlSyncTaskInput {
		if v != nil {
			return *v
		}
		var ret ConnectToTargetAzureDbForPostgreSqlSyncTaskInput
		return ret
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput) SourceConnectionInfo() PostgreSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInput) *PostgreSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoPtrOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput) TargetConnectionInfo() PostgreSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInput) *PostgreSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoPtrOutput)
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse struct {
	SourceConnectionInfo PostgreSqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo PostgreSqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}





type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs struct {
	SourceConnectionInfo PostgreSqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo PostgreSqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput)
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput).ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx)
}









type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput
}

type connectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrType ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs

func ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtr(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrInput {
	return (*connectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrType)(v)
}

func (*connectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i *connectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrType) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrType) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput)
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse) *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse {
		return &v
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput) SourceConnectionInfo() PostgreSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse) PostgreSqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoResponseOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput) TargetConnectionInfo() PostgreSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse) PostgreSqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoResponseOutput)
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) Elem() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse
		return ret
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) SourceConnectionInfo() PostgreSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse) *PostgreSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoResponsePtrOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) TargetConnectionInfo() PostgreSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse) *PostgreSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoResponsePtrOutput)
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse struct {
	Databases                []string                      `pulumi:"databases"`
	Id                       string                        `pulumi:"id"`
	TargetServerBrandVersion string                        `pulumi:"targetServerBrandVersion"`
	TargetServerVersion      string                        `pulumi:"targetServerVersion"`
	ValidationErrors         []ReportableExceptionResponse `pulumi:"validationErrors"`
}





type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArgs struct {
	Databases                pulumi.StringArrayInput               `pulumi:"databases"`
	Id                       pulumi.StringInput                    `pulumi:"id"`
	TargetServerBrandVersion pulumi.StringInput                    `pulumi:"targetServerBrandVersion"`
	TargetServerVersion      pulumi.StringInput                    `pulumi:"targetServerVersion"`
	ValidationErrors         ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput)
}





type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArray []ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseInput

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArray) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArray) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput)
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput) Databases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse) []string { return v.Databases }).(pulumi.StringArrayOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse) string {
		return v.TargetServerBrandVersion
	}).(pulumi.StringOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse {
		return vs[0].([]ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse)[vs[1].(int)]
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput)
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties struct {
	ClientData map[string]string                                 `pulumi:"clientData"`
	Input      *ConnectToTargetAzureDbForPostgreSqlSyncTaskInput `pulumi:"input"`
	TaskType   string                                            `pulumi:"taskType"`
}





type ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                                    `pulumi:"clientData"`
	Input      ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                                       `pulumi:"taskType"`
}

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput)
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput) Input() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties) *ConnectToTargetAzureDbForPostgreSqlSyncTaskInput {
		return v.Input
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse struct {
	ClientData map[string]string                                           `pulumi:"clientData"`
	Commands   []interface{}                                               `pulumi:"commands"`
	Errors     []ODataErrorResponse                                        `pulumi:"errors"`
	Input      *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse   `pulumi:"input"`
	Output     []ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse `pulumi:"output"`
	State      string                                                      `pulumi:"state"`
	TaskType   string                                                      `pulumi:"taskType"`
}





type ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                                               `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                                   `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                                        `pulumi:"errors"`
	Input      ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrInput    `pulumi:"input"`
	Output     ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayInput `pulumi:"output"`
	State      pulumi.StringInput                                                  `pulumi:"state"`
	TaskType   pulumi.StringInput                                                  `pulumi:"taskType"`
}

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput)
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse) map[string]string {
		return v.ClientData
	}).(pulumi.StringMapOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse) []ODataErrorResponse {
		return v.Errors
	}).(ODataErrorResponseArrayOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Input() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse) *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse {
		return v.Input
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Output() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse) []ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse {
		return v.Output
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput struct {
	TargetConnectionInfo PostgreSqlConnectionInfo `pulumi:"targetConnectionInfo"`
}





type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputInput interface {
	pulumi.Input

	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput
	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutputWithContext(context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputArgs struct {
	TargetConnectionInfo PostgreSqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputArgs) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput {
	return i.ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutputWithContext(context.Background())
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputArgs) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput)
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputArgs) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return i.ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputArgs) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput).ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx)
}









type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrInput interface {
	pulumi.Input

	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput
	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput
}

type connectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrType ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputArgs

func ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtr(v *ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputArgs) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrInput {
	return (*connectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrType)(v)
}

func (*connectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (i *connectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrType) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return i.ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *connectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrType) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput)
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput struct{ *pulumi.OutputState }

func (ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o.ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput) *ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput {
		return &v
	}).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput)
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput) TargetConnectionInfo() PostgreSqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput) PostgreSqlConnectionInfo {
		return v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoOutput)
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput) Elem() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput {
	return o.ApplyT(func(v *ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput {
		if v != nil {
			return *v
		}
		var ret ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput
		return ret
	}).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput)
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput) TargetConnectionInfo() PostgreSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput) *PostgreSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoPtrOutput)
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponse struct {
	TargetConnectionInfo PostgreSqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}





type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseInput interface {
	pulumi.Input

	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput
	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseArgs struct {
	TargetConnectionInfo PostgreSqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return i.ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput)
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return i.ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput).ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx)
}









type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput
	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput
}

type connectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrType ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseArgs

func ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtr(v *ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseArgs) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrInput {
	return (*connectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrType)(v)
}

func (*connectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i *connectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrType) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return i.ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrType) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput)
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponse) *ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponse {
		return &v
	}).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput)
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput) TargetConnectionInfo() PostgreSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponse) PostgreSqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoResponseOutput)
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) Elem() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponse) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponse
		return ret
	}).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput)
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) TargetConnectionInfo() PostgreSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponse) *PostgreSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoResponsePtrOutput)
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponse struct {
	DatabaseSchemaMap        []ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMap `pulumi:"databaseSchemaMap"`
	Databases                []string                                                                           `pulumi:"databases"`
	TargetServerBrandVersion string                                                                             `pulumi:"targetServerBrandVersion"`
	TargetServerVersion      string                                                                             `pulumi:"targetServerVersion"`
	ValidationErrors         []ReportableExceptionResponse                                                      `pulumi:"validationErrors"`
}





type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseInput interface {
	pulumi.Input

	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput
	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutputWithContext(context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArgs struct {
	DatabaseSchemaMap        ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayInput `pulumi:"databaseSchemaMap"`
	Databases                pulumi.StringArrayInput                                                                    `pulumi:"databases"`
	TargetServerBrandVersion pulumi.StringInput                                                                         `pulumi:"targetServerBrandVersion"`
	TargetServerVersion      pulumi.StringInput                                                                         `pulumi:"targetServerVersion"`
	ValidationErrors         ReportableExceptionResponseArrayInput                                                      `pulumi:"validationErrors"`
}

func (ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArgs) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput {
	return i.ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArgs) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput)
}





type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput
	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutputWithContext(context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArray []ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseInput

func (ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArray) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput {
	return i.ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArray) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput)
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput) DatabaseSchemaMap() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponse) []ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMap {
		return v.DatabaseSchemaMap
	}).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutput)
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput) Databases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponse) []string { return v.Databases }).(pulumi.StringArrayOutput)
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponse) string {
		return v.TargetServerBrandVersion
	}).(pulumi.StringOutput)
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponse) string {
		return v.TargetServerVersion
	}).(pulumi.StringOutput)
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponse {
		return vs[0].([]ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponse)[vs[1].(int)]
	}).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput)
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMap struct {
	Database *string  `pulumi:"database"`
	Schemas  []string `pulumi:"schemas"`
}





type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapInput interface {
	pulumi.Input

	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput
	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutputWithContext(context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArgs struct {
	Database pulumi.StringPtrInput   `pulumi:"database"`
	Schemas  pulumi.StringArrayInput `pulumi:"schemas"`
}

func (ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMap)(nil)).Elem()
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArgs) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput {
	return i.ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutputWithContext(context.Background())
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArgs) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput)
}





type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayInput interface {
	pulumi.Input

	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutput
	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutputWithContext(context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutput
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArray []ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapInput

func (ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMap)(nil)).Elem()
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArray) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutput {
	return i.ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutputWithContext(context.Background())
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArray) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutput)
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput struct{ *pulumi.OutputState }

func (ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMap)(nil)).Elem()
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMap) *string {
		return v.Database
	}).(pulumi.StringPtrOutput)
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMap) []string {
		return v.Schemas
	}).(pulumi.StringArrayOutput)
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutput struct{ *pulumi.OutputState }

func (ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMap)(nil)).Elem()
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutput) Index(i pulumi.IntInput) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMap {
		return vs[0].([]ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMap)[vs[1].(int)]
	}).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput)
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskProperties struct {
	ClientData map[string]string                                       `pulumi:"clientData"`
	Input      *ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput `pulumi:"input"`
	TaskType   string                                                  `pulumi:"taskType"`
}





type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput
	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                                          `pulumi:"clientData"`
	Input      ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                                             `pulumi:"taskType"`
}

func (ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskProperties)(nil)).Elem()
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesArgs) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return i.ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesArgs) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput)
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskProperties)(nil)).Elem()
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskProperties) map[string]string {
		return v.ClientData
	}).(pulumi.StringMapOutput)
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput) Input() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskProperties) *ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput {
		return v.Input
	}).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput)
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse struct {
	ClientData map[string]string                                                 `pulumi:"clientData"`
	Commands   []interface{}                                                     `pulumi:"commands"`
	Errors     []ODataErrorResponse                                              `pulumi:"errors"`
	Input      *ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponse   `pulumi:"input"`
	Output     []ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponse `pulumi:"output"`
	State      string                                                            `pulumi:"state"`
	TaskType   string                                                            `pulumi:"taskType"`
}





type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput
	ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                                                     `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                                         `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                                              `pulumi:"errors"`
	Input      ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrInput    `pulumi:"input"`
	Output     ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayInput `pulumi:"output"`
	State      pulumi.StringInput                                                        `pulumi:"state"`
	TaskType   pulumi.StringInput                                                        `pulumi:"taskType"`
}

func (ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return i.ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput)
}

type ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ToConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) map[string]string {
		return v.ClientData
	}).(pulumi.StringMapOutput)
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) []interface{} {
		return v.Commands
	}).(pulumi.ArrayOutput)
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) []ODataErrorResponse {
		return v.Errors
	}).(ODataErrorResponseArrayOutput)
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Input() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) *ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponse {
		return v.Input
	}).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput)
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Output() ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) []ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponse {
		return v.Output
	}).(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput)
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToTargetSqlDbTaskInput struct {
	TargetConnectionInfo SqlConnectionInfo `pulumi:"targetConnectionInfo"`
}





type ConnectToTargetSqlDbTaskInputInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskInputOutput() ConnectToTargetSqlDbTaskInputOutput
	ToConnectToTargetSqlDbTaskInputOutputWithContext(context.Context) ConnectToTargetSqlDbTaskInputOutput
}

type ConnectToTargetSqlDbTaskInputArgs struct {
	TargetConnectionInfo SqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetSqlDbTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskInput)(nil)).Elem()
}

func (i ConnectToTargetSqlDbTaskInputArgs) ToConnectToTargetSqlDbTaskInputOutput() ConnectToTargetSqlDbTaskInputOutput {
	return i.ToConnectToTargetSqlDbTaskInputOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskInputArgs) ToConnectToTargetSqlDbTaskInputOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskInputOutput)
}

func (i ConnectToTargetSqlDbTaskInputArgs) ToConnectToTargetSqlDbTaskInputPtrOutput() ConnectToTargetSqlDbTaskInputPtrOutput {
	return i.ToConnectToTargetSqlDbTaskInputPtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskInputArgs) ToConnectToTargetSqlDbTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskInputOutput).ToConnectToTargetSqlDbTaskInputPtrOutputWithContext(ctx)
}









type ConnectToTargetSqlDbTaskInputPtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskInputPtrOutput() ConnectToTargetSqlDbTaskInputPtrOutput
	ToConnectToTargetSqlDbTaskInputPtrOutputWithContext(context.Context) ConnectToTargetSqlDbTaskInputPtrOutput
}

type connectToTargetSqlDbTaskInputPtrType ConnectToTargetSqlDbTaskInputArgs

func ConnectToTargetSqlDbTaskInputPtr(v *ConnectToTargetSqlDbTaskInputArgs) ConnectToTargetSqlDbTaskInputPtrInput {
	return (*connectToTargetSqlDbTaskInputPtrType)(v)
}

func (*connectToTargetSqlDbTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlDbTaskInput)(nil)).Elem()
}

func (i *connectToTargetSqlDbTaskInputPtrType) ToConnectToTargetSqlDbTaskInputPtrOutput() ConnectToTargetSqlDbTaskInputPtrOutput {
	return i.ToConnectToTargetSqlDbTaskInputPtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlDbTaskInputPtrType) ToConnectToTargetSqlDbTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskInputPtrOutput)
}

type ConnectToTargetSqlDbTaskInputOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskInput)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskInputOutput) ToConnectToTargetSqlDbTaskInputOutput() ConnectToTargetSqlDbTaskInputOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputOutput) ToConnectToTargetSqlDbTaskInputOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputOutput) ToConnectToTargetSqlDbTaskInputPtrOutput() ConnectToTargetSqlDbTaskInputPtrOutput {
	return o.ToConnectToTargetSqlDbTaskInputPtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlDbTaskInputOutput) ToConnectToTargetSqlDbTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToTargetSqlDbTaskInput) *ConnectToTargetSqlDbTaskInput {
		return &v
	}).(ConnectToTargetSqlDbTaskInputPtrOutput)
}

func (o ConnectToTargetSqlDbTaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

type ConnectToTargetSqlDbTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlDbTaskInput)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskInputPtrOutput) ToConnectToTargetSqlDbTaskInputPtrOutput() ConnectToTargetSqlDbTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputPtrOutput) ToConnectToTargetSqlDbTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputPtrOutput) Elem() ConnectToTargetSqlDbTaskInputOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlDbTaskInput) ConnectToTargetSqlDbTaskInput {
		if v != nil {
			return *v
		}
		var ret ConnectToTargetSqlDbTaskInput
		return ret
	}).(ConnectToTargetSqlDbTaskInputOutput)
}

func (o ConnectToTargetSqlDbTaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlDbTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

type ConnectToTargetSqlDbTaskInputResponse struct {
	TargetConnectionInfo SqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}





type ConnectToTargetSqlDbTaskInputResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskInputResponseOutput() ConnectToTargetSqlDbTaskInputResponseOutput
	ToConnectToTargetSqlDbTaskInputResponseOutputWithContext(context.Context) ConnectToTargetSqlDbTaskInputResponseOutput
}

type ConnectToTargetSqlDbTaskInputResponseArgs struct {
	TargetConnectionInfo SqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetSqlDbTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskInputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlDbTaskInputResponseArgs) ToConnectToTargetSqlDbTaskInputResponseOutput() ConnectToTargetSqlDbTaskInputResponseOutput {
	return i.ToConnectToTargetSqlDbTaskInputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskInputResponseArgs) ToConnectToTargetSqlDbTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskInputResponseOutput)
}

func (i ConnectToTargetSqlDbTaskInputResponseArgs) ToConnectToTargetSqlDbTaskInputResponsePtrOutput() ConnectToTargetSqlDbTaskInputResponsePtrOutput {
	return i.ToConnectToTargetSqlDbTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskInputResponseArgs) ToConnectToTargetSqlDbTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskInputResponseOutput).ToConnectToTargetSqlDbTaskInputResponsePtrOutputWithContext(ctx)
}









type ConnectToTargetSqlDbTaskInputResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskInputResponsePtrOutput() ConnectToTargetSqlDbTaskInputResponsePtrOutput
	ToConnectToTargetSqlDbTaskInputResponsePtrOutputWithContext(context.Context) ConnectToTargetSqlDbTaskInputResponsePtrOutput
}

type connectToTargetSqlDbTaskInputResponsePtrType ConnectToTargetSqlDbTaskInputResponseArgs

func ConnectToTargetSqlDbTaskInputResponsePtr(v *ConnectToTargetSqlDbTaskInputResponseArgs) ConnectToTargetSqlDbTaskInputResponsePtrInput {
	return (*connectToTargetSqlDbTaskInputResponsePtrType)(v)
}

func (*connectToTargetSqlDbTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlDbTaskInputResponse)(nil)).Elem()
}

func (i *connectToTargetSqlDbTaskInputResponsePtrType) ToConnectToTargetSqlDbTaskInputResponsePtrOutput() ConnectToTargetSqlDbTaskInputResponsePtrOutput {
	return i.ToConnectToTargetSqlDbTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlDbTaskInputResponsePtrType) ToConnectToTargetSqlDbTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskInputResponsePtrOutput)
}

type ConnectToTargetSqlDbTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskInputResponseOutput) ToConnectToTargetSqlDbTaskInputResponseOutput() ConnectToTargetSqlDbTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputResponseOutput) ToConnectToTargetSqlDbTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputResponseOutput) ToConnectToTargetSqlDbTaskInputResponsePtrOutput() ConnectToTargetSqlDbTaskInputResponsePtrOutput {
	return o.ToConnectToTargetSqlDbTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlDbTaskInputResponseOutput) ToConnectToTargetSqlDbTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToTargetSqlDbTaskInputResponse) *ConnectToTargetSqlDbTaskInputResponse {
		return &v
	}).(ConnectToTargetSqlDbTaskInputResponsePtrOutput)
}

func (o ConnectToTargetSqlDbTaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskInputResponse) SqlConnectionInfoResponse { return v.TargetConnectionInfo }).(SqlConnectionInfoResponseOutput)
}

type ConnectToTargetSqlDbTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlDbTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskInputResponsePtrOutput) ToConnectToTargetSqlDbTaskInputResponsePtrOutput() ConnectToTargetSqlDbTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputResponsePtrOutput) ToConnectToTargetSqlDbTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputResponsePtrOutput) Elem() ConnectToTargetSqlDbTaskInputResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlDbTaskInputResponse) ConnectToTargetSqlDbTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret ConnectToTargetSqlDbTaskInputResponse
		return ret
	}).(ConnectToTargetSqlDbTaskInputResponseOutput)
}

func (o ConnectToTargetSqlDbTaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlDbTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

type ConnectToTargetSqlDbTaskOutputResponse struct {
	Databases                map[string]string `pulumi:"databases"`
	Id                       string            `pulumi:"id"`
	TargetServerBrandVersion string            `pulumi:"targetServerBrandVersion"`
	TargetServerVersion      string            `pulumi:"targetServerVersion"`
}





type ConnectToTargetSqlDbTaskOutputResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskOutputResponseOutput() ConnectToTargetSqlDbTaskOutputResponseOutput
	ToConnectToTargetSqlDbTaskOutputResponseOutputWithContext(context.Context) ConnectToTargetSqlDbTaskOutputResponseOutput
}

type ConnectToTargetSqlDbTaskOutputResponseArgs struct {
	Databases                pulumi.StringMapInput `pulumi:"databases"`
	Id                       pulumi.StringInput    `pulumi:"id"`
	TargetServerBrandVersion pulumi.StringInput    `pulumi:"targetServerBrandVersion"`
	TargetServerVersion      pulumi.StringInput    `pulumi:"targetServerVersion"`
}

func (ConnectToTargetSqlDbTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlDbTaskOutputResponseArgs) ToConnectToTargetSqlDbTaskOutputResponseOutput() ConnectToTargetSqlDbTaskOutputResponseOutput {
	return i.ToConnectToTargetSqlDbTaskOutputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskOutputResponseArgs) ToConnectToTargetSqlDbTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskOutputResponseOutput)
}





type ConnectToTargetSqlDbTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskOutputResponseArrayOutput() ConnectToTargetSqlDbTaskOutputResponseArrayOutput
	ToConnectToTargetSqlDbTaskOutputResponseArrayOutputWithContext(context.Context) ConnectToTargetSqlDbTaskOutputResponseArrayOutput
}

type ConnectToTargetSqlDbTaskOutputResponseArray []ConnectToTargetSqlDbTaskOutputResponseInput

func (ConnectToTargetSqlDbTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetSqlDbTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlDbTaskOutputResponseArray) ToConnectToTargetSqlDbTaskOutputResponseArrayOutput() ConnectToTargetSqlDbTaskOutputResponseArrayOutput {
	return i.ToConnectToTargetSqlDbTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskOutputResponseArray) ToConnectToTargetSqlDbTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskOutputResponseArrayOutput)
}

type ConnectToTargetSqlDbTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskOutputResponseOutput) ToConnectToTargetSqlDbTaskOutputResponseOutput() ConnectToTargetSqlDbTaskOutputResponseOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskOutputResponseOutput) ToConnectToTargetSqlDbTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskOutputResponseOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskOutputResponseOutput) Databases() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskOutputResponse) map[string]string { return v.Databases }).(pulumi.StringMapOutput)
}

func (o ConnectToTargetSqlDbTaskOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o ConnectToTargetSqlDbTaskOutputResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskOutputResponse) string { return v.TargetServerBrandVersion }).(pulumi.StringOutput)
}

func (o ConnectToTargetSqlDbTaskOutputResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskOutputResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

type ConnectToTargetSqlDbTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetSqlDbTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskOutputResponseArrayOutput) ToConnectToTargetSqlDbTaskOutputResponseArrayOutput() ConnectToTargetSqlDbTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskOutputResponseArrayOutput) ToConnectToTargetSqlDbTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ConnectToTargetSqlDbTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToTargetSqlDbTaskOutputResponse {
		return vs[0].([]ConnectToTargetSqlDbTaskOutputResponse)[vs[1].(int)]
	}).(ConnectToTargetSqlDbTaskOutputResponseOutput)
}

type ConnectToTargetSqlDbTaskProperties struct {
	ClientData map[string]string              `pulumi:"clientData"`
	Input      *ConnectToTargetSqlDbTaskInput `pulumi:"input"`
	TaskType   string                         `pulumi:"taskType"`
}





type ConnectToTargetSqlDbTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskPropertiesOutput() ConnectToTargetSqlDbTaskPropertiesOutput
	ToConnectToTargetSqlDbTaskPropertiesOutputWithContext(context.Context) ConnectToTargetSqlDbTaskPropertiesOutput
}

type ConnectToTargetSqlDbTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                 `pulumi:"clientData"`
	Input      ConnectToTargetSqlDbTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                    `pulumi:"taskType"`
}

func (ConnectToTargetSqlDbTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskProperties)(nil)).Elem()
}

func (i ConnectToTargetSqlDbTaskPropertiesArgs) ToConnectToTargetSqlDbTaskPropertiesOutput() ConnectToTargetSqlDbTaskPropertiesOutput {
	return i.ToConnectToTargetSqlDbTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskPropertiesArgs) ToConnectToTargetSqlDbTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskPropertiesOutput)
}

type ConnectToTargetSqlDbTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskProperties)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskPropertiesOutput) ToConnectToTargetSqlDbTaskPropertiesOutput() ConnectToTargetSqlDbTaskPropertiesOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskPropertiesOutput) ToConnectToTargetSqlDbTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskPropertiesOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToTargetSqlDbTaskPropertiesOutput) Input() ConnectToTargetSqlDbTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskProperties) *ConnectToTargetSqlDbTaskInput { return v.Input }).(ConnectToTargetSqlDbTaskInputPtrOutput)
}

func (o ConnectToTargetSqlDbTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToTargetSqlDbTaskPropertiesResponse struct {
	ClientData map[string]string                        `pulumi:"clientData"`
	Commands   []interface{}                            `pulumi:"commands"`
	Errors     []ODataErrorResponse                     `pulumi:"errors"`
	Input      *ConnectToTargetSqlDbTaskInputResponse   `pulumi:"input"`
	Output     []ConnectToTargetSqlDbTaskOutputResponse `pulumi:"output"`
	State      string                                   `pulumi:"state"`
	TaskType   string                                   `pulumi:"taskType"`
}





type ConnectToTargetSqlDbTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskPropertiesResponseOutput() ConnectToTargetSqlDbTaskPropertiesResponseOutput
	ToConnectToTargetSqlDbTaskPropertiesResponseOutputWithContext(context.Context) ConnectToTargetSqlDbTaskPropertiesResponseOutput
}

type ConnectToTargetSqlDbTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                            `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                     `pulumi:"errors"`
	Input      ConnectToTargetSqlDbTaskInputResponsePtrInput    `pulumi:"input"`
	Output     ConnectToTargetSqlDbTaskOutputResponseArrayInput `pulumi:"output"`
	State      pulumi.StringInput                               `pulumi:"state"`
	TaskType   pulumi.StringInput                               `pulumi:"taskType"`
}

func (ConnectToTargetSqlDbTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlDbTaskPropertiesResponseArgs) ToConnectToTargetSqlDbTaskPropertiesResponseOutput() ConnectToTargetSqlDbTaskPropertiesResponseOutput {
	return i.ToConnectToTargetSqlDbTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskPropertiesResponseArgs) ToConnectToTargetSqlDbTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskPropertiesResponseOutput)
}

type ConnectToTargetSqlDbTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskPropertiesResponseOutput) ToConnectToTargetSqlDbTaskPropertiesResponseOutput() ConnectToTargetSqlDbTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskPropertiesResponseOutput) ToConnectToTargetSqlDbTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToTargetSqlDbTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o ConnectToTargetSqlDbTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o ConnectToTargetSqlDbTaskPropertiesResponseOutput) Input() ConnectToTargetSqlDbTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesResponse) *ConnectToTargetSqlDbTaskInputResponse {
		return v.Input
	}).(ConnectToTargetSqlDbTaskInputResponsePtrOutput)
}

func (o ConnectToTargetSqlDbTaskPropertiesResponseOutput) Output() ConnectToTargetSqlDbTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesResponse) []ConnectToTargetSqlDbTaskOutputResponse {
		return v.Output
	}).(ConnectToTargetSqlDbTaskOutputResponseArrayOutput)
}

func (o ConnectToTargetSqlDbTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o ConnectToTargetSqlDbTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToTargetSqlMISyncTaskInput struct {
	AzureApp             AzureActiveDirectoryApp `pulumi:"azureApp"`
	TargetConnectionInfo MiSqlConnectionInfo     `pulumi:"targetConnectionInfo"`
}





type ConnectToTargetSqlMISyncTaskInputInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskInputOutput() ConnectToTargetSqlMISyncTaskInputOutput
	ToConnectToTargetSqlMISyncTaskInputOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskInputOutput
}

type ConnectToTargetSqlMISyncTaskInputArgs struct {
	AzureApp             AzureActiveDirectoryAppInput `pulumi:"azureApp"`
	TargetConnectionInfo MiSqlConnectionInfoInput     `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetSqlMISyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskInput)(nil)).Elem()
}

func (i ConnectToTargetSqlMISyncTaskInputArgs) ToConnectToTargetSqlMISyncTaskInputOutput() ConnectToTargetSqlMISyncTaskInputOutput {
	return i.ToConnectToTargetSqlMISyncTaskInputOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskInputArgs) ToConnectToTargetSqlMISyncTaskInputOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskInputOutput)
}

func (i ConnectToTargetSqlMISyncTaskInputArgs) ToConnectToTargetSqlMISyncTaskInputPtrOutput() ConnectToTargetSqlMISyncTaskInputPtrOutput {
	return i.ToConnectToTargetSqlMISyncTaskInputPtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskInputArgs) ToConnectToTargetSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskInputOutput).ToConnectToTargetSqlMISyncTaskInputPtrOutputWithContext(ctx)
}









type ConnectToTargetSqlMISyncTaskInputPtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskInputPtrOutput() ConnectToTargetSqlMISyncTaskInputPtrOutput
	ToConnectToTargetSqlMISyncTaskInputPtrOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskInputPtrOutput
}

type connectToTargetSqlMISyncTaskInputPtrType ConnectToTargetSqlMISyncTaskInputArgs

func ConnectToTargetSqlMISyncTaskInputPtr(v *ConnectToTargetSqlMISyncTaskInputArgs) ConnectToTargetSqlMISyncTaskInputPtrInput {
	return (*connectToTargetSqlMISyncTaskInputPtrType)(v)
}

func (*connectToTargetSqlMISyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMISyncTaskInput)(nil)).Elem()
}

func (i *connectToTargetSqlMISyncTaskInputPtrType) ToConnectToTargetSqlMISyncTaskInputPtrOutput() ConnectToTargetSqlMISyncTaskInputPtrOutput {
	return i.ToConnectToTargetSqlMISyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlMISyncTaskInputPtrType) ToConnectToTargetSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskInputPtrOutput)
}

type ConnectToTargetSqlMISyncTaskInputOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskInput)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskInputOutput) ToConnectToTargetSqlMISyncTaskInputOutput() ConnectToTargetSqlMISyncTaskInputOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputOutput) ToConnectToTargetSqlMISyncTaskInputOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputOutput) ToConnectToTargetSqlMISyncTaskInputPtrOutput() ConnectToTargetSqlMISyncTaskInputPtrOutput {
	return o.ToConnectToTargetSqlMISyncTaskInputPtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlMISyncTaskInputOutput) ToConnectToTargetSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToTargetSqlMISyncTaskInput) *ConnectToTargetSqlMISyncTaskInput {
		return &v
	}).(ConnectToTargetSqlMISyncTaskInputPtrOutput)
}

func (o ConnectToTargetSqlMISyncTaskInputOutput) AzureApp() AzureActiveDirectoryAppOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskInput) AzureActiveDirectoryApp { return v.AzureApp }).(AzureActiveDirectoryAppOutput)
}

func (o ConnectToTargetSqlMISyncTaskInputOutput) TargetConnectionInfo() MiSqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskInput) MiSqlConnectionInfo { return v.TargetConnectionInfo }).(MiSqlConnectionInfoOutput)
}

type ConnectToTargetSqlMISyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMISyncTaskInput)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskInputPtrOutput) ToConnectToTargetSqlMISyncTaskInputPtrOutput() ConnectToTargetSqlMISyncTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputPtrOutput) ToConnectToTargetSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputPtrOutput) Elem() ConnectToTargetSqlMISyncTaskInputOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMISyncTaskInput) ConnectToTargetSqlMISyncTaskInput {
		if v != nil {
			return *v
		}
		var ret ConnectToTargetSqlMISyncTaskInput
		return ret
	}).(ConnectToTargetSqlMISyncTaskInputOutput)
}

func (o ConnectToTargetSqlMISyncTaskInputPtrOutput) AzureApp() AzureActiveDirectoryAppPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMISyncTaskInput) *AzureActiveDirectoryApp {
		if v == nil {
			return nil
		}
		return &v.AzureApp
	}).(AzureActiveDirectoryAppPtrOutput)
}

func (o ConnectToTargetSqlMISyncTaskInputPtrOutput) TargetConnectionInfo() MiSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMISyncTaskInput) *MiSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MiSqlConnectionInfoPtrOutput)
}

type ConnectToTargetSqlMISyncTaskInputResponse struct {
	AzureApp             AzureActiveDirectoryAppResponse `pulumi:"azureApp"`
	TargetConnectionInfo MiSqlConnectionInfoResponse     `pulumi:"targetConnectionInfo"`
}





type ConnectToTargetSqlMISyncTaskInputResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskInputResponseOutput() ConnectToTargetSqlMISyncTaskInputResponseOutput
	ToConnectToTargetSqlMISyncTaskInputResponseOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskInputResponseOutput
}

type ConnectToTargetSqlMISyncTaskInputResponseArgs struct {
	AzureApp             AzureActiveDirectoryAppResponseInput `pulumi:"azureApp"`
	TargetConnectionInfo MiSqlConnectionInfoResponseInput     `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetSqlMISyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMISyncTaskInputResponseArgs) ToConnectToTargetSqlMISyncTaskInputResponseOutput() ConnectToTargetSqlMISyncTaskInputResponseOutput {
	return i.ToConnectToTargetSqlMISyncTaskInputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskInputResponseArgs) ToConnectToTargetSqlMISyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskInputResponseOutput)
}

func (i ConnectToTargetSqlMISyncTaskInputResponseArgs) ToConnectToTargetSqlMISyncTaskInputResponsePtrOutput() ConnectToTargetSqlMISyncTaskInputResponsePtrOutput {
	return i.ToConnectToTargetSqlMISyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskInputResponseArgs) ToConnectToTargetSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskInputResponseOutput).ToConnectToTargetSqlMISyncTaskInputResponsePtrOutputWithContext(ctx)
}









type ConnectToTargetSqlMISyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskInputResponsePtrOutput() ConnectToTargetSqlMISyncTaskInputResponsePtrOutput
	ToConnectToTargetSqlMISyncTaskInputResponsePtrOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskInputResponsePtrOutput
}

type connectToTargetSqlMISyncTaskInputResponsePtrType ConnectToTargetSqlMISyncTaskInputResponseArgs

func ConnectToTargetSqlMISyncTaskInputResponsePtr(v *ConnectToTargetSqlMISyncTaskInputResponseArgs) ConnectToTargetSqlMISyncTaskInputResponsePtrInput {
	return (*connectToTargetSqlMISyncTaskInputResponsePtrType)(v)
}

func (*connectToTargetSqlMISyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (i *connectToTargetSqlMISyncTaskInputResponsePtrType) ToConnectToTargetSqlMISyncTaskInputResponsePtrOutput() ConnectToTargetSqlMISyncTaskInputResponsePtrOutput {
	return i.ToConnectToTargetSqlMISyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlMISyncTaskInputResponsePtrType) ToConnectToTargetSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskInputResponsePtrOutput)
}

type ConnectToTargetSqlMISyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskInputResponseOutput) ToConnectToTargetSqlMISyncTaskInputResponseOutput() ConnectToTargetSqlMISyncTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputResponseOutput) ToConnectToTargetSqlMISyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputResponseOutput) ToConnectToTargetSqlMISyncTaskInputResponsePtrOutput() ConnectToTargetSqlMISyncTaskInputResponsePtrOutput {
	return o.ToConnectToTargetSqlMISyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlMISyncTaskInputResponseOutput) ToConnectToTargetSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToTargetSqlMISyncTaskInputResponse) *ConnectToTargetSqlMISyncTaskInputResponse {
		return &v
	}).(ConnectToTargetSqlMISyncTaskInputResponsePtrOutput)
}

func (o ConnectToTargetSqlMISyncTaskInputResponseOutput) AzureApp() AzureActiveDirectoryAppResponseOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskInputResponse) AzureActiveDirectoryAppResponse { return v.AzureApp }).(AzureActiveDirectoryAppResponseOutput)
}

func (o ConnectToTargetSqlMISyncTaskInputResponseOutput) TargetConnectionInfo() MiSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskInputResponse) MiSqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(MiSqlConnectionInfoResponseOutput)
}

type ConnectToTargetSqlMISyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskInputResponsePtrOutput) ToConnectToTargetSqlMISyncTaskInputResponsePtrOutput() ConnectToTargetSqlMISyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputResponsePtrOutput) ToConnectToTargetSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputResponsePtrOutput) Elem() ConnectToTargetSqlMISyncTaskInputResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMISyncTaskInputResponse) ConnectToTargetSqlMISyncTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret ConnectToTargetSqlMISyncTaskInputResponse
		return ret
	}).(ConnectToTargetSqlMISyncTaskInputResponseOutput)
}

func (o ConnectToTargetSqlMISyncTaskInputResponsePtrOutput) AzureApp() AzureActiveDirectoryAppResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMISyncTaskInputResponse) *AzureActiveDirectoryAppResponse {
		if v == nil {
			return nil
		}
		return &v.AzureApp
	}).(AzureActiveDirectoryAppResponsePtrOutput)
}

func (o ConnectToTargetSqlMISyncTaskInputResponsePtrOutput) TargetConnectionInfo() MiSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMISyncTaskInputResponse) *MiSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MiSqlConnectionInfoResponsePtrOutput)
}

type ConnectToTargetSqlMISyncTaskOutputResponse struct {
	TargetServerBrandVersion string                        `pulumi:"targetServerBrandVersion"`
	TargetServerVersion      string                        `pulumi:"targetServerVersion"`
	ValidationErrors         []ReportableExceptionResponse `pulumi:"validationErrors"`
}





type ConnectToTargetSqlMISyncTaskOutputResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskOutputResponseOutput() ConnectToTargetSqlMISyncTaskOutputResponseOutput
	ToConnectToTargetSqlMISyncTaskOutputResponseOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskOutputResponseOutput
}

type ConnectToTargetSqlMISyncTaskOutputResponseArgs struct {
	TargetServerBrandVersion pulumi.StringInput                    `pulumi:"targetServerBrandVersion"`
	TargetServerVersion      pulumi.StringInput                    `pulumi:"targetServerVersion"`
	ValidationErrors         ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToTargetSqlMISyncTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMISyncTaskOutputResponseArgs) ToConnectToTargetSqlMISyncTaskOutputResponseOutput() ConnectToTargetSqlMISyncTaskOutputResponseOutput {
	return i.ToConnectToTargetSqlMISyncTaskOutputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskOutputResponseArgs) ToConnectToTargetSqlMISyncTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskOutputResponseOutput)
}





type ConnectToTargetSqlMISyncTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskOutputResponseArrayOutput() ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput
	ToConnectToTargetSqlMISyncTaskOutputResponseArrayOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput
}

type ConnectToTargetSqlMISyncTaskOutputResponseArray []ConnectToTargetSqlMISyncTaskOutputResponseInput

func (ConnectToTargetSqlMISyncTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetSqlMISyncTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMISyncTaskOutputResponseArray) ToConnectToTargetSqlMISyncTaskOutputResponseArrayOutput() ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput {
	return i.ToConnectToTargetSqlMISyncTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskOutputResponseArray) ToConnectToTargetSqlMISyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput)
}

type ConnectToTargetSqlMISyncTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskOutputResponseOutput) ToConnectToTargetSqlMISyncTaskOutputResponseOutput() ConnectToTargetSqlMISyncTaskOutputResponseOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskOutputResponseOutput) ToConnectToTargetSqlMISyncTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskOutputResponseOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskOutputResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskOutputResponse) string { return v.TargetServerBrandVersion }).(pulumi.StringOutput)
}

func (o ConnectToTargetSqlMISyncTaskOutputResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskOutputResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

func (o ConnectToTargetSqlMISyncTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetSqlMISyncTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput) ToConnectToTargetSqlMISyncTaskOutputResponseArrayOutput() ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput) ToConnectToTargetSqlMISyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ConnectToTargetSqlMISyncTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToTargetSqlMISyncTaskOutputResponse {
		return vs[0].([]ConnectToTargetSqlMISyncTaskOutputResponse)[vs[1].(int)]
	}).(ConnectToTargetSqlMISyncTaskOutputResponseOutput)
}

type ConnectToTargetSqlMISyncTaskProperties struct {
	ClientData map[string]string                  `pulumi:"clientData"`
	Input      *ConnectToTargetSqlMISyncTaskInput `pulumi:"input"`
	TaskType   string                             `pulumi:"taskType"`
}





type ConnectToTargetSqlMISyncTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskPropertiesOutput() ConnectToTargetSqlMISyncTaskPropertiesOutput
	ToConnectToTargetSqlMISyncTaskPropertiesOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskPropertiesOutput
}

type ConnectToTargetSqlMISyncTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                     `pulumi:"clientData"`
	Input      ConnectToTargetSqlMISyncTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                        `pulumi:"taskType"`
}

func (ConnectToTargetSqlMISyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskProperties)(nil)).Elem()
}

func (i ConnectToTargetSqlMISyncTaskPropertiesArgs) ToConnectToTargetSqlMISyncTaskPropertiesOutput() ConnectToTargetSqlMISyncTaskPropertiesOutput {
	return i.ToConnectToTargetSqlMISyncTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskPropertiesArgs) ToConnectToTargetSqlMISyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskPropertiesOutput)
}

type ConnectToTargetSqlMISyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskProperties)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskPropertiesOutput) ToConnectToTargetSqlMISyncTaskPropertiesOutput() ConnectToTargetSqlMISyncTaskPropertiesOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskPropertiesOutput) ToConnectToTargetSqlMISyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskPropertiesOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToTargetSqlMISyncTaskPropertiesOutput) Input() ConnectToTargetSqlMISyncTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskProperties) *ConnectToTargetSqlMISyncTaskInput { return v.Input }).(ConnectToTargetSqlMISyncTaskInputPtrOutput)
}

func (o ConnectToTargetSqlMISyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToTargetSqlMISyncTaskPropertiesResponse struct {
	ClientData map[string]string                            `pulumi:"clientData"`
	Commands   []interface{}                                `pulumi:"commands"`
	Errors     []ODataErrorResponse                         `pulumi:"errors"`
	Input      *ConnectToTargetSqlMISyncTaskInputResponse   `pulumi:"input"`
	Output     []ConnectToTargetSqlMISyncTaskOutputResponse `pulumi:"output"`
	State      string                                       `pulumi:"state"`
	TaskType   string                                       `pulumi:"taskType"`
}





type ConnectToTargetSqlMISyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskPropertiesResponseOutput() ConnectToTargetSqlMISyncTaskPropertiesResponseOutput
	ToConnectToTargetSqlMISyncTaskPropertiesResponseOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskPropertiesResponseOutput
}

type ConnectToTargetSqlMISyncTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                                `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                    `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                         `pulumi:"errors"`
	Input      ConnectToTargetSqlMISyncTaskInputResponsePtrInput    `pulumi:"input"`
	Output     ConnectToTargetSqlMISyncTaskOutputResponseArrayInput `pulumi:"output"`
	State      pulumi.StringInput                                   `pulumi:"state"`
	TaskType   pulumi.StringInput                                   `pulumi:"taskType"`
}

func (ConnectToTargetSqlMISyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMISyncTaskPropertiesResponseArgs) ToConnectToTargetSqlMISyncTaskPropertiesResponseOutput() ConnectToTargetSqlMISyncTaskPropertiesResponseOutput {
	return i.ToConnectToTargetSqlMISyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskPropertiesResponseArgs) ToConnectToTargetSqlMISyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskPropertiesResponseOutput)
}

type ConnectToTargetSqlMISyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) ToConnectToTargetSqlMISyncTaskPropertiesResponseOutput() ConnectToTargetSqlMISyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) ToConnectToTargetSqlMISyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) Input() ConnectToTargetSqlMISyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesResponse) *ConnectToTargetSqlMISyncTaskInputResponse {
		return v.Input
	}).(ConnectToTargetSqlMISyncTaskInputResponsePtrOutput)
}

func (o ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) Output() ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesResponse) []ConnectToTargetSqlMISyncTaskOutputResponse {
		return v.Output
	}).(ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput)
}

func (o ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToTargetSqlMITaskInput struct {
	CollectAgentJobs        *bool             `pulumi:"collectAgentJobs"`
	CollectLogins           *bool             `pulumi:"collectLogins"`
	TargetConnectionInfo    SqlConnectionInfo `pulumi:"targetConnectionInfo"`
	ValidateSsisCatalogOnly *bool             `pulumi:"validateSsisCatalogOnly"`
}





type ConnectToTargetSqlMITaskInputInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskInputOutput() ConnectToTargetSqlMITaskInputOutput
	ToConnectToTargetSqlMITaskInputOutputWithContext(context.Context) ConnectToTargetSqlMITaskInputOutput
}

type ConnectToTargetSqlMITaskInputArgs struct {
	CollectAgentJobs        pulumi.BoolPtrInput    `pulumi:"collectAgentJobs"`
	CollectLogins           pulumi.BoolPtrInput    `pulumi:"collectLogins"`
	TargetConnectionInfo    SqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
	ValidateSsisCatalogOnly pulumi.BoolPtrInput    `pulumi:"validateSsisCatalogOnly"`
}

func (ConnectToTargetSqlMITaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskInput)(nil)).Elem()
}

func (i ConnectToTargetSqlMITaskInputArgs) ToConnectToTargetSqlMITaskInputOutput() ConnectToTargetSqlMITaskInputOutput {
	return i.ToConnectToTargetSqlMITaskInputOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskInputArgs) ToConnectToTargetSqlMITaskInputOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskInputOutput)
}

func (i ConnectToTargetSqlMITaskInputArgs) ToConnectToTargetSqlMITaskInputPtrOutput() ConnectToTargetSqlMITaskInputPtrOutput {
	return i.ToConnectToTargetSqlMITaskInputPtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskInputArgs) ToConnectToTargetSqlMITaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskInputOutput).ToConnectToTargetSqlMITaskInputPtrOutputWithContext(ctx)
}









type ConnectToTargetSqlMITaskInputPtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskInputPtrOutput() ConnectToTargetSqlMITaskInputPtrOutput
	ToConnectToTargetSqlMITaskInputPtrOutputWithContext(context.Context) ConnectToTargetSqlMITaskInputPtrOutput
}

type connectToTargetSqlMITaskInputPtrType ConnectToTargetSqlMITaskInputArgs

func ConnectToTargetSqlMITaskInputPtr(v *ConnectToTargetSqlMITaskInputArgs) ConnectToTargetSqlMITaskInputPtrInput {
	return (*connectToTargetSqlMITaskInputPtrType)(v)
}

func (*connectToTargetSqlMITaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMITaskInput)(nil)).Elem()
}

func (i *connectToTargetSqlMITaskInputPtrType) ToConnectToTargetSqlMITaskInputPtrOutput() ConnectToTargetSqlMITaskInputPtrOutput {
	return i.ToConnectToTargetSqlMITaskInputPtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlMITaskInputPtrType) ToConnectToTargetSqlMITaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskInputPtrOutput)
}

type ConnectToTargetSqlMITaskInputOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskInput)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskInputOutput) ToConnectToTargetSqlMITaskInputOutput() ConnectToTargetSqlMITaskInputOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputOutput) ToConnectToTargetSqlMITaskInputOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputOutput) ToConnectToTargetSqlMITaskInputPtrOutput() ConnectToTargetSqlMITaskInputPtrOutput {
	return o.ToConnectToTargetSqlMITaskInputPtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlMITaskInputOutput) ToConnectToTargetSqlMITaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToTargetSqlMITaskInput) *ConnectToTargetSqlMITaskInput {
		return &v
	}).(ConnectToTargetSqlMITaskInputPtrOutput)
}

func (o ConnectToTargetSqlMITaskInputOutput) CollectAgentJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskInput) *bool { return v.CollectAgentJobs }).(pulumi.BoolPtrOutput)
}

func (o ConnectToTargetSqlMITaskInputOutput) CollectLogins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskInput) *bool { return v.CollectLogins }).(pulumi.BoolPtrOutput)
}

func (o ConnectToTargetSqlMITaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

func (o ConnectToTargetSqlMITaskInputOutput) ValidateSsisCatalogOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskInput) *bool { return v.ValidateSsisCatalogOnly }).(pulumi.BoolPtrOutput)
}

type ConnectToTargetSqlMITaskInputPtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMITaskInput)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskInputPtrOutput) ToConnectToTargetSqlMITaskInputPtrOutput() ConnectToTargetSqlMITaskInputPtrOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputPtrOutput) ToConnectToTargetSqlMITaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputPtrOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputPtrOutput) Elem() ConnectToTargetSqlMITaskInputOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMITaskInput) ConnectToTargetSqlMITaskInput {
		if v != nil {
			return *v
		}
		var ret ConnectToTargetSqlMITaskInput
		return ret
	}).(ConnectToTargetSqlMITaskInputOutput)
}

func (o ConnectToTargetSqlMITaskInputPtrOutput) CollectAgentJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMITaskInput) *bool {
		if v == nil {
			return nil
		}
		return v.CollectAgentJobs
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectToTargetSqlMITaskInputPtrOutput) CollectLogins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMITaskInput) *bool {
		if v == nil {
			return nil
		}
		return v.CollectLogins
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectToTargetSqlMITaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMITaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

func (o ConnectToTargetSqlMITaskInputPtrOutput) ValidateSsisCatalogOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMITaskInput) *bool {
		if v == nil {
			return nil
		}
		return v.ValidateSsisCatalogOnly
	}).(pulumi.BoolPtrOutput)
}

type ConnectToTargetSqlMITaskInputResponse struct {
	CollectAgentJobs        *bool                     `pulumi:"collectAgentJobs"`
	CollectLogins           *bool                     `pulumi:"collectLogins"`
	TargetConnectionInfo    SqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
	ValidateSsisCatalogOnly *bool                     `pulumi:"validateSsisCatalogOnly"`
}





type ConnectToTargetSqlMITaskInputResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskInputResponseOutput() ConnectToTargetSqlMITaskInputResponseOutput
	ToConnectToTargetSqlMITaskInputResponseOutputWithContext(context.Context) ConnectToTargetSqlMITaskInputResponseOutput
}

type ConnectToTargetSqlMITaskInputResponseArgs struct {
	CollectAgentJobs        pulumi.BoolPtrInput            `pulumi:"collectAgentJobs"`
	CollectLogins           pulumi.BoolPtrInput            `pulumi:"collectLogins"`
	TargetConnectionInfo    SqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
	ValidateSsisCatalogOnly pulumi.BoolPtrInput            `pulumi:"validateSsisCatalogOnly"`
}

func (ConnectToTargetSqlMITaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskInputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMITaskInputResponseArgs) ToConnectToTargetSqlMITaskInputResponseOutput() ConnectToTargetSqlMITaskInputResponseOutput {
	return i.ToConnectToTargetSqlMITaskInputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskInputResponseArgs) ToConnectToTargetSqlMITaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskInputResponseOutput)
}

func (i ConnectToTargetSqlMITaskInputResponseArgs) ToConnectToTargetSqlMITaskInputResponsePtrOutput() ConnectToTargetSqlMITaskInputResponsePtrOutput {
	return i.ToConnectToTargetSqlMITaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskInputResponseArgs) ToConnectToTargetSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskInputResponseOutput).ToConnectToTargetSqlMITaskInputResponsePtrOutputWithContext(ctx)
}









type ConnectToTargetSqlMITaskInputResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskInputResponsePtrOutput() ConnectToTargetSqlMITaskInputResponsePtrOutput
	ToConnectToTargetSqlMITaskInputResponsePtrOutputWithContext(context.Context) ConnectToTargetSqlMITaskInputResponsePtrOutput
}

type connectToTargetSqlMITaskInputResponsePtrType ConnectToTargetSqlMITaskInputResponseArgs

func ConnectToTargetSqlMITaskInputResponsePtr(v *ConnectToTargetSqlMITaskInputResponseArgs) ConnectToTargetSqlMITaskInputResponsePtrInput {
	return (*connectToTargetSqlMITaskInputResponsePtrType)(v)
}

func (*connectToTargetSqlMITaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMITaskInputResponse)(nil)).Elem()
}

func (i *connectToTargetSqlMITaskInputResponsePtrType) ToConnectToTargetSqlMITaskInputResponsePtrOutput() ConnectToTargetSqlMITaskInputResponsePtrOutput {
	return i.ToConnectToTargetSqlMITaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlMITaskInputResponsePtrType) ToConnectToTargetSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskInputResponsePtrOutput)
}

type ConnectToTargetSqlMITaskInputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskInputResponseOutput) ToConnectToTargetSqlMITaskInputResponseOutput() ConnectToTargetSqlMITaskInputResponseOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputResponseOutput) ToConnectToTargetSqlMITaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputResponseOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputResponseOutput) ToConnectToTargetSqlMITaskInputResponsePtrOutput() ConnectToTargetSqlMITaskInputResponsePtrOutput {
	return o.ToConnectToTargetSqlMITaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlMITaskInputResponseOutput) ToConnectToTargetSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToTargetSqlMITaskInputResponse) *ConnectToTargetSqlMITaskInputResponse {
		return &v
	}).(ConnectToTargetSqlMITaskInputResponsePtrOutput)
}

func (o ConnectToTargetSqlMITaskInputResponseOutput) CollectAgentJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskInputResponse) *bool { return v.CollectAgentJobs }).(pulumi.BoolPtrOutput)
}

func (o ConnectToTargetSqlMITaskInputResponseOutput) CollectLogins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskInputResponse) *bool { return v.CollectLogins }).(pulumi.BoolPtrOutput)
}

func (o ConnectToTargetSqlMITaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskInputResponse) SqlConnectionInfoResponse { return v.TargetConnectionInfo }).(SqlConnectionInfoResponseOutput)
}

func (o ConnectToTargetSqlMITaskInputResponseOutput) ValidateSsisCatalogOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskInputResponse) *bool { return v.ValidateSsisCatalogOnly }).(pulumi.BoolPtrOutput)
}

type ConnectToTargetSqlMITaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMITaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskInputResponsePtrOutput) ToConnectToTargetSqlMITaskInputResponsePtrOutput() ConnectToTargetSqlMITaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputResponsePtrOutput) ToConnectToTargetSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputResponsePtrOutput) Elem() ConnectToTargetSqlMITaskInputResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMITaskInputResponse) ConnectToTargetSqlMITaskInputResponse {
		if v != nil {
			return *v
		}
		var ret ConnectToTargetSqlMITaskInputResponse
		return ret
	}).(ConnectToTargetSqlMITaskInputResponseOutput)
}

func (o ConnectToTargetSqlMITaskInputResponsePtrOutput) CollectAgentJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMITaskInputResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CollectAgentJobs
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectToTargetSqlMITaskInputResponsePtrOutput) CollectLogins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMITaskInputResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CollectLogins
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectToTargetSqlMITaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMITaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

func (o ConnectToTargetSqlMITaskInputResponsePtrOutput) ValidateSsisCatalogOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMITaskInputResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ValidateSsisCatalogOnly
	}).(pulumi.BoolPtrOutput)
}

type ConnectToTargetSqlMITaskOutputResponse struct {
	AgentJobs                []string                      `pulumi:"agentJobs"`
	Id                       string                        `pulumi:"id"`
	Logins                   []string                      `pulumi:"logins"`
	TargetServerBrandVersion string                        `pulumi:"targetServerBrandVersion"`
	TargetServerVersion      string                        `pulumi:"targetServerVersion"`
	ValidationErrors         []ReportableExceptionResponse `pulumi:"validationErrors"`
}





type ConnectToTargetSqlMITaskOutputResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskOutputResponseOutput() ConnectToTargetSqlMITaskOutputResponseOutput
	ToConnectToTargetSqlMITaskOutputResponseOutputWithContext(context.Context) ConnectToTargetSqlMITaskOutputResponseOutput
}

type ConnectToTargetSqlMITaskOutputResponseArgs struct {
	AgentJobs                pulumi.StringArrayInput               `pulumi:"agentJobs"`
	Id                       pulumi.StringInput                    `pulumi:"id"`
	Logins                   pulumi.StringArrayInput               `pulumi:"logins"`
	TargetServerBrandVersion pulumi.StringInput                    `pulumi:"targetServerBrandVersion"`
	TargetServerVersion      pulumi.StringInput                    `pulumi:"targetServerVersion"`
	ValidationErrors         ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToTargetSqlMITaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMITaskOutputResponseArgs) ToConnectToTargetSqlMITaskOutputResponseOutput() ConnectToTargetSqlMITaskOutputResponseOutput {
	return i.ToConnectToTargetSqlMITaskOutputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskOutputResponseArgs) ToConnectToTargetSqlMITaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskOutputResponseOutput)
}





type ConnectToTargetSqlMITaskOutputResponseArrayInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskOutputResponseArrayOutput() ConnectToTargetSqlMITaskOutputResponseArrayOutput
	ToConnectToTargetSqlMITaskOutputResponseArrayOutputWithContext(context.Context) ConnectToTargetSqlMITaskOutputResponseArrayOutput
}

type ConnectToTargetSqlMITaskOutputResponseArray []ConnectToTargetSqlMITaskOutputResponseInput

func (ConnectToTargetSqlMITaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetSqlMITaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMITaskOutputResponseArray) ToConnectToTargetSqlMITaskOutputResponseArrayOutput() ConnectToTargetSqlMITaskOutputResponseArrayOutput {
	return i.ToConnectToTargetSqlMITaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskOutputResponseArray) ToConnectToTargetSqlMITaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskOutputResponseArrayOutput)
}

type ConnectToTargetSqlMITaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskOutputResponseOutput) ToConnectToTargetSqlMITaskOutputResponseOutput() ConnectToTargetSqlMITaskOutputResponseOutput {
	return o
}

func (o ConnectToTargetSqlMITaskOutputResponseOutput) ToConnectToTargetSqlMITaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskOutputResponseOutput {
	return o
}

func (o ConnectToTargetSqlMITaskOutputResponseOutput) AgentJobs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskOutputResponse) []string { return v.AgentJobs }).(pulumi.StringArrayOutput)
}

func (o ConnectToTargetSqlMITaskOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o ConnectToTargetSqlMITaskOutputResponseOutput) Logins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskOutputResponse) []string { return v.Logins }).(pulumi.StringArrayOutput)
}

func (o ConnectToTargetSqlMITaskOutputResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskOutputResponse) string { return v.TargetServerBrandVersion }).(pulumi.StringOutput)
}

func (o ConnectToTargetSqlMITaskOutputResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskOutputResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

func (o ConnectToTargetSqlMITaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ConnectToTargetSqlMITaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetSqlMITaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskOutputResponseArrayOutput) ToConnectToTargetSqlMITaskOutputResponseArrayOutput() ConnectToTargetSqlMITaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetSqlMITaskOutputResponseArrayOutput) ToConnectToTargetSqlMITaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetSqlMITaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ConnectToTargetSqlMITaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToTargetSqlMITaskOutputResponse {
		return vs[0].([]ConnectToTargetSqlMITaskOutputResponse)[vs[1].(int)]
	}).(ConnectToTargetSqlMITaskOutputResponseOutput)
}

type ConnectToTargetSqlMITaskProperties struct {
	ClientData map[string]string              `pulumi:"clientData"`
	Input      *ConnectToTargetSqlMITaskInput `pulumi:"input"`
	TaskType   string                         `pulumi:"taskType"`
}





type ConnectToTargetSqlMITaskPropertiesInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskPropertiesOutput() ConnectToTargetSqlMITaskPropertiesOutput
	ToConnectToTargetSqlMITaskPropertiesOutputWithContext(context.Context) ConnectToTargetSqlMITaskPropertiesOutput
}

type ConnectToTargetSqlMITaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                 `pulumi:"clientData"`
	Input      ConnectToTargetSqlMITaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                    `pulumi:"taskType"`
}

func (ConnectToTargetSqlMITaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskProperties)(nil)).Elem()
}

func (i ConnectToTargetSqlMITaskPropertiesArgs) ToConnectToTargetSqlMITaskPropertiesOutput() ConnectToTargetSqlMITaskPropertiesOutput {
	return i.ToConnectToTargetSqlMITaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskPropertiesArgs) ToConnectToTargetSqlMITaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskPropertiesOutput)
}

type ConnectToTargetSqlMITaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskProperties)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskPropertiesOutput) ToConnectToTargetSqlMITaskPropertiesOutput() ConnectToTargetSqlMITaskPropertiesOutput {
	return o
}

func (o ConnectToTargetSqlMITaskPropertiesOutput) ToConnectToTargetSqlMITaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskPropertiesOutput {
	return o
}

func (o ConnectToTargetSqlMITaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToTargetSqlMITaskPropertiesOutput) Input() ConnectToTargetSqlMITaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskProperties) *ConnectToTargetSqlMITaskInput { return v.Input }).(ConnectToTargetSqlMITaskInputPtrOutput)
}

func (o ConnectToTargetSqlMITaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToTargetSqlMITaskPropertiesResponse struct {
	ClientData map[string]string                        `pulumi:"clientData"`
	Commands   []interface{}                            `pulumi:"commands"`
	Errors     []ODataErrorResponse                     `pulumi:"errors"`
	Input      *ConnectToTargetSqlMITaskInputResponse   `pulumi:"input"`
	Output     []ConnectToTargetSqlMITaskOutputResponse `pulumi:"output"`
	State      string                                   `pulumi:"state"`
	TaskType   string                                   `pulumi:"taskType"`
}





type ConnectToTargetSqlMITaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskPropertiesResponseOutput() ConnectToTargetSqlMITaskPropertiesResponseOutput
	ToConnectToTargetSqlMITaskPropertiesResponseOutputWithContext(context.Context) ConnectToTargetSqlMITaskPropertiesResponseOutput
}

type ConnectToTargetSqlMITaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                            `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                     `pulumi:"errors"`
	Input      ConnectToTargetSqlMITaskInputResponsePtrInput    `pulumi:"input"`
	Output     ConnectToTargetSqlMITaskOutputResponseArrayInput `pulumi:"output"`
	State      pulumi.StringInput                               `pulumi:"state"`
	TaskType   pulumi.StringInput                               `pulumi:"taskType"`
}

func (ConnectToTargetSqlMITaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMITaskPropertiesResponseArgs) ToConnectToTargetSqlMITaskPropertiesResponseOutput() ConnectToTargetSqlMITaskPropertiesResponseOutput {
	return i.ToConnectToTargetSqlMITaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskPropertiesResponseArgs) ToConnectToTargetSqlMITaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskPropertiesResponseOutput)
}

type ConnectToTargetSqlMITaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskPropertiesResponseOutput) ToConnectToTargetSqlMITaskPropertiesResponseOutput() ConnectToTargetSqlMITaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetSqlMITaskPropertiesResponseOutput) ToConnectToTargetSqlMITaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetSqlMITaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToTargetSqlMITaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o ConnectToTargetSqlMITaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o ConnectToTargetSqlMITaskPropertiesResponseOutput) Input() ConnectToTargetSqlMITaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesResponse) *ConnectToTargetSqlMITaskInputResponse {
		return v.Input
	}).(ConnectToTargetSqlMITaskInputResponsePtrOutput)
}

func (o ConnectToTargetSqlMITaskPropertiesResponseOutput) Output() ConnectToTargetSqlMITaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesResponse) []ConnectToTargetSqlMITaskOutputResponse {
		return v.Output
	}).(ConnectToTargetSqlMITaskOutputResponseArrayOutput)
}

func (o ConnectToTargetSqlMITaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o ConnectToTargetSqlMITaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToTargetSqlSqlDbSyncTaskInput struct {
	SourceConnectionInfo SqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfo `pulumi:"targetConnectionInfo"`
}





type ConnectToTargetSqlSqlDbSyncTaskInputInput interface {
	pulumi.Input

	ToConnectToTargetSqlSqlDbSyncTaskInputOutput() ConnectToTargetSqlSqlDbSyncTaskInputOutput
	ToConnectToTargetSqlSqlDbSyncTaskInputOutputWithContext(context.Context) ConnectToTargetSqlSqlDbSyncTaskInputOutput
}

type ConnectToTargetSqlSqlDbSyncTaskInputArgs struct {
	SourceConnectionInfo SqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetSqlSqlDbSyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskInput)(nil)).Elem()
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputArgs) ToConnectToTargetSqlSqlDbSyncTaskInputOutput() ConnectToTargetSqlSqlDbSyncTaskInputOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskInputOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputArgs) ToConnectToTargetSqlSqlDbSyncTaskInputOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskInputOutput)
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputArgs) ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputArgs) ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskInputOutput).ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutputWithContext(ctx)
}









type ConnectToTargetSqlSqlDbSyncTaskInputPtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput
	ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutputWithContext(context.Context) ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput
}

type connectToTargetSqlSqlDbSyncTaskInputPtrType ConnectToTargetSqlSqlDbSyncTaskInputArgs

func ConnectToTargetSqlSqlDbSyncTaskInputPtr(v *ConnectToTargetSqlSqlDbSyncTaskInputArgs) ConnectToTargetSqlSqlDbSyncTaskInputPtrInput {
	return (*connectToTargetSqlSqlDbSyncTaskInputPtrType)(v)
}

func (*connectToTargetSqlSqlDbSyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlSqlDbSyncTaskInput)(nil)).Elem()
}

func (i *connectToTargetSqlSqlDbSyncTaskInputPtrType) ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlSqlDbSyncTaskInputPtrType) ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput)
}

type ConnectToTargetSqlSqlDbSyncTaskInputOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlSqlDbSyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskInput)(nil)).Elem()
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputOutput) ToConnectToTargetSqlSqlDbSyncTaskInputOutput() ConnectToTargetSqlSqlDbSyncTaskInputOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputOutput) ToConnectToTargetSqlSqlDbSyncTaskInputOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputOutput) ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput {
	return o.ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputOutput) ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToTargetSqlSqlDbSyncTaskInput) *ConnectToTargetSqlSqlDbSyncTaskInput {
		return &v
	}).(ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput)
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

type ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlSqlDbSyncTaskInput)(nil)).Elem()
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput) ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput) ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput) Elem() ConnectToTargetSqlSqlDbSyncTaskInputOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlSqlDbSyncTaskInput) ConnectToTargetSqlSqlDbSyncTaskInput {
		if v != nil {
			return *v
		}
		var ret ConnectToTargetSqlSqlDbSyncTaskInput
		return ret
	}).(ConnectToTargetSqlSqlDbSyncTaskInputOutput)
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlSqlDbSyncTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlSqlDbSyncTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

type ConnectToTargetSqlSqlDbSyncTaskInputResponse struct {
	SourceConnectionInfo SqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}





type ConnectToTargetSqlSqlDbSyncTaskInputResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlSqlDbSyncTaskInputResponseOutput() ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput
	ToConnectToTargetSqlSqlDbSyncTaskInputResponseOutputWithContext(context.Context) ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput
}

type ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs struct {
	SourceConnectionInfo SqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskInputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs) ToConnectToTargetSqlSqlDbSyncTaskInputResponseOutput() ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskInputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs) ToConnectToTargetSqlSqlDbSyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput)
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs) ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs) ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput).ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx)
}









type ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput
	ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutputWithContext(context.Context) ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput
}

type connectToTargetSqlSqlDbSyncTaskInputResponsePtrType ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs

func ConnectToTargetSqlSqlDbSyncTaskInputResponsePtr(v *ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs) ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrInput {
	return (*connectToTargetSqlSqlDbSyncTaskInputResponsePtrType)(v)
}

func (*connectToTargetSqlSqlDbSyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlSqlDbSyncTaskInputResponse)(nil)).Elem()
}

func (i *connectToTargetSqlSqlDbSyncTaskInputResponsePtrType) ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlSqlDbSyncTaskInputResponsePtrType) ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput)
}

type ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput) ToConnectToTargetSqlSqlDbSyncTaskInputResponseOutput() ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput) ToConnectToTargetSqlSqlDbSyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput) ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput {
	return o.ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput) ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectToTargetSqlSqlDbSyncTaskInputResponse) *ConnectToTargetSqlSqlDbSyncTaskInputResponse {
		return &v
	}).(ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput)
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskInputResponse) SqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskInputResponse) SqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

type ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlSqlDbSyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput) ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput) ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput) Elem() ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlSqlDbSyncTaskInputResponse) ConnectToTargetSqlSqlDbSyncTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret ConnectToTargetSqlSqlDbSyncTaskInputResponse
		return ret
	}).(ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput)
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlSqlDbSyncTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlSqlDbSyncTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

type ConnectToTargetSqlSqlDbSyncTaskProperties struct {
	ClientData map[string]string                     `pulumi:"clientData"`
	Input      *ConnectToTargetSqlSqlDbSyncTaskInput `pulumi:"input"`
	TaskType   string                                `pulumi:"taskType"`
}





type ConnectToTargetSqlSqlDbSyncTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToTargetSqlSqlDbSyncTaskPropertiesOutput() ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput
	ToConnectToTargetSqlSqlDbSyncTaskPropertiesOutputWithContext(context.Context) ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput
}

type ConnectToTargetSqlSqlDbSyncTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                        `pulumi:"clientData"`
	Input      ConnectToTargetSqlSqlDbSyncTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                           `pulumi:"taskType"`
}

func (ConnectToTargetSqlSqlDbSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskProperties)(nil)).Elem()
}

func (i ConnectToTargetSqlSqlDbSyncTaskPropertiesArgs) ToConnectToTargetSqlSqlDbSyncTaskPropertiesOutput() ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlSqlDbSyncTaskPropertiesArgs) ToConnectToTargetSqlSqlDbSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput)
}

type ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskProperties)(nil)).Elem()
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput) ToConnectToTargetSqlSqlDbSyncTaskPropertiesOutput() ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput) ToConnectToTargetSqlSqlDbSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput) Input() ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskProperties) *ConnectToTargetSqlSqlDbSyncTaskInput {
		return v.Input
	}).(ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput)
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse struct {
	ClientData map[string]string                             `pulumi:"clientData"`
	Commands   []interface{}                                 `pulumi:"commands"`
	Errors     []ODataErrorResponse                          `pulumi:"errors"`
	Input      *ConnectToTargetSqlSqlDbSyncTaskInputResponse `pulumi:"input"`
	Output     []ConnectToTargetSqlDbTaskOutputResponse      `pulumi:"output"`
	State      string                                        `pulumi:"state"`
	TaskType   string                                        `pulumi:"taskType"`
}





type ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput() ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput
	ToConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutputWithContext(context.Context) ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput
}

type ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                                `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                    `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                         `pulumi:"errors"`
	Input      ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrInput `pulumi:"input"`
	Output     ConnectToTargetSqlDbTaskOutputResponseArrayInput     `pulumi:"output"`
	State      pulumi.StringInput                                   `pulumi:"state"`
	TaskType   pulumi.StringInput                                   `pulumi:"taskType"`
}

func (ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseArgs) ToConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput() ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseArgs) ToConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput)
}

type ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) ToConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput() ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) ToConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) Input() ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse) *ConnectToTargetSqlSqlDbSyncTaskInputResponse {
		return v.Input
	}).(ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput)
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) Output() ConnectToTargetSqlDbTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse) []ConnectToTargetSqlDbTaskOutputResponse {
		return v.Output
	}).(ConnectToTargetSqlDbTaskOutputResponseArrayOutput)
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type DataItemMigrationSummaryResultResponse struct {
	EndedOn             string  `pulumi:"endedOn"`
	ErrorPrefix         string  `pulumi:"errorPrefix"`
	ItemsCompletedCount float64 `pulumi:"itemsCompletedCount"`
	ItemsCount          float64 `pulumi:"itemsCount"`
	Name                string  `pulumi:"name"`
	ResultPrefix        string  `pulumi:"resultPrefix"`
	StartedOn           string  `pulumi:"startedOn"`
	State               string  `pulumi:"state"`
	StatusMessage       string  `pulumi:"statusMessage"`
}





type DataItemMigrationSummaryResultResponseInput interface {
	pulumi.Input

	ToDataItemMigrationSummaryResultResponseOutput() DataItemMigrationSummaryResultResponseOutput
	ToDataItemMigrationSummaryResultResponseOutputWithContext(context.Context) DataItemMigrationSummaryResultResponseOutput
}

type DataItemMigrationSummaryResultResponseArgs struct {
	EndedOn             pulumi.StringInput  `pulumi:"endedOn"`
	ErrorPrefix         pulumi.StringInput  `pulumi:"errorPrefix"`
	ItemsCompletedCount pulumi.Float64Input `pulumi:"itemsCompletedCount"`
	ItemsCount          pulumi.Float64Input `pulumi:"itemsCount"`
	Name                pulumi.StringInput  `pulumi:"name"`
	ResultPrefix        pulumi.StringInput  `pulumi:"resultPrefix"`
	StartedOn           pulumi.StringInput  `pulumi:"startedOn"`
	State               pulumi.StringInput  `pulumi:"state"`
	StatusMessage       pulumi.StringInput  `pulumi:"statusMessage"`
}

func (DataItemMigrationSummaryResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataItemMigrationSummaryResultResponse)(nil)).Elem()
}

func (i DataItemMigrationSummaryResultResponseArgs) ToDataItemMigrationSummaryResultResponseOutput() DataItemMigrationSummaryResultResponseOutput {
	return i.ToDataItemMigrationSummaryResultResponseOutputWithContext(context.Background())
}

func (i DataItemMigrationSummaryResultResponseArgs) ToDataItemMigrationSummaryResultResponseOutputWithContext(ctx context.Context) DataItemMigrationSummaryResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataItemMigrationSummaryResultResponseOutput)
}





type DataItemMigrationSummaryResultResponseMapInput interface {
	pulumi.Input

	ToDataItemMigrationSummaryResultResponseMapOutput() DataItemMigrationSummaryResultResponseMapOutput
	ToDataItemMigrationSummaryResultResponseMapOutputWithContext(context.Context) DataItemMigrationSummaryResultResponseMapOutput
}

type DataItemMigrationSummaryResultResponseMap map[string]DataItemMigrationSummaryResultResponseInput

func (DataItemMigrationSummaryResultResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DataItemMigrationSummaryResultResponse)(nil)).Elem()
}

func (i DataItemMigrationSummaryResultResponseMap) ToDataItemMigrationSummaryResultResponseMapOutput() DataItemMigrationSummaryResultResponseMapOutput {
	return i.ToDataItemMigrationSummaryResultResponseMapOutputWithContext(context.Background())
}

func (i DataItemMigrationSummaryResultResponseMap) ToDataItemMigrationSummaryResultResponseMapOutputWithContext(ctx context.Context) DataItemMigrationSummaryResultResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataItemMigrationSummaryResultResponseMapOutput)
}

type DataItemMigrationSummaryResultResponseOutput struct{ *pulumi.OutputState }

func (DataItemMigrationSummaryResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataItemMigrationSummaryResultResponse)(nil)).Elem()
}

func (o DataItemMigrationSummaryResultResponseOutput) ToDataItemMigrationSummaryResultResponseOutput() DataItemMigrationSummaryResultResponseOutput {
	return o
}

func (o DataItemMigrationSummaryResultResponseOutput) ToDataItemMigrationSummaryResultResponseOutputWithContext(ctx context.Context) DataItemMigrationSummaryResultResponseOutput {
	return o
}

func (o DataItemMigrationSummaryResultResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o DataItemMigrationSummaryResultResponseOutput) ErrorPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultResponse) string { return v.ErrorPrefix }).(pulumi.StringOutput)
}

func (o DataItemMigrationSummaryResultResponseOutput) ItemsCompletedCount() pulumi.Float64Output {
	return o.ApplyT(func(v DataItemMigrationSummaryResultResponse) float64 { return v.ItemsCompletedCount }).(pulumi.Float64Output)
}

func (o DataItemMigrationSummaryResultResponseOutput) ItemsCount() pulumi.Float64Output {
	return o.ApplyT(func(v DataItemMigrationSummaryResultResponse) float64 { return v.ItemsCount }).(pulumi.Float64Output)
}

func (o DataItemMigrationSummaryResultResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o DataItemMigrationSummaryResultResponseOutput) ResultPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultResponse) string { return v.ResultPrefix }).(pulumi.StringOutput)
}

func (o DataItemMigrationSummaryResultResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

func (o DataItemMigrationSummaryResultResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o DataItemMigrationSummaryResultResponseOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultResponse) string { return v.StatusMessage }).(pulumi.StringOutput)
}

type DataItemMigrationSummaryResultResponseMapOutput struct{ *pulumi.OutputState }

func (DataItemMigrationSummaryResultResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DataItemMigrationSummaryResultResponse)(nil)).Elem()
}

func (o DataItemMigrationSummaryResultResponseMapOutput) ToDataItemMigrationSummaryResultResponseMapOutput() DataItemMigrationSummaryResultResponseMapOutput {
	return o
}

func (o DataItemMigrationSummaryResultResponseMapOutput) ToDataItemMigrationSummaryResultResponseMapOutputWithContext(ctx context.Context) DataItemMigrationSummaryResultResponseMapOutput {
	return o
}

func (o DataItemMigrationSummaryResultResponseMapOutput) MapIndex(k pulumi.StringInput) DataItemMigrationSummaryResultResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DataItemMigrationSummaryResultResponse {
		return vs[0].(map[string]DataItemMigrationSummaryResultResponse)[vs[1].(string)]
	}).(DataItemMigrationSummaryResultResponseOutput)
}

type DatabaseBackupInfoResponse struct {
	BackupFiles      []string `pulumi:"backupFiles"`
	BackupFinishDate string   `pulumi:"backupFinishDate"`
	BackupType       string   `pulumi:"backupType"`
	DatabaseName     string   `pulumi:"databaseName"`
	FamilyCount      int      `pulumi:"familyCount"`
	IsCompressed     bool     `pulumi:"isCompressed"`
	IsDamaged        bool     `pulumi:"isDamaged"`
	Position         int      `pulumi:"position"`
}





type DatabaseBackupInfoResponseInput interface {
	pulumi.Input

	ToDatabaseBackupInfoResponseOutput() DatabaseBackupInfoResponseOutput
	ToDatabaseBackupInfoResponseOutputWithContext(context.Context) DatabaseBackupInfoResponseOutput
}

type DatabaseBackupInfoResponseArgs struct {
	BackupFiles      pulumi.StringArrayInput `pulumi:"backupFiles"`
	BackupFinishDate pulumi.StringInput      `pulumi:"backupFinishDate"`
	BackupType       pulumi.StringInput      `pulumi:"backupType"`
	DatabaseName     pulumi.StringInput      `pulumi:"databaseName"`
	FamilyCount      pulumi.IntInput         `pulumi:"familyCount"`
	IsCompressed     pulumi.BoolInput        `pulumi:"isCompressed"`
	IsDamaged        pulumi.BoolInput        `pulumi:"isDamaged"`
	Position         pulumi.IntInput         `pulumi:"position"`
}

func (DatabaseBackupInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupInfoResponse)(nil)).Elem()
}

func (i DatabaseBackupInfoResponseArgs) ToDatabaseBackupInfoResponseOutput() DatabaseBackupInfoResponseOutput {
	return i.ToDatabaseBackupInfoResponseOutputWithContext(context.Background())
}

func (i DatabaseBackupInfoResponseArgs) ToDatabaseBackupInfoResponseOutputWithContext(ctx context.Context) DatabaseBackupInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupInfoResponseOutput)
}

func (i DatabaseBackupInfoResponseArgs) ToDatabaseBackupInfoResponsePtrOutput() DatabaseBackupInfoResponsePtrOutput {
	return i.ToDatabaseBackupInfoResponsePtrOutputWithContext(context.Background())
}

func (i DatabaseBackupInfoResponseArgs) ToDatabaseBackupInfoResponsePtrOutputWithContext(ctx context.Context) DatabaseBackupInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupInfoResponseOutput).ToDatabaseBackupInfoResponsePtrOutputWithContext(ctx)
}









type DatabaseBackupInfoResponsePtrInput interface {
	pulumi.Input

	ToDatabaseBackupInfoResponsePtrOutput() DatabaseBackupInfoResponsePtrOutput
	ToDatabaseBackupInfoResponsePtrOutputWithContext(context.Context) DatabaseBackupInfoResponsePtrOutput
}

type databaseBackupInfoResponsePtrType DatabaseBackupInfoResponseArgs

func DatabaseBackupInfoResponsePtr(v *DatabaseBackupInfoResponseArgs) DatabaseBackupInfoResponsePtrInput {
	return (*databaseBackupInfoResponsePtrType)(v)
}

func (*databaseBackupInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseBackupInfoResponse)(nil)).Elem()
}

func (i *databaseBackupInfoResponsePtrType) ToDatabaseBackupInfoResponsePtrOutput() DatabaseBackupInfoResponsePtrOutput {
	return i.ToDatabaseBackupInfoResponsePtrOutputWithContext(context.Background())
}

func (i *databaseBackupInfoResponsePtrType) ToDatabaseBackupInfoResponsePtrOutputWithContext(ctx context.Context) DatabaseBackupInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupInfoResponsePtrOutput)
}

type DatabaseBackupInfoResponseOutput struct{ *pulumi.OutputState }

func (DatabaseBackupInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupInfoResponse)(nil)).Elem()
}

func (o DatabaseBackupInfoResponseOutput) ToDatabaseBackupInfoResponseOutput() DatabaseBackupInfoResponseOutput {
	return o
}

func (o DatabaseBackupInfoResponseOutput) ToDatabaseBackupInfoResponseOutputWithContext(ctx context.Context) DatabaseBackupInfoResponseOutput {
	return o
}

func (o DatabaseBackupInfoResponseOutput) ToDatabaseBackupInfoResponsePtrOutput() DatabaseBackupInfoResponsePtrOutput {
	return o.ToDatabaseBackupInfoResponsePtrOutputWithContext(context.Background())
}

func (o DatabaseBackupInfoResponseOutput) ToDatabaseBackupInfoResponsePtrOutputWithContext(ctx context.Context) DatabaseBackupInfoResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseBackupInfoResponse) *DatabaseBackupInfoResponse {
		return &v
	}).(DatabaseBackupInfoResponsePtrOutput)
}

func (o DatabaseBackupInfoResponseOutput) BackupFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseBackupInfoResponse) []string { return v.BackupFiles }).(pulumi.StringArrayOutput)
}

func (o DatabaseBackupInfoResponseOutput) BackupFinishDate() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseBackupInfoResponse) string { return v.BackupFinishDate }).(pulumi.StringOutput)
}

func (o DatabaseBackupInfoResponseOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseBackupInfoResponse) string { return v.BackupType }).(pulumi.StringOutput)
}

func (o DatabaseBackupInfoResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseBackupInfoResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o DatabaseBackupInfoResponseOutput) FamilyCount() pulumi.IntOutput {
	return o.ApplyT(func(v DatabaseBackupInfoResponse) int { return v.FamilyCount }).(pulumi.IntOutput)
}

func (o DatabaseBackupInfoResponseOutput) IsCompressed() pulumi.BoolOutput {
	return o.ApplyT(func(v DatabaseBackupInfoResponse) bool { return v.IsCompressed }).(pulumi.BoolOutput)
}

func (o DatabaseBackupInfoResponseOutput) IsDamaged() pulumi.BoolOutput {
	return o.ApplyT(func(v DatabaseBackupInfoResponse) bool { return v.IsDamaged }).(pulumi.BoolOutput)
}

func (o DatabaseBackupInfoResponseOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v DatabaseBackupInfoResponse) int { return v.Position }).(pulumi.IntOutput)
}

type DatabaseBackupInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (DatabaseBackupInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseBackupInfoResponse)(nil)).Elem()
}

func (o DatabaseBackupInfoResponsePtrOutput) ToDatabaseBackupInfoResponsePtrOutput() DatabaseBackupInfoResponsePtrOutput {
	return o
}

func (o DatabaseBackupInfoResponsePtrOutput) ToDatabaseBackupInfoResponsePtrOutputWithContext(ctx context.Context) DatabaseBackupInfoResponsePtrOutput {
	return o
}

func (o DatabaseBackupInfoResponsePtrOutput) Elem() DatabaseBackupInfoResponseOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoResponse) DatabaseBackupInfoResponse {
		if v != nil {
			return *v
		}
		var ret DatabaseBackupInfoResponse
		return ret
	}).(DatabaseBackupInfoResponseOutput)
}

func (o DatabaseBackupInfoResponsePtrOutput) BackupFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoResponse) []string {
		if v == nil {
			return nil
		}
		return v.BackupFiles
	}).(pulumi.StringArrayOutput)
}

func (o DatabaseBackupInfoResponsePtrOutput) BackupFinishDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BackupFinishDate
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseBackupInfoResponsePtrOutput) BackupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BackupType
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseBackupInfoResponsePtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseBackupInfoResponsePtrOutput) FamilyCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoResponse) *int {
		if v == nil {
			return nil
		}
		return &v.FamilyCount
	}).(pulumi.IntPtrOutput)
}

func (o DatabaseBackupInfoResponsePtrOutput) IsCompressed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsCompressed
	}).(pulumi.BoolPtrOutput)
}

func (o DatabaseBackupInfoResponsePtrOutput) IsDamaged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsDamaged
	}).(pulumi.BoolPtrOutput)
}

func (o DatabaseBackupInfoResponsePtrOutput) Position() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Position
	}).(pulumi.IntPtrOutput)
}

type DatabaseFileInfoResponse struct {
	DatabaseName     *string  `pulumi:"databaseName"`
	FileType         *string  `pulumi:"fileType"`
	Id               *string  `pulumi:"id"`
	LogicalName      *string  `pulumi:"logicalName"`
	PhysicalFullName *string  `pulumi:"physicalFullName"`
	RestoreFullName  *string  `pulumi:"restoreFullName"`
	SizeMB           *float64 `pulumi:"sizeMB"`
}





type DatabaseFileInfoResponseInput interface {
	pulumi.Input

	ToDatabaseFileInfoResponseOutput() DatabaseFileInfoResponseOutput
	ToDatabaseFileInfoResponseOutputWithContext(context.Context) DatabaseFileInfoResponseOutput
}

type DatabaseFileInfoResponseArgs struct {
	DatabaseName     pulumi.StringPtrInput  `pulumi:"databaseName"`
	FileType         pulumi.StringPtrInput  `pulumi:"fileType"`
	Id               pulumi.StringPtrInput  `pulumi:"id"`
	LogicalName      pulumi.StringPtrInput  `pulumi:"logicalName"`
	PhysicalFullName pulumi.StringPtrInput  `pulumi:"physicalFullName"`
	RestoreFullName  pulumi.StringPtrInput  `pulumi:"restoreFullName"`
	SizeMB           pulumi.Float64PtrInput `pulumi:"sizeMB"`
}

func (DatabaseFileInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseFileInfoResponse)(nil)).Elem()
}

func (i DatabaseFileInfoResponseArgs) ToDatabaseFileInfoResponseOutput() DatabaseFileInfoResponseOutput {
	return i.ToDatabaseFileInfoResponseOutputWithContext(context.Background())
}

func (i DatabaseFileInfoResponseArgs) ToDatabaseFileInfoResponseOutputWithContext(ctx context.Context) DatabaseFileInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseFileInfoResponseOutput)
}





type DatabaseFileInfoResponseArrayInput interface {
	pulumi.Input

	ToDatabaseFileInfoResponseArrayOutput() DatabaseFileInfoResponseArrayOutput
	ToDatabaseFileInfoResponseArrayOutputWithContext(context.Context) DatabaseFileInfoResponseArrayOutput
}

type DatabaseFileInfoResponseArray []DatabaseFileInfoResponseInput

func (DatabaseFileInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseFileInfoResponse)(nil)).Elem()
}

func (i DatabaseFileInfoResponseArray) ToDatabaseFileInfoResponseArrayOutput() DatabaseFileInfoResponseArrayOutput {
	return i.ToDatabaseFileInfoResponseArrayOutputWithContext(context.Background())
}

func (i DatabaseFileInfoResponseArray) ToDatabaseFileInfoResponseArrayOutputWithContext(ctx context.Context) DatabaseFileInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseFileInfoResponseArrayOutput)
}

type DatabaseFileInfoResponseOutput struct{ *pulumi.OutputState }

func (DatabaseFileInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseFileInfoResponse)(nil)).Elem()
}

func (o DatabaseFileInfoResponseOutput) ToDatabaseFileInfoResponseOutput() DatabaseFileInfoResponseOutput {
	return o
}

func (o DatabaseFileInfoResponseOutput) ToDatabaseFileInfoResponseOutputWithContext(ctx context.Context) DatabaseFileInfoResponseOutput {
	return o
}

func (o DatabaseFileInfoResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

func (o DatabaseFileInfoResponseOutput) FileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoResponse) *string { return v.FileType }).(pulumi.StringPtrOutput)
}

func (o DatabaseFileInfoResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o DatabaseFileInfoResponseOutput) LogicalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoResponse) *string { return v.LogicalName }).(pulumi.StringPtrOutput)
}

func (o DatabaseFileInfoResponseOutput) PhysicalFullName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoResponse) *string { return v.PhysicalFullName }).(pulumi.StringPtrOutput)
}

func (o DatabaseFileInfoResponseOutput) RestoreFullName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoResponse) *string { return v.RestoreFullName }).(pulumi.StringPtrOutput)
}

func (o DatabaseFileInfoResponseOutput) SizeMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoResponse) *float64 { return v.SizeMB }).(pulumi.Float64PtrOutput)
}

type DatabaseFileInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseFileInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseFileInfoResponse)(nil)).Elem()
}

func (o DatabaseFileInfoResponseArrayOutput) ToDatabaseFileInfoResponseArrayOutput() DatabaseFileInfoResponseArrayOutput {
	return o
}

func (o DatabaseFileInfoResponseArrayOutput) ToDatabaseFileInfoResponseArrayOutputWithContext(ctx context.Context) DatabaseFileInfoResponseArrayOutput {
	return o
}

func (o DatabaseFileInfoResponseArrayOutput) Index(i pulumi.IntInput) DatabaseFileInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseFileInfoResponse {
		return vs[0].([]DatabaseFileInfoResponse)[vs[1].(int)]
	}).(DatabaseFileInfoResponseOutput)
}

type DatabaseInfo struct {
	SourceDatabaseName string `pulumi:"sourceDatabaseName"`
}





type DatabaseInfoInput interface {
	pulumi.Input

	ToDatabaseInfoOutput() DatabaseInfoOutput
	ToDatabaseInfoOutputWithContext(context.Context) DatabaseInfoOutput
}

type DatabaseInfoArgs struct {
	SourceDatabaseName pulumi.StringInput `pulumi:"sourceDatabaseName"`
}

func (DatabaseInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInfo)(nil)).Elem()
}

func (i DatabaseInfoArgs) ToDatabaseInfoOutput() DatabaseInfoOutput {
	return i.ToDatabaseInfoOutputWithContext(context.Background())
}

func (i DatabaseInfoArgs) ToDatabaseInfoOutputWithContext(ctx context.Context) DatabaseInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInfoOutput)
}





type DatabaseInfoArrayInput interface {
	pulumi.Input

	ToDatabaseInfoArrayOutput() DatabaseInfoArrayOutput
	ToDatabaseInfoArrayOutputWithContext(context.Context) DatabaseInfoArrayOutput
}

type DatabaseInfoArray []DatabaseInfoInput

func (DatabaseInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInfo)(nil)).Elem()
}

func (i DatabaseInfoArray) ToDatabaseInfoArrayOutput() DatabaseInfoArrayOutput {
	return i.ToDatabaseInfoArrayOutputWithContext(context.Background())
}

func (i DatabaseInfoArray) ToDatabaseInfoArrayOutputWithContext(ctx context.Context) DatabaseInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInfoArrayOutput)
}

type DatabaseInfoOutput struct{ *pulumi.OutputState }

func (DatabaseInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInfo)(nil)).Elem()
}

func (o DatabaseInfoOutput) ToDatabaseInfoOutput() DatabaseInfoOutput {
	return o
}

func (o DatabaseInfoOutput) ToDatabaseInfoOutputWithContext(ctx context.Context) DatabaseInfoOutput {
	return o
}

func (o DatabaseInfoOutput) SourceDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInfo) string { return v.SourceDatabaseName }).(pulumi.StringOutput)
}

type DatabaseInfoArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInfo)(nil)).Elem()
}

func (o DatabaseInfoArrayOutput) ToDatabaseInfoArrayOutput() DatabaseInfoArrayOutput {
	return o
}

func (o DatabaseInfoArrayOutput) ToDatabaseInfoArrayOutputWithContext(ctx context.Context) DatabaseInfoArrayOutput {
	return o
}

func (o DatabaseInfoArrayOutput) Index(i pulumi.IntInput) DatabaseInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInfo {
		return vs[0].([]DatabaseInfo)[vs[1].(int)]
	}).(DatabaseInfoOutput)
}

type DatabaseInfoResponse struct {
	SourceDatabaseName string `pulumi:"sourceDatabaseName"`
}





type DatabaseInfoResponseInput interface {
	pulumi.Input

	ToDatabaseInfoResponseOutput() DatabaseInfoResponseOutput
	ToDatabaseInfoResponseOutputWithContext(context.Context) DatabaseInfoResponseOutput
}

type DatabaseInfoResponseArgs struct {
	SourceDatabaseName pulumi.StringInput `pulumi:"sourceDatabaseName"`
}

func (DatabaseInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInfoResponse)(nil)).Elem()
}

func (i DatabaseInfoResponseArgs) ToDatabaseInfoResponseOutput() DatabaseInfoResponseOutput {
	return i.ToDatabaseInfoResponseOutputWithContext(context.Background())
}

func (i DatabaseInfoResponseArgs) ToDatabaseInfoResponseOutputWithContext(ctx context.Context) DatabaseInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInfoResponseOutput)
}





type DatabaseInfoResponseArrayInput interface {
	pulumi.Input

	ToDatabaseInfoResponseArrayOutput() DatabaseInfoResponseArrayOutput
	ToDatabaseInfoResponseArrayOutputWithContext(context.Context) DatabaseInfoResponseArrayOutput
}

type DatabaseInfoResponseArray []DatabaseInfoResponseInput

func (DatabaseInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInfoResponse)(nil)).Elem()
}

func (i DatabaseInfoResponseArray) ToDatabaseInfoResponseArrayOutput() DatabaseInfoResponseArrayOutput {
	return i.ToDatabaseInfoResponseArrayOutputWithContext(context.Background())
}

func (i DatabaseInfoResponseArray) ToDatabaseInfoResponseArrayOutputWithContext(ctx context.Context) DatabaseInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInfoResponseArrayOutput)
}

type DatabaseInfoResponseOutput struct{ *pulumi.OutputState }

func (DatabaseInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInfoResponse)(nil)).Elem()
}

func (o DatabaseInfoResponseOutput) ToDatabaseInfoResponseOutput() DatabaseInfoResponseOutput {
	return o
}

func (o DatabaseInfoResponseOutput) ToDatabaseInfoResponseOutputWithContext(ctx context.Context) DatabaseInfoResponseOutput {
	return o
}

func (o DatabaseInfoResponseOutput) SourceDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInfoResponse) string { return v.SourceDatabaseName }).(pulumi.StringOutput)
}

type DatabaseInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInfoResponse)(nil)).Elem()
}

func (o DatabaseInfoResponseArrayOutput) ToDatabaseInfoResponseArrayOutput() DatabaseInfoResponseArrayOutput {
	return o
}

func (o DatabaseInfoResponseArrayOutput) ToDatabaseInfoResponseArrayOutputWithContext(ctx context.Context) DatabaseInfoResponseArrayOutput {
	return o
}

func (o DatabaseInfoResponseArrayOutput) Index(i pulumi.IntInput) DatabaseInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInfoResponse {
		return vs[0].([]DatabaseInfoResponse)[vs[1].(int)]
	}).(DatabaseInfoResponseOutput)
}

type DatabaseSummaryResultResponse struct {
	EndedOn             string  `pulumi:"endedOn"`
	ErrorPrefix         string  `pulumi:"errorPrefix"`
	ItemsCompletedCount float64 `pulumi:"itemsCompletedCount"`
	ItemsCount          float64 `pulumi:"itemsCount"`
	Name                string  `pulumi:"name"`
	ResultPrefix        string  `pulumi:"resultPrefix"`
	SizeMB              float64 `pulumi:"sizeMB"`
	StartedOn           string  `pulumi:"startedOn"`
	State               string  `pulumi:"state"`
	StatusMessage       string  `pulumi:"statusMessage"`
}





type DatabaseSummaryResultResponseInput interface {
	pulumi.Input

	ToDatabaseSummaryResultResponseOutput() DatabaseSummaryResultResponseOutput
	ToDatabaseSummaryResultResponseOutputWithContext(context.Context) DatabaseSummaryResultResponseOutput
}

type DatabaseSummaryResultResponseArgs struct {
	EndedOn             pulumi.StringInput  `pulumi:"endedOn"`
	ErrorPrefix         pulumi.StringInput  `pulumi:"errorPrefix"`
	ItemsCompletedCount pulumi.Float64Input `pulumi:"itemsCompletedCount"`
	ItemsCount          pulumi.Float64Input `pulumi:"itemsCount"`
	Name                pulumi.StringInput  `pulumi:"name"`
	ResultPrefix        pulumi.StringInput  `pulumi:"resultPrefix"`
	SizeMB              pulumi.Float64Input `pulumi:"sizeMB"`
	StartedOn           pulumi.StringInput  `pulumi:"startedOn"`
	State               pulumi.StringInput  `pulumi:"state"`
	StatusMessage       pulumi.StringInput  `pulumi:"statusMessage"`
}

func (DatabaseSummaryResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseSummaryResultResponse)(nil)).Elem()
}

func (i DatabaseSummaryResultResponseArgs) ToDatabaseSummaryResultResponseOutput() DatabaseSummaryResultResponseOutput {
	return i.ToDatabaseSummaryResultResponseOutputWithContext(context.Background())
}

func (i DatabaseSummaryResultResponseArgs) ToDatabaseSummaryResultResponseOutputWithContext(ctx context.Context) DatabaseSummaryResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseSummaryResultResponseOutput)
}





type DatabaseSummaryResultResponseMapInput interface {
	pulumi.Input

	ToDatabaseSummaryResultResponseMapOutput() DatabaseSummaryResultResponseMapOutput
	ToDatabaseSummaryResultResponseMapOutputWithContext(context.Context) DatabaseSummaryResultResponseMapOutput
}

type DatabaseSummaryResultResponseMap map[string]DatabaseSummaryResultResponseInput

func (DatabaseSummaryResultResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseSummaryResultResponse)(nil)).Elem()
}

func (i DatabaseSummaryResultResponseMap) ToDatabaseSummaryResultResponseMapOutput() DatabaseSummaryResultResponseMapOutput {
	return i.ToDatabaseSummaryResultResponseMapOutputWithContext(context.Background())
}

func (i DatabaseSummaryResultResponseMap) ToDatabaseSummaryResultResponseMapOutputWithContext(ctx context.Context) DatabaseSummaryResultResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseSummaryResultResponseMapOutput)
}

type DatabaseSummaryResultResponseOutput struct{ *pulumi.OutputState }

func (DatabaseSummaryResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseSummaryResultResponse)(nil)).Elem()
}

func (o DatabaseSummaryResultResponseOutput) ToDatabaseSummaryResultResponseOutput() DatabaseSummaryResultResponseOutput {
	return o
}

func (o DatabaseSummaryResultResponseOutput) ToDatabaseSummaryResultResponseOutputWithContext(ctx context.Context) DatabaseSummaryResultResponseOutput {
	return o
}

func (o DatabaseSummaryResultResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o DatabaseSummaryResultResponseOutput) ErrorPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) string { return v.ErrorPrefix }).(pulumi.StringOutput)
}

func (o DatabaseSummaryResultResponseOutput) ItemsCompletedCount() pulumi.Float64Output {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) float64 { return v.ItemsCompletedCount }).(pulumi.Float64Output)
}

func (o DatabaseSummaryResultResponseOutput) ItemsCount() pulumi.Float64Output {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) float64 { return v.ItemsCount }).(pulumi.Float64Output)
}

func (o DatabaseSummaryResultResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o DatabaseSummaryResultResponseOutput) ResultPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) string { return v.ResultPrefix }).(pulumi.StringOutput)
}

func (o DatabaseSummaryResultResponseOutput) SizeMB() pulumi.Float64Output {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) float64 { return v.SizeMB }).(pulumi.Float64Output)
}

func (o DatabaseSummaryResultResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

func (o DatabaseSummaryResultResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o DatabaseSummaryResultResponseOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) string { return v.StatusMessage }).(pulumi.StringOutput)
}

type DatabaseSummaryResultResponseMapOutput struct{ *pulumi.OutputState }

func (DatabaseSummaryResultResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseSummaryResultResponse)(nil)).Elem()
}

func (o DatabaseSummaryResultResponseMapOutput) ToDatabaseSummaryResultResponseMapOutput() DatabaseSummaryResultResponseMapOutput {
	return o
}

func (o DatabaseSummaryResultResponseMapOutput) ToDatabaseSummaryResultResponseMapOutputWithContext(ctx context.Context) DatabaseSummaryResultResponseMapOutput {
	return o
}

func (o DatabaseSummaryResultResponseMapOutput) MapIndex(k pulumi.StringInput) DatabaseSummaryResultResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DatabaseSummaryResultResponse {
		return vs[0].(map[string]DatabaseSummaryResultResponse)[vs[1].(string)]
	}).(DatabaseSummaryResultResponseOutput)
}

type DatabaseTableResponse struct {
	HasRows bool   `pulumi:"hasRows"`
	Name    string `pulumi:"name"`
}





type DatabaseTableResponseInput interface {
	pulumi.Input

	ToDatabaseTableResponseOutput() DatabaseTableResponseOutput
	ToDatabaseTableResponseOutputWithContext(context.Context) DatabaseTableResponseOutput
}

type DatabaseTableResponseArgs struct {
	HasRows pulumi.BoolInput   `pulumi:"hasRows"`
	Name    pulumi.StringInput `pulumi:"name"`
}

func (DatabaseTableResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseTableResponse)(nil)).Elem()
}

func (i DatabaseTableResponseArgs) ToDatabaseTableResponseOutput() DatabaseTableResponseOutput {
	return i.ToDatabaseTableResponseOutputWithContext(context.Background())
}

func (i DatabaseTableResponseArgs) ToDatabaseTableResponseOutputWithContext(ctx context.Context) DatabaseTableResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseTableResponseOutput)
}





type DatabaseTableResponseArrayInput interface {
	pulumi.Input

	ToDatabaseTableResponseArrayOutput() DatabaseTableResponseArrayOutput
	ToDatabaseTableResponseArrayOutputWithContext(context.Context) DatabaseTableResponseArrayOutput
}

type DatabaseTableResponseArray []DatabaseTableResponseInput

func (DatabaseTableResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseTableResponse)(nil)).Elem()
}

func (i DatabaseTableResponseArray) ToDatabaseTableResponseArrayOutput() DatabaseTableResponseArrayOutput {
	return i.ToDatabaseTableResponseArrayOutputWithContext(context.Background())
}

func (i DatabaseTableResponseArray) ToDatabaseTableResponseArrayOutputWithContext(ctx context.Context) DatabaseTableResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseTableResponseArrayOutput)
}

type DatabaseTableResponseOutput struct{ *pulumi.OutputState }

func (DatabaseTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseTableResponse)(nil)).Elem()
}

func (o DatabaseTableResponseOutput) ToDatabaseTableResponseOutput() DatabaseTableResponseOutput {
	return o
}

func (o DatabaseTableResponseOutput) ToDatabaseTableResponseOutputWithContext(ctx context.Context) DatabaseTableResponseOutput {
	return o
}

func (o DatabaseTableResponseOutput) HasRows() pulumi.BoolOutput {
	return o.ApplyT(func(v DatabaseTableResponse) bool { return v.HasRows }).(pulumi.BoolOutput)
}

func (o DatabaseTableResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseTableResponse) string { return v.Name }).(pulumi.StringOutput)
}

type DatabaseTableResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseTableResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseTableResponse)(nil)).Elem()
}

func (o DatabaseTableResponseArrayOutput) ToDatabaseTableResponseArrayOutput() DatabaseTableResponseArrayOutput {
	return o
}

func (o DatabaseTableResponseArrayOutput) ToDatabaseTableResponseArrayOutputWithContext(ctx context.Context) DatabaseTableResponseArrayOutput {
	return o
}

func (o DatabaseTableResponseArrayOutput) Index(i pulumi.IntInput) DatabaseTableResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseTableResponse {
		return vs[0].([]DatabaseTableResponse)[vs[1].(int)]
	}).(DatabaseTableResponseOutput)
}

type FileShare struct {
	Password *string `pulumi:"password"`
	Path     string  `pulumi:"path"`
	UserName *string `pulumi:"userName"`
}





type FileShareInput interface {
	pulumi.Input

	ToFileShareOutput() FileShareOutput
	ToFileShareOutputWithContext(context.Context) FileShareOutput
}

type FileShareArgs struct {
	Password pulumi.StringPtrInput `pulumi:"password"`
	Path     pulumi.StringInput    `pulumi:"path"`
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (FileShareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShare)(nil)).Elem()
}

func (i FileShareArgs) ToFileShareOutput() FileShareOutput {
	return i.ToFileShareOutputWithContext(context.Background())
}

func (i FileShareArgs) ToFileShareOutputWithContext(ctx context.Context) FileShareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileShareOutput)
}

func (i FileShareArgs) ToFileSharePtrOutput() FileSharePtrOutput {
	return i.ToFileSharePtrOutputWithContext(context.Background())
}

func (i FileShareArgs) ToFileSharePtrOutputWithContext(ctx context.Context) FileSharePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileShareOutput).ToFileSharePtrOutputWithContext(ctx)
}









type FileSharePtrInput interface {
	pulumi.Input

	ToFileSharePtrOutput() FileSharePtrOutput
	ToFileSharePtrOutputWithContext(context.Context) FileSharePtrOutput
}

type fileSharePtrType FileShareArgs

func FileSharePtr(v *FileShareArgs) FileSharePtrInput {
	return (*fileSharePtrType)(v)
}

func (*fileSharePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileShare)(nil)).Elem()
}

func (i *fileSharePtrType) ToFileSharePtrOutput() FileSharePtrOutput {
	return i.ToFileSharePtrOutputWithContext(context.Background())
}

func (i *fileSharePtrType) ToFileSharePtrOutputWithContext(ctx context.Context) FileSharePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSharePtrOutput)
}

type FileShareOutput struct{ *pulumi.OutputState }

func (FileShareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShare)(nil)).Elem()
}

func (o FileShareOutput) ToFileShareOutput() FileShareOutput {
	return o
}

func (o FileShareOutput) ToFileShareOutputWithContext(ctx context.Context) FileShareOutput {
	return o
}

func (o FileShareOutput) ToFileSharePtrOutput() FileSharePtrOutput {
	return o.ToFileSharePtrOutputWithContext(context.Background())
}

func (o FileShareOutput) ToFileSharePtrOutputWithContext(ctx context.Context) FileSharePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FileShare) *FileShare {
		return &v
	}).(FileSharePtrOutput)
}

func (o FileShareOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileShare) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o FileShareOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v FileShare) string { return v.Path }).(pulumi.StringOutput)
}

func (o FileShareOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileShare) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type FileSharePtrOutput struct{ *pulumi.OutputState }

func (FileSharePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileShare)(nil)).Elem()
}

func (o FileSharePtrOutput) ToFileSharePtrOutput() FileSharePtrOutput {
	return o
}

func (o FileSharePtrOutput) ToFileSharePtrOutputWithContext(ctx context.Context) FileSharePtrOutput {
	return o
}

func (o FileSharePtrOutput) Elem() FileShareOutput {
	return o.ApplyT(func(v *FileShare) FileShare {
		if v != nil {
			return *v
		}
		var ret FileShare
		return ret
	}).(FileShareOutput)
}

func (o FileSharePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShare) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o FileSharePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShare) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

func (o FileSharePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShare) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type FileShareResponse struct {
	Password *string `pulumi:"password"`
	Path     string  `pulumi:"path"`
	UserName *string `pulumi:"userName"`
}





type FileShareResponseInput interface {
	pulumi.Input

	ToFileShareResponseOutput() FileShareResponseOutput
	ToFileShareResponseOutputWithContext(context.Context) FileShareResponseOutput
}

type FileShareResponseArgs struct {
	Password pulumi.StringPtrInput `pulumi:"password"`
	Path     pulumi.StringInput    `pulumi:"path"`
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (FileShareResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareResponse)(nil)).Elem()
}

func (i FileShareResponseArgs) ToFileShareResponseOutput() FileShareResponseOutput {
	return i.ToFileShareResponseOutputWithContext(context.Background())
}

func (i FileShareResponseArgs) ToFileShareResponseOutputWithContext(ctx context.Context) FileShareResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileShareResponseOutput)
}

func (i FileShareResponseArgs) ToFileShareResponsePtrOutput() FileShareResponsePtrOutput {
	return i.ToFileShareResponsePtrOutputWithContext(context.Background())
}

func (i FileShareResponseArgs) ToFileShareResponsePtrOutputWithContext(ctx context.Context) FileShareResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileShareResponseOutput).ToFileShareResponsePtrOutputWithContext(ctx)
}









type FileShareResponsePtrInput interface {
	pulumi.Input

	ToFileShareResponsePtrOutput() FileShareResponsePtrOutput
	ToFileShareResponsePtrOutputWithContext(context.Context) FileShareResponsePtrOutput
}

type fileShareResponsePtrType FileShareResponseArgs

func FileShareResponsePtr(v *FileShareResponseArgs) FileShareResponsePtrInput {
	return (*fileShareResponsePtrType)(v)
}

func (*fileShareResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileShareResponse)(nil)).Elem()
}

func (i *fileShareResponsePtrType) ToFileShareResponsePtrOutput() FileShareResponsePtrOutput {
	return i.ToFileShareResponsePtrOutputWithContext(context.Background())
}

func (i *fileShareResponsePtrType) ToFileShareResponsePtrOutputWithContext(ctx context.Context) FileShareResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileShareResponsePtrOutput)
}

type FileShareResponseOutput struct{ *pulumi.OutputState }

func (FileShareResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareResponse)(nil)).Elem()
}

func (o FileShareResponseOutput) ToFileShareResponseOutput() FileShareResponseOutput {
	return o
}

func (o FileShareResponseOutput) ToFileShareResponseOutputWithContext(ctx context.Context) FileShareResponseOutput {
	return o
}

func (o FileShareResponseOutput) ToFileShareResponsePtrOutput() FileShareResponsePtrOutput {
	return o.ToFileShareResponsePtrOutputWithContext(context.Background())
}

func (o FileShareResponseOutput) ToFileShareResponsePtrOutputWithContext(ctx context.Context) FileShareResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FileShareResponse) *FileShareResponse {
		return &v
	}).(FileShareResponsePtrOutput)
}

func (o FileShareResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileShareResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o FileShareResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v FileShareResponse) string { return v.Path }).(pulumi.StringOutput)
}

func (o FileShareResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileShareResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type FileShareResponsePtrOutput struct{ *pulumi.OutputState }

func (FileShareResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileShareResponse)(nil)).Elem()
}

func (o FileShareResponsePtrOutput) ToFileShareResponsePtrOutput() FileShareResponsePtrOutput {
	return o
}

func (o FileShareResponsePtrOutput) ToFileShareResponsePtrOutputWithContext(ctx context.Context) FileShareResponsePtrOutput {
	return o
}

func (o FileShareResponsePtrOutput) Elem() FileShareResponseOutput {
	return o.ApplyT(func(v *FileShareResponse) FileShareResponse {
		if v != nil {
			return *v
		}
		var ret FileShareResponse
		return ret
	}).(FileShareResponseOutput)
}

func (o FileShareResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o FileShareResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

func (o FileShareResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type GetTdeCertificatesSqlTaskInput struct {
	BackupFileShare      FileShare                  `pulumi:"backupFileShare"`
	ConnectionInfo       SqlConnectionInfo          `pulumi:"connectionInfo"`
	SelectedCertificates []SelectedCertificateInput `pulumi:"selectedCertificates"`
}





type GetTdeCertificatesSqlTaskInputInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskInputOutput() GetTdeCertificatesSqlTaskInputOutput
	ToGetTdeCertificatesSqlTaskInputOutputWithContext(context.Context) GetTdeCertificatesSqlTaskInputOutput
}

type GetTdeCertificatesSqlTaskInputArgs struct {
	BackupFileShare      FileShareInput                     `pulumi:"backupFileShare"`
	ConnectionInfo       SqlConnectionInfoInput             `pulumi:"connectionInfo"`
	SelectedCertificates SelectedCertificateInputArrayInput `pulumi:"selectedCertificates"`
}

func (GetTdeCertificatesSqlTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskInput)(nil)).Elem()
}

func (i GetTdeCertificatesSqlTaskInputArgs) ToGetTdeCertificatesSqlTaskInputOutput() GetTdeCertificatesSqlTaskInputOutput {
	return i.ToGetTdeCertificatesSqlTaskInputOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskInputArgs) ToGetTdeCertificatesSqlTaskInputOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskInputOutput)
}

func (i GetTdeCertificatesSqlTaskInputArgs) ToGetTdeCertificatesSqlTaskInputPtrOutput() GetTdeCertificatesSqlTaskInputPtrOutput {
	return i.ToGetTdeCertificatesSqlTaskInputPtrOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskInputArgs) ToGetTdeCertificatesSqlTaskInputPtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskInputOutput).ToGetTdeCertificatesSqlTaskInputPtrOutputWithContext(ctx)
}









type GetTdeCertificatesSqlTaskInputPtrInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskInputPtrOutput() GetTdeCertificatesSqlTaskInputPtrOutput
	ToGetTdeCertificatesSqlTaskInputPtrOutputWithContext(context.Context) GetTdeCertificatesSqlTaskInputPtrOutput
}

type getTdeCertificatesSqlTaskInputPtrType GetTdeCertificatesSqlTaskInputArgs

func GetTdeCertificatesSqlTaskInputPtr(v *GetTdeCertificatesSqlTaskInputArgs) GetTdeCertificatesSqlTaskInputPtrInput {
	return (*getTdeCertificatesSqlTaskInputPtrType)(v)
}

func (*getTdeCertificatesSqlTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTdeCertificatesSqlTaskInput)(nil)).Elem()
}

func (i *getTdeCertificatesSqlTaskInputPtrType) ToGetTdeCertificatesSqlTaskInputPtrOutput() GetTdeCertificatesSqlTaskInputPtrOutput {
	return i.ToGetTdeCertificatesSqlTaskInputPtrOutputWithContext(context.Background())
}

func (i *getTdeCertificatesSqlTaskInputPtrType) ToGetTdeCertificatesSqlTaskInputPtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskInputPtrOutput)
}

type GetTdeCertificatesSqlTaskInputOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskInput)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskInputOutput) ToGetTdeCertificatesSqlTaskInputOutput() GetTdeCertificatesSqlTaskInputOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputOutput) ToGetTdeCertificatesSqlTaskInputOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputOutput) ToGetTdeCertificatesSqlTaskInputPtrOutput() GetTdeCertificatesSqlTaskInputPtrOutput {
	return o.ToGetTdeCertificatesSqlTaskInputPtrOutputWithContext(context.Background())
}

func (o GetTdeCertificatesSqlTaskInputOutput) ToGetTdeCertificatesSqlTaskInputPtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetTdeCertificatesSqlTaskInput) *GetTdeCertificatesSqlTaskInput {
		return &v
	}).(GetTdeCertificatesSqlTaskInputPtrOutput)
}

func (o GetTdeCertificatesSqlTaskInputOutput) BackupFileShare() FileShareOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskInput) FileShare { return v.BackupFileShare }).(FileShareOutput)
}

func (o GetTdeCertificatesSqlTaskInputOutput) ConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskInput) SqlConnectionInfo { return v.ConnectionInfo }).(SqlConnectionInfoOutput)
}

func (o GetTdeCertificatesSqlTaskInputOutput) SelectedCertificates() SelectedCertificateInputArrayOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskInput) []SelectedCertificateInput { return v.SelectedCertificates }).(SelectedCertificateInputArrayOutput)
}

type GetTdeCertificatesSqlTaskInputPtrOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTdeCertificatesSqlTaskInput)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskInputPtrOutput) ToGetTdeCertificatesSqlTaskInputPtrOutput() GetTdeCertificatesSqlTaskInputPtrOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputPtrOutput) ToGetTdeCertificatesSqlTaskInputPtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputPtrOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputPtrOutput) Elem() GetTdeCertificatesSqlTaskInputOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInput) GetTdeCertificatesSqlTaskInput {
		if v != nil {
			return *v
		}
		var ret GetTdeCertificatesSqlTaskInput
		return ret
	}).(GetTdeCertificatesSqlTaskInputOutput)
}

func (o GetTdeCertificatesSqlTaskInputPtrOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInput) *FileShare {
		if v == nil {
			return nil
		}
		return &v.BackupFileShare
	}).(FileSharePtrOutput)
}

func (o GetTdeCertificatesSqlTaskInputPtrOutput) ConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.ConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

func (o GetTdeCertificatesSqlTaskInputPtrOutput) SelectedCertificates() SelectedCertificateInputArrayOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInput) []SelectedCertificateInput {
		if v == nil {
			return nil
		}
		return v.SelectedCertificates
	}).(SelectedCertificateInputArrayOutput)
}

type GetTdeCertificatesSqlTaskInputResponse struct {
	BackupFileShare      FileShareResponse                  `pulumi:"backupFileShare"`
	ConnectionInfo       SqlConnectionInfoResponse          `pulumi:"connectionInfo"`
	SelectedCertificates []SelectedCertificateInputResponse `pulumi:"selectedCertificates"`
}





type GetTdeCertificatesSqlTaskInputResponseInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskInputResponseOutput() GetTdeCertificatesSqlTaskInputResponseOutput
	ToGetTdeCertificatesSqlTaskInputResponseOutputWithContext(context.Context) GetTdeCertificatesSqlTaskInputResponseOutput
}

type GetTdeCertificatesSqlTaskInputResponseArgs struct {
	BackupFileShare      FileShareResponseInput                     `pulumi:"backupFileShare"`
	ConnectionInfo       SqlConnectionInfoResponseInput             `pulumi:"connectionInfo"`
	SelectedCertificates SelectedCertificateInputResponseArrayInput `pulumi:"selectedCertificates"`
}

func (GetTdeCertificatesSqlTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskInputResponse)(nil)).Elem()
}

func (i GetTdeCertificatesSqlTaskInputResponseArgs) ToGetTdeCertificatesSqlTaskInputResponseOutput() GetTdeCertificatesSqlTaskInputResponseOutput {
	return i.ToGetTdeCertificatesSqlTaskInputResponseOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskInputResponseArgs) ToGetTdeCertificatesSqlTaskInputResponseOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskInputResponseOutput)
}

func (i GetTdeCertificatesSqlTaskInputResponseArgs) ToGetTdeCertificatesSqlTaskInputResponsePtrOutput() GetTdeCertificatesSqlTaskInputResponsePtrOutput {
	return i.ToGetTdeCertificatesSqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskInputResponseArgs) ToGetTdeCertificatesSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskInputResponseOutput).ToGetTdeCertificatesSqlTaskInputResponsePtrOutputWithContext(ctx)
}









type GetTdeCertificatesSqlTaskInputResponsePtrInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskInputResponsePtrOutput() GetTdeCertificatesSqlTaskInputResponsePtrOutput
	ToGetTdeCertificatesSqlTaskInputResponsePtrOutputWithContext(context.Context) GetTdeCertificatesSqlTaskInputResponsePtrOutput
}

type getTdeCertificatesSqlTaskInputResponsePtrType GetTdeCertificatesSqlTaskInputResponseArgs

func GetTdeCertificatesSqlTaskInputResponsePtr(v *GetTdeCertificatesSqlTaskInputResponseArgs) GetTdeCertificatesSqlTaskInputResponsePtrInput {
	return (*getTdeCertificatesSqlTaskInputResponsePtrType)(v)
}

func (*getTdeCertificatesSqlTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTdeCertificatesSqlTaskInputResponse)(nil)).Elem()
}

func (i *getTdeCertificatesSqlTaskInputResponsePtrType) ToGetTdeCertificatesSqlTaskInputResponsePtrOutput() GetTdeCertificatesSqlTaskInputResponsePtrOutput {
	return i.ToGetTdeCertificatesSqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *getTdeCertificatesSqlTaskInputResponsePtrType) ToGetTdeCertificatesSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskInputResponsePtrOutput)
}

type GetTdeCertificatesSqlTaskInputResponseOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskInputResponse)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskInputResponseOutput) ToGetTdeCertificatesSqlTaskInputResponseOutput() GetTdeCertificatesSqlTaskInputResponseOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputResponseOutput) ToGetTdeCertificatesSqlTaskInputResponseOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputResponseOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputResponseOutput) ToGetTdeCertificatesSqlTaskInputResponsePtrOutput() GetTdeCertificatesSqlTaskInputResponsePtrOutput {
	return o.ToGetTdeCertificatesSqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o GetTdeCertificatesSqlTaskInputResponseOutput) ToGetTdeCertificatesSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetTdeCertificatesSqlTaskInputResponse) *GetTdeCertificatesSqlTaskInputResponse {
		return &v
	}).(GetTdeCertificatesSqlTaskInputResponsePtrOutput)
}

func (o GetTdeCertificatesSqlTaskInputResponseOutput) BackupFileShare() FileShareResponseOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskInputResponse) FileShareResponse { return v.BackupFileShare }).(FileShareResponseOutput)
}

func (o GetTdeCertificatesSqlTaskInputResponseOutput) ConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskInputResponse) SqlConnectionInfoResponse { return v.ConnectionInfo }).(SqlConnectionInfoResponseOutput)
}

func (o GetTdeCertificatesSqlTaskInputResponseOutput) SelectedCertificates() SelectedCertificateInputResponseArrayOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskInputResponse) []SelectedCertificateInputResponse {
		return v.SelectedCertificates
	}).(SelectedCertificateInputResponseArrayOutput)
}

type GetTdeCertificatesSqlTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTdeCertificatesSqlTaskInputResponse)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskInputResponsePtrOutput) ToGetTdeCertificatesSqlTaskInputResponsePtrOutput() GetTdeCertificatesSqlTaskInputResponsePtrOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputResponsePtrOutput) ToGetTdeCertificatesSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputResponsePtrOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputResponsePtrOutput) Elem() GetTdeCertificatesSqlTaskInputResponseOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInputResponse) GetTdeCertificatesSqlTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret GetTdeCertificatesSqlTaskInputResponse
		return ret
	}).(GetTdeCertificatesSqlTaskInputResponseOutput)
}

func (o GetTdeCertificatesSqlTaskInputResponsePtrOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInputResponse) *FileShareResponse {
		if v == nil {
			return nil
		}
		return &v.BackupFileShare
	}).(FileShareResponsePtrOutput)
}

func (o GetTdeCertificatesSqlTaskInputResponsePtrOutput) ConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.ConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

func (o GetTdeCertificatesSqlTaskInputResponsePtrOutput) SelectedCertificates() SelectedCertificateInputResponseArrayOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInputResponse) []SelectedCertificateInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedCertificates
	}).(SelectedCertificateInputResponseArrayOutput)
}

type GetTdeCertificatesSqlTaskOutputResponse struct {
	Base64EncodedCertificates map[string][]string           `pulumi:"base64EncodedCertificates"`
	ValidationErrors          []ReportableExceptionResponse `pulumi:"validationErrors"`
}





type GetTdeCertificatesSqlTaskOutputResponseInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskOutputResponseOutput() GetTdeCertificatesSqlTaskOutputResponseOutput
	ToGetTdeCertificatesSqlTaskOutputResponseOutputWithContext(context.Context) GetTdeCertificatesSqlTaskOutputResponseOutput
}

type GetTdeCertificatesSqlTaskOutputResponseArgs struct {
	Base64EncodedCertificates pulumi.StringArrayMapInput            `pulumi:"base64EncodedCertificates"`
	ValidationErrors          ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (GetTdeCertificatesSqlTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskOutputResponse)(nil)).Elem()
}

func (i GetTdeCertificatesSqlTaskOutputResponseArgs) ToGetTdeCertificatesSqlTaskOutputResponseOutput() GetTdeCertificatesSqlTaskOutputResponseOutput {
	return i.ToGetTdeCertificatesSqlTaskOutputResponseOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskOutputResponseArgs) ToGetTdeCertificatesSqlTaskOutputResponseOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskOutputResponseOutput)
}





type GetTdeCertificatesSqlTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskOutputResponseArrayOutput() GetTdeCertificatesSqlTaskOutputResponseArrayOutput
	ToGetTdeCertificatesSqlTaskOutputResponseArrayOutputWithContext(context.Context) GetTdeCertificatesSqlTaskOutputResponseArrayOutput
}

type GetTdeCertificatesSqlTaskOutputResponseArray []GetTdeCertificatesSqlTaskOutputResponseInput

func (GetTdeCertificatesSqlTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTdeCertificatesSqlTaskOutputResponse)(nil)).Elem()
}

func (i GetTdeCertificatesSqlTaskOutputResponseArray) ToGetTdeCertificatesSqlTaskOutputResponseArrayOutput() GetTdeCertificatesSqlTaskOutputResponseArrayOutput {
	return i.ToGetTdeCertificatesSqlTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskOutputResponseArray) ToGetTdeCertificatesSqlTaskOutputResponseArrayOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskOutputResponseArrayOutput)
}

type GetTdeCertificatesSqlTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskOutputResponse)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskOutputResponseOutput) ToGetTdeCertificatesSqlTaskOutputResponseOutput() GetTdeCertificatesSqlTaskOutputResponseOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskOutputResponseOutput) ToGetTdeCertificatesSqlTaskOutputResponseOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskOutputResponseOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskOutputResponseOutput) Base64EncodedCertificates() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskOutputResponse) map[string][]string {
		return v.Base64EncodedCertificates
	}).(pulumi.StringArrayMapOutput)
}

func (o GetTdeCertificatesSqlTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type GetTdeCertificatesSqlTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTdeCertificatesSqlTaskOutputResponse)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskOutputResponseArrayOutput) ToGetTdeCertificatesSqlTaskOutputResponseArrayOutput() GetTdeCertificatesSqlTaskOutputResponseArrayOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskOutputResponseArrayOutput) ToGetTdeCertificatesSqlTaskOutputResponseArrayOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskOutputResponseArrayOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) GetTdeCertificatesSqlTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTdeCertificatesSqlTaskOutputResponse {
		return vs[0].([]GetTdeCertificatesSqlTaskOutputResponse)[vs[1].(int)]
	}).(GetTdeCertificatesSqlTaskOutputResponseOutput)
}

type GetTdeCertificatesSqlTaskProperties struct {
	ClientData map[string]string               `pulumi:"clientData"`
	Input      *GetTdeCertificatesSqlTaskInput `pulumi:"input"`
	TaskType   string                          `pulumi:"taskType"`
}





type GetTdeCertificatesSqlTaskPropertiesInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskPropertiesOutput() GetTdeCertificatesSqlTaskPropertiesOutput
	ToGetTdeCertificatesSqlTaskPropertiesOutputWithContext(context.Context) GetTdeCertificatesSqlTaskPropertiesOutput
}

type GetTdeCertificatesSqlTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                  `pulumi:"clientData"`
	Input      GetTdeCertificatesSqlTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                     `pulumi:"taskType"`
}

func (GetTdeCertificatesSqlTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskProperties)(nil)).Elem()
}

func (i GetTdeCertificatesSqlTaskPropertiesArgs) ToGetTdeCertificatesSqlTaskPropertiesOutput() GetTdeCertificatesSqlTaskPropertiesOutput {
	return i.ToGetTdeCertificatesSqlTaskPropertiesOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskPropertiesArgs) ToGetTdeCertificatesSqlTaskPropertiesOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskPropertiesOutput)
}

type GetTdeCertificatesSqlTaskPropertiesOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskProperties)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskPropertiesOutput) ToGetTdeCertificatesSqlTaskPropertiesOutput() GetTdeCertificatesSqlTaskPropertiesOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskPropertiesOutput) ToGetTdeCertificatesSqlTaskPropertiesOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskPropertiesOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o GetTdeCertificatesSqlTaskPropertiesOutput) Input() GetTdeCertificatesSqlTaskInputPtrOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskProperties) *GetTdeCertificatesSqlTaskInput { return v.Input }).(GetTdeCertificatesSqlTaskInputPtrOutput)
}

func (o GetTdeCertificatesSqlTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type GetTdeCertificatesSqlTaskPropertiesResponse struct {
	ClientData map[string]string                         `pulumi:"clientData"`
	Commands   []interface{}                             `pulumi:"commands"`
	Errors     []ODataErrorResponse                      `pulumi:"errors"`
	Input      *GetTdeCertificatesSqlTaskInputResponse   `pulumi:"input"`
	Output     []GetTdeCertificatesSqlTaskOutputResponse `pulumi:"output"`
	State      string                                    `pulumi:"state"`
	TaskType   string                                    `pulumi:"taskType"`
}





type GetTdeCertificatesSqlTaskPropertiesResponseInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskPropertiesResponseOutput() GetTdeCertificatesSqlTaskPropertiesResponseOutput
	ToGetTdeCertificatesSqlTaskPropertiesResponseOutputWithContext(context.Context) GetTdeCertificatesSqlTaskPropertiesResponseOutput
}

type GetTdeCertificatesSqlTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                             `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                 `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                      `pulumi:"errors"`
	Input      GetTdeCertificatesSqlTaskInputResponsePtrInput    `pulumi:"input"`
	Output     GetTdeCertificatesSqlTaskOutputResponseArrayInput `pulumi:"output"`
	State      pulumi.StringInput                                `pulumi:"state"`
	TaskType   pulumi.StringInput                                `pulumi:"taskType"`
}

func (GetTdeCertificatesSqlTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskPropertiesResponse)(nil)).Elem()
}

func (i GetTdeCertificatesSqlTaskPropertiesResponseArgs) ToGetTdeCertificatesSqlTaskPropertiesResponseOutput() GetTdeCertificatesSqlTaskPropertiesResponseOutput {
	return i.ToGetTdeCertificatesSqlTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskPropertiesResponseArgs) ToGetTdeCertificatesSqlTaskPropertiesResponseOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskPropertiesResponseOutput)
}

type GetTdeCertificatesSqlTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskPropertiesResponse)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskPropertiesResponseOutput) ToGetTdeCertificatesSqlTaskPropertiesResponseOutput() GetTdeCertificatesSqlTaskPropertiesResponseOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskPropertiesResponseOutput) ToGetTdeCertificatesSqlTaskPropertiesResponseOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskPropertiesResponseOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o GetTdeCertificatesSqlTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o GetTdeCertificatesSqlTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o GetTdeCertificatesSqlTaskPropertiesResponseOutput) Input() GetTdeCertificatesSqlTaskInputResponsePtrOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesResponse) *GetTdeCertificatesSqlTaskInputResponse {
		return v.Input
	}).(GetTdeCertificatesSqlTaskInputResponsePtrOutput)
}

func (o GetTdeCertificatesSqlTaskPropertiesResponseOutput) Output() GetTdeCertificatesSqlTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesResponse) []GetTdeCertificatesSqlTaskOutputResponse {
		return v.Output
	}).(GetTdeCertificatesSqlTaskOutputResponseArrayOutput)
}

func (o GetTdeCertificatesSqlTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o GetTdeCertificatesSqlTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type GetUserTablesOracleTaskInput struct {
	ConnectionInfo  OracleConnectionInfo `pulumi:"connectionInfo"`
	SelectedSchemas []string             `pulumi:"selectedSchemas"`
}





type GetUserTablesOracleTaskInputInput interface {
	pulumi.Input

	ToGetUserTablesOracleTaskInputOutput() GetUserTablesOracleTaskInputOutput
	ToGetUserTablesOracleTaskInputOutputWithContext(context.Context) GetUserTablesOracleTaskInputOutput
}

type GetUserTablesOracleTaskInputArgs struct {
	ConnectionInfo  OracleConnectionInfoInput `pulumi:"connectionInfo"`
	SelectedSchemas pulumi.StringArrayInput   `pulumi:"selectedSchemas"`
}

func (GetUserTablesOracleTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesOracleTaskInput)(nil)).Elem()
}

func (i GetUserTablesOracleTaskInputArgs) ToGetUserTablesOracleTaskInputOutput() GetUserTablesOracleTaskInputOutput {
	return i.ToGetUserTablesOracleTaskInputOutputWithContext(context.Background())
}

func (i GetUserTablesOracleTaskInputArgs) ToGetUserTablesOracleTaskInputOutputWithContext(ctx context.Context) GetUserTablesOracleTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesOracleTaskInputOutput)
}

func (i GetUserTablesOracleTaskInputArgs) ToGetUserTablesOracleTaskInputPtrOutput() GetUserTablesOracleTaskInputPtrOutput {
	return i.ToGetUserTablesOracleTaskInputPtrOutputWithContext(context.Background())
}

func (i GetUserTablesOracleTaskInputArgs) ToGetUserTablesOracleTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesOracleTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesOracleTaskInputOutput).ToGetUserTablesOracleTaskInputPtrOutputWithContext(ctx)
}









type GetUserTablesOracleTaskInputPtrInput interface {
	pulumi.Input

	ToGetUserTablesOracleTaskInputPtrOutput() GetUserTablesOracleTaskInputPtrOutput
	ToGetUserTablesOracleTaskInputPtrOutputWithContext(context.Context) GetUserTablesOracleTaskInputPtrOutput
}

type getUserTablesOracleTaskInputPtrType GetUserTablesOracleTaskInputArgs

func GetUserTablesOracleTaskInputPtr(v *GetUserTablesOracleTaskInputArgs) GetUserTablesOracleTaskInputPtrInput {
	return (*getUserTablesOracleTaskInputPtrType)(v)
}

func (*getUserTablesOracleTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesOracleTaskInput)(nil)).Elem()
}

func (i *getUserTablesOracleTaskInputPtrType) ToGetUserTablesOracleTaskInputPtrOutput() GetUserTablesOracleTaskInputPtrOutput {
	return i.ToGetUserTablesOracleTaskInputPtrOutputWithContext(context.Background())
}

func (i *getUserTablesOracleTaskInputPtrType) ToGetUserTablesOracleTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesOracleTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesOracleTaskInputPtrOutput)
}

type GetUserTablesOracleTaskInputOutput struct{ *pulumi.OutputState }

func (GetUserTablesOracleTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesOracleTaskInput)(nil)).Elem()
}

func (o GetUserTablesOracleTaskInputOutput) ToGetUserTablesOracleTaskInputOutput() GetUserTablesOracleTaskInputOutput {
	return o
}

func (o GetUserTablesOracleTaskInputOutput) ToGetUserTablesOracleTaskInputOutputWithContext(ctx context.Context) GetUserTablesOracleTaskInputOutput {
	return o
}

func (o GetUserTablesOracleTaskInputOutput) ToGetUserTablesOracleTaskInputPtrOutput() GetUserTablesOracleTaskInputPtrOutput {
	return o.ToGetUserTablesOracleTaskInputPtrOutputWithContext(context.Background())
}

func (o GetUserTablesOracleTaskInputOutput) ToGetUserTablesOracleTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesOracleTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetUserTablesOracleTaskInput) *GetUserTablesOracleTaskInput {
		return &v
	}).(GetUserTablesOracleTaskInputPtrOutput)
}

func (o GetUserTablesOracleTaskInputOutput) ConnectionInfo() OracleConnectionInfoOutput {
	return o.ApplyT(func(v GetUserTablesOracleTaskInput) OracleConnectionInfo { return v.ConnectionInfo }).(OracleConnectionInfoOutput)
}

func (o GetUserTablesOracleTaskInputOutput) SelectedSchemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesOracleTaskInput) []string { return v.SelectedSchemas }).(pulumi.StringArrayOutput)
}

type GetUserTablesOracleTaskInputPtrOutput struct{ *pulumi.OutputState }

func (GetUserTablesOracleTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesOracleTaskInput)(nil)).Elem()
}

func (o GetUserTablesOracleTaskInputPtrOutput) ToGetUserTablesOracleTaskInputPtrOutput() GetUserTablesOracleTaskInputPtrOutput {
	return o
}

func (o GetUserTablesOracleTaskInputPtrOutput) ToGetUserTablesOracleTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesOracleTaskInputPtrOutput {
	return o
}

func (o GetUserTablesOracleTaskInputPtrOutput) Elem() GetUserTablesOracleTaskInputOutput {
	return o.ApplyT(func(v *GetUserTablesOracleTaskInput) GetUserTablesOracleTaskInput {
		if v != nil {
			return *v
		}
		var ret GetUserTablesOracleTaskInput
		return ret
	}).(GetUserTablesOracleTaskInputOutput)
}

func (o GetUserTablesOracleTaskInputPtrOutput) ConnectionInfo() OracleConnectionInfoPtrOutput {
	return o.ApplyT(func(v *GetUserTablesOracleTaskInput) *OracleConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.ConnectionInfo
	}).(OracleConnectionInfoPtrOutput)
}

func (o GetUserTablesOracleTaskInputPtrOutput) SelectedSchemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesOracleTaskInput) []string {
		if v == nil {
			return nil
		}
		return v.SelectedSchemas
	}).(pulumi.StringArrayOutput)
}

type GetUserTablesOracleTaskInputResponse struct {
	ConnectionInfo  OracleConnectionInfoResponse `pulumi:"connectionInfo"`
	SelectedSchemas []string                     `pulumi:"selectedSchemas"`
}





type GetUserTablesOracleTaskInputResponseInput interface {
	pulumi.Input

	ToGetUserTablesOracleTaskInputResponseOutput() GetUserTablesOracleTaskInputResponseOutput
	ToGetUserTablesOracleTaskInputResponseOutputWithContext(context.Context) GetUserTablesOracleTaskInputResponseOutput
}

type GetUserTablesOracleTaskInputResponseArgs struct {
	ConnectionInfo  OracleConnectionInfoResponseInput `pulumi:"connectionInfo"`
	SelectedSchemas pulumi.StringArrayInput           `pulumi:"selectedSchemas"`
}

func (GetUserTablesOracleTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesOracleTaskInputResponse)(nil)).Elem()
}

func (i GetUserTablesOracleTaskInputResponseArgs) ToGetUserTablesOracleTaskInputResponseOutput() GetUserTablesOracleTaskInputResponseOutput {
	return i.ToGetUserTablesOracleTaskInputResponseOutputWithContext(context.Background())
}

func (i GetUserTablesOracleTaskInputResponseArgs) ToGetUserTablesOracleTaskInputResponseOutputWithContext(ctx context.Context) GetUserTablesOracleTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesOracleTaskInputResponseOutput)
}

func (i GetUserTablesOracleTaskInputResponseArgs) ToGetUserTablesOracleTaskInputResponsePtrOutput() GetUserTablesOracleTaskInputResponsePtrOutput {
	return i.ToGetUserTablesOracleTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i GetUserTablesOracleTaskInputResponseArgs) ToGetUserTablesOracleTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesOracleTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesOracleTaskInputResponseOutput).ToGetUserTablesOracleTaskInputResponsePtrOutputWithContext(ctx)
}









type GetUserTablesOracleTaskInputResponsePtrInput interface {
	pulumi.Input

	ToGetUserTablesOracleTaskInputResponsePtrOutput() GetUserTablesOracleTaskInputResponsePtrOutput
	ToGetUserTablesOracleTaskInputResponsePtrOutputWithContext(context.Context) GetUserTablesOracleTaskInputResponsePtrOutput
}

type getUserTablesOracleTaskInputResponsePtrType GetUserTablesOracleTaskInputResponseArgs

func GetUserTablesOracleTaskInputResponsePtr(v *GetUserTablesOracleTaskInputResponseArgs) GetUserTablesOracleTaskInputResponsePtrInput {
	return (*getUserTablesOracleTaskInputResponsePtrType)(v)
}

func (*getUserTablesOracleTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesOracleTaskInputResponse)(nil)).Elem()
}

func (i *getUserTablesOracleTaskInputResponsePtrType) ToGetUserTablesOracleTaskInputResponsePtrOutput() GetUserTablesOracleTaskInputResponsePtrOutput {
	return i.ToGetUserTablesOracleTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *getUserTablesOracleTaskInputResponsePtrType) ToGetUserTablesOracleTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesOracleTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesOracleTaskInputResponsePtrOutput)
}

type GetUserTablesOracleTaskInputResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesOracleTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesOracleTaskInputResponse)(nil)).Elem()
}

func (o GetUserTablesOracleTaskInputResponseOutput) ToGetUserTablesOracleTaskInputResponseOutput() GetUserTablesOracleTaskInputResponseOutput {
	return o
}

func (o GetUserTablesOracleTaskInputResponseOutput) ToGetUserTablesOracleTaskInputResponseOutputWithContext(ctx context.Context) GetUserTablesOracleTaskInputResponseOutput {
	return o
}

func (o GetUserTablesOracleTaskInputResponseOutput) ToGetUserTablesOracleTaskInputResponsePtrOutput() GetUserTablesOracleTaskInputResponsePtrOutput {
	return o.ToGetUserTablesOracleTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o GetUserTablesOracleTaskInputResponseOutput) ToGetUserTablesOracleTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesOracleTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetUserTablesOracleTaskInputResponse) *GetUserTablesOracleTaskInputResponse {
		return &v
	}).(GetUserTablesOracleTaskInputResponsePtrOutput)
}

func (o GetUserTablesOracleTaskInputResponseOutput) ConnectionInfo() OracleConnectionInfoResponseOutput {
	return o.ApplyT(func(v GetUserTablesOracleTaskInputResponse) OracleConnectionInfoResponse { return v.ConnectionInfo }).(OracleConnectionInfoResponseOutput)
}

func (o GetUserTablesOracleTaskInputResponseOutput) SelectedSchemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesOracleTaskInputResponse) []string { return v.SelectedSchemas }).(pulumi.StringArrayOutput)
}

type GetUserTablesOracleTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (GetUserTablesOracleTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesOracleTaskInputResponse)(nil)).Elem()
}

func (o GetUserTablesOracleTaskInputResponsePtrOutput) ToGetUserTablesOracleTaskInputResponsePtrOutput() GetUserTablesOracleTaskInputResponsePtrOutput {
	return o
}

func (o GetUserTablesOracleTaskInputResponsePtrOutput) ToGetUserTablesOracleTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesOracleTaskInputResponsePtrOutput {
	return o
}

func (o GetUserTablesOracleTaskInputResponsePtrOutput) Elem() GetUserTablesOracleTaskInputResponseOutput {
	return o.ApplyT(func(v *GetUserTablesOracleTaskInputResponse) GetUserTablesOracleTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret GetUserTablesOracleTaskInputResponse
		return ret
	}).(GetUserTablesOracleTaskInputResponseOutput)
}

func (o GetUserTablesOracleTaskInputResponsePtrOutput) ConnectionInfo() OracleConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *GetUserTablesOracleTaskInputResponse) *OracleConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.ConnectionInfo
	}).(OracleConnectionInfoResponsePtrOutput)
}

func (o GetUserTablesOracleTaskInputResponsePtrOutput) SelectedSchemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesOracleTaskInputResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedSchemas
	}).(pulumi.StringArrayOutput)
}

type GetUserTablesOracleTaskOutputResponse struct {
	SchemaName       string                        `pulumi:"schemaName"`
	Tables           []DatabaseTableResponse       `pulumi:"tables"`
	ValidationErrors []ReportableExceptionResponse `pulumi:"validationErrors"`
}





type GetUserTablesOracleTaskOutputResponseInput interface {
	pulumi.Input

	ToGetUserTablesOracleTaskOutputResponseOutput() GetUserTablesOracleTaskOutputResponseOutput
	ToGetUserTablesOracleTaskOutputResponseOutputWithContext(context.Context) GetUserTablesOracleTaskOutputResponseOutput
}

type GetUserTablesOracleTaskOutputResponseArgs struct {
	SchemaName       pulumi.StringInput                    `pulumi:"schemaName"`
	Tables           DatabaseTableResponseArrayInput       `pulumi:"tables"`
	ValidationErrors ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (GetUserTablesOracleTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesOracleTaskOutputResponse)(nil)).Elem()
}

func (i GetUserTablesOracleTaskOutputResponseArgs) ToGetUserTablesOracleTaskOutputResponseOutput() GetUserTablesOracleTaskOutputResponseOutput {
	return i.ToGetUserTablesOracleTaskOutputResponseOutputWithContext(context.Background())
}

func (i GetUserTablesOracleTaskOutputResponseArgs) ToGetUserTablesOracleTaskOutputResponseOutputWithContext(ctx context.Context) GetUserTablesOracleTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesOracleTaskOutputResponseOutput)
}





type GetUserTablesOracleTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToGetUserTablesOracleTaskOutputResponseArrayOutput() GetUserTablesOracleTaskOutputResponseArrayOutput
	ToGetUserTablesOracleTaskOutputResponseArrayOutputWithContext(context.Context) GetUserTablesOracleTaskOutputResponseArrayOutput
}

type GetUserTablesOracleTaskOutputResponseArray []GetUserTablesOracleTaskOutputResponseInput

func (GetUserTablesOracleTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserTablesOracleTaskOutputResponse)(nil)).Elem()
}

func (i GetUserTablesOracleTaskOutputResponseArray) ToGetUserTablesOracleTaskOutputResponseArrayOutput() GetUserTablesOracleTaskOutputResponseArrayOutput {
	return i.ToGetUserTablesOracleTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i GetUserTablesOracleTaskOutputResponseArray) ToGetUserTablesOracleTaskOutputResponseArrayOutputWithContext(ctx context.Context) GetUserTablesOracleTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesOracleTaskOutputResponseArrayOutput)
}

type GetUserTablesOracleTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesOracleTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesOracleTaskOutputResponse)(nil)).Elem()
}

func (o GetUserTablesOracleTaskOutputResponseOutput) ToGetUserTablesOracleTaskOutputResponseOutput() GetUserTablesOracleTaskOutputResponseOutput {
	return o
}

func (o GetUserTablesOracleTaskOutputResponseOutput) ToGetUserTablesOracleTaskOutputResponseOutputWithContext(ctx context.Context) GetUserTablesOracleTaskOutputResponseOutput {
	return o
}

func (o GetUserTablesOracleTaskOutputResponseOutput) SchemaName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesOracleTaskOutputResponse) string { return v.SchemaName }).(pulumi.StringOutput)
}

func (o GetUserTablesOracleTaskOutputResponseOutput) Tables() DatabaseTableResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesOracleTaskOutputResponse) []DatabaseTableResponse { return v.Tables }).(DatabaseTableResponseArrayOutput)
}

func (o GetUserTablesOracleTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesOracleTaskOutputResponse) []ReportableExceptionResponse { return v.ValidationErrors }).(ReportableExceptionResponseArrayOutput)
}

type GetUserTablesOracleTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (GetUserTablesOracleTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserTablesOracleTaskOutputResponse)(nil)).Elem()
}

func (o GetUserTablesOracleTaskOutputResponseArrayOutput) ToGetUserTablesOracleTaskOutputResponseArrayOutput() GetUserTablesOracleTaskOutputResponseArrayOutput {
	return o
}

func (o GetUserTablesOracleTaskOutputResponseArrayOutput) ToGetUserTablesOracleTaskOutputResponseArrayOutputWithContext(ctx context.Context) GetUserTablesOracleTaskOutputResponseArrayOutput {
	return o
}

func (o GetUserTablesOracleTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) GetUserTablesOracleTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserTablesOracleTaskOutputResponse {
		return vs[0].([]GetUserTablesOracleTaskOutputResponse)[vs[1].(int)]
	}).(GetUserTablesOracleTaskOutputResponseOutput)
}

type GetUserTablesOracleTaskProperties struct {
	ClientData map[string]string             `pulumi:"clientData"`
	Input      *GetUserTablesOracleTaskInput `pulumi:"input"`
	TaskType   string                        `pulumi:"taskType"`
}





type GetUserTablesOracleTaskPropertiesInput interface {
	pulumi.Input

	ToGetUserTablesOracleTaskPropertiesOutput() GetUserTablesOracleTaskPropertiesOutput
	ToGetUserTablesOracleTaskPropertiesOutputWithContext(context.Context) GetUserTablesOracleTaskPropertiesOutput
}

type GetUserTablesOracleTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                `pulumi:"clientData"`
	Input      GetUserTablesOracleTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                   `pulumi:"taskType"`
}

func (GetUserTablesOracleTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesOracleTaskProperties)(nil)).Elem()
}

func (i GetUserTablesOracleTaskPropertiesArgs) ToGetUserTablesOracleTaskPropertiesOutput() GetUserTablesOracleTaskPropertiesOutput {
	return i.ToGetUserTablesOracleTaskPropertiesOutputWithContext(context.Background())
}

func (i GetUserTablesOracleTaskPropertiesArgs) ToGetUserTablesOracleTaskPropertiesOutputWithContext(ctx context.Context) GetUserTablesOracleTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesOracleTaskPropertiesOutput)
}

type GetUserTablesOracleTaskPropertiesOutput struct{ *pulumi.OutputState }

func (GetUserTablesOracleTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesOracleTaskProperties)(nil)).Elem()
}

func (o GetUserTablesOracleTaskPropertiesOutput) ToGetUserTablesOracleTaskPropertiesOutput() GetUserTablesOracleTaskPropertiesOutput {
	return o
}

func (o GetUserTablesOracleTaskPropertiesOutput) ToGetUserTablesOracleTaskPropertiesOutputWithContext(ctx context.Context) GetUserTablesOracleTaskPropertiesOutput {
	return o
}

func (o GetUserTablesOracleTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUserTablesOracleTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o GetUserTablesOracleTaskPropertiesOutput) Input() GetUserTablesOracleTaskInputPtrOutput {
	return o.ApplyT(func(v GetUserTablesOracleTaskProperties) *GetUserTablesOracleTaskInput { return v.Input }).(GetUserTablesOracleTaskInputPtrOutput)
}

func (o GetUserTablesOracleTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesOracleTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type GetUserTablesOracleTaskPropertiesResponse struct {
	ClientData map[string]string                       `pulumi:"clientData"`
	Commands   []interface{}                           `pulumi:"commands"`
	Errors     []ODataErrorResponse                    `pulumi:"errors"`
	Input      *GetUserTablesOracleTaskInputResponse   `pulumi:"input"`
	Output     []GetUserTablesOracleTaskOutputResponse `pulumi:"output"`
	State      string                                  `pulumi:"state"`
	TaskType   string                                  `pulumi:"taskType"`
}





type GetUserTablesOracleTaskPropertiesResponseInput interface {
	pulumi.Input

	ToGetUserTablesOracleTaskPropertiesResponseOutput() GetUserTablesOracleTaskPropertiesResponseOutput
	ToGetUserTablesOracleTaskPropertiesResponseOutputWithContext(context.Context) GetUserTablesOracleTaskPropertiesResponseOutput
}

type GetUserTablesOracleTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                           `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                               `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                    `pulumi:"errors"`
	Input      GetUserTablesOracleTaskInputResponsePtrInput    `pulumi:"input"`
	Output     GetUserTablesOracleTaskOutputResponseArrayInput `pulumi:"output"`
	State      pulumi.StringInput                              `pulumi:"state"`
	TaskType   pulumi.StringInput                              `pulumi:"taskType"`
}

func (GetUserTablesOracleTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesOracleTaskPropertiesResponse)(nil)).Elem()
}

func (i GetUserTablesOracleTaskPropertiesResponseArgs) ToGetUserTablesOracleTaskPropertiesResponseOutput() GetUserTablesOracleTaskPropertiesResponseOutput {
	return i.ToGetUserTablesOracleTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i GetUserTablesOracleTaskPropertiesResponseArgs) ToGetUserTablesOracleTaskPropertiesResponseOutputWithContext(ctx context.Context) GetUserTablesOracleTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesOracleTaskPropertiesResponseOutput)
}

type GetUserTablesOracleTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesOracleTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesOracleTaskPropertiesResponse)(nil)).Elem()
}

func (o GetUserTablesOracleTaskPropertiesResponseOutput) ToGetUserTablesOracleTaskPropertiesResponseOutput() GetUserTablesOracleTaskPropertiesResponseOutput {
	return o
}

func (o GetUserTablesOracleTaskPropertiesResponseOutput) ToGetUserTablesOracleTaskPropertiesResponseOutputWithContext(ctx context.Context) GetUserTablesOracleTaskPropertiesResponseOutput {
	return o
}

func (o GetUserTablesOracleTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUserTablesOracleTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o GetUserTablesOracleTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetUserTablesOracleTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o GetUserTablesOracleTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesOracleTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o GetUserTablesOracleTaskPropertiesResponseOutput) Input() GetUserTablesOracleTaskInputResponsePtrOutput {
	return o.ApplyT(func(v GetUserTablesOracleTaskPropertiesResponse) *GetUserTablesOracleTaskInputResponse {
		return v.Input
	}).(GetUserTablesOracleTaskInputResponsePtrOutput)
}

func (o GetUserTablesOracleTaskPropertiesResponseOutput) Output() GetUserTablesOracleTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesOracleTaskPropertiesResponse) []GetUserTablesOracleTaskOutputResponse {
		return v.Output
	}).(GetUserTablesOracleTaskOutputResponseArrayOutput)
}

func (o GetUserTablesOracleTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesOracleTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o GetUserTablesOracleTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesOracleTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type GetUserTablesPostgreSqlTaskInput struct {
	ConnectionInfo    PostgreSqlConnectionInfo `pulumi:"connectionInfo"`
	SelectedDatabases []string                 `pulumi:"selectedDatabases"`
}





type GetUserTablesPostgreSqlTaskInputInput interface {
	pulumi.Input

	ToGetUserTablesPostgreSqlTaskInputOutput() GetUserTablesPostgreSqlTaskInputOutput
	ToGetUserTablesPostgreSqlTaskInputOutputWithContext(context.Context) GetUserTablesPostgreSqlTaskInputOutput
}

type GetUserTablesPostgreSqlTaskInputArgs struct {
	ConnectionInfo    PostgreSqlConnectionInfoInput `pulumi:"connectionInfo"`
	SelectedDatabases pulumi.StringArrayInput       `pulumi:"selectedDatabases"`
}

func (GetUserTablesPostgreSqlTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesPostgreSqlTaskInput)(nil)).Elem()
}

func (i GetUserTablesPostgreSqlTaskInputArgs) ToGetUserTablesPostgreSqlTaskInputOutput() GetUserTablesPostgreSqlTaskInputOutput {
	return i.ToGetUserTablesPostgreSqlTaskInputOutputWithContext(context.Background())
}

func (i GetUserTablesPostgreSqlTaskInputArgs) ToGetUserTablesPostgreSqlTaskInputOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesPostgreSqlTaskInputOutput)
}

func (i GetUserTablesPostgreSqlTaskInputArgs) ToGetUserTablesPostgreSqlTaskInputPtrOutput() GetUserTablesPostgreSqlTaskInputPtrOutput {
	return i.ToGetUserTablesPostgreSqlTaskInputPtrOutputWithContext(context.Background())
}

func (i GetUserTablesPostgreSqlTaskInputArgs) ToGetUserTablesPostgreSqlTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesPostgreSqlTaskInputOutput).ToGetUserTablesPostgreSqlTaskInputPtrOutputWithContext(ctx)
}









type GetUserTablesPostgreSqlTaskInputPtrInput interface {
	pulumi.Input

	ToGetUserTablesPostgreSqlTaskInputPtrOutput() GetUserTablesPostgreSqlTaskInputPtrOutput
	ToGetUserTablesPostgreSqlTaskInputPtrOutputWithContext(context.Context) GetUserTablesPostgreSqlTaskInputPtrOutput
}

type getUserTablesPostgreSqlTaskInputPtrType GetUserTablesPostgreSqlTaskInputArgs

func GetUserTablesPostgreSqlTaskInputPtr(v *GetUserTablesPostgreSqlTaskInputArgs) GetUserTablesPostgreSqlTaskInputPtrInput {
	return (*getUserTablesPostgreSqlTaskInputPtrType)(v)
}

func (*getUserTablesPostgreSqlTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesPostgreSqlTaskInput)(nil)).Elem()
}

func (i *getUserTablesPostgreSqlTaskInputPtrType) ToGetUserTablesPostgreSqlTaskInputPtrOutput() GetUserTablesPostgreSqlTaskInputPtrOutput {
	return i.ToGetUserTablesPostgreSqlTaskInputPtrOutputWithContext(context.Background())
}

func (i *getUserTablesPostgreSqlTaskInputPtrType) ToGetUserTablesPostgreSqlTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesPostgreSqlTaskInputPtrOutput)
}

type GetUserTablesPostgreSqlTaskInputOutput struct{ *pulumi.OutputState }

func (GetUserTablesPostgreSqlTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesPostgreSqlTaskInput)(nil)).Elem()
}

func (o GetUserTablesPostgreSqlTaskInputOutput) ToGetUserTablesPostgreSqlTaskInputOutput() GetUserTablesPostgreSqlTaskInputOutput {
	return o
}

func (o GetUserTablesPostgreSqlTaskInputOutput) ToGetUserTablesPostgreSqlTaskInputOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskInputOutput {
	return o
}

func (o GetUserTablesPostgreSqlTaskInputOutput) ToGetUserTablesPostgreSqlTaskInputPtrOutput() GetUserTablesPostgreSqlTaskInputPtrOutput {
	return o.ToGetUserTablesPostgreSqlTaskInputPtrOutputWithContext(context.Background())
}

func (o GetUserTablesPostgreSqlTaskInputOutput) ToGetUserTablesPostgreSqlTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetUserTablesPostgreSqlTaskInput) *GetUserTablesPostgreSqlTaskInput {
		return &v
	}).(GetUserTablesPostgreSqlTaskInputPtrOutput)
}

func (o GetUserTablesPostgreSqlTaskInputOutput) ConnectionInfo() PostgreSqlConnectionInfoOutput {
	return o.ApplyT(func(v GetUserTablesPostgreSqlTaskInput) PostgreSqlConnectionInfo { return v.ConnectionInfo }).(PostgreSqlConnectionInfoOutput)
}

func (o GetUserTablesPostgreSqlTaskInputOutput) SelectedDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesPostgreSqlTaskInput) []string { return v.SelectedDatabases }).(pulumi.StringArrayOutput)
}

type GetUserTablesPostgreSqlTaskInputPtrOutput struct{ *pulumi.OutputState }

func (GetUserTablesPostgreSqlTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesPostgreSqlTaskInput)(nil)).Elem()
}

func (o GetUserTablesPostgreSqlTaskInputPtrOutput) ToGetUserTablesPostgreSqlTaskInputPtrOutput() GetUserTablesPostgreSqlTaskInputPtrOutput {
	return o
}

func (o GetUserTablesPostgreSqlTaskInputPtrOutput) ToGetUserTablesPostgreSqlTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskInputPtrOutput {
	return o
}

func (o GetUserTablesPostgreSqlTaskInputPtrOutput) Elem() GetUserTablesPostgreSqlTaskInputOutput {
	return o.ApplyT(func(v *GetUserTablesPostgreSqlTaskInput) GetUserTablesPostgreSqlTaskInput {
		if v != nil {
			return *v
		}
		var ret GetUserTablesPostgreSqlTaskInput
		return ret
	}).(GetUserTablesPostgreSqlTaskInputOutput)
}

func (o GetUserTablesPostgreSqlTaskInputPtrOutput) ConnectionInfo() PostgreSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *GetUserTablesPostgreSqlTaskInput) *PostgreSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.ConnectionInfo
	}).(PostgreSqlConnectionInfoPtrOutput)
}

func (o GetUserTablesPostgreSqlTaskInputPtrOutput) SelectedDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesPostgreSqlTaskInput) []string {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(pulumi.StringArrayOutput)
}

type GetUserTablesPostgreSqlTaskInputResponse struct {
	ConnectionInfo    PostgreSqlConnectionInfoResponse `pulumi:"connectionInfo"`
	SelectedDatabases []string                         `pulumi:"selectedDatabases"`
}





type GetUserTablesPostgreSqlTaskInputResponseInput interface {
	pulumi.Input

	ToGetUserTablesPostgreSqlTaskInputResponseOutput() GetUserTablesPostgreSqlTaskInputResponseOutput
	ToGetUserTablesPostgreSqlTaskInputResponseOutputWithContext(context.Context) GetUserTablesPostgreSqlTaskInputResponseOutput
}

type GetUserTablesPostgreSqlTaskInputResponseArgs struct {
	ConnectionInfo    PostgreSqlConnectionInfoResponseInput `pulumi:"connectionInfo"`
	SelectedDatabases pulumi.StringArrayInput               `pulumi:"selectedDatabases"`
}

func (GetUserTablesPostgreSqlTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesPostgreSqlTaskInputResponse)(nil)).Elem()
}

func (i GetUserTablesPostgreSqlTaskInputResponseArgs) ToGetUserTablesPostgreSqlTaskInputResponseOutput() GetUserTablesPostgreSqlTaskInputResponseOutput {
	return i.ToGetUserTablesPostgreSqlTaskInputResponseOutputWithContext(context.Background())
}

func (i GetUserTablesPostgreSqlTaskInputResponseArgs) ToGetUserTablesPostgreSqlTaskInputResponseOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesPostgreSqlTaskInputResponseOutput)
}

func (i GetUserTablesPostgreSqlTaskInputResponseArgs) ToGetUserTablesPostgreSqlTaskInputResponsePtrOutput() GetUserTablesPostgreSqlTaskInputResponsePtrOutput {
	return i.ToGetUserTablesPostgreSqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i GetUserTablesPostgreSqlTaskInputResponseArgs) ToGetUserTablesPostgreSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesPostgreSqlTaskInputResponseOutput).ToGetUserTablesPostgreSqlTaskInputResponsePtrOutputWithContext(ctx)
}









type GetUserTablesPostgreSqlTaskInputResponsePtrInput interface {
	pulumi.Input

	ToGetUserTablesPostgreSqlTaskInputResponsePtrOutput() GetUserTablesPostgreSqlTaskInputResponsePtrOutput
	ToGetUserTablesPostgreSqlTaskInputResponsePtrOutputWithContext(context.Context) GetUserTablesPostgreSqlTaskInputResponsePtrOutput
}

type getUserTablesPostgreSqlTaskInputResponsePtrType GetUserTablesPostgreSqlTaskInputResponseArgs

func GetUserTablesPostgreSqlTaskInputResponsePtr(v *GetUserTablesPostgreSqlTaskInputResponseArgs) GetUserTablesPostgreSqlTaskInputResponsePtrInput {
	return (*getUserTablesPostgreSqlTaskInputResponsePtrType)(v)
}

func (*getUserTablesPostgreSqlTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesPostgreSqlTaskInputResponse)(nil)).Elem()
}

func (i *getUserTablesPostgreSqlTaskInputResponsePtrType) ToGetUserTablesPostgreSqlTaskInputResponsePtrOutput() GetUserTablesPostgreSqlTaskInputResponsePtrOutput {
	return i.ToGetUserTablesPostgreSqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *getUserTablesPostgreSqlTaskInputResponsePtrType) ToGetUserTablesPostgreSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesPostgreSqlTaskInputResponsePtrOutput)
}

type GetUserTablesPostgreSqlTaskInputResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesPostgreSqlTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesPostgreSqlTaskInputResponse)(nil)).Elem()
}

func (o GetUserTablesPostgreSqlTaskInputResponseOutput) ToGetUserTablesPostgreSqlTaskInputResponseOutput() GetUserTablesPostgreSqlTaskInputResponseOutput {
	return o
}

func (o GetUserTablesPostgreSqlTaskInputResponseOutput) ToGetUserTablesPostgreSqlTaskInputResponseOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskInputResponseOutput {
	return o
}

func (o GetUserTablesPostgreSqlTaskInputResponseOutput) ToGetUserTablesPostgreSqlTaskInputResponsePtrOutput() GetUserTablesPostgreSqlTaskInputResponsePtrOutput {
	return o.ToGetUserTablesPostgreSqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o GetUserTablesPostgreSqlTaskInputResponseOutput) ToGetUserTablesPostgreSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetUserTablesPostgreSqlTaskInputResponse) *GetUserTablesPostgreSqlTaskInputResponse {
		return &v
	}).(GetUserTablesPostgreSqlTaskInputResponsePtrOutput)
}

func (o GetUserTablesPostgreSqlTaskInputResponseOutput) ConnectionInfo() PostgreSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v GetUserTablesPostgreSqlTaskInputResponse) PostgreSqlConnectionInfoResponse {
		return v.ConnectionInfo
	}).(PostgreSqlConnectionInfoResponseOutput)
}

func (o GetUserTablesPostgreSqlTaskInputResponseOutput) SelectedDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesPostgreSqlTaskInputResponse) []string { return v.SelectedDatabases }).(pulumi.StringArrayOutput)
}

type GetUserTablesPostgreSqlTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (GetUserTablesPostgreSqlTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesPostgreSqlTaskInputResponse)(nil)).Elem()
}

func (o GetUserTablesPostgreSqlTaskInputResponsePtrOutput) ToGetUserTablesPostgreSqlTaskInputResponsePtrOutput() GetUserTablesPostgreSqlTaskInputResponsePtrOutput {
	return o
}

func (o GetUserTablesPostgreSqlTaskInputResponsePtrOutput) ToGetUserTablesPostgreSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskInputResponsePtrOutput {
	return o
}

func (o GetUserTablesPostgreSqlTaskInputResponsePtrOutput) Elem() GetUserTablesPostgreSqlTaskInputResponseOutput {
	return o.ApplyT(func(v *GetUserTablesPostgreSqlTaskInputResponse) GetUserTablesPostgreSqlTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret GetUserTablesPostgreSqlTaskInputResponse
		return ret
	}).(GetUserTablesPostgreSqlTaskInputResponseOutput)
}

func (o GetUserTablesPostgreSqlTaskInputResponsePtrOutput) ConnectionInfo() PostgreSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *GetUserTablesPostgreSqlTaskInputResponse) *PostgreSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.ConnectionInfo
	}).(PostgreSqlConnectionInfoResponsePtrOutput)
}

func (o GetUserTablesPostgreSqlTaskInputResponsePtrOutput) SelectedDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesPostgreSqlTaskInputResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(pulumi.StringArrayOutput)
}

type GetUserTablesPostgreSqlTaskOutputResponse struct {
	DatabaseName     string                        `pulumi:"databaseName"`
	Tables           []DatabaseTableResponse       `pulumi:"tables"`
	ValidationErrors []ReportableExceptionResponse `pulumi:"validationErrors"`
}





type GetUserTablesPostgreSqlTaskOutputResponseInput interface {
	pulumi.Input

	ToGetUserTablesPostgreSqlTaskOutputResponseOutput() GetUserTablesPostgreSqlTaskOutputResponseOutput
	ToGetUserTablesPostgreSqlTaskOutputResponseOutputWithContext(context.Context) GetUserTablesPostgreSqlTaskOutputResponseOutput
}

type GetUserTablesPostgreSqlTaskOutputResponseArgs struct {
	DatabaseName     pulumi.StringInput                    `pulumi:"databaseName"`
	Tables           DatabaseTableResponseArrayInput       `pulumi:"tables"`
	ValidationErrors ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (GetUserTablesPostgreSqlTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesPostgreSqlTaskOutputResponse)(nil)).Elem()
}

func (i GetUserTablesPostgreSqlTaskOutputResponseArgs) ToGetUserTablesPostgreSqlTaskOutputResponseOutput() GetUserTablesPostgreSqlTaskOutputResponseOutput {
	return i.ToGetUserTablesPostgreSqlTaskOutputResponseOutputWithContext(context.Background())
}

func (i GetUserTablesPostgreSqlTaskOutputResponseArgs) ToGetUserTablesPostgreSqlTaskOutputResponseOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesPostgreSqlTaskOutputResponseOutput)
}





type GetUserTablesPostgreSqlTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToGetUserTablesPostgreSqlTaskOutputResponseArrayOutput() GetUserTablesPostgreSqlTaskOutputResponseArrayOutput
	ToGetUserTablesPostgreSqlTaskOutputResponseArrayOutputWithContext(context.Context) GetUserTablesPostgreSqlTaskOutputResponseArrayOutput
}

type GetUserTablesPostgreSqlTaskOutputResponseArray []GetUserTablesPostgreSqlTaskOutputResponseInput

func (GetUserTablesPostgreSqlTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserTablesPostgreSqlTaskOutputResponse)(nil)).Elem()
}

func (i GetUserTablesPostgreSqlTaskOutputResponseArray) ToGetUserTablesPostgreSqlTaskOutputResponseArrayOutput() GetUserTablesPostgreSqlTaskOutputResponseArrayOutput {
	return i.ToGetUserTablesPostgreSqlTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i GetUserTablesPostgreSqlTaskOutputResponseArray) ToGetUserTablesPostgreSqlTaskOutputResponseArrayOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesPostgreSqlTaskOutputResponseArrayOutput)
}

type GetUserTablesPostgreSqlTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesPostgreSqlTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesPostgreSqlTaskOutputResponse)(nil)).Elem()
}

func (o GetUserTablesPostgreSqlTaskOutputResponseOutput) ToGetUserTablesPostgreSqlTaskOutputResponseOutput() GetUserTablesPostgreSqlTaskOutputResponseOutput {
	return o
}

func (o GetUserTablesPostgreSqlTaskOutputResponseOutput) ToGetUserTablesPostgreSqlTaskOutputResponseOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskOutputResponseOutput {
	return o
}

func (o GetUserTablesPostgreSqlTaskOutputResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesPostgreSqlTaskOutputResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o GetUserTablesPostgreSqlTaskOutputResponseOutput) Tables() DatabaseTableResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesPostgreSqlTaskOutputResponse) []DatabaseTableResponse { return v.Tables }).(DatabaseTableResponseArrayOutput)
}

func (o GetUserTablesPostgreSqlTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesPostgreSqlTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type GetUserTablesPostgreSqlTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (GetUserTablesPostgreSqlTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserTablesPostgreSqlTaskOutputResponse)(nil)).Elem()
}

func (o GetUserTablesPostgreSqlTaskOutputResponseArrayOutput) ToGetUserTablesPostgreSqlTaskOutputResponseArrayOutput() GetUserTablesPostgreSqlTaskOutputResponseArrayOutput {
	return o
}

func (o GetUserTablesPostgreSqlTaskOutputResponseArrayOutput) ToGetUserTablesPostgreSqlTaskOutputResponseArrayOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskOutputResponseArrayOutput {
	return o
}

func (o GetUserTablesPostgreSqlTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) GetUserTablesPostgreSqlTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserTablesPostgreSqlTaskOutputResponse {
		return vs[0].([]GetUserTablesPostgreSqlTaskOutputResponse)[vs[1].(int)]
	}).(GetUserTablesPostgreSqlTaskOutputResponseOutput)
}

type GetUserTablesPostgreSqlTaskProperties struct {
	ClientData map[string]string                 `pulumi:"clientData"`
	Input      *GetUserTablesPostgreSqlTaskInput `pulumi:"input"`
	TaskType   string                            `pulumi:"taskType"`
}





type GetUserTablesPostgreSqlTaskPropertiesInput interface {
	pulumi.Input

	ToGetUserTablesPostgreSqlTaskPropertiesOutput() GetUserTablesPostgreSqlTaskPropertiesOutput
	ToGetUserTablesPostgreSqlTaskPropertiesOutputWithContext(context.Context) GetUserTablesPostgreSqlTaskPropertiesOutput
}

type GetUserTablesPostgreSqlTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                    `pulumi:"clientData"`
	Input      GetUserTablesPostgreSqlTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                       `pulumi:"taskType"`
}

func (GetUserTablesPostgreSqlTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesPostgreSqlTaskProperties)(nil)).Elem()
}

func (i GetUserTablesPostgreSqlTaskPropertiesArgs) ToGetUserTablesPostgreSqlTaskPropertiesOutput() GetUserTablesPostgreSqlTaskPropertiesOutput {
	return i.ToGetUserTablesPostgreSqlTaskPropertiesOutputWithContext(context.Background())
}

func (i GetUserTablesPostgreSqlTaskPropertiesArgs) ToGetUserTablesPostgreSqlTaskPropertiesOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesPostgreSqlTaskPropertiesOutput)
}

type GetUserTablesPostgreSqlTaskPropertiesOutput struct{ *pulumi.OutputState }

func (GetUserTablesPostgreSqlTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesPostgreSqlTaskProperties)(nil)).Elem()
}

func (o GetUserTablesPostgreSqlTaskPropertiesOutput) ToGetUserTablesPostgreSqlTaskPropertiesOutput() GetUserTablesPostgreSqlTaskPropertiesOutput {
	return o
}

func (o GetUserTablesPostgreSqlTaskPropertiesOutput) ToGetUserTablesPostgreSqlTaskPropertiesOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskPropertiesOutput {
	return o
}

func (o GetUserTablesPostgreSqlTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUserTablesPostgreSqlTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o GetUserTablesPostgreSqlTaskPropertiesOutput) Input() GetUserTablesPostgreSqlTaskInputPtrOutput {
	return o.ApplyT(func(v GetUserTablesPostgreSqlTaskProperties) *GetUserTablesPostgreSqlTaskInput { return v.Input }).(GetUserTablesPostgreSqlTaskInputPtrOutput)
}

func (o GetUserTablesPostgreSqlTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesPostgreSqlTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type GetUserTablesPostgreSqlTaskPropertiesResponse struct {
	ClientData map[string]string                           `pulumi:"clientData"`
	Commands   []interface{}                               `pulumi:"commands"`
	Errors     []ODataErrorResponse                        `pulumi:"errors"`
	Input      *GetUserTablesPostgreSqlTaskInputResponse   `pulumi:"input"`
	Output     []GetUserTablesPostgreSqlTaskOutputResponse `pulumi:"output"`
	State      string                                      `pulumi:"state"`
	TaskType   string                                      `pulumi:"taskType"`
}





type GetUserTablesPostgreSqlTaskPropertiesResponseInput interface {
	pulumi.Input

	ToGetUserTablesPostgreSqlTaskPropertiesResponseOutput() GetUserTablesPostgreSqlTaskPropertiesResponseOutput
	ToGetUserTablesPostgreSqlTaskPropertiesResponseOutputWithContext(context.Context) GetUserTablesPostgreSqlTaskPropertiesResponseOutput
}

type GetUserTablesPostgreSqlTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                               `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                   `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                        `pulumi:"errors"`
	Input      GetUserTablesPostgreSqlTaskInputResponsePtrInput    `pulumi:"input"`
	Output     GetUserTablesPostgreSqlTaskOutputResponseArrayInput `pulumi:"output"`
	State      pulumi.StringInput                                  `pulumi:"state"`
	TaskType   pulumi.StringInput                                  `pulumi:"taskType"`
}

func (GetUserTablesPostgreSqlTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesPostgreSqlTaskPropertiesResponse)(nil)).Elem()
}

func (i GetUserTablesPostgreSqlTaskPropertiesResponseArgs) ToGetUserTablesPostgreSqlTaskPropertiesResponseOutput() GetUserTablesPostgreSqlTaskPropertiesResponseOutput {
	return i.ToGetUserTablesPostgreSqlTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i GetUserTablesPostgreSqlTaskPropertiesResponseArgs) ToGetUserTablesPostgreSqlTaskPropertiesResponseOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesPostgreSqlTaskPropertiesResponseOutput)
}

type GetUserTablesPostgreSqlTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesPostgreSqlTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesPostgreSqlTaskPropertiesResponse)(nil)).Elem()
}

func (o GetUserTablesPostgreSqlTaskPropertiesResponseOutput) ToGetUserTablesPostgreSqlTaskPropertiesResponseOutput() GetUserTablesPostgreSqlTaskPropertiesResponseOutput {
	return o
}

func (o GetUserTablesPostgreSqlTaskPropertiesResponseOutput) ToGetUserTablesPostgreSqlTaskPropertiesResponseOutputWithContext(ctx context.Context) GetUserTablesPostgreSqlTaskPropertiesResponseOutput {
	return o
}

func (o GetUserTablesPostgreSqlTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUserTablesPostgreSqlTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o GetUserTablesPostgreSqlTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetUserTablesPostgreSqlTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o GetUserTablesPostgreSqlTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesPostgreSqlTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o GetUserTablesPostgreSqlTaskPropertiesResponseOutput) Input() GetUserTablesPostgreSqlTaskInputResponsePtrOutput {
	return o.ApplyT(func(v GetUserTablesPostgreSqlTaskPropertiesResponse) *GetUserTablesPostgreSqlTaskInputResponse {
		return v.Input
	}).(GetUserTablesPostgreSqlTaskInputResponsePtrOutput)
}

func (o GetUserTablesPostgreSqlTaskPropertiesResponseOutput) Output() GetUserTablesPostgreSqlTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesPostgreSqlTaskPropertiesResponse) []GetUserTablesPostgreSqlTaskOutputResponse {
		return v.Output
	}).(GetUserTablesPostgreSqlTaskOutputResponseArrayOutput)
}

func (o GetUserTablesPostgreSqlTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesPostgreSqlTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o GetUserTablesPostgreSqlTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesPostgreSqlTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type GetUserTablesSqlSyncTaskInput struct {
	SelectedSourceDatabases []string          `pulumi:"selectedSourceDatabases"`
	SelectedTargetDatabases []string          `pulumi:"selectedTargetDatabases"`
	SourceConnectionInfo    SqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo    SqlConnectionInfo `pulumi:"targetConnectionInfo"`
}





type GetUserTablesSqlSyncTaskInputInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskInputOutput() GetUserTablesSqlSyncTaskInputOutput
	ToGetUserTablesSqlSyncTaskInputOutputWithContext(context.Context) GetUserTablesSqlSyncTaskInputOutput
}

type GetUserTablesSqlSyncTaskInputArgs struct {
	SelectedSourceDatabases pulumi.StringArrayInput `pulumi:"selectedSourceDatabases"`
	SelectedTargetDatabases pulumi.StringArrayInput `pulumi:"selectedTargetDatabases"`
	SourceConnectionInfo    SqlConnectionInfoInput  `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo    SqlConnectionInfoInput  `pulumi:"targetConnectionInfo"`
}

func (GetUserTablesSqlSyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskInput)(nil)).Elem()
}

func (i GetUserTablesSqlSyncTaskInputArgs) ToGetUserTablesSqlSyncTaskInputOutput() GetUserTablesSqlSyncTaskInputOutput {
	return i.ToGetUserTablesSqlSyncTaskInputOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskInputArgs) ToGetUserTablesSqlSyncTaskInputOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskInputOutput)
}

func (i GetUserTablesSqlSyncTaskInputArgs) ToGetUserTablesSqlSyncTaskInputPtrOutput() GetUserTablesSqlSyncTaskInputPtrOutput {
	return i.ToGetUserTablesSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskInputArgs) ToGetUserTablesSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskInputOutput).ToGetUserTablesSqlSyncTaskInputPtrOutputWithContext(ctx)
}









type GetUserTablesSqlSyncTaskInputPtrInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskInputPtrOutput() GetUserTablesSqlSyncTaskInputPtrOutput
	ToGetUserTablesSqlSyncTaskInputPtrOutputWithContext(context.Context) GetUserTablesSqlSyncTaskInputPtrOutput
}

type getUserTablesSqlSyncTaskInputPtrType GetUserTablesSqlSyncTaskInputArgs

func GetUserTablesSqlSyncTaskInputPtr(v *GetUserTablesSqlSyncTaskInputArgs) GetUserTablesSqlSyncTaskInputPtrInput {
	return (*getUserTablesSqlSyncTaskInputPtrType)(v)
}

func (*getUserTablesSqlSyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlSyncTaskInput)(nil)).Elem()
}

func (i *getUserTablesSqlSyncTaskInputPtrType) ToGetUserTablesSqlSyncTaskInputPtrOutput() GetUserTablesSqlSyncTaskInputPtrOutput {
	return i.ToGetUserTablesSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *getUserTablesSqlSyncTaskInputPtrType) ToGetUserTablesSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskInputPtrOutput)
}

type GetUserTablesSqlSyncTaskInputOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskInput)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskInputOutput) ToGetUserTablesSqlSyncTaskInputOutput() GetUserTablesSqlSyncTaskInputOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputOutput) ToGetUserTablesSqlSyncTaskInputOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputOutput) ToGetUserTablesSqlSyncTaskInputPtrOutput() GetUserTablesSqlSyncTaskInputPtrOutput {
	return o.ToGetUserTablesSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (o GetUserTablesSqlSyncTaskInputOutput) ToGetUserTablesSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetUserTablesSqlSyncTaskInput) *GetUserTablesSqlSyncTaskInput {
		return &v
	}).(GetUserTablesSqlSyncTaskInputPtrOutput)
}

func (o GetUserTablesSqlSyncTaskInputOutput) SelectedSourceDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInput) []string { return v.SelectedSourceDatabases }).(pulumi.StringArrayOutput)
}

func (o GetUserTablesSqlSyncTaskInputOutput) SelectedTargetDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInput) []string { return v.SelectedTargetDatabases }).(pulumi.StringArrayOutput)
}

func (o GetUserTablesSqlSyncTaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

func (o GetUserTablesSqlSyncTaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

type GetUserTablesSqlSyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlSyncTaskInput)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskInputPtrOutput) ToGetUserTablesSqlSyncTaskInputPtrOutput() GetUserTablesSqlSyncTaskInputPtrOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputPtrOutput) ToGetUserTablesSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputPtrOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputPtrOutput) Elem() GetUserTablesSqlSyncTaskInputOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInput) GetUserTablesSqlSyncTaskInput {
		if v != nil {
			return *v
		}
		var ret GetUserTablesSqlSyncTaskInput
		return ret
	}).(GetUserTablesSqlSyncTaskInputOutput)
}

func (o GetUserTablesSqlSyncTaskInputPtrOutput) SelectedSourceDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInput) []string {
		if v == nil {
			return nil
		}
		return v.SelectedSourceDatabases
	}).(pulumi.StringArrayOutput)
}

func (o GetUserTablesSqlSyncTaskInputPtrOutput) SelectedTargetDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInput) []string {
		if v == nil {
			return nil
		}
		return v.SelectedTargetDatabases
	}).(pulumi.StringArrayOutput)
}

func (o GetUserTablesSqlSyncTaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

func (o GetUserTablesSqlSyncTaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

type GetUserTablesSqlSyncTaskInputResponse struct {
	SelectedSourceDatabases []string                  `pulumi:"selectedSourceDatabases"`
	SelectedTargetDatabases []string                  `pulumi:"selectedTargetDatabases"`
	SourceConnectionInfo    SqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo    SqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}





type GetUserTablesSqlSyncTaskInputResponseInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskInputResponseOutput() GetUserTablesSqlSyncTaskInputResponseOutput
	ToGetUserTablesSqlSyncTaskInputResponseOutputWithContext(context.Context) GetUserTablesSqlSyncTaskInputResponseOutput
}

type GetUserTablesSqlSyncTaskInputResponseArgs struct {
	SelectedSourceDatabases pulumi.StringArrayInput        `pulumi:"selectedSourceDatabases"`
	SelectedTargetDatabases pulumi.StringArrayInput        `pulumi:"selectedTargetDatabases"`
	SourceConnectionInfo    SqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo    SqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (GetUserTablesSqlSyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i GetUserTablesSqlSyncTaskInputResponseArgs) ToGetUserTablesSqlSyncTaskInputResponseOutput() GetUserTablesSqlSyncTaskInputResponseOutput {
	return i.ToGetUserTablesSqlSyncTaskInputResponseOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskInputResponseArgs) ToGetUserTablesSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskInputResponseOutput)
}

func (i GetUserTablesSqlSyncTaskInputResponseArgs) ToGetUserTablesSqlSyncTaskInputResponsePtrOutput() GetUserTablesSqlSyncTaskInputResponsePtrOutput {
	return i.ToGetUserTablesSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskInputResponseArgs) ToGetUserTablesSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskInputResponseOutput).ToGetUserTablesSqlSyncTaskInputResponsePtrOutputWithContext(ctx)
}









type GetUserTablesSqlSyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskInputResponsePtrOutput() GetUserTablesSqlSyncTaskInputResponsePtrOutput
	ToGetUserTablesSqlSyncTaskInputResponsePtrOutputWithContext(context.Context) GetUserTablesSqlSyncTaskInputResponsePtrOutput
}

type getUserTablesSqlSyncTaskInputResponsePtrType GetUserTablesSqlSyncTaskInputResponseArgs

func GetUserTablesSqlSyncTaskInputResponsePtr(v *GetUserTablesSqlSyncTaskInputResponseArgs) GetUserTablesSqlSyncTaskInputResponsePtrInput {
	return (*getUserTablesSqlSyncTaskInputResponsePtrType)(v)
}

func (*getUserTablesSqlSyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i *getUserTablesSqlSyncTaskInputResponsePtrType) ToGetUserTablesSqlSyncTaskInputResponsePtrOutput() GetUserTablesSqlSyncTaskInputResponsePtrOutput {
	return i.ToGetUserTablesSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *getUserTablesSqlSyncTaskInputResponsePtrType) ToGetUserTablesSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskInputResponsePtrOutput)
}

type GetUserTablesSqlSyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskInputResponseOutput) ToGetUserTablesSqlSyncTaskInputResponseOutput() GetUserTablesSqlSyncTaskInputResponseOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputResponseOutput) ToGetUserTablesSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputResponseOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputResponseOutput) ToGetUserTablesSqlSyncTaskInputResponsePtrOutput() GetUserTablesSqlSyncTaskInputResponsePtrOutput {
	return o.ToGetUserTablesSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o GetUserTablesSqlSyncTaskInputResponseOutput) ToGetUserTablesSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetUserTablesSqlSyncTaskInputResponse) *GetUserTablesSqlSyncTaskInputResponse {
		return &v
	}).(GetUserTablesSqlSyncTaskInputResponsePtrOutput)
}

func (o GetUserTablesSqlSyncTaskInputResponseOutput) SelectedSourceDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInputResponse) []string { return v.SelectedSourceDatabases }).(pulumi.StringArrayOutput)
}

func (o GetUserTablesSqlSyncTaskInputResponseOutput) SelectedTargetDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInputResponse) []string { return v.SelectedTargetDatabases }).(pulumi.StringArrayOutput)
}

func (o GetUserTablesSqlSyncTaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInputResponse) SqlConnectionInfoResponse { return v.SourceConnectionInfo }).(SqlConnectionInfoResponseOutput)
}

func (o GetUserTablesSqlSyncTaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInputResponse) SqlConnectionInfoResponse { return v.TargetConnectionInfo }).(SqlConnectionInfoResponseOutput)
}

type GetUserTablesSqlSyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskInputResponsePtrOutput) ToGetUserTablesSqlSyncTaskInputResponsePtrOutput() GetUserTablesSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputResponsePtrOutput) ToGetUserTablesSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputResponsePtrOutput) Elem() GetUserTablesSqlSyncTaskInputResponseOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInputResponse) GetUserTablesSqlSyncTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret GetUserTablesSqlSyncTaskInputResponse
		return ret
	}).(GetUserTablesSqlSyncTaskInputResponseOutput)
}

func (o GetUserTablesSqlSyncTaskInputResponsePtrOutput) SelectedSourceDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInputResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedSourceDatabases
	}).(pulumi.StringArrayOutput)
}

func (o GetUserTablesSqlSyncTaskInputResponsePtrOutput) SelectedTargetDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInputResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedTargetDatabases
	}).(pulumi.StringArrayOutput)
}

func (o GetUserTablesSqlSyncTaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

func (o GetUserTablesSqlSyncTaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

type GetUserTablesSqlSyncTaskOutputResponse struct {
	DatabasesToSourceTables map[string][]DatabaseTableResponse `pulumi:"databasesToSourceTables"`
	DatabasesToTargetTables map[string][]DatabaseTableResponse `pulumi:"databasesToTargetTables"`
	TableValidationErrors   map[string][]string                `pulumi:"tableValidationErrors"`
	ValidationErrors        []ReportableExceptionResponse      `pulumi:"validationErrors"`
}





type GetUserTablesSqlSyncTaskOutputResponseInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskOutputResponseOutput() GetUserTablesSqlSyncTaskOutputResponseOutput
	ToGetUserTablesSqlSyncTaskOutputResponseOutputWithContext(context.Context) GetUserTablesSqlSyncTaskOutputResponseOutput
}

type GetUserTablesSqlSyncTaskOutputResponseArgs struct {
	DatabasesToSourceTables DatabaseTableResponseArrayMapInput    `pulumi:"databasesToSourceTables"`
	DatabasesToTargetTables DatabaseTableResponseArrayMapInput    `pulumi:"databasesToTargetTables"`
	TableValidationErrors   pulumi.StringArrayMapInput            `pulumi:"tableValidationErrors"`
	ValidationErrors        ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (GetUserTablesSqlSyncTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (i GetUserTablesSqlSyncTaskOutputResponseArgs) ToGetUserTablesSqlSyncTaskOutputResponseOutput() GetUserTablesSqlSyncTaskOutputResponseOutput {
	return i.ToGetUserTablesSqlSyncTaskOutputResponseOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskOutputResponseArgs) ToGetUserTablesSqlSyncTaskOutputResponseOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskOutputResponseOutput)
}





type GetUserTablesSqlSyncTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskOutputResponseArrayOutput() GetUserTablesSqlSyncTaskOutputResponseArrayOutput
	ToGetUserTablesSqlSyncTaskOutputResponseArrayOutputWithContext(context.Context) GetUserTablesSqlSyncTaskOutputResponseArrayOutput
}

type GetUserTablesSqlSyncTaskOutputResponseArray []GetUserTablesSqlSyncTaskOutputResponseInput

func (GetUserTablesSqlSyncTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserTablesSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (i GetUserTablesSqlSyncTaskOutputResponseArray) ToGetUserTablesSqlSyncTaskOutputResponseArrayOutput() GetUserTablesSqlSyncTaskOutputResponseArrayOutput {
	return i.ToGetUserTablesSqlSyncTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskOutputResponseArray) ToGetUserTablesSqlSyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskOutputResponseArrayOutput)
}

type GetUserTablesSqlSyncTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskOutputResponseOutput) ToGetUserTablesSqlSyncTaskOutputResponseOutput() GetUserTablesSqlSyncTaskOutputResponseOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskOutputResponseOutput) ToGetUserTablesSqlSyncTaskOutputResponseOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskOutputResponseOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskOutputResponseOutput) DatabasesToSourceTables() DatabaseTableResponseArrayMapOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskOutputResponse) map[string][]DatabaseTableResponse {
		return v.DatabasesToSourceTables
	}).(DatabaseTableResponseArrayMapOutput)
}

func (o GetUserTablesSqlSyncTaskOutputResponseOutput) DatabasesToTargetTables() DatabaseTableResponseArrayMapOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskOutputResponse) map[string][]DatabaseTableResponse {
		return v.DatabasesToTargetTables
	}).(DatabaseTableResponseArrayMapOutput)
}

func (o GetUserTablesSqlSyncTaskOutputResponseOutput) TableValidationErrors() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskOutputResponse) map[string][]string { return v.TableValidationErrors }).(pulumi.StringArrayMapOutput)
}

func (o GetUserTablesSqlSyncTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type GetUserTablesSqlSyncTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserTablesSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskOutputResponseArrayOutput) ToGetUserTablesSqlSyncTaskOutputResponseArrayOutput() GetUserTablesSqlSyncTaskOutputResponseArrayOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskOutputResponseArrayOutput) ToGetUserTablesSqlSyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskOutputResponseArrayOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) GetUserTablesSqlSyncTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserTablesSqlSyncTaskOutputResponse {
		return vs[0].([]GetUserTablesSqlSyncTaskOutputResponse)[vs[1].(int)]
	}).(GetUserTablesSqlSyncTaskOutputResponseOutput)
}

type GetUserTablesSqlSyncTaskProperties struct {
	ClientData map[string]string              `pulumi:"clientData"`
	Input      *GetUserTablesSqlSyncTaskInput `pulumi:"input"`
	TaskType   string                         `pulumi:"taskType"`
}





type GetUserTablesSqlSyncTaskPropertiesInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskPropertiesOutput() GetUserTablesSqlSyncTaskPropertiesOutput
	ToGetUserTablesSqlSyncTaskPropertiesOutputWithContext(context.Context) GetUserTablesSqlSyncTaskPropertiesOutput
}

type GetUserTablesSqlSyncTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                 `pulumi:"clientData"`
	Input      GetUserTablesSqlSyncTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                    `pulumi:"taskType"`
}

func (GetUserTablesSqlSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskProperties)(nil)).Elem()
}

func (i GetUserTablesSqlSyncTaskPropertiesArgs) ToGetUserTablesSqlSyncTaskPropertiesOutput() GetUserTablesSqlSyncTaskPropertiesOutput {
	return i.ToGetUserTablesSqlSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskPropertiesArgs) ToGetUserTablesSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskPropertiesOutput)
}

type GetUserTablesSqlSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskProperties)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskPropertiesOutput) ToGetUserTablesSqlSyncTaskPropertiesOutput() GetUserTablesSqlSyncTaskPropertiesOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskPropertiesOutput) ToGetUserTablesSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskPropertiesOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o GetUserTablesSqlSyncTaskPropertiesOutput) Input() GetUserTablesSqlSyncTaskInputPtrOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskProperties) *GetUserTablesSqlSyncTaskInput { return v.Input }).(GetUserTablesSqlSyncTaskInputPtrOutput)
}

func (o GetUserTablesSqlSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type GetUserTablesSqlSyncTaskPropertiesResponse struct {
	ClientData map[string]string                        `pulumi:"clientData"`
	Commands   []interface{}                            `pulumi:"commands"`
	Errors     []ODataErrorResponse                     `pulumi:"errors"`
	Input      *GetUserTablesSqlSyncTaskInputResponse   `pulumi:"input"`
	Output     []GetUserTablesSqlSyncTaskOutputResponse `pulumi:"output"`
	State      string                                   `pulumi:"state"`
	TaskType   string                                   `pulumi:"taskType"`
}





type GetUserTablesSqlSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskPropertiesResponseOutput() GetUserTablesSqlSyncTaskPropertiesResponseOutput
	ToGetUserTablesSqlSyncTaskPropertiesResponseOutputWithContext(context.Context) GetUserTablesSqlSyncTaskPropertiesResponseOutput
}

type GetUserTablesSqlSyncTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                            `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                     `pulumi:"errors"`
	Input      GetUserTablesSqlSyncTaskInputResponsePtrInput    `pulumi:"input"`
	Output     GetUserTablesSqlSyncTaskOutputResponseArrayInput `pulumi:"output"`
	State      pulumi.StringInput                               `pulumi:"state"`
	TaskType   pulumi.StringInput                               `pulumi:"taskType"`
}

func (GetUserTablesSqlSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i GetUserTablesSqlSyncTaskPropertiesResponseArgs) ToGetUserTablesSqlSyncTaskPropertiesResponseOutput() GetUserTablesSqlSyncTaskPropertiesResponseOutput {
	return i.ToGetUserTablesSqlSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskPropertiesResponseArgs) ToGetUserTablesSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskPropertiesResponseOutput)
}

type GetUserTablesSqlSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskPropertiesResponseOutput) ToGetUserTablesSqlSyncTaskPropertiesResponseOutput() GetUserTablesSqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskPropertiesResponseOutput) ToGetUserTablesSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o GetUserTablesSqlSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o GetUserTablesSqlSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o GetUserTablesSqlSyncTaskPropertiesResponseOutput) Input() GetUserTablesSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesResponse) *GetUserTablesSqlSyncTaskInputResponse {
		return v.Input
	}).(GetUserTablesSqlSyncTaskInputResponsePtrOutput)
}

func (o GetUserTablesSqlSyncTaskPropertiesResponseOutput) Output() GetUserTablesSqlSyncTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesResponse) []GetUserTablesSqlSyncTaskOutputResponse {
		return v.Output
	}).(GetUserTablesSqlSyncTaskOutputResponseArrayOutput)
}

func (o GetUserTablesSqlSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o GetUserTablesSqlSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type GetUserTablesSqlTaskInput struct {
	ConnectionInfo    SqlConnectionInfo `pulumi:"connectionInfo"`
	SelectedDatabases []string          `pulumi:"selectedDatabases"`
}





type GetUserTablesSqlTaskInputInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskInputOutput() GetUserTablesSqlTaskInputOutput
	ToGetUserTablesSqlTaskInputOutputWithContext(context.Context) GetUserTablesSqlTaskInputOutput
}

type GetUserTablesSqlTaskInputArgs struct {
	ConnectionInfo    SqlConnectionInfoInput  `pulumi:"connectionInfo"`
	SelectedDatabases pulumi.StringArrayInput `pulumi:"selectedDatabases"`
}

func (GetUserTablesSqlTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskInput)(nil)).Elem()
}

func (i GetUserTablesSqlTaskInputArgs) ToGetUserTablesSqlTaskInputOutput() GetUserTablesSqlTaskInputOutput {
	return i.ToGetUserTablesSqlTaskInputOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskInputArgs) ToGetUserTablesSqlTaskInputOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskInputOutput)
}

func (i GetUserTablesSqlTaskInputArgs) ToGetUserTablesSqlTaskInputPtrOutput() GetUserTablesSqlTaskInputPtrOutput {
	return i.ToGetUserTablesSqlTaskInputPtrOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskInputArgs) ToGetUserTablesSqlTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskInputOutput).ToGetUserTablesSqlTaskInputPtrOutputWithContext(ctx)
}









type GetUserTablesSqlTaskInputPtrInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskInputPtrOutput() GetUserTablesSqlTaskInputPtrOutput
	ToGetUserTablesSqlTaskInputPtrOutputWithContext(context.Context) GetUserTablesSqlTaskInputPtrOutput
}

type getUserTablesSqlTaskInputPtrType GetUserTablesSqlTaskInputArgs

func GetUserTablesSqlTaskInputPtr(v *GetUserTablesSqlTaskInputArgs) GetUserTablesSqlTaskInputPtrInput {
	return (*getUserTablesSqlTaskInputPtrType)(v)
}

func (*getUserTablesSqlTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlTaskInput)(nil)).Elem()
}

func (i *getUserTablesSqlTaskInputPtrType) ToGetUserTablesSqlTaskInputPtrOutput() GetUserTablesSqlTaskInputPtrOutput {
	return i.ToGetUserTablesSqlTaskInputPtrOutputWithContext(context.Background())
}

func (i *getUserTablesSqlTaskInputPtrType) ToGetUserTablesSqlTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskInputPtrOutput)
}

type GetUserTablesSqlTaskInputOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskInput)(nil)).Elem()
}

func (o GetUserTablesSqlTaskInputOutput) ToGetUserTablesSqlTaskInputOutput() GetUserTablesSqlTaskInputOutput {
	return o
}

func (o GetUserTablesSqlTaskInputOutput) ToGetUserTablesSqlTaskInputOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputOutput {
	return o
}

func (o GetUserTablesSqlTaskInputOutput) ToGetUserTablesSqlTaskInputPtrOutput() GetUserTablesSqlTaskInputPtrOutput {
	return o.ToGetUserTablesSqlTaskInputPtrOutputWithContext(context.Background())
}

func (o GetUserTablesSqlTaskInputOutput) ToGetUserTablesSqlTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetUserTablesSqlTaskInput) *GetUserTablesSqlTaskInput {
		return &v
	}).(GetUserTablesSqlTaskInputPtrOutput)
}

func (o GetUserTablesSqlTaskInputOutput) ConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskInput) SqlConnectionInfo { return v.ConnectionInfo }).(SqlConnectionInfoOutput)
}

func (o GetUserTablesSqlTaskInputOutput) SelectedDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskInput) []string { return v.SelectedDatabases }).(pulumi.StringArrayOutput)
}

type GetUserTablesSqlTaskInputPtrOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlTaskInput)(nil)).Elem()
}

func (o GetUserTablesSqlTaskInputPtrOutput) ToGetUserTablesSqlTaskInputPtrOutput() GetUserTablesSqlTaskInputPtrOutput {
	return o
}

func (o GetUserTablesSqlTaskInputPtrOutput) ToGetUserTablesSqlTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputPtrOutput {
	return o
}

func (o GetUserTablesSqlTaskInputPtrOutput) Elem() GetUserTablesSqlTaskInputOutput {
	return o.ApplyT(func(v *GetUserTablesSqlTaskInput) GetUserTablesSqlTaskInput {
		if v != nil {
			return *v
		}
		var ret GetUserTablesSqlTaskInput
		return ret
	}).(GetUserTablesSqlTaskInputOutput)
}

func (o GetUserTablesSqlTaskInputPtrOutput) ConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *GetUserTablesSqlTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.ConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

func (o GetUserTablesSqlTaskInputPtrOutput) SelectedDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesSqlTaskInput) []string {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(pulumi.StringArrayOutput)
}

type GetUserTablesSqlTaskInputResponse struct {
	ConnectionInfo    SqlConnectionInfoResponse `pulumi:"connectionInfo"`
	SelectedDatabases []string                  `pulumi:"selectedDatabases"`
}





type GetUserTablesSqlTaskInputResponseInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskInputResponseOutput() GetUserTablesSqlTaskInputResponseOutput
	ToGetUserTablesSqlTaskInputResponseOutputWithContext(context.Context) GetUserTablesSqlTaskInputResponseOutput
}

type GetUserTablesSqlTaskInputResponseArgs struct {
	ConnectionInfo    SqlConnectionInfoResponseInput `pulumi:"connectionInfo"`
	SelectedDatabases pulumi.StringArrayInput        `pulumi:"selectedDatabases"`
}

func (GetUserTablesSqlTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskInputResponse)(nil)).Elem()
}

func (i GetUserTablesSqlTaskInputResponseArgs) ToGetUserTablesSqlTaskInputResponseOutput() GetUserTablesSqlTaskInputResponseOutput {
	return i.ToGetUserTablesSqlTaskInputResponseOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskInputResponseArgs) ToGetUserTablesSqlTaskInputResponseOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskInputResponseOutput)
}

func (i GetUserTablesSqlTaskInputResponseArgs) ToGetUserTablesSqlTaskInputResponsePtrOutput() GetUserTablesSqlTaskInputResponsePtrOutput {
	return i.ToGetUserTablesSqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskInputResponseArgs) ToGetUserTablesSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskInputResponseOutput).ToGetUserTablesSqlTaskInputResponsePtrOutputWithContext(ctx)
}









type GetUserTablesSqlTaskInputResponsePtrInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskInputResponsePtrOutput() GetUserTablesSqlTaskInputResponsePtrOutput
	ToGetUserTablesSqlTaskInputResponsePtrOutputWithContext(context.Context) GetUserTablesSqlTaskInputResponsePtrOutput
}

type getUserTablesSqlTaskInputResponsePtrType GetUserTablesSqlTaskInputResponseArgs

func GetUserTablesSqlTaskInputResponsePtr(v *GetUserTablesSqlTaskInputResponseArgs) GetUserTablesSqlTaskInputResponsePtrInput {
	return (*getUserTablesSqlTaskInputResponsePtrType)(v)
}

func (*getUserTablesSqlTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlTaskInputResponse)(nil)).Elem()
}

func (i *getUserTablesSqlTaskInputResponsePtrType) ToGetUserTablesSqlTaskInputResponsePtrOutput() GetUserTablesSqlTaskInputResponsePtrOutput {
	return i.ToGetUserTablesSqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *getUserTablesSqlTaskInputResponsePtrType) ToGetUserTablesSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskInputResponsePtrOutput)
}

type GetUserTablesSqlTaskInputResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskInputResponse)(nil)).Elem()
}

func (o GetUserTablesSqlTaskInputResponseOutput) ToGetUserTablesSqlTaskInputResponseOutput() GetUserTablesSqlTaskInputResponseOutput {
	return o
}

func (o GetUserTablesSqlTaskInputResponseOutput) ToGetUserTablesSqlTaskInputResponseOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputResponseOutput {
	return o
}

func (o GetUserTablesSqlTaskInputResponseOutput) ToGetUserTablesSqlTaskInputResponsePtrOutput() GetUserTablesSqlTaskInputResponsePtrOutput {
	return o.ToGetUserTablesSqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o GetUserTablesSqlTaskInputResponseOutput) ToGetUserTablesSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetUserTablesSqlTaskInputResponse) *GetUserTablesSqlTaskInputResponse {
		return &v
	}).(GetUserTablesSqlTaskInputResponsePtrOutput)
}

func (o GetUserTablesSqlTaskInputResponseOutput) ConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskInputResponse) SqlConnectionInfoResponse { return v.ConnectionInfo }).(SqlConnectionInfoResponseOutput)
}

func (o GetUserTablesSqlTaskInputResponseOutput) SelectedDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskInputResponse) []string { return v.SelectedDatabases }).(pulumi.StringArrayOutput)
}

type GetUserTablesSqlTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlTaskInputResponse)(nil)).Elem()
}

func (o GetUserTablesSqlTaskInputResponsePtrOutput) ToGetUserTablesSqlTaskInputResponsePtrOutput() GetUserTablesSqlTaskInputResponsePtrOutput {
	return o
}

func (o GetUserTablesSqlTaskInputResponsePtrOutput) ToGetUserTablesSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputResponsePtrOutput {
	return o
}

func (o GetUserTablesSqlTaskInputResponsePtrOutput) Elem() GetUserTablesSqlTaskInputResponseOutput {
	return o.ApplyT(func(v *GetUserTablesSqlTaskInputResponse) GetUserTablesSqlTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret GetUserTablesSqlTaskInputResponse
		return ret
	}).(GetUserTablesSqlTaskInputResponseOutput)
}

func (o GetUserTablesSqlTaskInputResponsePtrOutput) ConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *GetUserTablesSqlTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.ConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

func (o GetUserTablesSqlTaskInputResponsePtrOutput) SelectedDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesSqlTaskInputResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(pulumi.StringArrayOutput)
}

type GetUserTablesSqlTaskOutputResponse struct {
	DatabasesToTables map[string][]DatabaseTableResponse `pulumi:"databasesToTables"`
	Id                string                             `pulumi:"id"`
	ValidationErrors  []ReportableExceptionResponse      `pulumi:"validationErrors"`
}





type GetUserTablesSqlTaskOutputResponseInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskOutputResponseOutput() GetUserTablesSqlTaskOutputResponseOutput
	ToGetUserTablesSqlTaskOutputResponseOutputWithContext(context.Context) GetUserTablesSqlTaskOutputResponseOutput
}

type GetUserTablesSqlTaskOutputResponseArgs struct {
	DatabasesToTables DatabaseTableResponseArrayMapInput    `pulumi:"databasesToTables"`
	Id                pulumi.StringInput                    `pulumi:"id"`
	ValidationErrors  ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (GetUserTablesSqlTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskOutputResponse)(nil)).Elem()
}

func (i GetUserTablesSqlTaskOutputResponseArgs) ToGetUserTablesSqlTaskOutputResponseOutput() GetUserTablesSqlTaskOutputResponseOutput {
	return i.ToGetUserTablesSqlTaskOutputResponseOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskOutputResponseArgs) ToGetUserTablesSqlTaskOutputResponseOutputWithContext(ctx context.Context) GetUserTablesSqlTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskOutputResponseOutput)
}





type GetUserTablesSqlTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskOutputResponseArrayOutput() GetUserTablesSqlTaskOutputResponseArrayOutput
	ToGetUserTablesSqlTaskOutputResponseArrayOutputWithContext(context.Context) GetUserTablesSqlTaskOutputResponseArrayOutput
}

type GetUserTablesSqlTaskOutputResponseArray []GetUserTablesSqlTaskOutputResponseInput

func (GetUserTablesSqlTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserTablesSqlTaskOutputResponse)(nil)).Elem()
}

func (i GetUserTablesSqlTaskOutputResponseArray) ToGetUserTablesSqlTaskOutputResponseArrayOutput() GetUserTablesSqlTaskOutputResponseArrayOutput {
	return i.ToGetUserTablesSqlTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskOutputResponseArray) ToGetUserTablesSqlTaskOutputResponseArrayOutputWithContext(ctx context.Context) GetUserTablesSqlTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskOutputResponseArrayOutput)
}

type GetUserTablesSqlTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskOutputResponse)(nil)).Elem()
}

func (o GetUserTablesSqlTaskOutputResponseOutput) ToGetUserTablesSqlTaskOutputResponseOutput() GetUserTablesSqlTaskOutputResponseOutput {
	return o
}

func (o GetUserTablesSqlTaskOutputResponseOutput) ToGetUserTablesSqlTaskOutputResponseOutputWithContext(ctx context.Context) GetUserTablesSqlTaskOutputResponseOutput {
	return o
}

func (o GetUserTablesSqlTaskOutputResponseOutput) DatabasesToTables() DatabaseTableResponseArrayMapOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskOutputResponse) map[string][]DatabaseTableResponse {
		return v.DatabasesToTables
	}).(DatabaseTableResponseArrayMapOutput)
}

func (o GetUserTablesSqlTaskOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUserTablesSqlTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskOutputResponse) []ReportableExceptionResponse { return v.ValidationErrors }).(ReportableExceptionResponseArrayOutput)
}

type GetUserTablesSqlTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserTablesSqlTaskOutputResponse)(nil)).Elem()
}

func (o GetUserTablesSqlTaskOutputResponseArrayOutput) ToGetUserTablesSqlTaskOutputResponseArrayOutput() GetUserTablesSqlTaskOutputResponseArrayOutput {
	return o
}

func (o GetUserTablesSqlTaskOutputResponseArrayOutput) ToGetUserTablesSqlTaskOutputResponseArrayOutputWithContext(ctx context.Context) GetUserTablesSqlTaskOutputResponseArrayOutput {
	return o
}

func (o GetUserTablesSqlTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) GetUserTablesSqlTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserTablesSqlTaskOutputResponse {
		return vs[0].([]GetUserTablesSqlTaskOutputResponse)[vs[1].(int)]
	}).(GetUserTablesSqlTaskOutputResponseOutput)
}

type GetUserTablesSqlTaskProperties struct {
	ClientData map[string]string          `pulumi:"clientData"`
	Input      *GetUserTablesSqlTaskInput `pulumi:"input"`
	TaskType   string                     `pulumi:"taskType"`
}





type GetUserTablesSqlTaskPropertiesInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskPropertiesOutput() GetUserTablesSqlTaskPropertiesOutput
	ToGetUserTablesSqlTaskPropertiesOutputWithContext(context.Context) GetUserTablesSqlTaskPropertiesOutput
}

type GetUserTablesSqlTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput             `pulumi:"clientData"`
	Input      GetUserTablesSqlTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                `pulumi:"taskType"`
}

func (GetUserTablesSqlTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskProperties)(nil)).Elem()
}

func (i GetUserTablesSqlTaskPropertiesArgs) ToGetUserTablesSqlTaskPropertiesOutput() GetUserTablesSqlTaskPropertiesOutput {
	return i.ToGetUserTablesSqlTaskPropertiesOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskPropertiesArgs) ToGetUserTablesSqlTaskPropertiesOutputWithContext(ctx context.Context) GetUserTablesSqlTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskPropertiesOutput)
}

type GetUserTablesSqlTaskPropertiesOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskProperties)(nil)).Elem()
}

func (o GetUserTablesSqlTaskPropertiesOutput) ToGetUserTablesSqlTaskPropertiesOutput() GetUserTablesSqlTaskPropertiesOutput {
	return o
}

func (o GetUserTablesSqlTaskPropertiesOutput) ToGetUserTablesSqlTaskPropertiesOutputWithContext(ctx context.Context) GetUserTablesSqlTaskPropertiesOutput {
	return o
}

func (o GetUserTablesSqlTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o GetUserTablesSqlTaskPropertiesOutput) Input() GetUserTablesSqlTaskInputPtrOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskProperties) *GetUserTablesSqlTaskInput { return v.Input }).(GetUserTablesSqlTaskInputPtrOutput)
}

func (o GetUserTablesSqlTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type GetUserTablesSqlTaskPropertiesResponse struct {
	ClientData map[string]string                    `pulumi:"clientData"`
	Commands   []interface{}                        `pulumi:"commands"`
	Errors     []ODataErrorResponse                 `pulumi:"errors"`
	Input      *GetUserTablesSqlTaskInputResponse   `pulumi:"input"`
	Output     []GetUserTablesSqlTaskOutputResponse `pulumi:"output"`
	State      string                               `pulumi:"state"`
	TaskType   string                               `pulumi:"taskType"`
}





type GetUserTablesSqlTaskPropertiesResponseInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskPropertiesResponseOutput() GetUserTablesSqlTaskPropertiesResponseOutput
	ToGetUserTablesSqlTaskPropertiesResponseOutputWithContext(context.Context) GetUserTablesSqlTaskPropertiesResponseOutput
}

type GetUserTablesSqlTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                        `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                            `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                 `pulumi:"errors"`
	Input      GetUserTablesSqlTaskInputResponsePtrInput    `pulumi:"input"`
	Output     GetUserTablesSqlTaskOutputResponseArrayInput `pulumi:"output"`
	State      pulumi.StringInput                           `pulumi:"state"`
	TaskType   pulumi.StringInput                           `pulumi:"taskType"`
}

func (GetUserTablesSqlTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskPropertiesResponse)(nil)).Elem()
}

func (i GetUserTablesSqlTaskPropertiesResponseArgs) ToGetUserTablesSqlTaskPropertiesResponseOutput() GetUserTablesSqlTaskPropertiesResponseOutput {
	return i.ToGetUserTablesSqlTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskPropertiesResponseArgs) ToGetUserTablesSqlTaskPropertiesResponseOutputWithContext(ctx context.Context) GetUserTablesSqlTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskPropertiesResponseOutput)
}

type GetUserTablesSqlTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskPropertiesResponse)(nil)).Elem()
}

func (o GetUserTablesSqlTaskPropertiesResponseOutput) ToGetUserTablesSqlTaskPropertiesResponseOutput() GetUserTablesSqlTaskPropertiesResponseOutput {
	return o
}

func (o GetUserTablesSqlTaskPropertiesResponseOutput) ToGetUserTablesSqlTaskPropertiesResponseOutputWithContext(ctx context.Context) GetUserTablesSqlTaskPropertiesResponseOutput {
	return o
}

func (o GetUserTablesSqlTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o GetUserTablesSqlTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o GetUserTablesSqlTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o GetUserTablesSqlTaskPropertiesResponseOutput) Input() GetUserTablesSqlTaskInputResponsePtrOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesResponse) *GetUserTablesSqlTaskInputResponse { return v.Input }).(GetUserTablesSqlTaskInputResponsePtrOutput)
}

func (o GetUserTablesSqlTaskPropertiesResponseOutput) Output() GetUserTablesSqlTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesResponse) []GetUserTablesSqlTaskOutputResponse { return v.Output }).(GetUserTablesSqlTaskOutputResponseArrayOutput)
}

func (o GetUserTablesSqlTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o GetUserTablesSqlTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type MiSqlConnectionInfo struct {
	ManagedInstanceResourceId string  `pulumi:"managedInstanceResourceId"`
	Password                  *string `pulumi:"password"`
	Type                      string  `pulumi:"type"`
	UserName                  *string `pulumi:"userName"`
}





type MiSqlConnectionInfoInput interface {
	pulumi.Input

	ToMiSqlConnectionInfoOutput() MiSqlConnectionInfoOutput
	ToMiSqlConnectionInfoOutputWithContext(context.Context) MiSqlConnectionInfoOutput
}

type MiSqlConnectionInfoArgs struct {
	ManagedInstanceResourceId pulumi.StringInput    `pulumi:"managedInstanceResourceId"`
	Password                  pulumi.StringPtrInput `pulumi:"password"`
	Type                      pulumi.StringInput    `pulumi:"type"`
	UserName                  pulumi.StringPtrInput `pulumi:"userName"`
}

func (MiSqlConnectionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MiSqlConnectionInfo)(nil)).Elem()
}

func (i MiSqlConnectionInfoArgs) ToMiSqlConnectionInfoOutput() MiSqlConnectionInfoOutput {
	return i.ToMiSqlConnectionInfoOutputWithContext(context.Background())
}

func (i MiSqlConnectionInfoArgs) ToMiSqlConnectionInfoOutputWithContext(ctx context.Context) MiSqlConnectionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MiSqlConnectionInfoOutput)
}

func (i MiSqlConnectionInfoArgs) ToMiSqlConnectionInfoPtrOutput() MiSqlConnectionInfoPtrOutput {
	return i.ToMiSqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (i MiSqlConnectionInfoArgs) ToMiSqlConnectionInfoPtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MiSqlConnectionInfoOutput).ToMiSqlConnectionInfoPtrOutputWithContext(ctx)
}









type MiSqlConnectionInfoPtrInput interface {
	pulumi.Input

	ToMiSqlConnectionInfoPtrOutput() MiSqlConnectionInfoPtrOutput
	ToMiSqlConnectionInfoPtrOutputWithContext(context.Context) MiSqlConnectionInfoPtrOutput
}

type miSqlConnectionInfoPtrType MiSqlConnectionInfoArgs

func MiSqlConnectionInfoPtr(v *MiSqlConnectionInfoArgs) MiSqlConnectionInfoPtrInput {
	return (*miSqlConnectionInfoPtrType)(v)
}

func (*miSqlConnectionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MiSqlConnectionInfo)(nil)).Elem()
}

func (i *miSqlConnectionInfoPtrType) ToMiSqlConnectionInfoPtrOutput() MiSqlConnectionInfoPtrOutput {
	return i.ToMiSqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (i *miSqlConnectionInfoPtrType) ToMiSqlConnectionInfoPtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MiSqlConnectionInfoPtrOutput)
}

type MiSqlConnectionInfoOutput struct{ *pulumi.OutputState }

func (MiSqlConnectionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MiSqlConnectionInfo)(nil)).Elem()
}

func (o MiSqlConnectionInfoOutput) ToMiSqlConnectionInfoOutput() MiSqlConnectionInfoOutput {
	return o
}

func (o MiSqlConnectionInfoOutput) ToMiSqlConnectionInfoOutputWithContext(ctx context.Context) MiSqlConnectionInfoOutput {
	return o
}

func (o MiSqlConnectionInfoOutput) ToMiSqlConnectionInfoPtrOutput() MiSqlConnectionInfoPtrOutput {
	return o.ToMiSqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (o MiSqlConnectionInfoOutput) ToMiSqlConnectionInfoPtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MiSqlConnectionInfo) *MiSqlConnectionInfo {
		return &v
	}).(MiSqlConnectionInfoPtrOutput)
}

func (o MiSqlConnectionInfoOutput) ManagedInstanceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v MiSqlConnectionInfo) string { return v.ManagedInstanceResourceId }).(pulumi.StringOutput)
}

func (o MiSqlConnectionInfoOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MiSqlConnectionInfo) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o MiSqlConnectionInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MiSqlConnectionInfo) string { return v.Type }).(pulumi.StringOutput)
}

func (o MiSqlConnectionInfoOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MiSqlConnectionInfo) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type MiSqlConnectionInfoPtrOutput struct{ *pulumi.OutputState }

func (MiSqlConnectionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MiSqlConnectionInfo)(nil)).Elem()
}

func (o MiSqlConnectionInfoPtrOutput) ToMiSqlConnectionInfoPtrOutput() MiSqlConnectionInfoPtrOutput {
	return o
}

func (o MiSqlConnectionInfoPtrOutput) ToMiSqlConnectionInfoPtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoPtrOutput {
	return o
}

func (o MiSqlConnectionInfoPtrOutput) Elem() MiSqlConnectionInfoOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfo) MiSqlConnectionInfo {
		if v != nil {
			return *v
		}
		var ret MiSqlConnectionInfo
		return ret
	}).(MiSqlConnectionInfoOutput)
}

func (o MiSqlConnectionInfoPtrOutput) ManagedInstanceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.ManagedInstanceResourceId
	}).(pulumi.StringPtrOutput)
}

func (o MiSqlConnectionInfoPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o MiSqlConnectionInfoPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o MiSqlConnectionInfoPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type MiSqlConnectionInfoResponse struct {
	ManagedInstanceResourceId string  `pulumi:"managedInstanceResourceId"`
	Password                  *string `pulumi:"password"`
	Type                      string  `pulumi:"type"`
	UserName                  *string `pulumi:"userName"`
}





type MiSqlConnectionInfoResponseInput interface {
	pulumi.Input

	ToMiSqlConnectionInfoResponseOutput() MiSqlConnectionInfoResponseOutput
	ToMiSqlConnectionInfoResponseOutputWithContext(context.Context) MiSqlConnectionInfoResponseOutput
}

type MiSqlConnectionInfoResponseArgs struct {
	ManagedInstanceResourceId pulumi.StringInput    `pulumi:"managedInstanceResourceId"`
	Password                  pulumi.StringPtrInput `pulumi:"password"`
	Type                      pulumi.StringInput    `pulumi:"type"`
	UserName                  pulumi.StringPtrInput `pulumi:"userName"`
}

func (MiSqlConnectionInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MiSqlConnectionInfoResponse)(nil)).Elem()
}

func (i MiSqlConnectionInfoResponseArgs) ToMiSqlConnectionInfoResponseOutput() MiSqlConnectionInfoResponseOutput {
	return i.ToMiSqlConnectionInfoResponseOutputWithContext(context.Background())
}

func (i MiSqlConnectionInfoResponseArgs) ToMiSqlConnectionInfoResponseOutputWithContext(ctx context.Context) MiSqlConnectionInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MiSqlConnectionInfoResponseOutput)
}

func (i MiSqlConnectionInfoResponseArgs) ToMiSqlConnectionInfoResponsePtrOutput() MiSqlConnectionInfoResponsePtrOutput {
	return i.ToMiSqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i MiSqlConnectionInfoResponseArgs) ToMiSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MiSqlConnectionInfoResponseOutput).ToMiSqlConnectionInfoResponsePtrOutputWithContext(ctx)
}









type MiSqlConnectionInfoResponsePtrInput interface {
	pulumi.Input

	ToMiSqlConnectionInfoResponsePtrOutput() MiSqlConnectionInfoResponsePtrOutput
	ToMiSqlConnectionInfoResponsePtrOutputWithContext(context.Context) MiSqlConnectionInfoResponsePtrOutput
}

type miSqlConnectionInfoResponsePtrType MiSqlConnectionInfoResponseArgs

func MiSqlConnectionInfoResponsePtr(v *MiSqlConnectionInfoResponseArgs) MiSqlConnectionInfoResponsePtrInput {
	return (*miSqlConnectionInfoResponsePtrType)(v)
}

func (*miSqlConnectionInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MiSqlConnectionInfoResponse)(nil)).Elem()
}

func (i *miSqlConnectionInfoResponsePtrType) ToMiSqlConnectionInfoResponsePtrOutput() MiSqlConnectionInfoResponsePtrOutput {
	return i.ToMiSqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i *miSqlConnectionInfoResponsePtrType) ToMiSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MiSqlConnectionInfoResponsePtrOutput)
}

type MiSqlConnectionInfoResponseOutput struct{ *pulumi.OutputState }

func (MiSqlConnectionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MiSqlConnectionInfoResponse)(nil)).Elem()
}

func (o MiSqlConnectionInfoResponseOutput) ToMiSqlConnectionInfoResponseOutput() MiSqlConnectionInfoResponseOutput {
	return o
}

func (o MiSqlConnectionInfoResponseOutput) ToMiSqlConnectionInfoResponseOutputWithContext(ctx context.Context) MiSqlConnectionInfoResponseOutput {
	return o
}

func (o MiSqlConnectionInfoResponseOutput) ToMiSqlConnectionInfoResponsePtrOutput() MiSqlConnectionInfoResponsePtrOutput {
	return o.ToMiSqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (o MiSqlConnectionInfoResponseOutput) ToMiSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MiSqlConnectionInfoResponse) *MiSqlConnectionInfoResponse {
		return &v
	}).(MiSqlConnectionInfoResponsePtrOutput)
}

func (o MiSqlConnectionInfoResponseOutput) ManagedInstanceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v MiSqlConnectionInfoResponse) string { return v.ManagedInstanceResourceId }).(pulumi.StringOutput)
}

func (o MiSqlConnectionInfoResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MiSqlConnectionInfoResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o MiSqlConnectionInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MiSqlConnectionInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

func (o MiSqlConnectionInfoResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MiSqlConnectionInfoResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type MiSqlConnectionInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (MiSqlConnectionInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MiSqlConnectionInfoResponse)(nil)).Elem()
}

func (o MiSqlConnectionInfoResponsePtrOutput) ToMiSqlConnectionInfoResponsePtrOutput() MiSqlConnectionInfoResponsePtrOutput {
	return o
}

func (o MiSqlConnectionInfoResponsePtrOutput) ToMiSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoResponsePtrOutput {
	return o
}

func (o MiSqlConnectionInfoResponsePtrOutput) Elem() MiSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfoResponse) MiSqlConnectionInfoResponse {
		if v != nil {
			return *v
		}
		var ret MiSqlConnectionInfoResponse
		return ret
	}).(MiSqlConnectionInfoResponseOutput)
}

func (o MiSqlConnectionInfoResponsePtrOutput) ManagedInstanceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ManagedInstanceResourceId
	}).(pulumi.StringPtrOutput)
}

func (o MiSqlConnectionInfoResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o MiSqlConnectionInfoResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o MiSqlConnectionInfoResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type MigrateMISyncCompleteCommandInputResponse struct {
	SourceDatabaseName string `pulumi:"sourceDatabaseName"`
}





type MigrateMISyncCompleteCommandInputResponseInput interface {
	pulumi.Input

	ToMigrateMISyncCompleteCommandInputResponseOutput() MigrateMISyncCompleteCommandInputResponseOutput
	ToMigrateMISyncCompleteCommandInputResponseOutputWithContext(context.Context) MigrateMISyncCompleteCommandInputResponseOutput
}

type MigrateMISyncCompleteCommandInputResponseArgs struct {
	SourceDatabaseName pulumi.StringInput `pulumi:"sourceDatabaseName"`
}

func (MigrateMISyncCompleteCommandInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMISyncCompleteCommandInputResponse)(nil)).Elem()
}

func (i MigrateMISyncCompleteCommandInputResponseArgs) ToMigrateMISyncCompleteCommandInputResponseOutput() MigrateMISyncCompleteCommandInputResponseOutput {
	return i.ToMigrateMISyncCompleteCommandInputResponseOutputWithContext(context.Background())
}

func (i MigrateMISyncCompleteCommandInputResponseArgs) ToMigrateMISyncCompleteCommandInputResponseOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMISyncCompleteCommandInputResponseOutput)
}

func (i MigrateMISyncCompleteCommandInputResponseArgs) ToMigrateMISyncCompleteCommandInputResponsePtrOutput() MigrateMISyncCompleteCommandInputResponsePtrOutput {
	return i.ToMigrateMISyncCompleteCommandInputResponsePtrOutputWithContext(context.Background())
}

func (i MigrateMISyncCompleteCommandInputResponseArgs) ToMigrateMISyncCompleteCommandInputResponsePtrOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMISyncCompleteCommandInputResponseOutput).ToMigrateMISyncCompleteCommandInputResponsePtrOutputWithContext(ctx)
}









type MigrateMISyncCompleteCommandInputResponsePtrInput interface {
	pulumi.Input

	ToMigrateMISyncCompleteCommandInputResponsePtrOutput() MigrateMISyncCompleteCommandInputResponsePtrOutput
	ToMigrateMISyncCompleteCommandInputResponsePtrOutputWithContext(context.Context) MigrateMISyncCompleteCommandInputResponsePtrOutput
}

type migrateMISyncCompleteCommandInputResponsePtrType MigrateMISyncCompleteCommandInputResponseArgs

func MigrateMISyncCompleteCommandInputResponsePtr(v *MigrateMISyncCompleteCommandInputResponseArgs) MigrateMISyncCompleteCommandInputResponsePtrInput {
	return (*migrateMISyncCompleteCommandInputResponsePtrType)(v)
}

func (*migrateMISyncCompleteCommandInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateMISyncCompleteCommandInputResponse)(nil)).Elem()
}

func (i *migrateMISyncCompleteCommandInputResponsePtrType) ToMigrateMISyncCompleteCommandInputResponsePtrOutput() MigrateMISyncCompleteCommandInputResponsePtrOutput {
	return i.ToMigrateMISyncCompleteCommandInputResponsePtrOutputWithContext(context.Background())
}

func (i *migrateMISyncCompleteCommandInputResponsePtrType) ToMigrateMISyncCompleteCommandInputResponsePtrOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMISyncCompleteCommandInputResponsePtrOutput)
}

type MigrateMISyncCompleteCommandInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateMISyncCompleteCommandInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMISyncCompleteCommandInputResponse)(nil)).Elem()
}

func (o MigrateMISyncCompleteCommandInputResponseOutput) ToMigrateMISyncCompleteCommandInputResponseOutput() MigrateMISyncCompleteCommandInputResponseOutput {
	return o
}

func (o MigrateMISyncCompleteCommandInputResponseOutput) ToMigrateMISyncCompleteCommandInputResponseOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandInputResponseOutput {
	return o
}

func (o MigrateMISyncCompleteCommandInputResponseOutput) ToMigrateMISyncCompleteCommandInputResponsePtrOutput() MigrateMISyncCompleteCommandInputResponsePtrOutput {
	return o.ToMigrateMISyncCompleteCommandInputResponsePtrOutputWithContext(context.Background())
}

func (o MigrateMISyncCompleteCommandInputResponseOutput) ToMigrateMISyncCompleteCommandInputResponsePtrOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrateMISyncCompleteCommandInputResponse) *MigrateMISyncCompleteCommandInputResponse {
		return &v
	}).(MigrateMISyncCompleteCommandInputResponsePtrOutput)
}

func (o MigrateMISyncCompleteCommandInputResponseOutput) SourceDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandInputResponse) string { return v.SourceDatabaseName }).(pulumi.StringOutput)
}

type MigrateMISyncCompleteCommandInputResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateMISyncCompleteCommandInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateMISyncCompleteCommandInputResponse)(nil)).Elem()
}

func (o MigrateMISyncCompleteCommandInputResponsePtrOutput) ToMigrateMISyncCompleteCommandInputResponsePtrOutput() MigrateMISyncCompleteCommandInputResponsePtrOutput {
	return o
}

func (o MigrateMISyncCompleteCommandInputResponsePtrOutput) ToMigrateMISyncCompleteCommandInputResponsePtrOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandInputResponsePtrOutput {
	return o
}

func (o MigrateMISyncCompleteCommandInputResponsePtrOutput) Elem() MigrateMISyncCompleteCommandInputResponseOutput {
	return o.ApplyT(func(v *MigrateMISyncCompleteCommandInputResponse) MigrateMISyncCompleteCommandInputResponse {
		if v != nil {
			return *v
		}
		var ret MigrateMISyncCompleteCommandInputResponse
		return ret
	}).(MigrateMISyncCompleteCommandInputResponseOutput)
}

func (o MigrateMISyncCompleteCommandInputResponsePtrOutput) SourceDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateMISyncCompleteCommandInputResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceDatabaseName
	}).(pulumi.StringPtrOutput)
}

type MigrateMISyncCompleteCommandOutputResponse struct {
	Errors []ReportableExceptionResponse `pulumi:"errors"`
}





type MigrateMISyncCompleteCommandOutputResponseInput interface {
	pulumi.Input

	ToMigrateMISyncCompleteCommandOutputResponseOutput() MigrateMISyncCompleteCommandOutputResponseOutput
	ToMigrateMISyncCompleteCommandOutputResponseOutputWithContext(context.Context) MigrateMISyncCompleteCommandOutputResponseOutput
}

type MigrateMISyncCompleteCommandOutputResponseArgs struct {
	Errors ReportableExceptionResponseArrayInput `pulumi:"errors"`
}

func (MigrateMISyncCompleteCommandOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMISyncCompleteCommandOutputResponse)(nil)).Elem()
}

func (i MigrateMISyncCompleteCommandOutputResponseArgs) ToMigrateMISyncCompleteCommandOutputResponseOutput() MigrateMISyncCompleteCommandOutputResponseOutput {
	return i.ToMigrateMISyncCompleteCommandOutputResponseOutputWithContext(context.Background())
}

func (i MigrateMISyncCompleteCommandOutputResponseArgs) ToMigrateMISyncCompleteCommandOutputResponseOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMISyncCompleteCommandOutputResponseOutput)
}

type MigrateMISyncCompleteCommandOutputResponseOutput struct{ *pulumi.OutputState }

func (MigrateMISyncCompleteCommandOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMISyncCompleteCommandOutputResponse)(nil)).Elem()
}

func (o MigrateMISyncCompleteCommandOutputResponseOutput) ToMigrateMISyncCompleteCommandOutputResponseOutput() MigrateMISyncCompleteCommandOutputResponseOutput {
	return o
}

func (o MigrateMISyncCompleteCommandOutputResponseOutput) ToMigrateMISyncCompleteCommandOutputResponseOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandOutputResponseOutput {
	return o
}

func (o MigrateMISyncCompleteCommandOutputResponseOutput) Errors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandOutputResponse) []ReportableExceptionResponse { return v.Errors }).(ReportableExceptionResponseArrayOutput)
}

type MigrateMISyncCompleteCommandPropertiesResponse struct {
	CommandType string                                     `pulumi:"commandType"`
	Errors      []ODataErrorResponse                       `pulumi:"errors"`
	Input       *MigrateMISyncCompleteCommandInputResponse `pulumi:"input"`
	Output      MigrateMISyncCompleteCommandOutputResponse `pulumi:"output"`
	State       string                                     `pulumi:"state"`
}





type MigrateMISyncCompleteCommandPropertiesResponseInput interface {
	pulumi.Input

	ToMigrateMISyncCompleteCommandPropertiesResponseOutput() MigrateMISyncCompleteCommandPropertiesResponseOutput
	ToMigrateMISyncCompleteCommandPropertiesResponseOutputWithContext(context.Context) MigrateMISyncCompleteCommandPropertiesResponseOutput
}

type MigrateMISyncCompleteCommandPropertiesResponseArgs struct {
	CommandType pulumi.StringInput                                `pulumi:"commandType"`
	Errors      ODataErrorResponseArrayInput                      `pulumi:"errors"`
	Input       MigrateMISyncCompleteCommandInputResponsePtrInput `pulumi:"input"`
	Output      MigrateMISyncCompleteCommandOutputResponseInput   `pulumi:"output"`
	State       pulumi.StringInput                                `pulumi:"state"`
}

func (MigrateMISyncCompleteCommandPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMISyncCompleteCommandPropertiesResponse)(nil)).Elem()
}

func (i MigrateMISyncCompleteCommandPropertiesResponseArgs) ToMigrateMISyncCompleteCommandPropertiesResponseOutput() MigrateMISyncCompleteCommandPropertiesResponseOutput {
	return i.ToMigrateMISyncCompleteCommandPropertiesResponseOutputWithContext(context.Background())
}

func (i MigrateMISyncCompleteCommandPropertiesResponseArgs) ToMigrateMISyncCompleteCommandPropertiesResponseOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMISyncCompleteCommandPropertiesResponseOutput)
}

type MigrateMISyncCompleteCommandPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrateMISyncCompleteCommandPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMISyncCompleteCommandPropertiesResponse)(nil)).Elem()
}

func (o MigrateMISyncCompleteCommandPropertiesResponseOutput) ToMigrateMISyncCompleteCommandPropertiesResponseOutput() MigrateMISyncCompleteCommandPropertiesResponseOutput {
	return o
}

func (o MigrateMISyncCompleteCommandPropertiesResponseOutput) ToMigrateMISyncCompleteCommandPropertiesResponseOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandPropertiesResponseOutput {
	return o
}

func (o MigrateMISyncCompleteCommandPropertiesResponseOutput) CommandType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandPropertiesResponse) string { return v.CommandType }).(pulumi.StringOutput)
}

func (o MigrateMISyncCompleteCommandPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o MigrateMISyncCompleteCommandPropertiesResponseOutput) Input() MigrateMISyncCompleteCommandInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandPropertiesResponse) *MigrateMISyncCompleteCommandInputResponse {
		return v.Input
	}).(MigrateMISyncCompleteCommandInputResponsePtrOutput)
}

func (o MigrateMISyncCompleteCommandPropertiesResponseOutput) Output() MigrateMISyncCompleteCommandOutputResponseOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandPropertiesResponse) MigrateMISyncCompleteCommandOutputResponse {
		return v.Output
	}).(MigrateMISyncCompleteCommandOutputResponseOutput)
}

func (o MigrateMISyncCompleteCommandPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

type MigrateMongoDbTaskProperties struct {
	ClientData map[string]string         `pulumi:"clientData"`
	Input      *MongoDbMigrationSettings `pulumi:"input"`
	TaskType   string                    `pulumi:"taskType"`
}





type MigrateMongoDbTaskPropertiesInput interface {
	pulumi.Input

	ToMigrateMongoDbTaskPropertiesOutput() MigrateMongoDbTaskPropertiesOutput
	ToMigrateMongoDbTaskPropertiesOutputWithContext(context.Context) MigrateMongoDbTaskPropertiesOutput
}

type MigrateMongoDbTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput            `pulumi:"clientData"`
	Input      MongoDbMigrationSettingsPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput               `pulumi:"taskType"`
}

func (MigrateMongoDbTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMongoDbTaskProperties)(nil)).Elem()
}

func (i MigrateMongoDbTaskPropertiesArgs) ToMigrateMongoDbTaskPropertiesOutput() MigrateMongoDbTaskPropertiesOutput {
	return i.ToMigrateMongoDbTaskPropertiesOutputWithContext(context.Background())
}

func (i MigrateMongoDbTaskPropertiesArgs) ToMigrateMongoDbTaskPropertiesOutputWithContext(ctx context.Context) MigrateMongoDbTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMongoDbTaskPropertiesOutput)
}

type MigrateMongoDbTaskPropertiesOutput struct{ *pulumi.OutputState }

func (MigrateMongoDbTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMongoDbTaskProperties)(nil)).Elem()
}

func (o MigrateMongoDbTaskPropertiesOutput) ToMigrateMongoDbTaskPropertiesOutput() MigrateMongoDbTaskPropertiesOutput {
	return o
}

func (o MigrateMongoDbTaskPropertiesOutput) ToMigrateMongoDbTaskPropertiesOutputWithContext(ctx context.Context) MigrateMongoDbTaskPropertiesOutput {
	return o
}

func (o MigrateMongoDbTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMongoDbTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o MigrateMongoDbTaskPropertiesOutput) Input() MongoDbMigrationSettingsPtrOutput {
	return o.ApplyT(func(v MigrateMongoDbTaskProperties) *MongoDbMigrationSettings { return v.Input }).(MongoDbMigrationSettingsPtrOutput)
}

func (o MigrateMongoDbTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMongoDbTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type MigrateMongoDbTaskPropertiesResponse struct {
	ClientData map[string]string                 `pulumi:"clientData"`
	Commands   []interface{}                     `pulumi:"commands"`
	Errors     []ODataErrorResponse              `pulumi:"errors"`
	Input      *MongoDbMigrationSettingsResponse `pulumi:"input"`
	Output     []interface{}                     `pulumi:"output"`
	State      string                            `pulumi:"state"`
	TaskType   string                            `pulumi:"taskType"`
}





type MigrateMongoDbTaskPropertiesResponseInput interface {
	pulumi.Input

	ToMigrateMongoDbTaskPropertiesResponseOutput() MigrateMongoDbTaskPropertiesResponseOutput
	ToMigrateMongoDbTaskPropertiesResponseOutputWithContext(context.Context) MigrateMongoDbTaskPropertiesResponseOutput
}

type MigrateMongoDbTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                    `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                        `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput             `pulumi:"errors"`
	Input      MongoDbMigrationSettingsResponsePtrInput `pulumi:"input"`
	Output     pulumi.ArrayInput                        `pulumi:"output"`
	State      pulumi.StringInput                       `pulumi:"state"`
	TaskType   pulumi.StringInput                       `pulumi:"taskType"`
}

func (MigrateMongoDbTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMongoDbTaskPropertiesResponse)(nil)).Elem()
}

func (i MigrateMongoDbTaskPropertiesResponseArgs) ToMigrateMongoDbTaskPropertiesResponseOutput() MigrateMongoDbTaskPropertiesResponseOutput {
	return i.ToMigrateMongoDbTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i MigrateMongoDbTaskPropertiesResponseArgs) ToMigrateMongoDbTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateMongoDbTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMongoDbTaskPropertiesResponseOutput)
}

type MigrateMongoDbTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrateMongoDbTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMongoDbTaskPropertiesResponse)(nil)).Elem()
}

func (o MigrateMongoDbTaskPropertiesResponseOutput) ToMigrateMongoDbTaskPropertiesResponseOutput() MigrateMongoDbTaskPropertiesResponseOutput {
	return o
}

func (o MigrateMongoDbTaskPropertiesResponseOutput) ToMigrateMongoDbTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateMongoDbTaskPropertiesResponseOutput {
	return o
}

func (o MigrateMongoDbTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMongoDbTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o MigrateMongoDbTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateMongoDbTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o MigrateMongoDbTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrateMongoDbTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o MigrateMongoDbTaskPropertiesResponseOutput) Input() MongoDbMigrationSettingsResponsePtrOutput {
	return o.ApplyT(func(v MigrateMongoDbTaskPropertiesResponse) *MongoDbMigrationSettingsResponse { return v.Input }).(MongoDbMigrationSettingsResponsePtrOutput)
}

func (o MigrateMongoDbTaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateMongoDbTaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

func (o MigrateMongoDbTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMongoDbTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MigrateMongoDbTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMongoDbTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type MigrateMySqlAzureDbForMySqlSyncDatabaseInput struct {
	MigrationSetting   map[string]string `pulumi:"migrationSetting"`
	Name               *string           `pulumi:"name"`
	SourceSetting      map[string]string `pulumi:"sourceSetting"`
	TableMap           map[string]string `pulumi:"tableMap"`
	TargetDatabaseName *string           `pulumi:"targetDatabaseName"`
	TargetSetting      map[string]string `pulumi:"targetSetting"`
}





type MigrateMySqlAzureDbForMySqlSyncDatabaseInputInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput
	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput
}

type MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs struct {
	MigrationSetting   pulumi.StringMapInput `pulumi:"migrationSetting"`
	Name               pulumi.StringPtrInput `pulumi:"name"`
	SourceSetting      pulumi.StringMapInput `pulumi:"sourceSetting"`
	TableMap           pulumi.StringMapInput `pulumi:"tableMap"`
	TargetDatabaseName pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
	TargetSetting      pulumi.StringMapInput `pulumi:"targetSetting"`
}

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncDatabaseInput)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput)
}





type MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput
	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput
}

type MigrateMySqlAzureDbForMySqlSyncDatabaseInputArray []MigrateMySqlAzureDbForMySqlSyncDatabaseInputInput

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateMySqlAzureDbForMySqlSyncDatabaseInput)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputArray) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputArray) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput)
}

type MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncDatabaseInput)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput) MigrationSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInput) map[string]string { return v.MigrationSetting }).(pulumi.StringMapOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInput) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput) SourceSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInput) map[string]string { return v.SourceSetting }).(pulumi.StringMapOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput) TableMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInput) map[string]string { return v.TableMap }).(pulumi.StringMapOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInput) *string { return v.TargetDatabaseName }).(pulumi.StringPtrOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput) TargetSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInput) map[string]string { return v.TargetSetting }).(pulumi.StringMapOutput)
}

type MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateMySqlAzureDbForMySqlSyncDatabaseInput)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput) Index(i pulumi.IntInput) MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateMySqlAzureDbForMySqlSyncDatabaseInput {
		return vs[0].([]MigrateMySqlAzureDbForMySqlSyncDatabaseInput)[vs[1].(int)]
	}).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput)
}

type MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse struct {
	MigrationSetting   map[string]string `pulumi:"migrationSetting"`
	Name               *string           `pulumi:"name"`
	SourceSetting      map[string]string `pulumi:"sourceSetting"`
	TableMap           map[string]string `pulumi:"tableMap"`
	TargetDatabaseName *string           `pulumi:"targetDatabaseName"`
	TargetSetting      map[string]string `pulumi:"targetSetting"`
}





type MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput
}

type MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArgs struct {
	MigrationSetting   pulumi.StringMapInput `pulumi:"migrationSetting"`
	Name               pulumi.StringPtrInput `pulumi:"name"`
	SourceSetting      pulumi.StringMapInput `pulumi:"sourceSetting"`
	TableMap           pulumi.StringMapInput `pulumi:"tableMap"`
	TargetDatabaseName pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
	TargetSetting      pulumi.StringMapInput `pulumi:"targetSetting"`
}

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput)
}





type MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput
	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput
}

type MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArray []MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseInput

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArray) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArray) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput)
}

type MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput) MigrationSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse) map[string]string {
		return v.MigrationSetting
	}).(pulumi.StringMapOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput) SourceSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse) map[string]string { return v.SourceSetting }).(pulumi.StringMapOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput) TableMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse) map[string]string { return v.TableMap }).(pulumi.StringMapOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse) *string { return v.TargetDatabaseName }).(pulumi.StringPtrOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput) TargetSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse) map[string]string { return v.TargetSetting }).(pulumi.StringMapOutput)
}

type MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput) Index(i pulumi.IntInput) MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse {
		return vs[0].([]MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse)[vs[1].(int)]
	}).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskInput struct {
	SelectedDatabases    []MigrateMySqlAzureDbForMySqlSyncDatabaseInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo MySqlConnectionInfo                            `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo MySqlConnectionInfo                            `pulumi:"targetConnectionInfo"`
}





type MigrateMySqlAzureDbForMySqlSyncTaskInputInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskInputOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskInputOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskInputArgs struct {
	SelectedDatabases    MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo MySqlConnectionInfoInput                               `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo MySqlConnectionInfoInput                               `pulumi:"targetConnectionInfo"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskInput)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskInputOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskInputOutput)
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskInputOutput).ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutputWithContext(ctx)
}









type MigrateMySqlAzureDbForMySqlSyncTaskInputPtrInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput
}

type migrateMySqlAzureDbForMySqlSyncTaskInputPtrType MigrateMySqlAzureDbForMySqlSyncTaskInputArgs

func MigrateMySqlAzureDbForMySqlSyncTaskInputPtr(v *MigrateMySqlAzureDbForMySqlSyncTaskInputArgs) MigrateMySqlAzureDbForMySqlSyncTaskInputPtrInput {
	return (*migrateMySqlAzureDbForMySqlSyncTaskInputPtrType)(v)
}

func (*migrateMySqlAzureDbForMySqlSyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateMySqlAzureDbForMySqlSyncTaskInput)(nil)).Elem()
}

func (i *migrateMySqlAzureDbForMySqlSyncTaskInputPtrType) ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *migrateMySqlAzureDbForMySqlSyncTaskInputPtrType) ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskInputOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskInput)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput {
	return o.ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrateMySqlAzureDbForMySqlSyncTaskInput) *MigrateMySqlAzureDbForMySqlSyncTaskInput {
		return &v
	}).(MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputOutput) SelectedDatabases() MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskInput) []MigrateMySqlAzureDbForMySqlSyncDatabaseInput {
		return v.SelectedDatabases
	}).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputOutput) SourceConnectionInfo() MySqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskInput) MySqlConnectionInfo { return v.SourceConnectionInfo }).(MySqlConnectionInfoOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputOutput) TargetConnectionInfo() MySqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskInput) MySqlConnectionInfo { return v.TargetConnectionInfo }).(MySqlConnectionInfoOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateMySqlAzureDbForMySqlSyncTaskInput)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput) Elem() MigrateMySqlAzureDbForMySqlSyncTaskInputOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInput) MigrateMySqlAzureDbForMySqlSyncTaskInput {
		if v != nil {
			return *v
		}
		var ret MigrateMySqlAzureDbForMySqlSyncTaskInput
		return ret
	}).(MigrateMySqlAzureDbForMySqlSyncTaskInputOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput) SelectedDatabases() MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInput) []MigrateMySqlAzureDbForMySqlSyncDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput) SourceConnectionInfo() MySqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInput) *MySqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(MySqlConnectionInfoPtrOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput) TargetConnectionInfo() MySqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInput) *MySqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MySqlConnectionInfoPtrOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskInputResponse struct {
	SelectedDatabases    []MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse `pulumi:"selectedDatabases"`
	SourceConnectionInfo MySqlConnectionInfoResponse                            `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo MySqlConnectionInfoResponse                            `pulumi:"targetConnectionInfo"`
}





type MigrateMySqlAzureDbForMySqlSyncTaskInputResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs struct {
	SelectedDatabases    MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo MySqlConnectionInfoResponseInput                               `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo MySqlConnectionInfoResponseInput                               `pulumi:"targetConnectionInfo"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskInputResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput)
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput).ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutputWithContext(ctx)
}









type MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput
}

type migrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrType MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs

func MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtr(v *MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs) MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrInput {
	return (*migrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrType)(v)
}

func (*migrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateMySqlAzureDbForMySqlSyncTaskInputResponse)(nil)).Elem()
}

func (i *migrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrType) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *migrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrType) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskInputResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput {
	return o.ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrateMySqlAzureDbForMySqlSyncTaskInputResponse) *MigrateMySqlAzureDbForMySqlSyncTaskInputResponse {
		return &v
	}).(MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput) SelectedDatabases() MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskInputResponse) []MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput) SourceConnectionInfo() MySqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskInputResponse) MySqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(MySqlConnectionInfoResponseOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput) TargetConnectionInfo() MySqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskInputResponse) MySqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(MySqlConnectionInfoResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateMySqlAzureDbForMySqlSyncTaskInputResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput) Elem() MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInputResponse) MigrateMySqlAzureDbForMySqlSyncTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret MigrateMySqlAzureDbForMySqlSyncTaskInputResponse
		return ret
	}).(MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput) SelectedDatabases() MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInputResponse) []MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput) SourceConnectionInfo() MySqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInputResponse) *MySqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(MySqlConnectionInfoResponsePtrOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput) TargetConnectionInfo() MySqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInputResponse) *MySqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MySqlConnectionInfoResponsePtrOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponse struct {
	ErrorMessage *string                                   `pulumi:"errorMessage"`
	Events       []SyncMigrationDatabaseErrorEventResponse `pulumi:"events"`
	Id           string                                    `pulumi:"id"`
	ResultType   string                                    `pulumi:"resultType"`
}





type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseArgs struct {
	ErrorMessage pulumi.StringPtrInput                             `pulumi:"errorMessage"`
	Events       SyncMigrationDatabaseErrorEventResponseArrayInput `pulumi:"events"`
	Id           pulumi.StringInput                                `pulumi:"id"`
	ResultType   pulumi.StringInput                                `pulumi:"resultType"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput) Events() SyncMigrationDatabaseErrorEventResponseArrayOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponse) []SyncMigrationDatabaseErrorEventResponse {
		return v.Events
	}).(SyncMigrationDatabaseErrorEventResponseArrayOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse struct {
	AppliedChanges          float64 `pulumi:"appliedChanges"`
	CdcDeleteCounter        float64 `pulumi:"cdcDeleteCounter"`
	CdcInsertCounter        float64 `pulumi:"cdcInsertCounter"`
	CdcUpdateCounter        float64 `pulumi:"cdcUpdateCounter"`
	DatabaseName            string  `pulumi:"databaseName"`
	EndedOn                 string  `pulumi:"endedOn"`
	FullLoadCompletedTables float64 `pulumi:"fullLoadCompletedTables"`
	FullLoadErroredTables   float64 `pulumi:"fullLoadErroredTables"`
	FullLoadLoadingTables   float64 `pulumi:"fullLoadLoadingTables"`
	FullLoadQueuedTables    float64 `pulumi:"fullLoadQueuedTables"`
	Id                      string  `pulumi:"id"`
	IncomingChanges         float64 `pulumi:"incomingChanges"`
	InitializationCompleted bool    `pulumi:"initializationCompleted"`
	Latency                 float64 `pulumi:"latency"`
	MigrationState          string  `pulumi:"migrationState"`
	ResultType              string  `pulumi:"resultType"`
	StartedOn               string  `pulumi:"startedOn"`
}





type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseArgs struct {
	AppliedChanges          pulumi.Float64Input `pulumi:"appliedChanges"`
	CdcDeleteCounter        pulumi.Float64Input `pulumi:"cdcDeleteCounter"`
	CdcInsertCounter        pulumi.Float64Input `pulumi:"cdcInsertCounter"`
	CdcUpdateCounter        pulumi.Float64Input `pulumi:"cdcUpdateCounter"`
	DatabaseName            pulumi.StringInput  `pulumi:"databaseName"`
	EndedOn                 pulumi.StringInput  `pulumi:"endedOn"`
	FullLoadCompletedTables pulumi.Float64Input `pulumi:"fullLoadCompletedTables"`
	FullLoadErroredTables   pulumi.Float64Input `pulumi:"fullLoadErroredTables"`
	FullLoadLoadingTables   pulumi.Float64Input `pulumi:"fullLoadLoadingTables"`
	FullLoadQueuedTables    pulumi.Float64Input `pulumi:"fullLoadQueuedTables"`
	Id                      pulumi.StringInput  `pulumi:"id"`
	IncomingChanges         pulumi.Float64Input `pulumi:"incomingChanges"`
	InitializationCompleted pulumi.BoolInput    `pulumi:"initializationCompleted"`
	Latency                 pulumi.Float64Input `pulumi:"latency"`
	MigrationState          pulumi.StringInput  `pulumi:"migrationState"`
	ResultType              pulumi.StringInput  `pulumi:"resultType"`
	StartedOn               pulumi.StringInput  `pulumi:"startedOn"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) AppliedChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.AppliedChanges
	}).(pulumi.Float64Output)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) CdcDeleteCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.CdcDeleteCounter
	}).(pulumi.Float64Output)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) CdcInsertCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.CdcInsertCounter
	}).(pulumi.Float64Output)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) CdcUpdateCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.CdcUpdateCounter
	}).(pulumi.Float64Output)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadCompletedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadCompletedTables
	}).(pulumi.Float64Output)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadErroredTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadErroredTables
	}).(pulumi.Float64Output)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadLoadingTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadLoadingTables
	}).(pulumi.Float64Output)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadQueuedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadQueuedTables
	}).(pulumi.Float64Output)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) IncomingChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.IncomingChanges
	}).(pulumi.Float64Output)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) InitializationCompleted() pulumi.BoolOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) bool {
		return v.InitializationCompleted
	}).(pulumi.BoolOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) Latency() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 { return v.Latency }).(pulumi.Float64Output)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) MigrationState() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) string { return v.MigrationState }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponse struct {
	Error      ReportableExceptionResponse `pulumi:"error"`
	Id         string                      `pulumi:"id"`
	ResultType string                      `pulumi:"resultType"`
}





type MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseArgs struct {
	Error      ReportableExceptionResponseInput `pulumi:"error"`
	Id         pulumi.StringInput               `pulumi:"id"`
	ResultType pulumi.StringInput               `pulumi:"resultType"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput) Error() ReportableExceptionResponseOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponse) ReportableExceptionResponse {
		return v.Error
	}).(ReportableExceptionResponseOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse struct {
	EndedOn             string `pulumi:"endedOn"`
	Id                  string `pulumi:"id"`
	ResultType          string `pulumi:"resultType"`
	SourceServer        string `pulumi:"sourceServer"`
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	StartedOn           string `pulumi:"startedOn"`
	TargetServer        string `pulumi:"targetServer"`
	TargetServerVersion string `pulumi:"targetServerVersion"`
}





type MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseArgs struct {
	EndedOn             pulumi.StringInput `pulumi:"endedOn"`
	Id                  pulumi.StringInput `pulumi:"id"`
	ResultType          pulumi.StringInput `pulumi:"resultType"`
	SourceServer        pulumi.StringInput `pulumi:"sourceServer"`
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	StartedOn           pulumi.StringInput `pulumi:"startedOn"`
	TargetServer        pulumi.StringInput `pulumi:"targetServer"`
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) SourceServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse) string { return v.SourceServer }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse) string {
		return v.SourceServerVersion
	}).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) TargetServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse) string { return v.TargetServer }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse) string {
		return v.TargetServerVersion
	}).(pulumi.StringOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse struct {
	CdcDeleteCounter      string  `pulumi:"cdcDeleteCounter"`
	CdcInsertCounter      string  `pulumi:"cdcInsertCounter"`
	CdcUpdateCounter      string  `pulumi:"cdcUpdateCounter"`
	DataErrorsCounter     float64 `pulumi:"dataErrorsCounter"`
	DatabaseName          string  `pulumi:"databaseName"`
	FullLoadEndedOn       string  `pulumi:"fullLoadEndedOn"`
	FullLoadEstFinishTime string  `pulumi:"fullLoadEstFinishTime"`
	FullLoadStartedOn     string  `pulumi:"fullLoadStartedOn"`
	FullLoadTotalRows     float64 `pulumi:"fullLoadTotalRows"`
	Id                    string  `pulumi:"id"`
	LastModifiedTime      string  `pulumi:"lastModifiedTime"`
	ResultType            string  `pulumi:"resultType"`
	State                 string  `pulumi:"state"`
	TableName             string  `pulumi:"tableName"`
	TotalChangesApplied   float64 `pulumi:"totalChangesApplied"`
}





type MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseArgs struct {
	CdcDeleteCounter      pulumi.StringInput  `pulumi:"cdcDeleteCounter"`
	CdcInsertCounter      pulumi.StringInput  `pulumi:"cdcInsertCounter"`
	CdcUpdateCounter      pulumi.StringInput  `pulumi:"cdcUpdateCounter"`
	DataErrorsCounter     pulumi.Float64Input `pulumi:"dataErrorsCounter"`
	DatabaseName          pulumi.StringInput  `pulumi:"databaseName"`
	FullLoadEndedOn       pulumi.StringInput  `pulumi:"fullLoadEndedOn"`
	FullLoadEstFinishTime pulumi.StringInput  `pulumi:"fullLoadEstFinishTime"`
	FullLoadStartedOn     pulumi.StringInput  `pulumi:"fullLoadStartedOn"`
	FullLoadTotalRows     pulumi.Float64Input `pulumi:"fullLoadTotalRows"`
	Id                    pulumi.StringInput  `pulumi:"id"`
	LastModifiedTime      pulumi.StringInput  `pulumi:"lastModifiedTime"`
	ResultType            pulumi.StringInput  `pulumi:"resultType"`
	State                 pulumi.StringInput  `pulumi:"state"`
	TableName             pulumi.StringInput  `pulumi:"tableName"`
	TotalChangesApplied   pulumi.Float64Input `pulumi:"totalChangesApplied"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) CdcDeleteCounter() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.CdcDeleteCounter }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) CdcInsertCounter() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.CdcInsertCounter }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) CdcUpdateCounter() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.CdcUpdateCounter }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) DataErrorsCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) float64 {
		return v.DataErrorsCounter
	}).(pulumi.Float64Output)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) FullLoadEndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.FullLoadEndedOn }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) FullLoadEstFinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string {
		return v.FullLoadEstFinishTime
	}).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) FullLoadStartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.FullLoadStartedOn }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) FullLoadTotalRows() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) float64 {
		return v.FullLoadTotalRows
	}).(pulumi.Float64Output)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.LastModifiedTime }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.TableName }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) TotalChangesApplied() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) float64 {
		return v.TotalChangesApplied
	}).(pulumi.Float64Output)
}

type MigrateMySqlAzureDbForMySqlSyncTaskProperties struct {
	ClientData map[string]string                         `pulumi:"clientData"`
	Input      *MigrateMySqlAzureDbForMySqlSyncTaskInput `pulumi:"input"`
	TaskType   string                                    `pulumi:"taskType"`
}





type MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput() MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                            `pulumi:"clientData"`
	Input      MigrateMySqlAzureDbForMySqlSyncTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                               `pulumi:"taskType"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskProperties)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskPropertiesArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput() MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskPropertiesArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskProperties)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput() MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput) Input() MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskProperties) *MigrateMySqlAzureDbForMySqlSyncTaskInput {
		return v.Input
	}).(MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse struct {
	ClientData map[string]string                                 `pulumi:"clientData"`
	Commands   []interface{}                                     `pulumi:"commands"`
	Errors     []ODataErrorResponse                              `pulumi:"errors"`
	Input      *MigrateMySqlAzureDbForMySqlSyncTaskInputResponse `pulumi:"input"`
	Output     []interface{}                                     `pulumi:"output"`
	State      string                                            `pulumi:"state"`
	TaskType   string                                            `pulumi:"taskType"`
}





type MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                                    `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                        `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                             `pulumi:"errors"`
	Input      MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrInput `pulumi:"input"`
	Output     pulumi.ArrayInput                                        `pulumi:"output"`
	State      pulumi.StringInput                                       `pulumi:"state"`
	TaskType   pulumi.StringInput                                       `pulumi:"taskType"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) Input() MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse) *MigrateMySqlAzureDbForMySqlSyncTaskInputResponse {
		return v.Input
	}).(MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type MigrateOracleAzureDbForPostgreSqlSyncTaskProperties struct {
	ClientData map[string]string                            `pulumi:"clientData"`
	Input      *MigrateOracleAzureDbPostgreSqlSyncTaskInput `pulumi:"input"`
	TaskType   string                                       `pulumi:"taskType"`
}





type MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesInput interface {
	pulumi.Input

	ToMigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput() MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput
	ToMigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(context.Context) MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput
}

type MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                               `pulumi:"clientData"`
	Input      MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                                  `pulumi:"taskType"`
}

func (MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbForPostgreSqlSyncTaskProperties)(nil)).Elem()
}

func (i MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesArgs) ToMigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput() MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return i.ToMigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesArgs) ToMigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput)
}

type MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbForPostgreSqlSyncTaskProperties)(nil)).Elem()
}

func (o MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput) ToMigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput() MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return o
}

func (o MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput) ToMigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return o
}

func (o MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbForPostgreSqlSyncTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput) Input() MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbForPostgreSqlSyncTaskProperties) *MigrateOracleAzureDbPostgreSqlSyncTaskInput {
		return v.Input
	}).(MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput)
}

func (o MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbForPostgreSqlSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse struct {
	ClientData map[string]string                                    `pulumi:"clientData"`
	Commands   []interface{}                                        `pulumi:"commands"`
	Errors     []ODataErrorResponse                                 `pulumi:"errors"`
	Input      *MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse `pulumi:"input"`
	Output     []interface{}                                        `pulumi:"output"`
	State      string                                               `pulumi:"state"`
	TaskType   string                                               `pulumi:"taskType"`
}





type MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToMigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput
	ToMigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(context.Context) MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput
}

type MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                                       `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                           `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                                `pulumi:"errors"`
	Input      MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrInput `pulumi:"input"`
	Output     pulumi.ArrayInput                                           `pulumi:"output"`
	State      pulumi.StringInput                                          `pulumi:"state"`
	TaskType   pulumi.StringInput                                          `pulumi:"taskType"`
}

func (MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ToMigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return i.ToMigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ToMigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput)
}

type MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ToMigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ToMigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) map[string]string {
		return v.ClientData
	}).(pulumi.StringMapOutput)
}

func (o MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) []ODataErrorResponse {
		return v.Errors
	}).(ODataErrorResponseArrayOutput)
}

func (o MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Input() MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) *MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse {
		return v.Input
	}).(MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput)
}

func (o MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

func (o MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncDatabaseInput struct {
	CaseManipulation   *string           `pulumi:"caseManipulation"`
	MigrationSetting   map[string]string `pulumi:"migrationSetting"`
	Name               *string           `pulumi:"name"`
	SchemaName         *string           `pulumi:"schemaName"`
	SourceSetting      map[string]string `pulumi:"sourceSetting"`
	TableMap           map[string]string `pulumi:"tableMap"`
	TargetDatabaseName *string           `pulumi:"targetDatabaseName"`
	TargetSetting      map[string]string `pulumi:"targetSetting"`
}





type MigrateOracleAzureDbPostgreSqlSyncDatabaseInputInput interface {
	pulumi.Input

	ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput() MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput
	ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutputWithContext(context.Context) MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput
}

type MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArgs struct {
	CaseManipulation   pulumi.StringPtrInput `pulumi:"caseManipulation"`
	MigrationSetting   pulumi.StringMapInput `pulumi:"migrationSetting"`
	Name               pulumi.StringPtrInput `pulumi:"name"`
	SchemaName         pulumi.StringPtrInput `pulumi:"schemaName"`
	SourceSetting      pulumi.StringMapInput `pulumi:"sourceSetting"`
	TableMap           pulumi.StringMapInput `pulumi:"tableMap"`
	TargetDatabaseName pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
	TargetSetting      pulumi.StringMapInput `pulumi:"targetSetting"`
}

func (MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbPostgreSqlSyncDatabaseInput)(nil)).Elem()
}

func (i MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArgs) ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput() MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput {
	return i.ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutputWithContext(context.Background())
}

func (i MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArgs) ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput)
}





type MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayInput interface {
	pulumi.Input

	ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput() MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput
	ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutputWithContext(context.Context) MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput
}

type MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArray []MigrateOracleAzureDbPostgreSqlSyncDatabaseInputInput

func (MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateOracleAzureDbPostgreSqlSyncDatabaseInput)(nil)).Elem()
}

func (i MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArray) ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput() MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput {
	return i.ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutputWithContext(context.Background())
}

func (i MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArray) ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput struct{ *pulumi.OutputState }

func (MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbPostgreSqlSyncDatabaseInput)(nil)).Elem()
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput) ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput() MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput) ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput) CaseManipulation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncDatabaseInput) *string { return v.CaseManipulation }).(pulumi.StringPtrOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput) MigrationSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncDatabaseInput) map[string]string { return v.MigrationSetting }).(pulumi.StringMapOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncDatabaseInput) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput) SchemaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncDatabaseInput) *string { return v.SchemaName }).(pulumi.StringPtrOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput) SourceSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncDatabaseInput) map[string]string { return v.SourceSetting }).(pulumi.StringMapOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput) TableMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncDatabaseInput) map[string]string { return v.TableMap }).(pulumi.StringMapOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncDatabaseInput) *string { return v.TargetDatabaseName }).(pulumi.StringPtrOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput) TargetSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncDatabaseInput) map[string]string { return v.TargetSetting }).(pulumi.StringMapOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput struct{ *pulumi.OutputState }

func (MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateOracleAzureDbPostgreSqlSyncDatabaseInput)(nil)).Elem()
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput) ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput() MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput) ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput) Index(i pulumi.IntInput) MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateOracleAzureDbPostgreSqlSyncDatabaseInput {
		return vs[0].([]MigrateOracleAzureDbPostgreSqlSyncDatabaseInput)[vs[1].(int)]
	}).(MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponse struct {
	CaseManipulation   *string           `pulumi:"caseManipulation"`
	MigrationSetting   map[string]string `pulumi:"migrationSetting"`
	Name               *string           `pulumi:"name"`
	SchemaName         *string           `pulumi:"schemaName"`
	SourceSetting      map[string]string `pulumi:"sourceSetting"`
	TableMap           map[string]string `pulumi:"tableMap"`
	TargetDatabaseName *string           `pulumi:"targetDatabaseName"`
	TargetSetting      map[string]string `pulumi:"targetSetting"`
}





type MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseInput interface {
	pulumi.Input

	ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput() MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput
	ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutputWithContext(context.Context) MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput
}

type MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArgs struct {
	CaseManipulation   pulumi.StringPtrInput `pulumi:"caseManipulation"`
	MigrationSetting   pulumi.StringMapInput `pulumi:"migrationSetting"`
	Name               pulumi.StringPtrInput `pulumi:"name"`
	SchemaName         pulumi.StringPtrInput `pulumi:"schemaName"`
	SourceSetting      pulumi.StringMapInput `pulumi:"sourceSetting"`
	TableMap           pulumi.StringMapInput `pulumi:"tableMap"`
	TargetDatabaseName pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
	TargetSetting      pulumi.StringMapInput `pulumi:"targetSetting"`
}

func (MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (i MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArgs) ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput() MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput {
	return i.ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutputWithContext(context.Background())
}

func (i MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArgs) ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput)
}





type MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayInput interface {
	pulumi.Input

	ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput() MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput
	ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutputWithContext(context.Context) MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput
}

type MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArray []MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseInput

func (MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (i MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArray) ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput() MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput {
	return i.ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutputWithContext(context.Background())
}

func (i MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArray) ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput) ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput() MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput) ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput) CaseManipulation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponse) *string { return v.CaseManipulation }).(pulumi.StringPtrOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput) MigrationSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponse) map[string]string {
		return v.MigrationSetting
	}).(pulumi.StringMapOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput) SchemaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponse) *string { return v.SchemaName }).(pulumi.StringPtrOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput) SourceSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponse) map[string]string {
		return v.SourceSetting
	}).(pulumi.StringMapOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput) TableMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponse) map[string]string { return v.TableMap }).(pulumi.StringMapOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponse) *string { return v.TargetDatabaseName }).(pulumi.StringPtrOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput) TargetSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponse) map[string]string {
		return v.TargetSetting
	}).(pulumi.StringMapOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput struct{ *pulumi.OutputState }

func (MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput) ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput() MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput) ToMigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput) Index(i pulumi.IntInput) MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponse {
		return vs[0].([]MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponse)[vs[1].(int)]
	}).(MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncTaskInput struct {
	SelectedDatabases    []MigrateOracleAzureDbPostgreSqlSyncDatabaseInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo OracleConnectionInfo                              `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo PostgreSqlConnectionInfo                          `pulumi:"targetConnectionInfo"`
}





type MigrateOracleAzureDbPostgreSqlSyncTaskInputInput interface {
	pulumi.Input

	ToMigrateOracleAzureDbPostgreSqlSyncTaskInputOutput() MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput
	ToMigrateOracleAzureDbPostgreSqlSyncTaskInputOutputWithContext(context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput
}

type MigrateOracleAzureDbPostgreSqlSyncTaskInputArgs struct {
	SelectedDatabases    MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo OracleConnectionInfoInput                                 `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo PostgreSqlConnectionInfoInput                             `pulumi:"targetConnectionInfo"`
}

func (MigrateOracleAzureDbPostgreSqlSyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (i MigrateOracleAzureDbPostgreSqlSyncTaskInputArgs) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputOutput() MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput {
	return i.ToMigrateOracleAzureDbPostgreSqlSyncTaskInputOutputWithContext(context.Background())
}

func (i MigrateOracleAzureDbPostgreSqlSyncTaskInputArgs) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput)
}

func (i MigrateOracleAzureDbPostgreSqlSyncTaskInputArgs) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput() MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput {
	return i.ToMigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i MigrateOracleAzureDbPostgreSqlSyncTaskInputArgs) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput).ToMigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutputWithContext(ctx)
}









type MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrInput interface {
	pulumi.Input

	ToMigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput() MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput
	ToMigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutputWithContext(context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput
}

type migrateOracleAzureDbPostgreSqlSyncTaskInputPtrType MigrateOracleAzureDbPostgreSqlSyncTaskInputArgs

func MigrateOracleAzureDbPostgreSqlSyncTaskInputPtr(v *MigrateOracleAzureDbPostgreSqlSyncTaskInputArgs) MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrInput {
	return (*migrateOracleAzureDbPostgreSqlSyncTaskInputPtrType)(v)
}

func (*migrateOracleAzureDbPostgreSqlSyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateOracleAzureDbPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (i *migrateOracleAzureDbPostgreSqlSyncTaskInputPtrType) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput() MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput {
	return i.ToMigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *migrateOracleAzureDbPostgreSqlSyncTaskInputPtrType) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput struct{ *pulumi.OutputState }

func (MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputOutput() MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput() MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput {
	return o.ToMigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrateOracleAzureDbPostgreSqlSyncTaskInput) *MigrateOracleAzureDbPostgreSqlSyncTaskInput {
		return &v
	}).(MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput) SelectedDatabases() MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskInput) []MigrateOracleAzureDbPostgreSqlSyncDatabaseInput {
		return v.SelectedDatabases
	}).(MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput) SourceConnectionInfo() OracleConnectionInfoOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskInput) OracleConnectionInfo {
		return v.SourceConnectionInfo
	}).(OracleConnectionInfoOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput) TargetConnectionInfo() PostgreSqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskInput) PostgreSqlConnectionInfo {
		return v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateOracleAzureDbPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput() MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput) Elem() MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput {
	return o.ApplyT(func(v *MigrateOracleAzureDbPostgreSqlSyncTaskInput) MigrateOracleAzureDbPostgreSqlSyncTaskInput {
		if v != nil {
			return *v
		}
		var ret MigrateOracleAzureDbPostgreSqlSyncTaskInput
		return ret
	}).(MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput) SelectedDatabases() MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput {
	return o.ApplyT(func(v *MigrateOracleAzureDbPostgreSqlSyncTaskInput) []MigrateOracleAzureDbPostgreSqlSyncDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput) SourceConnectionInfo() OracleConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateOracleAzureDbPostgreSqlSyncTaskInput) *OracleConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(OracleConnectionInfoPtrOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput) TargetConnectionInfo() PostgreSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateOracleAzureDbPostgreSqlSyncTaskInput) *PostgreSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoPtrOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse struct {
	SelectedDatabases    []MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponse `pulumi:"selectedDatabases"`
	SourceConnectionInfo OracleConnectionInfoResponse                              `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo PostgreSqlConnectionInfoResponse                          `pulumi:"targetConnectionInfo"`
}





type MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseInput interface {
	pulumi.Input

	ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput() MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput
	ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutputWithContext(context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput
}

type MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseArgs struct {
	SelectedDatabases    MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo OracleConnectionInfoResponseInput                                 `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo PostgreSqlConnectionInfoResponseInput                             `pulumi:"targetConnectionInfo"`
}

func (MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseArgs) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput() MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput {
	return i.ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutputWithContext(context.Background())
}

func (i MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseArgs) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput)
}

func (i MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseArgs) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput() MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput {
	return i.ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseArgs) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput).ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx)
}









type MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput() MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput
	ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput
}

type migrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrType MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseArgs

func MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtr(v *MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseArgs) MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrInput {
	return (*migrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrType)(v)
}

func (*migrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i *migrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrType) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput() MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput {
	return i.ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *migrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrType) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput() MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput() MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse) *MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse {
		return &v
	}).(MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput) SelectedDatabases() MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse) []MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput) SourceConnectionInfo() OracleConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse) OracleConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(OracleConnectionInfoResponseOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput) TargetConnectionInfo() PostgreSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse) PostgreSqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoResponseOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput() MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput) Elem() MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput {
	return o.ApplyT(func(v *MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse) MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse
		return ret
	}).(MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput) SelectedDatabases() MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse) []MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput) SourceConnectionInfo() OracleConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse) *OracleConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(OracleConnectionInfoResponsePtrOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput) TargetConnectionInfo() PostgreSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse) *PostgreSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoResponsePtrOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponse struct {
	ErrorMessage *string                                   `pulumi:"errorMessage"`
	Events       []SyncMigrationDatabaseErrorEventResponse `pulumi:"events"`
	Id           string                                    `pulumi:"id"`
	ResultType   string                                    `pulumi:"resultType"`
}





type MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseInput interface {
	pulumi.Input

	ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput() MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput
	ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput
}

type MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseArgs struct {
	ErrorMessage pulumi.StringPtrInput                             `pulumi:"errorMessage"`
	Events       SyncMigrationDatabaseErrorEventResponseArrayInput `pulumi:"events"`
	Id           pulumi.StringInput                                `pulumi:"id"`
	ResultType   pulumi.StringInput                                `pulumi:"resultType"`
}

func (MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponse)(nil)).Elem()
}

func (i MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseArgs) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput() MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput {
	return i.ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(context.Background())
}

func (i MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseArgs) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput struct{ *pulumi.OutputState }

func (MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponse)(nil)).Elem()
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput() MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponse) *string {
		return v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) Events() SyncMigrationDatabaseErrorEventResponseArrayOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponse) []SyncMigrationDatabaseErrorEventResponse {
		return v.Events
	}).(SyncMigrationDatabaseErrorEventResponseArrayOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse struct {
	AppliedChanges          float64 `pulumi:"appliedChanges"`
	CdcDeleteCounter        float64 `pulumi:"cdcDeleteCounter"`
	CdcInsertCounter        float64 `pulumi:"cdcInsertCounter"`
	CdcUpdateCounter        float64 `pulumi:"cdcUpdateCounter"`
	DatabaseName            string  `pulumi:"databaseName"`
	EndedOn                 string  `pulumi:"endedOn"`
	FullLoadCompletedTables float64 `pulumi:"fullLoadCompletedTables"`
	FullLoadErroredTables   float64 `pulumi:"fullLoadErroredTables"`
	FullLoadLoadingTables   float64 `pulumi:"fullLoadLoadingTables"`
	FullLoadQueuedTables    float64 `pulumi:"fullLoadQueuedTables"`
	Id                      string  `pulumi:"id"`
	IncomingChanges         float64 `pulumi:"incomingChanges"`
	InitializationCompleted bool    `pulumi:"initializationCompleted"`
	Latency                 float64 `pulumi:"latency"`
	MigrationState          string  `pulumi:"migrationState"`
	ResultType              string  `pulumi:"resultType"`
	StartedOn               string  `pulumi:"startedOn"`
}





type MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseInput interface {
	pulumi.Input

	ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput() MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput
	ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput
}

type MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseArgs struct {
	AppliedChanges          pulumi.Float64Input `pulumi:"appliedChanges"`
	CdcDeleteCounter        pulumi.Float64Input `pulumi:"cdcDeleteCounter"`
	CdcInsertCounter        pulumi.Float64Input `pulumi:"cdcInsertCounter"`
	CdcUpdateCounter        pulumi.Float64Input `pulumi:"cdcUpdateCounter"`
	DatabaseName            pulumi.StringInput  `pulumi:"databaseName"`
	EndedOn                 pulumi.StringInput  `pulumi:"endedOn"`
	FullLoadCompletedTables pulumi.Float64Input `pulumi:"fullLoadCompletedTables"`
	FullLoadErroredTables   pulumi.Float64Input `pulumi:"fullLoadErroredTables"`
	FullLoadLoadingTables   pulumi.Float64Input `pulumi:"fullLoadLoadingTables"`
	FullLoadQueuedTables    pulumi.Float64Input `pulumi:"fullLoadQueuedTables"`
	Id                      pulumi.StringInput  `pulumi:"id"`
	IncomingChanges         pulumi.Float64Input `pulumi:"incomingChanges"`
	InitializationCompleted pulumi.BoolInput    `pulumi:"initializationCompleted"`
	Latency                 pulumi.Float64Input `pulumi:"latency"`
	MigrationState          pulumi.StringInput  `pulumi:"migrationState"`
	ResultType              pulumi.StringInput  `pulumi:"resultType"`
	StartedOn               pulumi.StringInput  `pulumi:"startedOn"`
}

func (MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (i MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseArgs) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput() MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput {
	return i.ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(context.Background())
}

func (i MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseArgs) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput() MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) AppliedChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.AppliedChanges
	}).(pulumi.Float64Output)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) CdcDeleteCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.CdcDeleteCounter
	}).(pulumi.Float64Output)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) CdcInsertCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.CdcInsertCounter
	}).(pulumi.Float64Output)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) CdcUpdateCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.CdcUpdateCounter
	}).(pulumi.Float64Output)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse) string {
		return v.DatabaseName
	}).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadCompletedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadCompletedTables
	}).(pulumi.Float64Output)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadErroredTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadErroredTables
	}).(pulumi.Float64Output)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadLoadingTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadLoadingTables
	}).(pulumi.Float64Output)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadQueuedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadQueuedTables
	}).(pulumi.Float64Output)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) IncomingChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.IncomingChanges
	}).(pulumi.Float64Output)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) InitializationCompleted() pulumi.BoolOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse) bool {
		return v.InitializationCompleted
	}).(pulumi.BoolOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) Latency() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 { return v.Latency }).(pulumi.Float64Output)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) MigrationState() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse) string {
		return v.MigrationState
	}).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponse struct {
	Error      ReportableExceptionResponse `pulumi:"error"`
	Id         string                      `pulumi:"id"`
	ResultType string                      `pulumi:"resultType"`
}





type MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseInput interface {
	pulumi.Input

	ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutput() MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutput
	ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutputWithContext(context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutput
}

type MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseArgs struct {
	Error      ReportableExceptionResponseInput `pulumi:"error"`
	Id         pulumi.StringInput               `pulumi:"id"`
	ResultType pulumi.StringInput               `pulumi:"resultType"`
}

func (MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponse)(nil)).Elem()
}

func (i MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseArgs) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutput() MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutput {
	return i.ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutputWithContext(context.Background())
}

func (i MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseArgs) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutput struct{ *pulumi.OutputState }

func (MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponse)(nil)).Elem()
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutput() MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutput) Error() ReportableExceptionResponseOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponse) ReportableExceptionResponse {
		return v.Error
	}).(ReportableExceptionResponseOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponse struct {
	EndedOn             string `pulumi:"endedOn"`
	Id                  string `pulumi:"id"`
	ResultType          string `pulumi:"resultType"`
	SourceServer        string `pulumi:"sourceServer"`
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	StartedOn           string `pulumi:"startedOn"`
	TargetServer        string `pulumi:"targetServer"`
	TargetServerVersion string `pulumi:"targetServerVersion"`
}





type MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseInput interface {
	pulumi.Input

	ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput() MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput
	ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutputWithContext(context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput
}

type MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseArgs struct {
	EndedOn             pulumi.StringInput `pulumi:"endedOn"`
	Id                  pulumi.StringInput `pulumi:"id"`
	ResultType          pulumi.StringInput `pulumi:"resultType"`
	SourceServer        pulumi.StringInput `pulumi:"sourceServer"`
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	StartedOn           pulumi.StringInput `pulumi:"startedOn"`
	TargetServer        pulumi.StringInput `pulumi:"targetServer"`
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (i MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseArgs) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput() MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput {
	return i.ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutputWithContext(context.Background())
}

func (i MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseArgs) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput() MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) SourceServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.SourceServer
	}).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.SourceServerVersion
	}).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) TargetServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.TargetServer
	}).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.TargetServerVersion
	}).(pulumi.StringOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponse struct {
	CdcDeleteCounter      float64 `pulumi:"cdcDeleteCounter"`
	CdcInsertCounter      float64 `pulumi:"cdcInsertCounter"`
	CdcUpdateCounter      float64 `pulumi:"cdcUpdateCounter"`
	DataErrorsCounter     float64 `pulumi:"dataErrorsCounter"`
	DatabaseName          string  `pulumi:"databaseName"`
	FullLoadEndedOn       string  `pulumi:"fullLoadEndedOn"`
	FullLoadEstFinishTime string  `pulumi:"fullLoadEstFinishTime"`
	FullLoadStartedOn     string  `pulumi:"fullLoadStartedOn"`
	FullLoadTotalRows     float64 `pulumi:"fullLoadTotalRows"`
	Id                    string  `pulumi:"id"`
	LastModifiedTime      string  `pulumi:"lastModifiedTime"`
	ResultType            string  `pulumi:"resultType"`
	State                 string  `pulumi:"state"`
	TableName             string  `pulumi:"tableName"`
	TotalChangesApplied   float64 `pulumi:"totalChangesApplied"`
}





type MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseInput interface {
	pulumi.Input

	ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput() MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput
	ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutputWithContext(context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput
}

type MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseArgs struct {
	CdcDeleteCounter      pulumi.Float64Input `pulumi:"cdcDeleteCounter"`
	CdcInsertCounter      pulumi.Float64Input `pulumi:"cdcInsertCounter"`
	CdcUpdateCounter      pulumi.Float64Input `pulumi:"cdcUpdateCounter"`
	DataErrorsCounter     pulumi.Float64Input `pulumi:"dataErrorsCounter"`
	DatabaseName          pulumi.StringInput  `pulumi:"databaseName"`
	FullLoadEndedOn       pulumi.StringInput  `pulumi:"fullLoadEndedOn"`
	FullLoadEstFinishTime pulumi.StringInput  `pulumi:"fullLoadEstFinishTime"`
	FullLoadStartedOn     pulumi.StringInput  `pulumi:"fullLoadStartedOn"`
	FullLoadTotalRows     pulumi.Float64Input `pulumi:"fullLoadTotalRows"`
	Id                    pulumi.StringInput  `pulumi:"id"`
	LastModifiedTime      pulumi.StringInput  `pulumi:"lastModifiedTime"`
	ResultType            pulumi.StringInput  `pulumi:"resultType"`
	State                 pulumi.StringInput  `pulumi:"state"`
	TableName             pulumi.StringInput  `pulumi:"tableName"`
	TotalChangesApplied   pulumi.Float64Input `pulumi:"totalChangesApplied"`
}

func (MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponse)(nil)).Elem()
}

func (i MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseArgs) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput() MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput {
	return i.ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutputWithContext(context.Background())
}

func (i MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseArgs) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput)
}

type MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponse)(nil)).Elem()
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput() MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput) ToMigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutputWithContext(ctx context.Context) MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput {
	return o
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput) CdcDeleteCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponse) float64 {
		return v.CdcDeleteCounter
	}).(pulumi.Float64Output)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput) CdcInsertCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponse) float64 {
		return v.CdcInsertCounter
	}).(pulumi.Float64Output)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput) CdcUpdateCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponse) float64 {
		return v.CdcUpdateCounter
	}).(pulumi.Float64Output)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput) DataErrorsCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponse) float64 {
		return v.DataErrorsCounter
	}).(pulumi.Float64Output)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput) FullLoadEndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponse) string {
		return v.FullLoadEndedOn
	}).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput) FullLoadEstFinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponse) string {
		return v.FullLoadEstFinishTime
	}).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput) FullLoadStartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponse) string {
		return v.FullLoadStartedOn
	}).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput) FullLoadTotalRows() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponse) float64 {
		return v.FullLoadTotalRows
	}).(pulumi.Float64Output)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponse) string {
		return v.LastModifiedTime
	}).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponse) string { return v.TableName }).(pulumi.StringOutput)
}

func (o MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput) TotalChangesApplied() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponse) float64 {
		return v.TotalChangesApplied
	}).(pulumi.Float64Output)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput struct {
	MigrationSetting   map[string]string                                             `pulumi:"migrationSetting"`
	Name               *string                                                       `pulumi:"name"`
	SelectedTables     []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInput `pulumi:"selectedTables"`
	SourceSetting      map[string]string                                             `pulumi:"sourceSetting"`
	TargetDatabaseName *string                                                       `pulumi:"targetDatabaseName"`
	TargetSetting      map[string]string                                             `pulumi:"targetSetting"`
}





type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArgs struct {
	MigrationSetting   pulumi.StringMapInput                                                 `pulumi:"migrationSetting"`
	Name               pulumi.StringPtrInput                                                 `pulumi:"name"`
	SelectedTables     MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayInput `pulumi:"selectedTables"`
	SourceSetting      pulumi.StringMapInput                                                 `pulumi:"sourceSetting"`
	TargetDatabaseName pulumi.StringPtrInput                                                 `pulumi:"targetDatabaseName"`
	TargetSetting      pulumi.StringMapInput                                                 `pulumi:"targetSetting"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput)
}





type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArray []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInput

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArray) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArray) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput) MigrationSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput) map[string]string {
		return v.MigrationSetting
	}).(pulumi.StringMapOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput) SelectedTables() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput) []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInput {
		return v.SelectedTables
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput) SourceSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput) map[string]string {
		return v.SourceSetting
	}).(pulumi.StringMapOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput) *string { return v.TargetDatabaseName }).(pulumi.StringPtrOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput) TargetSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput) map[string]string {
		return v.TargetSetting
	}).(pulumi.StringMapOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput) Index(i pulumi.IntInput) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput {
		return vs[0].([]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput)[vs[1].(int)]
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse struct {
	MigrationSetting   map[string]string                                                     `pulumi:"migrationSetting"`
	Name               *string                                                               `pulumi:"name"`
	SelectedTables     []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponse `pulumi:"selectedTables"`
	SourceSetting      map[string]string                                                     `pulumi:"sourceSetting"`
	TargetDatabaseName *string                                                               `pulumi:"targetDatabaseName"`
	TargetSetting      map[string]string                                                     `pulumi:"targetSetting"`
}





type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArgs struct {
	MigrationSetting   pulumi.StringMapInput                                                         `pulumi:"migrationSetting"`
	Name               pulumi.StringPtrInput                                                         `pulumi:"name"`
	SelectedTables     MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayInput `pulumi:"selectedTables"`
	SourceSetting      pulumi.StringMapInput                                                         `pulumi:"sourceSetting"`
	TargetDatabaseName pulumi.StringPtrInput                                                         `pulumi:"targetDatabaseName"`
	TargetSetting      pulumi.StringMapInput                                                         `pulumi:"targetSetting"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput)
}





type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArray []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseInput

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArray) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArray) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput) MigrationSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse) map[string]string {
		return v.MigrationSetting
	}).(pulumi.StringMapOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput) SelectedTables() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse) []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponse {
		return v.SelectedTables
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput) SourceSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse) map[string]string {
		return v.SourceSetting
	}).(pulumi.StringMapOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse) *string {
		return v.TargetDatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput) TargetSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse) map[string]string {
		return v.TargetSetting
	}).(pulumi.StringMapOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput) Index(i pulumi.IntInput) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse {
		return vs[0].([]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse)[vs[1].(int)]
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInput struct {
	Name *string `pulumi:"name"`
}





type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInput)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutput)
}





type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArray []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputInput

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInput)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArray) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArray) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInput)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInput) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInput)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutput) Index(i pulumi.IntInput) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInput {
		return vs[0].([]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInput)[vs[1].(int)]
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponse struct {
	Name *string `pulumi:"name"`
}





type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutput)
}





type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArray []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseInput

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArray) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArray) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutput) Index(i pulumi.IntInput) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponse {
		return vs[0].([]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponse)[vs[1].(int)]
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput struct {
	SelectedDatabases    []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo PostgreSqlConnectionInfo                                 `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo PostgreSqlConnectionInfo                                 `pulumi:"targetConnectionInfo"`
}





type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs struct {
	SelectedDatabases    MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo PostgreSqlConnectionInfoInput                                    `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo PostgreSqlConnectionInfoInput                                    `pulumi:"targetConnectionInfo"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput)
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput).ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx)
}









type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput
}

type migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrType MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs

func MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtr(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrInput {
	return (*migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrType)(v)
}

func (*migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (i *migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrType) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrType) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput) *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput {
		return &v
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput) SelectedDatabases() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput) []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput {
		return v.SelectedDatabases
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput) SourceConnectionInfo() PostgreSqlConnectionInfoOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput) PostgreSqlConnectionInfo {
		return v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput) TargetConnectionInfo() PostgreSqlConnectionInfoOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput) PostgreSqlConnectionInfo {
		return v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput) Elem() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput {
		if v != nil {
			return *v
		}
		var ret MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput
		return ret
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput) SelectedDatabases() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput) []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput) SourceConnectionInfo() PostgreSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput) *PostgreSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoPtrOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput) TargetConnectionInfo() PostgreSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput) *PostgreSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoPtrOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse struct {
	SelectedDatabases    []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse `pulumi:"selectedDatabases"`
	SourceConnectionInfo PostgreSqlConnectionInfoResponse                                 `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo PostgreSqlConnectionInfoResponse                                 `pulumi:"targetConnectionInfo"`
}





type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs struct {
	SelectedDatabases    MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo PostgreSqlConnectionInfoResponseInput                                    `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo PostgreSqlConnectionInfoResponseInput                                    `pulumi:"targetConnectionInfo"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput)
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput).ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx)
}









type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput
}

type migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrType MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs

func MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtr(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrInput {
	return (*migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrType)(v)
}

func (*migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i *migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrType) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrType) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse) *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse {
		return &v
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput) SelectedDatabases() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse) []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput) SourceConnectionInfo() PostgreSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse) PostgreSqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoResponseOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput) TargetConnectionInfo() PostgreSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse) PostgreSqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) Elem() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse
		return ret
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) SelectedDatabases() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse) []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) SourceConnectionInfo() PostgreSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse) *PostgreSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoResponsePtrOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) TargetConnectionInfo() PostgreSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse) *PostgreSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoResponsePtrOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponse struct {
	ErrorMessage *string                                   `pulumi:"errorMessage"`
	Events       []SyncMigrationDatabaseErrorEventResponse `pulumi:"events"`
	Id           string                                    `pulumi:"id"`
	ResultType   string                                    `pulumi:"resultType"`
}





type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseArgs struct {
	ErrorMessage pulumi.StringPtrInput                             `pulumi:"errorMessage"`
	Events       SyncMigrationDatabaseErrorEventResponseArrayInput `pulumi:"events"`
	Id           pulumi.StringInput                                `pulumi:"id"`
	ResultType   pulumi.StringInput                                `pulumi:"resultType"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponse) *string {
		return v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) Events() SyncMigrationDatabaseErrorEventResponseArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponse) []SyncMigrationDatabaseErrorEventResponse {
		return v.Events
	}).(SyncMigrationDatabaseErrorEventResponseArrayOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse struct {
	AppliedChanges          float64 `pulumi:"appliedChanges"`
	CdcDeleteCounter        float64 `pulumi:"cdcDeleteCounter"`
	CdcInsertCounter        float64 `pulumi:"cdcInsertCounter"`
	CdcUpdateCounter        float64 `pulumi:"cdcUpdateCounter"`
	DatabaseName            string  `pulumi:"databaseName"`
	EndedOn                 string  `pulumi:"endedOn"`
	FullLoadCompletedTables float64 `pulumi:"fullLoadCompletedTables"`
	FullLoadErroredTables   float64 `pulumi:"fullLoadErroredTables"`
	FullLoadLoadingTables   float64 `pulumi:"fullLoadLoadingTables"`
	FullLoadQueuedTables    float64 `pulumi:"fullLoadQueuedTables"`
	Id                      string  `pulumi:"id"`
	IncomingChanges         float64 `pulumi:"incomingChanges"`
	InitializationCompleted bool    `pulumi:"initializationCompleted"`
	Latency                 float64 `pulumi:"latency"`
	MigrationState          string  `pulumi:"migrationState"`
	ResultType              string  `pulumi:"resultType"`
	StartedOn               string  `pulumi:"startedOn"`
}





type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseArgs struct {
	AppliedChanges          pulumi.Float64Input `pulumi:"appliedChanges"`
	CdcDeleteCounter        pulumi.Float64Input `pulumi:"cdcDeleteCounter"`
	CdcInsertCounter        pulumi.Float64Input `pulumi:"cdcInsertCounter"`
	CdcUpdateCounter        pulumi.Float64Input `pulumi:"cdcUpdateCounter"`
	DatabaseName            pulumi.StringInput  `pulumi:"databaseName"`
	EndedOn                 pulumi.StringInput  `pulumi:"endedOn"`
	FullLoadCompletedTables pulumi.Float64Input `pulumi:"fullLoadCompletedTables"`
	FullLoadErroredTables   pulumi.Float64Input `pulumi:"fullLoadErroredTables"`
	FullLoadLoadingTables   pulumi.Float64Input `pulumi:"fullLoadLoadingTables"`
	FullLoadQueuedTables    pulumi.Float64Input `pulumi:"fullLoadQueuedTables"`
	Id                      pulumi.StringInput  `pulumi:"id"`
	IncomingChanges         pulumi.Float64Input `pulumi:"incomingChanges"`
	InitializationCompleted pulumi.BoolInput    `pulumi:"initializationCompleted"`
	Latency                 pulumi.Float64Input `pulumi:"latency"`
	MigrationState          pulumi.StringInput  `pulumi:"migrationState"`
	ResultType              pulumi.StringInput  `pulumi:"resultType"`
	StartedOn               pulumi.StringInput  `pulumi:"startedOn"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) AppliedChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.AppliedChanges
	}).(pulumi.Float64Output)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) CdcDeleteCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.CdcDeleteCounter
	}).(pulumi.Float64Output)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) CdcInsertCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.CdcInsertCounter
	}).(pulumi.Float64Output)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) CdcUpdateCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.CdcUpdateCounter
	}).(pulumi.Float64Output)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) string {
		return v.DatabaseName
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) string {
		return v.EndedOn
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadCompletedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadCompletedTables
	}).(pulumi.Float64Output)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadErroredTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadErroredTables
	}).(pulumi.Float64Output)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadLoadingTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadLoadingTables
	}).(pulumi.Float64Output)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadQueuedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadQueuedTables
	}).(pulumi.Float64Output)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) IncomingChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.IncomingChanges
	}).(pulumi.Float64Output)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) InitializationCompleted() pulumi.BoolOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) bool {
		return v.InitializationCompleted
	}).(pulumi.BoolOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) Latency() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.Latency
	}).(pulumi.Float64Output)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) MigrationState() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) string {
		return v.MigrationState
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) string {
		return v.StartedOn
	}).(pulumi.StringOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponse struct {
	Error      ReportableExceptionResponse `pulumi:"error"`
	Id         string                      `pulumi:"id"`
	ResultType string                      `pulumi:"resultType"`
}





type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseArgs struct {
	Error      ReportableExceptionResponseInput `pulumi:"error"`
	Id         pulumi.StringInput               `pulumi:"id"`
	ResultType pulumi.StringInput               `pulumi:"resultType"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput) Error() ReportableExceptionResponseOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponse) ReportableExceptionResponse {
		return v.Error
	}).(ReportableExceptionResponseOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse struct {
	EndedOn             string `pulumi:"endedOn"`
	Id                  string `pulumi:"id"`
	ResultType          string `pulumi:"resultType"`
	SourceServer        string `pulumi:"sourceServer"`
	SourceServerType    string `pulumi:"sourceServerType"`
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	StartedOn           string `pulumi:"startedOn"`
	State               string `pulumi:"state"`
	TargetServer        string `pulumi:"targetServer"`
	TargetServerType    string `pulumi:"targetServerType"`
	TargetServerVersion string `pulumi:"targetServerVersion"`
}





type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseArgs struct {
	EndedOn             pulumi.StringInput `pulumi:"endedOn"`
	Id                  pulumi.StringInput `pulumi:"id"`
	ResultType          pulumi.StringInput `pulumi:"resultType"`
	SourceServer        pulumi.StringInput `pulumi:"sourceServer"`
	SourceServerType    pulumi.StringInput `pulumi:"sourceServerType"`
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	StartedOn           pulumi.StringInput `pulumi:"startedOn"`
	State               pulumi.StringInput `pulumi:"state"`
	TargetServer        pulumi.StringInput `pulumi:"targetServer"`
	TargetServerType    pulumi.StringInput `pulumi:"targetServerType"`
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.EndedOn
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) SourceServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.SourceServer
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) SourceServerType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.SourceServerType
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.SourceServerVersion
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.StartedOn
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.State
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) TargetServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.TargetServer
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) TargetServerType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.TargetServerType
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.TargetServerVersion
	}).(pulumi.StringOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse struct {
	CdcDeleteCounter      float64 `pulumi:"cdcDeleteCounter"`
	CdcInsertCounter      float64 `pulumi:"cdcInsertCounter"`
	CdcUpdateCounter      float64 `pulumi:"cdcUpdateCounter"`
	DataErrorsCounter     float64 `pulumi:"dataErrorsCounter"`
	DatabaseName          string  `pulumi:"databaseName"`
	FullLoadEndedOn       string  `pulumi:"fullLoadEndedOn"`
	FullLoadEstFinishTime string  `pulumi:"fullLoadEstFinishTime"`
	FullLoadStartedOn     string  `pulumi:"fullLoadStartedOn"`
	FullLoadTotalRows     float64 `pulumi:"fullLoadTotalRows"`
	Id                    string  `pulumi:"id"`
	LastModifiedTime      string  `pulumi:"lastModifiedTime"`
	ResultType            string  `pulumi:"resultType"`
	State                 string  `pulumi:"state"`
	TableName             string  `pulumi:"tableName"`
	TotalChangesApplied   float64 `pulumi:"totalChangesApplied"`
}





type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseArgs struct {
	CdcDeleteCounter      pulumi.Float64Input `pulumi:"cdcDeleteCounter"`
	CdcInsertCounter      pulumi.Float64Input `pulumi:"cdcInsertCounter"`
	CdcUpdateCounter      pulumi.Float64Input `pulumi:"cdcUpdateCounter"`
	DataErrorsCounter     pulumi.Float64Input `pulumi:"dataErrorsCounter"`
	DatabaseName          pulumi.StringInput  `pulumi:"databaseName"`
	FullLoadEndedOn       pulumi.StringInput  `pulumi:"fullLoadEndedOn"`
	FullLoadEstFinishTime pulumi.StringInput  `pulumi:"fullLoadEstFinishTime"`
	FullLoadStartedOn     pulumi.StringInput  `pulumi:"fullLoadStartedOn"`
	FullLoadTotalRows     pulumi.Float64Input `pulumi:"fullLoadTotalRows"`
	Id                    pulumi.StringInput  `pulumi:"id"`
	LastModifiedTime      pulumi.StringInput  `pulumi:"lastModifiedTime"`
	ResultType            pulumi.StringInput  `pulumi:"resultType"`
	State                 pulumi.StringInput  `pulumi:"state"`
	TableName             pulumi.StringInput  `pulumi:"tableName"`
	TotalChangesApplied   pulumi.Float64Input `pulumi:"totalChangesApplied"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) CdcDeleteCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) float64 {
		return v.CdcDeleteCounter
	}).(pulumi.Float64Output)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) CdcInsertCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) float64 {
		return v.CdcInsertCounter
	}).(pulumi.Float64Output)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) CdcUpdateCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) float64 {
		return v.CdcUpdateCounter
	}).(pulumi.Float64Output)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) DataErrorsCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) float64 {
		return v.DataErrorsCounter
	}).(pulumi.Float64Output)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) string {
		return v.DatabaseName
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) FullLoadEndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) string {
		return v.FullLoadEndedOn
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) FullLoadEstFinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) string {
		return v.FullLoadEstFinishTime
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) FullLoadStartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) string {
		return v.FullLoadStartedOn
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) FullLoadTotalRows() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) float64 {
		return v.FullLoadTotalRows
	}).(pulumi.Float64Output)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) string {
		return v.LastModifiedTime
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) string {
		return v.TableName
	}).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) TotalChangesApplied() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) float64 {
		return v.TotalChangesApplied
	}).(pulumi.Float64Output)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties struct {
	ClientData map[string]string                                   `pulumi:"clientData"`
	Input      *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput `pulumi:"input"`
	TaskType   string                                              `pulumi:"taskType"`
}





type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                                      `pulumi:"clientData"`
	Input      MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                                         `pulumi:"taskType"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput) Input() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties) *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput {
		return v.Input
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse struct {
	ClientData map[string]string                                           `pulumi:"clientData"`
	Commands   []interface{}                                               `pulumi:"commands"`
	Errors     []ODataErrorResponse                                        `pulumi:"errors"`
	Input      *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse `pulumi:"input"`
	Output     []interface{}                                               `pulumi:"output"`
	State      string                                                      `pulumi:"state"`
	TaskType   string                                                      `pulumi:"taskType"`
}





type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                                              `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                                  `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                                       `pulumi:"errors"`
	Input      MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrInput `pulumi:"input"`
	Output     pulumi.ArrayInput                                                  `pulumi:"output"`
	State      pulumi.StringInput                                                 `pulumi:"state"`
	TaskType   pulumi.StringInput                                                 `pulumi:"taskType"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse) map[string]string {
		return v.ClientData
	}).(pulumi.StringMapOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse) []interface{} {
		return v.Commands
	}).(pulumi.ArrayOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse) []ODataErrorResponse {
		return v.Errors
	}).(ODataErrorResponseArrayOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Input() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse) *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse {
		return v.Input
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbDatabaseInput struct {
	MakeSourceDbReadOnly *bool             `pulumi:"makeSourceDbReadOnly"`
	Name                 *string           `pulumi:"name"`
	TableMap             map[string]string `pulumi:"tableMap"`
	TargetDatabaseName   *string           `pulumi:"targetDatabaseName"`
}





type MigrateSqlServerSqlDbDatabaseInputInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbDatabaseInputOutput() MigrateSqlServerSqlDbDatabaseInputOutput
	ToMigrateSqlServerSqlDbDatabaseInputOutputWithContext(context.Context) MigrateSqlServerSqlDbDatabaseInputOutput
}

type MigrateSqlServerSqlDbDatabaseInputArgs struct {
	MakeSourceDbReadOnly pulumi.BoolPtrInput   `pulumi:"makeSourceDbReadOnly"`
	Name                 pulumi.StringPtrInput `pulumi:"name"`
	TableMap             pulumi.StringMapInput `pulumi:"tableMap"`
	TargetDatabaseName   pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
}

func (MigrateSqlServerSqlDbDatabaseInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbDatabaseInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbDatabaseInputArgs) ToMigrateSqlServerSqlDbDatabaseInputOutput() MigrateSqlServerSqlDbDatabaseInputOutput {
	return i.ToMigrateSqlServerSqlDbDatabaseInputOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbDatabaseInputArgs) ToMigrateSqlServerSqlDbDatabaseInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbDatabaseInputOutput)
}





type MigrateSqlServerSqlDbDatabaseInputArrayInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbDatabaseInputArrayOutput() MigrateSqlServerSqlDbDatabaseInputArrayOutput
	ToMigrateSqlServerSqlDbDatabaseInputArrayOutputWithContext(context.Context) MigrateSqlServerSqlDbDatabaseInputArrayOutput
}

type MigrateSqlServerSqlDbDatabaseInputArray []MigrateSqlServerSqlDbDatabaseInputInput

func (MigrateSqlServerSqlDbDatabaseInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbDatabaseInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbDatabaseInputArray) ToMigrateSqlServerSqlDbDatabaseInputArrayOutput() MigrateSqlServerSqlDbDatabaseInputArrayOutput {
	return i.ToMigrateSqlServerSqlDbDatabaseInputArrayOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbDatabaseInputArray) ToMigrateSqlServerSqlDbDatabaseInputArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbDatabaseInputArrayOutput)
}

type MigrateSqlServerSqlDbDatabaseInputOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbDatabaseInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbDatabaseInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbDatabaseInputOutput) ToMigrateSqlServerSqlDbDatabaseInputOutput() MigrateSqlServerSqlDbDatabaseInputOutput {
	return o
}

func (o MigrateSqlServerSqlDbDatabaseInputOutput) ToMigrateSqlServerSqlDbDatabaseInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputOutput {
	return o
}

func (o MigrateSqlServerSqlDbDatabaseInputOutput) MakeSourceDbReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInput) *bool { return v.MakeSourceDbReadOnly }).(pulumi.BoolPtrOutput)
}

func (o MigrateSqlServerSqlDbDatabaseInputOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInput) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlDbDatabaseInputOutput) TableMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInput) map[string]string { return v.TableMap }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlDbDatabaseInputOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInput) *string { return v.TargetDatabaseName }).(pulumi.StringPtrOutput)
}

type MigrateSqlServerSqlDbDatabaseInputArrayOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbDatabaseInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbDatabaseInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbDatabaseInputArrayOutput) ToMigrateSqlServerSqlDbDatabaseInputArrayOutput() MigrateSqlServerSqlDbDatabaseInputArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbDatabaseInputArrayOutput) ToMigrateSqlServerSqlDbDatabaseInputArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbDatabaseInputArrayOutput) Index(i pulumi.IntInput) MigrateSqlServerSqlDbDatabaseInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateSqlServerSqlDbDatabaseInput {
		return vs[0].([]MigrateSqlServerSqlDbDatabaseInput)[vs[1].(int)]
	}).(MigrateSqlServerSqlDbDatabaseInputOutput)
}

type MigrateSqlServerSqlDbDatabaseInputResponse struct {
	MakeSourceDbReadOnly *bool             `pulumi:"makeSourceDbReadOnly"`
	Name                 *string           `pulumi:"name"`
	TableMap             map[string]string `pulumi:"tableMap"`
	TargetDatabaseName   *string           `pulumi:"targetDatabaseName"`
}





type MigrateSqlServerSqlDbDatabaseInputResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbDatabaseInputResponseOutput() MigrateSqlServerSqlDbDatabaseInputResponseOutput
	ToMigrateSqlServerSqlDbDatabaseInputResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbDatabaseInputResponseOutput
}

type MigrateSqlServerSqlDbDatabaseInputResponseArgs struct {
	MakeSourceDbReadOnly pulumi.BoolPtrInput   `pulumi:"makeSourceDbReadOnly"`
	Name                 pulumi.StringPtrInput `pulumi:"name"`
	TableMap             pulumi.StringMapInput `pulumi:"tableMap"`
	TargetDatabaseName   pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
}

func (MigrateSqlServerSqlDbDatabaseInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbDatabaseInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbDatabaseInputResponseArgs) ToMigrateSqlServerSqlDbDatabaseInputResponseOutput() MigrateSqlServerSqlDbDatabaseInputResponseOutput {
	return i.ToMigrateSqlServerSqlDbDatabaseInputResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbDatabaseInputResponseArgs) ToMigrateSqlServerSqlDbDatabaseInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbDatabaseInputResponseOutput)
}





type MigrateSqlServerSqlDbDatabaseInputResponseArrayInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbDatabaseInputResponseArrayOutput() MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput
	ToMigrateSqlServerSqlDbDatabaseInputResponseArrayOutputWithContext(context.Context) MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput
}

type MigrateSqlServerSqlDbDatabaseInputResponseArray []MigrateSqlServerSqlDbDatabaseInputResponseInput

func (MigrateSqlServerSqlDbDatabaseInputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbDatabaseInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbDatabaseInputResponseArray) ToMigrateSqlServerSqlDbDatabaseInputResponseArrayOutput() MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput {
	return i.ToMigrateSqlServerSqlDbDatabaseInputResponseArrayOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbDatabaseInputResponseArray) ToMigrateSqlServerSqlDbDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput)
}

type MigrateSqlServerSqlDbDatabaseInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbDatabaseInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbDatabaseInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbDatabaseInputResponseOutput) ToMigrateSqlServerSqlDbDatabaseInputResponseOutput() MigrateSqlServerSqlDbDatabaseInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbDatabaseInputResponseOutput) ToMigrateSqlServerSqlDbDatabaseInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbDatabaseInputResponseOutput) MakeSourceDbReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInputResponse) *bool { return v.MakeSourceDbReadOnly }).(pulumi.BoolPtrOutput)
}

func (o MigrateSqlServerSqlDbDatabaseInputResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInputResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlDbDatabaseInputResponseOutput) TableMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInputResponse) map[string]string { return v.TableMap }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlDbDatabaseInputResponseOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInputResponse) *string { return v.TargetDatabaseName }).(pulumi.StringPtrOutput)
}

type MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbDatabaseInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput) ToMigrateSqlServerSqlDbDatabaseInputResponseArrayOutput() MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput) ToMigrateSqlServerSqlDbDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput) Index(i pulumi.IntInput) MigrateSqlServerSqlDbDatabaseInputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateSqlServerSqlDbDatabaseInputResponse {
		return vs[0].([]MigrateSqlServerSqlDbDatabaseInputResponse)[vs[1].(int)]
	}).(MigrateSqlServerSqlDbDatabaseInputResponseOutput)
}

type MigrateSqlServerSqlDbSyncDatabaseInput struct {
	Id                 *string           `pulumi:"id"`
	MigrationSetting   map[string]string `pulumi:"migrationSetting"`
	Name               *string           `pulumi:"name"`
	SchemaName         *string           `pulumi:"schemaName"`
	SourceSetting      map[string]string `pulumi:"sourceSetting"`
	TableMap           map[string]string `pulumi:"tableMap"`
	TargetDatabaseName *string           `pulumi:"targetDatabaseName"`
	TargetSetting      map[string]string `pulumi:"targetSetting"`
}





type MigrateSqlServerSqlDbSyncDatabaseInputInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncDatabaseInputOutput() MigrateSqlServerSqlDbSyncDatabaseInputOutput
	ToMigrateSqlServerSqlDbSyncDatabaseInputOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncDatabaseInputOutput
}

type MigrateSqlServerSqlDbSyncDatabaseInputArgs struct {
	Id                 pulumi.StringPtrInput `pulumi:"id"`
	MigrationSetting   pulumi.StringMapInput `pulumi:"migrationSetting"`
	Name               pulumi.StringPtrInput `pulumi:"name"`
	SchemaName         pulumi.StringPtrInput `pulumi:"schemaName"`
	SourceSetting      pulumi.StringMapInput `pulumi:"sourceSetting"`
	TableMap           pulumi.StringMapInput `pulumi:"tableMap"`
	TargetDatabaseName pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
	TargetSetting      pulumi.StringMapInput `pulumi:"targetSetting"`
}

func (MigrateSqlServerSqlDbSyncDatabaseInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncDatabaseInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputArgs) ToMigrateSqlServerSqlDbSyncDatabaseInputOutput() MigrateSqlServerSqlDbSyncDatabaseInputOutput {
	return i.ToMigrateSqlServerSqlDbSyncDatabaseInputOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputArgs) ToMigrateSqlServerSqlDbSyncDatabaseInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncDatabaseInputOutput)
}





type MigrateSqlServerSqlDbSyncDatabaseInputArrayInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncDatabaseInputArrayOutput() MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput
	ToMigrateSqlServerSqlDbSyncDatabaseInputArrayOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput
}

type MigrateSqlServerSqlDbSyncDatabaseInputArray []MigrateSqlServerSqlDbSyncDatabaseInputInput

func (MigrateSqlServerSqlDbSyncDatabaseInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbSyncDatabaseInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputArray) ToMigrateSqlServerSqlDbSyncDatabaseInputArrayOutput() MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput {
	return i.ToMigrateSqlServerSqlDbSyncDatabaseInputArrayOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputArray) ToMigrateSqlServerSqlDbSyncDatabaseInputArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput)
}

type MigrateSqlServerSqlDbSyncDatabaseInputOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncDatabaseInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncDatabaseInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputOutput() MigrateSqlServerSqlDbSyncDatabaseInputOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInput) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) MigrationSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInput) map[string]string { return v.MigrationSetting }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInput) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) SchemaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInput) *string { return v.SchemaName }).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) SourceSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInput) map[string]string { return v.SourceSetting }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) TableMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInput) map[string]string { return v.TableMap }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInput) *string { return v.TargetDatabaseName }).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) TargetSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInput) map[string]string { return v.TargetSetting }).(pulumi.StringMapOutput)
}

type MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbSyncDatabaseInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputArrayOutput() MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput) Index(i pulumi.IntInput) MigrateSqlServerSqlDbSyncDatabaseInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateSqlServerSqlDbSyncDatabaseInput {
		return vs[0].([]MigrateSqlServerSqlDbSyncDatabaseInput)[vs[1].(int)]
	}).(MigrateSqlServerSqlDbSyncDatabaseInputOutput)
}

type MigrateSqlServerSqlDbSyncDatabaseInputResponse struct {
	Id                 *string           `pulumi:"id"`
	MigrationSetting   map[string]string `pulumi:"migrationSetting"`
	Name               *string           `pulumi:"name"`
	SchemaName         *string           `pulumi:"schemaName"`
	SourceSetting      map[string]string `pulumi:"sourceSetting"`
	TableMap           map[string]string `pulumi:"tableMap"`
	TargetDatabaseName *string           `pulumi:"targetDatabaseName"`
	TargetSetting      map[string]string `pulumi:"targetSetting"`
}





type MigrateSqlServerSqlDbSyncDatabaseInputResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncDatabaseInputResponseOutput() MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput
	ToMigrateSqlServerSqlDbSyncDatabaseInputResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput
}

type MigrateSqlServerSqlDbSyncDatabaseInputResponseArgs struct {
	Id                 pulumi.StringPtrInput `pulumi:"id"`
	MigrationSetting   pulumi.StringMapInput `pulumi:"migrationSetting"`
	Name               pulumi.StringPtrInput `pulumi:"name"`
	SchemaName         pulumi.StringPtrInput `pulumi:"schemaName"`
	SourceSetting      pulumi.StringMapInput `pulumi:"sourceSetting"`
	TableMap           pulumi.StringMapInput `pulumi:"tableMap"`
	TargetDatabaseName pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
	TargetSetting      pulumi.StringMapInput `pulumi:"targetSetting"`
}

func (MigrateSqlServerSqlDbSyncDatabaseInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncDatabaseInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputResponseArgs) ToMigrateSqlServerSqlDbSyncDatabaseInputResponseOutput() MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncDatabaseInputResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputResponseArgs) ToMigrateSqlServerSqlDbSyncDatabaseInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput)
}





type MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput() MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput
	ToMigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput
}

type MigrateSqlServerSqlDbSyncDatabaseInputResponseArray []MigrateSqlServerSqlDbSyncDatabaseInputResponseInput

func (MigrateSqlServerSqlDbSyncDatabaseInputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbSyncDatabaseInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputResponseArray) ToMigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput() MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput {
	return i.ToMigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputResponseArray) ToMigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput)
}

type MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncDatabaseInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputResponseOutput() MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) MigrationSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputResponse) map[string]string { return v.MigrationSetting }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) SchemaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputResponse) *string { return v.SchemaName }).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) SourceSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputResponse) map[string]string { return v.SourceSetting }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) TableMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputResponse) map[string]string { return v.TableMap }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputResponse) *string { return v.TargetDatabaseName }).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) TargetSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputResponse) map[string]string { return v.TargetSetting }).(pulumi.StringMapOutput)
}

type MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbSyncDatabaseInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput() MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput) Index(i pulumi.IntInput) MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateSqlServerSqlDbSyncDatabaseInputResponse {
		return vs[0].([]MigrateSqlServerSqlDbSyncDatabaseInputResponse)[vs[1].(int)]
	}).(MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput)
}

type MigrateSqlServerSqlDbSyncTaskInput struct {
	SelectedDatabases    []MigrateSqlServerSqlDbSyncDatabaseInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfo                        `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfo                        `pulumi:"targetConnectionInfo"`
	ValidationOptions    *MigrationValidationOptions              `pulumi:"validationOptions"`
}





type MigrateSqlServerSqlDbSyncTaskInputInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskInputOutput() MigrateSqlServerSqlDbSyncTaskInputOutput
	ToMigrateSqlServerSqlDbSyncTaskInputOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskInputOutput
}

type MigrateSqlServerSqlDbSyncTaskInputArgs struct {
	SelectedDatabases    MigrateSqlServerSqlDbSyncDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfoInput                           `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfoInput                           `pulumi:"targetConnectionInfo"`
	ValidationOptions    MigrationValidationOptionsPtrInput               `pulumi:"validationOptions"`
}

func (MigrateSqlServerSqlDbSyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskInputArgs) ToMigrateSqlServerSqlDbSyncTaskInputOutput() MigrateSqlServerSqlDbSyncTaskInputOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskInputOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskInputArgs) ToMigrateSqlServerSqlDbSyncTaskInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskInputOutput)
}

func (i MigrateSqlServerSqlDbSyncTaskInputArgs) ToMigrateSqlServerSqlDbSyncTaskInputPtrOutput() MigrateSqlServerSqlDbSyncTaskInputPtrOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskInputArgs) ToMigrateSqlServerSqlDbSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskInputOutput).ToMigrateSqlServerSqlDbSyncTaskInputPtrOutputWithContext(ctx)
}









type MigrateSqlServerSqlDbSyncTaskInputPtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskInputPtrOutput() MigrateSqlServerSqlDbSyncTaskInputPtrOutput
	ToMigrateSqlServerSqlDbSyncTaskInputPtrOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskInputPtrOutput
}

type migrateSqlServerSqlDbSyncTaskInputPtrType MigrateSqlServerSqlDbSyncTaskInputArgs

func MigrateSqlServerSqlDbSyncTaskInputPtr(v *MigrateSqlServerSqlDbSyncTaskInputArgs) MigrateSqlServerSqlDbSyncTaskInputPtrInput {
	return (*migrateSqlServerSqlDbSyncTaskInputPtrType)(v)
}

func (*migrateSqlServerSqlDbSyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbSyncTaskInput)(nil)).Elem()
}

func (i *migrateSqlServerSqlDbSyncTaskInputPtrType) ToMigrateSqlServerSqlDbSyncTaskInputPtrOutput() MigrateSqlServerSqlDbSyncTaskInputPtrOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlDbSyncTaskInputPtrType) ToMigrateSqlServerSqlDbSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskInputPtrOutput)
}

type MigrateSqlServerSqlDbSyncTaskInputOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskInputOutput) ToMigrateSqlServerSqlDbSyncTaskInputOutput() MigrateSqlServerSqlDbSyncTaskInputOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputOutput) ToMigrateSqlServerSqlDbSyncTaskInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputOutput) ToMigrateSqlServerSqlDbSyncTaskInputPtrOutput() MigrateSqlServerSqlDbSyncTaskInputPtrOutput {
	return o.ToMigrateSqlServerSqlDbSyncTaskInputPtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlDbSyncTaskInputOutput) ToMigrateSqlServerSqlDbSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrateSqlServerSqlDbSyncTaskInput) *MigrateSqlServerSqlDbSyncTaskInput {
		return &v
	}).(MigrateSqlServerSqlDbSyncTaskInputPtrOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskInputOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInput) []MigrateSqlServerSqlDbSyncDatabaseInput {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskInputOutput) ValidationOptions() MigrationValidationOptionsPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInput) *MigrationValidationOptions { return v.ValidationOptions }).(MigrationValidationOptionsPtrOutput)
}

type MigrateSqlServerSqlDbSyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbSyncTaskInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskInputPtrOutput) ToMigrateSqlServerSqlDbSyncTaskInputPtrOutput() MigrateSqlServerSqlDbSyncTaskInputPtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputPtrOutput) ToMigrateSqlServerSqlDbSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputPtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputPtrOutput) Elem() MigrateSqlServerSqlDbSyncTaskInputOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInput) MigrateSqlServerSqlDbSyncTaskInput {
		if v != nil {
			return *v
		}
		var ret MigrateSqlServerSqlDbSyncTaskInput
		return ret
	}).(MigrateSqlServerSqlDbSyncTaskInputOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskInputPtrOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInput) []MigrateSqlServerSqlDbSyncDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskInputPtrOutput) ValidationOptions() MigrationValidationOptionsPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInput) *MigrationValidationOptions {
		if v == nil {
			return nil
		}
		return v.ValidationOptions
	}).(MigrationValidationOptionsPtrOutput)
}

type MigrateSqlServerSqlDbSyncTaskInputResponse struct {
	SelectedDatabases    []MigrateSqlServerSqlDbSyncDatabaseInputResponse `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfoResponse                        `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfoResponse                        `pulumi:"targetConnectionInfo"`
	ValidationOptions    *MigrationValidationOptionsResponse              `pulumi:"validationOptions"`
}





type MigrateSqlServerSqlDbSyncTaskInputResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskInputResponseOutput() MigrateSqlServerSqlDbSyncTaskInputResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskInputResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskInputResponseOutput
}

type MigrateSqlServerSqlDbSyncTaskInputResponseArgs struct {
	SelectedDatabases    MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfoResponseInput                           `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfoResponseInput                           `pulumi:"targetConnectionInfo"`
	ValidationOptions    MigrationValidationOptionsResponsePtrInput               `pulumi:"validationOptions"`
}

func (MigrateSqlServerSqlDbSyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskInputResponseArgs) ToMigrateSqlServerSqlDbSyncTaskInputResponseOutput() MigrateSqlServerSqlDbSyncTaskInputResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskInputResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskInputResponseArgs) ToMigrateSqlServerSqlDbSyncTaskInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskInputResponseOutput)
}

func (i MigrateSqlServerSqlDbSyncTaskInputResponseArgs) ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput() MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskInputResponseArgs) ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskInputResponseOutput).ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx)
}









type MigrateSqlServerSqlDbSyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput() MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput
	ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput
}

type migrateSqlServerSqlDbSyncTaskInputResponsePtrType MigrateSqlServerSqlDbSyncTaskInputResponseArgs

func MigrateSqlServerSqlDbSyncTaskInputResponsePtr(v *MigrateSqlServerSqlDbSyncTaskInputResponseArgs) MigrateSqlServerSqlDbSyncTaskInputResponsePtrInput {
	return (*migrateSqlServerSqlDbSyncTaskInputResponsePtrType)(v)
}

func (*migrateSqlServerSqlDbSyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbSyncTaskInputResponse)(nil)).Elem()
}

func (i *migrateSqlServerSqlDbSyncTaskInputResponsePtrType) ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput() MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlDbSyncTaskInputResponsePtrType) ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput)
}

type MigrateSqlServerSqlDbSyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponseOutput) ToMigrateSqlServerSqlDbSyncTaskInputResponseOutput() MigrateSqlServerSqlDbSyncTaskInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponseOutput) ToMigrateSqlServerSqlDbSyncTaskInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponseOutput) ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput() MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput {
	return o.ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponseOutput) ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrateSqlServerSqlDbSyncTaskInputResponse) *MigrateSqlServerSqlDbSyncTaskInputResponse {
		return &v
	}).(MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponseOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInputResponse) []MigrateSqlServerSqlDbSyncDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInputResponse) SqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInputResponse) SqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponseOutput) ValidationOptions() MigrationValidationOptionsResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInputResponse) *MigrationValidationOptionsResponse {
		return v.ValidationOptions
	}).(MigrationValidationOptionsResponsePtrOutput)
}

type MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbSyncTaskInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput) ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput() MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput) ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput) Elem() MigrateSqlServerSqlDbSyncTaskInputResponseOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInputResponse) MigrateSqlServerSqlDbSyncTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret MigrateSqlServerSqlDbSyncTaskInputResponse
		return ret
	}).(MigrateSqlServerSqlDbSyncTaskInputResponseOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInputResponse) []MigrateSqlServerSqlDbSyncDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput) ValidationOptions() MigrationValidationOptionsResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInputResponse) *MigrationValidationOptionsResponse {
		if v == nil {
			return nil
		}
		return v.ValidationOptions
	}).(MigrationValidationOptionsResponsePtrOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponse struct {
	ErrorMessage *string                                   `pulumi:"errorMessage"`
	Events       []SyncMigrationDatabaseErrorEventResponse `pulumi:"events"`
	Id           string                                    `pulumi:"id"`
	ResultType   string                                    `pulumi:"resultType"`
}





type MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput
}

type MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseArgs struct {
	ErrorMessage pulumi.StringPtrInput                             `pulumi:"errorMessage"`
	Events       SyncMigrationDatabaseErrorEventResponseArrayInput `pulumi:"events"`
	Id           pulumi.StringInput                                `pulumi:"id"`
	ResultType   pulumi.StringInput                                `pulumi:"resultType"`
}

func (MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput) Events() SyncMigrationDatabaseErrorEventResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponse) []SyncMigrationDatabaseErrorEventResponse {
		return v.Events
	}).(SyncMigrationDatabaseErrorEventResponseArrayOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse struct {
	AppliedChanges          float64 `pulumi:"appliedChanges"`
	CdcDeleteCounter        float64 `pulumi:"cdcDeleteCounter"`
	CdcInsertCounter        float64 `pulumi:"cdcInsertCounter"`
	CdcUpdateCounter        float64 `pulumi:"cdcUpdateCounter"`
	DatabaseName            string  `pulumi:"databaseName"`
	EndedOn                 string  `pulumi:"endedOn"`
	FullLoadCompletedTables float64 `pulumi:"fullLoadCompletedTables"`
	FullLoadErroredTables   float64 `pulumi:"fullLoadErroredTables"`
	FullLoadLoadingTables   float64 `pulumi:"fullLoadLoadingTables"`
	FullLoadQueuedTables    float64 `pulumi:"fullLoadQueuedTables"`
	Id                      string  `pulumi:"id"`
	IncomingChanges         float64 `pulumi:"incomingChanges"`
	InitializationCompleted bool    `pulumi:"initializationCompleted"`
	Latency                 float64 `pulumi:"latency"`
	MigrationState          string  `pulumi:"migrationState"`
	ResultType              string  `pulumi:"resultType"`
	StartedOn               string  `pulumi:"startedOn"`
}





type MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput
}

type MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseArgs struct {
	AppliedChanges          pulumi.Float64Input `pulumi:"appliedChanges"`
	CdcDeleteCounter        pulumi.Float64Input `pulumi:"cdcDeleteCounter"`
	CdcInsertCounter        pulumi.Float64Input `pulumi:"cdcInsertCounter"`
	CdcUpdateCounter        pulumi.Float64Input `pulumi:"cdcUpdateCounter"`
	DatabaseName            pulumi.StringInput  `pulumi:"databaseName"`
	EndedOn                 pulumi.StringInput  `pulumi:"endedOn"`
	FullLoadCompletedTables pulumi.Float64Input `pulumi:"fullLoadCompletedTables"`
	FullLoadErroredTables   pulumi.Float64Input `pulumi:"fullLoadErroredTables"`
	FullLoadLoadingTables   pulumi.Float64Input `pulumi:"fullLoadLoadingTables"`
	FullLoadQueuedTables    pulumi.Float64Input `pulumi:"fullLoadQueuedTables"`
	Id                      pulumi.StringInput  `pulumi:"id"`
	IncomingChanges         pulumi.Float64Input `pulumi:"incomingChanges"`
	InitializationCompleted pulumi.BoolInput    `pulumi:"initializationCompleted"`
	Latency                 pulumi.Float64Input `pulumi:"latency"`
	MigrationState          pulumi.StringInput  `pulumi:"migrationState"`
	ResultType              pulumi.StringInput  `pulumi:"resultType"`
	StartedOn               pulumi.StringInput  `pulumi:"startedOn"`
}

func (MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) AppliedChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 { return v.AppliedChanges }).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) CdcDeleteCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 { return v.CdcDeleteCounter }).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) CdcInsertCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 { return v.CdcInsertCounter }).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) CdcUpdateCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 { return v.CdcUpdateCounter }).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) FullLoadCompletedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadCompletedTables
	}).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) FullLoadErroredTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadErroredTables
	}).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) FullLoadLoadingTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadLoadingTables
	}).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) FullLoadQueuedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadQueuedTables
	}).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) IncomingChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 { return v.IncomingChanges }).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) InitializationCompleted() pulumi.BoolOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) bool {
		return v.InitializationCompleted
	}).(pulumi.BoolOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) Latency() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 { return v.Latency }).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) MigrationState() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) string { return v.MigrationState }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputErrorResponse struct {
	Error      ReportableExceptionResponse `pulumi:"error"`
	Id         string                      `pulumi:"id"`
	ResultType string                      `pulumi:"resultType"`
}





type MigrateSqlServerSqlDbSyncTaskOutputErrorResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput
}

type MigrateSqlServerSqlDbSyncTaskOutputErrorResponseArgs struct {
	Error      ReportableExceptionResponseInput `pulumi:"error"`
	Id         pulumi.StringInput               `pulumi:"id"`
	ResultType pulumi.StringInput               `pulumi:"resultType"`
}

func (MigrateSqlServerSqlDbSyncTaskOutputErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputErrorResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskOutputErrorResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskOutputErrorResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputErrorResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput) Error() ReportableExceptionResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputErrorResponse) ReportableExceptionResponse { return v.Error }).(ReportableExceptionResponseOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputErrorResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse struct {
	DatabaseCount       int    `pulumi:"databaseCount"`
	EndedOn             string `pulumi:"endedOn"`
	Id                  string `pulumi:"id"`
	ResultType          string `pulumi:"resultType"`
	SourceServer        string `pulumi:"sourceServer"`
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	StartedOn           string `pulumi:"startedOn"`
	TargetServer        string `pulumi:"targetServer"`
	TargetServerVersion string `pulumi:"targetServerVersion"`
}





type MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput
}

type MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseArgs struct {
	DatabaseCount       pulumi.IntInput    `pulumi:"databaseCount"`
	EndedOn             pulumi.StringInput `pulumi:"endedOn"`
	Id                  pulumi.StringInput `pulumi:"id"`
	ResultType          pulumi.StringInput `pulumi:"resultType"`
	SourceServer        pulumi.StringInput `pulumi:"sourceServer"`
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	StartedOn           pulumi.StringInput `pulumi:"startedOn"`
	TargetServer        pulumi.StringInput `pulumi:"targetServer"`
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) DatabaseCount() pulumi.IntOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse) int { return v.DatabaseCount }).(pulumi.IntOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) SourceServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse) string { return v.SourceServer }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse) string { return v.SourceServerVersion }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) TargetServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse) string { return v.TargetServer }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse struct {
	CdcDeleteCounter      float64 `pulumi:"cdcDeleteCounter"`
	CdcInsertCounter      float64 `pulumi:"cdcInsertCounter"`
	CdcUpdateCounter      float64 `pulumi:"cdcUpdateCounter"`
	DataErrorsCounter     float64 `pulumi:"dataErrorsCounter"`
	DatabaseName          string  `pulumi:"databaseName"`
	FullLoadEndedOn       string  `pulumi:"fullLoadEndedOn"`
	FullLoadEstFinishTime string  `pulumi:"fullLoadEstFinishTime"`
	FullLoadStartedOn     string  `pulumi:"fullLoadStartedOn"`
	FullLoadTotalRows     float64 `pulumi:"fullLoadTotalRows"`
	Id                    string  `pulumi:"id"`
	LastModifiedTime      string  `pulumi:"lastModifiedTime"`
	ResultType            string  `pulumi:"resultType"`
	State                 string  `pulumi:"state"`
	TableName             string  `pulumi:"tableName"`
	TotalChangesApplied   float64 `pulumi:"totalChangesApplied"`
}





type MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput
}

type MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseArgs struct {
	CdcDeleteCounter      pulumi.Float64Input `pulumi:"cdcDeleteCounter"`
	CdcInsertCounter      pulumi.Float64Input `pulumi:"cdcInsertCounter"`
	CdcUpdateCounter      pulumi.Float64Input `pulumi:"cdcUpdateCounter"`
	DataErrorsCounter     pulumi.Float64Input `pulumi:"dataErrorsCounter"`
	DatabaseName          pulumi.StringInput  `pulumi:"databaseName"`
	FullLoadEndedOn       pulumi.StringInput  `pulumi:"fullLoadEndedOn"`
	FullLoadEstFinishTime pulumi.StringInput  `pulumi:"fullLoadEstFinishTime"`
	FullLoadStartedOn     pulumi.StringInput  `pulumi:"fullLoadStartedOn"`
	FullLoadTotalRows     pulumi.Float64Input `pulumi:"fullLoadTotalRows"`
	Id                    pulumi.StringInput  `pulumi:"id"`
	LastModifiedTime      pulumi.StringInput  `pulumi:"lastModifiedTime"`
	ResultType            pulumi.StringInput  `pulumi:"resultType"`
	State                 pulumi.StringInput  `pulumi:"state"`
	TableName             pulumi.StringInput  `pulumi:"tableName"`
	TotalChangesApplied   pulumi.Float64Input `pulumi:"totalChangesApplied"`
}

func (MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) CdcDeleteCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) float64 { return v.CdcDeleteCounter }).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) CdcInsertCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) float64 { return v.CdcInsertCounter }).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) CdcUpdateCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) float64 { return v.CdcUpdateCounter }).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) DataErrorsCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) float64 { return v.DataErrorsCounter }).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) FullLoadEndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) string { return v.FullLoadEndedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) FullLoadEstFinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) string { return v.FullLoadEstFinishTime }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) FullLoadStartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) string { return v.FullLoadStartedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) FullLoadTotalRows() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) float64 { return v.FullLoadTotalRows }).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) string { return v.LastModifiedTime }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) string { return v.TableName }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) TotalChangesApplied() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) float64 { return v.TotalChangesApplied }).(pulumi.Float64Output)
}

type MigrateSqlServerSqlDbSyncTaskProperties struct {
	ClientData map[string]string                   `pulumi:"clientData"`
	Input      *MigrateSqlServerSqlDbSyncTaskInput `pulumi:"input"`
	TaskType   string                              `pulumi:"taskType"`
}





type MigrateSqlServerSqlDbSyncTaskPropertiesInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskPropertiesOutput() MigrateSqlServerSqlDbSyncTaskPropertiesOutput
	ToMigrateSqlServerSqlDbSyncTaskPropertiesOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskPropertiesOutput
}

type MigrateSqlServerSqlDbSyncTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                      `pulumi:"clientData"`
	Input      MigrateSqlServerSqlDbSyncTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                         `pulumi:"taskType"`
}

func (MigrateSqlServerSqlDbSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskProperties)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskPropertiesArgs) ToMigrateSqlServerSqlDbSyncTaskPropertiesOutput() MigrateSqlServerSqlDbSyncTaskPropertiesOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskPropertiesArgs) ToMigrateSqlServerSqlDbSyncTaskPropertiesOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskPropertiesOutput)
}

type MigrateSqlServerSqlDbSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskProperties)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesOutput) ToMigrateSqlServerSqlDbSyncTaskPropertiesOutput() MigrateSqlServerSqlDbSyncTaskPropertiesOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesOutput) ToMigrateSqlServerSqlDbSyncTaskPropertiesOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskPropertiesOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesOutput) Input() MigrateSqlServerSqlDbSyncTaskInputPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskProperties) *MigrateSqlServerSqlDbSyncTaskInput { return v.Input }).(MigrateSqlServerSqlDbSyncTaskInputPtrOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbSyncTaskPropertiesResponse struct {
	ClientData map[string]string                           `pulumi:"clientData"`
	Commands   []interface{}                               `pulumi:"commands"`
	Errors     []ODataErrorResponse                        `pulumi:"errors"`
	Input      *MigrateSqlServerSqlDbSyncTaskInputResponse `pulumi:"input"`
	Output     []interface{}                               `pulumi:"output"`
	State      string                                      `pulumi:"state"`
	TaskType   string                                      `pulumi:"taskType"`
}





type MigrateSqlServerSqlDbSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput() MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskPropertiesResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput
}

type MigrateSqlServerSqlDbSyncTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                              `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                  `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                       `pulumi:"errors"`
	Input      MigrateSqlServerSqlDbSyncTaskInputResponsePtrInput `pulumi:"input"`
	Output     pulumi.ArrayInput                                  `pulumi:"output"`
	State      pulumi.StringInput                                 `pulumi:"state"`
	TaskType   pulumi.StringInput                                 `pulumi:"taskType"`
}

func (MigrateSqlServerSqlDbSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskPropertiesResponseArgs) ToMigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput() MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskPropertiesResponseArgs) ToMigrateSqlServerSqlDbSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput)
}

type MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) ToMigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput() MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) ToMigrateSqlServerSqlDbSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) Input() MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesResponse) *MigrateSqlServerSqlDbSyncTaskInputResponse {
		return v.Input
	}).(MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbTaskInput struct {
	SelectedDatabases    []MigrateSqlServerSqlDbDatabaseInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfo                    `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfo                    `pulumi:"targetConnectionInfo"`
	ValidationOptions    *MigrationValidationOptions          `pulumi:"validationOptions"`
}





type MigrateSqlServerSqlDbTaskInputInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskInputOutput() MigrateSqlServerSqlDbTaskInputOutput
	ToMigrateSqlServerSqlDbTaskInputOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskInputOutput
}

type MigrateSqlServerSqlDbTaskInputArgs struct {
	SelectedDatabases    MigrateSqlServerSqlDbDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfoInput                       `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfoInput                       `pulumi:"targetConnectionInfo"`
	ValidationOptions    MigrationValidationOptionsPtrInput           `pulumi:"validationOptions"`
}

func (MigrateSqlServerSqlDbTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskInputArgs) ToMigrateSqlServerSqlDbTaskInputOutput() MigrateSqlServerSqlDbTaskInputOutput {
	return i.ToMigrateSqlServerSqlDbTaskInputOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskInputArgs) ToMigrateSqlServerSqlDbTaskInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskInputOutput)
}

func (i MigrateSqlServerSqlDbTaskInputArgs) ToMigrateSqlServerSqlDbTaskInputPtrOutput() MigrateSqlServerSqlDbTaskInputPtrOutput {
	return i.ToMigrateSqlServerSqlDbTaskInputPtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskInputArgs) ToMigrateSqlServerSqlDbTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskInputOutput).ToMigrateSqlServerSqlDbTaskInputPtrOutputWithContext(ctx)
}









type MigrateSqlServerSqlDbTaskInputPtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskInputPtrOutput() MigrateSqlServerSqlDbTaskInputPtrOutput
	ToMigrateSqlServerSqlDbTaskInputPtrOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskInputPtrOutput
}

type migrateSqlServerSqlDbTaskInputPtrType MigrateSqlServerSqlDbTaskInputArgs

func MigrateSqlServerSqlDbTaskInputPtr(v *MigrateSqlServerSqlDbTaskInputArgs) MigrateSqlServerSqlDbTaskInputPtrInput {
	return (*migrateSqlServerSqlDbTaskInputPtrType)(v)
}

func (*migrateSqlServerSqlDbTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbTaskInput)(nil)).Elem()
}

func (i *migrateSqlServerSqlDbTaskInputPtrType) ToMigrateSqlServerSqlDbTaskInputPtrOutput() MigrateSqlServerSqlDbTaskInputPtrOutput {
	return i.ToMigrateSqlServerSqlDbTaskInputPtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlDbTaskInputPtrType) ToMigrateSqlServerSqlDbTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskInputPtrOutput)
}

type MigrateSqlServerSqlDbTaskInputOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskInputOutput) ToMigrateSqlServerSqlDbTaskInputOutput() MigrateSqlServerSqlDbTaskInputOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputOutput) ToMigrateSqlServerSqlDbTaskInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputOutput) ToMigrateSqlServerSqlDbTaskInputPtrOutput() MigrateSqlServerSqlDbTaskInputPtrOutput {
	return o.ToMigrateSqlServerSqlDbTaskInputPtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlDbTaskInputOutput) ToMigrateSqlServerSqlDbTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrateSqlServerSqlDbTaskInput) *MigrateSqlServerSqlDbTaskInput {
		return &v
	}).(MigrateSqlServerSqlDbTaskInputPtrOutput)
}

func (o MigrateSqlServerSqlDbTaskInputOutput) SelectedDatabases() MigrateSqlServerSqlDbDatabaseInputArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInput) []MigrateSqlServerSqlDbDatabaseInput {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbDatabaseInputArrayOutput)
}

func (o MigrateSqlServerSqlDbTaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

func (o MigrateSqlServerSqlDbTaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

func (o MigrateSqlServerSqlDbTaskInputOutput) ValidationOptions() MigrationValidationOptionsPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInput) *MigrationValidationOptions { return v.ValidationOptions }).(MigrationValidationOptionsPtrOutput)
}

type MigrateSqlServerSqlDbTaskInputPtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbTaskInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskInputPtrOutput) ToMigrateSqlServerSqlDbTaskInputPtrOutput() MigrateSqlServerSqlDbTaskInputPtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputPtrOutput) ToMigrateSqlServerSqlDbTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputPtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputPtrOutput) Elem() MigrateSqlServerSqlDbTaskInputOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInput) MigrateSqlServerSqlDbTaskInput {
		if v != nil {
			return *v
		}
		var ret MigrateSqlServerSqlDbTaskInput
		return ret
	}).(MigrateSqlServerSqlDbTaskInputOutput)
}

func (o MigrateSqlServerSqlDbTaskInputPtrOutput) SelectedDatabases() MigrateSqlServerSqlDbDatabaseInputArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInput) []MigrateSqlServerSqlDbDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbDatabaseInputArrayOutput)
}

func (o MigrateSqlServerSqlDbTaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

func (o MigrateSqlServerSqlDbTaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

func (o MigrateSqlServerSqlDbTaskInputPtrOutput) ValidationOptions() MigrationValidationOptionsPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInput) *MigrationValidationOptions {
		if v == nil {
			return nil
		}
		return v.ValidationOptions
	}).(MigrationValidationOptionsPtrOutput)
}

type MigrateSqlServerSqlDbTaskInputResponse struct {
	SelectedDatabases    []MigrateSqlServerSqlDbDatabaseInputResponse `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfoResponse                    `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfoResponse                    `pulumi:"targetConnectionInfo"`
	ValidationOptions    *MigrationValidationOptionsResponse          `pulumi:"validationOptions"`
}





type MigrateSqlServerSqlDbTaskInputResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskInputResponseOutput() MigrateSqlServerSqlDbTaskInputResponseOutput
	ToMigrateSqlServerSqlDbTaskInputResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskInputResponseOutput
}

type MigrateSqlServerSqlDbTaskInputResponseArgs struct {
	SelectedDatabases    MigrateSqlServerSqlDbDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfoResponseInput                       `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfoResponseInput                       `pulumi:"targetConnectionInfo"`
	ValidationOptions    MigrationValidationOptionsResponsePtrInput           `pulumi:"validationOptions"`
}

func (MigrateSqlServerSqlDbTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskInputResponseArgs) ToMigrateSqlServerSqlDbTaskInputResponseOutput() MigrateSqlServerSqlDbTaskInputResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskInputResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskInputResponseArgs) ToMigrateSqlServerSqlDbTaskInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskInputResponseOutput)
}

func (i MigrateSqlServerSqlDbTaskInputResponseArgs) ToMigrateSqlServerSqlDbTaskInputResponsePtrOutput() MigrateSqlServerSqlDbTaskInputResponsePtrOutput {
	return i.ToMigrateSqlServerSqlDbTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskInputResponseArgs) ToMigrateSqlServerSqlDbTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskInputResponseOutput).ToMigrateSqlServerSqlDbTaskInputResponsePtrOutputWithContext(ctx)
}









type MigrateSqlServerSqlDbTaskInputResponsePtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskInputResponsePtrOutput() MigrateSqlServerSqlDbTaskInputResponsePtrOutput
	ToMigrateSqlServerSqlDbTaskInputResponsePtrOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskInputResponsePtrOutput
}

type migrateSqlServerSqlDbTaskInputResponsePtrType MigrateSqlServerSqlDbTaskInputResponseArgs

func MigrateSqlServerSqlDbTaskInputResponsePtr(v *MigrateSqlServerSqlDbTaskInputResponseArgs) MigrateSqlServerSqlDbTaskInputResponsePtrInput {
	return (*migrateSqlServerSqlDbTaskInputResponsePtrType)(v)
}

func (*migrateSqlServerSqlDbTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbTaskInputResponse)(nil)).Elem()
}

func (i *migrateSqlServerSqlDbTaskInputResponsePtrType) ToMigrateSqlServerSqlDbTaskInputResponsePtrOutput() MigrateSqlServerSqlDbTaskInputResponsePtrOutput {
	return i.ToMigrateSqlServerSqlDbTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlDbTaskInputResponsePtrType) ToMigrateSqlServerSqlDbTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskInputResponsePtrOutput)
}

type MigrateSqlServerSqlDbTaskInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskInputResponseOutput) ToMigrateSqlServerSqlDbTaskInputResponseOutput() MigrateSqlServerSqlDbTaskInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputResponseOutput) ToMigrateSqlServerSqlDbTaskInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputResponseOutput) ToMigrateSqlServerSqlDbTaskInputResponsePtrOutput() MigrateSqlServerSqlDbTaskInputResponsePtrOutput {
	return o.ToMigrateSqlServerSqlDbTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlDbTaskInputResponseOutput) ToMigrateSqlServerSqlDbTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrateSqlServerSqlDbTaskInputResponse) *MigrateSqlServerSqlDbTaskInputResponse {
		return &v
	}).(MigrateSqlServerSqlDbTaskInputResponsePtrOutput)
}

func (o MigrateSqlServerSqlDbTaskInputResponseOutput) SelectedDatabases() MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInputResponse) []MigrateSqlServerSqlDbDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput)
}

func (o MigrateSqlServerSqlDbTaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInputResponse) SqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

func (o MigrateSqlServerSqlDbTaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInputResponse) SqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

func (o MigrateSqlServerSqlDbTaskInputResponseOutput) ValidationOptions() MigrationValidationOptionsResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInputResponse) *MigrationValidationOptionsResponse {
		return v.ValidationOptions
	}).(MigrationValidationOptionsResponsePtrOutput)
}

type MigrateSqlServerSqlDbTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbTaskInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskInputResponsePtrOutput) ToMigrateSqlServerSqlDbTaskInputResponsePtrOutput() MigrateSqlServerSqlDbTaskInputResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputResponsePtrOutput) ToMigrateSqlServerSqlDbTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputResponsePtrOutput) Elem() MigrateSqlServerSqlDbTaskInputResponseOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInputResponse) MigrateSqlServerSqlDbTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret MigrateSqlServerSqlDbTaskInputResponse
		return ret
	}).(MigrateSqlServerSqlDbTaskInputResponseOutput)
}

func (o MigrateSqlServerSqlDbTaskInputResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInputResponse) []MigrateSqlServerSqlDbDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput)
}

func (o MigrateSqlServerSqlDbTaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

func (o MigrateSqlServerSqlDbTaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

func (o MigrateSqlServerSqlDbTaskInputResponsePtrOutput) ValidationOptions() MigrationValidationOptionsResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInputResponse) *MigrationValidationOptionsResponse {
		if v == nil {
			return nil
		}
		return v.ValidationOptions
	}).(MigrationValidationOptionsResponsePtrOutput)
}

type MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse struct {
	DatabaseName             string                                            `pulumi:"databaseName"`
	EndedOn                  string                                            `pulumi:"endedOn"`
	ErrorCount               float64                                           `pulumi:"errorCount"`
	ErrorPrefix              string                                            `pulumi:"errorPrefix"`
	ExceptionsAndWarnings    []ReportableExceptionResponse                     `pulumi:"exceptionsAndWarnings"`
	Id                       string                                            `pulumi:"id"`
	Message                  string                                            `pulumi:"message"`
	NumberOfObjects          float64                                           `pulumi:"numberOfObjects"`
	NumberOfObjectsCompleted float64                                           `pulumi:"numberOfObjectsCompleted"`
	ObjectSummary            map[string]DataItemMigrationSummaryResultResponse `pulumi:"objectSummary"`
	ResultPrefix             string                                            `pulumi:"resultPrefix"`
	ResultType               string                                            `pulumi:"resultType"`
	Stage                    string                                            `pulumi:"stage"`
	StartedOn                string                                            `pulumi:"startedOn"`
	State                    string                                            `pulumi:"state"`
	StatusMessage            string                                            `pulumi:"statusMessage"`
}





type MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput
	ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput
}

type MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseArgs struct {
	DatabaseName             pulumi.StringInput                             `pulumi:"databaseName"`
	EndedOn                  pulumi.StringInput                             `pulumi:"endedOn"`
	ErrorCount               pulumi.Float64Input                            `pulumi:"errorCount"`
	ErrorPrefix              pulumi.StringInput                             `pulumi:"errorPrefix"`
	ExceptionsAndWarnings    ReportableExceptionResponseArrayInput          `pulumi:"exceptionsAndWarnings"`
	Id                       pulumi.StringInput                             `pulumi:"id"`
	Message                  pulumi.StringInput                             `pulumi:"message"`
	NumberOfObjects          pulumi.Float64Input                            `pulumi:"numberOfObjects"`
	NumberOfObjectsCompleted pulumi.Float64Input                            `pulumi:"numberOfObjectsCompleted"`
	ObjectSummary            DataItemMigrationSummaryResultResponseMapInput `pulumi:"objectSummary"`
	ResultPrefix             pulumi.StringInput                             `pulumi:"resultPrefix"`
	ResultType               pulumi.StringInput                             `pulumi:"resultType"`
	Stage                    pulumi.StringInput                             `pulumi:"stage"`
	StartedOn                pulumi.StringInput                             `pulumi:"startedOn"`
	State                    pulumi.StringInput                             `pulumi:"state"`
	StatusMessage            pulumi.StringInput                             `pulumi:"statusMessage"`
}

func (MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseArgs) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseArgs) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput)
}

type MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) ErrorCount() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) float64 { return v.ErrorCount }).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) ErrorPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.ErrorPrefix }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) ExceptionsAndWarnings() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) []ReportableExceptionResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionResponseArrayOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.Message }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) NumberOfObjects() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) float64 { return v.NumberOfObjects }).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) NumberOfObjectsCompleted() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) float64 {
		return v.NumberOfObjectsCompleted
	}).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) ObjectSummary() DataItemMigrationSummaryResultResponseMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) map[string]DataItemMigrationSummaryResultResponse {
		return v.ObjectSummary
	}).(DataItemMigrationSummaryResultResponseMapOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) ResultPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.ResultPrefix }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.Stage }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.StatusMessage }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse struct {
	Id         string `pulumi:"id"`
	ResultType string `pulumi:"resultType"`
}





type MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput() MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput
	ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput
}

type MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseArgs struct {
	Id         pulumi.StringInput `pulumi:"id"`
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseArgs) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput() MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseArgs) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput)
}

type MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput() MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbTaskOutputErrorResponse struct {
	Error      ReportableExceptionResponse `pulumi:"error"`
	Id         string                      `pulumi:"id"`
	ResultType string                      `pulumi:"resultType"`
}





type MigrateSqlServerSqlDbTaskOutputErrorResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskOutputErrorResponseOutput() MigrateSqlServerSqlDbTaskOutputErrorResponseOutput
	ToMigrateSqlServerSqlDbTaskOutputErrorResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskOutputErrorResponseOutput
}

type MigrateSqlServerSqlDbTaskOutputErrorResponseArgs struct {
	Error      ReportableExceptionResponseInput `pulumi:"error"`
	Id         pulumi.StringInput               `pulumi:"id"`
	ResultType pulumi.StringInput               `pulumi:"resultType"`
}

func (MigrateSqlServerSqlDbTaskOutputErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputErrorResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskOutputErrorResponseArgs) ToMigrateSqlServerSqlDbTaskOutputErrorResponseOutput() MigrateSqlServerSqlDbTaskOutputErrorResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskOutputErrorResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskOutputErrorResponseArgs) ToMigrateSqlServerSqlDbTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskOutputErrorResponseOutput)
}

type MigrateSqlServerSqlDbTaskOutputErrorResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskOutputErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputErrorResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskOutputErrorResponseOutput) ToMigrateSqlServerSqlDbTaskOutputErrorResponseOutput() MigrateSqlServerSqlDbTaskOutputErrorResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputErrorResponseOutput) ToMigrateSqlServerSqlDbTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputErrorResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputErrorResponseOutput) Error() ReportableExceptionResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputErrorResponse) ReportableExceptionResponse { return v.Error }).(ReportableExceptionResponseOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputErrorResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse struct {
	DatabaseSummary           map[string]DatabaseSummaryResultResponse `pulumi:"databaseSummary"`
	Databases                 map[string]string                        `pulumi:"databases"`
	DurationInSeconds         float64                                  `pulumi:"durationInSeconds"`
	EndedOn                   string                                   `pulumi:"endedOn"`
	ExceptionsAndWarnings     []ReportableExceptionResponse            `pulumi:"exceptionsAndWarnings"`
	Id                        string                                   `pulumi:"id"`
	Message                   string                                   `pulumi:"message"`
	MigrationReportResult     *MigrationReportResultResponse           `pulumi:"migrationReportResult"`
	MigrationValidationResult *MigrationValidationResultResponse       `pulumi:"migrationValidationResult"`
	ResultType                string                                   `pulumi:"resultType"`
	SourceServerBrandVersion  string                                   `pulumi:"sourceServerBrandVersion"`
	SourceServerVersion       string                                   `pulumi:"sourceServerVersion"`
	StartedOn                 string                                   `pulumi:"startedOn"`
	Status                    string                                   `pulumi:"status"`
	StatusMessage             string                                   `pulumi:"statusMessage"`
	TargetServerBrandVersion  string                                   `pulumi:"targetServerBrandVersion"`
	TargetServerVersion       string                                   `pulumi:"targetServerVersion"`
}





type MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput
	ToMigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput
}

type MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseArgs struct {
	DatabaseSummary           DatabaseSummaryResultResponseMapInput     `pulumi:"databaseSummary"`
	Databases                 pulumi.StringMapInput                     `pulumi:"databases"`
	DurationInSeconds         pulumi.Float64Input                       `pulumi:"durationInSeconds"`
	EndedOn                   pulumi.StringInput                        `pulumi:"endedOn"`
	ExceptionsAndWarnings     ReportableExceptionResponseArrayInput     `pulumi:"exceptionsAndWarnings"`
	Id                        pulumi.StringInput                        `pulumi:"id"`
	Message                   pulumi.StringInput                        `pulumi:"message"`
	MigrationReportResult     MigrationReportResultResponsePtrInput     `pulumi:"migrationReportResult"`
	MigrationValidationResult MigrationValidationResultResponsePtrInput `pulumi:"migrationValidationResult"`
	ResultType                pulumi.StringInput                        `pulumi:"resultType"`
	SourceServerBrandVersion  pulumi.StringInput                        `pulumi:"sourceServerBrandVersion"`
	SourceServerVersion       pulumi.StringInput                        `pulumi:"sourceServerVersion"`
	StartedOn                 pulumi.StringInput                        `pulumi:"startedOn"`
	Status                    pulumi.StringInput                        `pulumi:"status"`
	StatusMessage             pulumi.StringInput                        `pulumi:"statusMessage"`
	TargetServerBrandVersion  pulumi.StringInput                        `pulumi:"targetServerBrandVersion"`
	TargetServerVersion       pulumi.StringInput                        `pulumi:"targetServerVersion"`
}

func (MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseArgs) ToMigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseArgs) ToMigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput)
}

type MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) ToMigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) ToMigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) DatabaseSummary() DatabaseSummaryResultResponseMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) map[string]DatabaseSummaryResultResponse {
		return v.DatabaseSummary
	}).(DatabaseSummaryResultResponseMapOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) Databases() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) map[string]string { return v.Databases }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) DurationInSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) float64 { return v.DurationInSeconds }).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) ExceptionsAndWarnings() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) []ReportableExceptionResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionResponseArrayOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string { return v.Message }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) MigrationReportResult() MigrationReportResultResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) *MigrationReportResultResponse {
		return v.MigrationReportResult
	}).(MigrationReportResultResponsePtrOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) MigrationValidationResult() MigrationValidationResultResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) *MigrationValidationResultResponse {
		return v.MigrationValidationResult
	}).(MigrationValidationResultResponsePtrOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) SourceServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string {
		return v.SourceServerBrandVersion
	}).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string { return v.SourceServerVersion }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string { return v.Status }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string { return v.StatusMessage }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string {
		return v.TargetServerBrandVersion
	}).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbTaskOutputTableLevelResponse struct {
	EndedOn             string  `pulumi:"endedOn"`
	ErrorPrefix         string  `pulumi:"errorPrefix"`
	Id                  string  `pulumi:"id"`
	ItemsCompletedCount float64 `pulumi:"itemsCompletedCount"`
	ItemsCount          float64 `pulumi:"itemsCount"`
	ObjectName          string  `pulumi:"objectName"`
	ResultPrefix        string  `pulumi:"resultPrefix"`
	ResultType          string  `pulumi:"resultType"`
	StartedOn           string  `pulumi:"startedOn"`
	State               string  `pulumi:"state"`
	StatusMessage       string  `pulumi:"statusMessage"`
}





type MigrateSqlServerSqlDbTaskOutputTableLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput() MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput
	ToMigrateSqlServerSqlDbTaskOutputTableLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput
}

type MigrateSqlServerSqlDbTaskOutputTableLevelResponseArgs struct {
	EndedOn             pulumi.StringInput  `pulumi:"endedOn"`
	ErrorPrefix         pulumi.StringInput  `pulumi:"errorPrefix"`
	Id                  pulumi.StringInput  `pulumi:"id"`
	ItemsCompletedCount pulumi.Float64Input `pulumi:"itemsCompletedCount"`
	ItemsCount          pulumi.Float64Input `pulumi:"itemsCount"`
	ObjectName          pulumi.StringInput  `pulumi:"objectName"`
	ResultPrefix        pulumi.StringInput  `pulumi:"resultPrefix"`
	ResultType          pulumi.StringInput  `pulumi:"resultType"`
	StartedOn           pulumi.StringInput  `pulumi:"startedOn"`
	State               pulumi.StringInput  `pulumi:"state"`
	StatusMessage       pulumi.StringInput  `pulumi:"statusMessage"`
}

func (MigrateSqlServerSqlDbTaskOutputTableLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputTableLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskOutputTableLevelResponseArgs) ToMigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput() MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskOutputTableLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskOutputTableLevelResponseArgs) ToMigrateSqlServerSqlDbTaskOutputTableLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput)
}

type MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputTableLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) ToMigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput() MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) ToMigrateSqlServerSqlDbTaskOutputTableLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) ErrorPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) string { return v.ErrorPrefix }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) ItemsCompletedCount() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) float64 { return v.ItemsCompletedCount }).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) ItemsCount() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) float64 { return v.ItemsCount }).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) ObjectName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) string { return v.ObjectName }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) ResultPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) string { return v.ResultPrefix }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) string { return v.StatusMessage }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbTaskOutputValidationResultResponse struct {
	Id         string `pulumi:"id"`
	ResultType string `pulumi:"resultType"`
}





type MigrateSqlServerSqlDbTaskOutputValidationResultResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput() MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput
	ToMigrateSqlServerSqlDbTaskOutputValidationResultResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput
}

type MigrateSqlServerSqlDbTaskOutputValidationResultResponseArgs struct {
	Id         pulumi.StringInput `pulumi:"id"`
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigrateSqlServerSqlDbTaskOutputValidationResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputValidationResultResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskOutputValidationResultResponseArgs) ToMigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput() MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskOutputValidationResultResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskOutputValidationResultResponseArgs) ToMigrateSqlServerSqlDbTaskOutputValidationResultResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput)
}

type MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputValidationResultResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput) ToMigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput() MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput) ToMigrateSqlServerSqlDbTaskOutputValidationResultResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputValidationResultResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputValidationResultResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbTaskProperties struct {
	ClientData map[string]string               `pulumi:"clientData"`
	Input      *MigrateSqlServerSqlDbTaskInput `pulumi:"input"`
	TaskType   string                          `pulumi:"taskType"`
}





type MigrateSqlServerSqlDbTaskPropertiesInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskPropertiesOutput() MigrateSqlServerSqlDbTaskPropertiesOutput
	ToMigrateSqlServerSqlDbTaskPropertiesOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskPropertiesOutput
}

type MigrateSqlServerSqlDbTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                  `pulumi:"clientData"`
	Input      MigrateSqlServerSqlDbTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                     `pulumi:"taskType"`
}

func (MigrateSqlServerSqlDbTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskProperties)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskPropertiesArgs) ToMigrateSqlServerSqlDbTaskPropertiesOutput() MigrateSqlServerSqlDbTaskPropertiesOutput {
	return i.ToMigrateSqlServerSqlDbTaskPropertiesOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskPropertiesArgs) ToMigrateSqlServerSqlDbTaskPropertiesOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskPropertiesOutput)
}

type MigrateSqlServerSqlDbTaskPropertiesOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskProperties)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskPropertiesOutput) ToMigrateSqlServerSqlDbTaskPropertiesOutput() MigrateSqlServerSqlDbTaskPropertiesOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskPropertiesOutput) ToMigrateSqlServerSqlDbTaskPropertiesOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskPropertiesOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlDbTaskPropertiesOutput) Input() MigrateSqlServerSqlDbTaskInputPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskProperties) *MigrateSqlServerSqlDbTaskInput { return v.Input }).(MigrateSqlServerSqlDbTaskInputPtrOutput)
}

func (o MigrateSqlServerSqlDbTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbTaskPropertiesResponse struct {
	ClientData map[string]string                       `pulumi:"clientData"`
	Commands   []interface{}                           `pulumi:"commands"`
	Errors     []ODataErrorResponse                    `pulumi:"errors"`
	Input      *MigrateSqlServerSqlDbTaskInputResponse `pulumi:"input"`
	Output     []interface{}                           `pulumi:"output"`
	State      string                                  `pulumi:"state"`
	TaskType   string                                  `pulumi:"taskType"`
}





type MigrateSqlServerSqlDbTaskPropertiesResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskPropertiesResponseOutput() MigrateSqlServerSqlDbTaskPropertiesResponseOutput
	ToMigrateSqlServerSqlDbTaskPropertiesResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskPropertiesResponseOutput
}

type MigrateSqlServerSqlDbTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                          `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                              `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                   `pulumi:"errors"`
	Input      MigrateSqlServerSqlDbTaskInputResponsePtrInput `pulumi:"input"`
	Output     pulumi.ArrayInput                              `pulumi:"output"`
	State      pulumi.StringInput                             `pulumi:"state"`
	TaskType   pulumi.StringInput                             `pulumi:"taskType"`
}

func (MigrateSqlServerSqlDbTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskPropertiesResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskPropertiesResponseArgs) ToMigrateSqlServerSqlDbTaskPropertiesResponseOutput() MigrateSqlServerSqlDbTaskPropertiesResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskPropertiesResponseArgs) ToMigrateSqlServerSqlDbTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskPropertiesResponseOutput)
}

type MigrateSqlServerSqlDbTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskPropertiesResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskPropertiesResponseOutput) ToMigrateSqlServerSqlDbTaskPropertiesResponseOutput() MigrateSqlServerSqlDbTaskPropertiesResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskPropertiesResponseOutput) ToMigrateSqlServerSqlDbTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskPropertiesResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlDbTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o MigrateSqlServerSqlDbTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o MigrateSqlServerSqlDbTaskPropertiesResponseOutput) Input() MigrateSqlServerSqlDbTaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesResponse) *MigrateSqlServerSqlDbTaskInputResponse {
		return v.Input
	}).(MigrateSqlServerSqlDbTaskInputResponsePtrOutput)
}

func (o MigrateSqlServerSqlDbTaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

func (o MigrateSqlServerSqlDbTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlDbTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMIDatabaseInput struct {
	BackupFilePaths     []string   `pulumi:"backupFilePaths"`
	BackupFileShare     *FileShare `pulumi:"backupFileShare"`
	Name                string     `pulumi:"name"`
	RestoreDatabaseName string     `pulumi:"restoreDatabaseName"`
}





type MigrateSqlServerSqlMIDatabaseInputInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMIDatabaseInputOutput() MigrateSqlServerSqlMIDatabaseInputOutput
	ToMigrateSqlServerSqlMIDatabaseInputOutputWithContext(context.Context) MigrateSqlServerSqlMIDatabaseInputOutput
}

type MigrateSqlServerSqlMIDatabaseInputArgs struct {
	BackupFilePaths     pulumi.StringArrayInput `pulumi:"backupFilePaths"`
	BackupFileShare     FileSharePtrInput       `pulumi:"backupFileShare"`
	Name                pulumi.StringInput      `pulumi:"name"`
	RestoreDatabaseName pulumi.StringInput      `pulumi:"restoreDatabaseName"`
}

func (MigrateSqlServerSqlMIDatabaseInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMIDatabaseInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlMIDatabaseInputArgs) ToMigrateSqlServerSqlMIDatabaseInputOutput() MigrateSqlServerSqlMIDatabaseInputOutput {
	return i.ToMigrateSqlServerSqlMIDatabaseInputOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMIDatabaseInputArgs) ToMigrateSqlServerSqlMIDatabaseInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMIDatabaseInputOutput)
}





type MigrateSqlServerSqlMIDatabaseInputArrayInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMIDatabaseInputArrayOutput() MigrateSqlServerSqlMIDatabaseInputArrayOutput
	ToMigrateSqlServerSqlMIDatabaseInputArrayOutputWithContext(context.Context) MigrateSqlServerSqlMIDatabaseInputArrayOutput
}

type MigrateSqlServerSqlMIDatabaseInputArray []MigrateSqlServerSqlMIDatabaseInputInput

func (MigrateSqlServerSqlMIDatabaseInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlMIDatabaseInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlMIDatabaseInputArray) ToMigrateSqlServerSqlMIDatabaseInputArrayOutput() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return i.ToMigrateSqlServerSqlMIDatabaseInputArrayOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMIDatabaseInputArray) ToMigrateSqlServerSqlMIDatabaseInputArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMIDatabaseInputArrayOutput)
}

type MigrateSqlServerSqlMIDatabaseInputOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMIDatabaseInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMIDatabaseInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlMIDatabaseInputOutput) ToMigrateSqlServerSqlMIDatabaseInputOutput() MigrateSqlServerSqlMIDatabaseInputOutput {
	return o
}

func (o MigrateSqlServerSqlMIDatabaseInputOutput) ToMigrateSqlServerSqlMIDatabaseInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputOutput {
	return o
}

func (o MigrateSqlServerSqlMIDatabaseInputOutput) BackupFilePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInput) []string { return v.BackupFilePaths }).(pulumi.StringArrayOutput)
}

func (o MigrateSqlServerSqlMIDatabaseInputOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInput) *FileShare { return v.BackupFileShare }).(FileSharePtrOutput)
}

func (o MigrateSqlServerSqlMIDatabaseInputOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInput) string { return v.Name }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMIDatabaseInputOutput) RestoreDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInput) string { return v.RestoreDatabaseName }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMIDatabaseInputArrayOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMIDatabaseInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlMIDatabaseInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlMIDatabaseInputArrayOutput) ToMigrateSqlServerSqlMIDatabaseInputArrayOutput() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o
}

func (o MigrateSqlServerSqlMIDatabaseInputArrayOutput) ToMigrateSqlServerSqlMIDatabaseInputArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o
}

func (o MigrateSqlServerSqlMIDatabaseInputArrayOutput) Index(i pulumi.IntInput) MigrateSqlServerSqlMIDatabaseInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateSqlServerSqlMIDatabaseInput {
		return vs[0].([]MigrateSqlServerSqlMIDatabaseInput)[vs[1].(int)]
	}).(MigrateSqlServerSqlMIDatabaseInputOutput)
}

type MigrateSqlServerSqlMIDatabaseInputResponse struct {
	BackupFilePaths     []string           `pulumi:"backupFilePaths"`
	BackupFileShare     *FileShareResponse `pulumi:"backupFileShare"`
	Name                string             `pulumi:"name"`
	RestoreDatabaseName string             `pulumi:"restoreDatabaseName"`
}





type MigrateSqlServerSqlMIDatabaseInputResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMIDatabaseInputResponseOutput() MigrateSqlServerSqlMIDatabaseInputResponseOutput
	ToMigrateSqlServerSqlMIDatabaseInputResponseOutputWithContext(context.Context) MigrateSqlServerSqlMIDatabaseInputResponseOutput
}

type MigrateSqlServerSqlMIDatabaseInputResponseArgs struct {
	BackupFilePaths     pulumi.StringArrayInput   `pulumi:"backupFilePaths"`
	BackupFileShare     FileShareResponsePtrInput `pulumi:"backupFileShare"`
	Name                pulumi.StringInput        `pulumi:"name"`
	RestoreDatabaseName pulumi.StringInput        `pulumi:"restoreDatabaseName"`
}

func (MigrateSqlServerSqlMIDatabaseInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMIDatabaseInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMIDatabaseInputResponseArgs) ToMigrateSqlServerSqlMIDatabaseInputResponseOutput() MigrateSqlServerSqlMIDatabaseInputResponseOutput {
	return i.ToMigrateSqlServerSqlMIDatabaseInputResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMIDatabaseInputResponseArgs) ToMigrateSqlServerSqlMIDatabaseInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMIDatabaseInputResponseOutput)
}





type MigrateSqlServerSqlMIDatabaseInputResponseArrayInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMIDatabaseInputResponseArrayOutput() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput
	ToMigrateSqlServerSqlMIDatabaseInputResponseArrayOutputWithContext(context.Context) MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput
}

type MigrateSqlServerSqlMIDatabaseInputResponseArray []MigrateSqlServerSqlMIDatabaseInputResponseInput

func (MigrateSqlServerSqlMIDatabaseInputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlMIDatabaseInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMIDatabaseInputResponseArray) ToMigrateSqlServerSqlMIDatabaseInputResponseArrayOutput() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return i.ToMigrateSqlServerSqlMIDatabaseInputResponseArrayOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMIDatabaseInputResponseArray) ToMigrateSqlServerSqlMIDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput)
}

type MigrateSqlServerSqlMIDatabaseInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMIDatabaseInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMIDatabaseInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMIDatabaseInputResponseOutput) ToMigrateSqlServerSqlMIDatabaseInputResponseOutput() MigrateSqlServerSqlMIDatabaseInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMIDatabaseInputResponseOutput) ToMigrateSqlServerSqlMIDatabaseInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMIDatabaseInputResponseOutput) BackupFilePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInputResponse) []string { return v.BackupFilePaths }).(pulumi.StringArrayOutput)
}

func (o MigrateSqlServerSqlMIDatabaseInputResponseOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInputResponse) *FileShareResponse { return v.BackupFileShare }).(FileShareResponsePtrOutput)
}

func (o MigrateSqlServerSqlMIDatabaseInputResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInputResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMIDatabaseInputResponseOutput) RestoreDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInputResponse) string { return v.RestoreDatabaseName }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlMIDatabaseInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput) ToMigrateSqlServerSqlMIDatabaseInputResponseArrayOutput() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o
}

func (o MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput) ToMigrateSqlServerSqlMIDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o
}

func (o MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput) Index(i pulumi.IntInput) MigrateSqlServerSqlMIDatabaseInputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateSqlServerSqlMIDatabaseInputResponse {
		return vs[0].([]MigrateSqlServerSqlMIDatabaseInputResponse)[vs[1].(int)]
	}).(MigrateSqlServerSqlMIDatabaseInputResponseOutput)
}

type MigrateSqlServerSqlMISyncTaskInput struct {
	AzureApp             AzureActiveDirectoryApp              `pulumi:"azureApp"`
	BackupFileShare      *FileShare                           `pulumi:"backupFileShare"`
	SelectedDatabases    []MigrateSqlServerSqlMIDatabaseInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfo                    `pulumi:"sourceConnectionInfo"`
	StorageResourceId    string                               `pulumi:"storageResourceId"`
	TargetConnectionInfo MiSqlConnectionInfo                  `pulumi:"targetConnectionInfo"`
}





type MigrateSqlServerSqlMISyncTaskInputInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskInputOutput() MigrateSqlServerSqlMISyncTaskInputOutput
	ToMigrateSqlServerSqlMISyncTaskInputOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskInputOutput
}

type MigrateSqlServerSqlMISyncTaskInputArgs struct {
	AzureApp             AzureActiveDirectoryAppInput                 `pulumi:"azureApp"`
	BackupFileShare      FileSharePtrInput                            `pulumi:"backupFileShare"`
	SelectedDatabases    MigrateSqlServerSqlMIDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfoInput                       `pulumi:"sourceConnectionInfo"`
	StorageResourceId    pulumi.StringInput                           `pulumi:"storageResourceId"`
	TargetConnectionInfo MiSqlConnectionInfoInput                     `pulumi:"targetConnectionInfo"`
}

func (MigrateSqlServerSqlMISyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskInputArgs) ToMigrateSqlServerSqlMISyncTaskInputOutput() MigrateSqlServerSqlMISyncTaskInputOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskInputOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskInputArgs) ToMigrateSqlServerSqlMISyncTaskInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskInputOutput)
}

func (i MigrateSqlServerSqlMISyncTaskInputArgs) ToMigrateSqlServerSqlMISyncTaskInputPtrOutput() MigrateSqlServerSqlMISyncTaskInputPtrOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskInputPtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskInputArgs) ToMigrateSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskInputOutput).ToMigrateSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx)
}









type MigrateSqlServerSqlMISyncTaskInputPtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskInputPtrOutput() MigrateSqlServerSqlMISyncTaskInputPtrOutput
	ToMigrateSqlServerSqlMISyncTaskInputPtrOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskInputPtrOutput
}

type migrateSqlServerSqlMISyncTaskInputPtrType MigrateSqlServerSqlMISyncTaskInputArgs

func MigrateSqlServerSqlMISyncTaskInputPtr(v *MigrateSqlServerSqlMISyncTaskInputArgs) MigrateSqlServerSqlMISyncTaskInputPtrInput {
	return (*migrateSqlServerSqlMISyncTaskInputPtrType)(v)
}

func (*migrateSqlServerSqlMISyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMISyncTaskInput)(nil)).Elem()
}

func (i *migrateSqlServerSqlMISyncTaskInputPtrType) ToMigrateSqlServerSqlMISyncTaskInputPtrOutput() MigrateSqlServerSqlMISyncTaskInputPtrOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlMISyncTaskInputPtrType) ToMigrateSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskInputPtrOutput)
}

type MigrateSqlServerSqlMISyncTaskInputOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskInputOutput) ToMigrateSqlServerSqlMISyncTaskInputOutput() MigrateSqlServerSqlMISyncTaskInputOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputOutput) ToMigrateSqlServerSqlMISyncTaskInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputOutput) ToMigrateSqlServerSqlMISyncTaskInputPtrOutput() MigrateSqlServerSqlMISyncTaskInputPtrOutput {
	return o.ToMigrateSqlServerSqlMISyncTaskInputPtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlMISyncTaskInputOutput) ToMigrateSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrateSqlServerSqlMISyncTaskInput) *MigrateSqlServerSqlMISyncTaskInput {
		return &v
	}).(MigrateSqlServerSqlMISyncTaskInputPtrOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputOutput) AzureApp() AzureActiveDirectoryAppOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInput) AzureActiveDirectoryApp { return v.AzureApp }).(AzureActiveDirectoryAppOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInput) *FileShare { return v.BackupFileShare }).(FileSharePtrOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInput) []MigrateSqlServerSqlMIDatabaseInput {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputArrayOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputOutput) StorageResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInput) string { return v.StorageResourceId }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputOutput) TargetConnectionInfo() MiSqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInput) MiSqlConnectionInfo { return v.TargetConnectionInfo }).(MiSqlConnectionInfoOutput)
}

type MigrateSqlServerSqlMISyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMISyncTaskInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskInputPtrOutput) ToMigrateSqlServerSqlMISyncTaskInputPtrOutput() MigrateSqlServerSqlMISyncTaskInputPtrOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputPtrOutput) ToMigrateSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputPtrOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputPtrOutput) Elem() MigrateSqlServerSqlMISyncTaskInputOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInput) MigrateSqlServerSqlMISyncTaskInput {
		if v != nil {
			return *v
		}
		var ret MigrateSqlServerSqlMISyncTaskInput
		return ret
	}).(MigrateSqlServerSqlMISyncTaskInputOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputPtrOutput) AzureApp() AzureActiveDirectoryAppPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInput) *AzureActiveDirectoryApp {
		if v == nil {
			return nil
		}
		return &v.AzureApp
	}).(AzureActiveDirectoryAppPtrOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputPtrOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInput) *FileShare {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileSharePtrOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputPtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInput) []MigrateSqlServerSqlMIDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputArrayOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputPtrOutput) StorageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInput) *string {
		if v == nil {
			return nil
		}
		return &v.StorageResourceId
	}).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputPtrOutput) TargetConnectionInfo() MiSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInput) *MiSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MiSqlConnectionInfoPtrOutput)
}

type MigrateSqlServerSqlMISyncTaskInputResponse struct {
	AzureApp             AzureActiveDirectoryAppResponse              `pulumi:"azureApp"`
	BackupFileShare      *FileShareResponse                           `pulumi:"backupFileShare"`
	SelectedDatabases    []MigrateSqlServerSqlMIDatabaseInputResponse `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfoResponse                    `pulumi:"sourceConnectionInfo"`
	StorageResourceId    string                                       `pulumi:"storageResourceId"`
	TargetConnectionInfo MiSqlConnectionInfoResponse                  `pulumi:"targetConnectionInfo"`
}





type MigrateSqlServerSqlMISyncTaskInputResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskInputResponseOutput() MigrateSqlServerSqlMISyncTaskInputResponseOutput
	ToMigrateSqlServerSqlMISyncTaskInputResponseOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskInputResponseOutput
}

type MigrateSqlServerSqlMISyncTaskInputResponseArgs struct {
	AzureApp             AzureActiveDirectoryAppResponseInput                 `pulumi:"azureApp"`
	BackupFileShare      FileShareResponsePtrInput                            `pulumi:"backupFileShare"`
	SelectedDatabases    MigrateSqlServerSqlMIDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfoResponseInput                       `pulumi:"sourceConnectionInfo"`
	StorageResourceId    pulumi.StringInput                                   `pulumi:"storageResourceId"`
	TargetConnectionInfo MiSqlConnectionInfoResponseInput                     `pulumi:"targetConnectionInfo"`
}

func (MigrateSqlServerSqlMISyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskInputResponseArgs) ToMigrateSqlServerSqlMISyncTaskInputResponseOutput() MigrateSqlServerSqlMISyncTaskInputResponseOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskInputResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskInputResponseArgs) ToMigrateSqlServerSqlMISyncTaskInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskInputResponseOutput)
}

func (i MigrateSqlServerSqlMISyncTaskInputResponseArgs) ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutput() MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskInputResponseArgs) ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskInputResponseOutput).ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx)
}









type MigrateSqlServerSqlMISyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutput() MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput
	ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput
}

type migrateSqlServerSqlMISyncTaskInputResponsePtrType MigrateSqlServerSqlMISyncTaskInputResponseArgs

func MigrateSqlServerSqlMISyncTaskInputResponsePtr(v *MigrateSqlServerSqlMISyncTaskInputResponseArgs) MigrateSqlServerSqlMISyncTaskInputResponsePtrInput {
	return (*migrateSqlServerSqlMISyncTaskInputResponsePtrType)(v)
}

func (*migrateSqlServerSqlMISyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (i *migrateSqlServerSqlMISyncTaskInputResponsePtrType) ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutput() MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlMISyncTaskInputResponsePtrType) ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput)
}

type MigrateSqlServerSqlMISyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) ToMigrateSqlServerSqlMISyncTaskInputResponseOutput() MigrateSqlServerSqlMISyncTaskInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) ToMigrateSqlServerSqlMISyncTaskInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutput() MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o.ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrateSqlServerSqlMISyncTaskInputResponse) *MigrateSqlServerSqlMISyncTaskInputResponse {
		return &v
	}).(MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) AzureApp() AzureActiveDirectoryAppResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputResponse) AzureActiveDirectoryAppResponse { return v.AzureApp }).(AzureActiveDirectoryAppResponseOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputResponse) *FileShareResponse { return v.BackupFileShare }).(FileShareResponsePtrOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputResponse) []MigrateSqlServerSqlMIDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputResponse) SqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) StorageResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputResponse) string { return v.StorageResourceId }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) TargetConnectionInfo() MiSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputResponse) MiSqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(MiSqlConnectionInfoResponseOutput)
}

type MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutput() MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) Elem() MigrateSqlServerSqlMISyncTaskInputResponseOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputResponse) MigrateSqlServerSqlMISyncTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret MigrateSqlServerSqlMISyncTaskInputResponse
		return ret
	}).(MigrateSqlServerSqlMISyncTaskInputResponseOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) AzureApp() AzureActiveDirectoryAppResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputResponse) *AzureActiveDirectoryAppResponse {
		if v == nil {
			return nil
		}
		return &v.AzureApp
	}).(AzureActiveDirectoryAppResponsePtrOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputResponse) *FileShareResponse {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileShareResponsePtrOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputResponse) []MigrateSqlServerSqlMIDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) StorageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageResourceId
	}).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) TargetConnectionInfo() MiSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputResponse) *MiSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MiSqlConnectionInfoResponsePtrOutput)
}

type MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse struct {
	ActiveBackupSets          []BackupSetInfoResponse       `pulumi:"activeBackupSets"`
	ContainerName             string                        `pulumi:"containerName"`
	EndedOn                   string                        `pulumi:"endedOn"`
	ErrorPrefix               string                        `pulumi:"errorPrefix"`
	ExceptionsAndWarnings     []ReportableExceptionResponse `pulumi:"exceptionsAndWarnings"`
	FullBackupSetInfo         BackupSetInfoResponse         `pulumi:"fullBackupSetInfo"`
	Id                        string                        `pulumi:"id"`
	IsFullBackupRestored      bool                          `pulumi:"isFullBackupRestored"`
	LastRestoredBackupSetInfo BackupSetInfoResponse         `pulumi:"lastRestoredBackupSetInfo"`
	MigrationState            string                        `pulumi:"migrationState"`
	ResultType                string                        `pulumi:"resultType"`
	SourceDatabaseName        string                        `pulumi:"sourceDatabaseName"`
	StartedOn                 string                        `pulumi:"startedOn"`
}





type MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput
	ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput
}

type MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseArgs struct {
	ActiveBackupSets          BackupSetInfoResponseArrayInput       `pulumi:"activeBackupSets"`
	ContainerName             pulumi.StringInput                    `pulumi:"containerName"`
	EndedOn                   pulumi.StringInput                    `pulumi:"endedOn"`
	ErrorPrefix               pulumi.StringInput                    `pulumi:"errorPrefix"`
	ExceptionsAndWarnings     ReportableExceptionResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	FullBackupSetInfo         BackupSetInfoResponseInput            `pulumi:"fullBackupSetInfo"`
	Id                        pulumi.StringInput                    `pulumi:"id"`
	IsFullBackupRestored      pulumi.BoolInput                      `pulumi:"isFullBackupRestored"`
	LastRestoredBackupSetInfo BackupSetInfoResponseInput            `pulumi:"lastRestoredBackupSetInfo"`
	MigrationState            pulumi.StringInput                    `pulumi:"migrationState"`
	ResultType                pulumi.StringInput                    `pulumi:"resultType"`
	SourceDatabaseName        pulumi.StringInput                    `pulumi:"sourceDatabaseName"`
	StartedOn                 pulumi.StringInput                    `pulumi:"startedOn"`
}

func (MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseArgs) ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseArgs) ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput)
}

type MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) ActiveBackupSets() BackupSetInfoResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) []BackupSetInfoResponse {
		return v.ActiveBackupSets
	}).(BackupSetInfoResponseArrayOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) string { return v.ContainerName }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) ErrorPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) string { return v.ErrorPrefix }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) ExceptionsAndWarnings() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) []ReportableExceptionResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionResponseArrayOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) FullBackupSetInfo() BackupSetInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) BackupSetInfoResponse {
		return v.FullBackupSetInfo
	}).(BackupSetInfoResponseOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) IsFullBackupRestored() pulumi.BoolOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) bool { return v.IsFullBackupRestored }).(pulumi.BoolOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) LastRestoredBackupSetInfo() BackupSetInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) BackupSetInfoResponse {
		return v.LastRestoredBackupSetInfo
	}).(BackupSetInfoResponseOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) MigrationState() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) string { return v.MigrationState }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) SourceDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) string { return v.SourceDatabaseName }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMISyncTaskOutputErrorResponse struct {
	Error      ReportableExceptionResponse `pulumi:"error"`
	Id         string                      `pulumi:"id"`
	ResultType string                      `pulumi:"resultType"`
}





type MigrateSqlServerSqlMISyncTaskOutputErrorResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput() MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput
	ToMigrateSqlServerSqlMISyncTaskOutputErrorResponseOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput
}

type MigrateSqlServerSqlMISyncTaskOutputErrorResponseArgs struct {
	Error      ReportableExceptionResponseInput `pulumi:"error"`
	Id         pulumi.StringInput               `pulumi:"id"`
	ResultType pulumi.StringInput               `pulumi:"resultType"`
}

func (MigrateSqlServerSqlMISyncTaskOutputErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskOutputErrorResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskOutputErrorResponseArgs) ToMigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput() MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskOutputErrorResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskOutputErrorResponseArgs) ToMigrateSqlServerSqlMISyncTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput)
}

type MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskOutputErrorResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput) ToMigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput() MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput) ToMigrateSqlServerSqlMISyncTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput) Error() ReportableExceptionResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputErrorResponse) ReportableExceptionResponse { return v.Error }).(ReportableExceptionResponseOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputErrorResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse struct {
	DatabaseCount            int    `pulumi:"databaseCount"`
	DatabaseErrorCount       int    `pulumi:"databaseErrorCount"`
	EndedOn                  string `pulumi:"endedOn"`
	Id                       string `pulumi:"id"`
	ResultType               string `pulumi:"resultType"`
	SourceServerBrandVersion string `pulumi:"sourceServerBrandVersion"`
	SourceServerName         string `pulumi:"sourceServerName"`
	SourceServerVersion      string `pulumi:"sourceServerVersion"`
	StartedOn                string `pulumi:"startedOn"`
	State                    string `pulumi:"state"`
	TargetServerBrandVersion string `pulumi:"targetServerBrandVersion"`
	TargetServerName         string `pulumi:"targetServerName"`
	TargetServerVersion      string `pulumi:"targetServerVersion"`
}





type MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput
	ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput
}

type MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseArgs struct {
	DatabaseCount            pulumi.IntInput    `pulumi:"databaseCount"`
	DatabaseErrorCount       pulumi.IntInput    `pulumi:"databaseErrorCount"`
	EndedOn                  pulumi.StringInput `pulumi:"endedOn"`
	Id                       pulumi.StringInput `pulumi:"id"`
	ResultType               pulumi.StringInput `pulumi:"resultType"`
	SourceServerBrandVersion pulumi.StringInput `pulumi:"sourceServerBrandVersion"`
	SourceServerName         pulumi.StringInput `pulumi:"sourceServerName"`
	SourceServerVersion      pulumi.StringInput `pulumi:"sourceServerVersion"`
	StartedOn                pulumi.StringInput `pulumi:"startedOn"`
	State                    pulumi.StringInput `pulumi:"state"`
	TargetServerBrandVersion pulumi.StringInput `pulumi:"targetServerBrandVersion"`
	TargetServerName         pulumi.StringInput `pulumi:"targetServerName"`
	TargetServerVersion      pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseArgs) ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseArgs) ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput)
}

type MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) DatabaseCount() pulumi.IntOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) int { return v.DatabaseCount }).(pulumi.IntOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) DatabaseErrorCount() pulumi.IntOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) int { return v.DatabaseErrorCount }).(pulumi.IntOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) SourceServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string {
		return v.SourceServerBrandVersion
	}).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) SourceServerName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string { return v.SourceServerName }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string { return v.SourceServerVersion }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string {
		return v.TargetServerBrandVersion
	}).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) TargetServerName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string { return v.TargetServerName }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMISyncTaskProperties struct {
	ClientData map[string]string                   `pulumi:"clientData"`
	Input      *MigrateSqlServerSqlMISyncTaskInput `pulumi:"input"`
	TaskType   string                              `pulumi:"taskType"`
}





type MigrateSqlServerSqlMISyncTaskPropertiesInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskPropertiesOutput() MigrateSqlServerSqlMISyncTaskPropertiesOutput
	ToMigrateSqlServerSqlMISyncTaskPropertiesOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskPropertiesOutput
}

type MigrateSqlServerSqlMISyncTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                      `pulumi:"clientData"`
	Input      MigrateSqlServerSqlMISyncTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                         `pulumi:"taskType"`
}

func (MigrateSqlServerSqlMISyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskProperties)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskPropertiesArgs) ToMigrateSqlServerSqlMISyncTaskPropertiesOutput() MigrateSqlServerSqlMISyncTaskPropertiesOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskPropertiesOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskPropertiesArgs) ToMigrateSqlServerSqlMISyncTaskPropertiesOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskPropertiesOutput)
}

type MigrateSqlServerSqlMISyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskProperties)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesOutput) ToMigrateSqlServerSqlMISyncTaskPropertiesOutput() MigrateSqlServerSqlMISyncTaskPropertiesOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesOutput) ToMigrateSqlServerSqlMISyncTaskPropertiesOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskPropertiesOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesOutput) Input() MigrateSqlServerSqlMISyncTaskInputPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskProperties) *MigrateSqlServerSqlMISyncTaskInput { return v.Input }).(MigrateSqlServerSqlMISyncTaskInputPtrOutput)
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMISyncTaskPropertiesResponse struct {
	ClientData map[string]string                           `pulumi:"clientData"`
	Commands   []interface{}                               `pulumi:"commands"`
	Errors     []ODataErrorResponse                        `pulumi:"errors"`
	Input      *MigrateSqlServerSqlMISyncTaskInputResponse `pulumi:"input"`
	Output     []interface{}                               `pulumi:"output"`
	State      string                                      `pulumi:"state"`
	TaskType   string                                      `pulumi:"taskType"`
}





type MigrateSqlServerSqlMISyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskPropertiesResponseOutput() MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput
	ToMigrateSqlServerSqlMISyncTaskPropertiesResponseOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput
}

type MigrateSqlServerSqlMISyncTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                              `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                  `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                       `pulumi:"errors"`
	Input      MigrateSqlServerSqlMISyncTaskInputResponsePtrInput `pulumi:"input"`
	Output     pulumi.ArrayInput                                  `pulumi:"output"`
	State      pulumi.StringInput                                 `pulumi:"state"`
	TaskType   pulumi.StringInput                                 `pulumi:"taskType"`
}

func (MigrateSqlServerSqlMISyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskPropertiesResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskPropertiesResponseArgs) ToMigrateSqlServerSqlMISyncTaskPropertiesResponseOutput() MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskPropertiesResponseArgs) ToMigrateSqlServerSqlMISyncTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput)
}

type MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskPropertiesResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) ToMigrateSqlServerSqlMISyncTaskPropertiesResponseOutput() MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) ToMigrateSqlServerSqlMISyncTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) Input() MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesResponse) *MigrateSqlServerSqlMISyncTaskInputResponse {
		return v.Input
	}).(MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput)
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMITaskInput struct {
	AadDomainName        *string                              `pulumi:"aadDomainName"`
	BackupBlobShare      BlobShare                            `pulumi:"backupBlobShare"`
	BackupFileShare      *FileShare                           `pulumi:"backupFileShare"`
	BackupMode           *string                              `pulumi:"backupMode"`
	SelectedAgentJobs    []string                             `pulumi:"selectedAgentJobs"`
	SelectedDatabases    []MigrateSqlServerSqlMIDatabaseInput `pulumi:"selectedDatabases"`
	SelectedLogins       []string                             `pulumi:"selectedLogins"`
	SourceConnectionInfo SqlConnectionInfo                    `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfo                    `pulumi:"targetConnectionInfo"`
}





type MigrateSqlServerSqlMITaskInputInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskInputOutput() MigrateSqlServerSqlMITaskInputOutput
	ToMigrateSqlServerSqlMITaskInputOutputWithContext(context.Context) MigrateSqlServerSqlMITaskInputOutput
}

type MigrateSqlServerSqlMITaskInputArgs struct {
	AadDomainName        pulumi.StringPtrInput                        `pulumi:"aadDomainName"`
	BackupBlobShare      BlobShareInput                               `pulumi:"backupBlobShare"`
	BackupFileShare      FileSharePtrInput                            `pulumi:"backupFileShare"`
	BackupMode           pulumi.StringPtrInput                        `pulumi:"backupMode"`
	SelectedAgentJobs    pulumi.StringArrayInput                      `pulumi:"selectedAgentJobs"`
	SelectedDatabases    MigrateSqlServerSqlMIDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	SelectedLogins       pulumi.StringArrayInput                      `pulumi:"selectedLogins"`
	SourceConnectionInfo SqlConnectionInfoInput                       `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfoInput                       `pulumi:"targetConnectionInfo"`
}

func (MigrateSqlServerSqlMITaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskInputArgs) ToMigrateSqlServerSqlMITaskInputOutput() MigrateSqlServerSqlMITaskInputOutput {
	return i.ToMigrateSqlServerSqlMITaskInputOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskInputArgs) ToMigrateSqlServerSqlMITaskInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskInputOutput)
}

func (i MigrateSqlServerSqlMITaskInputArgs) ToMigrateSqlServerSqlMITaskInputPtrOutput() MigrateSqlServerSqlMITaskInputPtrOutput {
	return i.ToMigrateSqlServerSqlMITaskInputPtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskInputArgs) ToMigrateSqlServerSqlMITaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskInputOutput).ToMigrateSqlServerSqlMITaskInputPtrOutputWithContext(ctx)
}









type MigrateSqlServerSqlMITaskInputPtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskInputPtrOutput() MigrateSqlServerSqlMITaskInputPtrOutput
	ToMigrateSqlServerSqlMITaskInputPtrOutputWithContext(context.Context) MigrateSqlServerSqlMITaskInputPtrOutput
}

type migrateSqlServerSqlMITaskInputPtrType MigrateSqlServerSqlMITaskInputArgs

func MigrateSqlServerSqlMITaskInputPtr(v *MigrateSqlServerSqlMITaskInputArgs) MigrateSqlServerSqlMITaskInputPtrInput {
	return (*migrateSqlServerSqlMITaskInputPtrType)(v)
}

func (*migrateSqlServerSqlMITaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMITaskInput)(nil)).Elem()
}

func (i *migrateSqlServerSqlMITaskInputPtrType) ToMigrateSqlServerSqlMITaskInputPtrOutput() MigrateSqlServerSqlMITaskInputPtrOutput {
	return i.ToMigrateSqlServerSqlMITaskInputPtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlMITaskInputPtrType) ToMigrateSqlServerSqlMITaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskInputPtrOutput)
}

type MigrateSqlServerSqlMITaskInputOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskInputOutput) ToMigrateSqlServerSqlMITaskInputOutput() MigrateSqlServerSqlMITaskInputOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputOutput) ToMigrateSqlServerSqlMITaskInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputOutput) ToMigrateSqlServerSqlMITaskInputPtrOutput() MigrateSqlServerSqlMITaskInputPtrOutput {
	return o.ToMigrateSqlServerSqlMITaskInputPtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlMITaskInputOutput) ToMigrateSqlServerSqlMITaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrateSqlServerSqlMITaskInput) *MigrateSqlServerSqlMITaskInput {
		return &v
	}).(MigrateSqlServerSqlMITaskInputPtrOutput)
}

func (o MigrateSqlServerSqlMITaskInputOutput) AadDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInput) *string { return v.AadDomainName }).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlMITaskInputOutput) BackupBlobShare() BlobShareOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInput) BlobShare { return v.BackupBlobShare }).(BlobShareOutput)
}

func (o MigrateSqlServerSqlMITaskInputOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInput) *FileShare { return v.BackupFileShare }).(FileSharePtrOutput)
}

func (o MigrateSqlServerSqlMITaskInputOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInput) *string { return v.BackupMode }).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlMITaskInputOutput) SelectedAgentJobs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInput) []string { return v.SelectedAgentJobs }).(pulumi.StringArrayOutput)
}

func (o MigrateSqlServerSqlMITaskInputOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInput) []MigrateSqlServerSqlMIDatabaseInput {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputArrayOutput)
}

func (o MigrateSqlServerSqlMITaskInputOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInput) []string { return v.SelectedLogins }).(pulumi.StringArrayOutput)
}

func (o MigrateSqlServerSqlMITaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

func (o MigrateSqlServerSqlMITaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

type MigrateSqlServerSqlMITaskInputPtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMITaskInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskInputPtrOutput) ToMigrateSqlServerSqlMITaskInputPtrOutput() MigrateSqlServerSqlMITaskInputPtrOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputPtrOutput) ToMigrateSqlServerSqlMITaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputPtrOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputPtrOutput) Elem() MigrateSqlServerSqlMITaskInputOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) MigrateSqlServerSqlMITaskInput {
		if v != nil {
			return *v
		}
		var ret MigrateSqlServerSqlMITaskInput
		return ret
	}).(MigrateSqlServerSqlMITaskInputOutput)
}

func (o MigrateSqlServerSqlMITaskInputPtrOutput) AadDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) *string {
		if v == nil {
			return nil
		}
		return v.AadDomainName
	}).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlMITaskInputPtrOutput) BackupBlobShare() BlobSharePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) *BlobShare {
		if v == nil {
			return nil
		}
		return &v.BackupBlobShare
	}).(BlobSharePtrOutput)
}

func (o MigrateSqlServerSqlMITaskInputPtrOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) *FileShare {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileSharePtrOutput)
}

func (o MigrateSqlServerSqlMITaskInputPtrOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) *string {
		if v == nil {
			return nil
		}
		return v.BackupMode
	}).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlMITaskInputPtrOutput) SelectedAgentJobs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) []string {
		if v == nil {
			return nil
		}
		return v.SelectedAgentJobs
	}).(pulumi.StringArrayOutput)
}

func (o MigrateSqlServerSqlMITaskInputPtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) []MigrateSqlServerSqlMIDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputArrayOutput)
}

func (o MigrateSqlServerSqlMITaskInputPtrOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) []string {
		if v == nil {
			return nil
		}
		return v.SelectedLogins
	}).(pulumi.StringArrayOutput)
}

func (o MigrateSqlServerSqlMITaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

func (o MigrateSqlServerSqlMITaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

type MigrateSqlServerSqlMITaskInputResponse struct {
	AadDomainName        *string                                      `pulumi:"aadDomainName"`
	BackupBlobShare      BlobShareResponse                            `pulumi:"backupBlobShare"`
	BackupFileShare      *FileShareResponse                           `pulumi:"backupFileShare"`
	BackupMode           *string                                      `pulumi:"backupMode"`
	SelectedAgentJobs    []string                                     `pulumi:"selectedAgentJobs"`
	SelectedDatabases    []MigrateSqlServerSqlMIDatabaseInputResponse `pulumi:"selectedDatabases"`
	SelectedLogins       []string                                     `pulumi:"selectedLogins"`
	SourceConnectionInfo SqlConnectionInfoResponse                    `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfoResponse                    `pulumi:"targetConnectionInfo"`
}





type MigrateSqlServerSqlMITaskInputResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskInputResponseOutput() MigrateSqlServerSqlMITaskInputResponseOutput
	ToMigrateSqlServerSqlMITaskInputResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskInputResponseOutput
}

type MigrateSqlServerSqlMITaskInputResponseArgs struct {
	AadDomainName        pulumi.StringPtrInput                                `pulumi:"aadDomainName"`
	BackupBlobShare      BlobShareResponseInput                               `pulumi:"backupBlobShare"`
	BackupFileShare      FileShareResponsePtrInput                            `pulumi:"backupFileShare"`
	BackupMode           pulumi.StringPtrInput                                `pulumi:"backupMode"`
	SelectedAgentJobs    pulumi.StringArrayInput                              `pulumi:"selectedAgentJobs"`
	SelectedDatabases    MigrateSqlServerSqlMIDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	SelectedLogins       pulumi.StringArrayInput                              `pulumi:"selectedLogins"`
	SourceConnectionInfo SqlConnectionInfoResponseInput                       `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfoResponseInput                       `pulumi:"targetConnectionInfo"`
}

func (MigrateSqlServerSqlMITaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskInputResponseArgs) ToMigrateSqlServerSqlMITaskInputResponseOutput() MigrateSqlServerSqlMITaskInputResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskInputResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskInputResponseArgs) ToMigrateSqlServerSqlMITaskInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskInputResponseOutput)
}

func (i MigrateSqlServerSqlMITaskInputResponseArgs) ToMigrateSqlServerSqlMITaskInputResponsePtrOutput() MigrateSqlServerSqlMITaskInputResponsePtrOutput {
	return i.ToMigrateSqlServerSqlMITaskInputResponsePtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskInputResponseArgs) ToMigrateSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskInputResponseOutput).ToMigrateSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx)
}









type MigrateSqlServerSqlMITaskInputResponsePtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskInputResponsePtrOutput() MigrateSqlServerSqlMITaskInputResponsePtrOutput
	ToMigrateSqlServerSqlMITaskInputResponsePtrOutputWithContext(context.Context) MigrateSqlServerSqlMITaskInputResponsePtrOutput
}

type migrateSqlServerSqlMITaskInputResponsePtrType MigrateSqlServerSqlMITaskInputResponseArgs

func MigrateSqlServerSqlMITaskInputResponsePtr(v *MigrateSqlServerSqlMITaskInputResponseArgs) MigrateSqlServerSqlMITaskInputResponsePtrInput {
	return (*migrateSqlServerSqlMITaskInputResponsePtrType)(v)
}

func (*migrateSqlServerSqlMITaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMITaskInputResponse)(nil)).Elem()
}

func (i *migrateSqlServerSqlMITaskInputResponsePtrType) ToMigrateSqlServerSqlMITaskInputResponsePtrOutput() MigrateSqlServerSqlMITaskInputResponsePtrOutput {
	return i.ToMigrateSqlServerSqlMITaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlMITaskInputResponsePtrType) ToMigrateSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskInputResponsePtrOutput)
}

type MigrateSqlServerSqlMITaskInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskInputResponseOutput) ToMigrateSqlServerSqlMITaskInputResponseOutput() MigrateSqlServerSqlMITaskInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputResponseOutput) ToMigrateSqlServerSqlMITaskInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputResponseOutput) ToMigrateSqlServerSqlMITaskInputResponsePtrOutput() MigrateSqlServerSqlMITaskInputResponsePtrOutput {
	return o.ToMigrateSqlServerSqlMITaskInputResponsePtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlMITaskInputResponseOutput) ToMigrateSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrateSqlServerSqlMITaskInputResponse) *MigrateSqlServerSqlMITaskInputResponse {
		return &v
	}).(MigrateSqlServerSqlMITaskInputResponsePtrOutput)
}

func (o MigrateSqlServerSqlMITaskInputResponseOutput) AadDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputResponse) *string { return v.AadDomainName }).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlMITaskInputResponseOutput) BackupBlobShare() BlobShareResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputResponse) BlobShareResponse { return v.BackupBlobShare }).(BlobShareResponseOutput)
}

func (o MigrateSqlServerSqlMITaskInputResponseOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputResponse) *FileShareResponse { return v.BackupFileShare }).(FileShareResponsePtrOutput)
}

func (o MigrateSqlServerSqlMITaskInputResponseOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputResponse) *string { return v.BackupMode }).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlMITaskInputResponseOutput) SelectedAgentJobs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputResponse) []string { return v.SelectedAgentJobs }).(pulumi.StringArrayOutput)
}

func (o MigrateSqlServerSqlMITaskInputResponseOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputResponse) []MigrateSqlServerSqlMIDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput)
}

func (o MigrateSqlServerSqlMITaskInputResponseOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputResponse) []string { return v.SelectedLogins }).(pulumi.StringArrayOutput)
}

func (o MigrateSqlServerSqlMITaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputResponse) SqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

func (o MigrateSqlServerSqlMITaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputResponse) SqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

type MigrateSqlServerSqlMITaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMITaskInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) ToMigrateSqlServerSqlMITaskInputResponsePtrOutput() MigrateSqlServerSqlMITaskInputResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) ToMigrateSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) Elem() MigrateSqlServerSqlMITaskInputResponseOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) MigrateSqlServerSqlMITaskInputResponse {
		if v != nil {
			return *v
		}
		var ret MigrateSqlServerSqlMITaskInputResponse
		return ret
	}).(MigrateSqlServerSqlMITaskInputResponseOutput)
}

func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) AadDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadDomainName
	}).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) BackupBlobShare() BlobShareResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) *BlobShareResponse {
		if v == nil {
			return nil
		}
		return &v.BackupBlobShare
	}).(BlobShareResponsePtrOutput)
}

func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) *FileShareResponse {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileShareResponsePtrOutput)
}

func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) *string {
		if v == nil {
			return nil
		}
		return v.BackupMode
	}).(pulumi.StringPtrOutput)
}

func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) SelectedAgentJobs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedAgentJobs
	}).(pulumi.StringArrayOutput)
}

func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) []MigrateSqlServerSqlMIDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput)
}

func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedLogins
	}).(pulumi.StringArrayOutput)
}

func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

type MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse struct {
	EndedOn               string                        `pulumi:"endedOn"`
	ExceptionsAndWarnings []ReportableExceptionResponse `pulumi:"exceptionsAndWarnings"`
	Id                    string                        `pulumi:"id"`
	IsEnabled             bool                          `pulumi:"isEnabled"`
	Message               string                        `pulumi:"message"`
	Name                  string                        `pulumi:"name"`
	ResultType            string                        `pulumi:"resultType"`
	StartedOn             string                        `pulumi:"startedOn"`
	State                 string                        `pulumi:"state"`
}





type MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput() MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput
	ToMigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput
}

type MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseArgs struct {
	EndedOn               pulumi.StringInput                    `pulumi:"endedOn"`
	ExceptionsAndWarnings ReportableExceptionResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	Id                    pulumi.StringInput                    `pulumi:"id"`
	IsEnabled             pulumi.BoolInput                      `pulumi:"isEnabled"`
	Message               pulumi.StringInput                    `pulumi:"message"`
	Name                  pulumi.StringInput                    `pulumi:"name"`
	ResultType            pulumi.StringInput                    `pulumi:"resultType"`
	StartedOn             pulumi.StringInput                    `pulumi:"startedOn"`
	State                 pulumi.StringInput                    `pulumi:"state"`
}

func (MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseArgs) ToMigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput() MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseArgs) ToMigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput)
}

type MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) ToMigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput() MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) ToMigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) ExceptionsAndWarnings() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse) []ReportableExceptionResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionResponseArrayOutput)
}

func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse) string { return v.Message }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse struct {
	DatabaseName          string                        `pulumi:"databaseName"`
	EndedOn               string                        `pulumi:"endedOn"`
	ExceptionsAndWarnings []ReportableExceptionResponse `pulumi:"exceptionsAndWarnings"`
	Id                    string                        `pulumi:"id"`
	Message               string                        `pulumi:"message"`
	ResultType            string                        `pulumi:"resultType"`
	SizeMB                float64                       `pulumi:"sizeMB"`
	Stage                 string                        `pulumi:"stage"`
	StartedOn             string                        `pulumi:"startedOn"`
	State                 string                        `pulumi:"state"`
}





type MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput
	ToMigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput
}

type MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseArgs struct {
	DatabaseName          pulumi.StringInput                    `pulumi:"databaseName"`
	EndedOn               pulumi.StringInput                    `pulumi:"endedOn"`
	ExceptionsAndWarnings ReportableExceptionResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	Id                    pulumi.StringInput                    `pulumi:"id"`
	Message               pulumi.StringInput                    `pulumi:"message"`
	ResultType            pulumi.StringInput                    `pulumi:"resultType"`
	SizeMB                pulumi.Float64Input                   `pulumi:"sizeMB"`
	Stage                 pulumi.StringInput                    `pulumi:"stage"`
	StartedOn             pulumi.StringInput                    `pulumi:"startedOn"`
	State                 pulumi.StringInput                    `pulumi:"state"`
}

func (MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseArgs) ToMigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseArgs) ToMigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput)
}

type MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) ToMigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) ToMigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) ExceptionsAndWarnings() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) []ReportableExceptionResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionResponseArrayOutput)
}

func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) string { return v.Message }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) SizeMB() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) float64 { return v.SizeMB }).(pulumi.Float64Output)
}

func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) string { return v.Stage }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMITaskOutputErrorResponse struct {
	Error      ReportableExceptionResponse `pulumi:"error"`
	Id         string                      `pulumi:"id"`
	ResultType string                      `pulumi:"resultType"`
}





type MigrateSqlServerSqlMITaskOutputErrorResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskOutputErrorResponseOutput() MigrateSqlServerSqlMITaskOutputErrorResponseOutput
	ToMigrateSqlServerSqlMITaskOutputErrorResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskOutputErrorResponseOutput
}

type MigrateSqlServerSqlMITaskOutputErrorResponseArgs struct {
	Error      ReportableExceptionResponseInput `pulumi:"error"`
	Id         pulumi.StringInput               `pulumi:"id"`
	ResultType pulumi.StringInput               `pulumi:"resultType"`
}

func (MigrateSqlServerSqlMITaskOutputErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputErrorResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskOutputErrorResponseArgs) ToMigrateSqlServerSqlMITaskOutputErrorResponseOutput() MigrateSqlServerSqlMITaskOutputErrorResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskOutputErrorResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskOutputErrorResponseArgs) ToMigrateSqlServerSqlMITaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskOutputErrorResponseOutput)
}

type MigrateSqlServerSqlMITaskOutputErrorResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskOutputErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputErrorResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskOutputErrorResponseOutput) ToMigrateSqlServerSqlMITaskOutputErrorResponseOutput() MigrateSqlServerSqlMITaskOutputErrorResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputErrorResponseOutput) ToMigrateSqlServerSqlMITaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputErrorResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputErrorResponseOutput) Error() ReportableExceptionResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputErrorResponse) ReportableExceptionResponse { return v.Error }).(ReportableExceptionResponseOutput)
}

func (o MigrateSqlServerSqlMITaskOutputErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputErrorResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMITaskOutputLoginLevelResponse struct {
	EndedOn               string                        `pulumi:"endedOn"`
	ExceptionsAndWarnings []ReportableExceptionResponse `pulumi:"exceptionsAndWarnings"`
	Id                    string                        `pulumi:"id"`
	LoginName             string                        `pulumi:"loginName"`
	Message               string                        `pulumi:"message"`
	ResultType            string                        `pulumi:"resultType"`
	Stage                 string                        `pulumi:"stage"`
	StartedOn             string                        `pulumi:"startedOn"`
	State                 string                        `pulumi:"state"`
}





type MigrateSqlServerSqlMITaskOutputLoginLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput() MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput
	ToMigrateSqlServerSqlMITaskOutputLoginLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput
}

type MigrateSqlServerSqlMITaskOutputLoginLevelResponseArgs struct {
	EndedOn               pulumi.StringInput                    `pulumi:"endedOn"`
	ExceptionsAndWarnings ReportableExceptionResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	Id                    pulumi.StringInput                    `pulumi:"id"`
	LoginName             pulumi.StringInput                    `pulumi:"loginName"`
	Message               pulumi.StringInput                    `pulumi:"message"`
	ResultType            pulumi.StringInput                    `pulumi:"resultType"`
	Stage                 pulumi.StringInput                    `pulumi:"stage"`
	StartedOn             pulumi.StringInput                    `pulumi:"startedOn"`
	State                 pulumi.StringInput                    `pulumi:"state"`
}

func (MigrateSqlServerSqlMITaskOutputLoginLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputLoginLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskOutputLoginLevelResponseArgs) ToMigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput() MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskOutputLoginLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskOutputLoginLevelResponseArgs) ToMigrateSqlServerSqlMITaskOutputLoginLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput)
}

type MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputLoginLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) ToMigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput() MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) ToMigrateSqlServerSqlMITaskOutputLoginLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) ExceptionsAndWarnings() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelResponse) []ReportableExceptionResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionResponseArrayOutput)
}

func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) LoginName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelResponse) string { return v.LoginName }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelResponse) string { return v.Message }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelResponse) string { return v.Stage }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMITaskOutputMigrationLevelResponse struct {
	AgentJobs                map[string]string                                         `pulumi:"agentJobs"`
	Databases                map[string]string                                         `pulumi:"databases"`
	EndedOn                  string                                                    `pulumi:"endedOn"`
	ExceptionsAndWarnings    []ReportableExceptionResponse                             `pulumi:"exceptionsAndWarnings"`
	Id                       string                                                    `pulumi:"id"`
	Logins                   map[string]string                                         `pulumi:"logins"`
	Message                  string                                                    `pulumi:"message"`
	OrphanedUsersInfo        []OrphanedUserInfoResponse                                `pulumi:"orphanedUsersInfo"`
	ResultType               string                                                    `pulumi:"resultType"`
	ServerRoleResults        map[string]StartMigrationScenarioServerRoleResultResponse `pulumi:"serverRoleResults"`
	SourceServerBrandVersion string                                                    `pulumi:"sourceServerBrandVersion"`
	SourceServerVersion      string                                                    `pulumi:"sourceServerVersion"`
	StartedOn                string                                                    `pulumi:"startedOn"`
	State                    string                                                    `pulumi:"state"`
	Status                   string                                                    `pulumi:"status"`
	TargetServerBrandVersion string                                                    `pulumi:"targetServerBrandVersion"`
	TargetServerVersion      string                                                    `pulumi:"targetServerVersion"`
}





type MigrateSqlServerSqlMITaskOutputMigrationLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput
	ToMigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput
}

type MigrateSqlServerSqlMITaskOutputMigrationLevelResponseArgs struct {
	AgentJobs                pulumi.StringMapInput                                  `pulumi:"agentJobs"`
	Databases                pulumi.StringMapInput                                  `pulumi:"databases"`
	EndedOn                  pulumi.StringInput                                     `pulumi:"endedOn"`
	ExceptionsAndWarnings    ReportableExceptionResponseArrayInput                  `pulumi:"exceptionsAndWarnings"`
	Id                       pulumi.StringInput                                     `pulumi:"id"`
	Logins                   pulumi.StringMapInput                                  `pulumi:"logins"`
	Message                  pulumi.StringInput                                     `pulumi:"message"`
	OrphanedUsersInfo        OrphanedUserInfoResponseArrayInput                     `pulumi:"orphanedUsersInfo"`
	ResultType               pulumi.StringInput                                     `pulumi:"resultType"`
	ServerRoleResults        StartMigrationScenarioServerRoleResultResponseMapInput `pulumi:"serverRoleResults"`
	SourceServerBrandVersion pulumi.StringInput                                     `pulumi:"sourceServerBrandVersion"`
	SourceServerVersion      pulumi.StringInput                                     `pulumi:"sourceServerVersion"`
	StartedOn                pulumi.StringInput                                     `pulumi:"startedOn"`
	State                    pulumi.StringInput                                     `pulumi:"state"`
	Status                   pulumi.StringInput                                     `pulumi:"status"`
	TargetServerBrandVersion pulumi.StringInput                                     `pulumi:"targetServerBrandVersion"`
	TargetServerVersion      pulumi.StringInput                                     `pulumi:"targetServerVersion"`
}

func (MigrateSqlServerSqlMITaskOutputMigrationLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskOutputMigrationLevelResponseArgs) ToMigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskOutputMigrationLevelResponseArgs) ToMigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput)
}

type MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) ToMigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) ToMigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) AgentJobs() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) map[string]string { return v.AgentJobs }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) Databases() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) map[string]string { return v.Databases }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) ExceptionsAndWarnings() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) []ReportableExceptionResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionResponseArrayOutput)
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) Logins() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) map[string]string { return v.Logins }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string { return v.Message }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) OrphanedUsersInfo() OrphanedUserInfoResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) []OrphanedUserInfoResponse {
		return v.OrphanedUsersInfo
	}).(OrphanedUserInfoResponseArrayOutput)
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) ServerRoleResults() StartMigrationScenarioServerRoleResultResponseMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) map[string]StartMigrationScenarioServerRoleResultResponse {
		return v.ServerRoleResults
	}).(StartMigrationScenarioServerRoleResultResponseMapOutput)
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) SourceServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string {
		return v.SourceServerBrandVersion
	}).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string { return v.SourceServerVersion }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string { return v.Status }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string {
		return v.TargetServerBrandVersion
	}).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMITaskProperties struct {
	ClientData map[string]string               `pulumi:"clientData"`
	Input      *MigrateSqlServerSqlMITaskInput `pulumi:"input"`
	TaskType   string                          `pulumi:"taskType"`
}





type MigrateSqlServerSqlMITaskPropertiesInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskPropertiesOutput() MigrateSqlServerSqlMITaskPropertiesOutput
	ToMigrateSqlServerSqlMITaskPropertiesOutputWithContext(context.Context) MigrateSqlServerSqlMITaskPropertiesOutput
}

type MigrateSqlServerSqlMITaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                  `pulumi:"clientData"`
	Input      MigrateSqlServerSqlMITaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                     `pulumi:"taskType"`
}

func (MigrateSqlServerSqlMITaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskProperties)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskPropertiesArgs) ToMigrateSqlServerSqlMITaskPropertiesOutput() MigrateSqlServerSqlMITaskPropertiesOutput {
	return i.ToMigrateSqlServerSqlMITaskPropertiesOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskPropertiesArgs) ToMigrateSqlServerSqlMITaskPropertiesOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskPropertiesOutput)
}

type MigrateSqlServerSqlMITaskPropertiesOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskProperties)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskPropertiesOutput) ToMigrateSqlServerSqlMITaskPropertiesOutput() MigrateSqlServerSqlMITaskPropertiesOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskPropertiesOutput) ToMigrateSqlServerSqlMITaskPropertiesOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskPropertiesOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlMITaskPropertiesOutput) Input() MigrateSqlServerSqlMITaskInputPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskProperties) *MigrateSqlServerSqlMITaskInput { return v.Input }).(MigrateSqlServerSqlMITaskInputPtrOutput)
}

func (o MigrateSqlServerSqlMITaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMITaskPropertiesResponse struct {
	ClientData map[string]string                       `pulumi:"clientData"`
	Commands   []interface{}                           `pulumi:"commands"`
	Errors     []ODataErrorResponse                    `pulumi:"errors"`
	Input      *MigrateSqlServerSqlMITaskInputResponse `pulumi:"input"`
	Output     []interface{}                           `pulumi:"output"`
	State      string                                  `pulumi:"state"`
	TaskType   string                                  `pulumi:"taskType"`
}





type MigrateSqlServerSqlMITaskPropertiesResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskPropertiesResponseOutput() MigrateSqlServerSqlMITaskPropertiesResponseOutput
	ToMigrateSqlServerSqlMITaskPropertiesResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskPropertiesResponseOutput
}

type MigrateSqlServerSqlMITaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                          `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                              `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                   `pulumi:"errors"`
	Input      MigrateSqlServerSqlMITaskInputResponsePtrInput `pulumi:"input"`
	Output     pulumi.ArrayInput                              `pulumi:"output"`
	State      pulumi.StringInput                             `pulumi:"state"`
	TaskType   pulumi.StringInput                             `pulumi:"taskType"`
}

func (MigrateSqlServerSqlMITaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskPropertiesResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskPropertiesResponseArgs) ToMigrateSqlServerSqlMITaskPropertiesResponseOutput() MigrateSqlServerSqlMITaskPropertiesResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskPropertiesResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskPropertiesResponseArgs) ToMigrateSqlServerSqlMITaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskPropertiesResponseOutput)
}

type MigrateSqlServerSqlMITaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskPropertiesResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskPropertiesResponseOutput) ToMigrateSqlServerSqlMITaskPropertiesResponseOutput() MigrateSqlServerSqlMITaskPropertiesResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskPropertiesResponseOutput) ToMigrateSqlServerSqlMITaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskPropertiesResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o MigrateSqlServerSqlMITaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o MigrateSqlServerSqlMITaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o MigrateSqlServerSqlMITaskPropertiesResponseOutput) Input() MigrateSqlServerSqlMITaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesResponse) *MigrateSqlServerSqlMITaskInputResponse {
		return v.Input
	}).(MigrateSqlServerSqlMITaskInputResponsePtrOutput)
}

func (o MigrateSqlServerSqlMITaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

func (o MigrateSqlServerSqlMITaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MigrateSqlServerSqlMITaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type MigrateSsisTaskInput struct {
	SourceConnectionInfo SqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	SsisMigrationInfo    SsisMigrationInfo `pulumi:"ssisMigrationInfo"`
	TargetConnectionInfo SqlConnectionInfo `pulumi:"targetConnectionInfo"`
}





type MigrateSsisTaskInputInput interface {
	pulumi.Input

	ToMigrateSsisTaskInputOutput() MigrateSsisTaskInputOutput
	ToMigrateSsisTaskInputOutputWithContext(context.Context) MigrateSsisTaskInputOutput
}

type MigrateSsisTaskInputArgs struct {
	SourceConnectionInfo SqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
	SsisMigrationInfo    SsisMigrationInfoInput `pulumi:"ssisMigrationInfo"`
	TargetConnectionInfo SqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (MigrateSsisTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSsisTaskInput)(nil)).Elem()
}

func (i MigrateSsisTaskInputArgs) ToMigrateSsisTaskInputOutput() MigrateSsisTaskInputOutput {
	return i.ToMigrateSsisTaskInputOutputWithContext(context.Background())
}

func (i MigrateSsisTaskInputArgs) ToMigrateSsisTaskInputOutputWithContext(ctx context.Context) MigrateSsisTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSsisTaskInputOutput)
}

func (i MigrateSsisTaskInputArgs) ToMigrateSsisTaskInputPtrOutput() MigrateSsisTaskInputPtrOutput {
	return i.ToMigrateSsisTaskInputPtrOutputWithContext(context.Background())
}

func (i MigrateSsisTaskInputArgs) ToMigrateSsisTaskInputPtrOutputWithContext(ctx context.Context) MigrateSsisTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSsisTaskInputOutput).ToMigrateSsisTaskInputPtrOutputWithContext(ctx)
}









type MigrateSsisTaskInputPtrInput interface {
	pulumi.Input

	ToMigrateSsisTaskInputPtrOutput() MigrateSsisTaskInputPtrOutput
	ToMigrateSsisTaskInputPtrOutputWithContext(context.Context) MigrateSsisTaskInputPtrOutput
}

type migrateSsisTaskInputPtrType MigrateSsisTaskInputArgs

func MigrateSsisTaskInputPtr(v *MigrateSsisTaskInputArgs) MigrateSsisTaskInputPtrInput {
	return (*migrateSsisTaskInputPtrType)(v)
}

func (*migrateSsisTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSsisTaskInput)(nil)).Elem()
}

func (i *migrateSsisTaskInputPtrType) ToMigrateSsisTaskInputPtrOutput() MigrateSsisTaskInputPtrOutput {
	return i.ToMigrateSsisTaskInputPtrOutputWithContext(context.Background())
}

func (i *migrateSsisTaskInputPtrType) ToMigrateSsisTaskInputPtrOutputWithContext(ctx context.Context) MigrateSsisTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSsisTaskInputPtrOutput)
}

type MigrateSsisTaskInputOutput struct{ *pulumi.OutputState }

func (MigrateSsisTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSsisTaskInput)(nil)).Elem()
}

func (o MigrateSsisTaskInputOutput) ToMigrateSsisTaskInputOutput() MigrateSsisTaskInputOutput {
	return o
}

func (o MigrateSsisTaskInputOutput) ToMigrateSsisTaskInputOutputWithContext(ctx context.Context) MigrateSsisTaskInputOutput {
	return o
}

func (o MigrateSsisTaskInputOutput) ToMigrateSsisTaskInputPtrOutput() MigrateSsisTaskInputPtrOutput {
	return o.ToMigrateSsisTaskInputPtrOutputWithContext(context.Background())
}

func (o MigrateSsisTaskInputOutput) ToMigrateSsisTaskInputPtrOutputWithContext(ctx context.Context) MigrateSsisTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrateSsisTaskInput) *MigrateSsisTaskInput {
		return &v
	}).(MigrateSsisTaskInputPtrOutput)
}

func (o MigrateSsisTaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateSsisTaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

func (o MigrateSsisTaskInputOutput) SsisMigrationInfo() SsisMigrationInfoOutput {
	return o.ApplyT(func(v MigrateSsisTaskInput) SsisMigrationInfo { return v.SsisMigrationInfo }).(SsisMigrationInfoOutput)
}

func (o MigrateSsisTaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateSsisTaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

type MigrateSsisTaskInputPtrOutput struct{ *pulumi.OutputState }

func (MigrateSsisTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSsisTaskInput)(nil)).Elem()
}

func (o MigrateSsisTaskInputPtrOutput) ToMigrateSsisTaskInputPtrOutput() MigrateSsisTaskInputPtrOutput {
	return o
}

func (o MigrateSsisTaskInputPtrOutput) ToMigrateSsisTaskInputPtrOutputWithContext(ctx context.Context) MigrateSsisTaskInputPtrOutput {
	return o
}

func (o MigrateSsisTaskInputPtrOutput) Elem() MigrateSsisTaskInputOutput {
	return o.ApplyT(func(v *MigrateSsisTaskInput) MigrateSsisTaskInput {
		if v != nil {
			return *v
		}
		var ret MigrateSsisTaskInput
		return ret
	}).(MigrateSsisTaskInputOutput)
}

func (o MigrateSsisTaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSsisTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

func (o MigrateSsisTaskInputPtrOutput) SsisMigrationInfo() SsisMigrationInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSsisTaskInput) *SsisMigrationInfo {
		if v == nil {
			return nil
		}
		return &v.SsisMigrationInfo
	}).(SsisMigrationInfoPtrOutput)
}

func (o MigrateSsisTaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSsisTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

type MigrateSsisTaskInputResponse struct {
	SourceConnectionInfo SqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	SsisMigrationInfo    SsisMigrationInfoResponse `pulumi:"ssisMigrationInfo"`
	TargetConnectionInfo SqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}





type MigrateSsisTaskInputResponseInput interface {
	pulumi.Input

	ToMigrateSsisTaskInputResponseOutput() MigrateSsisTaskInputResponseOutput
	ToMigrateSsisTaskInputResponseOutputWithContext(context.Context) MigrateSsisTaskInputResponseOutput
}

type MigrateSsisTaskInputResponseArgs struct {
	SourceConnectionInfo SqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	SsisMigrationInfo    SsisMigrationInfoResponseInput `pulumi:"ssisMigrationInfo"`
	TargetConnectionInfo SqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (MigrateSsisTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSsisTaskInputResponse)(nil)).Elem()
}

func (i MigrateSsisTaskInputResponseArgs) ToMigrateSsisTaskInputResponseOutput() MigrateSsisTaskInputResponseOutput {
	return i.ToMigrateSsisTaskInputResponseOutputWithContext(context.Background())
}

func (i MigrateSsisTaskInputResponseArgs) ToMigrateSsisTaskInputResponseOutputWithContext(ctx context.Context) MigrateSsisTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSsisTaskInputResponseOutput)
}

func (i MigrateSsisTaskInputResponseArgs) ToMigrateSsisTaskInputResponsePtrOutput() MigrateSsisTaskInputResponsePtrOutput {
	return i.ToMigrateSsisTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i MigrateSsisTaskInputResponseArgs) ToMigrateSsisTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSsisTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSsisTaskInputResponseOutput).ToMigrateSsisTaskInputResponsePtrOutputWithContext(ctx)
}









type MigrateSsisTaskInputResponsePtrInput interface {
	pulumi.Input

	ToMigrateSsisTaskInputResponsePtrOutput() MigrateSsisTaskInputResponsePtrOutput
	ToMigrateSsisTaskInputResponsePtrOutputWithContext(context.Context) MigrateSsisTaskInputResponsePtrOutput
}

type migrateSsisTaskInputResponsePtrType MigrateSsisTaskInputResponseArgs

func MigrateSsisTaskInputResponsePtr(v *MigrateSsisTaskInputResponseArgs) MigrateSsisTaskInputResponsePtrInput {
	return (*migrateSsisTaskInputResponsePtrType)(v)
}

func (*migrateSsisTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSsisTaskInputResponse)(nil)).Elem()
}

func (i *migrateSsisTaskInputResponsePtrType) ToMigrateSsisTaskInputResponsePtrOutput() MigrateSsisTaskInputResponsePtrOutput {
	return i.ToMigrateSsisTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *migrateSsisTaskInputResponsePtrType) ToMigrateSsisTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSsisTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSsisTaskInputResponsePtrOutput)
}

type MigrateSsisTaskInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSsisTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSsisTaskInputResponse)(nil)).Elem()
}

func (o MigrateSsisTaskInputResponseOutput) ToMigrateSsisTaskInputResponseOutput() MigrateSsisTaskInputResponseOutput {
	return o
}

func (o MigrateSsisTaskInputResponseOutput) ToMigrateSsisTaskInputResponseOutputWithContext(ctx context.Context) MigrateSsisTaskInputResponseOutput {
	return o
}

func (o MigrateSsisTaskInputResponseOutput) ToMigrateSsisTaskInputResponsePtrOutput() MigrateSsisTaskInputResponsePtrOutput {
	return o.ToMigrateSsisTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o MigrateSsisTaskInputResponseOutput) ToMigrateSsisTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSsisTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrateSsisTaskInputResponse) *MigrateSsisTaskInputResponse {
		return &v
	}).(MigrateSsisTaskInputResponsePtrOutput)
}

func (o MigrateSsisTaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateSsisTaskInputResponse) SqlConnectionInfoResponse { return v.SourceConnectionInfo }).(SqlConnectionInfoResponseOutput)
}

func (o MigrateSsisTaskInputResponseOutput) SsisMigrationInfo() SsisMigrationInfoResponseOutput {
	return o.ApplyT(func(v MigrateSsisTaskInputResponse) SsisMigrationInfoResponse { return v.SsisMigrationInfo }).(SsisMigrationInfoResponseOutput)
}

func (o MigrateSsisTaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateSsisTaskInputResponse) SqlConnectionInfoResponse { return v.TargetConnectionInfo }).(SqlConnectionInfoResponseOutput)
}

type MigrateSsisTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateSsisTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSsisTaskInputResponse)(nil)).Elem()
}

func (o MigrateSsisTaskInputResponsePtrOutput) ToMigrateSsisTaskInputResponsePtrOutput() MigrateSsisTaskInputResponsePtrOutput {
	return o
}

func (o MigrateSsisTaskInputResponsePtrOutput) ToMigrateSsisTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSsisTaskInputResponsePtrOutput {
	return o
}

func (o MigrateSsisTaskInputResponsePtrOutput) Elem() MigrateSsisTaskInputResponseOutput {
	return o.ApplyT(func(v *MigrateSsisTaskInputResponse) MigrateSsisTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret MigrateSsisTaskInputResponse
		return ret
	}).(MigrateSsisTaskInputResponseOutput)
}

func (o MigrateSsisTaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSsisTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

func (o MigrateSsisTaskInputResponsePtrOutput) SsisMigrationInfo() SsisMigrationInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSsisTaskInputResponse) *SsisMigrationInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SsisMigrationInfo
	}).(SsisMigrationInfoResponsePtrOutput)
}

func (o MigrateSsisTaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSsisTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

type MigrateSsisTaskOutputMigrationLevelResponse struct {
	EndedOn                  string                        `pulumi:"endedOn"`
	ExceptionsAndWarnings    []ReportableExceptionResponse `pulumi:"exceptionsAndWarnings"`
	Id                       string                        `pulumi:"id"`
	Message                  string                        `pulumi:"message"`
	ResultType               string                        `pulumi:"resultType"`
	SourceServerBrandVersion string                        `pulumi:"sourceServerBrandVersion"`
	SourceServerVersion      string                        `pulumi:"sourceServerVersion"`
	Stage                    string                        `pulumi:"stage"`
	StartedOn                string                        `pulumi:"startedOn"`
	Status                   string                        `pulumi:"status"`
	TargetServerBrandVersion string                        `pulumi:"targetServerBrandVersion"`
	TargetServerVersion      string                        `pulumi:"targetServerVersion"`
}





type MigrateSsisTaskOutputMigrationLevelResponseInput interface {
	pulumi.Input

	ToMigrateSsisTaskOutputMigrationLevelResponseOutput() MigrateSsisTaskOutputMigrationLevelResponseOutput
	ToMigrateSsisTaskOutputMigrationLevelResponseOutputWithContext(context.Context) MigrateSsisTaskOutputMigrationLevelResponseOutput
}

type MigrateSsisTaskOutputMigrationLevelResponseArgs struct {
	EndedOn                  pulumi.StringInput                    `pulumi:"endedOn"`
	ExceptionsAndWarnings    ReportableExceptionResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	Id                       pulumi.StringInput                    `pulumi:"id"`
	Message                  pulumi.StringInput                    `pulumi:"message"`
	ResultType               pulumi.StringInput                    `pulumi:"resultType"`
	SourceServerBrandVersion pulumi.StringInput                    `pulumi:"sourceServerBrandVersion"`
	SourceServerVersion      pulumi.StringInput                    `pulumi:"sourceServerVersion"`
	Stage                    pulumi.StringInput                    `pulumi:"stage"`
	StartedOn                pulumi.StringInput                    `pulumi:"startedOn"`
	Status                   pulumi.StringInput                    `pulumi:"status"`
	TargetServerBrandVersion pulumi.StringInput                    `pulumi:"targetServerBrandVersion"`
	TargetServerVersion      pulumi.StringInput                    `pulumi:"targetServerVersion"`
}

func (MigrateSsisTaskOutputMigrationLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSsisTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (i MigrateSsisTaskOutputMigrationLevelResponseArgs) ToMigrateSsisTaskOutputMigrationLevelResponseOutput() MigrateSsisTaskOutputMigrationLevelResponseOutput {
	return i.ToMigrateSsisTaskOutputMigrationLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSsisTaskOutputMigrationLevelResponseArgs) ToMigrateSsisTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateSsisTaskOutputMigrationLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSsisTaskOutputMigrationLevelResponseOutput)
}

type MigrateSsisTaskOutputMigrationLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSsisTaskOutputMigrationLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSsisTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (o MigrateSsisTaskOutputMigrationLevelResponseOutput) ToMigrateSsisTaskOutputMigrationLevelResponseOutput() MigrateSsisTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateSsisTaskOutputMigrationLevelResponseOutput) ToMigrateSsisTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateSsisTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateSsisTaskOutputMigrationLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputMigrationLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskOutputMigrationLevelResponseOutput) ExceptionsAndWarnings() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputMigrationLevelResponse) []ReportableExceptionResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionResponseArrayOutput)
}

func (o MigrateSsisTaskOutputMigrationLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputMigrationLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskOutputMigrationLevelResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputMigrationLevelResponse) string { return v.Message }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskOutputMigrationLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputMigrationLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskOutputMigrationLevelResponseOutput) SourceServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputMigrationLevelResponse) string { return v.SourceServerBrandVersion }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskOutputMigrationLevelResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputMigrationLevelResponse) string { return v.SourceServerVersion }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskOutputMigrationLevelResponseOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputMigrationLevelResponse) string { return v.Stage }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskOutputMigrationLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputMigrationLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskOutputMigrationLevelResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputMigrationLevelResponse) string { return v.Status }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskOutputMigrationLevelResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputMigrationLevelResponse) string { return v.TargetServerBrandVersion }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskOutputMigrationLevelResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputMigrationLevelResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

type MigrateSsisTaskOutputProjectLevelResponse struct {
	EndedOn               string                        `pulumi:"endedOn"`
	ExceptionsAndWarnings []ReportableExceptionResponse `pulumi:"exceptionsAndWarnings"`
	FolderName            string                        `pulumi:"folderName"`
	Id                    string                        `pulumi:"id"`
	Message               string                        `pulumi:"message"`
	ProjectName           string                        `pulumi:"projectName"`
	ResultType            string                        `pulumi:"resultType"`
	Stage                 string                        `pulumi:"stage"`
	StartedOn             string                        `pulumi:"startedOn"`
	State                 string                        `pulumi:"state"`
}





type MigrateSsisTaskOutputProjectLevelResponseInput interface {
	pulumi.Input

	ToMigrateSsisTaskOutputProjectLevelResponseOutput() MigrateSsisTaskOutputProjectLevelResponseOutput
	ToMigrateSsisTaskOutputProjectLevelResponseOutputWithContext(context.Context) MigrateSsisTaskOutputProjectLevelResponseOutput
}

type MigrateSsisTaskOutputProjectLevelResponseArgs struct {
	EndedOn               pulumi.StringInput                    `pulumi:"endedOn"`
	ExceptionsAndWarnings ReportableExceptionResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	FolderName            pulumi.StringInput                    `pulumi:"folderName"`
	Id                    pulumi.StringInput                    `pulumi:"id"`
	Message               pulumi.StringInput                    `pulumi:"message"`
	ProjectName           pulumi.StringInput                    `pulumi:"projectName"`
	ResultType            pulumi.StringInput                    `pulumi:"resultType"`
	Stage                 pulumi.StringInput                    `pulumi:"stage"`
	StartedOn             pulumi.StringInput                    `pulumi:"startedOn"`
	State                 pulumi.StringInput                    `pulumi:"state"`
}

func (MigrateSsisTaskOutputProjectLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSsisTaskOutputProjectLevelResponse)(nil)).Elem()
}

func (i MigrateSsisTaskOutputProjectLevelResponseArgs) ToMigrateSsisTaskOutputProjectLevelResponseOutput() MigrateSsisTaskOutputProjectLevelResponseOutput {
	return i.ToMigrateSsisTaskOutputProjectLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSsisTaskOutputProjectLevelResponseArgs) ToMigrateSsisTaskOutputProjectLevelResponseOutputWithContext(ctx context.Context) MigrateSsisTaskOutputProjectLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSsisTaskOutputProjectLevelResponseOutput)
}

type MigrateSsisTaskOutputProjectLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSsisTaskOutputProjectLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSsisTaskOutputProjectLevelResponse)(nil)).Elem()
}

func (o MigrateSsisTaskOutputProjectLevelResponseOutput) ToMigrateSsisTaskOutputProjectLevelResponseOutput() MigrateSsisTaskOutputProjectLevelResponseOutput {
	return o
}

func (o MigrateSsisTaskOutputProjectLevelResponseOutput) ToMigrateSsisTaskOutputProjectLevelResponseOutputWithContext(ctx context.Context) MigrateSsisTaskOutputProjectLevelResponseOutput {
	return o
}

func (o MigrateSsisTaskOutputProjectLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputProjectLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskOutputProjectLevelResponseOutput) ExceptionsAndWarnings() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputProjectLevelResponse) []ReportableExceptionResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionResponseArrayOutput)
}

func (o MigrateSsisTaskOutputProjectLevelResponseOutput) FolderName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputProjectLevelResponse) string { return v.FolderName }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskOutputProjectLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputProjectLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskOutputProjectLevelResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputProjectLevelResponse) string { return v.Message }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskOutputProjectLevelResponseOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputProjectLevelResponse) string { return v.ProjectName }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskOutputProjectLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputProjectLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskOutputProjectLevelResponseOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputProjectLevelResponse) string { return v.Stage }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskOutputProjectLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputProjectLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskOutputProjectLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskOutputProjectLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

type MigrateSsisTaskProperties struct {
	ClientData map[string]string     `pulumi:"clientData"`
	Input      *MigrateSsisTaskInput `pulumi:"input"`
	TaskType   string                `pulumi:"taskType"`
}





type MigrateSsisTaskPropertiesInput interface {
	pulumi.Input

	ToMigrateSsisTaskPropertiesOutput() MigrateSsisTaskPropertiesOutput
	ToMigrateSsisTaskPropertiesOutputWithContext(context.Context) MigrateSsisTaskPropertiesOutput
}

type MigrateSsisTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput        `pulumi:"clientData"`
	Input      MigrateSsisTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput           `pulumi:"taskType"`
}

func (MigrateSsisTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSsisTaskProperties)(nil)).Elem()
}

func (i MigrateSsisTaskPropertiesArgs) ToMigrateSsisTaskPropertiesOutput() MigrateSsisTaskPropertiesOutput {
	return i.ToMigrateSsisTaskPropertiesOutputWithContext(context.Background())
}

func (i MigrateSsisTaskPropertiesArgs) ToMigrateSsisTaskPropertiesOutputWithContext(ctx context.Context) MigrateSsisTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSsisTaskPropertiesOutput)
}

type MigrateSsisTaskPropertiesOutput struct{ *pulumi.OutputState }

func (MigrateSsisTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSsisTaskProperties)(nil)).Elem()
}

func (o MigrateSsisTaskPropertiesOutput) ToMigrateSsisTaskPropertiesOutput() MigrateSsisTaskPropertiesOutput {
	return o
}

func (o MigrateSsisTaskPropertiesOutput) ToMigrateSsisTaskPropertiesOutputWithContext(ctx context.Context) MigrateSsisTaskPropertiesOutput {
	return o
}

func (o MigrateSsisTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSsisTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o MigrateSsisTaskPropertiesOutput) Input() MigrateSsisTaskInputPtrOutput {
	return o.ApplyT(func(v MigrateSsisTaskProperties) *MigrateSsisTaskInput { return v.Input }).(MigrateSsisTaskInputPtrOutput)
}

func (o MigrateSsisTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type MigrateSsisTaskPropertiesResponse struct {
	ClientData map[string]string             `pulumi:"clientData"`
	Commands   []interface{}                 `pulumi:"commands"`
	Errors     []ODataErrorResponse          `pulumi:"errors"`
	Input      *MigrateSsisTaskInputResponse `pulumi:"input"`
	Output     []interface{}                 `pulumi:"output"`
	State      string                        `pulumi:"state"`
	TaskType   string                        `pulumi:"taskType"`
}





type MigrateSsisTaskPropertiesResponseInput interface {
	pulumi.Input

	ToMigrateSsisTaskPropertiesResponseOutput() MigrateSsisTaskPropertiesResponseOutput
	ToMigrateSsisTaskPropertiesResponseOutputWithContext(context.Context) MigrateSsisTaskPropertiesResponseOutput
}

type MigrateSsisTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                    `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput         `pulumi:"errors"`
	Input      MigrateSsisTaskInputResponsePtrInput `pulumi:"input"`
	Output     pulumi.ArrayInput                    `pulumi:"output"`
	State      pulumi.StringInput                   `pulumi:"state"`
	TaskType   pulumi.StringInput                   `pulumi:"taskType"`
}

func (MigrateSsisTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSsisTaskPropertiesResponse)(nil)).Elem()
}

func (i MigrateSsisTaskPropertiesResponseArgs) ToMigrateSsisTaskPropertiesResponseOutput() MigrateSsisTaskPropertiesResponseOutput {
	return i.ToMigrateSsisTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i MigrateSsisTaskPropertiesResponseArgs) ToMigrateSsisTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateSsisTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSsisTaskPropertiesResponseOutput)
}

type MigrateSsisTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrateSsisTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSsisTaskPropertiesResponse)(nil)).Elem()
}

func (o MigrateSsisTaskPropertiesResponseOutput) ToMigrateSsisTaskPropertiesResponseOutput() MigrateSsisTaskPropertiesResponseOutput {
	return o
}

func (o MigrateSsisTaskPropertiesResponseOutput) ToMigrateSsisTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateSsisTaskPropertiesResponseOutput {
	return o
}

func (o MigrateSsisTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSsisTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o MigrateSsisTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSsisTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o MigrateSsisTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrateSsisTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o MigrateSsisTaskPropertiesResponseOutput) Input() MigrateSsisTaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateSsisTaskPropertiesResponse) *MigrateSsisTaskInputResponse { return v.Input }).(MigrateSsisTaskInputResponsePtrOutput)
}

func (o MigrateSsisTaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSsisTaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

func (o MigrateSsisTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MigrateSsisTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSsisTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type MigrateSyncCompleteCommandInputResponse struct {
	CommitTimeStamp *string `pulumi:"commitTimeStamp"`
	DatabaseName    string  `pulumi:"databaseName"`
}





type MigrateSyncCompleteCommandInputResponseInput interface {
	pulumi.Input

	ToMigrateSyncCompleteCommandInputResponseOutput() MigrateSyncCompleteCommandInputResponseOutput
	ToMigrateSyncCompleteCommandInputResponseOutputWithContext(context.Context) MigrateSyncCompleteCommandInputResponseOutput
}

type MigrateSyncCompleteCommandInputResponseArgs struct {
	CommitTimeStamp pulumi.StringPtrInput `pulumi:"commitTimeStamp"`
	DatabaseName    pulumi.StringInput    `pulumi:"databaseName"`
}

func (MigrateSyncCompleteCommandInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSyncCompleteCommandInputResponse)(nil)).Elem()
}

func (i MigrateSyncCompleteCommandInputResponseArgs) ToMigrateSyncCompleteCommandInputResponseOutput() MigrateSyncCompleteCommandInputResponseOutput {
	return i.ToMigrateSyncCompleteCommandInputResponseOutputWithContext(context.Background())
}

func (i MigrateSyncCompleteCommandInputResponseArgs) ToMigrateSyncCompleteCommandInputResponseOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSyncCompleteCommandInputResponseOutput)
}

func (i MigrateSyncCompleteCommandInputResponseArgs) ToMigrateSyncCompleteCommandInputResponsePtrOutput() MigrateSyncCompleteCommandInputResponsePtrOutput {
	return i.ToMigrateSyncCompleteCommandInputResponsePtrOutputWithContext(context.Background())
}

func (i MigrateSyncCompleteCommandInputResponseArgs) ToMigrateSyncCompleteCommandInputResponsePtrOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSyncCompleteCommandInputResponseOutput).ToMigrateSyncCompleteCommandInputResponsePtrOutputWithContext(ctx)
}









type MigrateSyncCompleteCommandInputResponsePtrInput interface {
	pulumi.Input

	ToMigrateSyncCompleteCommandInputResponsePtrOutput() MigrateSyncCompleteCommandInputResponsePtrOutput
	ToMigrateSyncCompleteCommandInputResponsePtrOutputWithContext(context.Context) MigrateSyncCompleteCommandInputResponsePtrOutput
}

type migrateSyncCompleteCommandInputResponsePtrType MigrateSyncCompleteCommandInputResponseArgs

func MigrateSyncCompleteCommandInputResponsePtr(v *MigrateSyncCompleteCommandInputResponseArgs) MigrateSyncCompleteCommandInputResponsePtrInput {
	return (*migrateSyncCompleteCommandInputResponsePtrType)(v)
}

func (*migrateSyncCompleteCommandInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSyncCompleteCommandInputResponse)(nil)).Elem()
}

func (i *migrateSyncCompleteCommandInputResponsePtrType) ToMigrateSyncCompleteCommandInputResponsePtrOutput() MigrateSyncCompleteCommandInputResponsePtrOutput {
	return i.ToMigrateSyncCompleteCommandInputResponsePtrOutputWithContext(context.Background())
}

func (i *migrateSyncCompleteCommandInputResponsePtrType) ToMigrateSyncCompleteCommandInputResponsePtrOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSyncCompleteCommandInputResponsePtrOutput)
}

type MigrateSyncCompleteCommandInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSyncCompleteCommandInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSyncCompleteCommandInputResponse)(nil)).Elem()
}

func (o MigrateSyncCompleteCommandInputResponseOutput) ToMigrateSyncCompleteCommandInputResponseOutput() MigrateSyncCompleteCommandInputResponseOutput {
	return o
}

func (o MigrateSyncCompleteCommandInputResponseOutput) ToMigrateSyncCompleteCommandInputResponseOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandInputResponseOutput {
	return o
}

func (o MigrateSyncCompleteCommandInputResponseOutput) ToMigrateSyncCompleteCommandInputResponsePtrOutput() MigrateSyncCompleteCommandInputResponsePtrOutput {
	return o.ToMigrateSyncCompleteCommandInputResponsePtrOutputWithContext(context.Background())
}

func (o MigrateSyncCompleteCommandInputResponseOutput) ToMigrateSyncCompleteCommandInputResponsePtrOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrateSyncCompleteCommandInputResponse) *MigrateSyncCompleteCommandInputResponse {
		return &v
	}).(MigrateSyncCompleteCommandInputResponsePtrOutput)
}

func (o MigrateSyncCompleteCommandInputResponseOutput) CommitTimeStamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandInputResponse) *string { return v.CommitTimeStamp }).(pulumi.StringPtrOutput)
}

func (o MigrateSyncCompleteCommandInputResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandInputResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type MigrateSyncCompleteCommandInputResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateSyncCompleteCommandInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSyncCompleteCommandInputResponse)(nil)).Elem()
}

func (o MigrateSyncCompleteCommandInputResponsePtrOutput) ToMigrateSyncCompleteCommandInputResponsePtrOutput() MigrateSyncCompleteCommandInputResponsePtrOutput {
	return o
}

func (o MigrateSyncCompleteCommandInputResponsePtrOutput) ToMigrateSyncCompleteCommandInputResponsePtrOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandInputResponsePtrOutput {
	return o
}

func (o MigrateSyncCompleteCommandInputResponsePtrOutput) Elem() MigrateSyncCompleteCommandInputResponseOutput {
	return o.ApplyT(func(v *MigrateSyncCompleteCommandInputResponse) MigrateSyncCompleteCommandInputResponse {
		if v != nil {
			return *v
		}
		var ret MigrateSyncCompleteCommandInputResponse
		return ret
	}).(MigrateSyncCompleteCommandInputResponseOutput)
}

func (o MigrateSyncCompleteCommandInputResponsePtrOutput) CommitTimeStamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateSyncCompleteCommandInputResponse) *string {
		if v == nil {
			return nil
		}
		return v.CommitTimeStamp
	}).(pulumi.StringPtrOutput)
}

func (o MigrateSyncCompleteCommandInputResponsePtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateSyncCompleteCommandInputResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

type MigrateSyncCompleteCommandOutputResponse struct {
	Errors []ReportableExceptionResponse `pulumi:"errors"`
	Id     string                        `pulumi:"id"`
}





type MigrateSyncCompleteCommandOutputResponseInput interface {
	pulumi.Input

	ToMigrateSyncCompleteCommandOutputResponseOutput() MigrateSyncCompleteCommandOutputResponseOutput
	ToMigrateSyncCompleteCommandOutputResponseOutputWithContext(context.Context) MigrateSyncCompleteCommandOutputResponseOutput
}

type MigrateSyncCompleteCommandOutputResponseArgs struct {
	Errors ReportableExceptionResponseArrayInput `pulumi:"errors"`
	Id     pulumi.StringInput                    `pulumi:"id"`
}

func (MigrateSyncCompleteCommandOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSyncCompleteCommandOutputResponse)(nil)).Elem()
}

func (i MigrateSyncCompleteCommandOutputResponseArgs) ToMigrateSyncCompleteCommandOutputResponseOutput() MigrateSyncCompleteCommandOutputResponseOutput {
	return i.ToMigrateSyncCompleteCommandOutputResponseOutputWithContext(context.Background())
}

func (i MigrateSyncCompleteCommandOutputResponseArgs) ToMigrateSyncCompleteCommandOutputResponseOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSyncCompleteCommandOutputResponseOutput)
}

type MigrateSyncCompleteCommandOutputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSyncCompleteCommandOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSyncCompleteCommandOutputResponse)(nil)).Elem()
}

func (o MigrateSyncCompleteCommandOutputResponseOutput) ToMigrateSyncCompleteCommandOutputResponseOutput() MigrateSyncCompleteCommandOutputResponseOutput {
	return o
}

func (o MigrateSyncCompleteCommandOutputResponseOutput) ToMigrateSyncCompleteCommandOutputResponseOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandOutputResponseOutput {
	return o
}

func (o MigrateSyncCompleteCommandOutputResponseOutput) Errors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandOutputResponse) []ReportableExceptionResponse { return v.Errors }).(ReportableExceptionResponseArrayOutput)
}

func (o MigrateSyncCompleteCommandOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

type MigrateSyncCompleteCommandPropertiesResponse struct {
	CommandType string                                   `pulumi:"commandType"`
	Errors      []ODataErrorResponse                     `pulumi:"errors"`
	Input       *MigrateSyncCompleteCommandInputResponse `pulumi:"input"`
	Output      MigrateSyncCompleteCommandOutputResponse `pulumi:"output"`
	State       string                                   `pulumi:"state"`
}





type MigrateSyncCompleteCommandPropertiesResponseInput interface {
	pulumi.Input

	ToMigrateSyncCompleteCommandPropertiesResponseOutput() MigrateSyncCompleteCommandPropertiesResponseOutput
	ToMigrateSyncCompleteCommandPropertiesResponseOutputWithContext(context.Context) MigrateSyncCompleteCommandPropertiesResponseOutput
}

type MigrateSyncCompleteCommandPropertiesResponseArgs struct {
	CommandType pulumi.StringInput                              `pulumi:"commandType"`
	Errors      ODataErrorResponseArrayInput                    `pulumi:"errors"`
	Input       MigrateSyncCompleteCommandInputResponsePtrInput `pulumi:"input"`
	Output      MigrateSyncCompleteCommandOutputResponseInput   `pulumi:"output"`
	State       pulumi.StringInput                              `pulumi:"state"`
}

func (MigrateSyncCompleteCommandPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSyncCompleteCommandPropertiesResponse)(nil)).Elem()
}

func (i MigrateSyncCompleteCommandPropertiesResponseArgs) ToMigrateSyncCompleteCommandPropertiesResponseOutput() MigrateSyncCompleteCommandPropertiesResponseOutput {
	return i.ToMigrateSyncCompleteCommandPropertiesResponseOutputWithContext(context.Background())
}

func (i MigrateSyncCompleteCommandPropertiesResponseArgs) ToMigrateSyncCompleteCommandPropertiesResponseOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSyncCompleteCommandPropertiesResponseOutput)
}

type MigrateSyncCompleteCommandPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrateSyncCompleteCommandPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSyncCompleteCommandPropertiesResponse)(nil)).Elem()
}

func (o MigrateSyncCompleteCommandPropertiesResponseOutput) ToMigrateSyncCompleteCommandPropertiesResponseOutput() MigrateSyncCompleteCommandPropertiesResponseOutput {
	return o
}

func (o MigrateSyncCompleteCommandPropertiesResponseOutput) ToMigrateSyncCompleteCommandPropertiesResponseOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandPropertiesResponseOutput {
	return o
}

func (o MigrateSyncCompleteCommandPropertiesResponseOutput) CommandType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandPropertiesResponse) string { return v.CommandType }).(pulumi.StringOutput)
}

func (o MigrateSyncCompleteCommandPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o MigrateSyncCompleteCommandPropertiesResponseOutput) Input() MigrateSyncCompleteCommandInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandPropertiesResponse) *MigrateSyncCompleteCommandInputResponse {
		return v.Input
	}).(MigrateSyncCompleteCommandInputResponsePtrOutput)
}

func (o MigrateSyncCompleteCommandPropertiesResponseOutput) Output() MigrateSyncCompleteCommandOutputResponseOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandPropertiesResponse) MigrateSyncCompleteCommandOutputResponse {
		return v.Output
	}).(MigrateSyncCompleteCommandOutputResponseOutput)
}

func (o MigrateSyncCompleteCommandPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

type MigrationEligibilityInfoResponse struct {
	IsEligibleForMigration bool     `pulumi:"isEligibleForMigration"`
	ValidationMessages     []string `pulumi:"validationMessages"`
}





type MigrationEligibilityInfoResponseInput interface {
	pulumi.Input

	ToMigrationEligibilityInfoResponseOutput() MigrationEligibilityInfoResponseOutput
	ToMigrationEligibilityInfoResponseOutputWithContext(context.Context) MigrationEligibilityInfoResponseOutput
}

type MigrationEligibilityInfoResponseArgs struct {
	IsEligibleForMigration pulumi.BoolInput        `pulumi:"isEligibleForMigration"`
	ValidationMessages     pulumi.StringArrayInput `pulumi:"validationMessages"`
}

func (MigrationEligibilityInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationEligibilityInfoResponse)(nil)).Elem()
}

func (i MigrationEligibilityInfoResponseArgs) ToMigrationEligibilityInfoResponseOutput() MigrationEligibilityInfoResponseOutput {
	return i.ToMigrationEligibilityInfoResponseOutputWithContext(context.Background())
}

func (i MigrationEligibilityInfoResponseArgs) ToMigrationEligibilityInfoResponseOutputWithContext(ctx context.Context) MigrationEligibilityInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationEligibilityInfoResponseOutput)
}

type MigrationEligibilityInfoResponseOutput struct{ *pulumi.OutputState }

func (MigrationEligibilityInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationEligibilityInfoResponse)(nil)).Elem()
}

func (o MigrationEligibilityInfoResponseOutput) ToMigrationEligibilityInfoResponseOutput() MigrationEligibilityInfoResponseOutput {
	return o
}

func (o MigrationEligibilityInfoResponseOutput) ToMigrationEligibilityInfoResponseOutputWithContext(ctx context.Context) MigrationEligibilityInfoResponseOutput {
	return o
}

func (o MigrationEligibilityInfoResponseOutput) IsEligibleForMigration() pulumi.BoolOutput {
	return o.ApplyT(func(v MigrationEligibilityInfoResponse) bool { return v.IsEligibleForMigration }).(pulumi.BoolOutput)
}

func (o MigrationEligibilityInfoResponseOutput) ValidationMessages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrationEligibilityInfoResponse) []string { return v.ValidationMessages }).(pulumi.StringArrayOutput)
}

type MigrationReportResultResponse struct {
	Id        *string `pulumi:"id"`
	ReportUrl *string `pulumi:"reportUrl"`
}





type MigrationReportResultResponseInput interface {
	pulumi.Input

	ToMigrationReportResultResponseOutput() MigrationReportResultResponseOutput
	ToMigrationReportResultResponseOutputWithContext(context.Context) MigrationReportResultResponseOutput
}

type MigrationReportResultResponseArgs struct {
	Id        pulumi.StringPtrInput `pulumi:"id"`
	ReportUrl pulumi.StringPtrInput `pulumi:"reportUrl"`
}

func (MigrationReportResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationReportResultResponse)(nil)).Elem()
}

func (i MigrationReportResultResponseArgs) ToMigrationReportResultResponseOutput() MigrationReportResultResponseOutput {
	return i.ToMigrationReportResultResponseOutputWithContext(context.Background())
}

func (i MigrationReportResultResponseArgs) ToMigrationReportResultResponseOutputWithContext(ctx context.Context) MigrationReportResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationReportResultResponseOutput)
}

func (i MigrationReportResultResponseArgs) ToMigrationReportResultResponsePtrOutput() MigrationReportResultResponsePtrOutput {
	return i.ToMigrationReportResultResponsePtrOutputWithContext(context.Background())
}

func (i MigrationReportResultResponseArgs) ToMigrationReportResultResponsePtrOutputWithContext(ctx context.Context) MigrationReportResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationReportResultResponseOutput).ToMigrationReportResultResponsePtrOutputWithContext(ctx)
}









type MigrationReportResultResponsePtrInput interface {
	pulumi.Input

	ToMigrationReportResultResponsePtrOutput() MigrationReportResultResponsePtrOutput
	ToMigrationReportResultResponsePtrOutputWithContext(context.Context) MigrationReportResultResponsePtrOutput
}

type migrationReportResultResponsePtrType MigrationReportResultResponseArgs

func MigrationReportResultResponsePtr(v *MigrationReportResultResponseArgs) MigrationReportResultResponsePtrInput {
	return (*migrationReportResultResponsePtrType)(v)
}

func (*migrationReportResultResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationReportResultResponse)(nil)).Elem()
}

func (i *migrationReportResultResponsePtrType) ToMigrationReportResultResponsePtrOutput() MigrationReportResultResponsePtrOutput {
	return i.ToMigrationReportResultResponsePtrOutputWithContext(context.Background())
}

func (i *migrationReportResultResponsePtrType) ToMigrationReportResultResponsePtrOutputWithContext(ctx context.Context) MigrationReportResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationReportResultResponsePtrOutput)
}

type MigrationReportResultResponseOutput struct{ *pulumi.OutputState }

func (MigrationReportResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationReportResultResponse)(nil)).Elem()
}

func (o MigrationReportResultResponseOutput) ToMigrationReportResultResponseOutput() MigrationReportResultResponseOutput {
	return o
}

func (o MigrationReportResultResponseOutput) ToMigrationReportResultResponseOutputWithContext(ctx context.Context) MigrationReportResultResponseOutput {
	return o
}

func (o MigrationReportResultResponseOutput) ToMigrationReportResultResponsePtrOutput() MigrationReportResultResponsePtrOutput {
	return o.ToMigrationReportResultResponsePtrOutputWithContext(context.Background())
}

func (o MigrationReportResultResponseOutput) ToMigrationReportResultResponsePtrOutputWithContext(ctx context.Context) MigrationReportResultResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrationReportResultResponse) *MigrationReportResultResponse {
		return &v
	}).(MigrationReportResultResponsePtrOutput)
}

func (o MigrationReportResultResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationReportResultResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o MigrationReportResultResponseOutput) ReportUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationReportResultResponse) *string { return v.ReportUrl }).(pulumi.StringPtrOutput)
}

type MigrationReportResultResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrationReportResultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationReportResultResponse)(nil)).Elem()
}

func (o MigrationReportResultResponsePtrOutput) ToMigrationReportResultResponsePtrOutput() MigrationReportResultResponsePtrOutput {
	return o
}

func (o MigrationReportResultResponsePtrOutput) ToMigrationReportResultResponsePtrOutputWithContext(ctx context.Context) MigrationReportResultResponsePtrOutput {
	return o
}

func (o MigrationReportResultResponsePtrOutput) Elem() MigrationReportResultResponseOutput {
	return o.ApplyT(func(v *MigrationReportResultResponse) MigrationReportResultResponse {
		if v != nil {
			return *v
		}
		var ret MigrationReportResultResponse
		return ret
	}).(MigrationReportResultResponseOutput)
}

func (o MigrationReportResultResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationReportResultResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o MigrationReportResultResponsePtrOutput) ReportUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationReportResultResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReportUrl
	}).(pulumi.StringPtrOutput)
}

type MigrationValidationDatabaseSummaryResultResponse struct {
	EndedOn            string `pulumi:"endedOn"`
	Id                 string `pulumi:"id"`
	MigrationId        string `pulumi:"migrationId"`
	SourceDatabaseName string `pulumi:"sourceDatabaseName"`
	StartedOn          string `pulumi:"startedOn"`
	Status             string `pulumi:"status"`
	TargetDatabaseName string `pulumi:"targetDatabaseName"`
}





type MigrationValidationDatabaseSummaryResultResponseInput interface {
	pulumi.Input

	ToMigrationValidationDatabaseSummaryResultResponseOutput() MigrationValidationDatabaseSummaryResultResponseOutput
	ToMigrationValidationDatabaseSummaryResultResponseOutputWithContext(context.Context) MigrationValidationDatabaseSummaryResultResponseOutput
}

type MigrationValidationDatabaseSummaryResultResponseArgs struct {
	EndedOn            pulumi.StringInput `pulumi:"endedOn"`
	Id                 pulumi.StringInput `pulumi:"id"`
	MigrationId        pulumi.StringInput `pulumi:"migrationId"`
	SourceDatabaseName pulumi.StringInput `pulumi:"sourceDatabaseName"`
	StartedOn          pulumi.StringInput `pulumi:"startedOn"`
	Status             pulumi.StringInput `pulumi:"status"`
	TargetDatabaseName pulumi.StringInput `pulumi:"targetDatabaseName"`
}

func (MigrationValidationDatabaseSummaryResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationValidationDatabaseSummaryResultResponse)(nil)).Elem()
}

func (i MigrationValidationDatabaseSummaryResultResponseArgs) ToMigrationValidationDatabaseSummaryResultResponseOutput() MigrationValidationDatabaseSummaryResultResponseOutput {
	return i.ToMigrationValidationDatabaseSummaryResultResponseOutputWithContext(context.Background())
}

func (i MigrationValidationDatabaseSummaryResultResponseArgs) ToMigrationValidationDatabaseSummaryResultResponseOutputWithContext(ctx context.Context) MigrationValidationDatabaseSummaryResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationDatabaseSummaryResultResponseOutput)
}





type MigrationValidationDatabaseSummaryResultResponseMapInput interface {
	pulumi.Input

	ToMigrationValidationDatabaseSummaryResultResponseMapOutput() MigrationValidationDatabaseSummaryResultResponseMapOutput
	ToMigrationValidationDatabaseSummaryResultResponseMapOutputWithContext(context.Context) MigrationValidationDatabaseSummaryResultResponseMapOutput
}

type MigrationValidationDatabaseSummaryResultResponseMap map[string]MigrationValidationDatabaseSummaryResultResponseInput

func (MigrationValidationDatabaseSummaryResultResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MigrationValidationDatabaseSummaryResultResponse)(nil)).Elem()
}

func (i MigrationValidationDatabaseSummaryResultResponseMap) ToMigrationValidationDatabaseSummaryResultResponseMapOutput() MigrationValidationDatabaseSummaryResultResponseMapOutput {
	return i.ToMigrationValidationDatabaseSummaryResultResponseMapOutputWithContext(context.Background())
}

func (i MigrationValidationDatabaseSummaryResultResponseMap) ToMigrationValidationDatabaseSummaryResultResponseMapOutputWithContext(ctx context.Context) MigrationValidationDatabaseSummaryResultResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationDatabaseSummaryResultResponseMapOutput)
}

type MigrationValidationDatabaseSummaryResultResponseOutput struct{ *pulumi.OutputState }

func (MigrationValidationDatabaseSummaryResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationValidationDatabaseSummaryResultResponse)(nil)).Elem()
}

func (o MigrationValidationDatabaseSummaryResultResponseOutput) ToMigrationValidationDatabaseSummaryResultResponseOutput() MigrationValidationDatabaseSummaryResultResponseOutput {
	return o
}

func (o MigrationValidationDatabaseSummaryResultResponseOutput) ToMigrationValidationDatabaseSummaryResultResponseOutputWithContext(ctx context.Context) MigrationValidationDatabaseSummaryResultResponseOutput {
	return o
}

func (o MigrationValidationDatabaseSummaryResultResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

func (o MigrationValidationDatabaseSummaryResultResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrationValidationDatabaseSummaryResultResponseOutput) MigrationId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultResponse) string { return v.MigrationId }).(pulumi.StringOutput)
}

func (o MigrationValidationDatabaseSummaryResultResponseOutput) SourceDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultResponse) string { return v.SourceDatabaseName }).(pulumi.StringOutput)
}

func (o MigrationValidationDatabaseSummaryResultResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

func (o MigrationValidationDatabaseSummaryResultResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultResponse) string { return v.Status }).(pulumi.StringOutput)
}

func (o MigrationValidationDatabaseSummaryResultResponseOutput) TargetDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultResponse) string { return v.TargetDatabaseName }).(pulumi.StringOutput)
}

type MigrationValidationDatabaseSummaryResultResponseMapOutput struct{ *pulumi.OutputState }

func (MigrationValidationDatabaseSummaryResultResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MigrationValidationDatabaseSummaryResultResponse)(nil)).Elem()
}

func (o MigrationValidationDatabaseSummaryResultResponseMapOutput) ToMigrationValidationDatabaseSummaryResultResponseMapOutput() MigrationValidationDatabaseSummaryResultResponseMapOutput {
	return o
}

func (o MigrationValidationDatabaseSummaryResultResponseMapOutput) ToMigrationValidationDatabaseSummaryResultResponseMapOutputWithContext(ctx context.Context) MigrationValidationDatabaseSummaryResultResponseMapOutput {
	return o
}

func (o MigrationValidationDatabaseSummaryResultResponseMapOutput) MapIndex(k pulumi.StringInput) MigrationValidationDatabaseSummaryResultResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MigrationValidationDatabaseSummaryResultResponse {
		return vs[0].(map[string]MigrationValidationDatabaseSummaryResultResponse)[vs[1].(string)]
	}).(MigrationValidationDatabaseSummaryResultResponseOutput)
}

type MigrationValidationOptions struct {
	EnableDataIntegrityValidation *bool `pulumi:"enableDataIntegrityValidation"`
	EnableQueryAnalysisValidation *bool `pulumi:"enableQueryAnalysisValidation"`
	EnableSchemaValidation        *bool `pulumi:"enableSchemaValidation"`
}





type MigrationValidationOptionsInput interface {
	pulumi.Input

	ToMigrationValidationOptionsOutput() MigrationValidationOptionsOutput
	ToMigrationValidationOptionsOutputWithContext(context.Context) MigrationValidationOptionsOutput
}

type MigrationValidationOptionsArgs struct {
	EnableDataIntegrityValidation pulumi.BoolPtrInput `pulumi:"enableDataIntegrityValidation"`
	EnableQueryAnalysisValidation pulumi.BoolPtrInput `pulumi:"enableQueryAnalysisValidation"`
	EnableSchemaValidation        pulumi.BoolPtrInput `pulumi:"enableSchemaValidation"`
}

func (MigrationValidationOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationValidationOptions)(nil)).Elem()
}

func (i MigrationValidationOptionsArgs) ToMigrationValidationOptionsOutput() MigrationValidationOptionsOutput {
	return i.ToMigrationValidationOptionsOutputWithContext(context.Background())
}

func (i MigrationValidationOptionsArgs) ToMigrationValidationOptionsOutputWithContext(ctx context.Context) MigrationValidationOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationOptionsOutput)
}

func (i MigrationValidationOptionsArgs) ToMigrationValidationOptionsPtrOutput() MigrationValidationOptionsPtrOutput {
	return i.ToMigrationValidationOptionsPtrOutputWithContext(context.Background())
}

func (i MigrationValidationOptionsArgs) ToMigrationValidationOptionsPtrOutputWithContext(ctx context.Context) MigrationValidationOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationOptionsOutput).ToMigrationValidationOptionsPtrOutputWithContext(ctx)
}









type MigrationValidationOptionsPtrInput interface {
	pulumi.Input

	ToMigrationValidationOptionsPtrOutput() MigrationValidationOptionsPtrOutput
	ToMigrationValidationOptionsPtrOutputWithContext(context.Context) MigrationValidationOptionsPtrOutput
}

type migrationValidationOptionsPtrType MigrationValidationOptionsArgs

func MigrationValidationOptionsPtr(v *MigrationValidationOptionsArgs) MigrationValidationOptionsPtrInput {
	return (*migrationValidationOptionsPtrType)(v)
}

func (*migrationValidationOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationValidationOptions)(nil)).Elem()
}

func (i *migrationValidationOptionsPtrType) ToMigrationValidationOptionsPtrOutput() MigrationValidationOptionsPtrOutput {
	return i.ToMigrationValidationOptionsPtrOutputWithContext(context.Background())
}

func (i *migrationValidationOptionsPtrType) ToMigrationValidationOptionsPtrOutputWithContext(ctx context.Context) MigrationValidationOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationOptionsPtrOutput)
}

type MigrationValidationOptionsOutput struct{ *pulumi.OutputState }

func (MigrationValidationOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationValidationOptions)(nil)).Elem()
}

func (o MigrationValidationOptionsOutput) ToMigrationValidationOptionsOutput() MigrationValidationOptionsOutput {
	return o
}

func (o MigrationValidationOptionsOutput) ToMigrationValidationOptionsOutputWithContext(ctx context.Context) MigrationValidationOptionsOutput {
	return o
}

func (o MigrationValidationOptionsOutput) ToMigrationValidationOptionsPtrOutput() MigrationValidationOptionsPtrOutput {
	return o.ToMigrationValidationOptionsPtrOutputWithContext(context.Background())
}

func (o MigrationValidationOptionsOutput) ToMigrationValidationOptionsPtrOutputWithContext(ctx context.Context) MigrationValidationOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrationValidationOptions) *MigrationValidationOptions {
		return &v
	}).(MigrationValidationOptionsPtrOutput)
}

func (o MigrationValidationOptionsOutput) EnableDataIntegrityValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrationValidationOptions) *bool { return v.EnableDataIntegrityValidation }).(pulumi.BoolPtrOutput)
}

func (o MigrationValidationOptionsOutput) EnableQueryAnalysisValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrationValidationOptions) *bool { return v.EnableQueryAnalysisValidation }).(pulumi.BoolPtrOutput)
}

func (o MigrationValidationOptionsOutput) EnableSchemaValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrationValidationOptions) *bool { return v.EnableSchemaValidation }).(pulumi.BoolPtrOutput)
}

type MigrationValidationOptionsPtrOutput struct{ *pulumi.OutputState }

func (MigrationValidationOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationValidationOptions)(nil)).Elem()
}

func (o MigrationValidationOptionsPtrOutput) ToMigrationValidationOptionsPtrOutput() MigrationValidationOptionsPtrOutput {
	return o
}

func (o MigrationValidationOptionsPtrOutput) ToMigrationValidationOptionsPtrOutputWithContext(ctx context.Context) MigrationValidationOptionsPtrOutput {
	return o
}

func (o MigrationValidationOptionsPtrOutput) Elem() MigrationValidationOptionsOutput {
	return o.ApplyT(func(v *MigrationValidationOptions) MigrationValidationOptions {
		if v != nil {
			return *v
		}
		var ret MigrationValidationOptions
		return ret
	}).(MigrationValidationOptionsOutput)
}

func (o MigrationValidationOptionsPtrOutput) EnableDataIntegrityValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationValidationOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDataIntegrityValidation
	}).(pulumi.BoolPtrOutput)
}

func (o MigrationValidationOptionsPtrOutput) EnableQueryAnalysisValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationValidationOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EnableQueryAnalysisValidation
	}).(pulumi.BoolPtrOutput)
}

func (o MigrationValidationOptionsPtrOutput) EnableSchemaValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationValidationOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSchemaValidation
	}).(pulumi.BoolPtrOutput)
}

type MigrationValidationOptionsResponse struct {
	EnableDataIntegrityValidation *bool `pulumi:"enableDataIntegrityValidation"`
	EnableQueryAnalysisValidation *bool `pulumi:"enableQueryAnalysisValidation"`
	EnableSchemaValidation        *bool `pulumi:"enableSchemaValidation"`
}





type MigrationValidationOptionsResponseInput interface {
	pulumi.Input

	ToMigrationValidationOptionsResponseOutput() MigrationValidationOptionsResponseOutput
	ToMigrationValidationOptionsResponseOutputWithContext(context.Context) MigrationValidationOptionsResponseOutput
}

type MigrationValidationOptionsResponseArgs struct {
	EnableDataIntegrityValidation pulumi.BoolPtrInput `pulumi:"enableDataIntegrityValidation"`
	EnableQueryAnalysisValidation pulumi.BoolPtrInput `pulumi:"enableQueryAnalysisValidation"`
	EnableSchemaValidation        pulumi.BoolPtrInput `pulumi:"enableSchemaValidation"`
}

func (MigrationValidationOptionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationValidationOptionsResponse)(nil)).Elem()
}

func (i MigrationValidationOptionsResponseArgs) ToMigrationValidationOptionsResponseOutput() MigrationValidationOptionsResponseOutput {
	return i.ToMigrationValidationOptionsResponseOutputWithContext(context.Background())
}

func (i MigrationValidationOptionsResponseArgs) ToMigrationValidationOptionsResponseOutputWithContext(ctx context.Context) MigrationValidationOptionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationOptionsResponseOutput)
}

func (i MigrationValidationOptionsResponseArgs) ToMigrationValidationOptionsResponsePtrOutput() MigrationValidationOptionsResponsePtrOutput {
	return i.ToMigrationValidationOptionsResponsePtrOutputWithContext(context.Background())
}

func (i MigrationValidationOptionsResponseArgs) ToMigrationValidationOptionsResponsePtrOutputWithContext(ctx context.Context) MigrationValidationOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationOptionsResponseOutput).ToMigrationValidationOptionsResponsePtrOutputWithContext(ctx)
}









type MigrationValidationOptionsResponsePtrInput interface {
	pulumi.Input

	ToMigrationValidationOptionsResponsePtrOutput() MigrationValidationOptionsResponsePtrOutput
	ToMigrationValidationOptionsResponsePtrOutputWithContext(context.Context) MigrationValidationOptionsResponsePtrOutput
}

type migrationValidationOptionsResponsePtrType MigrationValidationOptionsResponseArgs

func MigrationValidationOptionsResponsePtr(v *MigrationValidationOptionsResponseArgs) MigrationValidationOptionsResponsePtrInput {
	return (*migrationValidationOptionsResponsePtrType)(v)
}

func (*migrationValidationOptionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationValidationOptionsResponse)(nil)).Elem()
}

func (i *migrationValidationOptionsResponsePtrType) ToMigrationValidationOptionsResponsePtrOutput() MigrationValidationOptionsResponsePtrOutput {
	return i.ToMigrationValidationOptionsResponsePtrOutputWithContext(context.Background())
}

func (i *migrationValidationOptionsResponsePtrType) ToMigrationValidationOptionsResponsePtrOutputWithContext(ctx context.Context) MigrationValidationOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationOptionsResponsePtrOutput)
}

type MigrationValidationOptionsResponseOutput struct{ *pulumi.OutputState }

func (MigrationValidationOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationValidationOptionsResponse)(nil)).Elem()
}

func (o MigrationValidationOptionsResponseOutput) ToMigrationValidationOptionsResponseOutput() MigrationValidationOptionsResponseOutput {
	return o
}

func (o MigrationValidationOptionsResponseOutput) ToMigrationValidationOptionsResponseOutputWithContext(ctx context.Context) MigrationValidationOptionsResponseOutput {
	return o
}

func (o MigrationValidationOptionsResponseOutput) ToMigrationValidationOptionsResponsePtrOutput() MigrationValidationOptionsResponsePtrOutput {
	return o.ToMigrationValidationOptionsResponsePtrOutputWithContext(context.Background())
}

func (o MigrationValidationOptionsResponseOutput) ToMigrationValidationOptionsResponsePtrOutputWithContext(ctx context.Context) MigrationValidationOptionsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrationValidationOptionsResponse) *MigrationValidationOptionsResponse {
		return &v
	}).(MigrationValidationOptionsResponsePtrOutput)
}

func (o MigrationValidationOptionsResponseOutput) EnableDataIntegrityValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrationValidationOptionsResponse) *bool { return v.EnableDataIntegrityValidation }).(pulumi.BoolPtrOutput)
}

func (o MigrationValidationOptionsResponseOutput) EnableQueryAnalysisValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrationValidationOptionsResponse) *bool { return v.EnableQueryAnalysisValidation }).(pulumi.BoolPtrOutput)
}

func (o MigrationValidationOptionsResponseOutput) EnableSchemaValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrationValidationOptionsResponse) *bool { return v.EnableSchemaValidation }).(pulumi.BoolPtrOutput)
}

type MigrationValidationOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrationValidationOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationValidationOptionsResponse)(nil)).Elem()
}

func (o MigrationValidationOptionsResponsePtrOutput) ToMigrationValidationOptionsResponsePtrOutput() MigrationValidationOptionsResponsePtrOutput {
	return o
}

func (o MigrationValidationOptionsResponsePtrOutput) ToMigrationValidationOptionsResponsePtrOutputWithContext(ctx context.Context) MigrationValidationOptionsResponsePtrOutput {
	return o
}

func (o MigrationValidationOptionsResponsePtrOutput) Elem() MigrationValidationOptionsResponseOutput {
	return o.ApplyT(func(v *MigrationValidationOptionsResponse) MigrationValidationOptionsResponse {
		if v != nil {
			return *v
		}
		var ret MigrationValidationOptionsResponse
		return ret
	}).(MigrationValidationOptionsResponseOutput)
}

func (o MigrationValidationOptionsResponsePtrOutput) EnableDataIntegrityValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationValidationOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDataIntegrityValidation
	}).(pulumi.BoolPtrOutput)
}

func (o MigrationValidationOptionsResponsePtrOutput) EnableQueryAnalysisValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationValidationOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableQueryAnalysisValidation
	}).(pulumi.BoolPtrOutput)
}

func (o MigrationValidationOptionsResponsePtrOutput) EnableSchemaValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationValidationOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSchemaValidation
	}).(pulumi.BoolPtrOutput)
}

type MigrationValidationResultResponse struct {
	Id             string                                                      `pulumi:"id"`
	MigrationId    string                                                      `pulumi:"migrationId"`
	Status         string                                                      `pulumi:"status"`
	SummaryResults map[string]MigrationValidationDatabaseSummaryResultResponse `pulumi:"summaryResults"`
}





type MigrationValidationResultResponseInput interface {
	pulumi.Input

	ToMigrationValidationResultResponseOutput() MigrationValidationResultResponseOutput
	ToMigrationValidationResultResponseOutputWithContext(context.Context) MigrationValidationResultResponseOutput
}

type MigrationValidationResultResponseArgs struct {
	Id             pulumi.StringInput                                       `pulumi:"id"`
	MigrationId    pulumi.StringInput                                       `pulumi:"migrationId"`
	Status         pulumi.StringInput                                       `pulumi:"status"`
	SummaryResults MigrationValidationDatabaseSummaryResultResponseMapInput `pulumi:"summaryResults"`
}

func (MigrationValidationResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationValidationResultResponse)(nil)).Elem()
}

func (i MigrationValidationResultResponseArgs) ToMigrationValidationResultResponseOutput() MigrationValidationResultResponseOutput {
	return i.ToMigrationValidationResultResponseOutputWithContext(context.Background())
}

func (i MigrationValidationResultResponseArgs) ToMigrationValidationResultResponseOutputWithContext(ctx context.Context) MigrationValidationResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationResultResponseOutput)
}

func (i MigrationValidationResultResponseArgs) ToMigrationValidationResultResponsePtrOutput() MigrationValidationResultResponsePtrOutput {
	return i.ToMigrationValidationResultResponsePtrOutputWithContext(context.Background())
}

func (i MigrationValidationResultResponseArgs) ToMigrationValidationResultResponsePtrOutputWithContext(ctx context.Context) MigrationValidationResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationResultResponseOutput).ToMigrationValidationResultResponsePtrOutputWithContext(ctx)
}









type MigrationValidationResultResponsePtrInput interface {
	pulumi.Input

	ToMigrationValidationResultResponsePtrOutput() MigrationValidationResultResponsePtrOutput
	ToMigrationValidationResultResponsePtrOutputWithContext(context.Context) MigrationValidationResultResponsePtrOutput
}

type migrationValidationResultResponsePtrType MigrationValidationResultResponseArgs

func MigrationValidationResultResponsePtr(v *MigrationValidationResultResponseArgs) MigrationValidationResultResponsePtrInput {
	return (*migrationValidationResultResponsePtrType)(v)
}

func (*migrationValidationResultResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationValidationResultResponse)(nil)).Elem()
}

func (i *migrationValidationResultResponsePtrType) ToMigrationValidationResultResponsePtrOutput() MigrationValidationResultResponsePtrOutput {
	return i.ToMigrationValidationResultResponsePtrOutputWithContext(context.Background())
}

func (i *migrationValidationResultResponsePtrType) ToMigrationValidationResultResponsePtrOutputWithContext(ctx context.Context) MigrationValidationResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationResultResponsePtrOutput)
}

type MigrationValidationResultResponseOutput struct{ *pulumi.OutputState }

func (MigrationValidationResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationValidationResultResponse)(nil)).Elem()
}

func (o MigrationValidationResultResponseOutput) ToMigrationValidationResultResponseOutput() MigrationValidationResultResponseOutput {
	return o
}

func (o MigrationValidationResultResponseOutput) ToMigrationValidationResultResponseOutputWithContext(ctx context.Context) MigrationValidationResultResponseOutput {
	return o
}

func (o MigrationValidationResultResponseOutput) ToMigrationValidationResultResponsePtrOutput() MigrationValidationResultResponsePtrOutput {
	return o.ToMigrationValidationResultResponsePtrOutputWithContext(context.Background())
}

func (o MigrationValidationResultResponseOutput) ToMigrationValidationResultResponsePtrOutputWithContext(ctx context.Context) MigrationValidationResultResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrationValidationResultResponse) *MigrationValidationResultResponse {
		return &v
	}).(MigrationValidationResultResponsePtrOutput)
}

func (o MigrationValidationResultResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationResultResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o MigrationValidationResultResponseOutput) MigrationId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationResultResponse) string { return v.MigrationId }).(pulumi.StringOutput)
}

func (o MigrationValidationResultResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationResultResponse) string { return v.Status }).(pulumi.StringOutput)
}

func (o MigrationValidationResultResponseOutput) SummaryResults() MigrationValidationDatabaseSummaryResultResponseMapOutput {
	return o.ApplyT(func(v MigrationValidationResultResponse) map[string]MigrationValidationDatabaseSummaryResultResponse {
		return v.SummaryResults
	}).(MigrationValidationDatabaseSummaryResultResponseMapOutput)
}

type MigrationValidationResultResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrationValidationResultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationValidationResultResponse)(nil)).Elem()
}

func (o MigrationValidationResultResponsePtrOutput) ToMigrationValidationResultResponsePtrOutput() MigrationValidationResultResponsePtrOutput {
	return o
}

func (o MigrationValidationResultResponsePtrOutput) ToMigrationValidationResultResponsePtrOutputWithContext(ctx context.Context) MigrationValidationResultResponsePtrOutput {
	return o
}

func (o MigrationValidationResultResponsePtrOutput) Elem() MigrationValidationResultResponseOutput {
	return o.ApplyT(func(v *MigrationValidationResultResponse) MigrationValidationResultResponse {
		if v != nil {
			return *v
		}
		var ret MigrationValidationResultResponse
		return ret
	}).(MigrationValidationResultResponseOutput)
}

func (o MigrationValidationResultResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationValidationResultResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o MigrationValidationResultResponsePtrOutput) MigrationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationValidationResultResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MigrationId
	}).(pulumi.StringPtrOutput)
}

func (o MigrationValidationResultResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationValidationResultResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

func (o MigrationValidationResultResponsePtrOutput) SummaryResults() MigrationValidationDatabaseSummaryResultResponseMapOutput {
	return o.ApplyT(func(v *MigrationValidationResultResponse) map[string]MigrationValidationDatabaseSummaryResultResponse {
		if v == nil {
			return nil
		}
		return v.SummaryResults
	}).(MigrationValidationDatabaseSummaryResultResponseMapOutput)
}

type MongoDbClusterInfoResponse struct {
	Databases        []MongoDbDatabaseInfoResponse `pulumi:"databases"`
	SupportsSharding bool                          `pulumi:"supportsSharding"`
	Type             string                        `pulumi:"type"`
	Version          string                        `pulumi:"version"`
}





type MongoDbClusterInfoResponseInput interface {
	pulumi.Input

	ToMongoDbClusterInfoResponseOutput() MongoDbClusterInfoResponseOutput
	ToMongoDbClusterInfoResponseOutputWithContext(context.Context) MongoDbClusterInfoResponseOutput
}

type MongoDbClusterInfoResponseArgs struct {
	Databases        MongoDbDatabaseInfoResponseArrayInput `pulumi:"databases"`
	SupportsSharding pulumi.BoolInput                      `pulumi:"supportsSharding"`
	Type             pulumi.StringInput                    `pulumi:"type"`
	Version          pulumi.StringInput                    `pulumi:"version"`
}

func (MongoDbClusterInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbClusterInfoResponse)(nil)).Elem()
}

func (i MongoDbClusterInfoResponseArgs) ToMongoDbClusterInfoResponseOutput() MongoDbClusterInfoResponseOutput {
	return i.ToMongoDbClusterInfoResponseOutputWithContext(context.Background())
}

func (i MongoDbClusterInfoResponseArgs) ToMongoDbClusterInfoResponseOutputWithContext(ctx context.Context) MongoDbClusterInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbClusterInfoResponseOutput)
}





type MongoDbClusterInfoResponseArrayInput interface {
	pulumi.Input

	ToMongoDbClusterInfoResponseArrayOutput() MongoDbClusterInfoResponseArrayOutput
	ToMongoDbClusterInfoResponseArrayOutputWithContext(context.Context) MongoDbClusterInfoResponseArrayOutput
}

type MongoDbClusterInfoResponseArray []MongoDbClusterInfoResponseInput

func (MongoDbClusterInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoDbClusterInfoResponse)(nil)).Elem()
}

func (i MongoDbClusterInfoResponseArray) ToMongoDbClusterInfoResponseArrayOutput() MongoDbClusterInfoResponseArrayOutput {
	return i.ToMongoDbClusterInfoResponseArrayOutputWithContext(context.Background())
}

func (i MongoDbClusterInfoResponseArray) ToMongoDbClusterInfoResponseArrayOutputWithContext(ctx context.Context) MongoDbClusterInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbClusterInfoResponseArrayOutput)
}

type MongoDbClusterInfoResponseOutput struct{ *pulumi.OutputState }

func (MongoDbClusterInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbClusterInfoResponse)(nil)).Elem()
}

func (o MongoDbClusterInfoResponseOutput) ToMongoDbClusterInfoResponseOutput() MongoDbClusterInfoResponseOutput {
	return o
}

func (o MongoDbClusterInfoResponseOutput) ToMongoDbClusterInfoResponseOutputWithContext(ctx context.Context) MongoDbClusterInfoResponseOutput {
	return o
}

func (o MongoDbClusterInfoResponseOutput) Databases() MongoDbDatabaseInfoResponseArrayOutput {
	return o.ApplyT(func(v MongoDbClusterInfoResponse) []MongoDbDatabaseInfoResponse { return v.Databases }).(MongoDbDatabaseInfoResponseArrayOutput)
}

func (o MongoDbClusterInfoResponseOutput) SupportsSharding() pulumi.BoolOutput {
	return o.ApplyT(func(v MongoDbClusterInfoResponse) bool { return v.SupportsSharding }).(pulumi.BoolOutput)
}

func (o MongoDbClusterInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbClusterInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

func (o MongoDbClusterInfoResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbClusterInfoResponse) string { return v.Version }).(pulumi.StringOutput)
}

type MongoDbClusterInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (MongoDbClusterInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoDbClusterInfoResponse)(nil)).Elem()
}

func (o MongoDbClusterInfoResponseArrayOutput) ToMongoDbClusterInfoResponseArrayOutput() MongoDbClusterInfoResponseArrayOutput {
	return o
}

func (o MongoDbClusterInfoResponseArrayOutput) ToMongoDbClusterInfoResponseArrayOutputWithContext(ctx context.Context) MongoDbClusterInfoResponseArrayOutput {
	return o
}

func (o MongoDbClusterInfoResponseArrayOutput) Index(i pulumi.IntInput) MongoDbClusterInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoDbClusterInfoResponse {
		return vs[0].([]MongoDbClusterInfoResponse)[vs[1].(int)]
	}).(MongoDbClusterInfoResponseOutput)
}

type MongoDbCollectionInfoResponse struct {
	AverageDocumentSize float64                      `pulumi:"averageDocumentSize"`
	DataSize            float64                      `pulumi:"dataSize"`
	DatabaseName        string                       `pulumi:"databaseName"`
	DocumentCount       float64                      `pulumi:"documentCount"`
	IsCapped            bool                         `pulumi:"isCapped"`
	IsSystemCollection  bool                         `pulumi:"isSystemCollection"`
	IsView              bool                         `pulumi:"isView"`
	Name                string                       `pulumi:"name"`
	QualifiedName       string                       `pulumi:"qualifiedName"`
	ShardKey            *MongoDbShardKeyInfoResponse `pulumi:"shardKey"`
	SupportsSharding    bool                         `pulumi:"supportsSharding"`
	ViewOf              *string                      `pulumi:"viewOf"`
}





type MongoDbCollectionInfoResponseInput interface {
	pulumi.Input

	ToMongoDbCollectionInfoResponseOutput() MongoDbCollectionInfoResponseOutput
	ToMongoDbCollectionInfoResponseOutputWithContext(context.Context) MongoDbCollectionInfoResponseOutput
}

type MongoDbCollectionInfoResponseArgs struct {
	AverageDocumentSize pulumi.Float64Input                 `pulumi:"averageDocumentSize"`
	DataSize            pulumi.Float64Input                 `pulumi:"dataSize"`
	DatabaseName        pulumi.StringInput                  `pulumi:"databaseName"`
	DocumentCount       pulumi.Float64Input                 `pulumi:"documentCount"`
	IsCapped            pulumi.BoolInput                    `pulumi:"isCapped"`
	IsSystemCollection  pulumi.BoolInput                    `pulumi:"isSystemCollection"`
	IsView              pulumi.BoolInput                    `pulumi:"isView"`
	Name                pulumi.StringInput                  `pulumi:"name"`
	QualifiedName       pulumi.StringInput                  `pulumi:"qualifiedName"`
	ShardKey            MongoDbShardKeyInfoResponsePtrInput `pulumi:"shardKey"`
	SupportsSharding    pulumi.BoolInput                    `pulumi:"supportsSharding"`
	ViewOf              pulumi.StringPtrInput               `pulumi:"viewOf"`
}

func (MongoDbCollectionInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbCollectionInfoResponse)(nil)).Elem()
}

func (i MongoDbCollectionInfoResponseArgs) ToMongoDbCollectionInfoResponseOutput() MongoDbCollectionInfoResponseOutput {
	return i.ToMongoDbCollectionInfoResponseOutputWithContext(context.Background())
}

func (i MongoDbCollectionInfoResponseArgs) ToMongoDbCollectionInfoResponseOutputWithContext(ctx context.Context) MongoDbCollectionInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbCollectionInfoResponseOutput)
}





type MongoDbCollectionInfoResponseArrayInput interface {
	pulumi.Input

	ToMongoDbCollectionInfoResponseArrayOutput() MongoDbCollectionInfoResponseArrayOutput
	ToMongoDbCollectionInfoResponseArrayOutputWithContext(context.Context) MongoDbCollectionInfoResponseArrayOutput
}

type MongoDbCollectionInfoResponseArray []MongoDbCollectionInfoResponseInput

func (MongoDbCollectionInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoDbCollectionInfoResponse)(nil)).Elem()
}

func (i MongoDbCollectionInfoResponseArray) ToMongoDbCollectionInfoResponseArrayOutput() MongoDbCollectionInfoResponseArrayOutput {
	return i.ToMongoDbCollectionInfoResponseArrayOutputWithContext(context.Background())
}

func (i MongoDbCollectionInfoResponseArray) ToMongoDbCollectionInfoResponseArrayOutputWithContext(ctx context.Context) MongoDbCollectionInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbCollectionInfoResponseArrayOutput)
}

type MongoDbCollectionInfoResponseOutput struct{ *pulumi.OutputState }

func (MongoDbCollectionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbCollectionInfoResponse)(nil)).Elem()
}

func (o MongoDbCollectionInfoResponseOutput) ToMongoDbCollectionInfoResponseOutput() MongoDbCollectionInfoResponseOutput {
	return o
}

func (o MongoDbCollectionInfoResponseOutput) ToMongoDbCollectionInfoResponseOutputWithContext(ctx context.Context) MongoDbCollectionInfoResponseOutput {
	return o
}

func (o MongoDbCollectionInfoResponseOutput) AverageDocumentSize() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbCollectionInfoResponse) float64 { return v.AverageDocumentSize }).(pulumi.Float64Output)
}

func (o MongoDbCollectionInfoResponseOutput) DataSize() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbCollectionInfoResponse) float64 { return v.DataSize }).(pulumi.Float64Output)
}

func (o MongoDbCollectionInfoResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbCollectionInfoResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o MongoDbCollectionInfoResponseOutput) DocumentCount() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbCollectionInfoResponse) float64 { return v.DocumentCount }).(pulumi.Float64Output)
}

func (o MongoDbCollectionInfoResponseOutput) IsCapped() pulumi.BoolOutput {
	return o.ApplyT(func(v MongoDbCollectionInfoResponse) bool { return v.IsCapped }).(pulumi.BoolOutput)
}

func (o MongoDbCollectionInfoResponseOutput) IsSystemCollection() pulumi.BoolOutput {
	return o.ApplyT(func(v MongoDbCollectionInfoResponse) bool { return v.IsSystemCollection }).(pulumi.BoolOutput)
}

func (o MongoDbCollectionInfoResponseOutput) IsView() pulumi.BoolOutput {
	return o.ApplyT(func(v MongoDbCollectionInfoResponse) bool { return v.IsView }).(pulumi.BoolOutput)
}

func (o MongoDbCollectionInfoResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbCollectionInfoResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o MongoDbCollectionInfoResponseOutput) QualifiedName() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbCollectionInfoResponse) string { return v.QualifiedName }).(pulumi.StringOutput)
}

func (o MongoDbCollectionInfoResponseOutput) ShardKey() MongoDbShardKeyInfoResponsePtrOutput {
	return o.ApplyT(func(v MongoDbCollectionInfoResponse) *MongoDbShardKeyInfoResponse { return v.ShardKey }).(MongoDbShardKeyInfoResponsePtrOutput)
}

func (o MongoDbCollectionInfoResponseOutput) SupportsSharding() pulumi.BoolOutput {
	return o.ApplyT(func(v MongoDbCollectionInfoResponse) bool { return v.SupportsSharding }).(pulumi.BoolOutput)
}

func (o MongoDbCollectionInfoResponseOutput) ViewOf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbCollectionInfoResponse) *string { return v.ViewOf }).(pulumi.StringPtrOutput)
}

type MongoDbCollectionInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (MongoDbCollectionInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoDbCollectionInfoResponse)(nil)).Elem()
}

func (o MongoDbCollectionInfoResponseArrayOutput) ToMongoDbCollectionInfoResponseArrayOutput() MongoDbCollectionInfoResponseArrayOutput {
	return o
}

func (o MongoDbCollectionInfoResponseArrayOutput) ToMongoDbCollectionInfoResponseArrayOutputWithContext(ctx context.Context) MongoDbCollectionInfoResponseArrayOutput {
	return o
}

func (o MongoDbCollectionInfoResponseArrayOutput) Index(i pulumi.IntInput) MongoDbCollectionInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoDbCollectionInfoResponse {
		return vs[0].([]MongoDbCollectionInfoResponse)[vs[1].(int)]
	}).(MongoDbCollectionInfoResponseOutput)
}

type MongoDbCollectionProgressResponse struct {
	BytesCopied     float64                         `pulumi:"bytesCopied"`
	DocumentsCopied float64                         `pulumi:"documentsCopied"`
	ElapsedTime     string                          `pulumi:"elapsedTime"`
	Errors          map[string]MongoDbErrorResponse `pulumi:"errors"`
	EventsPending   float64                         `pulumi:"eventsPending"`
	EventsReplayed  float64                         `pulumi:"eventsReplayed"`
	LastEventTime   *string                         `pulumi:"lastEventTime"`
	LastReplayTime  *string                         `pulumi:"lastReplayTime"`
	Name            *string                         `pulumi:"name"`
	QualifiedName   *string                         `pulumi:"qualifiedName"`
	ResultType      string                          `pulumi:"resultType"`
	State           string                          `pulumi:"state"`
	TotalBytes      float64                         `pulumi:"totalBytes"`
	TotalDocuments  float64                         `pulumi:"totalDocuments"`
}





type MongoDbCollectionProgressResponseInput interface {
	pulumi.Input

	ToMongoDbCollectionProgressResponseOutput() MongoDbCollectionProgressResponseOutput
	ToMongoDbCollectionProgressResponseOutputWithContext(context.Context) MongoDbCollectionProgressResponseOutput
}

type MongoDbCollectionProgressResponseArgs struct {
	BytesCopied     pulumi.Float64Input          `pulumi:"bytesCopied"`
	DocumentsCopied pulumi.Float64Input          `pulumi:"documentsCopied"`
	ElapsedTime     pulumi.StringInput           `pulumi:"elapsedTime"`
	Errors          MongoDbErrorResponseMapInput `pulumi:"errors"`
	EventsPending   pulumi.Float64Input          `pulumi:"eventsPending"`
	EventsReplayed  pulumi.Float64Input          `pulumi:"eventsReplayed"`
	LastEventTime   pulumi.StringPtrInput        `pulumi:"lastEventTime"`
	LastReplayTime  pulumi.StringPtrInput        `pulumi:"lastReplayTime"`
	Name            pulumi.StringPtrInput        `pulumi:"name"`
	QualifiedName   pulumi.StringPtrInput        `pulumi:"qualifiedName"`
	ResultType      pulumi.StringInput           `pulumi:"resultType"`
	State           pulumi.StringInput           `pulumi:"state"`
	TotalBytes      pulumi.Float64Input          `pulumi:"totalBytes"`
	TotalDocuments  pulumi.Float64Input          `pulumi:"totalDocuments"`
}

func (MongoDbCollectionProgressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbCollectionProgressResponse)(nil)).Elem()
}

func (i MongoDbCollectionProgressResponseArgs) ToMongoDbCollectionProgressResponseOutput() MongoDbCollectionProgressResponseOutput {
	return i.ToMongoDbCollectionProgressResponseOutputWithContext(context.Background())
}

func (i MongoDbCollectionProgressResponseArgs) ToMongoDbCollectionProgressResponseOutputWithContext(ctx context.Context) MongoDbCollectionProgressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbCollectionProgressResponseOutput)
}





type MongoDbCollectionProgressResponseMapInput interface {
	pulumi.Input

	ToMongoDbCollectionProgressResponseMapOutput() MongoDbCollectionProgressResponseMapOutput
	ToMongoDbCollectionProgressResponseMapOutputWithContext(context.Context) MongoDbCollectionProgressResponseMapOutput
}

type MongoDbCollectionProgressResponseMap map[string]MongoDbCollectionProgressResponseInput

func (MongoDbCollectionProgressResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MongoDbCollectionProgressResponse)(nil)).Elem()
}

func (i MongoDbCollectionProgressResponseMap) ToMongoDbCollectionProgressResponseMapOutput() MongoDbCollectionProgressResponseMapOutput {
	return i.ToMongoDbCollectionProgressResponseMapOutputWithContext(context.Background())
}

func (i MongoDbCollectionProgressResponseMap) ToMongoDbCollectionProgressResponseMapOutputWithContext(ctx context.Context) MongoDbCollectionProgressResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbCollectionProgressResponseMapOutput)
}

type MongoDbCollectionProgressResponseOutput struct{ *pulumi.OutputState }

func (MongoDbCollectionProgressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbCollectionProgressResponse)(nil)).Elem()
}

func (o MongoDbCollectionProgressResponseOutput) ToMongoDbCollectionProgressResponseOutput() MongoDbCollectionProgressResponseOutput {
	return o
}

func (o MongoDbCollectionProgressResponseOutput) ToMongoDbCollectionProgressResponseOutputWithContext(ctx context.Context) MongoDbCollectionProgressResponseOutput {
	return o
}

func (o MongoDbCollectionProgressResponseOutput) BytesCopied() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbCollectionProgressResponse) float64 { return v.BytesCopied }).(pulumi.Float64Output)
}

func (o MongoDbCollectionProgressResponseOutput) DocumentsCopied() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbCollectionProgressResponse) float64 { return v.DocumentsCopied }).(pulumi.Float64Output)
}

func (o MongoDbCollectionProgressResponseOutput) ElapsedTime() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbCollectionProgressResponse) string { return v.ElapsedTime }).(pulumi.StringOutput)
}

func (o MongoDbCollectionProgressResponseOutput) Errors() MongoDbErrorResponseMapOutput {
	return o.ApplyT(func(v MongoDbCollectionProgressResponse) map[string]MongoDbErrorResponse { return v.Errors }).(MongoDbErrorResponseMapOutput)
}

func (o MongoDbCollectionProgressResponseOutput) EventsPending() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbCollectionProgressResponse) float64 { return v.EventsPending }).(pulumi.Float64Output)
}

func (o MongoDbCollectionProgressResponseOutput) EventsReplayed() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbCollectionProgressResponse) float64 { return v.EventsReplayed }).(pulumi.Float64Output)
}

func (o MongoDbCollectionProgressResponseOutput) LastEventTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbCollectionProgressResponse) *string { return v.LastEventTime }).(pulumi.StringPtrOutput)
}

func (o MongoDbCollectionProgressResponseOutput) LastReplayTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbCollectionProgressResponse) *string { return v.LastReplayTime }).(pulumi.StringPtrOutput)
}

func (o MongoDbCollectionProgressResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbCollectionProgressResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MongoDbCollectionProgressResponseOutput) QualifiedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbCollectionProgressResponse) *string { return v.QualifiedName }).(pulumi.StringPtrOutput)
}

func (o MongoDbCollectionProgressResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbCollectionProgressResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MongoDbCollectionProgressResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbCollectionProgressResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MongoDbCollectionProgressResponseOutput) TotalBytes() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbCollectionProgressResponse) float64 { return v.TotalBytes }).(pulumi.Float64Output)
}

func (o MongoDbCollectionProgressResponseOutput) TotalDocuments() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbCollectionProgressResponse) float64 { return v.TotalDocuments }).(pulumi.Float64Output)
}

type MongoDbCollectionProgressResponseMapOutput struct{ *pulumi.OutputState }

func (MongoDbCollectionProgressResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MongoDbCollectionProgressResponse)(nil)).Elem()
}

func (o MongoDbCollectionProgressResponseMapOutput) ToMongoDbCollectionProgressResponseMapOutput() MongoDbCollectionProgressResponseMapOutput {
	return o
}

func (o MongoDbCollectionProgressResponseMapOutput) ToMongoDbCollectionProgressResponseMapOutputWithContext(ctx context.Context) MongoDbCollectionProgressResponseMapOutput {
	return o
}

func (o MongoDbCollectionProgressResponseMapOutput) MapIndex(k pulumi.StringInput) MongoDbCollectionProgressResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MongoDbCollectionProgressResponse {
		return vs[0].(map[string]MongoDbCollectionProgressResponse)[vs[1].(string)]
	}).(MongoDbCollectionProgressResponseOutput)
}

type MongoDbCollectionSettings struct {
	CanDelete *bool                   `pulumi:"canDelete"`
	ShardKey  *MongoDbShardKeySetting `pulumi:"shardKey"`
	TargetRUs *int                    `pulumi:"targetRUs"`
}





type MongoDbCollectionSettingsInput interface {
	pulumi.Input

	ToMongoDbCollectionSettingsOutput() MongoDbCollectionSettingsOutput
	ToMongoDbCollectionSettingsOutputWithContext(context.Context) MongoDbCollectionSettingsOutput
}

type MongoDbCollectionSettingsArgs struct {
	CanDelete pulumi.BoolPtrInput            `pulumi:"canDelete"`
	ShardKey  MongoDbShardKeySettingPtrInput `pulumi:"shardKey"`
	TargetRUs pulumi.IntPtrInput             `pulumi:"targetRUs"`
}

func (MongoDbCollectionSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbCollectionSettings)(nil)).Elem()
}

func (i MongoDbCollectionSettingsArgs) ToMongoDbCollectionSettingsOutput() MongoDbCollectionSettingsOutput {
	return i.ToMongoDbCollectionSettingsOutputWithContext(context.Background())
}

func (i MongoDbCollectionSettingsArgs) ToMongoDbCollectionSettingsOutputWithContext(ctx context.Context) MongoDbCollectionSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbCollectionSettingsOutput)
}





type MongoDbCollectionSettingsMapInput interface {
	pulumi.Input

	ToMongoDbCollectionSettingsMapOutput() MongoDbCollectionSettingsMapOutput
	ToMongoDbCollectionSettingsMapOutputWithContext(context.Context) MongoDbCollectionSettingsMapOutput
}

type MongoDbCollectionSettingsMap map[string]MongoDbCollectionSettingsInput

func (MongoDbCollectionSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MongoDbCollectionSettings)(nil)).Elem()
}

func (i MongoDbCollectionSettingsMap) ToMongoDbCollectionSettingsMapOutput() MongoDbCollectionSettingsMapOutput {
	return i.ToMongoDbCollectionSettingsMapOutputWithContext(context.Background())
}

func (i MongoDbCollectionSettingsMap) ToMongoDbCollectionSettingsMapOutputWithContext(ctx context.Context) MongoDbCollectionSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbCollectionSettingsMapOutput)
}

type MongoDbCollectionSettingsOutput struct{ *pulumi.OutputState }

func (MongoDbCollectionSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbCollectionSettings)(nil)).Elem()
}

func (o MongoDbCollectionSettingsOutput) ToMongoDbCollectionSettingsOutput() MongoDbCollectionSettingsOutput {
	return o
}

func (o MongoDbCollectionSettingsOutput) ToMongoDbCollectionSettingsOutputWithContext(ctx context.Context) MongoDbCollectionSettingsOutput {
	return o
}

func (o MongoDbCollectionSettingsOutput) CanDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MongoDbCollectionSettings) *bool { return v.CanDelete }).(pulumi.BoolPtrOutput)
}

func (o MongoDbCollectionSettingsOutput) ShardKey() MongoDbShardKeySettingPtrOutput {
	return o.ApplyT(func(v MongoDbCollectionSettings) *MongoDbShardKeySetting { return v.ShardKey }).(MongoDbShardKeySettingPtrOutput)
}

func (o MongoDbCollectionSettingsOutput) TargetRUs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDbCollectionSettings) *int { return v.TargetRUs }).(pulumi.IntPtrOutput)
}

type MongoDbCollectionSettingsMapOutput struct{ *pulumi.OutputState }

func (MongoDbCollectionSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MongoDbCollectionSettings)(nil)).Elem()
}

func (o MongoDbCollectionSettingsMapOutput) ToMongoDbCollectionSettingsMapOutput() MongoDbCollectionSettingsMapOutput {
	return o
}

func (o MongoDbCollectionSettingsMapOutput) ToMongoDbCollectionSettingsMapOutputWithContext(ctx context.Context) MongoDbCollectionSettingsMapOutput {
	return o
}

func (o MongoDbCollectionSettingsMapOutput) MapIndex(k pulumi.StringInput) MongoDbCollectionSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MongoDbCollectionSettings {
		return vs[0].(map[string]MongoDbCollectionSettings)[vs[1].(string)]
	}).(MongoDbCollectionSettingsOutput)
}

type MongoDbCollectionSettingsResponse struct {
	CanDelete *bool                           `pulumi:"canDelete"`
	ShardKey  *MongoDbShardKeySettingResponse `pulumi:"shardKey"`
	TargetRUs *int                            `pulumi:"targetRUs"`
}





type MongoDbCollectionSettingsResponseInput interface {
	pulumi.Input

	ToMongoDbCollectionSettingsResponseOutput() MongoDbCollectionSettingsResponseOutput
	ToMongoDbCollectionSettingsResponseOutputWithContext(context.Context) MongoDbCollectionSettingsResponseOutput
}

type MongoDbCollectionSettingsResponseArgs struct {
	CanDelete pulumi.BoolPtrInput                    `pulumi:"canDelete"`
	ShardKey  MongoDbShardKeySettingResponsePtrInput `pulumi:"shardKey"`
	TargetRUs pulumi.IntPtrInput                     `pulumi:"targetRUs"`
}

func (MongoDbCollectionSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbCollectionSettingsResponse)(nil)).Elem()
}

func (i MongoDbCollectionSettingsResponseArgs) ToMongoDbCollectionSettingsResponseOutput() MongoDbCollectionSettingsResponseOutput {
	return i.ToMongoDbCollectionSettingsResponseOutputWithContext(context.Background())
}

func (i MongoDbCollectionSettingsResponseArgs) ToMongoDbCollectionSettingsResponseOutputWithContext(ctx context.Context) MongoDbCollectionSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbCollectionSettingsResponseOutput)
}





type MongoDbCollectionSettingsResponseMapInput interface {
	pulumi.Input

	ToMongoDbCollectionSettingsResponseMapOutput() MongoDbCollectionSettingsResponseMapOutput
	ToMongoDbCollectionSettingsResponseMapOutputWithContext(context.Context) MongoDbCollectionSettingsResponseMapOutput
}

type MongoDbCollectionSettingsResponseMap map[string]MongoDbCollectionSettingsResponseInput

func (MongoDbCollectionSettingsResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MongoDbCollectionSettingsResponse)(nil)).Elem()
}

func (i MongoDbCollectionSettingsResponseMap) ToMongoDbCollectionSettingsResponseMapOutput() MongoDbCollectionSettingsResponseMapOutput {
	return i.ToMongoDbCollectionSettingsResponseMapOutputWithContext(context.Background())
}

func (i MongoDbCollectionSettingsResponseMap) ToMongoDbCollectionSettingsResponseMapOutputWithContext(ctx context.Context) MongoDbCollectionSettingsResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbCollectionSettingsResponseMapOutput)
}

type MongoDbCollectionSettingsResponseOutput struct{ *pulumi.OutputState }

func (MongoDbCollectionSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbCollectionSettingsResponse)(nil)).Elem()
}

func (o MongoDbCollectionSettingsResponseOutput) ToMongoDbCollectionSettingsResponseOutput() MongoDbCollectionSettingsResponseOutput {
	return o
}

func (o MongoDbCollectionSettingsResponseOutput) ToMongoDbCollectionSettingsResponseOutputWithContext(ctx context.Context) MongoDbCollectionSettingsResponseOutput {
	return o
}

func (o MongoDbCollectionSettingsResponseOutput) CanDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MongoDbCollectionSettingsResponse) *bool { return v.CanDelete }).(pulumi.BoolPtrOutput)
}

func (o MongoDbCollectionSettingsResponseOutput) ShardKey() MongoDbShardKeySettingResponsePtrOutput {
	return o.ApplyT(func(v MongoDbCollectionSettingsResponse) *MongoDbShardKeySettingResponse { return v.ShardKey }).(MongoDbShardKeySettingResponsePtrOutput)
}

func (o MongoDbCollectionSettingsResponseOutput) TargetRUs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDbCollectionSettingsResponse) *int { return v.TargetRUs }).(pulumi.IntPtrOutput)
}

type MongoDbCollectionSettingsResponseMapOutput struct{ *pulumi.OutputState }

func (MongoDbCollectionSettingsResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MongoDbCollectionSettingsResponse)(nil)).Elem()
}

func (o MongoDbCollectionSettingsResponseMapOutput) ToMongoDbCollectionSettingsResponseMapOutput() MongoDbCollectionSettingsResponseMapOutput {
	return o
}

func (o MongoDbCollectionSettingsResponseMapOutput) ToMongoDbCollectionSettingsResponseMapOutputWithContext(ctx context.Context) MongoDbCollectionSettingsResponseMapOutput {
	return o
}

func (o MongoDbCollectionSettingsResponseMapOutput) MapIndex(k pulumi.StringInput) MongoDbCollectionSettingsResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MongoDbCollectionSettingsResponse {
		return vs[0].(map[string]MongoDbCollectionSettingsResponse)[vs[1].(string)]
	}).(MongoDbCollectionSettingsResponseOutput)
}

type MongoDbConnectionInfo struct {
	ConnectionString string  `pulumi:"connectionString"`
	Password         *string `pulumi:"password"`
	Type             string  `pulumi:"type"`
	UserName         *string `pulumi:"userName"`
}





type MongoDbConnectionInfoInput interface {
	pulumi.Input

	ToMongoDbConnectionInfoOutput() MongoDbConnectionInfoOutput
	ToMongoDbConnectionInfoOutputWithContext(context.Context) MongoDbConnectionInfoOutput
}

type MongoDbConnectionInfoArgs struct {
	ConnectionString pulumi.StringInput    `pulumi:"connectionString"`
	Password         pulumi.StringPtrInput `pulumi:"password"`
	Type             pulumi.StringInput    `pulumi:"type"`
	UserName         pulumi.StringPtrInput `pulumi:"userName"`
}

func (MongoDbConnectionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbConnectionInfo)(nil)).Elem()
}

func (i MongoDbConnectionInfoArgs) ToMongoDbConnectionInfoOutput() MongoDbConnectionInfoOutput {
	return i.ToMongoDbConnectionInfoOutputWithContext(context.Background())
}

func (i MongoDbConnectionInfoArgs) ToMongoDbConnectionInfoOutputWithContext(ctx context.Context) MongoDbConnectionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbConnectionInfoOutput)
}

func (i MongoDbConnectionInfoArgs) ToMongoDbConnectionInfoPtrOutput() MongoDbConnectionInfoPtrOutput {
	return i.ToMongoDbConnectionInfoPtrOutputWithContext(context.Background())
}

func (i MongoDbConnectionInfoArgs) ToMongoDbConnectionInfoPtrOutputWithContext(ctx context.Context) MongoDbConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbConnectionInfoOutput).ToMongoDbConnectionInfoPtrOutputWithContext(ctx)
}









type MongoDbConnectionInfoPtrInput interface {
	pulumi.Input

	ToMongoDbConnectionInfoPtrOutput() MongoDbConnectionInfoPtrOutput
	ToMongoDbConnectionInfoPtrOutputWithContext(context.Context) MongoDbConnectionInfoPtrOutput
}

type mongoDbConnectionInfoPtrType MongoDbConnectionInfoArgs

func MongoDbConnectionInfoPtr(v *MongoDbConnectionInfoArgs) MongoDbConnectionInfoPtrInput {
	return (*mongoDbConnectionInfoPtrType)(v)
}

func (*mongoDbConnectionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDbConnectionInfo)(nil)).Elem()
}

func (i *mongoDbConnectionInfoPtrType) ToMongoDbConnectionInfoPtrOutput() MongoDbConnectionInfoPtrOutput {
	return i.ToMongoDbConnectionInfoPtrOutputWithContext(context.Background())
}

func (i *mongoDbConnectionInfoPtrType) ToMongoDbConnectionInfoPtrOutputWithContext(ctx context.Context) MongoDbConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbConnectionInfoPtrOutput)
}

type MongoDbConnectionInfoOutput struct{ *pulumi.OutputState }

func (MongoDbConnectionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbConnectionInfo)(nil)).Elem()
}

func (o MongoDbConnectionInfoOutput) ToMongoDbConnectionInfoOutput() MongoDbConnectionInfoOutput {
	return o
}

func (o MongoDbConnectionInfoOutput) ToMongoDbConnectionInfoOutputWithContext(ctx context.Context) MongoDbConnectionInfoOutput {
	return o
}

func (o MongoDbConnectionInfoOutput) ToMongoDbConnectionInfoPtrOutput() MongoDbConnectionInfoPtrOutput {
	return o.ToMongoDbConnectionInfoPtrOutputWithContext(context.Background())
}

func (o MongoDbConnectionInfoOutput) ToMongoDbConnectionInfoPtrOutputWithContext(ctx context.Context) MongoDbConnectionInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoDbConnectionInfo) *MongoDbConnectionInfo {
		return &v
	}).(MongoDbConnectionInfoPtrOutput)
}

func (o MongoDbConnectionInfoOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbConnectionInfo) string { return v.ConnectionString }).(pulumi.StringOutput)
}

func (o MongoDbConnectionInfoOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbConnectionInfo) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o MongoDbConnectionInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbConnectionInfo) string { return v.Type }).(pulumi.StringOutput)
}

func (o MongoDbConnectionInfoOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbConnectionInfo) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type MongoDbConnectionInfoPtrOutput struct{ *pulumi.OutputState }

func (MongoDbConnectionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDbConnectionInfo)(nil)).Elem()
}

func (o MongoDbConnectionInfoPtrOutput) ToMongoDbConnectionInfoPtrOutput() MongoDbConnectionInfoPtrOutput {
	return o
}

func (o MongoDbConnectionInfoPtrOutput) ToMongoDbConnectionInfoPtrOutputWithContext(ctx context.Context) MongoDbConnectionInfoPtrOutput {
	return o
}

func (o MongoDbConnectionInfoPtrOutput) Elem() MongoDbConnectionInfoOutput {
	return o.ApplyT(func(v *MongoDbConnectionInfo) MongoDbConnectionInfo {
		if v != nil {
			return *v
		}
		var ret MongoDbConnectionInfo
		return ret
	}).(MongoDbConnectionInfoOutput)
}

func (o MongoDbConnectionInfoPtrOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDbConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectionString
	}).(pulumi.StringPtrOutput)
}

func (o MongoDbConnectionInfoPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDbConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o MongoDbConnectionInfoPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDbConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o MongoDbConnectionInfoPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDbConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type MongoDbConnectionInfoResponse struct {
	ConnectionString string  `pulumi:"connectionString"`
	Password         *string `pulumi:"password"`
	Type             string  `pulumi:"type"`
	UserName         *string `pulumi:"userName"`
}





type MongoDbConnectionInfoResponseInput interface {
	pulumi.Input

	ToMongoDbConnectionInfoResponseOutput() MongoDbConnectionInfoResponseOutput
	ToMongoDbConnectionInfoResponseOutputWithContext(context.Context) MongoDbConnectionInfoResponseOutput
}

type MongoDbConnectionInfoResponseArgs struct {
	ConnectionString pulumi.StringInput    `pulumi:"connectionString"`
	Password         pulumi.StringPtrInput `pulumi:"password"`
	Type             pulumi.StringInput    `pulumi:"type"`
	UserName         pulumi.StringPtrInput `pulumi:"userName"`
}

func (MongoDbConnectionInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbConnectionInfoResponse)(nil)).Elem()
}

func (i MongoDbConnectionInfoResponseArgs) ToMongoDbConnectionInfoResponseOutput() MongoDbConnectionInfoResponseOutput {
	return i.ToMongoDbConnectionInfoResponseOutputWithContext(context.Background())
}

func (i MongoDbConnectionInfoResponseArgs) ToMongoDbConnectionInfoResponseOutputWithContext(ctx context.Context) MongoDbConnectionInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbConnectionInfoResponseOutput)
}

func (i MongoDbConnectionInfoResponseArgs) ToMongoDbConnectionInfoResponsePtrOutput() MongoDbConnectionInfoResponsePtrOutput {
	return i.ToMongoDbConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i MongoDbConnectionInfoResponseArgs) ToMongoDbConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MongoDbConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbConnectionInfoResponseOutput).ToMongoDbConnectionInfoResponsePtrOutputWithContext(ctx)
}









type MongoDbConnectionInfoResponsePtrInput interface {
	pulumi.Input

	ToMongoDbConnectionInfoResponsePtrOutput() MongoDbConnectionInfoResponsePtrOutput
	ToMongoDbConnectionInfoResponsePtrOutputWithContext(context.Context) MongoDbConnectionInfoResponsePtrOutput
}

type mongoDbConnectionInfoResponsePtrType MongoDbConnectionInfoResponseArgs

func MongoDbConnectionInfoResponsePtr(v *MongoDbConnectionInfoResponseArgs) MongoDbConnectionInfoResponsePtrInput {
	return (*mongoDbConnectionInfoResponsePtrType)(v)
}

func (*mongoDbConnectionInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDbConnectionInfoResponse)(nil)).Elem()
}

func (i *mongoDbConnectionInfoResponsePtrType) ToMongoDbConnectionInfoResponsePtrOutput() MongoDbConnectionInfoResponsePtrOutput {
	return i.ToMongoDbConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i *mongoDbConnectionInfoResponsePtrType) ToMongoDbConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MongoDbConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbConnectionInfoResponsePtrOutput)
}

type MongoDbConnectionInfoResponseOutput struct{ *pulumi.OutputState }

func (MongoDbConnectionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbConnectionInfoResponse)(nil)).Elem()
}

func (o MongoDbConnectionInfoResponseOutput) ToMongoDbConnectionInfoResponseOutput() MongoDbConnectionInfoResponseOutput {
	return o
}

func (o MongoDbConnectionInfoResponseOutput) ToMongoDbConnectionInfoResponseOutputWithContext(ctx context.Context) MongoDbConnectionInfoResponseOutput {
	return o
}

func (o MongoDbConnectionInfoResponseOutput) ToMongoDbConnectionInfoResponsePtrOutput() MongoDbConnectionInfoResponsePtrOutput {
	return o.ToMongoDbConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (o MongoDbConnectionInfoResponseOutput) ToMongoDbConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MongoDbConnectionInfoResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoDbConnectionInfoResponse) *MongoDbConnectionInfoResponse {
		return &v
	}).(MongoDbConnectionInfoResponsePtrOutput)
}

func (o MongoDbConnectionInfoResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbConnectionInfoResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

func (o MongoDbConnectionInfoResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbConnectionInfoResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o MongoDbConnectionInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbConnectionInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

func (o MongoDbConnectionInfoResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbConnectionInfoResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type MongoDbConnectionInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (MongoDbConnectionInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDbConnectionInfoResponse)(nil)).Elem()
}

func (o MongoDbConnectionInfoResponsePtrOutput) ToMongoDbConnectionInfoResponsePtrOutput() MongoDbConnectionInfoResponsePtrOutput {
	return o
}

func (o MongoDbConnectionInfoResponsePtrOutput) ToMongoDbConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MongoDbConnectionInfoResponsePtrOutput {
	return o
}

func (o MongoDbConnectionInfoResponsePtrOutput) Elem() MongoDbConnectionInfoResponseOutput {
	return o.ApplyT(func(v *MongoDbConnectionInfoResponse) MongoDbConnectionInfoResponse {
		if v != nil {
			return *v
		}
		var ret MongoDbConnectionInfoResponse
		return ret
	}).(MongoDbConnectionInfoResponseOutput)
}

func (o MongoDbConnectionInfoResponsePtrOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDbConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectionString
	}).(pulumi.StringPtrOutput)
}

func (o MongoDbConnectionInfoResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDbConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o MongoDbConnectionInfoResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDbConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o MongoDbConnectionInfoResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDbConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type MongoDbDatabaseInfoResponse struct {
	AverageDocumentSize float64                         `pulumi:"averageDocumentSize"`
	Collections         []MongoDbCollectionInfoResponse `pulumi:"collections"`
	DataSize            float64                         `pulumi:"dataSize"`
	DocumentCount       float64                         `pulumi:"documentCount"`
	Name                string                          `pulumi:"name"`
	QualifiedName       string                          `pulumi:"qualifiedName"`
	SupportsSharding    bool                            `pulumi:"supportsSharding"`
}





type MongoDbDatabaseInfoResponseInput interface {
	pulumi.Input

	ToMongoDbDatabaseInfoResponseOutput() MongoDbDatabaseInfoResponseOutput
	ToMongoDbDatabaseInfoResponseOutputWithContext(context.Context) MongoDbDatabaseInfoResponseOutput
}

type MongoDbDatabaseInfoResponseArgs struct {
	AverageDocumentSize pulumi.Float64Input                     `pulumi:"averageDocumentSize"`
	Collections         MongoDbCollectionInfoResponseArrayInput `pulumi:"collections"`
	DataSize            pulumi.Float64Input                     `pulumi:"dataSize"`
	DocumentCount       pulumi.Float64Input                     `pulumi:"documentCount"`
	Name                pulumi.StringInput                      `pulumi:"name"`
	QualifiedName       pulumi.StringInput                      `pulumi:"qualifiedName"`
	SupportsSharding    pulumi.BoolInput                        `pulumi:"supportsSharding"`
}

func (MongoDbDatabaseInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbDatabaseInfoResponse)(nil)).Elem()
}

func (i MongoDbDatabaseInfoResponseArgs) ToMongoDbDatabaseInfoResponseOutput() MongoDbDatabaseInfoResponseOutput {
	return i.ToMongoDbDatabaseInfoResponseOutputWithContext(context.Background())
}

func (i MongoDbDatabaseInfoResponseArgs) ToMongoDbDatabaseInfoResponseOutputWithContext(ctx context.Context) MongoDbDatabaseInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbDatabaseInfoResponseOutput)
}





type MongoDbDatabaseInfoResponseArrayInput interface {
	pulumi.Input

	ToMongoDbDatabaseInfoResponseArrayOutput() MongoDbDatabaseInfoResponseArrayOutput
	ToMongoDbDatabaseInfoResponseArrayOutputWithContext(context.Context) MongoDbDatabaseInfoResponseArrayOutput
}

type MongoDbDatabaseInfoResponseArray []MongoDbDatabaseInfoResponseInput

func (MongoDbDatabaseInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoDbDatabaseInfoResponse)(nil)).Elem()
}

func (i MongoDbDatabaseInfoResponseArray) ToMongoDbDatabaseInfoResponseArrayOutput() MongoDbDatabaseInfoResponseArrayOutput {
	return i.ToMongoDbDatabaseInfoResponseArrayOutputWithContext(context.Background())
}

func (i MongoDbDatabaseInfoResponseArray) ToMongoDbDatabaseInfoResponseArrayOutputWithContext(ctx context.Context) MongoDbDatabaseInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbDatabaseInfoResponseArrayOutput)
}

type MongoDbDatabaseInfoResponseOutput struct{ *pulumi.OutputState }

func (MongoDbDatabaseInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbDatabaseInfoResponse)(nil)).Elem()
}

func (o MongoDbDatabaseInfoResponseOutput) ToMongoDbDatabaseInfoResponseOutput() MongoDbDatabaseInfoResponseOutput {
	return o
}

func (o MongoDbDatabaseInfoResponseOutput) ToMongoDbDatabaseInfoResponseOutputWithContext(ctx context.Context) MongoDbDatabaseInfoResponseOutput {
	return o
}

func (o MongoDbDatabaseInfoResponseOutput) AverageDocumentSize() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbDatabaseInfoResponse) float64 { return v.AverageDocumentSize }).(pulumi.Float64Output)
}

func (o MongoDbDatabaseInfoResponseOutput) Collections() MongoDbCollectionInfoResponseArrayOutput {
	return o.ApplyT(func(v MongoDbDatabaseInfoResponse) []MongoDbCollectionInfoResponse { return v.Collections }).(MongoDbCollectionInfoResponseArrayOutput)
}

func (o MongoDbDatabaseInfoResponseOutput) DataSize() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbDatabaseInfoResponse) float64 { return v.DataSize }).(pulumi.Float64Output)
}

func (o MongoDbDatabaseInfoResponseOutput) DocumentCount() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbDatabaseInfoResponse) float64 { return v.DocumentCount }).(pulumi.Float64Output)
}

func (o MongoDbDatabaseInfoResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbDatabaseInfoResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o MongoDbDatabaseInfoResponseOutput) QualifiedName() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbDatabaseInfoResponse) string { return v.QualifiedName }).(pulumi.StringOutput)
}

func (o MongoDbDatabaseInfoResponseOutput) SupportsSharding() pulumi.BoolOutput {
	return o.ApplyT(func(v MongoDbDatabaseInfoResponse) bool { return v.SupportsSharding }).(pulumi.BoolOutput)
}

type MongoDbDatabaseInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (MongoDbDatabaseInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoDbDatabaseInfoResponse)(nil)).Elem()
}

func (o MongoDbDatabaseInfoResponseArrayOutput) ToMongoDbDatabaseInfoResponseArrayOutput() MongoDbDatabaseInfoResponseArrayOutput {
	return o
}

func (o MongoDbDatabaseInfoResponseArrayOutput) ToMongoDbDatabaseInfoResponseArrayOutputWithContext(ctx context.Context) MongoDbDatabaseInfoResponseArrayOutput {
	return o
}

func (o MongoDbDatabaseInfoResponseArrayOutput) Index(i pulumi.IntInput) MongoDbDatabaseInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoDbDatabaseInfoResponse {
		return vs[0].([]MongoDbDatabaseInfoResponse)[vs[1].(int)]
	}).(MongoDbDatabaseInfoResponseOutput)
}

type MongoDbDatabaseProgressResponse struct {
	BytesCopied     float64                                      `pulumi:"bytesCopied"`
	Collections     map[string]MongoDbCollectionProgressResponse `pulumi:"collections"`
	DocumentsCopied float64                                      `pulumi:"documentsCopied"`
	ElapsedTime     string                                       `pulumi:"elapsedTime"`
	Errors          map[string]MongoDbErrorResponse              `pulumi:"errors"`
	EventsPending   float64                                      `pulumi:"eventsPending"`
	EventsReplayed  float64                                      `pulumi:"eventsReplayed"`
	LastEventTime   *string                                      `pulumi:"lastEventTime"`
	LastReplayTime  *string                                      `pulumi:"lastReplayTime"`
	Name            *string                                      `pulumi:"name"`
	QualifiedName   *string                                      `pulumi:"qualifiedName"`
	ResultType      string                                       `pulumi:"resultType"`
	State           string                                       `pulumi:"state"`
	TotalBytes      float64                                      `pulumi:"totalBytes"`
	TotalDocuments  float64                                      `pulumi:"totalDocuments"`
}





type MongoDbDatabaseProgressResponseInput interface {
	pulumi.Input

	ToMongoDbDatabaseProgressResponseOutput() MongoDbDatabaseProgressResponseOutput
	ToMongoDbDatabaseProgressResponseOutputWithContext(context.Context) MongoDbDatabaseProgressResponseOutput
}

type MongoDbDatabaseProgressResponseArgs struct {
	BytesCopied     pulumi.Float64Input                       `pulumi:"bytesCopied"`
	Collections     MongoDbCollectionProgressResponseMapInput `pulumi:"collections"`
	DocumentsCopied pulumi.Float64Input                       `pulumi:"documentsCopied"`
	ElapsedTime     pulumi.StringInput                        `pulumi:"elapsedTime"`
	Errors          MongoDbErrorResponseMapInput              `pulumi:"errors"`
	EventsPending   pulumi.Float64Input                       `pulumi:"eventsPending"`
	EventsReplayed  pulumi.Float64Input                       `pulumi:"eventsReplayed"`
	LastEventTime   pulumi.StringPtrInput                     `pulumi:"lastEventTime"`
	LastReplayTime  pulumi.StringPtrInput                     `pulumi:"lastReplayTime"`
	Name            pulumi.StringPtrInput                     `pulumi:"name"`
	QualifiedName   pulumi.StringPtrInput                     `pulumi:"qualifiedName"`
	ResultType      pulumi.StringInput                        `pulumi:"resultType"`
	State           pulumi.StringInput                        `pulumi:"state"`
	TotalBytes      pulumi.Float64Input                       `pulumi:"totalBytes"`
	TotalDocuments  pulumi.Float64Input                       `pulumi:"totalDocuments"`
}

func (MongoDbDatabaseProgressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbDatabaseProgressResponse)(nil)).Elem()
}

func (i MongoDbDatabaseProgressResponseArgs) ToMongoDbDatabaseProgressResponseOutput() MongoDbDatabaseProgressResponseOutput {
	return i.ToMongoDbDatabaseProgressResponseOutputWithContext(context.Background())
}

func (i MongoDbDatabaseProgressResponseArgs) ToMongoDbDatabaseProgressResponseOutputWithContext(ctx context.Context) MongoDbDatabaseProgressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbDatabaseProgressResponseOutput)
}





type MongoDbDatabaseProgressResponseMapInput interface {
	pulumi.Input

	ToMongoDbDatabaseProgressResponseMapOutput() MongoDbDatabaseProgressResponseMapOutput
	ToMongoDbDatabaseProgressResponseMapOutputWithContext(context.Context) MongoDbDatabaseProgressResponseMapOutput
}

type MongoDbDatabaseProgressResponseMap map[string]MongoDbDatabaseProgressResponseInput

func (MongoDbDatabaseProgressResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MongoDbDatabaseProgressResponse)(nil)).Elem()
}

func (i MongoDbDatabaseProgressResponseMap) ToMongoDbDatabaseProgressResponseMapOutput() MongoDbDatabaseProgressResponseMapOutput {
	return i.ToMongoDbDatabaseProgressResponseMapOutputWithContext(context.Background())
}

func (i MongoDbDatabaseProgressResponseMap) ToMongoDbDatabaseProgressResponseMapOutputWithContext(ctx context.Context) MongoDbDatabaseProgressResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbDatabaseProgressResponseMapOutput)
}

type MongoDbDatabaseProgressResponseOutput struct{ *pulumi.OutputState }

func (MongoDbDatabaseProgressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbDatabaseProgressResponse)(nil)).Elem()
}

func (o MongoDbDatabaseProgressResponseOutput) ToMongoDbDatabaseProgressResponseOutput() MongoDbDatabaseProgressResponseOutput {
	return o
}

func (o MongoDbDatabaseProgressResponseOutput) ToMongoDbDatabaseProgressResponseOutputWithContext(ctx context.Context) MongoDbDatabaseProgressResponseOutput {
	return o
}

func (o MongoDbDatabaseProgressResponseOutput) BytesCopied() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbDatabaseProgressResponse) float64 { return v.BytesCopied }).(pulumi.Float64Output)
}

func (o MongoDbDatabaseProgressResponseOutput) Collections() MongoDbCollectionProgressResponseMapOutput {
	return o.ApplyT(func(v MongoDbDatabaseProgressResponse) map[string]MongoDbCollectionProgressResponse {
		return v.Collections
	}).(MongoDbCollectionProgressResponseMapOutput)
}

func (o MongoDbDatabaseProgressResponseOutput) DocumentsCopied() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbDatabaseProgressResponse) float64 { return v.DocumentsCopied }).(pulumi.Float64Output)
}

func (o MongoDbDatabaseProgressResponseOutput) ElapsedTime() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbDatabaseProgressResponse) string { return v.ElapsedTime }).(pulumi.StringOutput)
}

func (o MongoDbDatabaseProgressResponseOutput) Errors() MongoDbErrorResponseMapOutput {
	return o.ApplyT(func(v MongoDbDatabaseProgressResponse) map[string]MongoDbErrorResponse { return v.Errors }).(MongoDbErrorResponseMapOutput)
}

func (o MongoDbDatabaseProgressResponseOutput) EventsPending() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbDatabaseProgressResponse) float64 { return v.EventsPending }).(pulumi.Float64Output)
}

func (o MongoDbDatabaseProgressResponseOutput) EventsReplayed() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbDatabaseProgressResponse) float64 { return v.EventsReplayed }).(pulumi.Float64Output)
}

func (o MongoDbDatabaseProgressResponseOutput) LastEventTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbDatabaseProgressResponse) *string { return v.LastEventTime }).(pulumi.StringPtrOutput)
}

func (o MongoDbDatabaseProgressResponseOutput) LastReplayTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbDatabaseProgressResponse) *string { return v.LastReplayTime }).(pulumi.StringPtrOutput)
}

func (o MongoDbDatabaseProgressResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbDatabaseProgressResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MongoDbDatabaseProgressResponseOutput) QualifiedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbDatabaseProgressResponse) *string { return v.QualifiedName }).(pulumi.StringPtrOutput)
}

func (o MongoDbDatabaseProgressResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbDatabaseProgressResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MongoDbDatabaseProgressResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbDatabaseProgressResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MongoDbDatabaseProgressResponseOutput) TotalBytes() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbDatabaseProgressResponse) float64 { return v.TotalBytes }).(pulumi.Float64Output)
}

func (o MongoDbDatabaseProgressResponseOutput) TotalDocuments() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbDatabaseProgressResponse) float64 { return v.TotalDocuments }).(pulumi.Float64Output)
}

type MongoDbDatabaseProgressResponseMapOutput struct{ *pulumi.OutputState }

func (MongoDbDatabaseProgressResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MongoDbDatabaseProgressResponse)(nil)).Elem()
}

func (o MongoDbDatabaseProgressResponseMapOutput) ToMongoDbDatabaseProgressResponseMapOutput() MongoDbDatabaseProgressResponseMapOutput {
	return o
}

func (o MongoDbDatabaseProgressResponseMapOutput) ToMongoDbDatabaseProgressResponseMapOutputWithContext(ctx context.Context) MongoDbDatabaseProgressResponseMapOutput {
	return o
}

func (o MongoDbDatabaseProgressResponseMapOutput) MapIndex(k pulumi.StringInput) MongoDbDatabaseProgressResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MongoDbDatabaseProgressResponse {
		return vs[0].(map[string]MongoDbDatabaseProgressResponse)[vs[1].(string)]
	}).(MongoDbDatabaseProgressResponseOutput)
}

type MongoDbDatabaseSettings struct {
	Collections map[string]MongoDbCollectionSettings `pulumi:"collections"`
	TargetRUs   *int                                 `pulumi:"targetRUs"`
}





type MongoDbDatabaseSettingsInput interface {
	pulumi.Input

	ToMongoDbDatabaseSettingsOutput() MongoDbDatabaseSettingsOutput
	ToMongoDbDatabaseSettingsOutputWithContext(context.Context) MongoDbDatabaseSettingsOutput
}

type MongoDbDatabaseSettingsArgs struct {
	Collections MongoDbCollectionSettingsMapInput `pulumi:"collections"`
	TargetRUs   pulumi.IntPtrInput                `pulumi:"targetRUs"`
}

func (MongoDbDatabaseSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbDatabaseSettings)(nil)).Elem()
}

func (i MongoDbDatabaseSettingsArgs) ToMongoDbDatabaseSettingsOutput() MongoDbDatabaseSettingsOutput {
	return i.ToMongoDbDatabaseSettingsOutputWithContext(context.Background())
}

func (i MongoDbDatabaseSettingsArgs) ToMongoDbDatabaseSettingsOutputWithContext(ctx context.Context) MongoDbDatabaseSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbDatabaseSettingsOutput)
}





type MongoDbDatabaseSettingsMapInput interface {
	pulumi.Input

	ToMongoDbDatabaseSettingsMapOutput() MongoDbDatabaseSettingsMapOutput
	ToMongoDbDatabaseSettingsMapOutputWithContext(context.Context) MongoDbDatabaseSettingsMapOutput
}

type MongoDbDatabaseSettingsMap map[string]MongoDbDatabaseSettingsInput

func (MongoDbDatabaseSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MongoDbDatabaseSettings)(nil)).Elem()
}

func (i MongoDbDatabaseSettingsMap) ToMongoDbDatabaseSettingsMapOutput() MongoDbDatabaseSettingsMapOutput {
	return i.ToMongoDbDatabaseSettingsMapOutputWithContext(context.Background())
}

func (i MongoDbDatabaseSettingsMap) ToMongoDbDatabaseSettingsMapOutputWithContext(ctx context.Context) MongoDbDatabaseSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbDatabaseSettingsMapOutput)
}

type MongoDbDatabaseSettingsOutput struct{ *pulumi.OutputState }

func (MongoDbDatabaseSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbDatabaseSettings)(nil)).Elem()
}

func (o MongoDbDatabaseSettingsOutput) ToMongoDbDatabaseSettingsOutput() MongoDbDatabaseSettingsOutput {
	return o
}

func (o MongoDbDatabaseSettingsOutput) ToMongoDbDatabaseSettingsOutputWithContext(ctx context.Context) MongoDbDatabaseSettingsOutput {
	return o
}

func (o MongoDbDatabaseSettingsOutput) Collections() MongoDbCollectionSettingsMapOutput {
	return o.ApplyT(func(v MongoDbDatabaseSettings) map[string]MongoDbCollectionSettings { return v.Collections }).(MongoDbCollectionSettingsMapOutput)
}

func (o MongoDbDatabaseSettingsOutput) TargetRUs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDbDatabaseSettings) *int { return v.TargetRUs }).(pulumi.IntPtrOutput)
}

type MongoDbDatabaseSettingsMapOutput struct{ *pulumi.OutputState }

func (MongoDbDatabaseSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MongoDbDatabaseSettings)(nil)).Elem()
}

func (o MongoDbDatabaseSettingsMapOutput) ToMongoDbDatabaseSettingsMapOutput() MongoDbDatabaseSettingsMapOutput {
	return o
}

func (o MongoDbDatabaseSettingsMapOutput) ToMongoDbDatabaseSettingsMapOutputWithContext(ctx context.Context) MongoDbDatabaseSettingsMapOutput {
	return o
}

func (o MongoDbDatabaseSettingsMapOutput) MapIndex(k pulumi.StringInput) MongoDbDatabaseSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MongoDbDatabaseSettings {
		return vs[0].(map[string]MongoDbDatabaseSettings)[vs[1].(string)]
	}).(MongoDbDatabaseSettingsOutput)
}

type MongoDbDatabaseSettingsResponse struct {
	Collections map[string]MongoDbCollectionSettingsResponse `pulumi:"collections"`
	TargetRUs   *int                                         `pulumi:"targetRUs"`
}





type MongoDbDatabaseSettingsResponseInput interface {
	pulumi.Input

	ToMongoDbDatabaseSettingsResponseOutput() MongoDbDatabaseSettingsResponseOutput
	ToMongoDbDatabaseSettingsResponseOutputWithContext(context.Context) MongoDbDatabaseSettingsResponseOutput
}

type MongoDbDatabaseSettingsResponseArgs struct {
	Collections MongoDbCollectionSettingsResponseMapInput `pulumi:"collections"`
	TargetRUs   pulumi.IntPtrInput                        `pulumi:"targetRUs"`
}

func (MongoDbDatabaseSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbDatabaseSettingsResponse)(nil)).Elem()
}

func (i MongoDbDatabaseSettingsResponseArgs) ToMongoDbDatabaseSettingsResponseOutput() MongoDbDatabaseSettingsResponseOutput {
	return i.ToMongoDbDatabaseSettingsResponseOutputWithContext(context.Background())
}

func (i MongoDbDatabaseSettingsResponseArgs) ToMongoDbDatabaseSettingsResponseOutputWithContext(ctx context.Context) MongoDbDatabaseSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbDatabaseSettingsResponseOutput)
}





type MongoDbDatabaseSettingsResponseMapInput interface {
	pulumi.Input

	ToMongoDbDatabaseSettingsResponseMapOutput() MongoDbDatabaseSettingsResponseMapOutput
	ToMongoDbDatabaseSettingsResponseMapOutputWithContext(context.Context) MongoDbDatabaseSettingsResponseMapOutput
}

type MongoDbDatabaseSettingsResponseMap map[string]MongoDbDatabaseSettingsResponseInput

func (MongoDbDatabaseSettingsResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MongoDbDatabaseSettingsResponse)(nil)).Elem()
}

func (i MongoDbDatabaseSettingsResponseMap) ToMongoDbDatabaseSettingsResponseMapOutput() MongoDbDatabaseSettingsResponseMapOutput {
	return i.ToMongoDbDatabaseSettingsResponseMapOutputWithContext(context.Background())
}

func (i MongoDbDatabaseSettingsResponseMap) ToMongoDbDatabaseSettingsResponseMapOutputWithContext(ctx context.Context) MongoDbDatabaseSettingsResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbDatabaseSettingsResponseMapOutput)
}

type MongoDbDatabaseSettingsResponseOutput struct{ *pulumi.OutputState }

func (MongoDbDatabaseSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbDatabaseSettingsResponse)(nil)).Elem()
}

func (o MongoDbDatabaseSettingsResponseOutput) ToMongoDbDatabaseSettingsResponseOutput() MongoDbDatabaseSettingsResponseOutput {
	return o
}

func (o MongoDbDatabaseSettingsResponseOutput) ToMongoDbDatabaseSettingsResponseOutputWithContext(ctx context.Context) MongoDbDatabaseSettingsResponseOutput {
	return o
}

func (o MongoDbDatabaseSettingsResponseOutput) Collections() MongoDbCollectionSettingsResponseMapOutput {
	return o.ApplyT(func(v MongoDbDatabaseSettingsResponse) map[string]MongoDbCollectionSettingsResponse {
		return v.Collections
	}).(MongoDbCollectionSettingsResponseMapOutput)
}

func (o MongoDbDatabaseSettingsResponseOutput) TargetRUs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDbDatabaseSettingsResponse) *int { return v.TargetRUs }).(pulumi.IntPtrOutput)
}

type MongoDbDatabaseSettingsResponseMapOutput struct{ *pulumi.OutputState }

func (MongoDbDatabaseSettingsResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MongoDbDatabaseSettingsResponse)(nil)).Elem()
}

func (o MongoDbDatabaseSettingsResponseMapOutput) ToMongoDbDatabaseSettingsResponseMapOutput() MongoDbDatabaseSettingsResponseMapOutput {
	return o
}

func (o MongoDbDatabaseSettingsResponseMapOutput) ToMongoDbDatabaseSettingsResponseMapOutputWithContext(ctx context.Context) MongoDbDatabaseSettingsResponseMapOutput {
	return o
}

func (o MongoDbDatabaseSettingsResponseMapOutput) MapIndex(k pulumi.StringInput) MongoDbDatabaseSettingsResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MongoDbDatabaseSettingsResponse {
		return vs[0].(map[string]MongoDbDatabaseSettingsResponse)[vs[1].(string)]
	}).(MongoDbDatabaseSettingsResponseOutput)
}

type MongoDbErrorResponse struct {
	Code    *string `pulumi:"code"`
	Count   *int    `pulumi:"count"`
	Message *string `pulumi:"message"`
	Type    *string `pulumi:"type"`
}





type MongoDbErrorResponseInput interface {
	pulumi.Input

	ToMongoDbErrorResponseOutput() MongoDbErrorResponseOutput
	ToMongoDbErrorResponseOutputWithContext(context.Context) MongoDbErrorResponseOutput
}

type MongoDbErrorResponseArgs struct {
	Code    pulumi.StringPtrInput `pulumi:"code"`
	Count   pulumi.IntPtrInput    `pulumi:"count"`
	Message pulumi.StringPtrInput `pulumi:"message"`
	Type    pulumi.StringPtrInput `pulumi:"type"`
}

func (MongoDbErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbErrorResponse)(nil)).Elem()
}

func (i MongoDbErrorResponseArgs) ToMongoDbErrorResponseOutput() MongoDbErrorResponseOutput {
	return i.ToMongoDbErrorResponseOutputWithContext(context.Background())
}

func (i MongoDbErrorResponseArgs) ToMongoDbErrorResponseOutputWithContext(ctx context.Context) MongoDbErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbErrorResponseOutput)
}





type MongoDbErrorResponseMapInput interface {
	pulumi.Input

	ToMongoDbErrorResponseMapOutput() MongoDbErrorResponseMapOutput
	ToMongoDbErrorResponseMapOutputWithContext(context.Context) MongoDbErrorResponseMapOutput
}

type MongoDbErrorResponseMap map[string]MongoDbErrorResponseInput

func (MongoDbErrorResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MongoDbErrorResponse)(nil)).Elem()
}

func (i MongoDbErrorResponseMap) ToMongoDbErrorResponseMapOutput() MongoDbErrorResponseMapOutput {
	return i.ToMongoDbErrorResponseMapOutputWithContext(context.Background())
}

func (i MongoDbErrorResponseMap) ToMongoDbErrorResponseMapOutputWithContext(ctx context.Context) MongoDbErrorResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbErrorResponseMapOutput)
}

type MongoDbErrorResponseOutput struct{ *pulumi.OutputState }

func (MongoDbErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbErrorResponse)(nil)).Elem()
}

func (o MongoDbErrorResponseOutput) ToMongoDbErrorResponseOutput() MongoDbErrorResponseOutput {
	return o
}

func (o MongoDbErrorResponseOutput) ToMongoDbErrorResponseOutputWithContext(ctx context.Context) MongoDbErrorResponseOutput {
	return o
}

func (o MongoDbErrorResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbErrorResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o MongoDbErrorResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDbErrorResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

func (o MongoDbErrorResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbErrorResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o MongoDbErrorResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbErrorResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type MongoDbErrorResponseMapOutput struct{ *pulumi.OutputState }

func (MongoDbErrorResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MongoDbErrorResponse)(nil)).Elem()
}

func (o MongoDbErrorResponseMapOutput) ToMongoDbErrorResponseMapOutput() MongoDbErrorResponseMapOutput {
	return o
}

func (o MongoDbErrorResponseMapOutput) ToMongoDbErrorResponseMapOutputWithContext(ctx context.Context) MongoDbErrorResponseMapOutput {
	return o
}

func (o MongoDbErrorResponseMapOutput) MapIndex(k pulumi.StringInput) MongoDbErrorResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MongoDbErrorResponse {
		return vs[0].(map[string]MongoDbErrorResponse)[vs[1].(string)]
	}).(MongoDbErrorResponseOutput)
}

type MongoDbMigrationProgressResponse struct {
	BytesCopied     float64                                    `pulumi:"bytesCopied"`
	Databases       map[string]MongoDbDatabaseProgressResponse `pulumi:"databases"`
	DocumentsCopied float64                                    `pulumi:"documentsCopied"`
	ElapsedTime     string                                     `pulumi:"elapsedTime"`
	Errors          map[string]MongoDbErrorResponse            `pulumi:"errors"`
	EventsPending   float64                                    `pulumi:"eventsPending"`
	EventsReplayed  float64                                    `pulumi:"eventsReplayed"`
	LastEventTime   *string                                    `pulumi:"lastEventTime"`
	LastReplayTime  *string                                    `pulumi:"lastReplayTime"`
	Name            *string                                    `pulumi:"name"`
	QualifiedName   *string                                    `pulumi:"qualifiedName"`
	ResultType      string                                     `pulumi:"resultType"`
	State           string                                     `pulumi:"state"`
	TotalBytes      float64                                    `pulumi:"totalBytes"`
	TotalDocuments  float64                                    `pulumi:"totalDocuments"`
}





type MongoDbMigrationProgressResponseInput interface {
	pulumi.Input

	ToMongoDbMigrationProgressResponseOutput() MongoDbMigrationProgressResponseOutput
	ToMongoDbMigrationProgressResponseOutputWithContext(context.Context) MongoDbMigrationProgressResponseOutput
}

type MongoDbMigrationProgressResponseArgs struct {
	BytesCopied     pulumi.Float64Input                     `pulumi:"bytesCopied"`
	Databases       MongoDbDatabaseProgressResponseMapInput `pulumi:"databases"`
	DocumentsCopied pulumi.Float64Input                     `pulumi:"documentsCopied"`
	ElapsedTime     pulumi.StringInput                      `pulumi:"elapsedTime"`
	Errors          MongoDbErrorResponseMapInput            `pulumi:"errors"`
	EventsPending   pulumi.Float64Input                     `pulumi:"eventsPending"`
	EventsReplayed  pulumi.Float64Input                     `pulumi:"eventsReplayed"`
	LastEventTime   pulumi.StringPtrInput                   `pulumi:"lastEventTime"`
	LastReplayTime  pulumi.StringPtrInput                   `pulumi:"lastReplayTime"`
	Name            pulumi.StringPtrInput                   `pulumi:"name"`
	QualifiedName   pulumi.StringPtrInput                   `pulumi:"qualifiedName"`
	ResultType      pulumi.StringInput                      `pulumi:"resultType"`
	State           pulumi.StringInput                      `pulumi:"state"`
	TotalBytes      pulumi.Float64Input                     `pulumi:"totalBytes"`
	TotalDocuments  pulumi.Float64Input                     `pulumi:"totalDocuments"`
}

func (MongoDbMigrationProgressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbMigrationProgressResponse)(nil)).Elem()
}

func (i MongoDbMigrationProgressResponseArgs) ToMongoDbMigrationProgressResponseOutput() MongoDbMigrationProgressResponseOutput {
	return i.ToMongoDbMigrationProgressResponseOutputWithContext(context.Background())
}

func (i MongoDbMigrationProgressResponseArgs) ToMongoDbMigrationProgressResponseOutputWithContext(ctx context.Context) MongoDbMigrationProgressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbMigrationProgressResponseOutput)
}





type MongoDbMigrationProgressResponseArrayInput interface {
	pulumi.Input

	ToMongoDbMigrationProgressResponseArrayOutput() MongoDbMigrationProgressResponseArrayOutput
	ToMongoDbMigrationProgressResponseArrayOutputWithContext(context.Context) MongoDbMigrationProgressResponseArrayOutput
}

type MongoDbMigrationProgressResponseArray []MongoDbMigrationProgressResponseInput

func (MongoDbMigrationProgressResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoDbMigrationProgressResponse)(nil)).Elem()
}

func (i MongoDbMigrationProgressResponseArray) ToMongoDbMigrationProgressResponseArrayOutput() MongoDbMigrationProgressResponseArrayOutput {
	return i.ToMongoDbMigrationProgressResponseArrayOutputWithContext(context.Background())
}

func (i MongoDbMigrationProgressResponseArray) ToMongoDbMigrationProgressResponseArrayOutputWithContext(ctx context.Context) MongoDbMigrationProgressResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbMigrationProgressResponseArrayOutput)
}

type MongoDbMigrationProgressResponseOutput struct{ *pulumi.OutputState }

func (MongoDbMigrationProgressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbMigrationProgressResponse)(nil)).Elem()
}

func (o MongoDbMigrationProgressResponseOutput) ToMongoDbMigrationProgressResponseOutput() MongoDbMigrationProgressResponseOutput {
	return o
}

func (o MongoDbMigrationProgressResponseOutput) ToMongoDbMigrationProgressResponseOutputWithContext(ctx context.Context) MongoDbMigrationProgressResponseOutput {
	return o
}

func (o MongoDbMigrationProgressResponseOutput) BytesCopied() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbMigrationProgressResponse) float64 { return v.BytesCopied }).(pulumi.Float64Output)
}

func (o MongoDbMigrationProgressResponseOutput) Databases() MongoDbDatabaseProgressResponseMapOutput {
	return o.ApplyT(func(v MongoDbMigrationProgressResponse) map[string]MongoDbDatabaseProgressResponse {
		return v.Databases
	}).(MongoDbDatabaseProgressResponseMapOutput)
}

func (o MongoDbMigrationProgressResponseOutput) DocumentsCopied() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbMigrationProgressResponse) float64 { return v.DocumentsCopied }).(pulumi.Float64Output)
}

func (o MongoDbMigrationProgressResponseOutput) ElapsedTime() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbMigrationProgressResponse) string { return v.ElapsedTime }).(pulumi.StringOutput)
}

func (o MongoDbMigrationProgressResponseOutput) Errors() MongoDbErrorResponseMapOutput {
	return o.ApplyT(func(v MongoDbMigrationProgressResponse) map[string]MongoDbErrorResponse { return v.Errors }).(MongoDbErrorResponseMapOutput)
}

func (o MongoDbMigrationProgressResponseOutput) EventsPending() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbMigrationProgressResponse) float64 { return v.EventsPending }).(pulumi.Float64Output)
}

func (o MongoDbMigrationProgressResponseOutput) EventsReplayed() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbMigrationProgressResponse) float64 { return v.EventsReplayed }).(pulumi.Float64Output)
}

func (o MongoDbMigrationProgressResponseOutput) LastEventTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbMigrationProgressResponse) *string { return v.LastEventTime }).(pulumi.StringPtrOutput)
}

func (o MongoDbMigrationProgressResponseOutput) LastReplayTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbMigrationProgressResponse) *string { return v.LastReplayTime }).(pulumi.StringPtrOutput)
}

func (o MongoDbMigrationProgressResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbMigrationProgressResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MongoDbMigrationProgressResponseOutput) QualifiedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbMigrationProgressResponse) *string { return v.QualifiedName }).(pulumi.StringPtrOutput)
}

func (o MongoDbMigrationProgressResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbMigrationProgressResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

func (o MongoDbMigrationProgressResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbMigrationProgressResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o MongoDbMigrationProgressResponseOutput) TotalBytes() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbMigrationProgressResponse) float64 { return v.TotalBytes }).(pulumi.Float64Output)
}

func (o MongoDbMigrationProgressResponseOutput) TotalDocuments() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDbMigrationProgressResponse) float64 { return v.TotalDocuments }).(pulumi.Float64Output)
}

type MongoDbMigrationProgressResponseArrayOutput struct{ *pulumi.OutputState }

func (MongoDbMigrationProgressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoDbMigrationProgressResponse)(nil)).Elem()
}

func (o MongoDbMigrationProgressResponseArrayOutput) ToMongoDbMigrationProgressResponseArrayOutput() MongoDbMigrationProgressResponseArrayOutput {
	return o
}

func (o MongoDbMigrationProgressResponseArrayOutput) ToMongoDbMigrationProgressResponseArrayOutputWithContext(ctx context.Context) MongoDbMigrationProgressResponseArrayOutput {
	return o
}

func (o MongoDbMigrationProgressResponseArrayOutput) Index(i pulumi.IntInput) MongoDbMigrationProgressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoDbMigrationProgressResponse {
		return vs[0].([]MongoDbMigrationProgressResponse)[vs[1].(int)]
	}).(MongoDbMigrationProgressResponseOutput)
}

type MongoDbMigrationSettings struct {
	BoostRUs    *int                               `pulumi:"boostRUs"`
	Databases   map[string]MongoDbDatabaseSettings `pulumi:"databases"`
	Replication *string                            `pulumi:"replication"`
	Source      MongoDbConnectionInfo              `pulumi:"source"`
	Target      MongoDbConnectionInfo              `pulumi:"target"`
	Throttling  *MongoDbThrottlingSettings         `pulumi:"throttling"`
}





type MongoDbMigrationSettingsInput interface {
	pulumi.Input

	ToMongoDbMigrationSettingsOutput() MongoDbMigrationSettingsOutput
	ToMongoDbMigrationSettingsOutputWithContext(context.Context) MongoDbMigrationSettingsOutput
}

type MongoDbMigrationSettingsArgs struct {
	BoostRUs    pulumi.IntPtrInput                `pulumi:"boostRUs"`
	Databases   MongoDbDatabaseSettingsMapInput   `pulumi:"databases"`
	Replication pulumi.StringPtrInput             `pulumi:"replication"`
	Source      MongoDbConnectionInfoInput        `pulumi:"source"`
	Target      MongoDbConnectionInfoInput        `pulumi:"target"`
	Throttling  MongoDbThrottlingSettingsPtrInput `pulumi:"throttling"`
}

func (MongoDbMigrationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbMigrationSettings)(nil)).Elem()
}

func (i MongoDbMigrationSettingsArgs) ToMongoDbMigrationSettingsOutput() MongoDbMigrationSettingsOutput {
	return i.ToMongoDbMigrationSettingsOutputWithContext(context.Background())
}

func (i MongoDbMigrationSettingsArgs) ToMongoDbMigrationSettingsOutputWithContext(ctx context.Context) MongoDbMigrationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbMigrationSettingsOutput)
}

func (i MongoDbMigrationSettingsArgs) ToMongoDbMigrationSettingsPtrOutput() MongoDbMigrationSettingsPtrOutput {
	return i.ToMongoDbMigrationSettingsPtrOutputWithContext(context.Background())
}

func (i MongoDbMigrationSettingsArgs) ToMongoDbMigrationSettingsPtrOutputWithContext(ctx context.Context) MongoDbMigrationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbMigrationSettingsOutput).ToMongoDbMigrationSettingsPtrOutputWithContext(ctx)
}









type MongoDbMigrationSettingsPtrInput interface {
	pulumi.Input

	ToMongoDbMigrationSettingsPtrOutput() MongoDbMigrationSettingsPtrOutput
	ToMongoDbMigrationSettingsPtrOutputWithContext(context.Context) MongoDbMigrationSettingsPtrOutput
}

type mongoDbMigrationSettingsPtrType MongoDbMigrationSettingsArgs

func MongoDbMigrationSettingsPtr(v *MongoDbMigrationSettingsArgs) MongoDbMigrationSettingsPtrInput {
	return (*mongoDbMigrationSettingsPtrType)(v)
}

func (*mongoDbMigrationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDbMigrationSettings)(nil)).Elem()
}

func (i *mongoDbMigrationSettingsPtrType) ToMongoDbMigrationSettingsPtrOutput() MongoDbMigrationSettingsPtrOutput {
	return i.ToMongoDbMigrationSettingsPtrOutputWithContext(context.Background())
}

func (i *mongoDbMigrationSettingsPtrType) ToMongoDbMigrationSettingsPtrOutputWithContext(ctx context.Context) MongoDbMigrationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbMigrationSettingsPtrOutput)
}

type MongoDbMigrationSettingsOutput struct{ *pulumi.OutputState }

func (MongoDbMigrationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbMigrationSettings)(nil)).Elem()
}

func (o MongoDbMigrationSettingsOutput) ToMongoDbMigrationSettingsOutput() MongoDbMigrationSettingsOutput {
	return o
}

func (o MongoDbMigrationSettingsOutput) ToMongoDbMigrationSettingsOutputWithContext(ctx context.Context) MongoDbMigrationSettingsOutput {
	return o
}

func (o MongoDbMigrationSettingsOutput) ToMongoDbMigrationSettingsPtrOutput() MongoDbMigrationSettingsPtrOutput {
	return o.ToMongoDbMigrationSettingsPtrOutputWithContext(context.Background())
}

func (o MongoDbMigrationSettingsOutput) ToMongoDbMigrationSettingsPtrOutputWithContext(ctx context.Context) MongoDbMigrationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoDbMigrationSettings) *MongoDbMigrationSettings {
		return &v
	}).(MongoDbMigrationSettingsPtrOutput)
}

func (o MongoDbMigrationSettingsOutput) BoostRUs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDbMigrationSettings) *int { return v.BoostRUs }).(pulumi.IntPtrOutput)
}

func (o MongoDbMigrationSettingsOutput) Databases() MongoDbDatabaseSettingsMapOutput {
	return o.ApplyT(func(v MongoDbMigrationSettings) map[string]MongoDbDatabaseSettings { return v.Databases }).(MongoDbDatabaseSettingsMapOutput)
}

func (o MongoDbMigrationSettingsOutput) Replication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbMigrationSettings) *string { return v.Replication }).(pulumi.StringPtrOutput)
}

func (o MongoDbMigrationSettingsOutput) Source() MongoDbConnectionInfoOutput {
	return o.ApplyT(func(v MongoDbMigrationSettings) MongoDbConnectionInfo { return v.Source }).(MongoDbConnectionInfoOutput)
}

func (o MongoDbMigrationSettingsOutput) Target() MongoDbConnectionInfoOutput {
	return o.ApplyT(func(v MongoDbMigrationSettings) MongoDbConnectionInfo { return v.Target }).(MongoDbConnectionInfoOutput)
}

func (o MongoDbMigrationSettingsOutput) Throttling() MongoDbThrottlingSettingsPtrOutput {
	return o.ApplyT(func(v MongoDbMigrationSettings) *MongoDbThrottlingSettings { return v.Throttling }).(MongoDbThrottlingSettingsPtrOutput)
}

type MongoDbMigrationSettingsPtrOutput struct{ *pulumi.OutputState }

func (MongoDbMigrationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDbMigrationSettings)(nil)).Elem()
}

func (o MongoDbMigrationSettingsPtrOutput) ToMongoDbMigrationSettingsPtrOutput() MongoDbMigrationSettingsPtrOutput {
	return o
}

func (o MongoDbMigrationSettingsPtrOutput) ToMongoDbMigrationSettingsPtrOutputWithContext(ctx context.Context) MongoDbMigrationSettingsPtrOutput {
	return o
}

func (o MongoDbMigrationSettingsPtrOutput) Elem() MongoDbMigrationSettingsOutput {
	return o.ApplyT(func(v *MongoDbMigrationSettings) MongoDbMigrationSettings {
		if v != nil {
			return *v
		}
		var ret MongoDbMigrationSettings
		return ret
	}).(MongoDbMigrationSettingsOutput)
}

func (o MongoDbMigrationSettingsPtrOutput) BoostRUs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoDbMigrationSettings) *int {
		if v == nil {
			return nil
		}
		return v.BoostRUs
	}).(pulumi.IntPtrOutput)
}

func (o MongoDbMigrationSettingsPtrOutput) Databases() MongoDbDatabaseSettingsMapOutput {
	return o.ApplyT(func(v *MongoDbMigrationSettings) map[string]MongoDbDatabaseSettings {
		if v == nil {
			return nil
		}
		return v.Databases
	}).(MongoDbDatabaseSettingsMapOutput)
}

func (o MongoDbMigrationSettingsPtrOutput) Replication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDbMigrationSettings) *string {
		if v == nil {
			return nil
		}
		return v.Replication
	}).(pulumi.StringPtrOutput)
}

func (o MongoDbMigrationSettingsPtrOutput) Source() MongoDbConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MongoDbMigrationSettings) *MongoDbConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(MongoDbConnectionInfoPtrOutput)
}

func (o MongoDbMigrationSettingsPtrOutput) Target() MongoDbConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MongoDbMigrationSettings) *MongoDbConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(MongoDbConnectionInfoPtrOutput)
}

func (o MongoDbMigrationSettingsPtrOutput) Throttling() MongoDbThrottlingSettingsPtrOutput {
	return o.ApplyT(func(v *MongoDbMigrationSettings) *MongoDbThrottlingSettings {
		if v == nil {
			return nil
		}
		return v.Throttling
	}).(MongoDbThrottlingSettingsPtrOutput)
}

type MongoDbMigrationSettingsResponse struct {
	BoostRUs    *int                                       `pulumi:"boostRUs"`
	Databases   map[string]MongoDbDatabaseSettingsResponse `pulumi:"databases"`
	Replication *string                                    `pulumi:"replication"`
	Source      MongoDbConnectionInfoResponse              `pulumi:"source"`
	Target      MongoDbConnectionInfoResponse              `pulumi:"target"`
	Throttling  *MongoDbThrottlingSettingsResponse         `pulumi:"throttling"`
}





type MongoDbMigrationSettingsResponseInput interface {
	pulumi.Input

	ToMongoDbMigrationSettingsResponseOutput() MongoDbMigrationSettingsResponseOutput
	ToMongoDbMigrationSettingsResponseOutputWithContext(context.Context) MongoDbMigrationSettingsResponseOutput
}

type MongoDbMigrationSettingsResponseArgs struct {
	BoostRUs    pulumi.IntPtrInput                        `pulumi:"boostRUs"`
	Databases   MongoDbDatabaseSettingsResponseMapInput   `pulumi:"databases"`
	Replication pulumi.StringPtrInput                     `pulumi:"replication"`
	Source      MongoDbConnectionInfoResponseInput        `pulumi:"source"`
	Target      MongoDbConnectionInfoResponseInput        `pulumi:"target"`
	Throttling  MongoDbThrottlingSettingsResponsePtrInput `pulumi:"throttling"`
}

func (MongoDbMigrationSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbMigrationSettingsResponse)(nil)).Elem()
}

func (i MongoDbMigrationSettingsResponseArgs) ToMongoDbMigrationSettingsResponseOutput() MongoDbMigrationSettingsResponseOutput {
	return i.ToMongoDbMigrationSettingsResponseOutputWithContext(context.Background())
}

func (i MongoDbMigrationSettingsResponseArgs) ToMongoDbMigrationSettingsResponseOutputWithContext(ctx context.Context) MongoDbMigrationSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbMigrationSettingsResponseOutput)
}

func (i MongoDbMigrationSettingsResponseArgs) ToMongoDbMigrationSettingsResponsePtrOutput() MongoDbMigrationSettingsResponsePtrOutput {
	return i.ToMongoDbMigrationSettingsResponsePtrOutputWithContext(context.Background())
}

func (i MongoDbMigrationSettingsResponseArgs) ToMongoDbMigrationSettingsResponsePtrOutputWithContext(ctx context.Context) MongoDbMigrationSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbMigrationSettingsResponseOutput).ToMongoDbMigrationSettingsResponsePtrOutputWithContext(ctx)
}









type MongoDbMigrationSettingsResponsePtrInput interface {
	pulumi.Input

	ToMongoDbMigrationSettingsResponsePtrOutput() MongoDbMigrationSettingsResponsePtrOutput
	ToMongoDbMigrationSettingsResponsePtrOutputWithContext(context.Context) MongoDbMigrationSettingsResponsePtrOutput
}

type mongoDbMigrationSettingsResponsePtrType MongoDbMigrationSettingsResponseArgs

func MongoDbMigrationSettingsResponsePtr(v *MongoDbMigrationSettingsResponseArgs) MongoDbMigrationSettingsResponsePtrInput {
	return (*mongoDbMigrationSettingsResponsePtrType)(v)
}

func (*mongoDbMigrationSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDbMigrationSettingsResponse)(nil)).Elem()
}

func (i *mongoDbMigrationSettingsResponsePtrType) ToMongoDbMigrationSettingsResponsePtrOutput() MongoDbMigrationSettingsResponsePtrOutput {
	return i.ToMongoDbMigrationSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *mongoDbMigrationSettingsResponsePtrType) ToMongoDbMigrationSettingsResponsePtrOutputWithContext(ctx context.Context) MongoDbMigrationSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbMigrationSettingsResponsePtrOutput)
}

type MongoDbMigrationSettingsResponseOutput struct{ *pulumi.OutputState }

func (MongoDbMigrationSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbMigrationSettingsResponse)(nil)).Elem()
}

func (o MongoDbMigrationSettingsResponseOutput) ToMongoDbMigrationSettingsResponseOutput() MongoDbMigrationSettingsResponseOutput {
	return o
}

func (o MongoDbMigrationSettingsResponseOutput) ToMongoDbMigrationSettingsResponseOutputWithContext(ctx context.Context) MongoDbMigrationSettingsResponseOutput {
	return o
}

func (o MongoDbMigrationSettingsResponseOutput) ToMongoDbMigrationSettingsResponsePtrOutput() MongoDbMigrationSettingsResponsePtrOutput {
	return o.ToMongoDbMigrationSettingsResponsePtrOutputWithContext(context.Background())
}

func (o MongoDbMigrationSettingsResponseOutput) ToMongoDbMigrationSettingsResponsePtrOutputWithContext(ctx context.Context) MongoDbMigrationSettingsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoDbMigrationSettingsResponse) *MongoDbMigrationSettingsResponse {
		return &v
	}).(MongoDbMigrationSettingsResponsePtrOutput)
}

func (o MongoDbMigrationSettingsResponseOutput) BoostRUs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDbMigrationSettingsResponse) *int { return v.BoostRUs }).(pulumi.IntPtrOutput)
}

func (o MongoDbMigrationSettingsResponseOutput) Databases() MongoDbDatabaseSettingsResponseMapOutput {
	return o.ApplyT(func(v MongoDbMigrationSettingsResponse) map[string]MongoDbDatabaseSettingsResponse {
		return v.Databases
	}).(MongoDbDatabaseSettingsResponseMapOutput)
}

func (o MongoDbMigrationSettingsResponseOutput) Replication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoDbMigrationSettingsResponse) *string { return v.Replication }).(pulumi.StringPtrOutput)
}

func (o MongoDbMigrationSettingsResponseOutput) Source() MongoDbConnectionInfoResponseOutput {
	return o.ApplyT(func(v MongoDbMigrationSettingsResponse) MongoDbConnectionInfoResponse { return v.Source }).(MongoDbConnectionInfoResponseOutput)
}

func (o MongoDbMigrationSettingsResponseOutput) Target() MongoDbConnectionInfoResponseOutput {
	return o.ApplyT(func(v MongoDbMigrationSettingsResponse) MongoDbConnectionInfoResponse { return v.Target }).(MongoDbConnectionInfoResponseOutput)
}

func (o MongoDbMigrationSettingsResponseOutput) Throttling() MongoDbThrottlingSettingsResponsePtrOutput {
	return o.ApplyT(func(v MongoDbMigrationSettingsResponse) *MongoDbThrottlingSettingsResponse { return v.Throttling }).(MongoDbThrottlingSettingsResponsePtrOutput)
}

type MongoDbMigrationSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (MongoDbMigrationSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDbMigrationSettingsResponse)(nil)).Elem()
}

func (o MongoDbMigrationSettingsResponsePtrOutput) ToMongoDbMigrationSettingsResponsePtrOutput() MongoDbMigrationSettingsResponsePtrOutput {
	return o
}

func (o MongoDbMigrationSettingsResponsePtrOutput) ToMongoDbMigrationSettingsResponsePtrOutputWithContext(ctx context.Context) MongoDbMigrationSettingsResponsePtrOutput {
	return o
}

func (o MongoDbMigrationSettingsResponsePtrOutput) Elem() MongoDbMigrationSettingsResponseOutput {
	return o.ApplyT(func(v *MongoDbMigrationSettingsResponse) MongoDbMigrationSettingsResponse {
		if v != nil {
			return *v
		}
		var ret MongoDbMigrationSettingsResponse
		return ret
	}).(MongoDbMigrationSettingsResponseOutput)
}

func (o MongoDbMigrationSettingsResponsePtrOutput) BoostRUs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoDbMigrationSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.BoostRUs
	}).(pulumi.IntPtrOutput)
}

func (o MongoDbMigrationSettingsResponsePtrOutput) Databases() MongoDbDatabaseSettingsResponseMapOutput {
	return o.ApplyT(func(v *MongoDbMigrationSettingsResponse) map[string]MongoDbDatabaseSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Databases
	}).(MongoDbDatabaseSettingsResponseMapOutput)
}

func (o MongoDbMigrationSettingsResponsePtrOutput) Replication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDbMigrationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Replication
	}).(pulumi.StringPtrOutput)
}

func (o MongoDbMigrationSettingsResponsePtrOutput) Source() MongoDbConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MongoDbMigrationSettingsResponse) *MongoDbConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(MongoDbConnectionInfoResponsePtrOutput)
}

func (o MongoDbMigrationSettingsResponsePtrOutput) Target() MongoDbConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MongoDbMigrationSettingsResponse) *MongoDbConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(MongoDbConnectionInfoResponsePtrOutput)
}

func (o MongoDbMigrationSettingsResponsePtrOutput) Throttling() MongoDbThrottlingSettingsResponsePtrOutput {
	return o.ApplyT(func(v *MongoDbMigrationSettingsResponse) *MongoDbThrottlingSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Throttling
	}).(MongoDbThrottlingSettingsResponsePtrOutput)
}

type MongoDbShardKeyField struct {
	Name  string `pulumi:"name"`
	Order string `pulumi:"order"`
}





type MongoDbShardKeyFieldInput interface {
	pulumi.Input

	ToMongoDbShardKeyFieldOutput() MongoDbShardKeyFieldOutput
	ToMongoDbShardKeyFieldOutputWithContext(context.Context) MongoDbShardKeyFieldOutput
}

type MongoDbShardKeyFieldArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Order pulumi.StringInput `pulumi:"order"`
}

func (MongoDbShardKeyFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbShardKeyField)(nil)).Elem()
}

func (i MongoDbShardKeyFieldArgs) ToMongoDbShardKeyFieldOutput() MongoDbShardKeyFieldOutput {
	return i.ToMongoDbShardKeyFieldOutputWithContext(context.Background())
}

func (i MongoDbShardKeyFieldArgs) ToMongoDbShardKeyFieldOutputWithContext(ctx context.Context) MongoDbShardKeyFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbShardKeyFieldOutput)
}





type MongoDbShardKeyFieldArrayInput interface {
	pulumi.Input

	ToMongoDbShardKeyFieldArrayOutput() MongoDbShardKeyFieldArrayOutput
	ToMongoDbShardKeyFieldArrayOutputWithContext(context.Context) MongoDbShardKeyFieldArrayOutput
}

type MongoDbShardKeyFieldArray []MongoDbShardKeyFieldInput

func (MongoDbShardKeyFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoDbShardKeyField)(nil)).Elem()
}

func (i MongoDbShardKeyFieldArray) ToMongoDbShardKeyFieldArrayOutput() MongoDbShardKeyFieldArrayOutput {
	return i.ToMongoDbShardKeyFieldArrayOutputWithContext(context.Background())
}

func (i MongoDbShardKeyFieldArray) ToMongoDbShardKeyFieldArrayOutputWithContext(ctx context.Context) MongoDbShardKeyFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbShardKeyFieldArrayOutput)
}

type MongoDbShardKeyFieldOutput struct{ *pulumi.OutputState }

func (MongoDbShardKeyFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbShardKeyField)(nil)).Elem()
}

func (o MongoDbShardKeyFieldOutput) ToMongoDbShardKeyFieldOutput() MongoDbShardKeyFieldOutput {
	return o
}

func (o MongoDbShardKeyFieldOutput) ToMongoDbShardKeyFieldOutputWithContext(ctx context.Context) MongoDbShardKeyFieldOutput {
	return o
}

func (o MongoDbShardKeyFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbShardKeyField) string { return v.Name }).(pulumi.StringOutput)
}

func (o MongoDbShardKeyFieldOutput) Order() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbShardKeyField) string { return v.Order }).(pulumi.StringOutput)
}

type MongoDbShardKeyFieldArrayOutput struct{ *pulumi.OutputState }

func (MongoDbShardKeyFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoDbShardKeyField)(nil)).Elem()
}

func (o MongoDbShardKeyFieldArrayOutput) ToMongoDbShardKeyFieldArrayOutput() MongoDbShardKeyFieldArrayOutput {
	return o
}

func (o MongoDbShardKeyFieldArrayOutput) ToMongoDbShardKeyFieldArrayOutputWithContext(ctx context.Context) MongoDbShardKeyFieldArrayOutput {
	return o
}

func (o MongoDbShardKeyFieldArrayOutput) Index(i pulumi.IntInput) MongoDbShardKeyFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoDbShardKeyField {
		return vs[0].([]MongoDbShardKeyField)[vs[1].(int)]
	}).(MongoDbShardKeyFieldOutput)
}

type MongoDbShardKeyFieldResponse struct {
	Name  string `pulumi:"name"`
	Order string `pulumi:"order"`
}





type MongoDbShardKeyFieldResponseInput interface {
	pulumi.Input

	ToMongoDbShardKeyFieldResponseOutput() MongoDbShardKeyFieldResponseOutput
	ToMongoDbShardKeyFieldResponseOutputWithContext(context.Context) MongoDbShardKeyFieldResponseOutput
}

type MongoDbShardKeyFieldResponseArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Order pulumi.StringInput `pulumi:"order"`
}

func (MongoDbShardKeyFieldResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbShardKeyFieldResponse)(nil)).Elem()
}

func (i MongoDbShardKeyFieldResponseArgs) ToMongoDbShardKeyFieldResponseOutput() MongoDbShardKeyFieldResponseOutput {
	return i.ToMongoDbShardKeyFieldResponseOutputWithContext(context.Background())
}

func (i MongoDbShardKeyFieldResponseArgs) ToMongoDbShardKeyFieldResponseOutputWithContext(ctx context.Context) MongoDbShardKeyFieldResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbShardKeyFieldResponseOutput)
}





type MongoDbShardKeyFieldResponseArrayInput interface {
	pulumi.Input

	ToMongoDbShardKeyFieldResponseArrayOutput() MongoDbShardKeyFieldResponseArrayOutput
	ToMongoDbShardKeyFieldResponseArrayOutputWithContext(context.Context) MongoDbShardKeyFieldResponseArrayOutput
}

type MongoDbShardKeyFieldResponseArray []MongoDbShardKeyFieldResponseInput

func (MongoDbShardKeyFieldResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoDbShardKeyFieldResponse)(nil)).Elem()
}

func (i MongoDbShardKeyFieldResponseArray) ToMongoDbShardKeyFieldResponseArrayOutput() MongoDbShardKeyFieldResponseArrayOutput {
	return i.ToMongoDbShardKeyFieldResponseArrayOutputWithContext(context.Background())
}

func (i MongoDbShardKeyFieldResponseArray) ToMongoDbShardKeyFieldResponseArrayOutputWithContext(ctx context.Context) MongoDbShardKeyFieldResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbShardKeyFieldResponseArrayOutput)
}

type MongoDbShardKeyFieldResponseOutput struct{ *pulumi.OutputState }

func (MongoDbShardKeyFieldResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbShardKeyFieldResponse)(nil)).Elem()
}

func (o MongoDbShardKeyFieldResponseOutput) ToMongoDbShardKeyFieldResponseOutput() MongoDbShardKeyFieldResponseOutput {
	return o
}

func (o MongoDbShardKeyFieldResponseOutput) ToMongoDbShardKeyFieldResponseOutputWithContext(ctx context.Context) MongoDbShardKeyFieldResponseOutput {
	return o
}

func (o MongoDbShardKeyFieldResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbShardKeyFieldResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o MongoDbShardKeyFieldResponseOutput) Order() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDbShardKeyFieldResponse) string { return v.Order }).(pulumi.StringOutput)
}

type MongoDbShardKeyFieldResponseArrayOutput struct{ *pulumi.OutputState }

func (MongoDbShardKeyFieldResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoDbShardKeyFieldResponse)(nil)).Elem()
}

func (o MongoDbShardKeyFieldResponseArrayOutput) ToMongoDbShardKeyFieldResponseArrayOutput() MongoDbShardKeyFieldResponseArrayOutput {
	return o
}

func (o MongoDbShardKeyFieldResponseArrayOutput) ToMongoDbShardKeyFieldResponseArrayOutputWithContext(ctx context.Context) MongoDbShardKeyFieldResponseArrayOutput {
	return o
}

func (o MongoDbShardKeyFieldResponseArrayOutput) Index(i pulumi.IntInput) MongoDbShardKeyFieldResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoDbShardKeyFieldResponse {
		return vs[0].([]MongoDbShardKeyFieldResponse)[vs[1].(int)]
	}).(MongoDbShardKeyFieldResponseOutput)
}

type MongoDbShardKeyInfoResponse struct {
	Fields   []MongoDbShardKeyFieldResponse `pulumi:"fields"`
	IsUnique bool                           `pulumi:"isUnique"`
}





type MongoDbShardKeyInfoResponseInput interface {
	pulumi.Input

	ToMongoDbShardKeyInfoResponseOutput() MongoDbShardKeyInfoResponseOutput
	ToMongoDbShardKeyInfoResponseOutputWithContext(context.Context) MongoDbShardKeyInfoResponseOutput
}

type MongoDbShardKeyInfoResponseArgs struct {
	Fields   MongoDbShardKeyFieldResponseArrayInput `pulumi:"fields"`
	IsUnique pulumi.BoolInput                       `pulumi:"isUnique"`
}

func (MongoDbShardKeyInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbShardKeyInfoResponse)(nil)).Elem()
}

func (i MongoDbShardKeyInfoResponseArgs) ToMongoDbShardKeyInfoResponseOutput() MongoDbShardKeyInfoResponseOutput {
	return i.ToMongoDbShardKeyInfoResponseOutputWithContext(context.Background())
}

func (i MongoDbShardKeyInfoResponseArgs) ToMongoDbShardKeyInfoResponseOutputWithContext(ctx context.Context) MongoDbShardKeyInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbShardKeyInfoResponseOutput)
}

func (i MongoDbShardKeyInfoResponseArgs) ToMongoDbShardKeyInfoResponsePtrOutput() MongoDbShardKeyInfoResponsePtrOutput {
	return i.ToMongoDbShardKeyInfoResponsePtrOutputWithContext(context.Background())
}

func (i MongoDbShardKeyInfoResponseArgs) ToMongoDbShardKeyInfoResponsePtrOutputWithContext(ctx context.Context) MongoDbShardKeyInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbShardKeyInfoResponseOutput).ToMongoDbShardKeyInfoResponsePtrOutputWithContext(ctx)
}









type MongoDbShardKeyInfoResponsePtrInput interface {
	pulumi.Input

	ToMongoDbShardKeyInfoResponsePtrOutput() MongoDbShardKeyInfoResponsePtrOutput
	ToMongoDbShardKeyInfoResponsePtrOutputWithContext(context.Context) MongoDbShardKeyInfoResponsePtrOutput
}

type mongoDbShardKeyInfoResponsePtrType MongoDbShardKeyInfoResponseArgs

func MongoDbShardKeyInfoResponsePtr(v *MongoDbShardKeyInfoResponseArgs) MongoDbShardKeyInfoResponsePtrInput {
	return (*mongoDbShardKeyInfoResponsePtrType)(v)
}

func (*mongoDbShardKeyInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDbShardKeyInfoResponse)(nil)).Elem()
}

func (i *mongoDbShardKeyInfoResponsePtrType) ToMongoDbShardKeyInfoResponsePtrOutput() MongoDbShardKeyInfoResponsePtrOutput {
	return i.ToMongoDbShardKeyInfoResponsePtrOutputWithContext(context.Background())
}

func (i *mongoDbShardKeyInfoResponsePtrType) ToMongoDbShardKeyInfoResponsePtrOutputWithContext(ctx context.Context) MongoDbShardKeyInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbShardKeyInfoResponsePtrOutput)
}

type MongoDbShardKeyInfoResponseOutput struct{ *pulumi.OutputState }

func (MongoDbShardKeyInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbShardKeyInfoResponse)(nil)).Elem()
}

func (o MongoDbShardKeyInfoResponseOutput) ToMongoDbShardKeyInfoResponseOutput() MongoDbShardKeyInfoResponseOutput {
	return o
}

func (o MongoDbShardKeyInfoResponseOutput) ToMongoDbShardKeyInfoResponseOutputWithContext(ctx context.Context) MongoDbShardKeyInfoResponseOutput {
	return o
}

func (o MongoDbShardKeyInfoResponseOutput) ToMongoDbShardKeyInfoResponsePtrOutput() MongoDbShardKeyInfoResponsePtrOutput {
	return o.ToMongoDbShardKeyInfoResponsePtrOutputWithContext(context.Background())
}

func (o MongoDbShardKeyInfoResponseOutput) ToMongoDbShardKeyInfoResponsePtrOutputWithContext(ctx context.Context) MongoDbShardKeyInfoResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoDbShardKeyInfoResponse) *MongoDbShardKeyInfoResponse {
		return &v
	}).(MongoDbShardKeyInfoResponsePtrOutput)
}

func (o MongoDbShardKeyInfoResponseOutput) Fields() MongoDbShardKeyFieldResponseArrayOutput {
	return o.ApplyT(func(v MongoDbShardKeyInfoResponse) []MongoDbShardKeyFieldResponse { return v.Fields }).(MongoDbShardKeyFieldResponseArrayOutput)
}

func (o MongoDbShardKeyInfoResponseOutput) IsUnique() pulumi.BoolOutput {
	return o.ApplyT(func(v MongoDbShardKeyInfoResponse) bool { return v.IsUnique }).(pulumi.BoolOutput)
}

type MongoDbShardKeyInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (MongoDbShardKeyInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDbShardKeyInfoResponse)(nil)).Elem()
}

func (o MongoDbShardKeyInfoResponsePtrOutput) ToMongoDbShardKeyInfoResponsePtrOutput() MongoDbShardKeyInfoResponsePtrOutput {
	return o
}

func (o MongoDbShardKeyInfoResponsePtrOutput) ToMongoDbShardKeyInfoResponsePtrOutputWithContext(ctx context.Context) MongoDbShardKeyInfoResponsePtrOutput {
	return o
}

func (o MongoDbShardKeyInfoResponsePtrOutput) Elem() MongoDbShardKeyInfoResponseOutput {
	return o.ApplyT(func(v *MongoDbShardKeyInfoResponse) MongoDbShardKeyInfoResponse {
		if v != nil {
			return *v
		}
		var ret MongoDbShardKeyInfoResponse
		return ret
	}).(MongoDbShardKeyInfoResponseOutput)
}

func (o MongoDbShardKeyInfoResponsePtrOutput) Fields() MongoDbShardKeyFieldResponseArrayOutput {
	return o.ApplyT(func(v *MongoDbShardKeyInfoResponse) []MongoDbShardKeyFieldResponse {
		if v == nil {
			return nil
		}
		return v.Fields
	}).(MongoDbShardKeyFieldResponseArrayOutput)
}

func (o MongoDbShardKeyInfoResponsePtrOutput) IsUnique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MongoDbShardKeyInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsUnique
	}).(pulumi.BoolPtrOutput)
}

type MongoDbShardKeySetting struct {
	Fields   []MongoDbShardKeyField `pulumi:"fields"`
	IsUnique bool                   `pulumi:"isUnique"`
}





type MongoDbShardKeySettingInput interface {
	pulumi.Input

	ToMongoDbShardKeySettingOutput() MongoDbShardKeySettingOutput
	ToMongoDbShardKeySettingOutputWithContext(context.Context) MongoDbShardKeySettingOutput
}

type MongoDbShardKeySettingArgs struct {
	Fields   MongoDbShardKeyFieldArrayInput `pulumi:"fields"`
	IsUnique pulumi.BoolInput               `pulumi:"isUnique"`
}

func (MongoDbShardKeySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbShardKeySetting)(nil)).Elem()
}

func (i MongoDbShardKeySettingArgs) ToMongoDbShardKeySettingOutput() MongoDbShardKeySettingOutput {
	return i.ToMongoDbShardKeySettingOutputWithContext(context.Background())
}

func (i MongoDbShardKeySettingArgs) ToMongoDbShardKeySettingOutputWithContext(ctx context.Context) MongoDbShardKeySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbShardKeySettingOutput)
}

func (i MongoDbShardKeySettingArgs) ToMongoDbShardKeySettingPtrOutput() MongoDbShardKeySettingPtrOutput {
	return i.ToMongoDbShardKeySettingPtrOutputWithContext(context.Background())
}

func (i MongoDbShardKeySettingArgs) ToMongoDbShardKeySettingPtrOutputWithContext(ctx context.Context) MongoDbShardKeySettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbShardKeySettingOutput).ToMongoDbShardKeySettingPtrOutputWithContext(ctx)
}









type MongoDbShardKeySettingPtrInput interface {
	pulumi.Input

	ToMongoDbShardKeySettingPtrOutput() MongoDbShardKeySettingPtrOutput
	ToMongoDbShardKeySettingPtrOutputWithContext(context.Context) MongoDbShardKeySettingPtrOutput
}

type mongoDbShardKeySettingPtrType MongoDbShardKeySettingArgs

func MongoDbShardKeySettingPtr(v *MongoDbShardKeySettingArgs) MongoDbShardKeySettingPtrInput {
	return (*mongoDbShardKeySettingPtrType)(v)
}

func (*mongoDbShardKeySettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDbShardKeySetting)(nil)).Elem()
}

func (i *mongoDbShardKeySettingPtrType) ToMongoDbShardKeySettingPtrOutput() MongoDbShardKeySettingPtrOutput {
	return i.ToMongoDbShardKeySettingPtrOutputWithContext(context.Background())
}

func (i *mongoDbShardKeySettingPtrType) ToMongoDbShardKeySettingPtrOutputWithContext(ctx context.Context) MongoDbShardKeySettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbShardKeySettingPtrOutput)
}

type MongoDbShardKeySettingOutput struct{ *pulumi.OutputState }

func (MongoDbShardKeySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbShardKeySetting)(nil)).Elem()
}

func (o MongoDbShardKeySettingOutput) ToMongoDbShardKeySettingOutput() MongoDbShardKeySettingOutput {
	return o
}

func (o MongoDbShardKeySettingOutput) ToMongoDbShardKeySettingOutputWithContext(ctx context.Context) MongoDbShardKeySettingOutput {
	return o
}

func (o MongoDbShardKeySettingOutput) ToMongoDbShardKeySettingPtrOutput() MongoDbShardKeySettingPtrOutput {
	return o.ToMongoDbShardKeySettingPtrOutputWithContext(context.Background())
}

func (o MongoDbShardKeySettingOutput) ToMongoDbShardKeySettingPtrOutputWithContext(ctx context.Context) MongoDbShardKeySettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoDbShardKeySetting) *MongoDbShardKeySetting {
		return &v
	}).(MongoDbShardKeySettingPtrOutput)
}

func (o MongoDbShardKeySettingOutput) Fields() MongoDbShardKeyFieldArrayOutput {
	return o.ApplyT(func(v MongoDbShardKeySetting) []MongoDbShardKeyField { return v.Fields }).(MongoDbShardKeyFieldArrayOutput)
}

func (o MongoDbShardKeySettingOutput) IsUnique() pulumi.BoolOutput {
	return o.ApplyT(func(v MongoDbShardKeySetting) bool { return v.IsUnique }).(pulumi.BoolOutput)
}

type MongoDbShardKeySettingPtrOutput struct{ *pulumi.OutputState }

func (MongoDbShardKeySettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDbShardKeySetting)(nil)).Elem()
}

func (o MongoDbShardKeySettingPtrOutput) ToMongoDbShardKeySettingPtrOutput() MongoDbShardKeySettingPtrOutput {
	return o
}

func (o MongoDbShardKeySettingPtrOutput) ToMongoDbShardKeySettingPtrOutputWithContext(ctx context.Context) MongoDbShardKeySettingPtrOutput {
	return o
}

func (o MongoDbShardKeySettingPtrOutput) Elem() MongoDbShardKeySettingOutput {
	return o.ApplyT(func(v *MongoDbShardKeySetting) MongoDbShardKeySetting {
		if v != nil {
			return *v
		}
		var ret MongoDbShardKeySetting
		return ret
	}).(MongoDbShardKeySettingOutput)
}

func (o MongoDbShardKeySettingPtrOutput) Fields() MongoDbShardKeyFieldArrayOutput {
	return o.ApplyT(func(v *MongoDbShardKeySetting) []MongoDbShardKeyField {
		if v == nil {
			return nil
		}
		return v.Fields
	}).(MongoDbShardKeyFieldArrayOutput)
}

func (o MongoDbShardKeySettingPtrOutput) IsUnique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MongoDbShardKeySetting) *bool {
		if v == nil {
			return nil
		}
		return &v.IsUnique
	}).(pulumi.BoolPtrOutput)
}

type MongoDbShardKeySettingResponse struct {
	Fields   []MongoDbShardKeyFieldResponse `pulumi:"fields"`
	IsUnique bool                           `pulumi:"isUnique"`
}





type MongoDbShardKeySettingResponseInput interface {
	pulumi.Input

	ToMongoDbShardKeySettingResponseOutput() MongoDbShardKeySettingResponseOutput
	ToMongoDbShardKeySettingResponseOutputWithContext(context.Context) MongoDbShardKeySettingResponseOutput
}

type MongoDbShardKeySettingResponseArgs struct {
	Fields   MongoDbShardKeyFieldResponseArrayInput `pulumi:"fields"`
	IsUnique pulumi.BoolInput                       `pulumi:"isUnique"`
}

func (MongoDbShardKeySettingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbShardKeySettingResponse)(nil)).Elem()
}

func (i MongoDbShardKeySettingResponseArgs) ToMongoDbShardKeySettingResponseOutput() MongoDbShardKeySettingResponseOutput {
	return i.ToMongoDbShardKeySettingResponseOutputWithContext(context.Background())
}

func (i MongoDbShardKeySettingResponseArgs) ToMongoDbShardKeySettingResponseOutputWithContext(ctx context.Context) MongoDbShardKeySettingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbShardKeySettingResponseOutput)
}

func (i MongoDbShardKeySettingResponseArgs) ToMongoDbShardKeySettingResponsePtrOutput() MongoDbShardKeySettingResponsePtrOutput {
	return i.ToMongoDbShardKeySettingResponsePtrOutputWithContext(context.Background())
}

func (i MongoDbShardKeySettingResponseArgs) ToMongoDbShardKeySettingResponsePtrOutputWithContext(ctx context.Context) MongoDbShardKeySettingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbShardKeySettingResponseOutput).ToMongoDbShardKeySettingResponsePtrOutputWithContext(ctx)
}









type MongoDbShardKeySettingResponsePtrInput interface {
	pulumi.Input

	ToMongoDbShardKeySettingResponsePtrOutput() MongoDbShardKeySettingResponsePtrOutput
	ToMongoDbShardKeySettingResponsePtrOutputWithContext(context.Context) MongoDbShardKeySettingResponsePtrOutput
}

type mongoDbShardKeySettingResponsePtrType MongoDbShardKeySettingResponseArgs

func MongoDbShardKeySettingResponsePtr(v *MongoDbShardKeySettingResponseArgs) MongoDbShardKeySettingResponsePtrInput {
	return (*mongoDbShardKeySettingResponsePtrType)(v)
}

func (*mongoDbShardKeySettingResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDbShardKeySettingResponse)(nil)).Elem()
}

func (i *mongoDbShardKeySettingResponsePtrType) ToMongoDbShardKeySettingResponsePtrOutput() MongoDbShardKeySettingResponsePtrOutput {
	return i.ToMongoDbShardKeySettingResponsePtrOutputWithContext(context.Background())
}

func (i *mongoDbShardKeySettingResponsePtrType) ToMongoDbShardKeySettingResponsePtrOutputWithContext(ctx context.Context) MongoDbShardKeySettingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbShardKeySettingResponsePtrOutput)
}

type MongoDbShardKeySettingResponseOutput struct{ *pulumi.OutputState }

func (MongoDbShardKeySettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbShardKeySettingResponse)(nil)).Elem()
}

func (o MongoDbShardKeySettingResponseOutput) ToMongoDbShardKeySettingResponseOutput() MongoDbShardKeySettingResponseOutput {
	return o
}

func (o MongoDbShardKeySettingResponseOutput) ToMongoDbShardKeySettingResponseOutputWithContext(ctx context.Context) MongoDbShardKeySettingResponseOutput {
	return o
}

func (o MongoDbShardKeySettingResponseOutput) ToMongoDbShardKeySettingResponsePtrOutput() MongoDbShardKeySettingResponsePtrOutput {
	return o.ToMongoDbShardKeySettingResponsePtrOutputWithContext(context.Background())
}

func (o MongoDbShardKeySettingResponseOutput) ToMongoDbShardKeySettingResponsePtrOutputWithContext(ctx context.Context) MongoDbShardKeySettingResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoDbShardKeySettingResponse) *MongoDbShardKeySettingResponse {
		return &v
	}).(MongoDbShardKeySettingResponsePtrOutput)
}

func (o MongoDbShardKeySettingResponseOutput) Fields() MongoDbShardKeyFieldResponseArrayOutput {
	return o.ApplyT(func(v MongoDbShardKeySettingResponse) []MongoDbShardKeyFieldResponse { return v.Fields }).(MongoDbShardKeyFieldResponseArrayOutput)
}

func (o MongoDbShardKeySettingResponseOutput) IsUnique() pulumi.BoolOutput {
	return o.ApplyT(func(v MongoDbShardKeySettingResponse) bool { return v.IsUnique }).(pulumi.BoolOutput)
}

type MongoDbShardKeySettingResponsePtrOutput struct{ *pulumi.OutputState }

func (MongoDbShardKeySettingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDbShardKeySettingResponse)(nil)).Elem()
}

func (o MongoDbShardKeySettingResponsePtrOutput) ToMongoDbShardKeySettingResponsePtrOutput() MongoDbShardKeySettingResponsePtrOutput {
	return o
}

func (o MongoDbShardKeySettingResponsePtrOutput) ToMongoDbShardKeySettingResponsePtrOutputWithContext(ctx context.Context) MongoDbShardKeySettingResponsePtrOutput {
	return o
}

func (o MongoDbShardKeySettingResponsePtrOutput) Elem() MongoDbShardKeySettingResponseOutput {
	return o.ApplyT(func(v *MongoDbShardKeySettingResponse) MongoDbShardKeySettingResponse {
		if v != nil {
			return *v
		}
		var ret MongoDbShardKeySettingResponse
		return ret
	}).(MongoDbShardKeySettingResponseOutput)
}

func (o MongoDbShardKeySettingResponsePtrOutput) Fields() MongoDbShardKeyFieldResponseArrayOutput {
	return o.ApplyT(func(v *MongoDbShardKeySettingResponse) []MongoDbShardKeyFieldResponse {
		if v == nil {
			return nil
		}
		return v.Fields
	}).(MongoDbShardKeyFieldResponseArrayOutput)
}

func (o MongoDbShardKeySettingResponsePtrOutput) IsUnique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MongoDbShardKeySettingResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsUnique
	}).(pulumi.BoolPtrOutput)
}

type MongoDbThrottlingSettings struct {
	MaxParallelism  *int `pulumi:"maxParallelism"`
	MinFreeCpu      *int `pulumi:"minFreeCpu"`
	MinFreeMemoryMb *int `pulumi:"minFreeMemoryMb"`
}





type MongoDbThrottlingSettingsInput interface {
	pulumi.Input

	ToMongoDbThrottlingSettingsOutput() MongoDbThrottlingSettingsOutput
	ToMongoDbThrottlingSettingsOutputWithContext(context.Context) MongoDbThrottlingSettingsOutput
}

type MongoDbThrottlingSettingsArgs struct {
	MaxParallelism  pulumi.IntPtrInput `pulumi:"maxParallelism"`
	MinFreeCpu      pulumi.IntPtrInput `pulumi:"minFreeCpu"`
	MinFreeMemoryMb pulumi.IntPtrInput `pulumi:"minFreeMemoryMb"`
}

func (MongoDbThrottlingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbThrottlingSettings)(nil)).Elem()
}

func (i MongoDbThrottlingSettingsArgs) ToMongoDbThrottlingSettingsOutput() MongoDbThrottlingSettingsOutput {
	return i.ToMongoDbThrottlingSettingsOutputWithContext(context.Background())
}

func (i MongoDbThrottlingSettingsArgs) ToMongoDbThrottlingSettingsOutputWithContext(ctx context.Context) MongoDbThrottlingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbThrottlingSettingsOutput)
}

func (i MongoDbThrottlingSettingsArgs) ToMongoDbThrottlingSettingsPtrOutput() MongoDbThrottlingSettingsPtrOutput {
	return i.ToMongoDbThrottlingSettingsPtrOutputWithContext(context.Background())
}

func (i MongoDbThrottlingSettingsArgs) ToMongoDbThrottlingSettingsPtrOutputWithContext(ctx context.Context) MongoDbThrottlingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbThrottlingSettingsOutput).ToMongoDbThrottlingSettingsPtrOutputWithContext(ctx)
}









type MongoDbThrottlingSettingsPtrInput interface {
	pulumi.Input

	ToMongoDbThrottlingSettingsPtrOutput() MongoDbThrottlingSettingsPtrOutput
	ToMongoDbThrottlingSettingsPtrOutputWithContext(context.Context) MongoDbThrottlingSettingsPtrOutput
}

type mongoDbThrottlingSettingsPtrType MongoDbThrottlingSettingsArgs

func MongoDbThrottlingSettingsPtr(v *MongoDbThrottlingSettingsArgs) MongoDbThrottlingSettingsPtrInput {
	return (*mongoDbThrottlingSettingsPtrType)(v)
}

func (*mongoDbThrottlingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDbThrottlingSettings)(nil)).Elem()
}

func (i *mongoDbThrottlingSettingsPtrType) ToMongoDbThrottlingSettingsPtrOutput() MongoDbThrottlingSettingsPtrOutput {
	return i.ToMongoDbThrottlingSettingsPtrOutputWithContext(context.Background())
}

func (i *mongoDbThrottlingSettingsPtrType) ToMongoDbThrottlingSettingsPtrOutputWithContext(ctx context.Context) MongoDbThrottlingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbThrottlingSettingsPtrOutput)
}

type MongoDbThrottlingSettingsOutput struct{ *pulumi.OutputState }

func (MongoDbThrottlingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbThrottlingSettings)(nil)).Elem()
}

func (o MongoDbThrottlingSettingsOutput) ToMongoDbThrottlingSettingsOutput() MongoDbThrottlingSettingsOutput {
	return o
}

func (o MongoDbThrottlingSettingsOutput) ToMongoDbThrottlingSettingsOutputWithContext(ctx context.Context) MongoDbThrottlingSettingsOutput {
	return o
}

func (o MongoDbThrottlingSettingsOutput) ToMongoDbThrottlingSettingsPtrOutput() MongoDbThrottlingSettingsPtrOutput {
	return o.ToMongoDbThrottlingSettingsPtrOutputWithContext(context.Background())
}

func (o MongoDbThrottlingSettingsOutput) ToMongoDbThrottlingSettingsPtrOutputWithContext(ctx context.Context) MongoDbThrottlingSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoDbThrottlingSettings) *MongoDbThrottlingSettings {
		return &v
	}).(MongoDbThrottlingSettingsPtrOutput)
}

func (o MongoDbThrottlingSettingsOutput) MaxParallelism() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDbThrottlingSettings) *int { return v.MaxParallelism }).(pulumi.IntPtrOutput)
}

func (o MongoDbThrottlingSettingsOutput) MinFreeCpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDbThrottlingSettings) *int { return v.MinFreeCpu }).(pulumi.IntPtrOutput)
}

func (o MongoDbThrottlingSettingsOutput) MinFreeMemoryMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDbThrottlingSettings) *int { return v.MinFreeMemoryMb }).(pulumi.IntPtrOutput)
}

type MongoDbThrottlingSettingsPtrOutput struct{ *pulumi.OutputState }

func (MongoDbThrottlingSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDbThrottlingSettings)(nil)).Elem()
}

func (o MongoDbThrottlingSettingsPtrOutput) ToMongoDbThrottlingSettingsPtrOutput() MongoDbThrottlingSettingsPtrOutput {
	return o
}

func (o MongoDbThrottlingSettingsPtrOutput) ToMongoDbThrottlingSettingsPtrOutputWithContext(ctx context.Context) MongoDbThrottlingSettingsPtrOutput {
	return o
}

func (o MongoDbThrottlingSettingsPtrOutput) Elem() MongoDbThrottlingSettingsOutput {
	return o.ApplyT(func(v *MongoDbThrottlingSettings) MongoDbThrottlingSettings {
		if v != nil {
			return *v
		}
		var ret MongoDbThrottlingSettings
		return ret
	}).(MongoDbThrottlingSettingsOutput)
}

func (o MongoDbThrottlingSettingsPtrOutput) MaxParallelism() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoDbThrottlingSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxParallelism
	}).(pulumi.IntPtrOutput)
}

func (o MongoDbThrottlingSettingsPtrOutput) MinFreeCpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoDbThrottlingSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinFreeCpu
	}).(pulumi.IntPtrOutput)
}

func (o MongoDbThrottlingSettingsPtrOutput) MinFreeMemoryMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoDbThrottlingSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinFreeMemoryMb
	}).(pulumi.IntPtrOutput)
}

type MongoDbThrottlingSettingsResponse struct {
	MaxParallelism  *int `pulumi:"maxParallelism"`
	MinFreeCpu      *int `pulumi:"minFreeCpu"`
	MinFreeMemoryMb *int `pulumi:"minFreeMemoryMb"`
}





type MongoDbThrottlingSettingsResponseInput interface {
	pulumi.Input

	ToMongoDbThrottlingSettingsResponseOutput() MongoDbThrottlingSettingsResponseOutput
	ToMongoDbThrottlingSettingsResponseOutputWithContext(context.Context) MongoDbThrottlingSettingsResponseOutput
}

type MongoDbThrottlingSettingsResponseArgs struct {
	MaxParallelism  pulumi.IntPtrInput `pulumi:"maxParallelism"`
	MinFreeCpu      pulumi.IntPtrInput `pulumi:"minFreeCpu"`
	MinFreeMemoryMb pulumi.IntPtrInput `pulumi:"minFreeMemoryMb"`
}

func (MongoDbThrottlingSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbThrottlingSettingsResponse)(nil)).Elem()
}

func (i MongoDbThrottlingSettingsResponseArgs) ToMongoDbThrottlingSettingsResponseOutput() MongoDbThrottlingSettingsResponseOutput {
	return i.ToMongoDbThrottlingSettingsResponseOutputWithContext(context.Background())
}

func (i MongoDbThrottlingSettingsResponseArgs) ToMongoDbThrottlingSettingsResponseOutputWithContext(ctx context.Context) MongoDbThrottlingSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbThrottlingSettingsResponseOutput)
}

func (i MongoDbThrottlingSettingsResponseArgs) ToMongoDbThrottlingSettingsResponsePtrOutput() MongoDbThrottlingSettingsResponsePtrOutput {
	return i.ToMongoDbThrottlingSettingsResponsePtrOutputWithContext(context.Background())
}

func (i MongoDbThrottlingSettingsResponseArgs) ToMongoDbThrottlingSettingsResponsePtrOutputWithContext(ctx context.Context) MongoDbThrottlingSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbThrottlingSettingsResponseOutput).ToMongoDbThrottlingSettingsResponsePtrOutputWithContext(ctx)
}









type MongoDbThrottlingSettingsResponsePtrInput interface {
	pulumi.Input

	ToMongoDbThrottlingSettingsResponsePtrOutput() MongoDbThrottlingSettingsResponsePtrOutput
	ToMongoDbThrottlingSettingsResponsePtrOutputWithContext(context.Context) MongoDbThrottlingSettingsResponsePtrOutput
}

type mongoDbThrottlingSettingsResponsePtrType MongoDbThrottlingSettingsResponseArgs

func MongoDbThrottlingSettingsResponsePtr(v *MongoDbThrottlingSettingsResponseArgs) MongoDbThrottlingSettingsResponsePtrInput {
	return (*mongoDbThrottlingSettingsResponsePtrType)(v)
}

func (*mongoDbThrottlingSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDbThrottlingSettingsResponse)(nil)).Elem()
}

func (i *mongoDbThrottlingSettingsResponsePtrType) ToMongoDbThrottlingSettingsResponsePtrOutput() MongoDbThrottlingSettingsResponsePtrOutput {
	return i.ToMongoDbThrottlingSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *mongoDbThrottlingSettingsResponsePtrType) ToMongoDbThrottlingSettingsResponsePtrOutputWithContext(ctx context.Context) MongoDbThrottlingSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDbThrottlingSettingsResponsePtrOutput)
}

type MongoDbThrottlingSettingsResponseOutput struct{ *pulumi.OutputState }

func (MongoDbThrottlingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDbThrottlingSettingsResponse)(nil)).Elem()
}

func (o MongoDbThrottlingSettingsResponseOutput) ToMongoDbThrottlingSettingsResponseOutput() MongoDbThrottlingSettingsResponseOutput {
	return o
}

func (o MongoDbThrottlingSettingsResponseOutput) ToMongoDbThrottlingSettingsResponseOutputWithContext(ctx context.Context) MongoDbThrottlingSettingsResponseOutput {
	return o
}

func (o MongoDbThrottlingSettingsResponseOutput) ToMongoDbThrottlingSettingsResponsePtrOutput() MongoDbThrottlingSettingsResponsePtrOutput {
	return o.ToMongoDbThrottlingSettingsResponsePtrOutputWithContext(context.Background())
}

func (o MongoDbThrottlingSettingsResponseOutput) ToMongoDbThrottlingSettingsResponsePtrOutputWithContext(ctx context.Context) MongoDbThrottlingSettingsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoDbThrottlingSettingsResponse) *MongoDbThrottlingSettingsResponse {
		return &v
	}).(MongoDbThrottlingSettingsResponsePtrOutput)
}

func (o MongoDbThrottlingSettingsResponseOutput) MaxParallelism() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDbThrottlingSettingsResponse) *int { return v.MaxParallelism }).(pulumi.IntPtrOutput)
}

func (o MongoDbThrottlingSettingsResponseOutput) MinFreeCpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDbThrottlingSettingsResponse) *int { return v.MinFreeCpu }).(pulumi.IntPtrOutput)
}

func (o MongoDbThrottlingSettingsResponseOutput) MinFreeMemoryMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDbThrottlingSettingsResponse) *int { return v.MinFreeMemoryMb }).(pulumi.IntPtrOutput)
}

type MongoDbThrottlingSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (MongoDbThrottlingSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDbThrottlingSettingsResponse)(nil)).Elem()
}

func (o MongoDbThrottlingSettingsResponsePtrOutput) ToMongoDbThrottlingSettingsResponsePtrOutput() MongoDbThrottlingSettingsResponsePtrOutput {
	return o
}

func (o MongoDbThrottlingSettingsResponsePtrOutput) ToMongoDbThrottlingSettingsResponsePtrOutputWithContext(ctx context.Context) MongoDbThrottlingSettingsResponsePtrOutput {
	return o
}

func (o MongoDbThrottlingSettingsResponsePtrOutput) Elem() MongoDbThrottlingSettingsResponseOutput {
	return o.ApplyT(func(v *MongoDbThrottlingSettingsResponse) MongoDbThrottlingSettingsResponse {
		if v != nil {
			return *v
		}
		var ret MongoDbThrottlingSettingsResponse
		return ret
	}).(MongoDbThrottlingSettingsResponseOutput)
}

func (o MongoDbThrottlingSettingsResponsePtrOutput) MaxParallelism() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoDbThrottlingSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxParallelism
	}).(pulumi.IntPtrOutput)
}

func (o MongoDbThrottlingSettingsResponsePtrOutput) MinFreeCpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoDbThrottlingSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinFreeCpu
	}).(pulumi.IntPtrOutput)
}

func (o MongoDbThrottlingSettingsResponsePtrOutput) MinFreeMemoryMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoDbThrottlingSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinFreeMemoryMb
	}).(pulumi.IntPtrOutput)
}

type MySqlConnectionInfo struct {
	Password   *string `pulumi:"password"`
	Port       int     `pulumi:"port"`
	ServerName string  `pulumi:"serverName"`
	Type       string  `pulumi:"type"`
	UserName   *string `pulumi:"userName"`
}





type MySqlConnectionInfoInput interface {
	pulumi.Input

	ToMySqlConnectionInfoOutput() MySqlConnectionInfoOutput
	ToMySqlConnectionInfoOutputWithContext(context.Context) MySqlConnectionInfoOutput
}

type MySqlConnectionInfoArgs struct {
	Password   pulumi.StringPtrInput `pulumi:"password"`
	Port       pulumi.IntInput       `pulumi:"port"`
	ServerName pulumi.StringInput    `pulumi:"serverName"`
	Type       pulumi.StringInput    `pulumi:"type"`
	UserName   pulumi.StringPtrInput `pulumi:"userName"`
}

func (MySqlConnectionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlConnectionInfo)(nil)).Elem()
}

func (i MySqlConnectionInfoArgs) ToMySqlConnectionInfoOutput() MySqlConnectionInfoOutput {
	return i.ToMySqlConnectionInfoOutputWithContext(context.Background())
}

func (i MySqlConnectionInfoArgs) ToMySqlConnectionInfoOutputWithContext(ctx context.Context) MySqlConnectionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlConnectionInfoOutput)
}

func (i MySqlConnectionInfoArgs) ToMySqlConnectionInfoPtrOutput() MySqlConnectionInfoPtrOutput {
	return i.ToMySqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (i MySqlConnectionInfoArgs) ToMySqlConnectionInfoPtrOutputWithContext(ctx context.Context) MySqlConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlConnectionInfoOutput).ToMySqlConnectionInfoPtrOutputWithContext(ctx)
}









type MySqlConnectionInfoPtrInput interface {
	pulumi.Input

	ToMySqlConnectionInfoPtrOutput() MySqlConnectionInfoPtrOutput
	ToMySqlConnectionInfoPtrOutputWithContext(context.Context) MySqlConnectionInfoPtrOutput
}

type mySqlConnectionInfoPtrType MySqlConnectionInfoArgs

func MySqlConnectionInfoPtr(v *MySqlConnectionInfoArgs) MySqlConnectionInfoPtrInput {
	return (*mySqlConnectionInfoPtrType)(v)
}

func (*mySqlConnectionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlConnectionInfo)(nil)).Elem()
}

func (i *mySqlConnectionInfoPtrType) ToMySqlConnectionInfoPtrOutput() MySqlConnectionInfoPtrOutput {
	return i.ToMySqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (i *mySqlConnectionInfoPtrType) ToMySqlConnectionInfoPtrOutputWithContext(ctx context.Context) MySqlConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlConnectionInfoPtrOutput)
}

type MySqlConnectionInfoOutput struct{ *pulumi.OutputState }

func (MySqlConnectionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlConnectionInfo)(nil)).Elem()
}

func (o MySqlConnectionInfoOutput) ToMySqlConnectionInfoOutput() MySqlConnectionInfoOutput {
	return o
}

func (o MySqlConnectionInfoOutput) ToMySqlConnectionInfoOutputWithContext(ctx context.Context) MySqlConnectionInfoOutput {
	return o
}

func (o MySqlConnectionInfoOutput) ToMySqlConnectionInfoPtrOutput() MySqlConnectionInfoPtrOutput {
	return o.ToMySqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (o MySqlConnectionInfoOutput) ToMySqlConnectionInfoPtrOutputWithContext(ctx context.Context) MySqlConnectionInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MySqlConnectionInfo) *MySqlConnectionInfo {
		return &v
	}).(MySqlConnectionInfoPtrOutput)
}

func (o MySqlConnectionInfoOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlConnectionInfo) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o MySqlConnectionInfoOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v MySqlConnectionInfo) int { return v.Port }).(pulumi.IntOutput)
}

func (o MySqlConnectionInfoOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v MySqlConnectionInfo) string { return v.ServerName }).(pulumi.StringOutput)
}

func (o MySqlConnectionInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MySqlConnectionInfo) string { return v.Type }).(pulumi.StringOutput)
}

func (o MySqlConnectionInfoOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlConnectionInfo) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type MySqlConnectionInfoPtrOutput struct{ *pulumi.OutputState }

func (MySqlConnectionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlConnectionInfo)(nil)).Elem()
}

func (o MySqlConnectionInfoPtrOutput) ToMySqlConnectionInfoPtrOutput() MySqlConnectionInfoPtrOutput {
	return o
}

func (o MySqlConnectionInfoPtrOutput) ToMySqlConnectionInfoPtrOutputWithContext(ctx context.Context) MySqlConnectionInfoPtrOutput {
	return o
}

func (o MySqlConnectionInfoPtrOutput) Elem() MySqlConnectionInfoOutput {
	return o.ApplyT(func(v *MySqlConnectionInfo) MySqlConnectionInfo {
		if v != nil {
			return *v
		}
		var ret MySqlConnectionInfo
		return ret
	}).(MySqlConnectionInfoOutput)
}

func (o MySqlConnectionInfoPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o MySqlConnectionInfoPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfo) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o MySqlConnectionInfoPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

func (o MySqlConnectionInfoPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o MySqlConnectionInfoPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type MySqlConnectionInfoResponse struct {
	Password   *string `pulumi:"password"`
	Port       int     `pulumi:"port"`
	ServerName string  `pulumi:"serverName"`
	Type       string  `pulumi:"type"`
	UserName   *string `pulumi:"userName"`
}





type MySqlConnectionInfoResponseInput interface {
	pulumi.Input

	ToMySqlConnectionInfoResponseOutput() MySqlConnectionInfoResponseOutput
	ToMySqlConnectionInfoResponseOutputWithContext(context.Context) MySqlConnectionInfoResponseOutput
}

type MySqlConnectionInfoResponseArgs struct {
	Password   pulumi.StringPtrInput `pulumi:"password"`
	Port       pulumi.IntInput       `pulumi:"port"`
	ServerName pulumi.StringInput    `pulumi:"serverName"`
	Type       pulumi.StringInput    `pulumi:"type"`
	UserName   pulumi.StringPtrInput `pulumi:"userName"`
}

func (MySqlConnectionInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlConnectionInfoResponse)(nil)).Elem()
}

func (i MySqlConnectionInfoResponseArgs) ToMySqlConnectionInfoResponseOutput() MySqlConnectionInfoResponseOutput {
	return i.ToMySqlConnectionInfoResponseOutputWithContext(context.Background())
}

func (i MySqlConnectionInfoResponseArgs) ToMySqlConnectionInfoResponseOutputWithContext(ctx context.Context) MySqlConnectionInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlConnectionInfoResponseOutput)
}

func (i MySqlConnectionInfoResponseArgs) ToMySqlConnectionInfoResponsePtrOutput() MySqlConnectionInfoResponsePtrOutput {
	return i.ToMySqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i MySqlConnectionInfoResponseArgs) ToMySqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MySqlConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlConnectionInfoResponseOutput).ToMySqlConnectionInfoResponsePtrOutputWithContext(ctx)
}









type MySqlConnectionInfoResponsePtrInput interface {
	pulumi.Input

	ToMySqlConnectionInfoResponsePtrOutput() MySqlConnectionInfoResponsePtrOutput
	ToMySqlConnectionInfoResponsePtrOutputWithContext(context.Context) MySqlConnectionInfoResponsePtrOutput
}

type mySqlConnectionInfoResponsePtrType MySqlConnectionInfoResponseArgs

func MySqlConnectionInfoResponsePtr(v *MySqlConnectionInfoResponseArgs) MySqlConnectionInfoResponsePtrInput {
	return (*mySqlConnectionInfoResponsePtrType)(v)
}

func (*mySqlConnectionInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlConnectionInfoResponse)(nil)).Elem()
}

func (i *mySqlConnectionInfoResponsePtrType) ToMySqlConnectionInfoResponsePtrOutput() MySqlConnectionInfoResponsePtrOutput {
	return i.ToMySqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i *mySqlConnectionInfoResponsePtrType) ToMySqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MySqlConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlConnectionInfoResponsePtrOutput)
}

type MySqlConnectionInfoResponseOutput struct{ *pulumi.OutputState }

func (MySqlConnectionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlConnectionInfoResponse)(nil)).Elem()
}

func (o MySqlConnectionInfoResponseOutput) ToMySqlConnectionInfoResponseOutput() MySqlConnectionInfoResponseOutput {
	return o
}

func (o MySqlConnectionInfoResponseOutput) ToMySqlConnectionInfoResponseOutputWithContext(ctx context.Context) MySqlConnectionInfoResponseOutput {
	return o
}

func (o MySqlConnectionInfoResponseOutput) ToMySqlConnectionInfoResponsePtrOutput() MySqlConnectionInfoResponsePtrOutput {
	return o.ToMySqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (o MySqlConnectionInfoResponseOutput) ToMySqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MySqlConnectionInfoResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MySqlConnectionInfoResponse) *MySqlConnectionInfoResponse {
		return &v
	}).(MySqlConnectionInfoResponsePtrOutput)
}

func (o MySqlConnectionInfoResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlConnectionInfoResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o MySqlConnectionInfoResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v MySqlConnectionInfoResponse) int { return v.Port }).(pulumi.IntOutput)
}

func (o MySqlConnectionInfoResponseOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v MySqlConnectionInfoResponse) string { return v.ServerName }).(pulumi.StringOutput)
}

func (o MySqlConnectionInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MySqlConnectionInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

func (o MySqlConnectionInfoResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlConnectionInfoResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type MySqlConnectionInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (MySqlConnectionInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlConnectionInfoResponse)(nil)).Elem()
}

func (o MySqlConnectionInfoResponsePtrOutput) ToMySqlConnectionInfoResponsePtrOutput() MySqlConnectionInfoResponsePtrOutput {
	return o
}

func (o MySqlConnectionInfoResponsePtrOutput) ToMySqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MySqlConnectionInfoResponsePtrOutput {
	return o
}

func (o MySqlConnectionInfoResponsePtrOutput) Elem() MySqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v *MySqlConnectionInfoResponse) MySqlConnectionInfoResponse {
		if v != nil {
			return *v
		}
		var ret MySqlConnectionInfoResponse
		return ret
	}).(MySqlConnectionInfoResponseOutput)
}

func (o MySqlConnectionInfoResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o MySqlConnectionInfoResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfoResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o MySqlConnectionInfoResponsePtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

func (o MySqlConnectionInfoResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o MySqlConnectionInfoResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type ODataErrorResponse struct {
	Code    *string              `pulumi:"code"`
	Details []ODataErrorResponse `pulumi:"details"`
	Message *string              `pulumi:"message"`
}





type ODataErrorResponseInput interface {
	pulumi.Input

	ToODataErrorResponseOutput() ODataErrorResponseOutput
	ToODataErrorResponseOutputWithContext(context.Context) ODataErrorResponseOutput
}

type ODataErrorResponseArgs struct {
	Code    pulumi.StringPtrInput        `pulumi:"code"`
	Details ODataErrorResponseArrayInput `pulumi:"details"`
	Message pulumi.StringPtrInput        `pulumi:"message"`
}

func (ODataErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ODataErrorResponse)(nil)).Elem()
}

func (i ODataErrorResponseArgs) ToODataErrorResponseOutput() ODataErrorResponseOutput {
	return i.ToODataErrorResponseOutputWithContext(context.Background())
}

func (i ODataErrorResponseArgs) ToODataErrorResponseOutputWithContext(ctx context.Context) ODataErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ODataErrorResponseOutput)
}





type ODataErrorResponseArrayInput interface {
	pulumi.Input

	ToODataErrorResponseArrayOutput() ODataErrorResponseArrayOutput
	ToODataErrorResponseArrayOutputWithContext(context.Context) ODataErrorResponseArrayOutput
}

type ODataErrorResponseArray []ODataErrorResponseInput

func (ODataErrorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ODataErrorResponse)(nil)).Elem()
}

func (i ODataErrorResponseArray) ToODataErrorResponseArrayOutput() ODataErrorResponseArrayOutput {
	return i.ToODataErrorResponseArrayOutputWithContext(context.Background())
}

func (i ODataErrorResponseArray) ToODataErrorResponseArrayOutputWithContext(ctx context.Context) ODataErrorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ODataErrorResponseArrayOutput)
}

type ODataErrorResponseOutput struct{ *pulumi.OutputState }

func (ODataErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ODataErrorResponse)(nil)).Elem()
}

func (o ODataErrorResponseOutput) ToODataErrorResponseOutput() ODataErrorResponseOutput {
	return o
}

func (o ODataErrorResponseOutput) ToODataErrorResponseOutputWithContext(ctx context.Context) ODataErrorResponseOutput {
	return o
}

func (o ODataErrorResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ODataErrorResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o ODataErrorResponseOutput) Details() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ODataErrorResponse) []ODataErrorResponse { return v.Details }).(ODataErrorResponseArrayOutput)
}

func (o ODataErrorResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ODataErrorResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type ODataErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (ODataErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ODataErrorResponse)(nil)).Elem()
}

func (o ODataErrorResponseArrayOutput) ToODataErrorResponseArrayOutput() ODataErrorResponseArrayOutput {
	return o
}

func (o ODataErrorResponseArrayOutput) ToODataErrorResponseArrayOutputWithContext(ctx context.Context) ODataErrorResponseArrayOutput {
	return o
}

func (o ODataErrorResponseArrayOutput) Index(i pulumi.IntInput) ODataErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ODataErrorResponse {
		return vs[0].([]ODataErrorResponse)[vs[1].(int)]
	}).(ODataErrorResponseOutput)
}

type OracleConnectionInfo struct {
	DataSource string  `pulumi:"dataSource"`
	Password   *string `pulumi:"password"`
	Type       string  `pulumi:"type"`
	UserName   *string `pulumi:"userName"`
}





type OracleConnectionInfoInput interface {
	pulumi.Input

	ToOracleConnectionInfoOutput() OracleConnectionInfoOutput
	ToOracleConnectionInfoOutputWithContext(context.Context) OracleConnectionInfoOutput
}

type OracleConnectionInfoArgs struct {
	DataSource pulumi.StringInput    `pulumi:"dataSource"`
	Password   pulumi.StringPtrInput `pulumi:"password"`
	Type       pulumi.StringInput    `pulumi:"type"`
	UserName   pulumi.StringPtrInput `pulumi:"userName"`
}

func (OracleConnectionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleConnectionInfo)(nil)).Elem()
}

func (i OracleConnectionInfoArgs) ToOracleConnectionInfoOutput() OracleConnectionInfoOutput {
	return i.ToOracleConnectionInfoOutputWithContext(context.Background())
}

func (i OracleConnectionInfoArgs) ToOracleConnectionInfoOutputWithContext(ctx context.Context) OracleConnectionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OracleConnectionInfoOutput)
}

func (i OracleConnectionInfoArgs) ToOracleConnectionInfoPtrOutput() OracleConnectionInfoPtrOutput {
	return i.ToOracleConnectionInfoPtrOutputWithContext(context.Background())
}

func (i OracleConnectionInfoArgs) ToOracleConnectionInfoPtrOutputWithContext(ctx context.Context) OracleConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OracleConnectionInfoOutput).ToOracleConnectionInfoPtrOutputWithContext(ctx)
}









type OracleConnectionInfoPtrInput interface {
	pulumi.Input

	ToOracleConnectionInfoPtrOutput() OracleConnectionInfoPtrOutput
	ToOracleConnectionInfoPtrOutputWithContext(context.Context) OracleConnectionInfoPtrOutput
}

type oracleConnectionInfoPtrType OracleConnectionInfoArgs

func OracleConnectionInfoPtr(v *OracleConnectionInfoArgs) OracleConnectionInfoPtrInput {
	return (*oracleConnectionInfoPtrType)(v)
}

func (*oracleConnectionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OracleConnectionInfo)(nil)).Elem()
}

func (i *oracleConnectionInfoPtrType) ToOracleConnectionInfoPtrOutput() OracleConnectionInfoPtrOutput {
	return i.ToOracleConnectionInfoPtrOutputWithContext(context.Background())
}

func (i *oracleConnectionInfoPtrType) ToOracleConnectionInfoPtrOutputWithContext(ctx context.Context) OracleConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OracleConnectionInfoPtrOutput)
}

type OracleConnectionInfoOutput struct{ *pulumi.OutputState }

func (OracleConnectionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleConnectionInfo)(nil)).Elem()
}

func (o OracleConnectionInfoOutput) ToOracleConnectionInfoOutput() OracleConnectionInfoOutput {
	return o
}

func (o OracleConnectionInfoOutput) ToOracleConnectionInfoOutputWithContext(ctx context.Context) OracleConnectionInfoOutput {
	return o
}

func (o OracleConnectionInfoOutput) ToOracleConnectionInfoPtrOutput() OracleConnectionInfoPtrOutput {
	return o.ToOracleConnectionInfoPtrOutputWithContext(context.Background())
}

func (o OracleConnectionInfoOutput) ToOracleConnectionInfoPtrOutputWithContext(ctx context.Context) OracleConnectionInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OracleConnectionInfo) *OracleConnectionInfo {
		return &v
	}).(OracleConnectionInfoPtrOutput)
}

func (o OracleConnectionInfoOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v OracleConnectionInfo) string { return v.DataSource }).(pulumi.StringOutput)
}

func (o OracleConnectionInfoOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OracleConnectionInfo) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o OracleConnectionInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OracleConnectionInfo) string { return v.Type }).(pulumi.StringOutput)
}

func (o OracleConnectionInfoOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OracleConnectionInfo) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type OracleConnectionInfoPtrOutput struct{ *pulumi.OutputState }

func (OracleConnectionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OracleConnectionInfo)(nil)).Elem()
}

func (o OracleConnectionInfoPtrOutput) ToOracleConnectionInfoPtrOutput() OracleConnectionInfoPtrOutput {
	return o
}

func (o OracleConnectionInfoPtrOutput) ToOracleConnectionInfoPtrOutputWithContext(ctx context.Context) OracleConnectionInfoPtrOutput {
	return o
}

func (o OracleConnectionInfoPtrOutput) Elem() OracleConnectionInfoOutput {
	return o.ApplyT(func(v *OracleConnectionInfo) OracleConnectionInfo {
		if v != nil {
			return *v
		}
		var ret OracleConnectionInfo
		return ret
	}).(OracleConnectionInfoOutput)
}

func (o OracleConnectionInfoPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OracleConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

func (o OracleConnectionInfoPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OracleConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o OracleConnectionInfoPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OracleConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o OracleConnectionInfoPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OracleConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type OracleConnectionInfoResponse struct {
	DataSource string  `pulumi:"dataSource"`
	Password   *string `pulumi:"password"`
	Type       string  `pulumi:"type"`
	UserName   *string `pulumi:"userName"`
}





type OracleConnectionInfoResponseInput interface {
	pulumi.Input

	ToOracleConnectionInfoResponseOutput() OracleConnectionInfoResponseOutput
	ToOracleConnectionInfoResponseOutputWithContext(context.Context) OracleConnectionInfoResponseOutput
}

type OracleConnectionInfoResponseArgs struct {
	DataSource pulumi.StringInput    `pulumi:"dataSource"`
	Password   pulumi.StringPtrInput `pulumi:"password"`
	Type       pulumi.StringInput    `pulumi:"type"`
	UserName   pulumi.StringPtrInput `pulumi:"userName"`
}

func (OracleConnectionInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleConnectionInfoResponse)(nil)).Elem()
}

func (i OracleConnectionInfoResponseArgs) ToOracleConnectionInfoResponseOutput() OracleConnectionInfoResponseOutput {
	return i.ToOracleConnectionInfoResponseOutputWithContext(context.Background())
}

func (i OracleConnectionInfoResponseArgs) ToOracleConnectionInfoResponseOutputWithContext(ctx context.Context) OracleConnectionInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OracleConnectionInfoResponseOutput)
}

func (i OracleConnectionInfoResponseArgs) ToOracleConnectionInfoResponsePtrOutput() OracleConnectionInfoResponsePtrOutput {
	return i.ToOracleConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i OracleConnectionInfoResponseArgs) ToOracleConnectionInfoResponsePtrOutputWithContext(ctx context.Context) OracleConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OracleConnectionInfoResponseOutput).ToOracleConnectionInfoResponsePtrOutputWithContext(ctx)
}









type OracleConnectionInfoResponsePtrInput interface {
	pulumi.Input

	ToOracleConnectionInfoResponsePtrOutput() OracleConnectionInfoResponsePtrOutput
	ToOracleConnectionInfoResponsePtrOutputWithContext(context.Context) OracleConnectionInfoResponsePtrOutput
}

type oracleConnectionInfoResponsePtrType OracleConnectionInfoResponseArgs

func OracleConnectionInfoResponsePtr(v *OracleConnectionInfoResponseArgs) OracleConnectionInfoResponsePtrInput {
	return (*oracleConnectionInfoResponsePtrType)(v)
}

func (*oracleConnectionInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OracleConnectionInfoResponse)(nil)).Elem()
}

func (i *oracleConnectionInfoResponsePtrType) ToOracleConnectionInfoResponsePtrOutput() OracleConnectionInfoResponsePtrOutput {
	return i.ToOracleConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i *oracleConnectionInfoResponsePtrType) ToOracleConnectionInfoResponsePtrOutputWithContext(ctx context.Context) OracleConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OracleConnectionInfoResponsePtrOutput)
}

type OracleConnectionInfoResponseOutput struct{ *pulumi.OutputState }

func (OracleConnectionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleConnectionInfoResponse)(nil)).Elem()
}

func (o OracleConnectionInfoResponseOutput) ToOracleConnectionInfoResponseOutput() OracleConnectionInfoResponseOutput {
	return o
}

func (o OracleConnectionInfoResponseOutput) ToOracleConnectionInfoResponseOutputWithContext(ctx context.Context) OracleConnectionInfoResponseOutput {
	return o
}

func (o OracleConnectionInfoResponseOutput) ToOracleConnectionInfoResponsePtrOutput() OracleConnectionInfoResponsePtrOutput {
	return o.ToOracleConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (o OracleConnectionInfoResponseOutput) ToOracleConnectionInfoResponsePtrOutputWithContext(ctx context.Context) OracleConnectionInfoResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OracleConnectionInfoResponse) *OracleConnectionInfoResponse {
		return &v
	}).(OracleConnectionInfoResponsePtrOutput)
}

func (o OracleConnectionInfoResponseOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v OracleConnectionInfoResponse) string { return v.DataSource }).(pulumi.StringOutput)
}

func (o OracleConnectionInfoResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OracleConnectionInfoResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o OracleConnectionInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OracleConnectionInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

func (o OracleConnectionInfoResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OracleConnectionInfoResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type OracleConnectionInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (OracleConnectionInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OracleConnectionInfoResponse)(nil)).Elem()
}

func (o OracleConnectionInfoResponsePtrOutput) ToOracleConnectionInfoResponsePtrOutput() OracleConnectionInfoResponsePtrOutput {
	return o
}

func (o OracleConnectionInfoResponsePtrOutput) ToOracleConnectionInfoResponsePtrOutputWithContext(ctx context.Context) OracleConnectionInfoResponsePtrOutput {
	return o
}

func (o OracleConnectionInfoResponsePtrOutput) Elem() OracleConnectionInfoResponseOutput {
	return o.ApplyT(func(v *OracleConnectionInfoResponse) OracleConnectionInfoResponse {
		if v != nil {
			return *v
		}
		var ret OracleConnectionInfoResponse
		return ret
	}).(OracleConnectionInfoResponseOutput)
}

func (o OracleConnectionInfoResponsePtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OracleConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

func (o OracleConnectionInfoResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OracleConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o OracleConnectionInfoResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OracleConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o OracleConnectionInfoResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OracleConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type OrphanedUserInfoResponse struct {
	DatabaseName *string `pulumi:"databaseName"`
	Name         *string `pulumi:"name"`
}





type OrphanedUserInfoResponseInput interface {
	pulumi.Input

	ToOrphanedUserInfoResponseOutput() OrphanedUserInfoResponseOutput
	ToOrphanedUserInfoResponseOutputWithContext(context.Context) OrphanedUserInfoResponseOutput
}

type OrphanedUserInfoResponseArgs struct {
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
}

func (OrphanedUserInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrphanedUserInfoResponse)(nil)).Elem()
}

func (i OrphanedUserInfoResponseArgs) ToOrphanedUserInfoResponseOutput() OrphanedUserInfoResponseOutput {
	return i.ToOrphanedUserInfoResponseOutputWithContext(context.Background())
}

func (i OrphanedUserInfoResponseArgs) ToOrphanedUserInfoResponseOutputWithContext(ctx context.Context) OrphanedUserInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrphanedUserInfoResponseOutput)
}





type OrphanedUserInfoResponseArrayInput interface {
	pulumi.Input

	ToOrphanedUserInfoResponseArrayOutput() OrphanedUserInfoResponseArrayOutput
	ToOrphanedUserInfoResponseArrayOutputWithContext(context.Context) OrphanedUserInfoResponseArrayOutput
}

type OrphanedUserInfoResponseArray []OrphanedUserInfoResponseInput

func (OrphanedUserInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrphanedUserInfoResponse)(nil)).Elem()
}

func (i OrphanedUserInfoResponseArray) ToOrphanedUserInfoResponseArrayOutput() OrphanedUserInfoResponseArrayOutput {
	return i.ToOrphanedUserInfoResponseArrayOutputWithContext(context.Background())
}

func (i OrphanedUserInfoResponseArray) ToOrphanedUserInfoResponseArrayOutputWithContext(ctx context.Context) OrphanedUserInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrphanedUserInfoResponseArrayOutput)
}

type OrphanedUserInfoResponseOutput struct{ *pulumi.OutputState }

func (OrphanedUserInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrphanedUserInfoResponse)(nil)).Elem()
}

func (o OrphanedUserInfoResponseOutput) ToOrphanedUserInfoResponseOutput() OrphanedUserInfoResponseOutput {
	return o
}

func (o OrphanedUserInfoResponseOutput) ToOrphanedUserInfoResponseOutputWithContext(ctx context.Context) OrphanedUserInfoResponseOutput {
	return o
}

func (o OrphanedUserInfoResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrphanedUserInfoResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

func (o OrphanedUserInfoResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrphanedUserInfoResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type OrphanedUserInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (OrphanedUserInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrphanedUserInfoResponse)(nil)).Elem()
}

func (o OrphanedUserInfoResponseArrayOutput) ToOrphanedUserInfoResponseArrayOutput() OrphanedUserInfoResponseArrayOutput {
	return o
}

func (o OrphanedUserInfoResponseArrayOutput) ToOrphanedUserInfoResponseArrayOutputWithContext(ctx context.Context) OrphanedUserInfoResponseArrayOutput {
	return o
}

func (o OrphanedUserInfoResponseArrayOutput) Index(i pulumi.IntInput) OrphanedUserInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrphanedUserInfoResponse {
		return vs[0].([]OrphanedUserInfoResponse)[vs[1].(int)]
	}).(OrphanedUserInfoResponseOutput)
}

type PostgreSqlConnectionInfo struct {
	DatabaseName           *string `pulumi:"databaseName"`
	EncryptConnection      *bool   `pulumi:"encryptConnection"`
	Password               *string `pulumi:"password"`
	Port                   int     `pulumi:"port"`
	ServerName             string  `pulumi:"serverName"`
	TrustServerCertificate *bool   `pulumi:"trustServerCertificate"`
	Type                   string  `pulumi:"type"`
	UserName               *string `pulumi:"userName"`
}





type PostgreSqlConnectionInfoInput interface {
	pulumi.Input

	ToPostgreSqlConnectionInfoOutput() PostgreSqlConnectionInfoOutput
	ToPostgreSqlConnectionInfoOutputWithContext(context.Context) PostgreSqlConnectionInfoOutput
}

type PostgreSqlConnectionInfoArgs struct {
	DatabaseName           pulumi.StringPtrInput `pulumi:"databaseName"`
	EncryptConnection      pulumi.BoolPtrInput   `pulumi:"encryptConnection"`
	Password               pulumi.StringPtrInput `pulumi:"password"`
	Port                   pulumi.IntInput       `pulumi:"port"`
	ServerName             pulumi.StringInput    `pulumi:"serverName"`
	TrustServerCertificate pulumi.BoolPtrInput   `pulumi:"trustServerCertificate"`
	Type                   pulumi.StringInput    `pulumi:"type"`
	UserName               pulumi.StringPtrInput `pulumi:"userName"`
}

func (PostgreSqlConnectionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgreSqlConnectionInfo)(nil)).Elem()
}

func (i PostgreSqlConnectionInfoArgs) ToPostgreSqlConnectionInfoOutput() PostgreSqlConnectionInfoOutput {
	return i.ToPostgreSqlConnectionInfoOutputWithContext(context.Background())
}

func (i PostgreSqlConnectionInfoArgs) ToPostgreSqlConnectionInfoOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgreSqlConnectionInfoOutput)
}

func (i PostgreSqlConnectionInfoArgs) ToPostgreSqlConnectionInfoPtrOutput() PostgreSqlConnectionInfoPtrOutput {
	return i.ToPostgreSqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (i PostgreSqlConnectionInfoArgs) ToPostgreSqlConnectionInfoPtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgreSqlConnectionInfoOutput).ToPostgreSqlConnectionInfoPtrOutputWithContext(ctx)
}









type PostgreSqlConnectionInfoPtrInput interface {
	pulumi.Input

	ToPostgreSqlConnectionInfoPtrOutput() PostgreSqlConnectionInfoPtrOutput
	ToPostgreSqlConnectionInfoPtrOutputWithContext(context.Context) PostgreSqlConnectionInfoPtrOutput
}

type postgreSqlConnectionInfoPtrType PostgreSqlConnectionInfoArgs

func PostgreSqlConnectionInfoPtr(v *PostgreSqlConnectionInfoArgs) PostgreSqlConnectionInfoPtrInput {
	return (*postgreSqlConnectionInfoPtrType)(v)
}

func (*postgreSqlConnectionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgreSqlConnectionInfo)(nil)).Elem()
}

func (i *postgreSqlConnectionInfoPtrType) ToPostgreSqlConnectionInfoPtrOutput() PostgreSqlConnectionInfoPtrOutput {
	return i.ToPostgreSqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (i *postgreSqlConnectionInfoPtrType) ToPostgreSqlConnectionInfoPtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgreSqlConnectionInfoPtrOutput)
}

type PostgreSqlConnectionInfoOutput struct{ *pulumi.OutputState }

func (PostgreSqlConnectionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgreSqlConnectionInfo)(nil)).Elem()
}

func (o PostgreSqlConnectionInfoOutput) ToPostgreSqlConnectionInfoOutput() PostgreSqlConnectionInfoOutput {
	return o
}

func (o PostgreSqlConnectionInfoOutput) ToPostgreSqlConnectionInfoOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoOutput {
	return o
}

func (o PostgreSqlConnectionInfoOutput) ToPostgreSqlConnectionInfoPtrOutput() PostgreSqlConnectionInfoPtrOutput {
	return o.ToPostgreSqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (o PostgreSqlConnectionInfoOutput) ToPostgreSqlConnectionInfoPtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgreSqlConnectionInfo) *PostgreSqlConnectionInfo {
		return &v
	}).(PostgreSqlConnectionInfoPtrOutput)
}

func (o PostgreSqlConnectionInfoOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfo) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

func (o PostgreSqlConnectionInfoOutput) EncryptConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfo) *bool { return v.EncryptConnection }).(pulumi.BoolPtrOutput)
}

func (o PostgreSqlConnectionInfoOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfo) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o PostgreSqlConnectionInfoOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfo) int { return v.Port }).(pulumi.IntOutput)
}

func (o PostgreSqlConnectionInfoOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfo) string { return v.ServerName }).(pulumi.StringOutput)
}

func (o PostgreSqlConnectionInfoOutput) TrustServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfo) *bool { return v.TrustServerCertificate }).(pulumi.BoolPtrOutput)
}

func (o PostgreSqlConnectionInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfo) string { return v.Type }).(pulumi.StringOutput)
}

func (o PostgreSqlConnectionInfoOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfo) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type PostgreSqlConnectionInfoPtrOutput struct{ *pulumi.OutputState }

func (PostgreSqlConnectionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgreSqlConnectionInfo)(nil)).Elem()
}

func (o PostgreSqlConnectionInfoPtrOutput) ToPostgreSqlConnectionInfoPtrOutput() PostgreSqlConnectionInfoPtrOutput {
	return o
}

func (o PostgreSqlConnectionInfoPtrOutput) ToPostgreSqlConnectionInfoPtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoPtrOutput {
	return o
}

func (o PostgreSqlConnectionInfoPtrOutput) Elem() PostgreSqlConnectionInfoOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfo) PostgreSqlConnectionInfo {
		if v != nil {
			return *v
		}
		var ret PostgreSqlConnectionInfo
		return ret
	}).(PostgreSqlConnectionInfoOutput)
}

func (o PostgreSqlConnectionInfoPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o PostgreSqlConnectionInfoPtrOutput) EncryptConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfo) *bool {
		if v == nil {
			return nil
		}
		return v.EncryptConnection
	}).(pulumi.BoolPtrOutput)
}

func (o PostgreSqlConnectionInfoPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o PostgreSqlConnectionInfoPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfo) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o PostgreSqlConnectionInfoPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

func (o PostgreSqlConnectionInfoPtrOutput) TrustServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfo) *bool {
		if v == nil {
			return nil
		}
		return v.TrustServerCertificate
	}).(pulumi.BoolPtrOutput)
}

func (o PostgreSqlConnectionInfoPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o PostgreSqlConnectionInfoPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type PostgreSqlConnectionInfoResponse struct {
	DatabaseName           *string `pulumi:"databaseName"`
	EncryptConnection      *bool   `pulumi:"encryptConnection"`
	Password               *string `pulumi:"password"`
	Port                   int     `pulumi:"port"`
	ServerName             string  `pulumi:"serverName"`
	TrustServerCertificate *bool   `pulumi:"trustServerCertificate"`
	Type                   string  `pulumi:"type"`
	UserName               *string `pulumi:"userName"`
}





type PostgreSqlConnectionInfoResponseInput interface {
	pulumi.Input

	ToPostgreSqlConnectionInfoResponseOutput() PostgreSqlConnectionInfoResponseOutput
	ToPostgreSqlConnectionInfoResponseOutputWithContext(context.Context) PostgreSqlConnectionInfoResponseOutput
}

type PostgreSqlConnectionInfoResponseArgs struct {
	DatabaseName           pulumi.StringPtrInput `pulumi:"databaseName"`
	EncryptConnection      pulumi.BoolPtrInput   `pulumi:"encryptConnection"`
	Password               pulumi.StringPtrInput `pulumi:"password"`
	Port                   pulumi.IntInput       `pulumi:"port"`
	ServerName             pulumi.StringInput    `pulumi:"serverName"`
	TrustServerCertificate pulumi.BoolPtrInput   `pulumi:"trustServerCertificate"`
	Type                   pulumi.StringInput    `pulumi:"type"`
	UserName               pulumi.StringPtrInput `pulumi:"userName"`
}

func (PostgreSqlConnectionInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgreSqlConnectionInfoResponse)(nil)).Elem()
}

func (i PostgreSqlConnectionInfoResponseArgs) ToPostgreSqlConnectionInfoResponseOutput() PostgreSqlConnectionInfoResponseOutput {
	return i.ToPostgreSqlConnectionInfoResponseOutputWithContext(context.Background())
}

func (i PostgreSqlConnectionInfoResponseArgs) ToPostgreSqlConnectionInfoResponseOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgreSqlConnectionInfoResponseOutput)
}

func (i PostgreSqlConnectionInfoResponseArgs) ToPostgreSqlConnectionInfoResponsePtrOutput() PostgreSqlConnectionInfoResponsePtrOutput {
	return i.ToPostgreSqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i PostgreSqlConnectionInfoResponseArgs) ToPostgreSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgreSqlConnectionInfoResponseOutput).ToPostgreSqlConnectionInfoResponsePtrOutputWithContext(ctx)
}









type PostgreSqlConnectionInfoResponsePtrInput interface {
	pulumi.Input

	ToPostgreSqlConnectionInfoResponsePtrOutput() PostgreSqlConnectionInfoResponsePtrOutput
	ToPostgreSqlConnectionInfoResponsePtrOutputWithContext(context.Context) PostgreSqlConnectionInfoResponsePtrOutput
}

type postgreSqlConnectionInfoResponsePtrType PostgreSqlConnectionInfoResponseArgs

func PostgreSqlConnectionInfoResponsePtr(v *PostgreSqlConnectionInfoResponseArgs) PostgreSqlConnectionInfoResponsePtrInput {
	return (*postgreSqlConnectionInfoResponsePtrType)(v)
}

func (*postgreSqlConnectionInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgreSqlConnectionInfoResponse)(nil)).Elem()
}

func (i *postgreSqlConnectionInfoResponsePtrType) ToPostgreSqlConnectionInfoResponsePtrOutput() PostgreSqlConnectionInfoResponsePtrOutput {
	return i.ToPostgreSqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i *postgreSqlConnectionInfoResponsePtrType) ToPostgreSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgreSqlConnectionInfoResponsePtrOutput)
}

type PostgreSqlConnectionInfoResponseOutput struct{ *pulumi.OutputState }

func (PostgreSqlConnectionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgreSqlConnectionInfoResponse)(nil)).Elem()
}

func (o PostgreSqlConnectionInfoResponseOutput) ToPostgreSqlConnectionInfoResponseOutput() PostgreSqlConnectionInfoResponseOutput {
	return o
}

func (o PostgreSqlConnectionInfoResponseOutput) ToPostgreSqlConnectionInfoResponseOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoResponseOutput {
	return o
}

func (o PostgreSqlConnectionInfoResponseOutput) ToPostgreSqlConnectionInfoResponsePtrOutput() PostgreSqlConnectionInfoResponsePtrOutput {
	return o.ToPostgreSqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (o PostgreSqlConnectionInfoResponseOutput) ToPostgreSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgreSqlConnectionInfoResponse) *PostgreSqlConnectionInfoResponse {
		return &v
	}).(PostgreSqlConnectionInfoResponsePtrOutput)
}

func (o PostgreSqlConnectionInfoResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

func (o PostgreSqlConnectionInfoResponseOutput) EncryptConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoResponse) *bool { return v.EncryptConnection }).(pulumi.BoolPtrOutput)
}

func (o PostgreSqlConnectionInfoResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o PostgreSqlConnectionInfoResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoResponse) int { return v.Port }).(pulumi.IntOutput)
}

func (o PostgreSqlConnectionInfoResponseOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoResponse) string { return v.ServerName }).(pulumi.StringOutput)
}

func (o PostgreSqlConnectionInfoResponseOutput) TrustServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoResponse) *bool { return v.TrustServerCertificate }).(pulumi.BoolPtrOutput)
}

func (o PostgreSqlConnectionInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

func (o PostgreSqlConnectionInfoResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type PostgreSqlConnectionInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (PostgreSqlConnectionInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgreSqlConnectionInfoResponse)(nil)).Elem()
}

func (o PostgreSqlConnectionInfoResponsePtrOutput) ToPostgreSqlConnectionInfoResponsePtrOutput() PostgreSqlConnectionInfoResponsePtrOutput {
	return o
}

func (o PostgreSqlConnectionInfoResponsePtrOutput) ToPostgreSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoResponsePtrOutput {
	return o
}

func (o PostgreSqlConnectionInfoResponsePtrOutput) Elem() PostgreSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoResponse) PostgreSqlConnectionInfoResponse {
		if v != nil {
			return *v
		}
		var ret PostgreSqlConnectionInfoResponse
		return ret
	}).(PostgreSqlConnectionInfoResponseOutput)
}

func (o PostgreSqlConnectionInfoResponsePtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o PostgreSqlConnectionInfoResponsePtrOutput) EncryptConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EncryptConnection
	}).(pulumi.BoolPtrOutput)
}

func (o PostgreSqlConnectionInfoResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o PostgreSqlConnectionInfoResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o PostgreSqlConnectionInfoResponsePtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

func (o PostgreSqlConnectionInfoResponsePtrOutput) TrustServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.TrustServerCertificate
	}).(pulumi.BoolPtrOutput)
}

func (o PostgreSqlConnectionInfoResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o PostgreSqlConnectionInfoResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type ProjectFileProperties struct {
	Extension *string `pulumi:"extension"`
	FilePath  *string `pulumi:"filePath"`
	MediaType *string `pulumi:"mediaType"`
}





type ProjectFilePropertiesInput interface {
	pulumi.Input

	ToProjectFilePropertiesOutput() ProjectFilePropertiesOutput
	ToProjectFilePropertiesOutputWithContext(context.Context) ProjectFilePropertiesOutput
}

type ProjectFilePropertiesArgs struct {
	Extension pulumi.StringPtrInput `pulumi:"extension"`
	FilePath  pulumi.StringPtrInput `pulumi:"filePath"`
	MediaType pulumi.StringPtrInput `pulumi:"mediaType"`
}

func (ProjectFilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectFileProperties)(nil)).Elem()
}

func (i ProjectFilePropertiesArgs) ToProjectFilePropertiesOutput() ProjectFilePropertiesOutput {
	return i.ToProjectFilePropertiesOutputWithContext(context.Background())
}

func (i ProjectFilePropertiesArgs) ToProjectFilePropertiesOutputWithContext(ctx context.Context) ProjectFilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectFilePropertiesOutput)
}

func (i ProjectFilePropertiesArgs) ToProjectFilePropertiesPtrOutput() ProjectFilePropertiesPtrOutput {
	return i.ToProjectFilePropertiesPtrOutputWithContext(context.Background())
}

func (i ProjectFilePropertiesArgs) ToProjectFilePropertiesPtrOutputWithContext(ctx context.Context) ProjectFilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectFilePropertiesOutput).ToProjectFilePropertiesPtrOutputWithContext(ctx)
}









type ProjectFilePropertiesPtrInput interface {
	pulumi.Input

	ToProjectFilePropertiesPtrOutput() ProjectFilePropertiesPtrOutput
	ToProjectFilePropertiesPtrOutputWithContext(context.Context) ProjectFilePropertiesPtrOutput
}

type projectFilePropertiesPtrType ProjectFilePropertiesArgs

func ProjectFilePropertiesPtr(v *ProjectFilePropertiesArgs) ProjectFilePropertiesPtrInput {
	return (*projectFilePropertiesPtrType)(v)
}

func (*projectFilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectFileProperties)(nil)).Elem()
}

func (i *projectFilePropertiesPtrType) ToProjectFilePropertiesPtrOutput() ProjectFilePropertiesPtrOutput {
	return i.ToProjectFilePropertiesPtrOutputWithContext(context.Background())
}

func (i *projectFilePropertiesPtrType) ToProjectFilePropertiesPtrOutputWithContext(ctx context.Context) ProjectFilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectFilePropertiesPtrOutput)
}

type ProjectFilePropertiesOutput struct{ *pulumi.OutputState }

func (ProjectFilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectFileProperties)(nil)).Elem()
}

func (o ProjectFilePropertiesOutput) ToProjectFilePropertiesOutput() ProjectFilePropertiesOutput {
	return o
}

func (o ProjectFilePropertiesOutput) ToProjectFilePropertiesOutputWithContext(ctx context.Context) ProjectFilePropertiesOutput {
	return o
}

func (o ProjectFilePropertiesOutput) ToProjectFilePropertiesPtrOutput() ProjectFilePropertiesPtrOutput {
	return o.ToProjectFilePropertiesPtrOutputWithContext(context.Background())
}

func (o ProjectFilePropertiesOutput) ToProjectFilePropertiesPtrOutputWithContext(ctx context.Context) ProjectFilePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectFileProperties) *ProjectFileProperties {
		return &v
	}).(ProjectFilePropertiesPtrOutput)
}

func (o ProjectFilePropertiesOutput) Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFileProperties) *string { return v.Extension }).(pulumi.StringPtrOutput)
}

func (o ProjectFilePropertiesOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFileProperties) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

func (o ProjectFilePropertiesOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFileProperties) *string { return v.MediaType }).(pulumi.StringPtrOutput)
}

type ProjectFilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ProjectFilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectFileProperties)(nil)).Elem()
}

func (o ProjectFilePropertiesPtrOutput) ToProjectFilePropertiesPtrOutput() ProjectFilePropertiesPtrOutput {
	return o
}

func (o ProjectFilePropertiesPtrOutput) ToProjectFilePropertiesPtrOutputWithContext(ctx context.Context) ProjectFilePropertiesPtrOutput {
	return o
}

func (o ProjectFilePropertiesPtrOutput) Elem() ProjectFilePropertiesOutput {
	return o.ApplyT(func(v *ProjectFileProperties) ProjectFileProperties {
		if v != nil {
			return *v
		}
		var ret ProjectFileProperties
		return ret
	}).(ProjectFilePropertiesOutput)
}

func (o ProjectFilePropertiesPtrOutput) Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectFileProperties) *string {
		if v == nil {
			return nil
		}
		return v.Extension
	}).(pulumi.StringPtrOutput)
}

func (o ProjectFilePropertiesPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectFileProperties) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

func (o ProjectFilePropertiesPtrOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectFileProperties) *string {
		if v == nil {
			return nil
		}
		return v.MediaType
	}).(pulumi.StringPtrOutput)
}

type ProjectFilePropertiesResponse struct {
	Extension    *string `pulumi:"extension"`
	FilePath     *string `pulumi:"filePath"`
	LastModified string  `pulumi:"lastModified"`
	MediaType    *string `pulumi:"mediaType"`
	Size         float64 `pulumi:"size"`
}





type ProjectFilePropertiesResponseInput interface {
	pulumi.Input

	ToProjectFilePropertiesResponseOutput() ProjectFilePropertiesResponseOutput
	ToProjectFilePropertiesResponseOutputWithContext(context.Context) ProjectFilePropertiesResponseOutput
}

type ProjectFilePropertiesResponseArgs struct {
	Extension    pulumi.StringPtrInput `pulumi:"extension"`
	FilePath     pulumi.StringPtrInput `pulumi:"filePath"`
	LastModified pulumi.StringInput    `pulumi:"lastModified"`
	MediaType    pulumi.StringPtrInput `pulumi:"mediaType"`
	Size         pulumi.Float64Input   `pulumi:"size"`
}

func (ProjectFilePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectFilePropertiesResponse)(nil)).Elem()
}

func (i ProjectFilePropertiesResponseArgs) ToProjectFilePropertiesResponseOutput() ProjectFilePropertiesResponseOutput {
	return i.ToProjectFilePropertiesResponseOutputWithContext(context.Background())
}

func (i ProjectFilePropertiesResponseArgs) ToProjectFilePropertiesResponseOutputWithContext(ctx context.Context) ProjectFilePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectFilePropertiesResponseOutput)
}

func (i ProjectFilePropertiesResponseArgs) ToProjectFilePropertiesResponsePtrOutput() ProjectFilePropertiesResponsePtrOutput {
	return i.ToProjectFilePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ProjectFilePropertiesResponseArgs) ToProjectFilePropertiesResponsePtrOutputWithContext(ctx context.Context) ProjectFilePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectFilePropertiesResponseOutput).ToProjectFilePropertiesResponsePtrOutputWithContext(ctx)
}









type ProjectFilePropertiesResponsePtrInput interface {
	pulumi.Input

	ToProjectFilePropertiesResponsePtrOutput() ProjectFilePropertiesResponsePtrOutput
	ToProjectFilePropertiesResponsePtrOutputWithContext(context.Context) ProjectFilePropertiesResponsePtrOutput
}

type projectFilePropertiesResponsePtrType ProjectFilePropertiesResponseArgs

func ProjectFilePropertiesResponsePtr(v *ProjectFilePropertiesResponseArgs) ProjectFilePropertiesResponsePtrInput {
	return (*projectFilePropertiesResponsePtrType)(v)
}

func (*projectFilePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectFilePropertiesResponse)(nil)).Elem()
}

func (i *projectFilePropertiesResponsePtrType) ToProjectFilePropertiesResponsePtrOutput() ProjectFilePropertiesResponsePtrOutput {
	return i.ToProjectFilePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *projectFilePropertiesResponsePtrType) ToProjectFilePropertiesResponsePtrOutputWithContext(ctx context.Context) ProjectFilePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectFilePropertiesResponsePtrOutput)
}

type ProjectFilePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ProjectFilePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectFilePropertiesResponse)(nil)).Elem()
}

func (o ProjectFilePropertiesResponseOutput) ToProjectFilePropertiesResponseOutput() ProjectFilePropertiesResponseOutput {
	return o
}

func (o ProjectFilePropertiesResponseOutput) ToProjectFilePropertiesResponseOutputWithContext(ctx context.Context) ProjectFilePropertiesResponseOutput {
	return o
}

func (o ProjectFilePropertiesResponseOutput) ToProjectFilePropertiesResponsePtrOutput() ProjectFilePropertiesResponsePtrOutput {
	return o.ToProjectFilePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ProjectFilePropertiesResponseOutput) ToProjectFilePropertiesResponsePtrOutputWithContext(ctx context.Context) ProjectFilePropertiesResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectFilePropertiesResponse) *ProjectFilePropertiesResponse {
		return &v
	}).(ProjectFilePropertiesResponsePtrOutput)
}

func (o ProjectFilePropertiesResponseOutput) Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFilePropertiesResponse) *string { return v.Extension }).(pulumi.StringPtrOutput)
}

func (o ProjectFilePropertiesResponseOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFilePropertiesResponse) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

func (o ProjectFilePropertiesResponseOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectFilePropertiesResponse) string { return v.LastModified }).(pulumi.StringOutput)
}

func (o ProjectFilePropertiesResponseOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFilePropertiesResponse) *string { return v.MediaType }).(pulumi.StringPtrOutput)
}

func (o ProjectFilePropertiesResponseOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v ProjectFilePropertiesResponse) float64 { return v.Size }).(pulumi.Float64Output)
}

type ProjectFilePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ProjectFilePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectFilePropertiesResponse)(nil)).Elem()
}

func (o ProjectFilePropertiesResponsePtrOutput) ToProjectFilePropertiesResponsePtrOutput() ProjectFilePropertiesResponsePtrOutput {
	return o
}

func (o ProjectFilePropertiesResponsePtrOutput) ToProjectFilePropertiesResponsePtrOutputWithContext(ctx context.Context) ProjectFilePropertiesResponsePtrOutput {
	return o
}

func (o ProjectFilePropertiesResponsePtrOutput) Elem() ProjectFilePropertiesResponseOutput {
	return o.ApplyT(func(v *ProjectFilePropertiesResponse) ProjectFilePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ProjectFilePropertiesResponse
		return ret
	}).(ProjectFilePropertiesResponseOutput)
}

func (o ProjectFilePropertiesResponsePtrOutput) Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectFilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Extension
	}).(pulumi.StringPtrOutput)
}

func (o ProjectFilePropertiesResponsePtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectFilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

func (o ProjectFilePropertiesResponsePtrOutput) LastModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectFilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastModified
	}).(pulumi.StringPtrOutput)
}

func (o ProjectFilePropertiesResponsePtrOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectFilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.MediaType
	}).(pulumi.StringPtrOutput)
}

func (o ProjectFilePropertiesResponsePtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ProjectFilePropertiesResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.Float64PtrOutput)
}

type ReportableExceptionResponse struct {
	ActionableMessage *string `pulumi:"actionableMessage"`
	FilePath          *string `pulumi:"filePath"`
	HResult           *int    `pulumi:"hResult"`
	LineNumber        *string `pulumi:"lineNumber"`
	Message           *string `pulumi:"message"`
	StackTrace        *string `pulumi:"stackTrace"`
}





type ReportableExceptionResponseInput interface {
	pulumi.Input

	ToReportableExceptionResponseOutput() ReportableExceptionResponseOutput
	ToReportableExceptionResponseOutputWithContext(context.Context) ReportableExceptionResponseOutput
}

type ReportableExceptionResponseArgs struct {
	ActionableMessage pulumi.StringPtrInput `pulumi:"actionableMessage"`
	FilePath          pulumi.StringPtrInput `pulumi:"filePath"`
	HResult           pulumi.IntPtrInput    `pulumi:"hResult"`
	LineNumber        pulumi.StringPtrInput `pulumi:"lineNumber"`
	Message           pulumi.StringPtrInput `pulumi:"message"`
	StackTrace        pulumi.StringPtrInput `pulumi:"stackTrace"`
}

func (ReportableExceptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportableExceptionResponse)(nil)).Elem()
}

func (i ReportableExceptionResponseArgs) ToReportableExceptionResponseOutput() ReportableExceptionResponseOutput {
	return i.ToReportableExceptionResponseOutputWithContext(context.Background())
}

func (i ReportableExceptionResponseArgs) ToReportableExceptionResponseOutputWithContext(ctx context.Context) ReportableExceptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportableExceptionResponseOutput)
}





type ReportableExceptionResponseArrayInput interface {
	pulumi.Input

	ToReportableExceptionResponseArrayOutput() ReportableExceptionResponseArrayOutput
	ToReportableExceptionResponseArrayOutputWithContext(context.Context) ReportableExceptionResponseArrayOutput
}

type ReportableExceptionResponseArray []ReportableExceptionResponseInput

func (ReportableExceptionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportableExceptionResponse)(nil)).Elem()
}

func (i ReportableExceptionResponseArray) ToReportableExceptionResponseArrayOutput() ReportableExceptionResponseArrayOutput {
	return i.ToReportableExceptionResponseArrayOutputWithContext(context.Background())
}

func (i ReportableExceptionResponseArray) ToReportableExceptionResponseArrayOutputWithContext(ctx context.Context) ReportableExceptionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportableExceptionResponseArrayOutput)
}

type ReportableExceptionResponseOutput struct{ *pulumi.OutputState }

func (ReportableExceptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportableExceptionResponse)(nil)).Elem()
}

func (o ReportableExceptionResponseOutput) ToReportableExceptionResponseOutput() ReportableExceptionResponseOutput {
	return o
}

func (o ReportableExceptionResponseOutput) ToReportableExceptionResponseOutputWithContext(ctx context.Context) ReportableExceptionResponseOutput {
	return o
}

func (o ReportableExceptionResponseOutput) ActionableMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportableExceptionResponse) *string { return v.ActionableMessage }).(pulumi.StringPtrOutput)
}

func (o ReportableExceptionResponseOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportableExceptionResponse) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

func (o ReportableExceptionResponseOutput) HResult() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReportableExceptionResponse) *int { return v.HResult }).(pulumi.IntPtrOutput)
}

func (o ReportableExceptionResponseOutput) LineNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportableExceptionResponse) *string { return v.LineNumber }).(pulumi.StringPtrOutput)
}

func (o ReportableExceptionResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportableExceptionResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o ReportableExceptionResponseOutput) StackTrace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportableExceptionResponse) *string { return v.StackTrace }).(pulumi.StringPtrOutput)
}

type ReportableExceptionResponseArrayOutput struct{ *pulumi.OutputState }

func (ReportableExceptionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportableExceptionResponse)(nil)).Elem()
}

func (o ReportableExceptionResponseArrayOutput) ToReportableExceptionResponseArrayOutput() ReportableExceptionResponseArrayOutput {
	return o
}

func (o ReportableExceptionResponseArrayOutput) ToReportableExceptionResponseArrayOutputWithContext(ctx context.Context) ReportableExceptionResponseArrayOutput {
	return o
}

func (o ReportableExceptionResponseArrayOutput) Index(i pulumi.IntInput) ReportableExceptionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportableExceptionResponse {
		return vs[0].([]ReportableExceptionResponse)[vs[1].(int)]
	}).(ReportableExceptionResponseOutput)
}

type SelectedCertificateInput struct {
	CertificateName string `pulumi:"certificateName"`
	Password        string `pulumi:"password"`
}





type SelectedCertificateInputInput interface {
	pulumi.Input

	ToSelectedCertificateInputOutput() SelectedCertificateInputOutput
	ToSelectedCertificateInputOutputWithContext(context.Context) SelectedCertificateInputOutput
}

type SelectedCertificateInputArgs struct {
	CertificateName pulumi.StringInput `pulumi:"certificateName"`
	Password        pulumi.StringInput `pulumi:"password"`
}

func (SelectedCertificateInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SelectedCertificateInput)(nil)).Elem()
}

func (i SelectedCertificateInputArgs) ToSelectedCertificateInputOutput() SelectedCertificateInputOutput {
	return i.ToSelectedCertificateInputOutputWithContext(context.Background())
}

func (i SelectedCertificateInputArgs) ToSelectedCertificateInputOutputWithContext(ctx context.Context) SelectedCertificateInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelectedCertificateInputOutput)
}





type SelectedCertificateInputArrayInput interface {
	pulumi.Input

	ToSelectedCertificateInputArrayOutput() SelectedCertificateInputArrayOutput
	ToSelectedCertificateInputArrayOutputWithContext(context.Context) SelectedCertificateInputArrayOutput
}

type SelectedCertificateInputArray []SelectedCertificateInputInput

func (SelectedCertificateInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SelectedCertificateInput)(nil)).Elem()
}

func (i SelectedCertificateInputArray) ToSelectedCertificateInputArrayOutput() SelectedCertificateInputArrayOutput {
	return i.ToSelectedCertificateInputArrayOutputWithContext(context.Background())
}

func (i SelectedCertificateInputArray) ToSelectedCertificateInputArrayOutputWithContext(ctx context.Context) SelectedCertificateInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelectedCertificateInputArrayOutput)
}

type SelectedCertificateInputOutput struct{ *pulumi.OutputState }

func (SelectedCertificateInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SelectedCertificateInput)(nil)).Elem()
}

func (o SelectedCertificateInputOutput) ToSelectedCertificateInputOutput() SelectedCertificateInputOutput {
	return o
}

func (o SelectedCertificateInputOutput) ToSelectedCertificateInputOutputWithContext(ctx context.Context) SelectedCertificateInputOutput {
	return o
}

func (o SelectedCertificateInputOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v SelectedCertificateInput) string { return v.CertificateName }).(pulumi.StringOutput)
}

func (o SelectedCertificateInputOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SelectedCertificateInput) string { return v.Password }).(pulumi.StringOutput)
}

type SelectedCertificateInputArrayOutput struct{ *pulumi.OutputState }

func (SelectedCertificateInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SelectedCertificateInput)(nil)).Elem()
}

func (o SelectedCertificateInputArrayOutput) ToSelectedCertificateInputArrayOutput() SelectedCertificateInputArrayOutput {
	return o
}

func (o SelectedCertificateInputArrayOutput) ToSelectedCertificateInputArrayOutputWithContext(ctx context.Context) SelectedCertificateInputArrayOutput {
	return o
}

func (o SelectedCertificateInputArrayOutput) Index(i pulumi.IntInput) SelectedCertificateInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SelectedCertificateInput {
		return vs[0].([]SelectedCertificateInput)[vs[1].(int)]
	}).(SelectedCertificateInputOutput)
}

type SelectedCertificateInputResponse struct {
	CertificateName string `pulumi:"certificateName"`
	Password        string `pulumi:"password"`
}





type SelectedCertificateInputResponseInput interface {
	pulumi.Input

	ToSelectedCertificateInputResponseOutput() SelectedCertificateInputResponseOutput
	ToSelectedCertificateInputResponseOutputWithContext(context.Context) SelectedCertificateInputResponseOutput
}

type SelectedCertificateInputResponseArgs struct {
	CertificateName pulumi.StringInput `pulumi:"certificateName"`
	Password        pulumi.StringInput `pulumi:"password"`
}

func (SelectedCertificateInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SelectedCertificateInputResponse)(nil)).Elem()
}

func (i SelectedCertificateInputResponseArgs) ToSelectedCertificateInputResponseOutput() SelectedCertificateInputResponseOutput {
	return i.ToSelectedCertificateInputResponseOutputWithContext(context.Background())
}

func (i SelectedCertificateInputResponseArgs) ToSelectedCertificateInputResponseOutputWithContext(ctx context.Context) SelectedCertificateInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelectedCertificateInputResponseOutput)
}





type SelectedCertificateInputResponseArrayInput interface {
	pulumi.Input

	ToSelectedCertificateInputResponseArrayOutput() SelectedCertificateInputResponseArrayOutput
	ToSelectedCertificateInputResponseArrayOutputWithContext(context.Context) SelectedCertificateInputResponseArrayOutput
}

type SelectedCertificateInputResponseArray []SelectedCertificateInputResponseInput

func (SelectedCertificateInputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SelectedCertificateInputResponse)(nil)).Elem()
}

func (i SelectedCertificateInputResponseArray) ToSelectedCertificateInputResponseArrayOutput() SelectedCertificateInputResponseArrayOutput {
	return i.ToSelectedCertificateInputResponseArrayOutputWithContext(context.Background())
}

func (i SelectedCertificateInputResponseArray) ToSelectedCertificateInputResponseArrayOutputWithContext(ctx context.Context) SelectedCertificateInputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelectedCertificateInputResponseArrayOutput)
}

type SelectedCertificateInputResponseOutput struct{ *pulumi.OutputState }

func (SelectedCertificateInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SelectedCertificateInputResponse)(nil)).Elem()
}

func (o SelectedCertificateInputResponseOutput) ToSelectedCertificateInputResponseOutput() SelectedCertificateInputResponseOutput {
	return o
}

func (o SelectedCertificateInputResponseOutput) ToSelectedCertificateInputResponseOutputWithContext(ctx context.Context) SelectedCertificateInputResponseOutput {
	return o
}

func (o SelectedCertificateInputResponseOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v SelectedCertificateInputResponse) string { return v.CertificateName }).(pulumi.StringOutput)
}

func (o SelectedCertificateInputResponseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SelectedCertificateInputResponse) string { return v.Password }).(pulumi.StringOutput)
}

type SelectedCertificateInputResponseArrayOutput struct{ *pulumi.OutputState }

func (SelectedCertificateInputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SelectedCertificateInputResponse)(nil)).Elem()
}

func (o SelectedCertificateInputResponseArrayOutput) ToSelectedCertificateInputResponseArrayOutput() SelectedCertificateInputResponseArrayOutput {
	return o
}

func (o SelectedCertificateInputResponseArrayOutput) ToSelectedCertificateInputResponseArrayOutputWithContext(ctx context.Context) SelectedCertificateInputResponseArrayOutput {
	return o
}

func (o SelectedCertificateInputResponseArrayOutput) Index(i pulumi.IntInput) SelectedCertificateInputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SelectedCertificateInputResponse {
		return vs[0].([]SelectedCertificateInputResponse)[vs[1].(int)]
	}).(SelectedCertificateInputResponseOutput)
}

type ServiceSku struct {
	Capacity *int    `pulumi:"capacity"`
	Family   *string `pulumi:"family"`
	Name     *string `pulumi:"name"`
	Size     *string `pulumi:"size"`
	Tier     *string `pulumi:"tier"`
}





type ServiceSkuInput interface {
	pulumi.Input

	ToServiceSkuOutput() ServiceSkuOutput
	ToServiceSkuOutputWithContext(context.Context) ServiceSkuOutput
}

type ServiceSkuArgs struct {
	Capacity pulumi.IntPtrInput    `pulumi:"capacity"`
	Family   pulumi.StringPtrInput `pulumi:"family"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Size     pulumi.StringPtrInput `pulumi:"size"`
	Tier     pulumi.StringPtrInput `pulumi:"tier"`
}

func (ServiceSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSku)(nil)).Elem()
}

func (i ServiceSkuArgs) ToServiceSkuOutput() ServiceSkuOutput {
	return i.ToServiceSkuOutputWithContext(context.Background())
}

func (i ServiceSkuArgs) ToServiceSkuOutputWithContext(ctx context.Context) ServiceSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSkuOutput)
}

func (i ServiceSkuArgs) ToServiceSkuPtrOutput() ServiceSkuPtrOutput {
	return i.ToServiceSkuPtrOutputWithContext(context.Background())
}

func (i ServiceSkuArgs) ToServiceSkuPtrOutputWithContext(ctx context.Context) ServiceSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSkuOutput).ToServiceSkuPtrOutputWithContext(ctx)
}









type ServiceSkuPtrInput interface {
	pulumi.Input

	ToServiceSkuPtrOutput() ServiceSkuPtrOutput
	ToServiceSkuPtrOutputWithContext(context.Context) ServiceSkuPtrOutput
}

type serviceSkuPtrType ServiceSkuArgs

func ServiceSkuPtr(v *ServiceSkuArgs) ServiceSkuPtrInput {
	return (*serviceSkuPtrType)(v)
}

func (*serviceSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSku)(nil)).Elem()
}

func (i *serviceSkuPtrType) ToServiceSkuPtrOutput() ServiceSkuPtrOutput {
	return i.ToServiceSkuPtrOutputWithContext(context.Background())
}

func (i *serviceSkuPtrType) ToServiceSkuPtrOutputWithContext(ctx context.Context) ServiceSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSkuPtrOutput)
}

type ServiceSkuOutput struct{ *pulumi.OutputState }

func (ServiceSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSku)(nil)).Elem()
}

func (o ServiceSkuOutput) ToServiceSkuOutput() ServiceSkuOutput {
	return o
}

func (o ServiceSkuOutput) ToServiceSkuOutputWithContext(ctx context.Context) ServiceSkuOutput {
	return o
}

func (o ServiceSkuOutput) ToServiceSkuPtrOutput() ServiceSkuPtrOutput {
	return o.ToServiceSkuPtrOutputWithContext(context.Background())
}

func (o ServiceSkuOutput) ToServiceSkuPtrOutputWithContext(ctx context.Context) ServiceSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSku) *ServiceSku {
		return &v
	}).(ServiceSkuPtrOutput)
}

func (o ServiceSkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceSku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

func (o ServiceSkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

func (o ServiceSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ServiceSkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

func (o ServiceSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ServiceSkuPtrOutput struct{ *pulumi.OutputState }

func (ServiceSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSku)(nil)).Elem()
}

func (o ServiceSkuPtrOutput) ToServiceSkuPtrOutput() ServiceSkuPtrOutput {
	return o
}

func (o ServiceSkuPtrOutput) ToServiceSkuPtrOutputWithContext(ctx context.Context) ServiceSkuPtrOutput {
	return o
}

func (o ServiceSkuPtrOutput) Elem() ServiceSkuOutput {
	return o.ApplyT(func(v *ServiceSku) ServiceSku {
		if v != nil {
			return *v
		}
		var ret ServiceSku
		return ret
	}).(ServiceSkuOutput)
}

func (o ServiceSkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceSku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

func (o ServiceSkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

func (o ServiceSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ServiceSkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

func (o ServiceSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

type ServiceSkuResponse struct {
	Capacity *int    `pulumi:"capacity"`
	Family   *string `pulumi:"family"`
	Name     *string `pulumi:"name"`
	Size     *string `pulumi:"size"`
	Tier     *string `pulumi:"tier"`
}





type ServiceSkuResponseInput interface {
	pulumi.Input

	ToServiceSkuResponseOutput() ServiceSkuResponseOutput
	ToServiceSkuResponseOutputWithContext(context.Context) ServiceSkuResponseOutput
}

type ServiceSkuResponseArgs struct {
	Capacity pulumi.IntPtrInput    `pulumi:"capacity"`
	Family   pulumi.StringPtrInput `pulumi:"family"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Size     pulumi.StringPtrInput `pulumi:"size"`
	Tier     pulumi.StringPtrInput `pulumi:"tier"`
}

func (ServiceSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSkuResponse)(nil)).Elem()
}

func (i ServiceSkuResponseArgs) ToServiceSkuResponseOutput() ServiceSkuResponseOutput {
	return i.ToServiceSkuResponseOutputWithContext(context.Background())
}

func (i ServiceSkuResponseArgs) ToServiceSkuResponseOutputWithContext(ctx context.Context) ServiceSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSkuResponseOutput)
}

func (i ServiceSkuResponseArgs) ToServiceSkuResponsePtrOutput() ServiceSkuResponsePtrOutput {
	return i.ToServiceSkuResponsePtrOutputWithContext(context.Background())
}

func (i ServiceSkuResponseArgs) ToServiceSkuResponsePtrOutputWithContext(ctx context.Context) ServiceSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSkuResponseOutput).ToServiceSkuResponsePtrOutputWithContext(ctx)
}









type ServiceSkuResponsePtrInput interface {
	pulumi.Input

	ToServiceSkuResponsePtrOutput() ServiceSkuResponsePtrOutput
	ToServiceSkuResponsePtrOutputWithContext(context.Context) ServiceSkuResponsePtrOutput
}

type serviceSkuResponsePtrType ServiceSkuResponseArgs

func ServiceSkuResponsePtr(v *ServiceSkuResponseArgs) ServiceSkuResponsePtrInput {
	return (*serviceSkuResponsePtrType)(v)
}

func (*serviceSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSkuResponse)(nil)).Elem()
}

func (i *serviceSkuResponsePtrType) ToServiceSkuResponsePtrOutput() ServiceSkuResponsePtrOutput {
	return i.ToServiceSkuResponsePtrOutputWithContext(context.Background())
}

func (i *serviceSkuResponsePtrType) ToServiceSkuResponsePtrOutputWithContext(ctx context.Context) ServiceSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSkuResponsePtrOutput)
}

type ServiceSkuResponseOutput struct{ *pulumi.OutputState }

func (ServiceSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSkuResponse)(nil)).Elem()
}

func (o ServiceSkuResponseOutput) ToServiceSkuResponseOutput() ServiceSkuResponseOutput {
	return o
}

func (o ServiceSkuResponseOutput) ToServiceSkuResponseOutputWithContext(ctx context.Context) ServiceSkuResponseOutput {
	return o
}

func (o ServiceSkuResponseOutput) ToServiceSkuResponsePtrOutput() ServiceSkuResponsePtrOutput {
	return o.ToServiceSkuResponsePtrOutputWithContext(context.Background())
}

func (o ServiceSkuResponseOutput) ToServiceSkuResponsePtrOutputWithContext(ctx context.Context) ServiceSkuResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSkuResponse) *ServiceSkuResponse {
		return &v
	}).(ServiceSkuResponsePtrOutput)
}

func (o ServiceSkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceSkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

func (o ServiceSkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

func (o ServiceSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ServiceSkuResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSkuResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

func (o ServiceSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ServiceSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSkuResponse)(nil)).Elem()
}

func (o ServiceSkuResponsePtrOutput) ToServiceSkuResponsePtrOutput() ServiceSkuResponsePtrOutput {
	return o
}

func (o ServiceSkuResponsePtrOutput) ToServiceSkuResponsePtrOutputWithContext(ctx context.Context) ServiceSkuResponsePtrOutput {
	return o
}

func (o ServiceSkuResponsePtrOutput) Elem() ServiceSkuResponseOutput {
	return o.ApplyT(func(v *ServiceSkuResponse) ServiceSkuResponse {
		if v != nil {
			return *v
		}
		var ret ServiceSkuResponse
		return ret
	}).(ServiceSkuResponseOutput)
}

func (o ServiceSkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceSkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

func (o ServiceSkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

func (o ServiceSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ServiceSkuResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

func (o ServiceSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

type SqlConnectionInfo struct {
	AdditionalSettings     *string `pulumi:"additionalSettings"`
	Authentication         *string `pulumi:"authentication"`
	DataSource             string  `pulumi:"dataSource"`
	EncryptConnection      *bool   `pulumi:"encryptConnection"`
	Password               *string `pulumi:"password"`
	Platform               *string `pulumi:"platform"`
	TrustServerCertificate *bool   `pulumi:"trustServerCertificate"`
	Type                   string  `pulumi:"type"`
	UserName               *string `pulumi:"userName"`
}





type SqlConnectionInfoInput interface {
	pulumi.Input

	ToSqlConnectionInfoOutput() SqlConnectionInfoOutput
	ToSqlConnectionInfoOutputWithContext(context.Context) SqlConnectionInfoOutput
}

type SqlConnectionInfoArgs struct {
	AdditionalSettings     pulumi.StringPtrInput `pulumi:"additionalSettings"`
	Authentication         pulumi.StringPtrInput `pulumi:"authentication"`
	DataSource             pulumi.StringInput    `pulumi:"dataSource"`
	EncryptConnection      pulumi.BoolPtrInput   `pulumi:"encryptConnection"`
	Password               pulumi.StringPtrInput `pulumi:"password"`
	Platform               pulumi.StringPtrInput `pulumi:"platform"`
	TrustServerCertificate pulumi.BoolPtrInput   `pulumi:"trustServerCertificate"`
	Type                   pulumi.StringInput    `pulumi:"type"`
	UserName               pulumi.StringPtrInput `pulumi:"userName"`
}

func (SqlConnectionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlConnectionInfo)(nil)).Elem()
}

func (i SqlConnectionInfoArgs) ToSqlConnectionInfoOutput() SqlConnectionInfoOutput {
	return i.ToSqlConnectionInfoOutputWithContext(context.Background())
}

func (i SqlConnectionInfoArgs) ToSqlConnectionInfoOutputWithContext(ctx context.Context) SqlConnectionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectionInfoOutput)
}

func (i SqlConnectionInfoArgs) ToSqlConnectionInfoPtrOutput() SqlConnectionInfoPtrOutput {
	return i.ToSqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (i SqlConnectionInfoArgs) ToSqlConnectionInfoPtrOutputWithContext(ctx context.Context) SqlConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectionInfoOutput).ToSqlConnectionInfoPtrOutputWithContext(ctx)
}









type SqlConnectionInfoPtrInput interface {
	pulumi.Input

	ToSqlConnectionInfoPtrOutput() SqlConnectionInfoPtrOutput
	ToSqlConnectionInfoPtrOutputWithContext(context.Context) SqlConnectionInfoPtrOutput
}

type sqlConnectionInfoPtrType SqlConnectionInfoArgs

func SqlConnectionInfoPtr(v *SqlConnectionInfoArgs) SqlConnectionInfoPtrInput {
	return (*sqlConnectionInfoPtrType)(v)
}

func (*sqlConnectionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlConnectionInfo)(nil)).Elem()
}

func (i *sqlConnectionInfoPtrType) ToSqlConnectionInfoPtrOutput() SqlConnectionInfoPtrOutput {
	return i.ToSqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (i *sqlConnectionInfoPtrType) ToSqlConnectionInfoPtrOutputWithContext(ctx context.Context) SqlConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectionInfoPtrOutput)
}

type SqlConnectionInfoOutput struct{ *pulumi.OutputState }

func (SqlConnectionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlConnectionInfo)(nil)).Elem()
}

func (o SqlConnectionInfoOutput) ToSqlConnectionInfoOutput() SqlConnectionInfoOutput {
	return o
}

func (o SqlConnectionInfoOutput) ToSqlConnectionInfoOutputWithContext(ctx context.Context) SqlConnectionInfoOutput {
	return o
}

func (o SqlConnectionInfoOutput) ToSqlConnectionInfoPtrOutput() SqlConnectionInfoPtrOutput {
	return o.ToSqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (o SqlConnectionInfoOutput) ToSqlConnectionInfoPtrOutputWithContext(ctx context.Context) SqlConnectionInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlConnectionInfo) *SqlConnectionInfo {
		return &v
	}).(SqlConnectionInfoPtrOutput)
}

func (o SqlConnectionInfoOutput) AdditionalSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfo) *string { return v.AdditionalSettings }).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfo) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v SqlConnectionInfo) string { return v.DataSource }).(pulumi.StringOutput)
}

func (o SqlConnectionInfoOutput) EncryptConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfo) *bool { return v.EncryptConnection }).(pulumi.BoolPtrOutput)
}

func (o SqlConnectionInfoOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfo) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfo) *string { return v.Platform }).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoOutput) TrustServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfo) *bool { return v.TrustServerCertificate }).(pulumi.BoolPtrOutput)
}

func (o SqlConnectionInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlConnectionInfo) string { return v.Type }).(pulumi.StringOutput)
}

func (o SqlConnectionInfoOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfo) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type SqlConnectionInfoPtrOutput struct{ *pulumi.OutputState }

func (SqlConnectionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlConnectionInfo)(nil)).Elem()
}

func (o SqlConnectionInfoPtrOutput) ToSqlConnectionInfoPtrOutput() SqlConnectionInfoPtrOutput {
	return o
}

func (o SqlConnectionInfoPtrOutput) ToSqlConnectionInfoPtrOutputWithContext(ctx context.Context) SqlConnectionInfoPtrOutput {
	return o
}

func (o SqlConnectionInfoPtrOutput) Elem() SqlConnectionInfoOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) SqlConnectionInfo {
		if v != nil {
			return *v
		}
		var ret SqlConnectionInfo
		return ret
	}).(SqlConnectionInfoOutput)
}

func (o SqlConnectionInfoPtrOutput) AdditionalSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalSettings
	}).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoPtrOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoPtrOutput) EncryptConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) *bool {
		if v == nil {
			return nil
		}
		return v.EncryptConnection
	}).(pulumi.BoolPtrOutput)
}

func (o SqlConnectionInfoPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoPtrOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Platform
	}).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoPtrOutput) TrustServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) *bool {
		if v == nil {
			return nil
		}
		return v.TrustServerCertificate
	}).(pulumi.BoolPtrOutput)
}

func (o SqlConnectionInfoPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type SqlConnectionInfoResponse struct {
	AdditionalSettings     *string `pulumi:"additionalSettings"`
	Authentication         *string `pulumi:"authentication"`
	DataSource             string  `pulumi:"dataSource"`
	EncryptConnection      *bool   `pulumi:"encryptConnection"`
	Password               *string `pulumi:"password"`
	Platform               *string `pulumi:"platform"`
	TrustServerCertificate *bool   `pulumi:"trustServerCertificate"`
	Type                   string  `pulumi:"type"`
	UserName               *string `pulumi:"userName"`
}





type SqlConnectionInfoResponseInput interface {
	pulumi.Input

	ToSqlConnectionInfoResponseOutput() SqlConnectionInfoResponseOutput
	ToSqlConnectionInfoResponseOutputWithContext(context.Context) SqlConnectionInfoResponseOutput
}

type SqlConnectionInfoResponseArgs struct {
	AdditionalSettings     pulumi.StringPtrInput `pulumi:"additionalSettings"`
	Authentication         pulumi.StringPtrInput `pulumi:"authentication"`
	DataSource             pulumi.StringInput    `pulumi:"dataSource"`
	EncryptConnection      pulumi.BoolPtrInput   `pulumi:"encryptConnection"`
	Password               pulumi.StringPtrInput `pulumi:"password"`
	Platform               pulumi.StringPtrInput `pulumi:"platform"`
	TrustServerCertificate pulumi.BoolPtrInput   `pulumi:"trustServerCertificate"`
	Type                   pulumi.StringInput    `pulumi:"type"`
	UserName               pulumi.StringPtrInput `pulumi:"userName"`
}

func (SqlConnectionInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlConnectionInfoResponse)(nil)).Elem()
}

func (i SqlConnectionInfoResponseArgs) ToSqlConnectionInfoResponseOutput() SqlConnectionInfoResponseOutput {
	return i.ToSqlConnectionInfoResponseOutputWithContext(context.Background())
}

func (i SqlConnectionInfoResponseArgs) ToSqlConnectionInfoResponseOutputWithContext(ctx context.Context) SqlConnectionInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectionInfoResponseOutput)
}

func (i SqlConnectionInfoResponseArgs) ToSqlConnectionInfoResponsePtrOutput() SqlConnectionInfoResponsePtrOutput {
	return i.ToSqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i SqlConnectionInfoResponseArgs) ToSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) SqlConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectionInfoResponseOutput).ToSqlConnectionInfoResponsePtrOutputWithContext(ctx)
}









type SqlConnectionInfoResponsePtrInput interface {
	pulumi.Input

	ToSqlConnectionInfoResponsePtrOutput() SqlConnectionInfoResponsePtrOutput
	ToSqlConnectionInfoResponsePtrOutputWithContext(context.Context) SqlConnectionInfoResponsePtrOutput
}

type sqlConnectionInfoResponsePtrType SqlConnectionInfoResponseArgs

func SqlConnectionInfoResponsePtr(v *SqlConnectionInfoResponseArgs) SqlConnectionInfoResponsePtrInput {
	return (*sqlConnectionInfoResponsePtrType)(v)
}

func (*sqlConnectionInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlConnectionInfoResponse)(nil)).Elem()
}

func (i *sqlConnectionInfoResponsePtrType) ToSqlConnectionInfoResponsePtrOutput() SqlConnectionInfoResponsePtrOutput {
	return i.ToSqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i *sqlConnectionInfoResponsePtrType) ToSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) SqlConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectionInfoResponsePtrOutput)
}

type SqlConnectionInfoResponseOutput struct{ *pulumi.OutputState }

func (SqlConnectionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlConnectionInfoResponse)(nil)).Elem()
}

func (o SqlConnectionInfoResponseOutput) ToSqlConnectionInfoResponseOutput() SqlConnectionInfoResponseOutput {
	return o
}

func (o SqlConnectionInfoResponseOutput) ToSqlConnectionInfoResponseOutputWithContext(ctx context.Context) SqlConnectionInfoResponseOutput {
	return o
}

func (o SqlConnectionInfoResponseOutput) ToSqlConnectionInfoResponsePtrOutput() SqlConnectionInfoResponsePtrOutput {
	return o.ToSqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (o SqlConnectionInfoResponseOutput) ToSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) SqlConnectionInfoResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlConnectionInfoResponse) *SqlConnectionInfoResponse {
		return &v
	}).(SqlConnectionInfoResponsePtrOutput)
}

func (o SqlConnectionInfoResponseOutput) AdditionalSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) *string { return v.AdditionalSettings }).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoResponseOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoResponseOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) string { return v.DataSource }).(pulumi.StringOutput)
}

func (o SqlConnectionInfoResponseOutput) EncryptConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) *bool { return v.EncryptConnection }).(pulumi.BoolPtrOutput)
}

func (o SqlConnectionInfoResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoResponseOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) *string { return v.Platform }).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoResponseOutput) TrustServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) *bool { return v.TrustServerCertificate }).(pulumi.BoolPtrOutput)
}

func (o SqlConnectionInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

func (o SqlConnectionInfoResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type SqlConnectionInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (SqlConnectionInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlConnectionInfoResponse)(nil)).Elem()
}

func (o SqlConnectionInfoResponsePtrOutput) ToSqlConnectionInfoResponsePtrOutput() SqlConnectionInfoResponsePtrOutput {
	return o
}

func (o SqlConnectionInfoResponsePtrOutput) ToSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) SqlConnectionInfoResponsePtrOutput {
	return o
}

func (o SqlConnectionInfoResponsePtrOutput) Elem() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) SqlConnectionInfoResponse {
		if v != nil {
			return *v
		}
		var ret SqlConnectionInfoResponse
		return ret
	}).(SqlConnectionInfoResponseOutput)
}

func (o SqlConnectionInfoResponsePtrOutput) AdditionalSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalSettings
	}).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoResponsePtrOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoResponsePtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoResponsePtrOutput) EncryptConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EncryptConnection
	}).(pulumi.BoolPtrOutput)
}

func (o SqlConnectionInfoResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoResponsePtrOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Platform
	}).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoResponsePtrOutput) TrustServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.TrustServerCertificate
	}).(pulumi.BoolPtrOutput)
}

func (o SqlConnectionInfoResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o SqlConnectionInfoResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type SsisMigrationInfo struct {
	EnvironmentOverwriteOption *string `pulumi:"environmentOverwriteOption"`
	ProjectOverwriteOption     *string `pulumi:"projectOverwriteOption"`
	SsisStoreType              *string `pulumi:"ssisStoreType"`
}





type SsisMigrationInfoInput interface {
	pulumi.Input

	ToSsisMigrationInfoOutput() SsisMigrationInfoOutput
	ToSsisMigrationInfoOutputWithContext(context.Context) SsisMigrationInfoOutput
}

type SsisMigrationInfoArgs struct {
	EnvironmentOverwriteOption pulumi.StringPtrInput `pulumi:"environmentOverwriteOption"`
	ProjectOverwriteOption     pulumi.StringPtrInput `pulumi:"projectOverwriteOption"`
	SsisStoreType              pulumi.StringPtrInput `pulumi:"ssisStoreType"`
}

func (SsisMigrationInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SsisMigrationInfo)(nil)).Elem()
}

func (i SsisMigrationInfoArgs) ToSsisMigrationInfoOutput() SsisMigrationInfoOutput {
	return i.ToSsisMigrationInfoOutputWithContext(context.Background())
}

func (i SsisMigrationInfoArgs) ToSsisMigrationInfoOutputWithContext(ctx context.Context) SsisMigrationInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsisMigrationInfoOutput)
}

func (i SsisMigrationInfoArgs) ToSsisMigrationInfoPtrOutput() SsisMigrationInfoPtrOutput {
	return i.ToSsisMigrationInfoPtrOutputWithContext(context.Background())
}

func (i SsisMigrationInfoArgs) ToSsisMigrationInfoPtrOutputWithContext(ctx context.Context) SsisMigrationInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsisMigrationInfoOutput).ToSsisMigrationInfoPtrOutputWithContext(ctx)
}









type SsisMigrationInfoPtrInput interface {
	pulumi.Input

	ToSsisMigrationInfoPtrOutput() SsisMigrationInfoPtrOutput
	ToSsisMigrationInfoPtrOutputWithContext(context.Context) SsisMigrationInfoPtrOutput
}

type ssisMigrationInfoPtrType SsisMigrationInfoArgs

func SsisMigrationInfoPtr(v *SsisMigrationInfoArgs) SsisMigrationInfoPtrInput {
	return (*ssisMigrationInfoPtrType)(v)
}

func (*ssisMigrationInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SsisMigrationInfo)(nil)).Elem()
}

func (i *ssisMigrationInfoPtrType) ToSsisMigrationInfoPtrOutput() SsisMigrationInfoPtrOutput {
	return i.ToSsisMigrationInfoPtrOutputWithContext(context.Background())
}

func (i *ssisMigrationInfoPtrType) ToSsisMigrationInfoPtrOutputWithContext(ctx context.Context) SsisMigrationInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsisMigrationInfoPtrOutput)
}

type SsisMigrationInfoOutput struct{ *pulumi.OutputState }

func (SsisMigrationInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsisMigrationInfo)(nil)).Elem()
}

func (o SsisMigrationInfoOutput) ToSsisMigrationInfoOutput() SsisMigrationInfoOutput {
	return o
}

func (o SsisMigrationInfoOutput) ToSsisMigrationInfoOutputWithContext(ctx context.Context) SsisMigrationInfoOutput {
	return o
}

func (o SsisMigrationInfoOutput) ToSsisMigrationInfoPtrOutput() SsisMigrationInfoPtrOutput {
	return o.ToSsisMigrationInfoPtrOutputWithContext(context.Background())
}

func (o SsisMigrationInfoOutput) ToSsisMigrationInfoPtrOutputWithContext(ctx context.Context) SsisMigrationInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SsisMigrationInfo) *SsisMigrationInfo {
		return &v
	}).(SsisMigrationInfoPtrOutput)
}

func (o SsisMigrationInfoOutput) EnvironmentOverwriteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsisMigrationInfo) *string { return v.EnvironmentOverwriteOption }).(pulumi.StringPtrOutput)
}

func (o SsisMigrationInfoOutput) ProjectOverwriteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsisMigrationInfo) *string { return v.ProjectOverwriteOption }).(pulumi.StringPtrOutput)
}

func (o SsisMigrationInfoOutput) SsisStoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsisMigrationInfo) *string { return v.SsisStoreType }).(pulumi.StringPtrOutput)
}

type SsisMigrationInfoPtrOutput struct{ *pulumi.OutputState }

func (SsisMigrationInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SsisMigrationInfo)(nil)).Elem()
}

func (o SsisMigrationInfoPtrOutput) ToSsisMigrationInfoPtrOutput() SsisMigrationInfoPtrOutput {
	return o
}

func (o SsisMigrationInfoPtrOutput) ToSsisMigrationInfoPtrOutputWithContext(ctx context.Context) SsisMigrationInfoPtrOutput {
	return o
}

func (o SsisMigrationInfoPtrOutput) Elem() SsisMigrationInfoOutput {
	return o.ApplyT(func(v *SsisMigrationInfo) SsisMigrationInfo {
		if v != nil {
			return *v
		}
		var ret SsisMigrationInfo
		return ret
	}).(SsisMigrationInfoOutput)
}

func (o SsisMigrationInfoPtrOutput) EnvironmentOverwriteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsisMigrationInfo) *string {
		if v == nil {
			return nil
		}
		return v.EnvironmentOverwriteOption
	}).(pulumi.StringPtrOutput)
}

func (o SsisMigrationInfoPtrOutput) ProjectOverwriteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsisMigrationInfo) *string {
		if v == nil {
			return nil
		}
		return v.ProjectOverwriteOption
	}).(pulumi.StringPtrOutput)
}

func (o SsisMigrationInfoPtrOutput) SsisStoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsisMigrationInfo) *string {
		if v == nil {
			return nil
		}
		return v.SsisStoreType
	}).(pulumi.StringPtrOutput)
}

type SsisMigrationInfoResponse struct {
	EnvironmentOverwriteOption *string `pulumi:"environmentOverwriteOption"`
	ProjectOverwriteOption     *string `pulumi:"projectOverwriteOption"`
	SsisStoreType              *string `pulumi:"ssisStoreType"`
}





type SsisMigrationInfoResponseInput interface {
	pulumi.Input

	ToSsisMigrationInfoResponseOutput() SsisMigrationInfoResponseOutput
	ToSsisMigrationInfoResponseOutputWithContext(context.Context) SsisMigrationInfoResponseOutput
}

type SsisMigrationInfoResponseArgs struct {
	EnvironmentOverwriteOption pulumi.StringPtrInput `pulumi:"environmentOverwriteOption"`
	ProjectOverwriteOption     pulumi.StringPtrInput `pulumi:"projectOverwriteOption"`
	SsisStoreType              pulumi.StringPtrInput `pulumi:"ssisStoreType"`
}

func (SsisMigrationInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SsisMigrationInfoResponse)(nil)).Elem()
}

func (i SsisMigrationInfoResponseArgs) ToSsisMigrationInfoResponseOutput() SsisMigrationInfoResponseOutput {
	return i.ToSsisMigrationInfoResponseOutputWithContext(context.Background())
}

func (i SsisMigrationInfoResponseArgs) ToSsisMigrationInfoResponseOutputWithContext(ctx context.Context) SsisMigrationInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsisMigrationInfoResponseOutput)
}

func (i SsisMigrationInfoResponseArgs) ToSsisMigrationInfoResponsePtrOutput() SsisMigrationInfoResponsePtrOutput {
	return i.ToSsisMigrationInfoResponsePtrOutputWithContext(context.Background())
}

func (i SsisMigrationInfoResponseArgs) ToSsisMigrationInfoResponsePtrOutputWithContext(ctx context.Context) SsisMigrationInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsisMigrationInfoResponseOutput).ToSsisMigrationInfoResponsePtrOutputWithContext(ctx)
}









type SsisMigrationInfoResponsePtrInput interface {
	pulumi.Input

	ToSsisMigrationInfoResponsePtrOutput() SsisMigrationInfoResponsePtrOutput
	ToSsisMigrationInfoResponsePtrOutputWithContext(context.Context) SsisMigrationInfoResponsePtrOutput
}

type ssisMigrationInfoResponsePtrType SsisMigrationInfoResponseArgs

func SsisMigrationInfoResponsePtr(v *SsisMigrationInfoResponseArgs) SsisMigrationInfoResponsePtrInput {
	return (*ssisMigrationInfoResponsePtrType)(v)
}

func (*ssisMigrationInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SsisMigrationInfoResponse)(nil)).Elem()
}

func (i *ssisMigrationInfoResponsePtrType) ToSsisMigrationInfoResponsePtrOutput() SsisMigrationInfoResponsePtrOutput {
	return i.ToSsisMigrationInfoResponsePtrOutputWithContext(context.Background())
}

func (i *ssisMigrationInfoResponsePtrType) ToSsisMigrationInfoResponsePtrOutputWithContext(ctx context.Context) SsisMigrationInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsisMigrationInfoResponsePtrOutput)
}

type SsisMigrationInfoResponseOutput struct{ *pulumi.OutputState }

func (SsisMigrationInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsisMigrationInfoResponse)(nil)).Elem()
}

func (o SsisMigrationInfoResponseOutput) ToSsisMigrationInfoResponseOutput() SsisMigrationInfoResponseOutput {
	return o
}

func (o SsisMigrationInfoResponseOutput) ToSsisMigrationInfoResponseOutputWithContext(ctx context.Context) SsisMigrationInfoResponseOutput {
	return o
}

func (o SsisMigrationInfoResponseOutput) ToSsisMigrationInfoResponsePtrOutput() SsisMigrationInfoResponsePtrOutput {
	return o.ToSsisMigrationInfoResponsePtrOutputWithContext(context.Background())
}

func (o SsisMigrationInfoResponseOutput) ToSsisMigrationInfoResponsePtrOutputWithContext(ctx context.Context) SsisMigrationInfoResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SsisMigrationInfoResponse) *SsisMigrationInfoResponse {
		return &v
	}).(SsisMigrationInfoResponsePtrOutput)
}

func (o SsisMigrationInfoResponseOutput) EnvironmentOverwriteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsisMigrationInfoResponse) *string { return v.EnvironmentOverwriteOption }).(pulumi.StringPtrOutput)
}

func (o SsisMigrationInfoResponseOutput) ProjectOverwriteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsisMigrationInfoResponse) *string { return v.ProjectOverwriteOption }).(pulumi.StringPtrOutput)
}

func (o SsisMigrationInfoResponseOutput) SsisStoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsisMigrationInfoResponse) *string { return v.SsisStoreType }).(pulumi.StringPtrOutput)
}

type SsisMigrationInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (SsisMigrationInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SsisMigrationInfoResponse)(nil)).Elem()
}

func (o SsisMigrationInfoResponsePtrOutput) ToSsisMigrationInfoResponsePtrOutput() SsisMigrationInfoResponsePtrOutput {
	return o
}

func (o SsisMigrationInfoResponsePtrOutput) ToSsisMigrationInfoResponsePtrOutputWithContext(ctx context.Context) SsisMigrationInfoResponsePtrOutput {
	return o
}

func (o SsisMigrationInfoResponsePtrOutput) Elem() SsisMigrationInfoResponseOutput {
	return o.ApplyT(func(v *SsisMigrationInfoResponse) SsisMigrationInfoResponse {
		if v != nil {
			return *v
		}
		var ret SsisMigrationInfoResponse
		return ret
	}).(SsisMigrationInfoResponseOutput)
}

func (o SsisMigrationInfoResponsePtrOutput) EnvironmentOverwriteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsisMigrationInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnvironmentOverwriteOption
	}).(pulumi.StringPtrOutput)
}

func (o SsisMigrationInfoResponsePtrOutput) ProjectOverwriteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsisMigrationInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProjectOverwriteOption
	}).(pulumi.StringPtrOutput)
}

func (o SsisMigrationInfoResponsePtrOutput) SsisStoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsisMigrationInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.SsisStoreType
	}).(pulumi.StringPtrOutput)
}

type StartMigrationScenarioServerRoleResultResponse struct {
	ExceptionsAndWarnings []ReportableExceptionResponse `pulumi:"exceptionsAndWarnings"`
	Name                  string                        `pulumi:"name"`
	State                 string                        `pulumi:"state"`
}





type StartMigrationScenarioServerRoleResultResponseInput interface {
	pulumi.Input

	ToStartMigrationScenarioServerRoleResultResponseOutput() StartMigrationScenarioServerRoleResultResponseOutput
	ToStartMigrationScenarioServerRoleResultResponseOutputWithContext(context.Context) StartMigrationScenarioServerRoleResultResponseOutput
}

type StartMigrationScenarioServerRoleResultResponseArgs struct {
	ExceptionsAndWarnings ReportableExceptionResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	Name                  pulumi.StringInput                    `pulumi:"name"`
	State                 pulumi.StringInput                    `pulumi:"state"`
}

func (StartMigrationScenarioServerRoleResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StartMigrationScenarioServerRoleResultResponse)(nil)).Elem()
}

func (i StartMigrationScenarioServerRoleResultResponseArgs) ToStartMigrationScenarioServerRoleResultResponseOutput() StartMigrationScenarioServerRoleResultResponseOutput {
	return i.ToStartMigrationScenarioServerRoleResultResponseOutputWithContext(context.Background())
}

func (i StartMigrationScenarioServerRoleResultResponseArgs) ToStartMigrationScenarioServerRoleResultResponseOutputWithContext(ctx context.Context) StartMigrationScenarioServerRoleResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StartMigrationScenarioServerRoleResultResponseOutput)
}





type StartMigrationScenarioServerRoleResultResponseMapInput interface {
	pulumi.Input

	ToStartMigrationScenarioServerRoleResultResponseMapOutput() StartMigrationScenarioServerRoleResultResponseMapOutput
	ToStartMigrationScenarioServerRoleResultResponseMapOutputWithContext(context.Context) StartMigrationScenarioServerRoleResultResponseMapOutput
}

type StartMigrationScenarioServerRoleResultResponseMap map[string]StartMigrationScenarioServerRoleResultResponseInput

func (StartMigrationScenarioServerRoleResultResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StartMigrationScenarioServerRoleResultResponse)(nil)).Elem()
}

func (i StartMigrationScenarioServerRoleResultResponseMap) ToStartMigrationScenarioServerRoleResultResponseMapOutput() StartMigrationScenarioServerRoleResultResponseMapOutput {
	return i.ToStartMigrationScenarioServerRoleResultResponseMapOutputWithContext(context.Background())
}

func (i StartMigrationScenarioServerRoleResultResponseMap) ToStartMigrationScenarioServerRoleResultResponseMapOutputWithContext(ctx context.Context) StartMigrationScenarioServerRoleResultResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StartMigrationScenarioServerRoleResultResponseMapOutput)
}

type StartMigrationScenarioServerRoleResultResponseOutput struct{ *pulumi.OutputState }

func (StartMigrationScenarioServerRoleResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StartMigrationScenarioServerRoleResultResponse)(nil)).Elem()
}

func (o StartMigrationScenarioServerRoleResultResponseOutput) ToStartMigrationScenarioServerRoleResultResponseOutput() StartMigrationScenarioServerRoleResultResponseOutput {
	return o
}

func (o StartMigrationScenarioServerRoleResultResponseOutput) ToStartMigrationScenarioServerRoleResultResponseOutputWithContext(ctx context.Context) StartMigrationScenarioServerRoleResultResponseOutput {
	return o
}

func (o StartMigrationScenarioServerRoleResultResponseOutput) ExceptionsAndWarnings() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v StartMigrationScenarioServerRoleResultResponse) []ReportableExceptionResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionResponseArrayOutput)
}

func (o StartMigrationScenarioServerRoleResultResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StartMigrationScenarioServerRoleResultResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o StartMigrationScenarioServerRoleResultResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v StartMigrationScenarioServerRoleResultResponse) string { return v.State }).(pulumi.StringOutput)
}

type StartMigrationScenarioServerRoleResultResponseMapOutput struct{ *pulumi.OutputState }

func (StartMigrationScenarioServerRoleResultResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StartMigrationScenarioServerRoleResultResponse)(nil)).Elem()
}

func (o StartMigrationScenarioServerRoleResultResponseMapOutput) ToStartMigrationScenarioServerRoleResultResponseMapOutput() StartMigrationScenarioServerRoleResultResponseMapOutput {
	return o
}

func (o StartMigrationScenarioServerRoleResultResponseMapOutput) ToStartMigrationScenarioServerRoleResultResponseMapOutputWithContext(ctx context.Context) StartMigrationScenarioServerRoleResultResponseMapOutput {
	return o
}

func (o StartMigrationScenarioServerRoleResultResponseMapOutput) MapIndex(k pulumi.StringInput) StartMigrationScenarioServerRoleResultResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) StartMigrationScenarioServerRoleResultResponse {
		return vs[0].(map[string]StartMigrationScenarioServerRoleResultResponse)[vs[1].(string)]
	}).(StartMigrationScenarioServerRoleResultResponseOutput)
}

type SyncMigrationDatabaseErrorEventResponse struct {
	EventText       string `pulumi:"eventText"`
	EventTypeString string `pulumi:"eventTypeString"`
	TimestampString string `pulumi:"timestampString"`
}





type SyncMigrationDatabaseErrorEventResponseInput interface {
	pulumi.Input

	ToSyncMigrationDatabaseErrorEventResponseOutput() SyncMigrationDatabaseErrorEventResponseOutput
	ToSyncMigrationDatabaseErrorEventResponseOutputWithContext(context.Context) SyncMigrationDatabaseErrorEventResponseOutput
}

type SyncMigrationDatabaseErrorEventResponseArgs struct {
	EventText       pulumi.StringInput `pulumi:"eventText"`
	EventTypeString pulumi.StringInput `pulumi:"eventTypeString"`
	TimestampString pulumi.StringInput `pulumi:"timestampString"`
}

func (SyncMigrationDatabaseErrorEventResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyncMigrationDatabaseErrorEventResponse)(nil)).Elem()
}

func (i SyncMigrationDatabaseErrorEventResponseArgs) ToSyncMigrationDatabaseErrorEventResponseOutput() SyncMigrationDatabaseErrorEventResponseOutput {
	return i.ToSyncMigrationDatabaseErrorEventResponseOutputWithContext(context.Background())
}

func (i SyncMigrationDatabaseErrorEventResponseArgs) ToSyncMigrationDatabaseErrorEventResponseOutputWithContext(ctx context.Context) SyncMigrationDatabaseErrorEventResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyncMigrationDatabaseErrorEventResponseOutput)
}





type SyncMigrationDatabaseErrorEventResponseArrayInput interface {
	pulumi.Input

	ToSyncMigrationDatabaseErrorEventResponseArrayOutput() SyncMigrationDatabaseErrorEventResponseArrayOutput
	ToSyncMigrationDatabaseErrorEventResponseArrayOutputWithContext(context.Context) SyncMigrationDatabaseErrorEventResponseArrayOutput
}

type SyncMigrationDatabaseErrorEventResponseArray []SyncMigrationDatabaseErrorEventResponseInput

func (SyncMigrationDatabaseErrorEventResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyncMigrationDatabaseErrorEventResponse)(nil)).Elem()
}

func (i SyncMigrationDatabaseErrorEventResponseArray) ToSyncMigrationDatabaseErrorEventResponseArrayOutput() SyncMigrationDatabaseErrorEventResponseArrayOutput {
	return i.ToSyncMigrationDatabaseErrorEventResponseArrayOutputWithContext(context.Background())
}

func (i SyncMigrationDatabaseErrorEventResponseArray) ToSyncMigrationDatabaseErrorEventResponseArrayOutputWithContext(ctx context.Context) SyncMigrationDatabaseErrorEventResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyncMigrationDatabaseErrorEventResponseArrayOutput)
}

type SyncMigrationDatabaseErrorEventResponseOutput struct{ *pulumi.OutputState }

func (SyncMigrationDatabaseErrorEventResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyncMigrationDatabaseErrorEventResponse)(nil)).Elem()
}

func (o SyncMigrationDatabaseErrorEventResponseOutput) ToSyncMigrationDatabaseErrorEventResponseOutput() SyncMigrationDatabaseErrorEventResponseOutput {
	return o
}

func (o SyncMigrationDatabaseErrorEventResponseOutput) ToSyncMigrationDatabaseErrorEventResponseOutputWithContext(ctx context.Context) SyncMigrationDatabaseErrorEventResponseOutput {
	return o
}

func (o SyncMigrationDatabaseErrorEventResponseOutput) EventText() pulumi.StringOutput {
	return o.ApplyT(func(v SyncMigrationDatabaseErrorEventResponse) string { return v.EventText }).(pulumi.StringOutput)
}

func (o SyncMigrationDatabaseErrorEventResponseOutput) EventTypeString() pulumi.StringOutput {
	return o.ApplyT(func(v SyncMigrationDatabaseErrorEventResponse) string { return v.EventTypeString }).(pulumi.StringOutput)
}

func (o SyncMigrationDatabaseErrorEventResponseOutput) TimestampString() pulumi.StringOutput {
	return o.ApplyT(func(v SyncMigrationDatabaseErrorEventResponse) string { return v.TimestampString }).(pulumi.StringOutput)
}

type SyncMigrationDatabaseErrorEventResponseArrayOutput struct{ *pulumi.OutputState }

func (SyncMigrationDatabaseErrorEventResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyncMigrationDatabaseErrorEventResponse)(nil)).Elem()
}

func (o SyncMigrationDatabaseErrorEventResponseArrayOutput) ToSyncMigrationDatabaseErrorEventResponseArrayOutput() SyncMigrationDatabaseErrorEventResponseArrayOutput {
	return o
}

func (o SyncMigrationDatabaseErrorEventResponseArrayOutput) ToSyncMigrationDatabaseErrorEventResponseArrayOutputWithContext(ctx context.Context) SyncMigrationDatabaseErrorEventResponseArrayOutput {
	return o
}

func (o SyncMigrationDatabaseErrorEventResponseArrayOutput) Index(i pulumi.IntInput) SyncMigrationDatabaseErrorEventResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyncMigrationDatabaseErrorEventResponse {
		return vs[0].([]SyncMigrationDatabaseErrorEventResponse)[vs[1].(int)]
	}).(SyncMigrationDatabaseErrorEventResponseOutput)
}

type ValidateMigrationInputSqlServerSqlDbSyncTaskProperties struct {
	ClientData map[string]string                             `pulumi:"clientData"`
	Input      *ValidateSyncMigrationInputSqlServerTaskInput `pulumi:"input"`
	TaskType   string                                        `pulumi:"taskType"`
}





type ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput() ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput
	ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput
}

type ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                                `pulumi:"clientData"`
	Input      ValidateSyncMigrationInputSqlServerTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                                   `pulumi:"taskType"`
}

func (ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlDbSyncTaskProperties)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesArgs) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput() ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput {
	return i.ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesArgs) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput)
}

type ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlDbSyncTaskProperties)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput() ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput) Input() ValidateSyncMigrationInputSqlServerTaskInputPtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskProperties) *ValidateSyncMigrationInputSqlServerTaskInput {
		return v.Input
	}).(ValidateSyncMigrationInputSqlServerTaskInputPtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse struct {
	ClientData map[string]string                                       `pulumi:"clientData"`
	Commands   []interface{}                                           `pulumi:"commands"`
	Errors     []ODataErrorResponse                                    `pulumi:"errors"`
	Input      *ValidateSyncMigrationInputSqlServerTaskInputResponse   `pulumi:"input"`
	Output     []ValidateSyncMigrationInputSqlServerTaskOutputResponse `pulumi:"output"`
	State      string                                                  `pulumi:"state"`
	TaskType   string                                                  `pulumi:"taskType"`
}





type ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput() ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput
	ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput
}

type ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                                           `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                               `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                                    `pulumi:"errors"`
	Input      ValidateSyncMigrationInputSqlServerTaskInputResponsePtrInput    `pulumi:"input"`
	Output     ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayInput `pulumi:"output"`
	State      pulumi.StringInput                                              `pulumi:"state"`
	TaskType   pulumi.StringInput                                              `pulumi:"taskType"`
}

func (ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseArgs) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput() ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseArgs) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput)
}

type ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput() ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse) map[string]string {
		return v.ClientData
	}).(pulumi.StringMapOutput)
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse) []interface{} {
		return v.Commands
	}).(pulumi.ArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse) []ODataErrorResponse {
		return v.Errors
	}).(ODataErrorResponseArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) Input() ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse) *ValidateSyncMigrationInputSqlServerTaskInputResponse {
		return v.Input
	}).(ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) Output() ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse) []ValidateSyncMigrationInputSqlServerTaskOutputResponse {
		return v.Output
	}).(ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type ValidateMigrationInputSqlServerSqlMISyncTaskInput struct {
	AzureApp             AzureActiveDirectoryApp              `pulumi:"azureApp"`
	BackupFileShare      *FileShare                           `pulumi:"backupFileShare"`
	SelectedDatabases    []MigrateSqlServerSqlMIDatabaseInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfo                    `pulumi:"sourceConnectionInfo"`
	StorageResourceId    string                               `pulumi:"storageResourceId"`
	TargetConnectionInfo MiSqlConnectionInfo                  `pulumi:"targetConnectionInfo"`
}





type ValidateMigrationInputSqlServerSqlMISyncTaskInputInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskInputOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskInputOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput
}

type ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs struct {
	AzureApp             AzureActiveDirectoryAppInput                 `pulumi:"azureApp"`
	BackupFileShare      FileSharePtrInput                            `pulumi:"backupFileShare"`
	SelectedDatabases    MigrateSqlServerSqlMIDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfoInput                       `pulumi:"sourceConnectionInfo"`
	StorageResourceId    pulumi.StringInput                           `pulumi:"storageResourceId"`
	TargetConnectionInfo MiSqlConnectionInfoInput                     `pulumi:"targetConnectionInfo"`
}

func (ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskInput)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskInputOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput)
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput).ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx)
}









type ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput
}

type validateMigrationInputSqlServerSqlMISyncTaskInputPtrType ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs

func ValidateMigrationInputSqlServerSqlMISyncTaskInputPtr(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs) ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrInput {
	return (*validateMigrationInputSqlServerSqlMISyncTaskInputPtrType)(v)
}

func (*validateMigrationInputSqlServerSqlMISyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMISyncTaskInput)(nil)).Elem()
}

func (i *validateMigrationInputSqlServerSqlMISyncTaskInputPtrType) ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *validateMigrationInputSqlServerSqlMISyncTaskInputPtrType) ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput)
}

type ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskInput)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput {
	return o.ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutputWithContext(context.Background())
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ValidateMigrationInputSqlServerSqlMISyncTaskInput) *ValidateMigrationInputSqlServerSqlMISyncTaskInput {
		return &v
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) AzureApp() AzureActiveDirectoryAppOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInput) AzureActiveDirectoryApp { return v.AzureApp }).(AzureActiveDirectoryAppOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInput) *FileShare { return v.BackupFileShare }).(FileSharePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInput) []MigrateSqlServerSqlMIDatabaseInput {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInput) SqlConnectionInfo {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) StorageResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInput) string { return v.StorageResourceId }).(pulumi.StringOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) TargetConnectionInfo() MiSqlConnectionInfoOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInput) MiSqlConnectionInfo {
		return v.TargetConnectionInfo
	}).(MiSqlConnectionInfoOutput)
}

type ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMISyncTaskInput)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) Elem() ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInput) ValidateMigrationInputSqlServerSqlMISyncTaskInput {
		if v != nil {
			return *v
		}
		var ret ValidateMigrationInputSqlServerSqlMISyncTaskInput
		return ret
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) AzureApp() AzureActiveDirectoryAppPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInput) *AzureActiveDirectoryApp {
		if v == nil {
			return nil
		}
		return &v.AzureApp
	}).(AzureActiveDirectoryAppPtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInput) *FileShare {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileSharePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInput) []MigrateSqlServerSqlMIDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) StorageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInput) *string {
		if v == nil {
			return nil
		}
		return &v.StorageResourceId
	}).(pulumi.StringPtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) TargetConnectionInfo() MiSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInput) *MiSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MiSqlConnectionInfoPtrOutput)
}

type ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse struct {
	AzureApp             AzureActiveDirectoryAppResponse              `pulumi:"azureApp"`
	BackupFileShare      *FileShareResponse                           `pulumi:"backupFileShare"`
	SelectedDatabases    []MigrateSqlServerSqlMIDatabaseInputResponse `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfoResponse                    `pulumi:"sourceConnectionInfo"`
	StorageResourceId    string                                       `pulumi:"storageResourceId"`
	TargetConnectionInfo MiSqlConnectionInfoResponse                  `pulumi:"targetConnectionInfo"`
}





type ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput
}

type ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs struct {
	AzureApp             AzureActiveDirectoryAppResponseInput                 `pulumi:"azureApp"`
	BackupFileShare      FileShareResponsePtrInput                            `pulumi:"backupFileShare"`
	SelectedDatabases    MigrateSqlServerSqlMIDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfoResponseInput                       `pulumi:"sourceConnectionInfo"`
	StorageResourceId    pulumi.StringInput                                   `pulumi:"storageResourceId"`
	TargetConnectionInfo MiSqlConnectionInfoResponseInput                     `pulumi:"targetConnectionInfo"`
}

func (ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput)
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput).ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx)
}









type ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput
}

type validateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrType ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs

func ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtr(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrInput {
	return (*validateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrType)(v)
}

func (*validateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (i *validateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrType) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *validateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrType) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput)
}

type ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o.ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse {
		return &v
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) AzureApp() AzureActiveDirectoryAppResponseOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) AzureActiveDirectoryAppResponse {
		return v.AzureApp
	}).(AzureActiveDirectoryAppResponseOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) *FileShareResponse {
		return v.BackupFileShare
	}).(FileShareResponsePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) []MigrateSqlServerSqlMIDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) SqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) StorageResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) string { return v.StorageResourceId }).(pulumi.StringOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) TargetConnectionInfo() MiSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) MiSqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(MiSqlConnectionInfoResponseOutput)
}

type ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) Elem() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse
		return ret
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) AzureApp() AzureActiveDirectoryAppResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) *AzureActiveDirectoryAppResponse {
		if v == nil {
			return nil
		}
		return &v.AzureApp
	}).(AzureActiveDirectoryAppResponsePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) *FileShareResponse {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileShareResponsePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) []MigrateSqlServerSqlMIDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) StorageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageResourceId
	}).(pulumi.StringPtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) TargetConnectionInfo() MiSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) *MiSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MiSqlConnectionInfoResponsePtrOutput)
}

type ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse struct {
	Id               string                        `pulumi:"id"`
	Name             string                        `pulumi:"name"`
	ValidationErrors []ReportableExceptionResponse `pulumi:"validationErrors"`
}





type ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput
}

type ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArgs struct {
	Id               pulumi.StringInput                    `pulumi:"id"`
	Name             pulumi.StringInput                    `pulumi:"name"`
	ValidationErrors ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput)
}





type ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput() ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput
}

type ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArray []ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseInput

func (ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArray) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput() ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArray) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput)
}

type ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput() ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse {
		return vs[0].([]ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse)[vs[1].(int)]
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput)
}

type ValidateMigrationInputSqlServerSqlMISyncTaskProperties struct {
	ClientData map[string]string                                  `pulumi:"clientData"`
	Input      *ValidateMigrationInputSqlServerSqlMISyncTaskInput `pulumi:"input"`
	TaskType   string                                             `pulumi:"taskType"`
}





type ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput() ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput
}

type ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                                     `pulumi:"clientData"`
	Input      ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                                        `pulumi:"taskType"`
}

func (ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskProperties)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput() ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput)
}

type ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskProperties)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput() ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput) Input() ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskProperties) *ValidateMigrationInputSqlServerSqlMISyncTaskInput {
		return v.Input
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse struct {
	ClientData map[string]string                                            `pulumi:"clientData"`
	Commands   []interface{}                                                `pulumi:"commands"`
	Errors     []ODataErrorResponse                                         `pulumi:"errors"`
	Input      *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse   `pulumi:"input"`
	Output     []ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse `pulumi:"output"`
	State      string                                                       `pulumi:"state"`
	TaskType   string                                                       `pulumi:"taskType"`
}





type ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput
}

type ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                                                `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                                    `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                                         `pulumi:"errors"`
	Input      ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrInput    `pulumi:"input"`
	Output     ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayInput `pulumi:"output"`
	State      pulumi.StringInput                                                   `pulumi:"state"`
	TaskType   pulumi.StringInput                                                   `pulumi:"taskType"`
}

func (ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput)
}

type ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse) map[string]string {
		return v.ClientData
	}).(pulumi.StringMapOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse) []interface{} {
		return v.Commands
	}).(pulumi.ArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse) []ODataErrorResponse {
		return v.Errors
	}).(ODataErrorResponseArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) Input() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse) *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse {
		return v.Input
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) Output() ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse) []ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse {
		return v.Output
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type ValidateMigrationInputSqlServerSqlMITaskInput struct {
	BackupBlobShare      BlobShare                            `pulumi:"backupBlobShare"`
	BackupFileShare      *FileShare                           `pulumi:"backupFileShare"`
	BackupMode           *string                              `pulumi:"backupMode"`
	SelectedDatabases    []MigrateSqlServerSqlMIDatabaseInput `pulumi:"selectedDatabases"`
	SelectedLogins       []string                             `pulumi:"selectedLogins"`
	SourceConnectionInfo SqlConnectionInfo                    `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfo                    `pulumi:"targetConnectionInfo"`
}





type ValidateMigrationInputSqlServerSqlMITaskInputInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskInputOutput() ValidateMigrationInputSqlServerSqlMITaskInputOutput
	ToValidateMigrationInputSqlServerSqlMITaskInputOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskInputOutput
}

type ValidateMigrationInputSqlServerSqlMITaskInputArgs struct {
	BackupBlobShare      BlobShareInput                               `pulumi:"backupBlobShare"`
	BackupFileShare      FileSharePtrInput                            `pulumi:"backupFileShare"`
	BackupMode           pulumi.StringPtrInput                        `pulumi:"backupMode"`
	SelectedDatabases    MigrateSqlServerSqlMIDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	SelectedLogins       pulumi.StringArrayInput                      `pulumi:"selectedLogins"`
	SourceConnectionInfo SqlConnectionInfoInput                       `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfoInput                       `pulumi:"targetConnectionInfo"`
}

func (ValidateMigrationInputSqlServerSqlMITaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskInput)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputArgs) ToValidateMigrationInputSqlServerSqlMITaskInputOutput() ValidateMigrationInputSqlServerSqlMITaskInputOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskInputOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputArgs) ToValidateMigrationInputSqlServerSqlMITaskInputOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskInputOutput)
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputArgs) ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputArgs) ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskInputOutput).ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutputWithContext(ctx)
}









type ValidateMigrationInputSqlServerSqlMITaskInputPtrInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput
	ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput
}

type validateMigrationInputSqlServerSqlMITaskInputPtrType ValidateMigrationInputSqlServerSqlMITaskInputArgs

func ValidateMigrationInputSqlServerSqlMITaskInputPtr(v *ValidateMigrationInputSqlServerSqlMITaskInputArgs) ValidateMigrationInputSqlServerSqlMITaskInputPtrInput {
	return (*validateMigrationInputSqlServerSqlMITaskInputPtrType)(v)
}

func (*validateMigrationInputSqlServerSqlMITaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMITaskInput)(nil)).Elem()
}

func (i *validateMigrationInputSqlServerSqlMITaskInputPtrType) ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutputWithContext(context.Background())
}

func (i *validateMigrationInputSqlServerSqlMITaskInputPtrType) ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput)
}

type ValidateMigrationInputSqlServerSqlMITaskInputOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskInput)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) ToValidateMigrationInputSqlServerSqlMITaskInputOutput() ValidateMigrationInputSqlServerSqlMITaskInputOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) ToValidateMigrationInputSqlServerSqlMITaskInputOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput {
	return o.ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutputWithContext(context.Background())
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ValidateMigrationInputSqlServerSqlMITaskInput) *ValidateMigrationInputSqlServerSqlMITaskInput {
		return &v
	}).(ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) BackupBlobShare() BlobShareOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInput) BlobShare { return v.BackupBlobShare }).(BlobShareOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInput) *FileShare { return v.BackupFileShare }).(FileSharePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInput) *string { return v.BackupMode }).(pulumi.StringPtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInput) []MigrateSqlServerSqlMIDatabaseInput {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInput) []string { return v.SelectedLogins }).(pulumi.StringArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

type ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMITaskInput)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) Elem() ValidateMigrationInputSqlServerSqlMITaskInputOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInput) ValidateMigrationInputSqlServerSqlMITaskInput {
		if v != nil {
			return *v
		}
		var ret ValidateMigrationInputSqlServerSqlMITaskInput
		return ret
	}).(ValidateMigrationInputSqlServerSqlMITaskInputOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) BackupBlobShare() BlobSharePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInput) *BlobShare {
		if v == nil {
			return nil
		}
		return &v.BackupBlobShare
	}).(BlobSharePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInput) *FileShare {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileSharePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInput) *string {
		if v == nil {
			return nil
		}
		return v.BackupMode
	}).(pulumi.StringPtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInput) []MigrateSqlServerSqlMIDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInput) []string {
		if v == nil {
			return nil
		}
		return v.SelectedLogins
	}).(pulumi.StringArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

type ValidateMigrationInputSqlServerSqlMITaskInputResponse struct {
	BackupBlobShare      BlobShareResponse                            `pulumi:"backupBlobShare"`
	BackupFileShare      *FileShareResponse                           `pulumi:"backupFileShare"`
	BackupMode           *string                                      `pulumi:"backupMode"`
	SelectedDatabases    []MigrateSqlServerSqlMIDatabaseInputResponse `pulumi:"selectedDatabases"`
	SelectedLogins       []string                                     `pulumi:"selectedLogins"`
	SourceConnectionInfo SqlConnectionInfoResponse                    `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfoResponse                    `pulumi:"targetConnectionInfo"`
}





type ValidateMigrationInputSqlServerSqlMITaskInputResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskInputResponseOutput() ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput
	ToValidateMigrationInputSqlServerSqlMITaskInputResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput
}

type ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs struct {
	BackupBlobShare      BlobShareResponseInput                               `pulumi:"backupBlobShare"`
	BackupFileShare      FileShareResponsePtrInput                            `pulumi:"backupFileShare"`
	BackupMode           pulumi.StringPtrInput                                `pulumi:"backupMode"`
	SelectedDatabases    MigrateSqlServerSqlMIDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	SelectedLogins       pulumi.StringArrayInput                              `pulumi:"selectedLogins"`
	SourceConnectionInfo SqlConnectionInfoResponseInput                       `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfoResponseInput                       `pulumi:"targetConnectionInfo"`
}

func (ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskInputResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskInputResponseOutput() ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskInputResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskInputResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput)
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput).ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx)
}









type ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput
	ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput
}

type validateMigrationInputSqlServerSqlMITaskInputResponsePtrType ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs

func ValidateMigrationInputSqlServerSqlMITaskInputResponsePtr(v *ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs) ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrInput {
	return (*validateMigrationInputSqlServerSqlMITaskInputResponsePtrType)(v)
}

func (*validateMigrationInputSqlServerSqlMITaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMITaskInputResponse)(nil)).Elem()
}

func (i *validateMigrationInputSqlServerSqlMITaskInputResponsePtrType) ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *validateMigrationInputSqlServerSqlMITaskInputResponsePtrType) ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput)
}

type ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskInputResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskInputResponseOutput() ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskInputResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput {
	return o.ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ValidateMigrationInputSqlServerSqlMITaskInputResponse) *ValidateMigrationInputSqlServerSqlMITaskInputResponse {
		return &v
	}).(ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) BackupBlobShare() BlobShareResponseOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputResponse) BlobShareResponse {
		return v.BackupBlobShare
	}).(BlobShareResponseOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputResponse) *FileShareResponse {
		return v.BackupFileShare
	}).(FileShareResponsePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputResponse) *string { return v.BackupMode }).(pulumi.StringPtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputResponse) []MigrateSqlServerSqlMIDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputResponse) []string { return v.SelectedLogins }).(pulumi.StringArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputResponse) SqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputResponse) SqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

type ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMITaskInputResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) Elem() ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputResponse) ValidateMigrationInputSqlServerSqlMITaskInputResponse {
		if v != nil {
			return *v
		}
		var ret ValidateMigrationInputSqlServerSqlMITaskInputResponse
		return ret
	}).(ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) BackupBlobShare() BlobShareResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputResponse) *BlobShareResponse {
		if v == nil {
			return nil
		}
		return &v.BackupBlobShare
	}).(BlobShareResponsePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputResponse) *FileShareResponse {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileShareResponsePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputResponse) *string {
		if v == nil {
			return nil
		}
		return v.BackupMode
	}).(pulumi.StringPtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputResponse) []MigrateSqlServerSqlMIDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedLogins
	}).(pulumi.StringArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

type ValidateMigrationInputSqlServerSqlMITaskOutputResponse struct {
	BackupFolderErrors           []ReportableExceptionResponse `pulumi:"backupFolderErrors"`
	BackupShareCredentialsErrors []ReportableExceptionResponse `pulumi:"backupShareCredentialsErrors"`
	BackupStorageAccountErrors   []ReportableExceptionResponse `pulumi:"backupStorageAccountErrors"`
	DatabaseBackupInfo           *DatabaseBackupInfoResponse   `pulumi:"databaseBackupInfo"`
	ExistingBackupErrors         []ReportableExceptionResponse `pulumi:"existingBackupErrors"`
	Id                           string                        `pulumi:"id"`
	Name                         string                        `pulumi:"name"`
	RestoreDatabaseNameErrors    []ReportableExceptionResponse `pulumi:"restoreDatabaseNameErrors"`
}





type ValidateMigrationInputSqlServerSqlMITaskOutputResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput() ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput
	ToValidateMigrationInputSqlServerSqlMITaskOutputResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput
}

type ValidateMigrationInputSqlServerSqlMITaskOutputResponseArgs struct {
	BackupFolderErrors           ReportableExceptionResponseArrayInput `pulumi:"backupFolderErrors"`
	BackupShareCredentialsErrors ReportableExceptionResponseArrayInput `pulumi:"backupShareCredentialsErrors"`
	BackupStorageAccountErrors   ReportableExceptionResponseArrayInput `pulumi:"backupStorageAccountErrors"`
	DatabaseBackupInfo           DatabaseBackupInfoResponsePtrInput    `pulumi:"databaseBackupInfo"`
	ExistingBackupErrors         ReportableExceptionResponseArrayInput `pulumi:"existingBackupErrors"`
	Id                           pulumi.StringInput                    `pulumi:"id"`
	Name                         pulumi.StringInput                    `pulumi:"name"`
	RestoreDatabaseNameErrors    ReportableExceptionResponseArrayInput `pulumi:"restoreDatabaseNameErrors"`
}

func (ValidateMigrationInputSqlServerSqlMITaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskOutputResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMITaskOutputResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput() ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskOutputResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskOutputResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskOutputResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput)
}





type ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput() ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput
	ToValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput
}

type ValidateMigrationInputSqlServerSqlMITaskOutputResponseArray []ValidateMigrationInputSqlServerSqlMITaskOutputResponseInput

func (ValidateMigrationInputSqlServerSqlMITaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateMigrationInputSqlServerSqlMITaskOutputResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMITaskOutputResponseArray) ToValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput() ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskOutputResponseArray) ToValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput)
}

type ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskOutputResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput() ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskOutputResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) BackupFolderErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputResponse) []ReportableExceptionResponse {
		return v.BackupFolderErrors
	}).(ReportableExceptionResponseArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) BackupShareCredentialsErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputResponse) []ReportableExceptionResponse {
		return v.BackupShareCredentialsErrors
	}).(ReportableExceptionResponseArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) BackupStorageAccountErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputResponse) []ReportableExceptionResponse {
		return v.BackupStorageAccountErrors
	}).(ReportableExceptionResponseArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) DatabaseBackupInfo() DatabaseBackupInfoResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputResponse) *DatabaseBackupInfoResponse {
		return v.DatabaseBackupInfo
	}).(DatabaseBackupInfoResponsePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) ExistingBackupErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputResponse) []ReportableExceptionResponse {
		return v.ExistingBackupErrors
	}).(ReportableExceptionResponseArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) RestoreDatabaseNameErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputResponse) []ReportableExceptionResponse {
		return v.RestoreDatabaseNameErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateMigrationInputSqlServerSqlMITaskOutputResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput) ToValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput() ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput) ToValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ValidateMigrationInputSqlServerSqlMITaskOutputResponse {
		return vs[0].([]ValidateMigrationInputSqlServerSqlMITaskOutputResponse)[vs[1].(int)]
	}).(ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput)
}

type ValidateMigrationInputSqlServerSqlMITaskProperties struct {
	ClientData map[string]string                              `pulumi:"clientData"`
	Input      *ValidateMigrationInputSqlServerSqlMITaskInput `pulumi:"input"`
	TaskType   string                                         `pulumi:"taskType"`
}





type ValidateMigrationInputSqlServerSqlMITaskPropertiesInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskPropertiesOutput() ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput
	ToValidateMigrationInputSqlServerSqlMITaskPropertiesOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput
}

type ValidateMigrationInputSqlServerSqlMITaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                                 `pulumi:"clientData"`
	Input      ValidateMigrationInputSqlServerSqlMITaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                                    `pulumi:"taskType"`
}

func (ValidateMigrationInputSqlServerSqlMITaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskProperties)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMITaskPropertiesArgs) ToValidateMigrationInputSqlServerSqlMITaskPropertiesOutput() ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskPropertiesOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskPropertiesArgs) ToValidateMigrationInputSqlServerSqlMITaskPropertiesOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput)
}

type ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskProperties)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput) ToValidateMigrationInputSqlServerSqlMITaskPropertiesOutput() ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput) ToValidateMigrationInputSqlServerSqlMITaskPropertiesOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput) Input() ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskProperties) *ValidateMigrationInputSqlServerSqlMITaskInput {
		return v.Input
	}).(ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse struct {
	ClientData map[string]string                                        `pulumi:"clientData"`
	Commands   []interface{}                                            `pulumi:"commands"`
	Errors     []ODataErrorResponse                                     `pulumi:"errors"`
	Input      *ValidateMigrationInputSqlServerSqlMITaskInputResponse   `pulumi:"input"`
	Output     []ValidateMigrationInputSqlServerSqlMITaskOutputResponse `pulumi:"output"`
	State      string                                                   `pulumi:"state"`
	TaskType   string                                                   `pulumi:"taskType"`
}





type ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput() ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput
	ToValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput
}

type ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                                            `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                                `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                                     `pulumi:"errors"`
	Input      ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrInput    `pulumi:"input"`
	Output     ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayInput `pulumi:"output"`
	State      pulumi.StringInput                                               `pulumi:"state"`
	TaskType   pulumi.StringInput                                               `pulumi:"taskType"`
}

func (ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput() ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput)
}

type ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput() ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse) map[string]string {
		return v.ClientData
	}).(pulumi.StringMapOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse) []ODataErrorResponse {
		return v.Errors
	}).(ODataErrorResponseArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) Input() ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse) *ValidateMigrationInputSqlServerSqlMITaskInputResponse {
		return v.Input
	}).(ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) Output() ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse) []ValidateMigrationInputSqlServerSqlMITaskOutputResponse {
		return v.Output
	}).(ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type ValidateMongoDbTaskProperties struct {
	ClientData map[string]string         `pulumi:"clientData"`
	Input      *MongoDbMigrationSettings `pulumi:"input"`
	TaskType   string                    `pulumi:"taskType"`
}





type ValidateMongoDbTaskPropertiesInput interface {
	pulumi.Input

	ToValidateMongoDbTaskPropertiesOutput() ValidateMongoDbTaskPropertiesOutput
	ToValidateMongoDbTaskPropertiesOutputWithContext(context.Context) ValidateMongoDbTaskPropertiesOutput
}

type ValidateMongoDbTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput            `pulumi:"clientData"`
	Input      MongoDbMigrationSettingsPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput               `pulumi:"taskType"`
}

func (ValidateMongoDbTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMongoDbTaskProperties)(nil)).Elem()
}

func (i ValidateMongoDbTaskPropertiesArgs) ToValidateMongoDbTaskPropertiesOutput() ValidateMongoDbTaskPropertiesOutput {
	return i.ToValidateMongoDbTaskPropertiesOutputWithContext(context.Background())
}

func (i ValidateMongoDbTaskPropertiesArgs) ToValidateMongoDbTaskPropertiesOutputWithContext(ctx context.Context) ValidateMongoDbTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMongoDbTaskPropertiesOutput)
}

type ValidateMongoDbTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ValidateMongoDbTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMongoDbTaskProperties)(nil)).Elem()
}

func (o ValidateMongoDbTaskPropertiesOutput) ToValidateMongoDbTaskPropertiesOutput() ValidateMongoDbTaskPropertiesOutput {
	return o
}

func (o ValidateMongoDbTaskPropertiesOutput) ToValidateMongoDbTaskPropertiesOutputWithContext(ctx context.Context) ValidateMongoDbTaskPropertiesOutput {
	return o
}

func (o ValidateMongoDbTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ValidateMongoDbTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ValidateMongoDbTaskPropertiesOutput) Input() MongoDbMigrationSettingsPtrOutput {
	return o.ApplyT(func(v ValidateMongoDbTaskProperties) *MongoDbMigrationSettings { return v.Input }).(MongoDbMigrationSettingsPtrOutput)
}

func (o ValidateMongoDbTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMongoDbTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type ValidateMongoDbTaskPropertiesResponse struct {
	ClientData map[string]string                  `pulumi:"clientData"`
	Commands   []interface{}                      `pulumi:"commands"`
	Errors     []ODataErrorResponse               `pulumi:"errors"`
	Input      *MongoDbMigrationSettingsResponse  `pulumi:"input"`
	Output     []MongoDbMigrationProgressResponse `pulumi:"output"`
	State      string                             `pulumi:"state"`
	TaskType   string                             `pulumi:"taskType"`
}





type ValidateMongoDbTaskPropertiesResponseInput interface {
	pulumi.Input

	ToValidateMongoDbTaskPropertiesResponseOutput() ValidateMongoDbTaskPropertiesResponseOutput
	ToValidateMongoDbTaskPropertiesResponseOutputWithContext(context.Context) ValidateMongoDbTaskPropertiesResponseOutput
}

type ValidateMongoDbTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                      `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                          `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput               `pulumi:"errors"`
	Input      MongoDbMigrationSettingsResponsePtrInput   `pulumi:"input"`
	Output     MongoDbMigrationProgressResponseArrayInput `pulumi:"output"`
	State      pulumi.StringInput                         `pulumi:"state"`
	TaskType   pulumi.StringInput                         `pulumi:"taskType"`
}

func (ValidateMongoDbTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMongoDbTaskPropertiesResponse)(nil)).Elem()
}

func (i ValidateMongoDbTaskPropertiesResponseArgs) ToValidateMongoDbTaskPropertiesResponseOutput() ValidateMongoDbTaskPropertiesResponseOutput {
	return i.ToValidateMongoDbTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ValidateMongoDbTaskPropertiesResponseArgs) ToValidateMongoDbTaskPropertiesResponseOutputWithContext(ctx context.Context) ValidateMongoDbTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMongoDbTaskPropertiesResponseOutput)
}

type ValidateMongoDbTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ValidateMongoDbTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMongoDbTaskPropertiesResponse)(nil)).Elem()
}

func (o ValidateMongoDbTaskPropertiesResponseOutput) ToValidateMongoDbTaskPropertiesResponseOutput() ValidateMongoDbTaskPropertiesResponseOutput {
	return o
}

func (o ValidateMongoDbTaskPropertiesResponseOutput) ToValidateMongoDbTaskPropertiesResponseOutputWithContext(ctx context.Context) ValidateMongoDbTaskPropertiesResponseOutput {
	return o
}

func (o ValidateMongoDbTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ValidateMongoDbTaskPropertiesResponse) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ValidateMongoDbTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ValidateMongoDbTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o ValidateMongoDbTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ValidateMongoDbTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

func (o ValidateMongoDbTaskPropertiesResponseOutput) Input() MongoDbMigrationSettingsResponsePtrOutput {
	return o.ApplyT(func(v ValidateMongoDbTaskPropertiesResponse) *MongoDbMigrationSettingsResponse { return v.Input }).(MongoDbMigrationSettingsResponsePtrOutput)
}

func (o ValidateMongoDbTaskPropertiesResponseOutput) Output() MongoDbMigrationProgressResponseArrayOutput {
	return o.ApplyT(func(v ValidateMongoDbTaskPropertiesResponse) []MongoDbMigrationProgressResponse { return v.Output }).(MongoDbMigrationProgressResponseArrayOutput)
}

func (o ValidateMongoDbTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMongoDbTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o ValidateMongoDbTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMongoDbTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type ValidateOracleAzureDbForPostgreSqlSyncTaskProperties struct {
	ClientData map[string]string                            `pulumi:"clientData"`
	Input      *MigrateOracleAzureDbPostgreSqlSyncTaskInput `pulumi:"input"`
	TaskType   string                                       `pulumi:"taskType"`
}





type ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesInput interface {
	pulumi.Input

	ToValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput() ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput
	ToValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(context.Context) ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput
}

type ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesArgs struct {
	ClientData pulumi.StringMapInput                               `pulumi:"clientData"`
	Input      MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrInput `pulumi:"input"`
	TaskType   pulumi.StringInput                                  `pulumi:"taskType"`
}

func (ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateOracleAzureDbForPostgreSqlSyncTaskProperties)(nil)).Elem()
}

func (i ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesArgs) ToValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput() ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return i.ToValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesArgs) ToValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput)
}

type ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateOracleAzureDbForPostgreSqlSyncTaskProperties)(nil)).Elem()
}

func (o ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput) ToValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput() ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return o
}

func (o ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput) ToValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return o
}

func (o ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ValidateOracleAzureDbForPostgreSqlSyncTaskProperties) map[string]string { return v.ClientData }).(pulumi.StringMapOutput)
}

func (o ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput) Input() MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput {
	return o.ApplyT(func(v ValidateOracleAzureDbForPostgreSqlSyncTaskProperties) *MigrateOracleAzureDbPostgreSqlSyncTaskInput {
		return v.Input
	}).(MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput)
}

func (o ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateOracleAzureDbForPostgreSqlSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

type ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse struct {
	ClientData map[string]string                                       `pulumi:"clientData"`
	Commands   []interface{}                                           `pulumi:"commands"`
	Errors     []ODataErrorResponse                                    `pulumi:"errors"`
	Input      *MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse    `pulumi:"input"`
	Output     []ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponse `pulumi:"output"`
	State      string                                                  `pulumi:"state"`
	TaskType   string                                                  `pulumi:"taskType"`
}





type ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput
	ToValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(context.Context) ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput
}

type ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs struct {
	ClientData pulumi.StringMapInput                                           `pulumi:"clientData"`
	Commands   pulumi.ArrayInput                                               `pulumi:"commands"`
	Errors     ODataErrorResponseArrayInput                                    `pulumi:"errors"`
	Input      MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrInput     `pulumi:"input"`
	Output     ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayInput `pulumi:"output"`
	State      pulumi.StringInput                                              `pulumi:"state"`
	TaskType   pulumi.StringInput                                              `pulumi:"taskType"`
}

func (ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ToValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return i.ToValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ToValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput)
}

type ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ToValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ToValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ClientData() pulumi.StringMapOutput {
	return o.ApplyT(func(v ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) map[string]string {
		return v.ClientData
	}).(pulumi.StringMapOutput)
}

func (o ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

func (o ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) []ODataErrorResponse {
		return v.Errors
	}).(ODataErrorResponseArrayOutput)
}

func (o ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Input() MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) *MigrateOracleAzureDbPostgreSqlSyncTaskInputResponse {
		return v.Input
	}).(MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput)
}

func (o ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Output() ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) []ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponse {
		return v.Output
	}).(ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutput)
}

func (o ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func (o ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

type ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponse struct {
	ValidationErrors []ReportableExceptionResponse `pulumi:"validationErrors"`
}





type ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseInput interface {
	pulumi.Input

	ToValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutput() ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutput
	ToValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutputWithContext(context.Context) ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutput
}

type ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArgs struct {
	ValidationErrors ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (i ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArgs) ToValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutput() ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutput {
	return i.ToValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutputWithContext(context.Background())
}

func (i ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArgs) ToValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutputWithContext(ctx context.Context) ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutput)
}





type ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutput() ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutput
	ToValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutputWithContext(context.Context) ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutput
}

type ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArray []ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseInput

func (ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (i ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArray) ToValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutput() ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutput {
	return i.ToValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArray) ToValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutput)
}

type ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (o ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutput) ToValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutput() ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutput {
	return o
}

func (o ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutput) ToValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutputWithContext(ctx context.Context) ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutput {
	return o
}

func (o ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (o ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutput) ToValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutput() ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutput {
	return o
}

func (o ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutput) ToValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutput {
	return o
}

func (o ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponse {
		return vs[0].([]ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponse)[vs[1].(int)]
	}).(ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutput)
}

type ValidateSyncMigrationInputSqlServerTaskInput struct {
	SelectedDatabases    []MigrateSqlServerSqlDbSyncDatabaseInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfo                        `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfo                        `pulumi:"targetConnectionInfo"`
}





type ValidateSyncMigrationInputSqlServerTaskInputInput interface {
	pulumi.Input

	ToValidateSyncMigrationInputSqlServerTaskInputOutput() ValidateSyncMigrationInputSqlServerTaskInputOutput
	ToValidateSyncMigrationInputSqlServerTaskInputOutputWithContext(context.Context) ValidateSyncMigrationInputSqlServerTaskInputOutput
}

type ValidateSyncMigrationInputSqlServerTaskInputArgs struct {
	SelectedDatabases    MigrateSqlServerSqlDbSyncDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfoInput                           `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfoInput                           `pulumi:"targetConnectionInfo"`
}

func (ValidateSyncMigrationInputSqlServerTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateSyncMigrationInputSqlServerTaskInput)(nil)).Elem()
}

func (i ValidateSyncMigrationInputSqlServerTaskInputArgs) ToValidateSyncMigrationInputSqlServerTaskInputOutput() ValidateSyncMigrationInputSqlServerTaskInputOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskInputOutputWithContext(context.Background())
}

func (i ValidateSyncMigrationInputSqlServerTaskInputArgs) ToValidateSyncMigrationInputSqlServerTaskInputOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskInputOutput)
}

func (i ValidateSyncMigrationInputSqlServerTaskInputArgs) ToValidateSyncMigrationInputSqlServerTaskInputPtrOutput() ValidateSyncMigrationInputSqlServerTaskInputPtrOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskInputPtrOutputWithContext(context.Background())
}

func (i ValidateSyncMigrationInputSqlServerTaskInputArgs) ToValidateSyncMigrationInputSqlServerTaskInputPtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskInputOutput).ToValidateSyncMigrationInputSqlServerTaskInputPtrOutputWithContext(ctx)
}









type ValidateSyncMigrationInputSqlServerTaskInputPtrInput interface {
	pulumi.Input

	ToValidateSyncMigrationInputSqlServerTaskInputPtrOutput() ValidateSyncMigrationInputSqlServerTaskInputPtrOutput
	ToValidateSyncMigrationInputSqlServerTaskInputPtrOutputWithContext(context.Context) ValidateSyncMigrationInputSqlServerTaskInputPtrOutput
}

type validateSyncMigrationInputSqlServerTaskInputPtrType ValidateSyncMigrationInputSqlServerTaskInputArgs

func ValidateSyncMigrationInputSqlServerTaskInputPtr(v *ValidateSyncMigrationInputSqlServerTaskInputArgs) ValidateSyncMigrationInputSqlServerTaskInputPtrInput {
	return (*validateSyncMigrationInputSqlServerTaskInputPtrType)(v)
}

func (*validateSyncMigrationInputSqlServerTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateSyncMigrationInputSqlServerTaskInput)(nil)).Elem()
}

func (i *validateSyncMigrationInputSqlServerTaskInputPtrType) ToValidateSyncMigrationInputSqlServerTaskInputPtrOutput() ValidateSyncMigrationInputSqlServerTaskInputPtrOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskInputPtrOutputWithContext(context.Background())
}

func (i *validateSyncMigrationInputSqlServerTaskInputPtrType) ToValidateSyncMigrationInputSqlServerTaskInputPtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskInputPtrOutput)
}

type ValidateSyncMigrationInputSqlServerTaskInputOutput struct{ *pulumi.OutputState }

func (ValidateSyncMigrationInputSqlServerTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateSyncMigrationInputSqlServerTaskInput)(nil)).Elem()
}

func (o ValidateSyncMigrationInputSqlServerTaskInputOutput) ToValidateSyncMigrationInputSqlServerTaskInputOutput() ValidateSyncMigrationInputSqlServerTaskInputOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputOutput) ToValidateSyncMigrationInputSqlServerTaskInputOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputOutput) ToValidateSyncMigrationInputSqlServerTaskInputPtrOutput() ValidateSyncMigrationInputSqlServerTaskInputPtrOutput {
	return o.ToValidateSyncMigrationInputSqlServerTaskInputPtrOutputWithContext(context.Background())
}

func (o ValidateSyncMigrationInputSqlServerTaskInputOutput) ToValidateSyncMigrationInputSqlServerTaskInputPtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ValidateSyncMigrationInputSqlServerTaskInput) *ValidateSyncMigrationInputSqlServerTaskInput {
		return &v
	}).(ValidateSyncMigrationInputSqlServerTaskInputPtrOutput)
}

func (o ValidateSyncMigrationInputSqlServerTaskInputOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskInput) []MigrateSqlServerSqlDbSyncDatabaseInput {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput)
}

func (o ValidateSyncMigrationInputSqlServerTaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

func (o ValidateSyncMigrationInputSqlServerTaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

type ValidateSyncMigrationInputSqlServerTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ValidateSyncMigrationInputSqlServerTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateSyncMigrationInputSqlServerTaskInput)(nil)).Elem()
}

func (o ValidateSyncMigrationInputSqlServerTaskInputPtrOutput) ToValidateSyncMigrationInputSqlServerTaskInputPtrOutput() ValidateSyncMigrationInputSqlServerTaskInputPtrOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputPtrOutput) ToValidateSyncMigrationInputSqlServerTaskInputPtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputPtrOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputPtrOutput) Elem() ValidateSyncMigrationInputSqlServerTaskInputOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInput) ValidateSyncMigrationInputSqlServerTaskInput {
		if v != nil {
			return *v
		}
		var ret ValidateSyncMigrationInputSqlServerTaskInput
		return ret
	}).(ValidateSyncMigrationInputSqlServerTaskInputOutput)
}

func (o ValidateSyncMigrationInputSqlServerTaskInputPtrOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInput) []MigrateSqlServerSqlDbSyncDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput)
}

func (o ValidateSyncMigrationInputSqlServerTaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

func (o ValidateSyncMigrationInputSqlServerTaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

type ValidateSyncMigrationInputSqlServerTaskInputResponse struct {
	SelectedDatabases    []MigrateSqlServerSqlDbSyncDatabaseInputResponse `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfoResponse                        `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfoResponse                        `pulumi:"targetConnectionInfo"`
}





type ValidateSyncMigrationInputSqlServerTaskInputResponseInput interface {
	pulumi.Input

	ToValidateSyncMigrationInputSqlServerTaskInputResponseOutput() ValidateSyncMigrationInputSqlServerTaskInputResponseOutput
	ToValidateSyncMigrationInputSqlServerTaskInputResponseOutputWithContext(context.Context) ValidateSyncMigrationInputSqlServerTaskInputResponseOutput
}

type ValidateSyncMigrationInputSqlServerTaskInputResponseArgs struct {
	SelectedDatabases    MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	SourceConnectionInfo SqlConnectionInfoResponseInput                           `pulumi:"sourceConnectionInfo"`
	TargetConnectionInfo SqlConnectionInfoResponseInput                           `pulumi:"targetConnectionInfo"`
}

func (ValidateSyncMigrationInputSqlServerTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateSyncMigrationInputSqlServerTaskInputResponse)(nil)).Elem()
}

func (i ValidateSyncMigrationInputSqlServerTaskInputResponseArgs) ToValidateSyncMigrationInputSqlServerTaskInputResponseOutput() ValidateSyncMigrationInputSqlServerTaskInputResponseOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskInputResponseOutputWithContext(context.Background())
}

func (i ValidateSyncMigrationInputSqlServerTaskInputResponseArgs) ToValidateSyncMigrationInputSqlServerTaskInputResponseOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskInputResponseOutput)
}

func (i ValidateSyncMigrationInputSqlServerTaskInputResponseArgs) ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput() ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ValidateSyncMigrationInputSqlServerTaskInputResponseArgs) ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskInputResponseOutput).ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutputWithContext(ctx)
}









type ValidateSyncMigrationInputSqlServerTaskInputResponsePtrInput interface {
	pulumi.Input

	ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput() ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput
	ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutputWithContext(context.Context) ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput
}

type validateSyncMigrationInputSqlServerTaskInputResponsePtrType ValidateSyncMigrationInputSqlServerTaskInputResponseArgs

func ValidateSyncMigrationInputSqlServerTaskInputResponsePtr(v *ValidateSyncMigrationInputSqlServerTaskInputResponseArgs) ValidateSyncMigrationInputSqlServerTaskInputResponsePtrInput {
	return (*validateSyncMigrationInputSqlServerTaskInputResponsePtrType)(v)
}

func (*validateSyncMigrationInputSqlServerTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateSyncMigrationInputSqlServerTaskInputResponse)(nil)).Elem()
}

func (i *validateSyncMigrationInputSqlServerTaskInputResponsePtrType) ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput() ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *validateSyncMigrationInputSqlServerTaskInputResponsePtrType) ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput)
}

type ValidateSyncMigrationInputSqlServerTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ValidateSyncMigrationInputSqlServerTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateSyncMigrationInputSqlServerTaskInputResponse)(nil)).Elem()
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponseOutput) ToValidateSyncMigrationInputSqlServerTaskInputResponseOutput() ValidateSyncMigrationInputSqlServerTaskInputResponseOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponseOutput) ToValidateSyncMigrationInputSqlServerTaskInputResponseOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputResponseOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponseOutput) ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput() ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput {
	return o.ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponseOutput) ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ValidateSyncMigrationInputSqlServerTaskInputResponse) *ValidateSyncMigrationInputSqlServerTaskInputResponse {
		return &v
	}).(ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput)
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponseOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskInputResponse) []MigrateSqlServerSqlDbSyncDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput)
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskInputResponse) SqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskInputResponse) SqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

type ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateSyncMigrationInputSqlServerTaskInputResponse)(nil)).Elem()
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput) ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput() ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput) ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput) Elem() ValidateSyncMigrationInputSqlServerTaskInputResponseOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInputResponse) ValidateSyncMigrationInputSqlServerTaskInputResponse {
		if v != nil {
			return *v
		}
		var ret ValidateSyncMigrationInputSqlServerTaskInputResponse
		return ret
	}).(ValidateSyncMigrationInputSqlServerTaskInputResponseOutput)
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInputResponse) []MigrateSqlServerSqlDbSyncDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput)
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

type ValidateSyncMigrationInputSqlServerTaskOutputResponse struct {
	Id               string                        `pulumi:"id"`
	Name             string                        `pulumi:"name"`
	ValidationErrors []ReportableExceptionResponse `pulumi:"validationErrors"`
}





type ValidateSyncMigrationInputSqlServerTaskOutputResponseInput interface {
	pulumi.Input

	ToValidateSyncMigrationInputSqlServerTaskOutputResponseOutput() ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput
	ToValidateSyncMigrationInputSqlServerTaskOutputResponseOutputWithContext(context.Context) ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput
}

type ValidateSyncMigrationInputSqlServerTaskOutputResponseArgs struct {
	Id               pulumi.StringInput                    `pulumi:"id"`
	Name             pulumi.StringInput                    `pulumi:"name"`
	ValidationErrors ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ValidateSyncMigrationInputSqlServerTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateSyncMigrationInputSqlServerTaskOutputResponse)(nil)).Elem()
}

func (i ValidateSyncMigrationInputSqlServerTaskOutputResponseArgs) ToValidateSyncMigrationInputSqlServerTaskOutputResponseOutput() ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskOutputResponseOutputWithContext(context.Background())
}

func (i ValidateSyncMigrationInputSqlServerTaskOutputResponseArgs) ToValidateSyncMigrationInputSqlServerTaskOutputResponseOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput)
}





type ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput() ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput
	ToValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutputWithContext(context.Context) ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput
}

type ValidateSyncMigrationInputSqlServerTaskOutputResponseArray []ValidateSyncMigrationInputSqlServerTaskOutputResponseInput

func (ValidateSyncMigrationInputSqlServerTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateSyncMigrationInputSqlServerTaskOutputResponse)(nil)).Elem()
}

func (i ValidateSyncMigrationInputSqlServerTaskOutputResponseArray) ToValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput() ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ValidateSyncMigrationInputSqlServerTaskOutputResponseArray) ToValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput)
}

type ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateSyncMigrationInputSqlServerTaskOutputResponse)(nil)).Elem()
}

func (o ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput) ToValidateSyncMigrationInputSqlServerTaskOutputResponseOutput() ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput) ToValidateSyncMigrationInputSqlServerTaskOutputResponseOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

func (o ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskOutputResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateSyncMigrationInputSqlServerTaskOutputResponse)(nil)).Elem()
}

func (o ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput) ToValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput() ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput) ToValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ValidateSyncMigrationInputSqlServerTaskOutputResponse {
		return vs[0].([]ValidateSyncMigrationInputSqlServerTaskOutputResponse)[vs[1].(int)]
	}).(ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput)
}

type DatabaseTableResponseArrayMap map[string]DatabaseTableResponseArrayInput

func (DatabaseTableResponseArrayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseTableResponseArray)(nil)).Elem()
}

func (i DatabaseTableResponseArrayMap) ToDatabaseTableResponseArrayMapOutput() DatabaseTableResponseArrayMapOutput {
	return i.ToDatabaseTableResponseArrayMapOutputWithContext(context.Background())
}

func (i DatabaseTableResponseArrayMap) ToDatabaseTableResponseArrayMapOutputWithContext(ctx context.Context) DatabaseTableResponseArrayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseTableResponseArrayMapOutput)
}

type DatabaseTableResponseArrayMapOutput struct{ *pulumi.OutputState }

func (DatabaseTableResponseArrayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseTableResponseArray)(nil)).Elem()
}

func (o DatabaseTableResponseArrayMapOutput) ToDatabaseTableResponseArrayMapOutput() DatabaseTableResponseArrayMapOutput {
	return o
}

func (o DatabaseTableResponseArrayMapOutput) ToDatabaseTableResponseArrayMapOutputWithContext(ctx context.Context) DatabaseTableResponseArrayMapOutput {
	return o
}

func (o DatabaseTableResponseArrayMapOutput) MapIndex(k pulumi.StringInput) DatabaseTableResponseArrayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DatabaseTableResponseArray {
		return vs[0].(map[string]DatabaseTableResponseArray)[vs[1].(string)]
	}).(DatabaseTableResponseArrayOutput)
}





type DatabaseTableResponseArrayMapInput interface {
	pulumi.Input

	ToDatabaseTableResponseArrayMapOutput() DatabaseTableResponseArrayMapOutput
	ToDatabaseTableResponseArrayMapOutputWithContext(context.Context) DatabaseTableResponseArrayMapOutput
}

func init() {
	pulumi.RegisterOutputType(AzureActiveDirectoryAppOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryAppPtrOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryAppResponseOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryAppResponsePtrOutput{})
	pulumi.RegisterOutputType(BackupFileInfoResponseOutput{})
	pulumi.RegisterOutputType(BackupFileInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(BackupSetInfoResponseOutput{})
	pulumi.RegisterOutputType(BackupSetInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(BlobShareOutput{})
	pulumi.RegisterOutputType(BlobSharePtrOutput{})
	pulumi.RegisterOutputType(BlobShareResponseOutput{})
	pulumi.RegisterOutputType(BlobShareResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToMongoDbTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToMongoDbTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceOracleSyncTaskInputOutput{})
	pulumi.RegisterOutputType(ConnectToSourceOracleSyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ConnectToSourceOracleSyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceOracleSyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToSourceOracleSyncTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceOracleSyncTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToSourceOracleSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToSourceOracleSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskInputOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskInputOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskInputOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputOutput{})
	pulumi.RegisterOutputType(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapOutput{})
	pulumi.RegisterOutputType(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputResponseDatabaseSchemaMapArrayOutput{})
	pulumi.RegisterOutputType(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskInputOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskInputOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskInputOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskInputPtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskInputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlSqlDbSyncTaskInputOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DataItemMigrationSummaryResultResponseOutput{})
	pulumi.RegisterOutputType(DataItemMigrationSummaryResultResponseMapOutput{})
	pulumi.RegisterOutputType(DatabaseBackupInfoResponseOutput{})
	pulumi.RegisterOutputType(DatabaseBackupInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(DatabaseFileInfoResponseOutput{})
	pulumi.RegisterOutputType(DatabaseFileInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInfoOutput{})
	pulumi.RegisterOutputType(DatabaseInfoArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInfoResponseOutput{})
	pulumi.RegisterOutputType(DatabaseInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(DatabaseSummaryResultResponseOutput{})
	pulumi.RegisterOutputType(DatabaseSummaryResultResponseMapOutput{})
	pulumi.RegisterOutputType(DatabaseTableResponseOutput{})
	pulumi.RegisterOutputType(DatabaseTableResponseArrayOutput{})
	pulumi.RegisterOutputType(FileShareOutput{})
	pulumi.RegisterOutputType(FileSharePtrOutput{})
	pulumi.RegisterOutputType(FileShareResponseOutput{})
	pulumi.RegisterOutputType(FileShareResponsePtrOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskInputOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskInputPtrOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskInputResponseOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskPropertiesOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesOracleTaskInputOutput{})
	pulumi.RegisterOutputType(GetUserTablesOracleTaskInputPtrOutput{})
	pulumi.RegisterOutputType(GetUserTablesOracleTaskInputResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesOracleTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(GetUserTablesOracleTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesOracleTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(GetUserTablesOracleTaskPropertiesOutput{})
	pulumi.RegisterOutputType(GetUserTablesOracleTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesPostgreSqlTaskInputOutput{})
	pulumi.RegisterOutputType(GetUserTablesPostgreSqlTaskInputPtrOutput{})
	pulumi.RegisterOutputType(GetUserTablesPostgreSqlTaskInputResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesPostgreSqlTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(GetUserTablesPostgreSqlTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesPostgreSqlTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(GetUserTablesPostgreSqlTaskPropertiesOutput{})
	pulumi.RegisterOutputType(GetUserTablesPostgreSqlTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskInputOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskInputOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskInputPtrOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskInputResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskPropertiesOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MiSqlConnectionInfoOutput{})
	pulumi.RegisterOutputType(MiSqlConnectionInfoPtrOutput{})
	pulumi.RegisterOutputType(MiSqlConnectionInfoResponseOutput{})
	pulumi.RegisterOutputType(MiSqlConnectionInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateMISyncCompleteCommandInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateMISyncCompleteCommandInputResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateMISyncCompleteCommandOutputResponseOutput{})
	pulumi.RegisterOutputType(MigrateMISyncCompleteCommandPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrateMongoDbTaskPropertiesOutput{})
	pulumi.RegisterOutputType(MigrateMongoDbTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskInputOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(MigrateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrateOracleAzureDbPostgreSqlSyncDatabaseInputOutput{})
	pulumi.RegisterOutputType(MigrateOracleAzureDbPostgreSqlSyncDatabaseInputArrayOutput{})
	pulumi.RegisterOutputType(MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateOracleAzureDbPostgreSqlSyncDatabaseInputResponseArrayOutput{})
	pulumi.RegisterOutputType(MigrateOracleAzureDbPostgreSqlSyncTaskInputOutput{})
	pulumi.RegisterOutputType(MigrateOracleAzureDbPostgreSqlSyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(MigrateOracleAzureDbPostgreSqlSyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateOracleAzureDbPostgreSqlSyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput{})
	pulumi.RegisterOutputType(MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateOracleAzureDbPostgreSqlSyncTaskOutputErrorResponseOutput{})
	pulumi.RegisterOutputType(MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevelResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputArrayOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInputResponseArrayOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbDatabaseInputOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbDatabaseInputArrayOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbDatabaseInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncDatabaseInputOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskInputOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskInputOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskInputPtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskOutputErrorResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskPropertiesOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMIDatabaseInputOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMIDatabaseInputArrayOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMIDatabaseInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskInputOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskInputOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskInputPtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskOutputErrorResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskPropertiesOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrateSsisTaskInputOutput{})
	pulumi.RegisterOutputType(MigrateSsisTaskInputPtrOutput{})
	pulumi.RegisterOutputType(MigrateSsisTaskInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSsisTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateSsisTaskOutputMigrationLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSsisTaskOutputProjectLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSsisTaskPropertiesOutput{})
	pulumi.RegisterOutputType(MigrateSsisTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrateSyncCompleteCommandInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSyncCompleteCommandInputResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateSyncCompleteCommandOutputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSyncCompleteCommandPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrationEligibilityInfoResponseOutput{})
	pulumi.RegisterOutputType(MigrationReportResultResponseOutput{})
	pulumi.RegisterOutputType(MigrationReportResultResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrationValidationDatabaseSummaryResultResponseOutput{})
	pulumi.RegisterOutputType(MigrationValidationDatabaseSummaryResultResponseMapOutput{})
	pulumi.RegisterOutputType(MigrationValidationOptionsOutput{})
	pulumi.RegisterOutputType(MigrationValidationOptionsPtrOutput{})
	pulumi.RegisterOutputType(MigrationValidationOptionsResponseOutput{})
	pulumi.RegisterOutputType(MigrationValidationOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrationValidationResultResponseOutput{})
	pulumi.RegisterOutputType(MigrationValidationResultResponsePtrOutput{})
	pulumi.RegisterOutputType(MongoDbClusterInfoResponseOutput{})
	pulumi.RegisterOutputType(MongoDbClusterInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(MongoDbCollectionInfoResponseOutput{})
	pulumi.RegisterOutputType(MongoDbCollectionInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(MongoDbCollectionProgressResponseOutput{})
	pulumi.RegisterOutputType(MongoDbCollectionProgressResponseMapOutput{})
	pulumi.RegisterOutputType(MongoDbCollectionSettingsOutput{})
	pulumi.RegisterOutputType(MongoDbCollectionSettingsMapOutput{})
	pulumi.RegisterOutputType(MongoDbCollectionSettingsResponseOutput{})
	pulumi.RegisterOutputType(MongoDbCollectionSettingsResponseMapOutput{})
	pulumi.RegisterOutputType(MongoDbConnectionInfoOutput{})
	pulumi.RegisterOutputType(MongoDbConnectionInfoPtrOutput{})
	pulumi.RegisterOutputType(MongoDbConnectionInfoResponseOutput{})
	pulumi.RegisterOutputType(MongoDbConnectionInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(MongoDbDatabaseInfoResponseOutput{})
	pulumi.RegisterOutputType(MongoDbDatabaseInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(MongoDbDatabaseProgressResponseOutput{})
	pulumi.RegisterOutputType(MongoDbDatabaseProgressResponseMapOutput{})
	pulumi.RegisterOutputType(MongoDbDatabaseSettingsOutput{})
	pulumi.RegisterOutputType(MongoDbDatabaseSettingsMapOutput{})
	pulumi.RegisterOutputType(MongoDbDatabaseSettingsResponseOutput{})
	pulumi.RegisterOutputType(MongoDbDatabaseSettingsResponseMapOutput{})
	pulumi.RegisterOutputType(MongoDbErrorResponseOutput{})
	pulumi.RegisterOutputType(MongoDbErrorResponseMapOutput{})
	pulumi.RegisterOutputType(MongoDbMigrationProgressResponseOutput{})
	pulumi.RegisterOutputType(MongoDbMigrationProgressResponseArrayOutput{})
	pulumi.RegisterOutputType(MongoDbMigrationSettingsOutput{})
	pulumi.RegisterOutputType(MongoDbMigrationSettingsPtrOutput{})
	pulumi.RegisterOutputType(MongoDbMigrationSettingsResponseOutput{})
	pulumi.RegisterOutputType(MongoDbMigrationSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(MongoDbShardKeyFieldOutput{})
	pulumi.RegisterOutputType(MongoDbShardKeyFieldArrayOutput{})
	pulumi.RegisterOutputType(MongoDbShardKeyFieldResponseOutput{})
	pulumi.RegisterOutputType(MongoDbShardKeyFieldResponseArrayOutput{})
	pulumi.RegisterOutputType(MongoDbShardKeyInfoResponseOutput{})
	pulumi.RegisterOutputType(MongoDbShardKeyInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(MongoDbShardKeySettingOutput{})
	pulumi.RegisterOutputType(MongoDbShardKeySettingPtrOutput{})
	pulumi.RegisterOutputType(MongoDbShardKeySettingResponseOutput{})
	pulumi.RegisterOutputType(MongoDbShardKeySettingResponsePtrOutput{})
	pulumi.RegisterOutputType(MongoDbThrottlingSettingsOutput{})
	pulumi.RegisterOutputType(MongoDbThrottlingSettingsPtrOutput{})
	pulumi.RegisterOutputType(MongoDbThrottlingSettingsResponseOutput{})
	pulumi.RegisterOutputType(MongoDbThrottlingSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(MySqlConnectionInfoOutput{})
	pulumi.RegisterOutputType(MySqlConnectionInfoPtrOutput{})
	pulumi.RegisterOutputType(MySqlConnectionInfoResponseOutput{})
	pulumi.RegisterOutputType(MySqlConnectionInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(ODataErrorResponseOutput{})
	pulumi.RegisterOutputType(ODataErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(OracleConnectionInfoOutput{})
	pulumi.RegisterOutputType(OracleConnectionInfoPtrOutput{})
	pulumi.RegisterOutputType(OracleConnectionInfoResponseOutput{})
	pulumi.RegisterOutputType(OracleConnectionInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(OrphanedUserInfoResponseOutput{})
	pulumi.RegisterOutputType(OrphanedUserInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(PostgreSqlConnectionInfoOutput{})
	pulumi.RegisterOutputType(PostgreSqlConnectionInfoPtrOutput{})
	pulumi.RegisterOutputType(PostgreSqlConnectionInfoResponseOutput{})
	pulumi.RegisterOutputType(PostgreSqlConnectionInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(ProjectFilePropertiesOutput{})
	pulumi.RegisterOutputType(ProjectFilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ProjectFilePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ProjectFilePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ReportableExceptionResponseOutput{})
	pulumi.RegisterOutputType(ReportableExceptionResponseArrayOutput{})
	pulumi.RegisterOutputType(SelectedCertificateInputOutput{})
	pulumi.RegisterOutputType(SelectedCertificateInputArrayOutput{})
	pulumi.RegisterOutputType(SelectedCertificateInputResponseOutput{})
	pulumi.RegisterOutputType(SelectedCertificateInputResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceSkuOutput{})
	pulumi.RegisterOutputType(ServiceSkuPtrOutput{})
	pulumi.RegisterOutputType(ServiceSkuResponseOutput{})
	pulumi.RegisterOutputType(ServiceSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SqlConnectionInfoOutput{})
	pulumi.RegisterOutputType(SqlConnectionInfoPtrOutput{})
	pulumi.RegisterOutputType(SqlConnectionInfoResponseOutput{})
	pulumi.RegisterOutputType(SqlConnectionInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(SsisMigrationInfoOutput{})
	pulumi.RegisterOutputType(SsisMigrationInfoPtrOutput{})
	pulumi.RegisterOutputType(SsisMigrationInfoResponseOutput{})
	pulumi.RegisterOutputType(SsisMigrationInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(StartMigrationScenarioServerRoleResultResponseOutput{})
	pulumi.RegisterOutputType(StartMigrationScenarioServerRoleResultResponseMapOutput{})
	pulumi.RegisterOutputType(SyncMigrationDatabaseErrorEventResponseOutput{})
	pulumi.RegisterOutputType(SyncMigrationDatabaseErrorEventResponseArrayOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskInputOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ValidateMongoDbTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ValidateMongoDbTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ValidateOracleAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ValidateOracleAzureDbPostgreSqlSyncTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ValidateSyncMigrationInputSqlServerTaskInputOutput{})
	pulumi.RegisterOutputType(ValidateSyncMigrationInputSqlServerTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ValidateSyncMigrationInputSqlServerTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(DatabaseTableResponseArrayMapOutput{})
}
